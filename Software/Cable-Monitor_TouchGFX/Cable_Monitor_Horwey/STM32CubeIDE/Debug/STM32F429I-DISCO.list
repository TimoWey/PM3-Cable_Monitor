
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c400  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017928  0802c5b0  0802c5b0  0003c5b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043ed8  08043ed8  00053ed8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047bd0  08047bd0  00057bd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000006c0  08047e1c  08047e1c  00057e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00084470  080484dc  080484dc  000584dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cc94c  080cc94c  000e0180  2**0
                  CONTENTS
  8 .ARM          00000008  080cc94c  080cc94c  000dc94c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cc954  080cc954  000e0180  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cc954  080cc954  000dc954  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cc968  080cc968  000dc968  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000180  20000000  080cc96c  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001436c  20000180  080ccaec  000e0180  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200144ec  080ccaec  000e44ec  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0180  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e01b0  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009da10  00000000  00000000  000e02e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0017dcf2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002886d5  00000000  00000000  0017dd85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00032df9  00000000  00000000  0040645a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004898  00000000  00000000  00439258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00121eaa  00000000  00000000  0043daf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 000085ce  00000000  00000000  0055f99a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00033846  00000000  00000000  00567f68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003cb04  00000000  00000000  0059b7ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d540  00000000  00000000  005d82b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  005e57f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  005e8b6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000180 	.word	0x20000180
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802c598 	.word	0x0802c598

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000184 	.word	0x20000184
 80001ec:	0802c598 	.word	0x0802c598

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f94b 	bl	8009910 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fa11 	bl	802baa0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa41 	bl	8000b04 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cc96c 	.word	0x080cc96c
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000180 	.word	0x20000180
  ldr  r2, =_sbss
 8000694:	20000180 	.word	0x20000180
  ldr  r3, = _ebss
 8000698:	200144ec 	.word	0x200144ec

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 fa51 	bl	8009c8c <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 fabb 	bl	8009d88 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f98a 	bl	8009b48 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 fa46 	bl	8009cc8 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 fa38 	bl	8009cb4 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	2000019c 	.word	0x2000019c

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fdd5 	bl	8001428 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fdc1 	bl	8001424 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 fefc 	bl	80296f0 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f028 ff78 	bl	80297f8 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fbe1 	bl	802a0d4 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fd8b 	bl	800142c <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 fe71 	bl	8029620 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fd71 	bl	800142c <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c fdd6 	bl	800d524 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00c fec0 	bl	800d71c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fbc2 	bl	800a130 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fbc1 	bl	800a138 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c fdb3 	bl	800d524 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	20000024 	.word	0x20000024
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d0 	.word	0x200001d0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	20000024 	.word	0x20000024

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 ffb5 	bl	8009984 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 ff98 	bl	8009984 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <SystemClock_Config>:
{
 8000a6c:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a6e:	2400      	movs	r4, #0
{
 8000a70:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a72:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000a76:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a7a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000a7e:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a82:	4a1e      	ldr	r2, [pc, #120]	; (8000afc <SystemClock_Config+0x90>)
 8000a84:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a86:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a88:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a8a:	4b1d      	ldr	r3, [pc, #116]	; (8000b00 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a8c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000a90:	6411      	str	r1, [r2, #64]	; 0x40
 8000a92:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000a94:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000a98:	9201      	str	r2, [sp, #4]
 8000a9a:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a9c:	9402      	str	r4, [sp, #8]
 8000a9e:	681a      	ldr	r2, [r3, #0]
 8000aa0:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000aa4:	601a      	str	r2, [r3, #0]
 8000aa6:	681b      	ldr	r3, [r3, #0]
 8000aa8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000aac:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aae:	2201      	movs	r2, #1
 8000ab0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ab4:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000ab8:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000aba:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000abc:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000abe:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000ac2:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000ac6:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000aca:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000acc:	2202      	movs	r2, #2
 8000ace:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ad0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000ad2:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad6:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ad8:	f00b f968 	bl	800bdac <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000adc:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000ade:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000ae2:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000ae6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000aea:	a803      	add	r0, sp, #12
 8000aec:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000aee:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000af2:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000af4:	f00b fb72 	bl	800c1dc <HAL_RCC_ClockConfig>
}
 8000af8:	b015      	add	sp, #84	; 0x54
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	40023800 	.word	0x40023800
 8000b00:	40007000 	.word	0x40007000

08000b04 <main>:
{
 8000b04:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b08:	2400      	movs	r4, #0
{
 8000b0a:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8000b0c:	f008 ff0e 	bl	800992c <HAL_Init>
  SystemClock_Config();
 8000b10:	f7ff ffac 	bl	8000a6c <SystemClock_Config>
  gyro_disable();
 8000b14:	f7ff ff62 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b18:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8000b1c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b20:	4bbe      	ldr	r3, [pc, #760]	; (8000e1c <main+0x318>)
 8000b22:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b24:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b26:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b28:	48bd      	ldr	r0, [pc, #756]	; (8000e20 <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b2a:	4dbe      	ldr	r5, [pc, #760]	; (8000e24 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b2c:	f041 0110 	orr.w	r1, r1, #16
 8000b30:	6319      	str	r1, [r3, #48]	; 0x30
 8000b32:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b34:	f001 0110 	and.w	r1, r1, #16
 8000b38:	9100      	str	r1, [sp, #0]
 8000b3a:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b3c:	9401      	str	r4, [sp, #4]
 8000b3e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b40:	f041 0120 	orr.w	r1, r1, #32
 8000b44:	6319      	str	r1, [r3, #48]	; 0x30
 8000b46:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b48:	f001 0120 	and.w	r1, r1, #32
 8000b4c:	9101      	str	r1, [sp, #4]
 8000b4e:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b50:	9402      	str	r4, [sp, #8]
 8000b52:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b54:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b58:	6319      	str	r1, [r3, #48]	; 0x30
 8000b5a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b5c:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b60:	9102      	str	r1, [sp, #8]
 8000b62:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000b64:	9403      	str	r4, [sp, #12]
 8000b66:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b68:	f041 0104 	orr.w	r1, r1, #4
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0104 	and.w	r1, r1, #4
 8000b74:	9103      	str	r1, [sp, #12]
 8000b76:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b78:	9404      	str	r4, [sp, #16]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0101 	orr.w	r1, r1, #1
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0101 	and.w	r1, r1, #1
 8000b88:	9104      	str	r1, [sp, #16]
 8000b8a:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b8c:	9405      	str	r4, [sp, #20]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0102 	orr.w	r1, r1, #2
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0102 	and.w	r1, r1, #2
 8000b9c:	9105      	str	r1, [sp, #20]
 8000b9e:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000ba0:	9406      	str	r4, [sp, #24]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bb0:	9106      	str	r1, [sp, #24]
 8000bb2:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bb4:	9407      	str	r4, [sp, #28]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0108 	orr.w	r1, r1, #8
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bc0:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000bc4:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bc6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000bc8:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bca:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000bcc:	f009 fab0 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000bd0:	4893      	ldr	r0, [pc, #588]	; (8000e20 <main+0x31c>)
 8000bd2:	2120      	movs	r1, #32
 8000bd4:	2201      	movs	r2, #1
 8000bd6:	f009 faab 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000bda:	4893      	ldr	r0, [pc, #588]	; (8000e28 <main+0x324>)
 8000bdc:	4622      	mov	r2, r4
 8000bde:	2114      	movs	r1, #20
 8000be0:	f009 faa6 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000be4:	4891      	ldr	r0, [pc, #580]	; (8000e2c <main+0x328>)
 8000be6:	4622      	mov	r2, r4
 8000be8:	2180      	movs	r1, #128	; 0x80
 8000bea:	f009 faa1 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000bee:	4890      	ldr	r0, [pc, #576]	; (8000e30 <main+0x32c>)
 8000bf0:	4622      	mov	r2, r4
 8000bf2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000bf6:	f009 fa9b 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000bfa:	488e      	ldr	r0, [pc, #568]	; (8000e34 <main+0x330>)
 8000bfc:	4622      	mov	r2, r4
 8000bfe:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c02:	f009 fa95 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c06:	488c      	ldr	r0, [pc, #560]	; (8000e38 <main+0x334>)
 8000c08:	4622      	mov	r2, r4
 8000c0a:	2104      	movs	r1, #4
 8000c0c:	f009 fa90 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c10:	2201      	movs	r2, #1
 8000c12:	4889      	ldr	r0, [pc, #548]	; (8000e38 <main+0x334>)
 8000c14:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c18:	f009 fa8a 	bl	800a130 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c1c:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c1e:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c22:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c24:	487e      	ldr	r0, [pc, #504]	; (8000e20 <main+0x31c>)
 8000c26:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c28:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c2c:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c30:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c34:	f009 f938 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c38:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c3c:	4878      	ldr	r0, [pc, #480]	; (8000e20 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c3e:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c40:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c42:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c46:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c48:	f009 f92e 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c4c:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c4e:	4874      	ldr	r0, [pc, #464]	; (8000e20 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c50:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c52:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c54:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c56:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c5a:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c5e:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c60:	f009 f922 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c64:	4870      	ldr	r0, [pc, #448]	; (8000e28 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c66:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c6a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c6c:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c70:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c72:	f009 f919 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000c76:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c78:	486c      	ldr	r0, [pc, #432]	; (8000e2c <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000c7a:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c7c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c7e:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c86:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c88:	f009 f90e 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c8c:	4866      	ldr	r0, [pc, #408]	; (8000e28 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c8e:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c90:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c92:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c96:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c9a:	f009 f905 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000c9e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ca2:	4863      	ldr	r0, [pc, #396]	; (8000e30 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ca4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ca6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cac:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cae:	f009 f8fb 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cb2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cb6:	485f      	ldr	r0, [pc, #380]	; (8000e34 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cb8:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cba:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbc:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cc0:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cc2:	f009 f8f1 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000cc6:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cca:	485b      	ldr	r0, [pc, #364]	; (8000e38 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000ccc:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cce:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cd0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cd4:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cd6:	f009 f8e7 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000cda:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cde:	4853      	ldr	r0, [pc, #332]	; (8000e2c <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000ce0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ce2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000ce4:	230f      	movs	r3, #15
 8000ce6:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce8:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cec:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cee:	f009 f8db 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000cf2:	4622      	mov	r2, r4
 8000cf4:	2105      	movs	r1, #5
 8000cf6:	2009      	movs	r0, #9
 8000cf8:	f008 fe68 	bl	80099cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000cfc:	2009      	movs	r0, #9
 8000cfe:	f008 fea3 	bl	8009a48 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d02:	484e      	ldr	r0, [pc, #312]	; (8000e3c <main+0x338>)
 8000d04:	4b4e      	ldr	r3, [pc, #312]	; (8000e40 <main+0x33c>)
 8000d06:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d08:	f008 feac 	bl	8009a64 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d0c:	494d      	ldr	r1, [pc, #308]	; (8000e44 <main+0x340>)
 8000d0e:	4b4e      	ldr	r3, [pc, #312]	; (8000e48 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d10:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d12:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d16:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000d1a:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d1c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d20:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d24:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d28:	f009 fc68 	bl	800a5fc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d2c:	4651      	mov	r1, sl
 8000d2e:	4628      	mov	r0, r5
 8000d30:	f00a fe30 	bl	800b994 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d34:	4621      	mov	r1, r4
 8000d36:	4628      	mov	r0, r5
 8000d38:	f00a fe4c 	bl	800b9d4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d3c:	f8df c118 	ldr.w	ip, [pc, #280]	; 8000e58 <main+0x354>
  hspi5.Instance = SPI5;
 8000d40:	4842      	ldr	r0, [pc, #264]	; (8000e4c <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d42:	4d43      	ldr	r5, [pc, #268]	; (8000e50 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d44:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d46:	f44f 7382 	mov.w	r3, #260	; 0x104
 8000d4a:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d4e:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8000d52:	2318      	movs	r3, #24
 8000d54:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d58:	230a      	movs	r3, #10
 8000d5a:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d5c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d60:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d64:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000d68:	f00b fd26 	bl	800c7b8 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000d6c:	2307      	movs	r3, #7
 8000d6e:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8000d70:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d72:	4b38      	ldr	r3, [pc, #224]	; (8000e54 <main+0x350>)
 8000d74:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000d76:	2040      	movs	r0, #64	; 0x40
 8000d78:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8000d7c:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000d80:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000d84:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000d86:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000d88:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000d8c:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000d8e:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000d90:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000d94:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000d98:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000d9a:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000d9c:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 8000da0:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000da4:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 8000da6:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000da8:	f00b fc14 	bl	800c5d4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000db0:	a909      	add	r1, sp, #36	; 0x24
 8000db2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000db4:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8000db8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8000dbc:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dbe:	f00b fc2b 	bl	800c618 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dc2:	4630      	mov	r0, r6
 8000dc4:	f008 fdde 	bl	8009984 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dcc:	a909      	add	r1, sp, #36	; 0x24
 8000dce:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000dd0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dd4:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dd8:	f00b fc1e 	bl	800c618 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000ddc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000de0:	a909      	add	r1, sp, #36	; 0x24
 8000de2:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000de4:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000de8:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dec:	f00b fc14 	bl	800c618 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000df0:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000df4:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000df6:	9b08      	ldr	r3, [sp, #32]
 8000df8:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dfe:	a909      	add	r1, sp, #36	; 0x24
 8000e00:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e02:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8000e06:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e08:	f00b fc06 	bl	800c618 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e0c:	4628      	mov	r0, r5
 8000e0e:	f240 516a 	movw	r1, #1386	; 0x56a
 8000e12:	f00b fc1f 	bl	800c654 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e16:	2234      	movs	r2, #52	; 0x34
 8000e18:	e020      	b.n	8000e5c <main+0x358>
 8000e1a:	bf00      	nop
 8000e1c:	40023800 	.word	0x40023800
 8000e20:	40021000 	.word	0x40021000
 8000e24:	200001e4 	.word	0x200001e4
 8000e28:	40020800 	.word	0x40020800
 8000e2c:	40020000 	.word	0x40020000
 8000e30:	40020400 	.word	0x40020400
 8000e34:	40020c00 	.word	0x40020c00
 8000e38:	40021800 	.word	0x40021800
 8000e3c:	200001dc 	.word	0x200001dc
 8000e40:	40023000 	.word	0x40023000
 8000e44:	40005c00 	.word	0x40005c00
 8000e48:	000186a0 	.word	0x000186a0
 8000e4c:	20000314 	.word	0x20000314
 8000e50:	200002e0 	.word	0x200002e0
 8000e54:	a0000140 	.word	0xa0000140
 8000e58:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8000e5c:	4d3f      	ldr	r5, [pc, #252]	; (8000f5c <main+0x458>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e5e:	4621      	mov	r1, r4
 8000e60:	eb0d 0002 	add.w	r0, sp, r2
 8000e64:	f02a fd1d 	bl	802b8a2 <memset>
  hltdc.Instance = LTDC;
 8000e68:	4b3d      	ldr	r3, [pc, #244]	; (8000f60 <main+0x45c>)
 8000e6a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8000e6c:	2309      	movs	r3, #9
 8000e6e:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000e70:	231d      	movs	r3, #29
 8000e72:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e74:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000e78:	f240 1343 	movw	r3, #323	; 0x143
 8000e7c:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000e80:	f240 1217 	movw	r2, #279	; 0x117
 8000e84:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8000e88:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000e8a:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000e8c:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000e90:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000e92:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000e96:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 8000e9a:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8000e9e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ea2:	f00a fdbb 	bl	800ba1c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8000ea6:	23f0      	movs	r3, #240	; 0xf0
 8000ea8:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 8000eaa:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 8000eac:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000eb0:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 8000eb2:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 8000eb4:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000eb6:	a90d      	add	r1, sp, #52	; 0x34
 8000eb8:	4622      	mov	r2, r4
 8000eba:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8000ebc:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ebe:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8000ec2:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 8000ec4:	4d27      	ldr	r5, [pc, #156]	; (8000f64 <main+0x460>)
  pLayerCfg.WindowX0 = 0;
 8000ec6:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ec8:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8000ecc:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ece:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8000ed0:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 8000ed2:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 8000ed4:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000ed8:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000edc:	f00a fe74 	bl	800bbc8 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000ee0:	4b21      	ldr	r3, [pc, #132]	; (8000f68 <main+0x464>)
 8000ee2:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000ee8:	682b      	ldr	r3, [r5, #0]
 8000eea:	68db      	ldr	r3, [r3, #12]
 8000eec:	4798      	blx	r3
  MX_TouchGFX_Init();
 8000eee:	f000 fdfb 	bl	8001ae8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000ef2:	f000 fdf7 	bl	8001ae4 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8000ef6:	f7ff fd71 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8000efa:	f000 f955 	bl	80011a8 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8000efe:	f000 f987 	bl	8001210 <MEAS_timer_init>
  Flash_Write_Data(SECTOR_23_ADDR, Config_Data_PAD, 6);
 8000f02:	491a      	ldr	r1, [pc, #104]	; (8000f6c <main+0x468>)
 8000f04:	481a      	ldr	r0, [pc, #104]	; (8000f70 <main+0x46c>)
 8000f06:	2206      	movs	r2, #6
 8000f08:	f7ff fc68 	bl	80007dc <Flash_Write_Data>
  Flash_Read_Data(SECTOR_23_ADDR, Rx_Data, 6);
 8000f0c:	4919      	ldr	r1, [pc, #100]	; (8000f74 <main+0x470>)
 8000f0e:	4818      	ldr	r0, [pc, #96]	; (8000f70 <main+0x46c>)
 8000f10:	2206      	movs	r2, #6
 8000f12:	f7ff fc9d 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 8000f16:	f00c fa8d 	bl	800d434 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8000f1a:	4a17      	ldr	r2, [pc, #92]	; (8000f78 <main+0x474>)
 8000f1c:	4639      	mov	r1, r7
 8000f1e:	4650      	mov	r0, sl
 8000f20:	f00c fbc2 	bl	800d6a8 <osMessageQueueNew>
 8000f24:	4b15      	ldr	r3, [pc, #84]	; (8000f7c <main+0x478>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000f26:	4a16      	ldr	r2, [pc, #88]	; (8000f80 <main+0x47c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8000f28:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000f2a:	4621      	mov	r1, r4
 8000f2c:	4815      	ldr	r0, [pc, #84]	; (8000f84 <main+0x480>)
 8000f2e:	f00c faad 	bl	800d48c <osThreadNew>
 8000f32:	4b15      	ldr	r3, [pc, #84]	; (8000f88 <main+0x484>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000f34:	4a15      	ldr	r2, [pc, #84]	; (8000f8c <main+0x488>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000f36:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000f38:	4621      	mov	r1, r4
 8000f3a:	4815      	ldr	r0, [pc, #84]	; (8000f90 <main+0x48c>)
 8000f3c:	f00c faa6 	bl	800d48c <osThreadNew>
 8000f40:	4b14      	ldr	r3, [pc, #80]	; (8000f94 <main+0x490>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8000f42:	4a15      	ldr	r2, [pc, #84]	; (8000f98 <main+0x494>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000f44:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8000f46:	4621      	mov	r1, r4
 8000f48:	4814      	ldr	r0, [pc, #80]	; (8000f9c <main+0x498>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000f4a:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8000f4c:	f00c fa9e 	bl	800d48c <osThreadNew>
 8000f50:	4b13      	ldr	r3, [pc, #76]	; (8000fa0 <main+0x49c>)
 8000f52:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000f54:	f00c fa80 	bl	800d458 <osKernelStart>
  while (1)
 8000f58:	e7fe      	b.n	8000f58 <main+0x454>
 8000f5a:	bf00      	nop
 8000f5c:	20000238 	.word	0x20000238
 8000f60:	40016800 	.word	0x40016800
 8000f64:	200001b4 	.word	0x200001b4
 8000f68:	20000030 	.word	0x20000030
 8000f6c:	20000004 	.word	0x20000004
 8000f70:	081e0000 	.word	0x081e0000
 8000f74:	200001b8 	.word	0x200001b8
 8000f78:	0802c648 	.word	0x0802c648
 8000f7c:	200001d0 	.word	0x200001d0
 8000f80:	0802c684 	.word	0x0802c684
 8000f84:	08000971 	.word	0x08000971
 8000f88:	200001d8 	.word	0x200001d8
 8000f8c:	0802c624 	.word	0x0802c624
 8000f90:	08001af9 	.word	0x08001af9
 8000f94:	200001b0 	.word	0x200001b0
 8000f98:	0802c660 	.word	0x0802c660
 8000f9c:	0800097d 	.word	0x0800097d
 8000fa0:	200001d4 	.word	0x200001d4

08000fa4 <IOE_Init>:
 8000fa4:	4770      	bx	lr
 8000fa6:	bf00      	nop

08000fa8 <IOE_ITConfig>:
 8000fa8:	4770      	bx	lr
 8000faa:	bf00      	nop

08000fac <IOE_Write>:
{
 8000fac:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000fae:	4c09      	ldr	r4, [pc, #36]	; (8000fd4 <IOE_Write+0x28>)
{
 8000fb0:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000fb2:	6824      	ldr	r4, [r4, #0]
 8000fb4:	9402      	str	r4, [sp, #8]
{
 8000fb6:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000fb8:	2301      	movs	r3, #1
 8000fba:	f88d 4017 	strb.w	r4, [sp, #23]
 8000fbe:	f10d 0417 	add.w	r4, sp, #23
 8000fc2:	460a      	mov	r2, r1
 8000fc4:	9301      	str	r3, [sp, #4]
 8000fc6:	4601      	mov	r1, r0
 8000fc8:	9400      	str	r4, [sp, #0]
 8000fca:	4803      	ldr	r0, [pc, #12]	; (8000fd8 <IOE_Write+0x2c>)
 8000fcc:	f009 fbde 	bl	800a78c <HAL_I2C_Mem_Write>
}
 8000fd0:	b006      	add	sp, #24
 8000fd2:	bd10      	pop	{r4, pc}
 8000fd4:	2000001c 	.word	0x2000001c
 8000fd8:	200001e4 	.word	0x200001e4

08000fdc <IOE_Read>:
{
 8000fdc:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000fde:	4b0b      	ldr	r3, [pc, #44]	; (800100c <IOE_Read+0x30>)
{
 8000fe0:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000fe2:	681b      	ldr	r3, [r3, #0]
 8000fe4:	9302      	str	r3, [sp, #8]
{
 8000fe6:	4684      	mov	ip, r0
 8000fe8:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000fea:	2301      	movs	r3, #1
 8000fec:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8000ff0:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000ff2:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8000ff6:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000ffa:	4661      	mov	r1, ip
 8000ffc:	4804      	ldr	r0, [pc, #16]	; (8001010 <IOE_Read+0x34>)
 8000ffe:	f009 fcb7 	bl	800a970 <HAL_I2C_Mem_Read>
}
 8001002:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001006:	b007      	add	sp, #28
 8001008:	f85d fb04 	ldr.w	pc, [sp], #4
 800100c:	2000001c 	.word	0x2000001c
 8001010:	200001e4 	.word	0x200001e4

08001014 <IOE_ReadMultiple>:
{
 8001014:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001016:	4c09      	ldr	r4, [pc, #36]	; (800103c <IOE_ReadMultiple+0x28>)
{
 8001018:	b084      	sub	sp, #16
 800101a:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800101c:	6820      	ldr	r0, [r4, #0]
 800101e:	9002      	str	r0, [sp, #8]
 8001020:	e9cd 2300 	strd	r2, r3, [sp]
 8001024:	4806      	ldr	r0, [pc, #24]	; (8001040 <IOE_ReadMultiple+0x2c>)
 8001026:	460a      	mov	r2, r1
 8001028:	2301      	movs	r3, #1
 800102a:	4661      	mov	r1, ip
 800102c:	f009 fca0 	bl	800a970 <HAL_I2C_Mem_Read>
}
 8001030:	3800      	subs	r0, #0
 8001032:	bf18      	it	ne
 8001034:	2001      	movne	r0, #1
 8001036:	b004      	add	sp, #16
 8001038:	bd10      	pop	{r4, pc}
 800103a:	bf00      	nop
 800103c:	2000001c 	.word	0x2000001c
 8001040:	200001e4 	.word	0x200001e4

08001044 <IOE_Delay>:
 8001044:	f008 bc9e 	b.w	8009984 <HAL_Delay>

08001048 <LCD_IO_Init>:
{
 8001048:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800104a:	4806      	ldr	r0, [pc, #24]	; (8001064 <LCD_IO_Init+0x1c>)
 800104c:	2200      	movs	r2, #0
 800104e:	2104      	movs	r1, #4
 8001050:	f009 f86e 	bl	800a130 <HAL_GPIO_WritePin>
}
 8001054:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001058:	4802      	ldr	r0, [pc, #8]	; (8001064 <LCD_IO_Init+0x1c>)
 800105a:	2201      	movs	r2, #1
 800105c:	2104      	movs	r1, #4
 800105e:	f009 b867 	b.w	800a130 <HAL_GPIO_WritePin>
 8001062:	bf00      	nop
 8001064:	40020800 	.word	0x40020800

08001068 <LCD_IO_WriteData>:
{
 8001068:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800106a:	4d10      	ldr	r5, [pc, #64]	; (80010ac <LCD_IO_WriteData+0x44>)
{
 800106c:	b083      	sub	sp, #12
 800106e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001070:	2201      	movs	r2, #1
 8001072:	480f      	ldr	r0, [pc, #60]	; (80010b0 <LCD_IO_WriteData+0x48>)
 8001074:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001078:	f009 f85a 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800107c:	4628      	mov	r0, r5
 800107e:	2200      	movs	r2, #0
 8001080:	2104      	movs	r1, #4
 8001082:	f009 f855 	bl	800a130 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001086:	4b0b      	ldr	r3, [pc, #44]	; (80010b4 <LCD_IO_WriteData+0x4c>)
 8001088:	480b      	ldr	r0, [pc, #44]	; (80010b8 <LCD_IO_WriteData+0x50>)
 800108a:	681b      	ldr	r3, [r3, #0]
 800108c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001090:	f10d 0106 	add.w	r1, sp, #6
 8001094:	2201      	movs	r2, #1
 8001096:	f00b fbf1 	bl	800c87c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800109a:	2201      	movs	r2, #1
 800109c:	2104      	movs	r1, #4
 800109e:	4628      	mov	r0, r5
}
 80010a0:	b003      	add	sp, #12
 80010a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80010a6:	f009 b843 	b.w	800a130 <HAL_GPIO_WritePin>
 80010aa:	bf00      	nop
 80010ac:	40020800 	.word	0x40020800
 80010b0:	40020c00 	.word	0x40020c00
 80010b4:	20000020 	.word	0x20000020
 80010b8:	20000314 	.word	0x20000314

080010bc <LCD_IO_WriteReg>:
{
 80010bc:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80010be:	4d10      	ldr	r5, [pc, #64]	; (8001100 <LCD_IO_WriteReg+0x44>)
{
 80010c0:	b083      	sub	sp, #12
 80010c2:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80010c4:	2200      	movs	r2, #0
 80010c6:	480f      	ldr	r0, [pc, #60]	; (8001104 <LCD_IO_WriteReg+0x48>)
 80010c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80010cc:	f009 f830 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80010d0:	4628      	mov	r0, r5
 80010d2:	2200      	movs	r2, #0
 80010d4:	2104      	movs	r1, #4
 80010d6:	f009 f82b 	bl	800a130 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80010da:	4b0b      	ldr	r3, [pc, #44]	; (8001108 <LCD_IO_WriteReg+0x4c>)
 80010dc:	480b      	ldr	r0, [pc, #44]	; (800110c <LCD_IO_WriteReg+0x50>)
 80010de:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80010e0:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80010e4:	f10d 0106 	add.w	r1, sp, #6
 80010e8:	2201      	movs	r2, #1
 80010ea:	f00b fbc7 	bl	800c87c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80010ee:	2201      	movs	r2, #1
 80010f0:	2104      	movs	r1, #4
 80010f2:	4628      	mov	r0, r5
}
 80010f4:	b003      	add	sp, #12
 80010f6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80010fa:	f009 b819 	b.w	800a130 <HAL_GPIO_WritePin>
 80010fe:	bf00      	nop
 8001100:	40020800 	.word	0x40020800
 8001104:	40020c00 	.word	0x40020c00
 8001108:	20000020 	.word	0x20000020
 800110c:	20000314 	.word	0x20000314

08001110 <LCD_IO_ReadData>:
{
 8001110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001114:	4e19      	ldr	r6, [pc, #100]	; (800117c <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001116:	4f1a      	ldr	r7, [pc, #104]	; (8001180 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001118:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001184 <LCD_IO_ReadData+0x74>
 800111c:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001188 <LCD_IO_ReadData+0x78>
{
 8001120:	b083      	sub	sp, #12
 8001122:	460c      	mov	r4, r1
 8001124:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001126:	2200      	movs	r2, #0
 8001128:	4630      	mov	r0, r6
 800112a:	2104      	movs	r1, #4
 800112c:	f009 f800 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001130:	4638      	mov	r0, r7
 8001132:	2200      	movs	r2, #0
 8001134:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001138:	f008 fffa 	bl	800a130 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800113c:	f8d9 3000 	ldr.w	r3, [r9]
 8001140:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001144:	a901      	add	r1, sp, #4
 8001146:	2201      	movs	r2, #1
 8001148:	4640      	mov	r0, r8
 800114a:	f00b fb97 	bl	800c87c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800114e:	f8d9 3000 	ldr.w	r3, [r9]
 8001152:	4622      	mov	r2, r4
 8001154:	a901      	add	r1, sp, #4
 8001156:	4640      	mov	r0, r8
 8001158:	f00b fe38 	bl	800cdcc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800115c:	4638      	mov	r0, r7
 800115e:	2201      	movs	r2, #1
 8001160:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001164:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001166:	f008 ffe3 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800116a:	4630      	mov	r0, r6
 800116c:	2201      	movs	r2, #1
 800116e:	2104      	movs	r1, #4
 8001170:	f008 ffde 	bl	800a130 <HAL_GPIO_WritePin>
}
 8001174:	4620      	mov	r0, r4
 8001176:	b003      	add	sp, #12
 8001178:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800117c:	40020800 	.word	0x40020800
 8001180:	40020c00 	.word	0x40020c00
 8001184:	20000020 	.word	0x20000020
 8001188:	20000314 	.word	0x20000314

0800118c <LCD_Delay>:
  HAL_Delay(Delay);
 800118c:	f008 bbfa 	b.w	8009984 <HAL_Delay>

08001190 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001190:	4b03      	ldr	r3, [pc, #12]	; (80011a0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001192:	6802      	ldr	r2, [r0, #0]
 8001194:	429a      	cmp	r2, r3
 8001196:	d000      	beq.n	800119a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001198:	4770      	bx	lr
    HAL_IncTick();
 800119a:	f008 bbe1 	b.w	8009960 <HAL_IncTick>
 800119e:	bf00      	nop
 80011a0:	40001000 	.word	0x40001000

080011a4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80011a4:	4770      	bx	lr
 80011a6:	bf00      	nop

080011a8 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80011a8:	b410      	push	{r4}
 80011aa:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80011ac:	4b15      	ldr	r3, [pc, #84]	; (8001204 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80011ae:	4916      	ldr	r1, [pc, #88]	; (8001208 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80011b0:	2400      	movs	r4, #0
 80011b2:	9400      	str	r4, [sp, #0]
 80011b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80011b6:	f042 0220 	orr.w	r2, r2, #32
 80011ba:	631a      	str	r2, [r3, #48]	; 0x30
 80011bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80011be:	f002 0220 	and.w	r2, r2, #32
 80011c2:	9200      	str	r2, [sp, #0]
 80011c4:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80011c6:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80011c8:	4a10      	ldr	r2, [pc, #64]	; (800120c <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80011ca:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80011ce:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80011d0:	6808      	ldr	r0, [r1, #0]
 80011d2:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80011d6:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80011d8:	9401      	str	r4, [sp, #4]
 80011da:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80011dc:	f041 0104 	orr.w	r1, r1, #4
 80011e0:	6319      	str	r1, [r3, #48]	; 0x30
 80011e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011e4:	f003 0304 	and.w	r3, r3, #4
 80011e8:	9301      	str	r3, [sp, #4]
 80011ea:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80011ec:	6813      	ldr	r3, [r2, #0]
 80011ee:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80011f2:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80011f4:	6813      	ldr	r3, [r2, #0]
 80011f6:	f043 030c 	orr.w	r3, r3, #12
 80011fa:	6013      	str	r3, [r2, #0]
}
 80011fc:	b003      	add	sp, #12
 80011fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001202:	4770      	bx	lr
 8001204:	40023800 	.word	0x40023800
 8001208:	40021400 	.word	0x40021400
 800120c:	40020800 	.word	0x40020800

08001210 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001210:	b410      	push	{r4}
 8001212:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001214:	4a0e      	ldr	r2, [pc, #56]	; (8001250 <MEAS_timer_init+0x40>)
 8001216:	2000      	movs	r0, #0
 8001218:	9001      	str	r0, [sp, #4]
 800121a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800121c:	f041 0101 	orr.w	r1, r1, #1
 8001220:	6411      	str	r1, [r2, #64]	; 0x40
 8001222:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001224:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001228:	f002 0201 	and.w	r2, r2, #1
 800122c:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800122e:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001232:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001234:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001236:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001238:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800123a:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800123c:	4905      	ldr	r1, [pc, #20]	; (8001254 <MEAS_timer_init+0x44>)
 800123e:	f042 0220 	orr.w	r2, r2, #32
 8001242:	605a      	str	r2, [r3, #4]
 8001244:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001248:	b003      	add	sp, #12
 800124a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800124e:	4770      	bx	lr
 8001250:	40023800 	.word	0x40023800
 8001254:	e000e100 	.word	0xe000e100

08001258 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001258:	b410      	push	{r4}
 800125a:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800125c:	4a36      	ldr	r2, [pc, #216]	; (8001338 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800125e:	4b37      	ldr	r3, [pc, #220]	; (800133c <MEAS_ADC3_scan_init+0xe4>)
 8001260:	4c37      	ldr	r4, [pc, #220]	; (8001340 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001262:	2100      	movs	r1, #0
 8001264:	9100      	str	r1, [sp, #0]
 8001266:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001268:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 800126c:	6450      	str	r0, [r2, #68]	; 0x44
 800126e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001270:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001274:	9000      	str	r0, [sp, #0]
 8001276:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001278:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800127a:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800127e:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001280:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001282:	f040 0004 	orr.w	r0, r0, #4
 8001286:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001288:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800128a:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800128e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001290:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001292:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001296:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001298:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800129a:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800129e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80012a0:	6858      	ldr	r0, [r3, #4]
 80012a2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80012a6:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80012a8:	6898      	ldr	r0, [r3, #8]
 80012aa:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80012ae:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80012b0:	6898      	ldr	r0, [r3, #8]
 80012b2:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80012b6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80012b8:	6898      	ldr	r0, [r3, #8]
 80012ba:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80012be:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80012c0:	9101      	str	r1, [sp, #4]
 80012c2:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80012c4:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80012c8:	6310      	str	r0, [r2, #48]	; 0x30
 80012ca:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80012cc:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80012d0:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80012d2:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80012d6:	9a01      	ldr	r2, [sp, #4]
 80012d8:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80012dc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80012de:	f022 0201 	bic.w	r2, r2, #1
 80012e2:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80012e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80012e6:	07d2      	lsls	r2, r2, #31
 80012e8:	d4fc      	bmi.n	80012e4 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80012ea:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80012ec:	4815      	ldr	r0, [pc, #84]	; (8001344 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80012ee:	4916      	ldr	r1, [pc, #88]	; (8001348 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80012f0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80012f4:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80012f6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80012f8:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80012fc:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 80012fe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001300:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001304:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001306:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001308:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800130c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800130e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001310:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001314:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001316:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001318:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800131c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800131e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001320:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001324:	f042 0210 	orr.w	r2, r2, #16
 8001328:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800132a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800132c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800132e:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001330:	b003      	add	sp, #12
 8001332:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001336:	4770      	bx	lr
 8001338:	40023800 	.word	0x40023800
 800133c:	40012200 	.word	0x40012200
 8001340:	e000e100 	.word	0xe000e100
 8001344:	4001224c 	.word	0x4001224c
 8001348:	2000036c 	.word	0x2000036c

0800134c <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 800134c:	4b1b      	ldr	r3, [pc, #108]	; (80013bc <DMA2_Stream1_IRQHandler+0x70>)
 800134e:	681a      	ldr	r2, [r3, #0]
 8001350:	0511      	lsls	r1, r2, #20
 8001352:	d400      	bmi.n	8001356 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001354:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001356:	4a1a      	ldr	r2, [pc, #104]	; (80013c0 <DMA2_Stream1_IRQHandler+0x74>)
 8001358:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 800135c:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001360:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001364:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001368:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 800136c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800136e:	f022 0201 	bic.w	r2, r2, #1
 8001372:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001374:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001376:	07d2      	lsls	r2, r2, #31
 8001378:	d4fc      	bmi.n	8001374 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800137a:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800137c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001380:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001384:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001386:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001388:	490e      	ldr	r1, [pc, #56]	; (80013c4 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800138a:	f023 0301 	bic.w	r3, r3, #1
 800138e:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001390:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001392:	4b0d      	ldr	r3, [pc, #52]	; (80013c8 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001394:	f020 0001 	bic.w	r0, r0, #1
 8001398:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800139a:	6888      	ldr	r0, [r1, #8]
 800139c:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80013a0:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80013a2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80013a4:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80013a8:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80013aa:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80013ac:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80013b0:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80013b2:	6813      	ldr	r3, [r2, #0]
 80013b4:	f023 0301 	bic.w	r3, r3, #1
 80013b8:	6013      	str	r3, [r2, #0]
}
 80013ba:	4770      	bx	lr
 80013bc:	40026400 	.word	0x40026400
 80013c0:	e000e100 	.word	0xe000e100
 80013c4:	40012200 	.word	0x40012200
 80013c8:	40023800 	.word	0x40023800

080013cc <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80013cc:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80013ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80013d2:	2100      	movs	r1, #0
 80013d4:	480f      	ldr	r0, [pc, #60]	; (8001414 <MEAS_start_measure+0x48>)
 80013d6:	f02a fa64 	bl	802b8a2 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80013da:	f7ff ff3d 	bl	8001258 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80013de:	4a0e      	ldr	r2, [pc, #56]	; (8001418 <MEAS_start_measure+0x4c>)
 80013e0:	490e      	ldr	r1, [pc, #56]	; (800141c <MEAS_start_measure+0x50>)
 80013e2:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80013e4:	480e      	ldr	r0, [pc, #56]	; (8001420 <MEAS_start_measure+0x54>)
 80013e6:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80013ea:	f043 0301 	orr.w	r3, r3, #1
 80013ee:	6293      	str	r3, [r2, #40]	; 0x28
 80013f0:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013f4:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80013f6:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80013f8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80013fc:	f043 0301 	orr.w	r3, r3, #1
 8001400:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001402:	680b      	ldr	r3, [r1, #0]
 8001404:	f043 0301 	orr.w	r3, r3, #1
 8001408:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800140a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800140c:	07db      	lsls	r3, r3, #31
 800140e:	d4fc      	bmi.n	800140a <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001410:	4800      	ldr	r0, [pc, #0]	; (8001414 <MEAS_start_measure+0x48>)
 8001412:	bd10      	pop	{r4, pc}
 8001414:	2000036c 	.word	0x2000036c
 8001418:	40026400 	.word	0x40026400
 800141c:	e000e100 	.word	0xe000e100
 8001420:	40012200 	.word	0x40012200

08001424 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001424:	2004      	movs	r0, #4
 8001426:	4770      	bx	lr

08001428 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001428:	2040      	movs	r0, #64	; 0x40
 800142a:	4770      	bx	lr

0800142c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 800142c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001430:	4770      	bx	lr
 8001432:	bf00      	nop

08001434 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001434:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001436:	4b0e      	ldr	r3, [pc, #56]	; (8001470 <HAL_MspInit+0x3c>)
 8001438:	2200      	movs	r2, #0
 800143a:	9200      	str	r2, [sp, #0]
 800143c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800143e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001442:	6459      	str	r1, [r3, #68]	; 0x44
 8001444:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001446:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800144a:	9000      	str	r0, [sp, #0]
 800144c:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800144e:	9201      	str	r2, [sp, #4]
 8001450:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001452:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001456:	6418      	str	r0, [r3, #64]	; 0x40
 8001458:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800145a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800145e:	9301      	str	r3, [sp, #4]
 8001460:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001462:	210f      	movs	r1, #15
 8001464:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001468:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800146a:	f008 baaf 	b.w	80099cc <HAL_NVIC_SetPriority>
 800146e:	bf00      	nop
 8001470:	40023800 	.word	0x40023800

08001474 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001474:	4b0b      	ldr	r3, [pc, #44]	; (80014a4 <HAL_CRC_MspInit+0x30>)
 8001476:	6802      	ldr	r2, [r0, #0]
 8001478:	429a      	cmp	r2, r3
 800147a:	d000      	beq.n	800147e <HAL_CRC_MspInit+0xa>
 800147c:	4770      	bx	lr
{
 800147e:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001480:	2200      	movs	r2, #0
 8001482:	9201      	str	r2, [sp, #4]
 8001484:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001488:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800148c:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001490:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001494:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001496:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800149a:	9301      	str	r3, [sp, #4]
 800149c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800149e:	b002      	add	sp, #8
 80014a0:	4770      	bx	lr
 80014a2:	bf00      	nop
 80014a4:	40023000 	.word	0x40023000

080014a8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80014a8:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80014ac:	4b2e      	ldr	r3, [pc, #184]	; (8001568 <HAL_I2C_MspInit+0xc0>)
 80014ae:	6802      	ldr	r2, [r0, #0]
{
 80014b0:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014b2:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80014b4:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014b6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80014ba:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80014be:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80014c0:	d002      	beq.n	80014c8 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80014c2:	b00a      	add	sp, #40	; 0x28
 80014c4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80014c8:	4d28      	ldr	r5, [pc, #160]	; (800156c <HAL_I2C_MspInit+0xc4>)
 80014ca:	9401      	str	r4, [sp, #4]
 80014cc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ce:	4828      	ldr	r0, [pc, #160]	; (8001570 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80014d0:	f043 0304 	orr.w	r3, r3, #4
 80014d4:	632b      	str	r3, [r5, #48]	; 0x30
 80014d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014d8:	f003 0304 	and.w	r3, r3, #4
 80014dc:	9301      	str	r3, [sp, #4]
 80014de:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80014e0:	9402      	str	r4, [sp, #8]
 80014e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014e4:	f043 0301 	orr.w	r3, r3, #1
 80014e8:	632b      	str	r3, [r5, #48]	; 0x30
 80014ea:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014ec:	f003 0301 	and.w	r3, r3, #1
 80014f0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80014f2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80014f6:	f04f 0801 	mov.w	r8, #1
 80014fa:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80014fe:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001500:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001502:	2312      	movs	r3, #18
 8001504:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001508:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800150c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800150e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001510:	f008 fcca 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001514:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001516:	f44f 7280 	mov.w	r2, #256	; 0x100
 800151a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800151c:	4815      	ldr	r0, [pc, #84]	; (8001574 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800151e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001520:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001524:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001528:	f008 fcbe 	bl	8009ea8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 800152c:	9403      	str	r4, [sp, #12]
 800152e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001530:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001534:	642b      	str	r3, [r5, #64]	; 0x40
 8001536:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001538:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800153c:	4622      	mov	r2, r4
 800153e:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001540:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001542:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001544:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001546:	f008 fa41 	bl	80099cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800154a:	2048      	movs	r0, #72	; 0x48
 800154c:	f008 fa7c 	bl	8009a48 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001550:	6a2b      	ldr	r3, [r5, #32]
 8001552:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001556:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001558:	6a2b      	ldr	r3, [r5, #32]
 800155a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800155e:	622b      	str	r3, [r5, #32]
}
 8001560:	b00a      	add	sp, #40	; 0x28
 8001562:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001566:	bf00      	nop
 8001568:	40005c00 	.word	0x40005c00
 800156c:	40023800 	.word	0x40023800
 8001570:	40020800 	.word	0x40020800
 8001574:	40020000 	.word	0x40020000

08001578 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001578:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800157c:	4604      	mov	r4, r0
 800157e:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001580:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001582:	2230      	movs	r2, #48	; 0x30
 8001584:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001586:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800158a:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800158e:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001590:	f02a f987 	bl	802b8a2 <memset>
  if(hltdc->Instance==LTDC)
 8001594:	4b67      	ldr	r3, [pc, #412]	; (8001734 <HAL_LTDC_MspInit+0x1bc>)
 8001596:	6822      	ldr	r2, [r4, #0]
 8001598:	429a      	cmp	r2, r3
 800159a:	d002      	beq.n	80015a2 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800159c:	b01a      	add	sp, #104	; 0x68
 800159e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80015a2:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80015a4:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80015a6:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80015a8:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80015aa:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80015ac:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80015b0:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80015b2:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80015b4:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80015b6:	f00a fee1 	bl	800c37c <HAL_RCCEx_PeriphCLKConfig>
 80015ba:	2800      	cmp	r0, #0
 80015bc:	f040 80b7 	bne.w	800172e <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80015c0:	4b5d      	ldr	r3, [pc, #372]	; (8001738 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80015c2:	485e      	ldr	r0, [pc, #376]	; (800173c <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80015c4:	2400      	movs	r4, #0
 80015c6:	9401      	str	r4, [sp, #4]
 80015c8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80015ca:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80015ce:	645a      	str	r2, [r3, #68]	; 0x44
 80015d0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80015d2:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80015d6:	9201      	str	r2, [sp, #4]
 80015d8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80015da:	9402      	str	r4, [sp, #8]
 80015dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015de:	f042 0220 	orr.w	r2, r2, #32
 80015e2:	631a      	str	r2, [r3, #48]	; 0x30
 80015e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015e6:	f002 0220 	and.w	r2, r2, #32
 80015ea:	9202      	str	r2, [sp, #8]
 80015ec:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015ee:	9403      	str	r4, [sp, #12]
 80015f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015f2:	f042 0201 	orr.w	r2, r2, #1
 80015f6:	631a      	str	r2, [r3, #48]	; 0x30
 80015f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015fa:	f002 0201 	and.w	r2, r2, #1
 80015fe:	9203      	str	r2, [sp, #12]
 8001600:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001602:	9404      	str	r4, [sp, #16]
 8001604:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001606:	f042 0202 	orr.w	r2, r2, #2
 800160a:	631a      	str	r2, [r3, #48]	; 0x30
 800160c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800160e:	f002 0202 	and.w	r2, r2, #2
 8001612:	9204      	str	r2, [sp, #16]
 8001614:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001616:	9405      	str	r4, [sp, #20]
 8001618:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800161a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800161e:	631a      	str	r2, [r3, #48]	; 0x30
 8001620:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001622:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001626:	9205      	str	r2, [sp, #20]
 8001628:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800162a:	9406      	str	r4, [sp, #24]
 800162c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800162e:	f042 0204 	orr.w	r2, r2, #4
 8001632:	631a      	str	r2, [r3, #48]	; 0x30
 8001634:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001636:	f002 0204 	and.w	r2, r2, #4
 800163a:	9206      	str	r2, [sp, #24]
 800163c:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800163e:	9407      	str	r4, [sp, #28]
 8001640:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001642:	f042 0208 	orr.w	r2, r2, #8
 8001646:	631a      	str	r2, [r3, #48]	; 0x30
 8001648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800164a:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800164e:	2600      	movs	r6, #0
 8001650:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001652:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001654:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001656:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001658:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800165c:	2302      	movs	r3, #2
 800165e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001662:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001666:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001668:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800166a:	f008 fc1d 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800166e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001670:	f641 0258 	movw	r2, #6232	; 0x1858
 8001674:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001676:	4832      	ldr	r0, [pc, #200]	; (8001740 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001678:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800167a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800167e:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001682:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001686:	f008 fc0f 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800168a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800168c:	2203      	movs	r2, #3
 800168e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001690:	482c      	ldr	r0, [pc, #176]	; (8001744 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001692:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001696:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800169a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800169e:	f008 fc03 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016a2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80016a4:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80016a8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016aa:	4826      	ldr	r0, [pc, #152]	; (8001744 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80016ac:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80016ae:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80016b2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016b6:	f008 fbf7 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016ba:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80016bc:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80016c0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016c2:	4821      	ldr	r0, [pc, #132]	; (8001748 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80016c4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80016c6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80016ca:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016ce:	f008 fbeb 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016d2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80016d4:	22c0      	movs	r2, #192	; 0xc0
 80016d6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016d8:	481c      	ldr	r0, [pc, #112]	; (800174c <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80016da:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80016dc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80016e0:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016e4:	f008 fbe0 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80016e8:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80016ea:	2208      	movs	r2, #8
 80016ec:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80016ee:	4818      	ldr	r0, [pc, #96]	; (8001750 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80016f0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80016f2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80016f6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80016fa:	f008 fbd5 	bl	8009ea8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80016fe:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001700:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001702:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001706:	4810      	ldr	r0, [pc, #64]	; (8001748 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001708:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800170c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001710:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001714:	f008 fbc8 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001718:	4622      	mov	r2, r4
 800171a:	2105      	movs	r1, #5
 800171c:	2058      	movs	r0, #88	; 0x58
 800171e:	f008 f955 	bl	80099cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001722:	2058      	movs	r0, #88	; 0x58
 8001724:	f008 f990 	bl	8009a48 <HAL_NVIC_EnableIRQ>
}
 8001728:	b01a      	add	sp, #104	; 0x68
 800172a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800172e:	f7ff fd39 	bl	80011a4 <Error_Handler>
 8001732:	e745      	b.n	80015c0 <HAL_LTDC_MspInit+0x48>
 8001734:	40016800 	.word	0x40016800
 8001738:	40023800 	.word	0x40023800
 800173c:	40021400 	.word	0x40021400
 8001740:	40020000 	.word	0x40020000
 8001744:	40020400 	.word	0x40020400
 8001748:	40021800 	.word	0x40021800
 800174c:	40020800 	.word	0x40020800
 8001750:	40020c00 	.word	0x40020c00
 8001754:	00000000 	.word	0x00000000

08001758 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001758:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800175a:	4a1b      	ldr	r2, [pc, #108]	; (80017c8 <HAL_SPI_MspInit+0x70>)
 800175c:	6801      	ldr	r1, [r0, #0]
{
 800175e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001760:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001762:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001764:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001768:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800176c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800176e:	d001      	beq.n	8001774 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001770:	b008      	add	sp, #32
 8001772:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001774:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001778:	9300      	str	r3, [sp, #0]
 800177a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800177c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001780:	6450      	str	r0, [r2, #68]	; 0x44
 8001782:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001784:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001788:	9000      	str	r0, [sp, #0]
 800178a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800178c:	9301      	str	r3, [sp, #4]
 800178e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001790:	480e      	ldr	r0, [pc, #56]	; (80017cc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001792:	f043 0320 	orr.w	r3, r3, #32
 8001796:	6313      	str	r3, [r2, #48]	; 0x30
 8001798:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800179a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80017c0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800179e:	f003 0320 	and.w	r3, r3, #32
 80017a2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80017a4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80017a6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017a8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80017aa:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80017ae:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80017b2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017b4:	f008 fb78 	bl	8009ea8 <HAL_GPIO_Init>
}
 80017b8:	b008      	add	sp, #32
 80017ba:	bd10      	pop	{r4, pc}
 80017bc:	f3af 8000 	nop.w
 80017c0:	00000380 	.word	0x00000380
 80017c4:	00000002 	.word	0x00000002
 80017c8:	40015000 	.word	0x40015000
 80017cc:	40021400 	.word	0x40021400

080017d0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80017d0:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80017d2:	4a21      	ldr	r2, [pc, #132]	; (8001858 <HAL_TIM_Base_MspInit+0x88>)
 80017d4:	6803      	ldr	r3, [r0, #0]
 80017d6:	4293      	cmp	r3, r2
{
 80017d8:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80017da:	d008      	beq.n	80017ee <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80017dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80017e0:	d023      	beq.n	800182a <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80017e2:	4a1e      	ldr	r2, [pc, #120]	; (800185c <HAL_TIM_Base_MspInit+0x8c>)
 80017e4:	4293      	cmp	r3, r2
 80017e6:	d011      	beq.n	800180c <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80017e8:	b005      	add	sp, #20
 80017ea:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80017ee:	4b1c      	ldr	r3, [pc, #112]	; (8001860 <HAL_TIM_Base_MspInit+0x90>)
 80017f0:	2200      	movs	r2, #0
 80017f2:	9201      	str	r2, [sp, #4]
 80017f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80017f6:	f042 0201 	orr.w	r2, r2, #1
 80017fa:	645a      	str	r2, [r3, #68]	; 0x44
 80017fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80017fe:	f003 0301 	and.w	r3, r3, #1
 8001802:	9301      	str	r3, [sp, #4]
 8001804:	9b01      	ldr	r3, [sp, #4]
}
 8001806:	b005      	add	sp, #20
 8001808:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 800180c:	4b14      	ldr	r3, [pc, #80]	; (8001860 <HAL_TIM_Base_MspInit+0x90>)
 800180e:	2200      	movs	r2, #0
 8001810:	9203      	str	r2, [sp, #12]
 8001812:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001814:	f042 0202 	orr.w	r2, r2, #2
 8001818:	641a      	str	r2, [r3, #64]	; 0x40
 800181a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800181c:	f003 0302 	and.w	r3, r3, #2
 8001820:	9303      	str	r3, [sp, #12]
 8001822:	9b03      	ldr	r3, [sp, #12]
}
 8001824:	b005      	add	sp, #20
 8001826:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 800182a:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800182e:	2200      	movs	r2, #0
 8001830:	9202      	str	r2, [sp, #8]
 8001832:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001834:	f041 0101 	orr.w	r1, r1, #1
 8001838:	6419      	str	r1, [r3, #64]	; 0x40
 800183a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800183c:	f003 0301 	and.w	r3, r3, #1
 8001840:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001842:	201c      	movs	r0, #28
 8001844:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001846:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001848:	f008 f8c0 	bl	80099cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800184c:	201c      	movs	r0, #28
}
 800184e:	b005      	add	sp, #20
 8001850:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001854:	f008 b8f8 	b.w	8009a48 <HAL_NVIC_EnableIRQ>
 8001858:	40010000 	.word	0x40010000
 800185c:	40000400 	.word	0x40000400
 8001860:	40023800 	.word	0x40023800

08001864 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001864:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001866:	4b2b      	ldr	r3, [pc, #172]	; (8001914 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001868:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800186a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800186c:	2200      	movs	r2, #0
 800186e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001870:	2c00      	cmp	r4, #0
 8001872:	d14c      	bne.n	800190e <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001874:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001876:	4a28      	ldr	r2, [pc, #160]	; (8001918 <HAL_SDRAM_MspInit+0xb4>)
 8001878:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800187a:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800187c:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800187e:	4827      	ldr	r0, [pc, #156]	; (800191c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001880:	433b      	orrs	r3, r7
 8001882:	6393      	str	r3, [r2, #56]	; 0x38
 8001884:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001886:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001888:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800188a:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800188c:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001890:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001892:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001894:	2302      	movs	r3, #2
 8001896:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800189a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800189e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018a0:	f008 fb02 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018a4:	481e      	ldr	r0, [pc, #120]	; (8001920 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80018a6:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018a8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018aa:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018ac:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80018b0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018b4:	f008 faf8 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80018b8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018bc:	4819      	ldr	r0, [pc, #100]	; (8001924 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80018be:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018c0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018c2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80018c6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018ca:	f008 faed 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80018ce:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80018d2:	4815      	ldr	r0, [pc, #84]	; (8001928 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80018d4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80018d6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018d8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80018dc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80018e0:	f008 fae2 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80018e4:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018e8:	4810      	ldr	r0, [pc, #64]	; (800192c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80018ea:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018ec:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018ee:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80018f2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018f6:	f008 fad7 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80018fa:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018fc:	480c      	ldr	r0, [pc, #48]	; (8001930 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018fe:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001900:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001902:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001906:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001908:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800190a:	f008 facd 	bl	8009ea8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800190e:	b009      	add	sp, #36	; 0x24
 8001910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001912:	bf00      	nop
 8001914:	2000076c 	.word	0x2000076c
 8001918:	40023800 	.word	0x40023800
 800191c:	40021400 	.word	0x40021400
 8001920:	40020800 	.word	0x40020800
 8001924:	40021800 	.word	0x40021800
 8001928:	40021000 	.word	0x40021000
 800192c:	40020c00 	.word	0x40020c00
 8001930:	40020400 	.word	0x40020400

08001934 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001934:	b570      	push	{r4, r5, r6, lr}
 8001936:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001938:	4b23      	ldr	r3, [pc, #140]	; (80019c8 <HAL_InitTick+0x94>)
 800193a:	2200      	movs	r2, #0
 800193c:	9202      	str	r2, [sp, #8]
 800193e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001940:	f042 0210 	orr.w	r2, r2, #16
 8001944:	641a      	str	r2, [r3, #64]	; 0x40
 8001946:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001948:	f003 0310 	and.w	r3, r3, #16
 800194c:	9302      	str	r3, [sp, #8]
{
 800194e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001950:	a901      	add	r1, sp, #4
 8001952:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001954:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001956:	f00a fcef 	bl	800c338 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800195a:	9b06      	ldr	r3, [sp, #24]
 800195c:	b9d3      	cbnz	r3, 8001994 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800195e:	f00a fcdb 	bl	800c318 <HAL_RCC_GetPCLK1Freq>
 8001962:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001964:	4a19      	ldr	r2, [pc, #100]	; (80019cc <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001966:	4c1a      	ldr	r4, [pc, #104]	; (80019d0 <HAL_InitTick+0x9c>)
 8001968:	491a      	ldr	r1, [pc, #104]	; (80019d4 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800196a:	fba2 2303 	umull	r2, r3, r2, r3
 800196e:	0c9b      	lsrs	r3, r3, #18
 8001970:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001972:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001974:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001978:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800197a:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800197e:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001980:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001982:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001984:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001986:	f00b fb07 	bl	800cf98 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800198a:	4606      	mov	r6, r0
 800198c:	b130      	cbz	r0, 800199c <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800198e:	4630      	mov	r0, r6
 8001990:	b008      	add	sp, #32
 8001992:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001994:	f00a fcc0 	bl	800c318 <HAL_RCC_GetPCLK1Freq>
 8001998:	0043      	lsls	r3, r0, #1
 800199a:	e7e3      	b.n	8001964 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 800199c:	4620      	mov	r0, r4
 800199e:	f00b fb89 	bl	800d0b4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80019a2:	4606      	mov	r6, r0
 80019a4:	2800      	cmp	r0, #0
 80019a6:	d1f2      	bne.n	800198e <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80019a8:	2036      	movs	r0, #54	; 0x36
 80019aa:	f008 f84d 	bl	8009a48 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80019ae:	2d0f      	cmp	r5, #15
 80019b0:	d901      	bls.n	80019b6 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80019b2:	2601      	movs	r6, #1
 80019b4:	e7eb      	b.n	800198e <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80019b6:	4632      	mov	r2, r6
 80019b8:	4629      	mov	r1, r5
 80019ba:	2036      	movs	r0, #54	; 0x36
 80019bc:	f008 f806 	bl	80099cc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80019c0:	4b05      	ldr	r3, [pc, #20]	; (80019d8 <HAL_InitTick+0xa4>)
 80019c2:	601d      	str	r5, [r3, #0]
 80019c4:	e7e3      	b.n	800198e <HAL_InitTick+0x5a>
 80019c6:	bf00      	nop
 80019c8:	40023800 	.word	0x40023800
 80019cc:	431bde83 	.word	0x431bde83
 80019d0:	20000770 	.word	0x20000770
 80019d4:	40001000 	.word	0x40001000
 80019d8:	20000098 	.word	0x20000098

080019dc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80019dc:	4770      	bx	lr
 80019de:	bf00      	nop

080019e0 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80019e0:	e7fe      	b.n	80019e0 <HardFault_Handler>
 80019e2:	bf00      	nop

080019e4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80019e4:	e7fe      	b.n	80019e4 <MemManage_Handler>
 80019e6:	bf00      	nop

080019e8 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80019e8:	e7fe      	b.n	80019e8 <BusFault_Handler>
 80019ea:	bf00      	nop

080019ec <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80019ec:	e7fe      	b.n	80019ec <UsageFault_Handler>
 80019ee:	bf00      	nop

080019f0 <DebugMon_Handler>:
 80019f0:	4770      	bx	lr
 80019f2:	bf00      	nop

080019f4 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80019f4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80019f6:	20c8      	movs	r0, #200	; 0xc8
 80019f8:	f007 ffc4 	bl	8009984 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80019fc:	4804      	ldr	r0, [pc, #16]	; (8001a10 <EXTI3_IRQHandler+0x1c>)
 80019fe:	2200      	movs	r2, #0
 8001a00:	2120      	movs	r1, #32
 8001a02:	f008 fb95 	bl	800a130 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001a06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001a0a:	2008      	movs	r0, #8
 8001a0c:	f008 bba0 	b.w	800a150 <HAL_GPIO_EXTI_IRQHandler>
 8001a10:	40021000 	.word	0x40021000

08001a14 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001a14:	4801      	ldr	r0, [pc, #4]	; (8001a1c <TIM6_DAC_IRQHandler+0x8>)
 8001a16:	f00b bb91 	b.w	800d13c <HAL_TIM_IRQHandler>
 8001a1a:	bf00      	nop
 8001a1c:	20000770 	.word	0x20000770

08001a20 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001a20:	4801      	ldr	r0, [pc, #4]	; (8001a28 <I2C3_EV_IRQHandler+0x8>)
 8001a22:	f009 baf5 	b.w	800b010 <HAL_I2C_EV_IRQHandler>
 8001a26:	bf00      	nop
 8001a28:	200001e4 	.word	0x200001e4

08001a2c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001a2c:	4801      	ldr	r0, [pc, #4]	; (8001a34 <LTDC_IRQHandler+0x8>)
 8001a2e:	f00a b869 	b.w	800bb04 <HAL_LTDC_IRQHandler>
 8001a32:	bf00      	nop
 8001a34:	20000238 	.word	0x20000238

08001a38 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001a38:	2001      	movs	r0, #1
 8001a3a:	4770      	bx	lr

08001a3c <_kill>:

int _kill(int pid, int sig)
{
 8001a3c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001a3e:	f02a f829 	bl	802ba94 <__errno>
 8001a42:	2316      	movs	r3, #22
 8001a44:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001a46:	f04f 30ff 	mov.w	r0, #4294967295
 8001a4a:	bd08      	pop	{r3, pc}

08001a4c <_exit>:

void _exit (int status)
{
 8001a4c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001a4e:	f02a f821 	bl	802ba94 <__errno>
 8001a52:	2316      	movs	r3, #22
 8001a54:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001a56:	e7fe      	b.n	8001a56 <_exit+0xa>

08001a58 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001a58:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a5a:	1e16      	subs	r6, r2, #0
 8001a5c:	dd07      	ble.n	8001a6e <_read+0x16>
 8001a5e:	460c      	mov	r4, r1
 8001a60:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001a62:	f3af 8000 	nop.w
 8001a66:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a6a:	42a5      	cmp	r5, r4
 8001a6c:	d1f9      	bne.n	8001a62 <_read+0xa>
	}

return len;
}
 8001a6e:	4630      	mov	r0, r6
 8001a70:	bd70      	pop	{r4, r5, r6, pc}
 8001a72:	bf00      	nop

08001a74 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001a74:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a76:	1e16      	subs	r6, r2, #0
 8001a78:	dd07      	ble.n	8001a8a <_write+0x16>
 8001a7a:	460c      	mov	r4, r1
 8001a7c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001a7e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001a82:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a86:	42ac      	cmp	r4, r5
 8001a88:	d1f9      	bne.n	8001a7e <_write+0xa>
	}
	return len;
}
 8001a8a:	4630      	mov	r0, r6
 8001a8c:	bd70      	pop	{r4, r5, r6, pc}
 8001a8e:	bf00      	nop

08001a90 <_close>:

int _close(int file)
{
	return -1;
}
 8001a90:	f04f 30ff 	mov.w	r0, #4294967295
 8001a94:	4770      	bx	lr
 8001a96:	bf00      	nop

08001a98 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001a98:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001a9c:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001a9e:	2000      	movs	r0, #0
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop

08001aa4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001aa4:	2001      	movs	r0, #1
 8001aa6:	4770      	bx	lr

08001aa8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001aa8:	2000      	movs	r0, #0
 8001aaa:	4770      	bx	lr

08001aac <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001aac:	4a0b      	ldr	r2, [pc, #44]	; (8001adc <_sbrk+0x30>)
{
 8001aae:	b508      	push	{r3, lr}
 8001ab0:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ab2:	6810      	ldr	r0, [r2, #0]
 8001ab4:	b128      	cbz	r0, 8001ac2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001ab6:	4403      	add	r3, r0
 8001ab8:	4669      	mov	r1, sp
 8001aba:	428b      	cmp	r3, r1
 8001abc:	d807      	bhi.n	8001ace <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001abe:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001ac0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001ac2:	4807      	ldr	r0, [pc, #28]	; (8001ae0 <_sbrk+0x34>)
 8001ac4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001ac6:	4403      	add	r3, r0
 8001ac8:	4669      	mov	r1, sp
 8001aca:	428b      	cmp	r3, r1
 8001acc:	d9f7      	bls.n	8001abe <_sbrk+0x12>
		errno = ENOMEM;
 8001ace:	f029 ffe1 	bl	802ba94 <__errno>
 8001ad2:	230c      	movs	r3, #12
 8001ad4:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001ad6:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001ada:	bd08      	pop	{r3, pc}
 8001adc:	200007b8 	.word	0x200007b8
 8001ae0:	200144f0 	.word	0x200144f0

08001ae4 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001ae4:	4770      	bx	lr
 8001ae6:	bf00      	nop

08001ae8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001ae8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001aea:	f000 fba9 	bl	8002240 <touchgfx_components_init>
  touchgfx_init();
}
 8001aee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001af2:	f000 bb33 	b.w	800215c <touchgfx_init>
 8001af6:	bf00      	nop

08001af8 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001af8:	f000 bba4 	b.w	8002244 <touchgfx_taskEntry>

08001afc <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001afc:	4770      	bx	lr

08001afe <_ZN20STM32TouchControllerD0Ev>:
 8001afe:	b510      	push	{r4, lr}
 8001b00:	2104      	movs	r1, #4
 8001b02:	4604      	mov	r4, r0
 8001b04:	f028 feb5 	bl	802a872 <_ZdlPvj>
 8001b08:	4620      	mov	r0, r4
 8001b0a:	bd10      	pop	{r4, pc}

08001b0c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001b0c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001b0e:	4b0c      	ldr	r3, [pc, #48]	; (8001b40 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001b10:	4c0c      	ldr	r4, [pc, #48]	; (8001b44 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001b12:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001b14:	4b0c      	ldr	r3, [pc, #48]	; (8001b48 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001b16:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001b18:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001b1a:	6863      	ldr	r3, [r4, #4]
 8001b1c:	4798      	blx	r3
 8001b1e:	f640 0311 	movw	r3, #2065	; 0x811
 8001b22:	4298      	cmp	r0, r3
 8001b24:	d10a      	bne.n	8001b3c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001b26:	4d09      	ldr	r5, [pc, #36]	; (8001b4c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001b28:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001b2a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001b2c:	2082      	movs	r0, #130	; 0x82
 8001b2e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001b30:	682b      	ldr	r3, [r5, #0]
 8001b32:	2082      	movs	r0, #130	; 0x82
 8001b34:	68db      	ldr	r3, [r3, #12]
 8001b36:	4798      	blx	r3
 8001b38:	2000      	movs	r0, #0
    }

    return ret;
}
 8001b3a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001b3c:	2001      	movs	r0, #1
 8001b3e:	e7fc      	b.n	8001b3a <_Z11BSP_TS_Inittt+0x2e>
 8001b40:	200007bc 	.word	0x200007bc
 8001b44:	20000068 	.word	0x20000068
 8001b48:	200007be 	.word	0x200007be
 8001b4c:	200007c0 	.word	0x200007c0

08001b50 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001b50:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001b54:	20f0      	movs	r0, #240	; 0xf0
 8001b56:	f7ff bfd9 	b.w	8001b0c <_Z11BSP_TS_Inittt>
	...

08001b5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001b5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001b5e:	4d33      	ldr	r5, [pc, #204]	; (8001c2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001b60:	682b      	ldr	r3, [r5, #0]
{
 8001b62:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001b64:	691b      	ldr	r3, [r3, #16]
 8001b66:	2082      	movs	r0, #130	; 0x82
 8001b68:	4798      	blx	r3
 8001b6a:	b280      	uxth	r0, r0
 8001b6c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001b6e:	2800      	cmp	r0, #0
 8001b70:	d04a      	beq.n	8001c08 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001b72:	682b      	ldr	r3, [r5, #0]
 8001b74:	f10d 0206 	add.w	r2, sp, #6
 8001b78:	695b      	ldr	r3, [r3, #20]
 8001b7a:	a901      	add	r1, sp, #4
 8001b7c:	2082      	movs	r0, #130	; 0x82
 8001b7e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001b80:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001b84:	f640 6274 	movw	r2, #3700	; 0xe74
 8001b88:	4293      	cmp	r3, r2
 8001b8a:	d93f      	bls.n	8001c0c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001b8c:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001b90:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001b94:	1ad2      	subs	r2, r2, r3
 8001b96:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001b98:	2a0a      	cmp	r2, #10
 8001b9a:	d93d      	bls.n	8001c18 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001b9c:	230b      	movs	r3, #11
 8001b9e:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001ba2:	4b23      	ldr	r3, [pc, #140]	; (8001c30 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001ba4:	881b      	ldrh	r3, [r3, #0]
 8001ba6:	429a      	cmp	r2, r3
 8001ba8:	d901      	bls.n	8001bae <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001baa:	3b01      	subs	r3, #1
 8001bac:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001bae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001bb2:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001bb6:	428b      	cmp	r3, r1
 8001bb8:	d830      	bhi.n	8001c1c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001bba:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001bbe:	330e      	adds	r3, #14
 8001bc0:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001bc2:	210f      	movs	r1, #15
 8001bc4:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001bc8:	491a      	ldr	r1, [pc, #104]	; (8001c34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001bca:	8809      	ldrh	r1, [r1, #0]
 8001bcc:	428b      	cmp	r3, r1
 8001bce:	d901      	bls.n	8001bd4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001bd0:	3901      	subs	r1, #1
 8001bd2:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001bd4:	4e18      	ldr	r6, [pc, #96]	; (8001c38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001bd6:	4d19      	ldr	r5, [pc, #100]	; (8001c3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001bd8:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001bda:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001bdc:	4283      	cmp	r3, r0
 8001bde:	b281      	uxth	r1, r0
 8001be0:	bf8c      	ite	hi
 8001be2:	1a59      	subhi	r1, r3, r1
 8001be4:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001be6:	b2b8      	uxth	r0, r7
 8001be8:	42ba      	cmp	r2, r7
 8001bea:	bf8c      	ite	hi
 8001bec:	1a10      	subhi	r0, r2, r0
 8001bee:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001bf0:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001bf2:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001bf4:	4401      	add	r1, r0
 8001bf6:	2905      	cmp	r1, #5
        {
            _x = x;
 8001bf8:	bfc8      	it	gt
 8001bfa:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001bfc:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001bfe:	bfc8      	it	gt
 8001c00:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001c02:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001c04:	682b      	ldr	r3, [r5, #0]
 8001c06:	80a3      	strh	r3, [r4, #4]
    }
}
 8001c08:	b003      	add	sp, #12
 8001c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001c0c:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001c0e:	bf9c      	itt	ls
 8001c10:	23b4      	movls	r3, #180	; 0xb4
 8001c12:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001c16:	e7bb      	b.n	8001b90 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001c18:	2200      	movs	r2, #0
 8001c1a:	e7c8      	b.n	8001bae <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001c1c:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001c20:	3308      	adds	r3, #8
 8001c22:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001c24:	2b0e      	cmp	r3, #14
 8001c26:	d8cc      	bhi.n	8001bc2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001c28:	2300      	movs	r3, #0
 8001c2a:	e7d3      	b.n	8001bd4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001c2c:	200007c0 	.word	0x200007c0
 8001c30:	200007be 	.word	0x200007be
 8001c34:	200007bc 	.word	0x200007bc
 8001c38:	200007c4 	.word	0x200007c4
 8001c3c:	200007c8 	.word	0x200007c8

08001c40 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001c40:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001c42:	4668      	mov	r0, sp
{
 8001c44:	460d      	mov	r5, r1
 8001c46:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001c48:	f7ff ff88 	bl	8001b5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001c4c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001c50:	b148      	cbz	r0, 8001c66 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001c52:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001c56:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001c58:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001c5c:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001c5e:	4b03      	ldr	r3, [pc, #12]	; (8001c6c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001c60:	223c      	movs	r2, #60	; 0x3c
 8001c62:	601a      	str	r2, [r3, #0]
        return true;
 8001c64:	2001      	movs	r0, #1
}
 8001c66:	b003      	add	sp, #12
 8001c68:	bd30      	pop	{r4, r5, pc}
 8001c6a:	bf00      	nop
 8001c6c:	20000024 	.word	0x20000024

08001c70 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001c70:	b110      	cbz	r0, 8001c78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001c72:	2802      	cmp	r0, #2
 8001c74:	d009      	beq.n	8001c8a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001c76:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001c78:	4b07      	ldr	r3, [pc, #28]	; (8001c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001c7a:	681a      	ldr	r2, [r3, #0]
 8001c7c:	fab2 f282 	clz	r2, r2
 8001c80:	0952      	lsrs	r2, r2, #5
 8001c82:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001c84:	4805      	ldr	r0, [pc, #20]	; (8001c9c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001c86:	f008 ba53 	b.w	800a130 <HAL_GPIO_WritePin>
 8001c8a:	4b03      	ldr	r3, [pc, #12]	; (8001c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001c8c:	689a      	ldr	r2, [r3, #8]
 8001c8e:	fab2 f282 	clz	r2, r2
 8001c92:	0952      	lsrs	r2, r2, #5
 8001c94:	2110      	movs	r1, #16
 8001c96:	e7f5      	b.n	8001c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001c98:	200007cc 	.word	0x200007cc
 8001c9c:	40021000 	.word	0x40021000

08001ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001ca0:	b110      	cbz	r0, 8001ca8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001ca2:	2802      	cmp	r0, #2
 8001ca4:	d009      	beq.n	8001cba <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001ca6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001ca8:	4b07      	ldr	r3, [pc, #28]	; (8001cc8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001caa:	681a      	ldr	r2, [r3, #0]
 8001cac:	3a00      	subs	r2, #0
 8001cae:	bf18      	it	ne
 8001cb0:	2201      	movne	r2, #1
 8001cb2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001cb4:	4805      	ldr	r0, [pc, #20]	; (8001ccc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001cb6:	f008 ba3b 	b.w	800a130 <HAL_GPIO_WritePin>
 8001cba:	4b03      	ldr	r3, [pc, #12]	; (8001cc8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001cbc:	689a      	ldr	r2, [r3, #8]
 8001cbe:	3a00      	subs	r2, #0
 8001cc0:	bf18      	it	ne
 8001cc2:	2201      	movne	r2, #1
 8001cc4:	2110      	movs	r1, #16
 8001cc6:	e7f5      	b.n	8001cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001cc8:	200007cc 	.word	0x200007cc
 8001ccc:	40021000 	.word	0x40021000

08001cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001cd0:	b110      	cbz	r0, 8001cd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001cd2:	2802      	cmp	r0, #2
 8001cd4:	d004      	beq.n	8001ce0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001cd6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001cd8:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001cda:	4802      	ldr	r0, [pc, #8]	; (8001ce4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001cdc:	f008 ba2c 	b.w	800a138 <HAL_GPIO_TogglePin>
 8001ce0:	2110      	movs	r1, #16
 8001ce2:	e7fa      	b.n	8001cda <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001ce4:	40021000 	.word	0x40021000

08001ce8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001ce8:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001cea:	b130      	cbz	r0, 8001cfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001cec:	2802      	cmp	r0, #2
 8001cee:	d009      	beq.n	8001d04 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001cf0:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001cf2:	1e43      	subs	r3, r0, #1
 8001cf4:	4258      	negs	r0, r3
 8001cf6:	4158      	adcs	r0, r3
 8001cf8:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001cfa:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001cfc:	4802      	ldr	r0, [pc, #8]	; (8001d08 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001cfe:	f008 fa11 	bl	800a124 <HAL_GPIO_ReadPin>
        break;
 8001d02:	e7f6      	b.n	8001cf2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001d04:	2110      	movs	r1, #16
 8001d06:	e7f9      	b.n	8001cfc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001d08:	40021000 	.word	0x40021000

08001d0c <_ZN8touchgfx4GPIO4initEv>:
{
 8001d0c:	b570      	push	{r4, r5, r6, lr}
 8001d0e:	4d08      	ldr	r5, [pc, #32]	; (8001d30 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001d10:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001d12:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001d14:	b2e0      	uxtb	r0, r4
 8001d16:	f7ff ffe7 	bl	8001ce8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001d1a:	b118      	cbz	r0, 8001d24 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001d1c:	682b      	ldr	r3, [r5, #0]
 8001d1e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001d20:	bf18      	it	ne
 8001d22:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001d24:	3401      	adds	r4, #1
 8001d26:	2c05      	cmp	r4, #5
 8001d28:	f105 0504 	add.w	r5, r5, #4
 8001d2c:	d1f2      	bne.n	8001d14 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001d2e:	bd70      	pop	{r4, r5, r6, pc}
 8001d30:	200007cc 	.word	0x200007cc

08001d34 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001d34:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001d36:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001d3a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001d3e:	4770      	bx	lr

08001d40 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001d40:	2000      	movs	r0, #0
 8001d42:	4770      	bx	lr

08001d44 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001d44:	4b03      	ldr	r3, [pc, #12]	; (8001d54 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001d46:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001d48:	3900      	subs	r1, #0
 8001d4a:	bf18      	it	ne
 8001d4c:	2101      	movne	r1, #1
 8001d4e:	7019      	strb	r1, [r3, #0]
    }
 8001d50:	4770      	bx	lr
 8001d52:	bf00      	nop
 8001d54:	200138b3 	.word	0x200138b3

08001d58 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001d58:	2000      	movs	r0, #0
 8001d5a:	4770      	bx	lr

08001d5c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001d5c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001d5e:	b10b      	cbz	r3, 8001d64 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001d60:	4608      	mov	r0, r1
 8001d62:	4718      	bx	r3
        }
    }
 8001d64:	4770      	bx	lr

08001d66 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001d66:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001d6a:	4770      	bx	lr

08001d6c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001d6c:	6840      	ldr	r0, [r0, #4]
 8001d6e:	6803      	ldr	r3, [r0, #0]
 8001d70:	699b      	ldr	r3, [r3, #24]
 8001d72:	4718      	bx	r3

08001d74 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001d74:	4770      	bx	lr

08001d76 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001d76:	4770      	bx	lr

08001d78 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001d78:	4770      	bx	lr
	...

08001d7c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001d7c:	b510      	push	{r4, lr}
 8001d7e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001d80:	f000 fb4c 	bl	800241c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001d84:	6823      	ldr	r3, [r4, #0]
 8001d86:	4903      	ldr	r1, [pc, #12]	; (8001d94 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001d88:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001d8c:	4620      	mov	r0, r4
}
 8001d8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001d92:	4718      	bx	r3
 8001d94:	d0000000 	.word	0xd0000000

08001d98 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001d98:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001d9a:	6803      	ldr	r3, [r0, #0]
{
 8001d9c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001d9e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001da2:	4798      	blx	r3
    enableInterrupts();
 8001da4:	6823      	ldr	r3, [r4, #0]
 8001da6:	4620      	mov	r0, r4
 8001da8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001daa:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001dac:	f000 f8ec 	bl	8001f88 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001db0:	6823      	ldr	r3, [r4, #0]
 8001db2:	4620      	mov	r0, r4
 8001db4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001db6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001db8:	2029      	movs	r0, #41	; 0x29
 8001dba:	f7ff f97f 	bl	80010bc <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001dbe:	f000 f8e3 	bl	8001f88 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001dc2:	6823      	ldr	r3, [r4, #0]
 8001dc4:	4620      	mov	r0, r4
 8001dc6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001dc8:	4798      	blx	r3
    for (;;)
 8001dca:	e7f8      	b.n	8001dbe <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001dcc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001dcc:	b510      	push	{r4, lr}
 8001dce:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001dd0:	f010 fa2c 	bl	801222c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001dd4:	6823      	ldr	r3, [r4, #0]
 8001dd6:	4620      	mov	r0, r4
 8001dd8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001ddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001de0:	4718      	bx	r3

08001de2 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001de2:	f000 bb0d 	b.w	8002400 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001de6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001de6:	f000 bb11 	b.w	800240c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001dea <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001dea:	f000 bb35 	b.w	8002458 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001dee <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001dee:	f000 badd 	b.w	80023ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001df2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001df2:	f000 bae3 	b.w	80023bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001df6 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001df6:	f000 bb3b 	b.w	8002470 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001dfa <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001dfa:	f000 bae7 	b.w	80023cc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001dfe <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001dfe:	f00f bc81 	b.w	8011704 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001e02 <_ZN11TouchGFXHALD0Ev>:
 8001e02:	b510      	push	{r4, lr}
 8001e04:	217c      	movs	r1, #124	; 0x7c
 8001e06:	4604      	mov	r4, r0
 8001e08:	f028 fd33 	bl	802a872 <_ZdlPvj>
 8001e0c:	4620      	mov	r0, r4
 8001e0e:	bd10      	pop	{r4, pc}

08001e10 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001e10:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001e14:	b11b      	cbz	r3, 8001e1e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001e16:	6840      	ldr	r0, [r0, #4]
 8001e18:	6803      	ldr	r3, [r0, #0]
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	4718      	bx	r3
    }
 8001e1e:	4618      	mov	r0, r3
 8001e20:	4770      	bx	lr
	...

08001e24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001e24:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001e26:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001e2a:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001e2e:	4b0c      	ldr	r3, [pc, #48]	; (8001e60 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001e30:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001e32:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001e34:	d009      	beq.n	8001e4a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001e36:	b93a      	cbnz	r2, 8001e48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001e38:	4a0a      	ldr	r2, [pc, #40]	; (8001e64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001e3a:	490b      	ldr	r1, [pc, #44]	; (8001e68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001e3c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001e3e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001e40:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001e42:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001e44:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001e46:	701a      	strb	r2, [r3, #0]
    }
 8001e48:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001e4a:	2a00      	cmp	r2, #0
 8001e4c:	d0fc      	beq.n	8001e48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001e4e:	4a05      	ldr	r2, [pc, #20]	; (8001e64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001e50:	4905      	ldr	r1, [pc, #20]	; (8001e68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001e52:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001e54:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001e56:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001e58:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001e5a:	2200      	movs	r2, #0
 8001e5c:	e7f3      	b.n	8001e46 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001e5e:	bf00      	nop
 8001e60:	200138ac 	.word	0x200138ac
 8001e64:	200138a8 	.word	0x200138a8
 8001e68:	200138aa 	.word	0x200138aa

08001e6c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001e6c:	b570      	push	{r4, r5, r6, lr}
 8001e6e:	460d      	mov	r5, r1
 8001e70:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001e72:	b935      	cbnz	r5, 8001e82 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001e74:	4b09      	ldr	r3, [pc, #36]	; (8001e9c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001e76:	4a0a      	ldr	r2, [pc, #40]	; (8001ea0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001e78:	480a      	ldr	r0, [pc, #40]	; (8001ea4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001e7a:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001e7e:	f029 fb0b 	bl	802b498 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001e82:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001e86:	4b08      	ldr	r3, [pc, #32]	; (8001ea8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001e88:	3a00      	subs	r2, #0
 8001e8a:	bf18      	it	ne
 8001e8c:	2201      	movne	r2, #1
 8001e8e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001e90:	6803      	ldr	r3, [r0, #0]
    }
 8001e92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001e96:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001e9a:	4718      	bx	r3
 8001e9c:	0802c6c0 	.word	0x0802c6c0
 8001ea0:	0802c6f8 	.word	0x0802c6f8
 8001ea4:	0802c746 	.word	0x0802c746
 8001ea8:	200138b2 	.word	0x200138b2

08001eac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001eac:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001eae:	4b09      	ldr	r3, [pc, #36]	; (8001ed4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001eb0:	881b      	ldrh	r3, [r3, #0]
 8001eb2:	428b      	cmp	r3, r1
 8001eb4:	d803      	bhi.n	8001ebe <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001eb6:	4b08      	ldr	r3, [pc, #32]	; (8001ed8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001eb8:	881b      	ldrh	r3, [r3, #0]
 8001eba:	4293      	cmp	r3, r2
 8001ebc:	d905      	bls.n	8001eca <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001ebe:	4b07      	ldr	r3, [pc, #28]	; (8001edc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001ec0:	4a07      	ldr	r2, [pc, #28]	; (8001ee0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001ec2:	4808      	ldr	r0, [pc, #32]	; (8001ee4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001ec4:	219e      	movs	r1, #158	; 0x9e
 8001ec6:	f029 fae7 	bl	802b498 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001eca:	4b07      	ldr	r3, [pc, #28]	; (8001ee8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001ecc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001ece:	4b07      	ldr	r3, [pc, #28]	; (8001eec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001ed0:	801a      	strh	r2, [r3, #0]
    }
 8001ed2:	bd08      	pop	{r3, pc}
 8001ed4:	200138a8 	.word	0x200138a8
 8001ed8:	200138aa 	.word	0x200138aa
 8001edc:	0802c78b 	.word	0x0802c78b
 8001ee0:	0802c7ee 	.word	0x0802c7ee
 8001ee4:	0802c746 	.word	0x0802c746
 8001ee8:	200138ae 	.word	0x200138ae
 8001eec:	200138b0 	.word	0x200138b0

08001ef0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ef0:	2101      	movs	r1, #1
{
 8001ef2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	4608      	mov	r0, r1
 8001ef8:	f00b fb22 	bl	800d540 <osSemaphoreNew>
 8001efc:	4b0a      	ldr	r3, [pc, #40]	; (8001f28 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001efe:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001f00:	b928      	cbnz	r0, 8001f0e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001f02:	4b0a      	ldr	r3, [pc, #40]	; (8001f2c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001f04:	4a0a      	ldr	r2, [pc, #40]	; (8001f30 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001f06:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001f08:	480a      	ldr	r0, [pc, #40]	; (8001f34 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001f0a:	f029 fac5 	bl	802b498 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001f0e:	2200      	movs	r2, #0
 8001f10:	2104      	movs	r1, #4
 8001f12:	2001      	movs	r0, #1
 8001f14:	f00b fbc8 	bl	800d6a8 <osMessageQueueNew>
 8001f18:	4b07      	ldr	r3, [pc, #28]	; (8001f38 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001f1a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001f1c:	b918      	cbnz	r0, 8001f26 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001f1e:	4b07      	ldr	r3, [pc, #28]	; (8001f3c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001f20:	4a03      	ldr	r2, [pc, #12]	; (8001f30 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001f22:	212c      	movs	r1, #44	; 0x2c
 8001f24:	e7f0      	b.n	8001f08 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001f26:	bd08      	pop	{r3, pc}
 8001f28:	200007e0 	.word	0x200007e0
 8001f2c:	0802c90c 	.word	0x0802c90c
 8001f30:	0802c955 	.word	0x0802c955
 8001f34:	0802c984 	.word	0x0802c984
 8001f38:	200007dc 	.word	0x200007dc
 8001f3c:	0802c9fe 	.word	0x0802c9fe

08001f40 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001f40:	4b02      	ldr	r3, [pc, #8]	; (8001f4c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001f42:	f04f 31ff 	mov.w	r1, #4294967295
 8001f46:	6818      	ldr	r0, [r3, #0]
 8001f48:	f00b bb4e 	b.w	800d5e8 <osSemaphoreAcquire>
 8001f4c:	200007e0 	.word	0x200007e0

08001f50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001f50:	4b01      	ldr	r3, [pc, #4]	; (8001f58 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001f52:	6818      	ldr	r0, [r3, #0]
 8001f54:	f00b bb7c 	b.w	800d650 <osSemaphoreRelease>
 8001f58:	200007e0 	.word	0x200007e0

08001f5c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001f5c:	4b02      	ldr	r3, [pc, #8]	; (8001f68 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001f5e:	2100      	movs	r1, #0
 8001f60:	6818      	ldr	r0, [r3, #0]
 8001f62:	f00b bb41 	b.w	800d5e8 <osSemaphoreAcquire>
 8001f66:	bf00      	nop
 8001f68:	200007e0 	.word	0x200007e0

08001f6c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001f6c:	f7ff bff0 	b.w	8001f50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001f70 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001f70:	4803      	ldr	r0, [pc, #12]	; (8001f80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001f72:	4904      	ldr	r1, [pc, #16]	; (8001f84 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001f74:	6800      	ldr	r0, [r0, #0]
 8001f76:	2300      	movs	r3, #0
 8001f78:	461a      	mov	r2, r3
 8001f7a:	f00b bbcf 	b.w	800d71c <osMessageQueuePut>
 8001f7e:	bf00      	nop
 8001f80:	200007dc 	.word	0x200007dc
 8001f84:	20000028 	.word	0x20000028

08001f88 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001f88:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001f8a:	4c08      	ldr	r4, [pc, #32]	; (8001fac <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	461a      	mov	r2, r3
 8001f90:	a901      	add	r1, sp, #4
 8001f92:	6820      	ldr	r0, [r4, #0]
 8001f94:	f00b fbf8 	bl	800d788 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001f98:	6820      	ldr	r0, [r4, #0]
 8001f9a:	f04f 33ff 	mov.w	r3, #4294967295
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	a901      	add	r1, sp, #4
 8001fa2:	f00b fbf1 	bl	800d788 <osMessageQueueGet>
}
 8001fa6:	b002      	add	sp, #8
 8001fa8:	bd10      	pop	{r4, pc}
 8001faa:	bf00      	nop
 8001fac:	200007dc 	.word	0x200007dc

08001fb0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8001fb0:	4770      	bx	lr

08001fb2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8001fb2:	2000      	movs	r0, #0
 8001fb4:	4770      	bx	lr

08001fb6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8001fb6:	4770      	bx	lr

08001fb8 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8001fb8:	4770      	bx	lr

08001fba <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8001fba:	2000      	movs	r0, #0
 8001fbc:	4770      	bx	lr

08001fbe <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8001fbe:	4770      	bx	lr

08001fc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8001fc0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001fc2:	4a03      	ldr	r2, [pc, #12]	; (8001fd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8001fc4:	4b03      	ldr	r3, [pc, #12]	; (8001fd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8001fc6:	4804      	ldr	r0, [pc, #16]	; (8001fd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8001fc8:	2122      	movs	r1, #34	; 0x22
 8001fca:	f029 fa65 	bl	802b498 <__assert_func>
 8001fce:	bf00      	nop
 8001fd0:	0802ca63 	.word	0x0802ca63
 8001fd4:	0802ca40 	.word	0x0802ca40
 8001fd8:	0802caa1 	.word	0x0802caa1

08001fdc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8001fdc:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001fde:	4a03      	ldr	r2, [pc, #12]	; (8001fec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8001fe0:	4b03      	ldr	r3, [pc, #12]	; (8001ff0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8001fe2:	4804      	ldr	r0, [pc, #16]	; (8001ff4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8001fe4:	2127      	movs	r1, #39	; 0x27
 8001fe6:	f029 fa57 	bl	802b498 <__assert_func>
 8001fea:	bf00      	nop
 8001fec:	0802cb19 	.word	0x0802cb19
 8001ff0:	0802ca40 	.word	0x0802ca40
 8001ff4:	0802caa1 	.word	0x0802caa1

08001ff8 <_ZN8STM32DMAD0Ev>:
 8001ff8:	b510      	push	{r4, lr}
 8001ffa:	2144      	movs	r1, #68	; 0x44
 8001ffc:	4604      	mov	r4, r0
 8001ffe:	f028 fc38 	bl	802a872 <_ZdlPvj>
 8002002:	4620      	mov	r0, r4
 8002004:	bd10      	pop	{r4, pc}
	...

08002008 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002008:	b538      	push	{r3, r4, r5, lr}
 800200a:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 800200c:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800200e:	2500      	movs	r5, #0
 8002010:	4b06      	ldr	r3, [pc, #24]	; (800202c <_ZN8STM32DMAC1Ev+0x24>)
 8002012:	7225      	strb	r5, [r4, #8]
 8002014:	300c      	adds	r0, #12
 8002016:	6060      	str	r0, [r4, #4]
 8002018:	7265      	strb	r5, [r4, #9]
 800201a:	2201      	movs	r2, #1
 800201c:	f841 3b20 	str.w	r3, [r1], #32
 8002020:	f010 fa5c 	bl	80124dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002024:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002026:	4620      	mov	r0, r4
 8002028:	bd38      	pop	{r3, r4, r5, pc}
 800202a:	bf00      	nop
 800202c:	0802cb60 	.word	0x0802cb60

08002030 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002030:	2001      	movs	r0, #1
 8002032:	4770      	bx	lr

08002034 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002034:	2038      	movs	r0, #56	; 0x38
 8002036:	4770      	bx	lr

08002038 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002038:	2338      	movs	r3, #56	; 0x38
 800203a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800203e:	3008      	adds	r0, #8
 8002040:	4770      	bx	lr

08002042 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002042:	2338      	movs	r3, #56	; 0x38
 8002044:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002048:	3008      	adds	r0, #8
 800204a:	4770      	bx	lr

0800204c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800204c:	2001      	movs	r0, #1
 800204e:	4770      	bx	lr

08002050 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002050:	f44f 50f5 	mov.w	r0, #7840	; 0x1ea0
 8002054:	4770      	bx	lr

08002056 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002056:	f44f 53f5 	mov.w	r3, #7840	; 0x1ea0
 800205a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800205e:	3008      	adds	r0, #8
 8002060:	4770      	bx	lr

08002062 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002062:	f44f 53f5 	mov.w	r3, #7840	; 0x1ea0
 8002066:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800206a:	3008      	adds	r0, #8
 800206c:	4770      	bx	lr

0800206e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800206e:	2001      	movs	r0, #1
 8002070:	4770      	bx	lr

08002072 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002072:	2010      	movs	r0, #16
 8002074:	4770      	bx	lr

08002076 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002076:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800207a:	3008      	adds	r0, #8
 800207c:	4770      	bx	lr

0800207e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800207e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002082:	3008      	adds	r0, #8
 8002084:	4770      	bx	lr

08002086 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002086:	4608      	mov	r0, r1
 8002088:	f002 ba6e 	b.w	8004568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

0800208c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800208c:	b510      	push	{r4, lr}
 800208e:	4b03      	ldr	r3, [pc, #12]	; (800209c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002090:	6003      	str	r3, [r0, #0]
 8002092:	4604      	mov	r4, r0
 8002094:	f00d ffd3 	bl	801003e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002098:	4620      	mov	r0, r4
 800209a:	bd10      	pop	{r4, pc}
 800209c:	0802cc18 	.word	0x0802cc18

080020a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80020a0:	b510      	push	{r4, lr}
 80020a2:	4604      	mov	r4, r0
 80020a4:	f7ff fff2 	bl	800208c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80020a8:	4620      	mov	r0, r4
 80020aa:	2140      	movs	r1, #64	; 0x40
 80020ac:	f028 fbe1 	bl	802a872 <_ZdlPvj>
 80020b0:	4620      	mov	r0, r4
 80020b2:	bd10      	pop	{r4, pc}

080020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80020b4:	b510      	push	{r4, lr}
 80020b6:	4b03      	ldr	r3, [pc, #12]	; (80020c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80020b8:	6003      	str	r3, [r0, #0]
 80020ba:	4604      	mov	r4, r0
 80020bc:	f00d ffbf 	bl	801003e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80020c0:	4620      	mov	r0, r4
 80020c2:	bd10      	pop	{r4, pc}
 80020c4:	0802cbe4 	.word	0x0802cbe4

080020c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80020c8:	b510      	push	{r4, lr}
 80020ca:	4604      	mov	r4, r0
 80020cc:	f7ff fff2 	bl	80020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80020d0:	4620      	mov	r0, r4
 80020d2:	f641 61a8 	movw	r1, #7848	; 0x1ea8
 80020d6:	f028 fbcc 	bl	802a872 <_ZdlPvj>
 80020da:	4620      	mov	r0, r4
 80020dc:	bd10      	pop	{r4, pc}
	...

080020e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80020e0:	b510      	push	{r4, lr}
 80020e2:	4b03      	ldr	r3, [pc, #12]	; (80020f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80020e4:	6003      	str	r3, [r0, #0]
 80020e6:	4604      	mov	r4, r0
 80020e8:	f00d ffa9 	bl	801003e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80020ec:	4620      	mov	r0, r4
 80020ee:	bd10      	pop	{r4, pc}
 80020f0:	0802cbb0 	.word	0x0802cbb0

080020f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80020f4:	b510      	push	{r4, lr}
 80020f6:	4604      	mov	r4, r0
 80020f8:	f7ff fff2 	bl	80020e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80020fc:	4620      	mov	r0, r4
 80020fe:	2118      	movs	r1, #24
 8002100:	f028 fbb7 	bl	802a872 <_ZdlPvj>
 8002104:	4620      	mov	r0, r4
 8002106:	bd10      	pop	{r4, pc}

08002108 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002108:	b510      	push	{r4, lr}
 800210a:	4b09      	ldr	r3, [pc, #36]	; (8002130 <_ZN12FrontendHeapD1Ev+0x28>)
 800210c:	6003      	str	r3, [r0, #0]
 800210e:	4604      	mov	r4, r0
 8002110:	f500 50f6 	add.w	r0, r0, #7872	; 0x1ec0
 8002114:	3014      	adds	r0, #20
 8002116:	f7ff ffb9 	bl	800208c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800211a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800211e:	f7ff ffc9 	bl	80020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002122:	f104 0014 	add.w	r0, r4, #20
 8002126:	f7ff ffdb 	bl	80020e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800212a:	4620      	mov	r0, r4
 800212c:	bd10      	pop	{r4, pc}
 800212e:	bf00      	nop
 8002130:	0802cc4c 	.word	0x0802cc4c

08002134 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002134:	b508      	push	{r3, lr}
 8002136:	4802      	ldr	r0, [pc, #8]	; (8002140 <__tcf_0+0xc>)
 8002138:	f7ff ffe6 	bl	8002108 <_ZN12FrontendHeapD1Ev>
 800213c:	bd08      	pop	{r3, pc}
 800213e:	bf00      	nop
 8002140:	200007e8 	.word	0x200007e8

08002144 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002144:	b510      	push	{r4, lr}
 8002146:	4604      	mov	r4, r0
 8002148:	f7ff ffde 	bl	8002108 <_ZN12FrontendHeapD1Ev>
 800214c:	4620      	mov	r0, r4
 800214e:	f242 0178 	movw	r1, #8312	; 0x2078
 8002152:	f028 fb8e 	bl	802a872 <_ZdlPvj>
 8002156:	4620      	mov	r0, r4
 8002158:	bd10      	pop	{r4, pc}
	...

0800215c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800215c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002160:	f000 fa5a 	bl	8002618 <_ZN14BitmapDatabase11getInstanceEv>
 8002164:	4605      	mov	r5, r0
 8002166:	f000 fa5b 	bl	8002620 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800216a:	2400      	movs	r4, #0
 800216c:	4601      	mov	r1, r0
 800216e:	4623      	mov	r3, r4
 8002170:	4628      	mov	r0, r5
 8002172:	4622      	mov	r2, r4
 8002174:	9400      	str	r4, [sp, #0]
 8002176:	f017 ff03 	bl	8019f80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800217a:	4b26      	ldr	r3, [pc, #152]	; (8002214 <touchgfx_init+0xb8>)
 800217c:	4a26      	ldr	r2, [pc, #152]	; (8002218 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 800217e:	4d27      	ldr	r5, [pc, #156]	; (800221c <touchgfx_init+0xc0>)
 8002180:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002182:	4620      	mov	r0, r4
 8002184:	f006 fc18 	bl	80089b8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002188:	4825      	ldr	r0, [pc, #148]	; (8002220 <touchgfx_init+0xc4>)
 800218a:	f017 fe61 	bl	8019e50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800218e:	682b      	ldr	r3, [r5, #0]
 8002190:	f3bf 8f5b 	dmb	ish
 8002194:	07db      	lsls	r3, r3, #31
 8002196:	d437      	bmi.n	8002208 <touchgfx_init+0xac>
 8002198:	4628      	mov	r0, r5
 800219a:	f028 fb6c 	bl	802a876 <__cxa_guard_acquire>
 800219e:	b398      	cbz	r0, 8002208 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80021a0:	4c20      	ldr	r4, [pc, #128]	; (8002224 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80021a2:	4b21      	ldr	r3, [pc, #132]	; (8002228 <touchgfx_init+0xcc>)
 80021a4:	6023      	str	r3, [r4, #0]
 80021a6:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
          transitionStorage(tra),
 80021aa:	f500 57f6 	add.w	r7, r0, #7872	; 0x1ec0
          frontendApplication(app)
 80021ae:	f107 0648 	add.w	r6, r7, #72	; 0x48
          screenStorage(scr),
 80021b2:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80021b6:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80021b8:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80021bc:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80021be:	6126      	str	r6, [r4, #16]
 80021c0:	f00d ff3e 	bl	8010040 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80021c4:	4b19      	ldr	r3, [pc, #100]	; (800222c <touchgfx_init+0xd0>)
 80021c6:	6163      	str	r3, [r4, #20]
 80021c8:	4640      	mov	r0, r8
 80021ca:	f00d ff39 	bl	8010040 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80021ce:	4b18      	ldr	r3, [pc, #96]	; (8002230 <touchgfx_init+0xd4>)
 80021d0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80021d2:	4638      	mov	r0, r7
 80021d4:	f00d ff34 	bl	8010040 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80021d8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80021dc:	4a15      	ldr	r2, [pc, #84]	; (8002234 <touchgfx_init+0xd8>)
 80021de:	f8c3 2ed4 	str.w	r2, [r3, #3796]	; 0xed4
 80021e2:	f603 7014 	addw	r0, r3, #3860	; 0xf14
 80021e6:	f007 f853 	bl	8009290 <_ZN5ModelC1Ev>
 80021ea:	4622      	mov	r2, r4
 80021ec:	f107 0140 	add.w	r1, r7, #64	; 0x40
 80021f0:	4630      	mov	r0, r6
 80021f2:	f006 fd5d 	bl	8008cb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80021f6:	4630      	mov	r0, r6
 80021f8:	f002 f9b6 	bl	8004568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80021fc:	480e      	ldr	r0, [pc, #56]	; (8002238 <touchgfx_init+0xdc>)
 80021fe:	f029 f969 	bl	802b4d4 <atexit>
 8002202:	4628      	mov	r0, r5
 8002204:	f028 fb43 	bl	802a88e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002208:	480c      	ldr	r0, [pc, #48]	; (800223c <touchgfx_init+0xe0>)
}
 800220a:	b002      	add	sp, #8
 800220c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002210:	f7ff bdb4 	b.w	8001d7c <_ZN11TouchGFXHAL10initializeEv>
 8002214:	20013918 	.word	0x20013918
 8002218:	20002924 	.word	0x20002924
 800221c:	200007e4 	.word	0x200007e4
 8002220:	2000002c 	.word	0x2000002c
 8002224:	200007e8 	.word	0x200007e8
 8002228:	0802cc4c 	.word	0x0802cc4c
 800222c:	0802cbb0 	.word	0x0802cbb0
 8002230:	0802cbe4 	.word	0x0802cbe4
 8002234:	0802cc18 	.word	0x0802cc18
 8002238:	08002135 	.word	0x08002135
 800223c:	200028a8 	.word	0x200028a8

08002240 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002240:	4770      	bx	lr
	...

08002244 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002244:	4801      	ldr	r0, [pc, #4]	; (800224c <touchgfx_taskEntry+0x8>)
 8002246:	f7ff bda7 	b.w	8001d98 <_ZN11TouchGFXHAL9taskEntryEv>
 800224a:	bf00      	nop
 800224c:	200028a8 	.word	0x200028a8

08002250 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002250:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002252:	4e22      	ldr	r6, [pc, #136]	; (80022dc <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002254:	4c22      	ldr	r4, [pc, #136]	; (80022e0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002256:	4d23      	ldr	r5, [pc, #140]	; (80022e4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002258:	4b23      	ldr	r3, [pc, #140]	; (80022e8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800225a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800225c:	4630      	mov	r0, r6
 800225e:	f7ff fed3 	bl	8002008 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002262:	4628      	mov	r0, r5
 8002264:	f01c f958 	bl	801e518 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002268:	4b20      	ldr	r3, [pc, #128]	; (80022ec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800226a:	4821      	ldr	r0, [pc, #132]	; (80022f0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 800226c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800226e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002270:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002274:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002278:	491e      	ldr	r1, [pc, #120]	; (80022f4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800227a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 800227c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002280:	491d      	ldr	r1, [pc, #116]	; (80022f8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002282:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002284:	491d      	ldr	r1, [pc, #116]	; (80022fc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002286:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800228a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800228c:	21f0      	movs	r1, #240	; 0xf0
 800228e:	8001      	strh	r1, [r0, #0]
 8002290:	481b      	ldr	r0, [pc, #108]	; (8002300 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8002292:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002294:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002296:	481b      	ldr	r0, [pc, #108]	; (8002304 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002298:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800229c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80022a0:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80022a4:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80022a8:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80022ac:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80022b0:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80022b4:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80022b8:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80022bc:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80022c0:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80022c2:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80022c6:	8001      	strh	r1, [r0, #0]
 80022c8:	480f      	ldr	r0, [pc, #60]	; (8002308 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80022ca:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80022cc:	490f      	ldr	r1, [pc, #60]	; (800230c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80022ce:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80022d0:	2201      	movs	r2, #1
 80022d2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80022d6:	4a0e      	ldr	r2, [pc, #56]	; (8002310 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80022d8:	601a      	str	r2, [r3, #0]
}
 80022da:	bd70      	pop	{r4, r5, r6, pc}
 80022dc:	20002864 	.word	0x20002864
 80022e0:	20002860 	.word	0x20002860
 80022e4:	20002928 	.word	0x20002928
 80022e8:	0802c6b0 	.word	0x0802c6b0
 80022ec:	200028a8 	.word	0x200028a8
 80022f0:	200138a8 	.word	0x200138a8
 80022f4:	01000001 	.word	0x01000001
 80022f8:	01010000 	.word	0x01010000
 80022fc:	200138b4 	.word	0x200138b4
 8002300:	200138ae 	.word	0x200138ae
 8002304:	200138aa 	.word	0x200138aa
 8002308:	200138b0 	.word	0x200138b0
 800230c:	200138ac 	.word	0x200138ac
 8002310:	0802c83c 	.word	0x0802c83c

08002314 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002314:	2000      	movs	r0, #0
 8002316:	4770      	bx	lr

08002318 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002318:	8081      	strh	r1, [r0, #4]
    }
 800231a:	4770      	bx	lr

0800231c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800231c:	80c1      	strh	r1, [r0, #6]
    }
 800231e:	4770      	bx	lr

08002320 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002320:	8101      	strh	r1, [r0, #8]
    }
 8002322:	4770      	bx	lr

08002324 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002324:	8141      	strh	r1, [r0, #10]
    }
 8002326:	4770      	bx	lr

08002328 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002328:	4770      	bx	lr

0800232a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800232a:	4770      	bx	lr

0800232c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800232c:	4770      	bx	lr

0800232e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800232e:	4770      	bx	lr

08002330 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002330:	4770      	bx	lr

08002332 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002332:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002334:	88c4      	ldrh	r4, [r0, #6]
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	1b12      	subs	r2, r2, r4
 800233a:	8884      	ldrh	r4, [r0, #4]
 800233c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800233e:	1b09      	subs	r1, r1, r4
 8002340:	b212      	sxth	r2, r2
    }
 8002342:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002346:	b209      	sxth	r1, r1
 8002348:	4718      	bx	r3

0800234a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800234a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800234e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002350:	f04f 33ff 	mov.w	r3, #4294967295
 8002354:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002356:	6813      	ldr	r3, [r2, #0]
 8002358:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800235a:	6010      	str	r0, [r2, #0]
    }
 800235c:	4770      	bx	lr

0800235e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800235e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002362:	b11a      	cbz	r2, 800236c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002364:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002368:	b102      	cbz	r2, 800236c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800236a:	6018      	str	r0, [r3, #0]
        }
    }
 800236c:	4770      	bx	lr

0800236e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800236e:	2000      	movs	r0, #0
 8002370:	4770      	bx	lr

08002372 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002372:	888b      	ldrh	r3, [r1, #4]
 8002374:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002376:	2001      	movs	r0, #1
 8002378:	4770      	bx	lr

0800237a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800237a:	4770      	bx	lr

0800237c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800237c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002380:	4770      	bx	lr

08002382 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002382:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002386:	4770      	bx	lr

08002388 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002388:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800238a:	2200      	movs	r2, #0
        return rect.width;
 800238c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002390:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002394:	8002      	strh	r2, [r0, #0]
 8002396:	8042      	strh	r2, [r0, #2]
 8002398:	8084      	strh	r4, [r0, #4]
 800239a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800239c:	bd10      	pop	{r4, pc}

0800239e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800239e:	2200      	movs	r2, #0
 80023a0:	8002      	strh	r2, [r0, #0]
 80023a2:	8042      	strh	r2, [r0, #2]
 80023a4:	8082      	strh	r2, [r0, #4]
 80023a6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80023a8:	4770      	bx	lr
	...

080023ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80023ac:	4b02      	ldr	r3, [pc, #8]	; (80023b8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80023ae:	2290      	movs	r2, #144	; 0x90
 80023b0:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80023b4:	4770      	bx	lr
 80023b6:	bf00      	nop
 80023b8:	e000e100 	.word	0xe000e100

080023bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80023bc:	4b02      	ldr	r3, [pc, #8]	; (80023c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80023be:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80023c2:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80023c4:	4770      	bx	lr
 80023c6:	bf00      	nop
 80023c8:	e000e100 	.word	0xe000e100

080023cc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80023cc:	4a09      	ldr	r2, [pc, #36]	; (80023f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80023ce:	490a      	ldr	r1, [pc, #40]	; (80023f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80023d0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80023d2:	480a      	ldr	r0, [pc, #40]	; (80023fc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80023d4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80023d8:	3b01      	subs	r3, #1
 80023da:	b29b      	uxth	r3, r3
 80023dc:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80023de:	6911      	ldr	r1, [r2, #16]
 80023e0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80023e4:	3901      	subs	r1, #1
 80023e6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80023e8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80023ea:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80023ec:	f043 0301 	orr.w	r3, r3, #1
 80023f0:	6353      	str	r3, [r2, #52]	; 0x34
}
 80023f2:	4770      	bx	lr
 80023f4:	40016800 	.word	0x40016800
 80023f8:	200029ae 	.word	0x200029ae
 80023fc:	200029ac 	.word	0x200029ac

08002400 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002400:	4b01      	ldr	r3, [pc, #4]	; (8002408 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002402:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002406:	4770      	bx	lr
 8002408:	40016800 	.word	0x40016800

0800240c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800240c:	4b02      	ldr	r3, [pc, #8]	; (8002418 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800240e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002410:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002414:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002416:	4770      	bx	lr
 8002418:	40016800 	.word	0x40016800

0800241c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800241c:	b570      	push	{r4, r5, r6, lr}
 800241e:	4604      	mov	r4, r0
    HAL::initialize();
 8002420:	f00f f9c5 	bl	80117ae <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002424:	6823      	ldr	r3, [r4, #0]
 8002426:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002428:	f014 f96e 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 800242c:	4601      	mov	r1, r0
 800242e:	4620      	mov	r0, r4
 8002430:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002432:	6823      	ldr	r3, [r4, #0]
 8002434:	4a05      	ldr	r2, [pc, #20]	; (800244c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002436:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800243a:	4620      	mov	r0, r4
 800243c:	46ac      	mov	ip, r5
 800243e:	2300      	movs	r3, #0
}
 8002440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002444:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002448:	4760      	bx	ip
 800244a:	bf00      	nop
 800244c:	d004b000 	.word	0xd004b000

08002450 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002450:	f00f b994 	b.w	801177c <_ZN8touchgfx3HAL10beginFrameEv>

08002454 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002454:	f00f b99e 	b.w	8011794 <_ZN8touchgfx3HAL8endFrameEv>

08002458 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002458:	f00f b95a 	b.w	8011710 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800245c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800245c:	f00f babb 	b.w	80119d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002460 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002460:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002464:	b112      	cbz	r2, 800246c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002466:	6803      	ldr	r3, [r0, #0]
 8002468:	695b      	ldr	r3, [r3, #20]
 800246a:	4718      	bx	r3
    }
 800246c:	4770      	bx	lr
	...

08002470 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002470:	4b04      	ldr	r3, [pc, #16]	; (8002484 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002472:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002476:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800247a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800247e:	f3bf 8f6f 	isb	sy
}
 8002482:	4770      	bx	lr
 8002484:	e000e100 	.word	0xe000e100

08002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002488:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800248a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800248c:	4e12      	ldr	r6, [pc, #72]	; (80024d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800248e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002490:	4b12      	ldr	r3, [pc, #72]	; (80024dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002492:	6003      	str	r3, [r0, #0]
 8002494:	6833      	ldr	r3, [r6, #0]
 8002496:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800249a:	4605      	mov	r5, r0
 800249c:	b10a      	cbz	r2, 80024a2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800249e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80024a0:	b900      	cbnz	r0, 80024a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80024a2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80024a4:	6803      	ldr	r3, [r0, #0]
 80024a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024a8:	4798      	blx	r3
        return auxiliaryLCD;
 80024aa:	6833      	ldr	r3, [r6, #0]
 80024ac:	fab0 f480 	clz	r4, r0
 80024b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80024b2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80024b4:	b130      	cbz	r0, 80024c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80024b6:	6803      	ldr	r3, [r0, #0]
 80024b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024ba:	4798      	blx	r3
 80024bc:	2800      	cmp	r0, #0
 80024be:	bf08      	it	eq
 80024c0:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80024c4:	b92c      	cbnz	r4, 80024d2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80024c6:	4b06      	ldr	r3, [pc, #24]	; (80024e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80024c8:	4a06      	ldr	r2, [pc, #24]	; (80024e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80024ca:	4807      	ldr	r0, [pc, #28]	; (80024e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80024cc:	212c      	movs	r1, #44	; 0x2c
 80024ce:	f028 ffe3 	bl	802b498 <__assert_func>
    }
 80024d2:	4628      	mov	r0, r5
 80024d4:	bd70      	pop	{r4, r5, r6, pc}
 80024d6:	bf00      	nop
 80024d8:	200138b4 	.word	0x200138b4
 80024dc:	0802cd5c 	.word	0x0802cd5c
 80024e0:	0802cc58 	.word	0x0802cc58
 80024e4:	0802ccb6 	.word	0x0802ccb6
 80024e8:	0802ccef 	.word	0x0802ccef

080024ec <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80024ec:	4770      	bx	lr
	...

080024f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80024f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80024f4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80024f6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80024fa:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80024fe:	d105      	bne.n	800250c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002500:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002504:	4281      	cmp	r1, r0
 8002506:	d8fb      	bhi.n	8002500 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800250c:	4f17      	ldr	r7, [pc, #92]	; (800256c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800250e:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002512:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002516:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800251a:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800251e:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002520:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8002522:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002524:	b2db      	uxtb	r3, r3
 8002526:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002528:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800252c:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002530:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002534:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002538:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800253c:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002540:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002544:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002548:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800254a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800254e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002552:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002556:	fbbe fef5 	udiv	lr, lr, r5
 800255a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800255e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002562:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002566:	4281      	cmp	r1, r0
 8002568:	d8de      	bhi.n	8002528 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800256a:	e7cd      	b.n	8002508 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800256c:	fffff800 	.word	0xfffff800

08002570 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002570:	b510      	push	{r4, lr}
        return instance;
 8002572:	4c14      	ldr	r4, [pc, #80]	; (80025c4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002574:	6823      	ldr	r3, [r4, #0]
 8002576:	b323      	cbz	r3, 80025c2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002578:	4b13      	ldr	r3, [pc, #76]	; (80025c8 <HAL_LTDC_LineEventCallback+0x58>)
 800257a:	4a14      	ldr	r2, [pc, #80]	; (80025cc <HAL_LTDC_LineEventCallback+0x5c>)
 800257c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800257e:	8811      	ldrh	r1, [r2, #0]
 8002580:	428b      	cmp	r3, r1
 8002582:	d113      	bne.n	80025ac <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002584:	4b12      	ldr	r3, [pc, #72]	; (80025d0 <HAL_LTDC_LineEventCallback+0x60>)
 8002586:	8819      	ldrh	r1, [r3, #0]
 8002588:	f009 fbee 	bl	800bd68 <HAL_LTDC_ProgramLineEvent>
 800258c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800258e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8002592:	3301      	adds	r3, #1
 8002594:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002598:	f7ff fcea 	bl	8001f70 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800259c:	6820      	ldr	r0, [r4, #0]
 800259e:	f00f fe45 	bl	801222c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80025a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80025a6:	2000      	movs	r0, #0
 80025a8:	f7ff bb62 	b.w	8001c70 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80025ac:	f009 fbdc 	bl	800bd68 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80025b0:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80025b2:	6803      	ldr	r3, [r0, #0]
 80025b4:	6a1b      	ldr	r3, [r3, #32]
 80025b6:	4798      	blx	r3
    }
 80025b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80025bc:	2000      	movs	r0, #0
 80025be:	f7ff bb6f 	b.w	8001ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80025c2:	bd10      	pop	{r4, pc}
 80025c4:	200138b4 	.word	0x200138b4
 80025c8:	40016800 	.word	0x40016800
 80025cc:	200029ae 	.word	0x200029ae
 80025d0:	200029ac 	.word	0x200029ac

080025d4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80025d4:	4770      	bx	lr

080025d6 <_ZN23ApplicationFontProviderD0Ev>:
 80025d6:	b510      	push	{r4, lr}
 80025d8:	2104      	movs	r1, #4
 80025da:	4604      	mov	r4, r0
 80025dc:	f028 f949 	bl	802a872 <_ZdlPvj>
 80025e0:	4620      	mov	r0, r4
 80025e2:	bd10      	pop	{r4, pc}

080025e4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80025e4:	b508      	push	{r3, lr}
    switch (typography)
 80025e6:	2903      	cmp	r1, #3
 80025e8:	d813      	bhi.n	8002612 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80025ea:	e8df f001 	tbb	[pc, r1]
 80025ee:	0602      	.short	0x0602
 80025f0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80025f2:	f006 fa2d 	bl	8008a50 <_ZN17TypedTextDatabase8getFontsEv>
 80025f6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80025f8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80025fa:	f006 fa29 	bl	8008a50 <_ZN17TypedTextDatabase8getFontsEv>
 80025fe:	6840      	ldr	r0, [r0, #4]
 8002600:	e7fa      	b.n	80025f8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002602:	f006 fa25 	bl	8008a50 <_ZN17TypedTextDatabase8getFontsEv>
 8002606:	6880      	ldr	r0, [r0, #8]
 8002608:	e7f6      	b.n	80025f8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800260a:	f006 fa21 	bl	8008a50 <_ZN17TypedTextDatabase8getFontsEv>
 800260e:	68c0      	ldr	r0, [r0, #12]
 8002610:	e7f2      	b.n	80025f8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002612:	2000      	movs	r0, #0
 8002614:	e7f0      	b.n	80025f8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002618 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002618:	4800      	ldr	r0, [pc, #0]	; (800261c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800261a:	4770      	bx	lr
 800261c:	0802cd88 	.word	0x0802cd88

08002620 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002620:	200a      	movs	r0, #10
 8002622:	4770      	bx	lr

08002624 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002624:	b513      	push	{r0, r1, r4, lr}
 8002626:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002628:	b151      	cbz	r1, 8002640 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800262a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800262c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800262e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002632:	aa01      	add	r2, sp, #4
 8002634:	689c      	ldr	r4, [r3, #8]
 8002636:	f10d 0303 	add.w	r3, sp, #3
 800263a:	47a0      	blx	r4
        return glyph;
    }
 800263c:	b002      	add	sp, #8
 800263e:	bd10      	pop	{r4, pc}
            return 0;
 8002640:	4608      	mov	r0, r1
 8002642:	e7fb      	b.n	800263c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002644 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002644:	89c0      	ldrh	r0, [r0, #14]
 8002646:	4770      	bx	lr

08002648 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002648:	8a00      	ldrh	r0, [r0, #16]
 800264a:	4770      	bx	lr

0800264c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800264c:	88c0      	ldrh	r0, [r0, #6]
 800264e:	4770      	bx	lr

08002650 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002650:	8880      	ldrh	r0, [r0, #4]
 8002652:	4770      	bx	lr

08002654 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002654:	7a80      	ldrb	r0, [r0, #10]
    }
 8002656:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800265a:	4770      	bx	lr

0800265c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800265c:	7a80      	ldrb	r0, [r0, #10]
    }
 800265e:	09c0      	lsrs	r0, r0, #7
 8002660:	4770      	bx	lr

08002662 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002662:	4770      	bx	lr

08002664 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002664:	4770      	bx	lr

08002666 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002666:	4770      	bx	lr

08002668 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002668:	4770      	bx	lr

0800266a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800266a:	4770      	bx	lr

0800266c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800266c:	4770      	bx	lr

0800266e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800266e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002670:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002672:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002674:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002676:	466d      	mov	r5, sp
 8002678:	4601      	mov	r1, r0
 800267a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800267e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002680:	4628      	mov	r0, r5
 8002682:	4798      	blx	r3
 8002684:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002688:	343c      	adds	r4, #60	; 0x3c
 800268a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800268e:	b005      	add	sp, #20
 8002690:	bd30      	pop	{r4, r5, pc}

08002692 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002692:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002694:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002696:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002698:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800269a:	466d      	mov	r5, sp
 800269c:	4601      	mov	r1, r0
 800269e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80026a2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80026a4:	4628      	mov	r0, r5
 80026a6:	4798      	blx	r3
 80026a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80026ac:	343c      	adds	r4, #60	; 0x3c
 80026ae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80026b2:	b005      	add	sp, #20
 80026b4:	bd30      	pop	{r4, r5, pc}

080026b6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80026b6:	2200      	movs	r2, #0
 80026b8:	8002      	strh	r2, [r0, #0]
 80026ba:	8042      	strh	r2, [r0, #2]
 80026bc:	8082      	strh	r2, [r0, #4]
 80026be:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80026c0:	4770      	bx	lr

080026c2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80026c2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80026c6:	4770      	bx	lr

080026c8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80026c8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80026ca:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80026cc:	4604      	mov	r4, r0
        setX(x);
 80026ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80026d0:	4615      	mov	r5, r2
        setX(x);
 80026d2:	4798      	blx	r3
        setBaselineY(baselineY);
 80026d4:	6823      	ldr	r3, [r4, #0]
 80026d6:	4629      	mov	r1, r5
 80026d8:	4620      	mov	r0, r4
 80026da:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80026dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80026e0:	4718      	bx	r3

080026e2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80026e2:	2000      	movs	r0, #0
 80026e4:	4770      	bx	lr

080026e6 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80026e6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80026e8:	4770      	bx	lr

080026ea <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 80026ea:	4770      	bx	lr

080026ec <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80026ec:	4770      	bx	lr

080026ee <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80026ee:	4770      	bx	lr

080026f0 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80026f0:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80026f2:	68c2      	ldr	r2, [r0, #12]
 80026f4:	6844      	ldr	r4, [r0, #4]
 80026f6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80026f8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80026fa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80026fe:	07d2      	lsls	r2, r2, #31
 8002700:	bf48      	it	mi
 8002702:	5962      	ldrmi	r2, [r4, r5]
 8002704:	689b      	ldr	r3, [r3, #8]
    }
 8002706:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002708:	bf48      	it	mi
 800270a:	58d3      	ldrmi	r3, [r2, r3]
 800270c:	4718      	bx	r3

0800270e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800270e:	6843      	ldr	r3, [r0, #4]
 8002710:	b12b      	cbz	r3, 800271e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002712:	6883      	ldr	r3, [r0, #8]
 8002714:	b92b      	cbnz	r3, 8002722 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002716:	68c0      	ldr	r0, [r0, #12]
 8002718:	f000 0001 	and.w	r0, r0, #1
 800271c:	4770      	bx	lr
 800271e:	4618      	mov	r0, r3
 8002720:	4770      	bx	lr
 8002722:	2001      	movs	r0, #1
    }
 8002724:	4770      	bx	lr

08002726 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002726:	b510      	push	{r4, lr}
    }
 8002728:	2108      	movs	r1, #8
    virtual ~TypedText()
 800272a:	4604      	mov	r4, r0
    }
 800272c:	f028 f8a1 	bl	802a872 <_ZdlPvj>
 8002730:	4620      	mov	r0, r4
 8002732:	bd10      	pop	{r4, pc}

08002734 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002734:	b510      	push	{r4, lr}
 8002736:	214c      	movs	r1, #76	; 0x4c
 8002738:	4604      	mov	r4, r0
 800273a:	f028 f89a 	bl	802a872 <_ZdlPvj>
 800273e:	4620      	mov	r0, r4
 8002740:	bd10      	pop	{r4, pc}

08002742 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002742:	b510      	push	{r4, lr}
 8002744:	2110      	movs	r1, #16
 8002746:	4604      	mov	r4, r0
 8002748:	f028 f893 	bl	802a872 <_ZdlPvj>
 800274c:	4620      	mov	r0, r4
 800274e:	bd10      	pop	{r4, pc}

08002750 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002750:	b510      	push	{r4, lr}
 8002752:	4b03      	ldr	r3, [pc, #12]	; (8002760 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002754:	6003      	str	r3, [r0, #0]
 8002756:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002758:	f012 fad4 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800275c:	4620      	mov	r0, r4
 800275e:	bd10      	pop	{r4, pc}
 8002760:	0802d0b8 	.word	0x0802d0b8

08002764 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002764:	b507      	push	{r0, r1, r2, lr}
 8002766:	4b07      	ldr	r3, [pc, #28]	; (8002784 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002768:	6003      	str	r3, [r0, #0]
 800276a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800276c:	f012 faca 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002770:	9801      	ldr	r0, [sp, #4]
 8002772:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002776:	f028 f87c 	bl	802a872 <_ZdlPvj>
 800277a:	9801      	ldr	r0, [sp, #4]
 800277c:	b003      	add	sp, #12
 800277e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002782:	bf00      	nop
 8002784:	0802d0b8 	.word	0x0802d0b8

08002788 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002788:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800278a:	f7ff fe69 	bl	8002460 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800278e:	bd08      	pop	{r3, pc}

08002790 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002790:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002792:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002794:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002796:	4b12      	ldr	r3, [pc, #72]	; (80027e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002798:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800279a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800279c:	b28d      	uxth	r5, r1
 800279e:	b92b      	cbnz	r3, 80027ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80027a0:	4b10      	ldr	r3, [pc, #64]	; (80027e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80027a2:	4a11      	ldr	r2, [pc, #68]	; (80027e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80027a4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027a6:	4811      	ldr	r0, [pc, #68]	; (80027ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80027a8:	f028 fe76 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80027ac:	4910      	ldr	r1, [pc, #64]	; (80027f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80027ae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027b0:	8809      	ldrh	r1, [r1, #0]
 80027b2:	4291      	cmp	r1, r2
 80027b4:	d803      	bhi.n	80027be <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80027b6:	4b0f      	ldr	r3, [pc, #60]	; (80027f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80027b8:	4a0b      	ldr	r2, [pc, #44]	; (80027e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80027ba:	216d      	movs	r1, #109	; 0x6d
 80027bc:	e7f3      	b.n	80027a6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80027be:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80027c2:	4b0d      	ldr	r3, [pc, #52]	; (80027f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80027ca:	6803      	ldr	r3, [r0, #0]
 80027cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ce:	4798      	blx	r3
 80027d0:	1a28      	subs	r0, r5, r0
 80027d2:	b201      	sxth	r1, r0
 80027d4:	4633      	mov	r3, r6
 80027d6:	4620      	mov	r0, r4
    }
 80027d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80027dc:	4718      	bx	r3
 80027de:	bf00      	nop
 80027e0:	2001390c 	.word	0x2001390c
 80027e4:	0802ce50 	.word	0x0802ce50
 80027e8:	0802ce92 	.word	0x0802ce92
 80027ec:	0802cecd 	.word	0x0802cecd
 80027f0:	20013910 	.word	0x20013910
 80027f4:	0802cf14 	.word	0x0802cf14
 80027f8:	20013914 	.word	0x20013914

080027fc <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80027fc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80027fe:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002802:	4299      	cmp	r1, r3
{
 8002804:	4604      	mov	r4, r0
 8002806:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002808:	d103      	bne.n	8002812 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800280a:	f013 ff7d 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 800280e:	f001 febb 	bl	8004588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002812:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002816:	429d      	cmp	r5, r3
 8002818:	d103      	bne.n	8002822 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800281a:	f013 ff75 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800281e:	f001 ff73 	bl	8004708 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002822:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8002826:	42a5      	cmp	r5, r4
 8002828:	d105      	bne.n	8002836 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800282a:	f013 ff6d 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 800282e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002832:	f001 bf79 	b.w	8004728 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 8002836:	bd38      	pop	{r3, r4, r5, pc}

08002838 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002838:	2200      	movs	r2, #0
 800283a:	f04f 31ff 	mov.w	r1, #4294967295
 800283e:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002842:	6082      	str	r2, [r0, #8]
    }
 8002844:	4770      	bx	lr

08002846 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002846:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002848:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800284a:	4604      	mov	r4, r0
        setX(x);
 800284c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800284e:	4615      	mov	r5, r2
        setX(x);
 8002850:	4798      	blx	r3
        setY(y);
 8002852:	6823      	ldr	r3, [r4, #0]
 8002854:	4629      	mov	r1, r5
 8002856:	4620      	mov	r0, r4
 8002858:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800285a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800285e:	4718      	bx	r3

08002860 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002860:	b570      	push	{r4, r5, r6, lr}
 8002862:	4604      	mov	r4, r0
 8002864:	461d      	mov	r5, r3
 8002866:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800286a:	f7ff ffec 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800286e:	6823      	ldr	r3, [r4, #0]
 8002870:	4629      	mov	r1, r5
 8002872:	4620      	mov	r0, r4
 8002874:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002876:	4798      	blx	r3
        setHeight(height);
 8002878:	6823      	ldr	r3, [r4, #0]
 800287a:	4631      	mov	r1, r6
 800287c:	4620      	mov	r0, r4
 800287e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002880:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002884:	4718      	bx	r3
	...

08002888 <_ZN8touchgfx6WidgetC1Ev>:
 8002888:	2200      	movs	r2, #0
 800288a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800288e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002892:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002896:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800289a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800289e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80028a0:	4a01      	ldr	r2, [pc, #4]	; (80028a8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80028a2:	6002      	str	r2, [r0, #0]
 80028a4:	4770      	bx	lr
 80028a6:	bf00      	nop
 80028a8:	0802cf98 	.word	0x0802cf98

080028ac <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80028ac:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028ae:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80028b0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028b2:	2100      	movs	r1, #0
 80028b4:	f028 fff5 	bl	802b8a2 <memset>
 80028b8:	4620      	mov	r0, r4
 80028ba:	f7ff ffe5 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 80028be:	4b0a      	ldr	r3, [pc, #40]	; (80028e8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80028c0:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80028c2:	4b0a      	ldr	r3, [pc, #40]	; (80028ec <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80028c4:	62a3      	str	r3, [r4, #40]	; 0x28
 80028c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028ca:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80028cc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80028d0:	2300      	movs	r3, #0
 80028d2:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80028d6:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80028da:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028de:	8723      	strh	r3, [r4, #56]	; 0x38
 80028e0:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80028e2:	4620      	mov	r0, r4
 80028e4:	bd10      	pop	{r4, pc}
 80028e6:	bf00      	nop
 80028e8:	0802fcf4 	.word	0x0802fcf4
 80028ec:	0802d000 	.word	0x0802d000

080028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80028f0:	4b1a      	ldr	r3, [pc, #104]	; (800295c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80028f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80028f4:	881b      	ldrh	r3, [r3, #0]
 80028f6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80028f8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80028fa:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80028fc:	d92b      	bls.n	8002956 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028fe:	4b18      	ldr	r3, [pc, #96]	; (8002960 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	b92b      	cbnz	r3, 8002910 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002904:	4b17      	ldr	r3, [pc, #92]	; (8002964 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002906:	4a18      	ldr	r2, [pc, #96]	; (8002968 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002908:	4818      	ldr	r0, [pc, #96]	; (800296c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800290a:	216c      	movs	r1, #108	; 0x6c
 800290c:	f028 fdc4 	bl	802b498 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002910:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002914:	4b16      	ldr	r3, [pc, #88]	; (8002970 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800291c:	4b15      	ldr	r3, [pc, #84]	; (8002974 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800291e:	6818      	ldr	r0, [r3, #0]
 8002920:	f006 f886 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002924:	682b      	ldr	r3, [r5, #0]
 8002926:	9001      	str	r0, [sp, #4]
 8002928:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800292a:	4628      	mov	r0, r5
 800292c:	4798      	blx	r3
 800292e:	682b      	ldr	r3, [r5, #0]
 8002930:	9901      	ldr	r1, [sp, #4]
 8002932:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002934:	4604      	mov	r4, r0
 8002936:	4628      	mov	r0, r5
 8002938:	4798      	blx	r3
 800293a:	682b      	ldr	r3, [r5, #0]
 800293c:	9901      	ldr	r1, [sp, #4]
 800293e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002940:	fb14 f400 	smulbb	r4, r4, r0
 8002944:	4628      	mov	r0, r5
 8002946:	4798      	blx	r3
 8002948:	b2a4      	uxth	r4, r4
 800294a:	1823      	adds	r3, r4, r0
 800294c:	b21b      	sxth	r3, r3
 800294e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002952:	b002      	add	sp, #8
 8002954:	bd70      	pop	{r4, r5, r6, pc}
 8002956:	2300      	movs	r3, #0
 8002958:	e7f9      	b.n	800294e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800295a:	bf00      	nop
 800295c:	20013910 	.word	0x20013910
 8002960:	2001390c 	.word	0x2001390c
 8002964:	0802ce50 	.word	0x0802ce50
 8002968:	0802ce92 	.word	0x0802ce92
 800296c:	0802cecd 	.word	0x0802cecd
 8002970:	20013914 	.word	0x20013914
 8002974:	20013918 	.word	0x20013918

08002978 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800297c:	ed2d 8b06 	vpush	{d8-d10}
 8002980:	4604      	mov	r4, r0
 8002982:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8002984:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002986:	2500      	movs	r5, #0
 8002988:	f015 fb3e 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 800298c:	4b66      	ldr	r3, [pc, #408]	; (8002b28 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 800298e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002990:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002994:	2226      	movs	r2, #38	; 0x26
 8002996:	4629      	mov	r1, r5
 8002998:	4658      	mov	r0, fp
 800299a:	f028 ff82 	bl	802b8a2 <memset>
 800299e:	4658      	mov	r0, fp
 80029a0:	f7ff ff72 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 80029a4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80029a8:	26ff      	movs	r6, #255	; 0xff
 80029aa:	4b60      	ldr	r3, [pc, #384]	; (8002b2c <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80029ac:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80029ae:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80029b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80029b4:	4629      	mov	r1, r5
 80029b6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80029ba:	4650      	mov	r0, sl
        : color(col)
 80029bc:	66a5      	str	r5, [r4, #104]	; 0x68
 80029be:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80029c2:	f028 ff6e 	bl	802b8a2 <memset>
 80029c6:	4650      	mov	r0, sl
 80029c8:	f7ff ff5e 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 80029cc:	4b58      	ldr	r3, [pc, #352]	; (8002b30 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80029ce:	66e3      	str	r3, [r4, #108]	; 0x6c
 80029d0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80029d4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80029d8:	a90a      	add	r1, sp, #40	; 0x28
 80029da:	4650      	mov	r0, sl
 80029dc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80029e0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80029e4:	f011 f987 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80029e8:	4648      	mov	r0, r9
 80029ea:	f7ff ff5f 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80029ee:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80029f2:	4b50      	ldr	r3, [pc, #320]	; (8002b34 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80029f4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80029f8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80029fc:	4638      	mov	r0, r7
 80029fe:	f010 f843 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8002a02:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002a06:	4618      	mov	r0, r3
 8002a08:	9303      	str	r3, [sp, #12]
 8002a0a:	f7ff fd3d 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002a0e:	4b4a      	ldr	r3, [pc, #296]	; (8002b38 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002a10:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002a14:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002a18:	3324      	adds	r3, #36	; 0x24
 8002a1a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002a1e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002a22:	4640      	mov	r0, r8
 8002a24:	f7ff ff42 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002a28:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002a2c:	4618      	mov	r0, r3
 8002a2e:	ee08 3a10 	vmov	s16, r3
 8002a32:	f7ff ff3b 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002a36:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002a3a:	4618      	mov	r0, r3
 8002a3c:	ee08 3a90 	vmov	s17, r3
 8002a40:	f7ff ff34 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002a44:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002a48:	4618      	mov	r0, r3
 8002a4a:	ee09 3a10 	vmov	s18, r3
 8002a4e:	f011 fa93 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002a52:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002a56:	4618      	mov	r0, r3
 8002a58:	ee09 3a90 	vmov	s19, r3
 8002a5c:	f011 fa8c 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002a60:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002a64:	4618      	mov	r0, r3
 8002a66:	ee0a 3a10 	vmov	s20, r3
 8002a6a:	f011 fa85 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002a6e:	4a33      	ldr	r2, [pc, #204]	; (8002b3c <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002a70:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002a74:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002a78:	4a31      	ldr	r2, [pc, #196]	; (8002b40 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002a7a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002a7e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002a82:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8002a86:	f012 f933 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002a8a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002a8e:	462a      	mov	r2, r5
 8002a90:	4658      	mov	r0, fp
 8002a92:	9300      	str	r3, [sp, #0]
 8002a94:	4629      	mov	r1, r5
 8002a96:	23f0      	movs	r3, #240	; 0xf0
 8002a98:	f7ff fee2 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002a9c:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002a9e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002aa2:	66a3      	str	r3, [r4, #104]	; 0x68
 8002aa4:	4659      	mov	r1, fp
 8002aa6:	4630      	mov	r0, r6
 8002aa8:	f00e fb95 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002aac:	462a      	mov	r2, r5
 8002aae:	4650      	mov	r0, sl
 8002ab0:	4629      	mov	r1, r5
 8002ab2:	f7ff fec8 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002ab6:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002ab8:	4650      	mov	r0, sl
 8002aba:	a90a      	add	r1, sp, #40	; 0x28
 8002abc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ac0:	f011 f919 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ac4:	4651      	mov	r1, sl
 8002ac6:	4630      	mov	r0, r6
 8002ac8:	f00e fb85 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002acc:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002ad0:	2159      	movs	r1, #89	; 0x59
 8002ad2:	4648      	mov	r0, r9
 8002ad4:	f7ff feb7 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002ad8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002adc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002ae0:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002ae4:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002ae8:	4650      	mov	r0, sl
 8002aea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002aee:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002af2:	4649      	mov	r1, r9
 8002af4:	4798      	blx	r3
 8002af6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002afa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002afe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b02:	4b10      	ldr	r3, [pc, #64]	; (8002b44 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002b04:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002b06:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002b0a:	b92b      	cbnz	r3, 8002b18 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002b0c:	4b0e      	ldr	r3, [pc, #56]	; (8002b48 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002b0e:	4a0f      	ldr	r2, [pc, #60]	; (8002b4c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002b10:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b12:	480f      	ldr	r0, [pc, #60]	; (8002b50 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002b14:	f028 fcc0 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b18:	4b0e      	ldr	r3, [pc, #56]	; (8002b54 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b1a:	881b      	ldrh	r3, [r3, #0]
 8002b1c:	2b22      	cmp	r3, #34	; 0x22
 8002b1e:	d81d      	bhi.n	8002b5c <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002b20:	4b0d      	ldr	r3, [pc, #52]	; (8002b58 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002b22:	4a0a      	ldr	r2, [pc, #40]	; (8002b4c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002b24:	2161      	movs	r1, #97	; 0x61
 8002b26:	e7f4      	b.n	8002b12 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002b28:	0802d0b8 	.word	0x0802d0b8
 8002b2c:	0802fd84 	.word	0x0802fd84
 8002b30:	0802ff4c 	.word	0x0802ff4c
 8002b34:	0802d010 	.word	0x0802d010
 8002b38:	0802fab8 	.word	0x0802fab8
 8002b3c:	0802d0a0 	.word	0x0802d0a0
 8002b40:	080027fd 	.word	0x080027fd
 8002b44:	2001390c 	.word	0x2001390c
 8002b48:	0802ce50 	.word	0x0802ce50
 8002b4c:	0802cf52 	.word	0x0802cf52
 8002b50:	0802cecd 	.word	0x0802cecd
 8002b54:	20013910 	.word	0x20013910
 8002b58:	0802cf14 	.word	0x0802cf14
        return texts->getText(typedTextId);
 8002b5c:	4b93      	ldr	r3, [pc, #588]	; (8002dac <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002b5e:	2122      	movs	r1, #34	; 0x22
 8002b60:	6818      	ldr	r0, [r3, #0]
 8002b62:	f005 ff65 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8002b66:	4a92      	ldr	r2, [pc, #584]	; (8002db0 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002b68:	4603      	mov	r3, r0
 8002b6a:	2104      	movs	r1, #4
 8002b6c:	4650      	mov	r0, sl
 8002b6e:	f016 ff79 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002b72:	4648      	mov	r0, r9
        wc1 = value;
 8002b74:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002b78:	f010 fcc2 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002b7c:	4b8d      	ldr	r3, [pc, #564]	; (8002db4 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002b7e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002b80:	a90a      	add	r1, sp, #40	; 0x28
 8002b82:	2323      	movs	r3, #35	; 0x23
 8002b84:	4648      	mov	r0, r9
 8002b86:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b8a:	f010 fcd9 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b8e:	4649      	mov	r1, r9
 8002b90:	4630      	mov	r0, r6
 8002b92:	f00e fb20 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002b96:	230a      	movs	r3, #10
 8002b98:	9300      	str	r3, [sp, #0]
 8002b9a:	2232      	movs	r2, #50	; 0x32
 8002b9c:	23f0      	movs	r3, #240	; 0xf0
 8002b9e:	4629      	mov	r1, r5
 8002ba0:	4638      	mov	r0, r7
 8002ba2:	f7ff fe5d 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002ba6:	9b03      	ldr	r3, [sp, #12]
 8002ba8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002bac:	22a0      	movs	r2, #160	; 0xa0
 8002bae:	4611      	mov	r1, r2
 8002bb0:	4638      	mov	r0, r7
 8002bb2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002bb6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002bba:	f010 f87b 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002bbe:	22a0      	movs	r2, #160	; 0xa0
 8002bc0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002bc4:	4638      	mov	r0, r7
 8002bc6:	f010 f880 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002bca:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002bce:	2b20      	cmp	r3, #32
 8002bd0:	d005      	beq.n	8002bde <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002bd2:	2320      	movs	r3, #32
 8002bd4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002bd8:	4638      	mov	r0, r7
 8002bda:	f00f ff75 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002bde:	4638      	mov	r0, r7
 8002be0:	2101      	movs	r1, #1
 8002be2:	f010 f87d 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002be6:	4639      	mov	r1, r7
 8002be8:	4630      	mov	r0, r6
 8002bea:	ad04      	add	r5, sp, #16
        color = newColor;
 8002bec:	f04f 37ff 	mov.w	r7, #4294967295
 8002bf0:	f00e faf1 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002bf4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002bf8:	223c      	movs	r2, #60	; 0x3c
 8002bfa:	4640      	mov	r0, r8
 8002bfc:	2146      	movs	r1, #70	; 0x46
 8002bfe:	f7ff fe22 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002c02:	4641      	mov	r1, r8
 8002c04:	4628      	mov	r0, r5
        color = newColor;
 8002c06:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002c0a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002c0e:	f010 f9fd 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c12:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c16:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002c1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002c1e:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002db4 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002c22:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c26:	231b      	movs	r3, #27
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002c28:	a90a      	add	r1, sp, #40	; 0x28
 8002c2a:	4640      	mov	r0, r8
 8002c2c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c30:	f010 fc86 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c34:	4641      	mov	r1, r8
 8002c36:	4630      	mov	r0, r6
 8002c38:	f00e facd 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002c3c:	ee18 0a10 	vmov	r0, s16
 8002c40:	2223      	movs	r2, #35	; 0x23
 8002c42:	2145      	movs	r1, #69	; 0x45
 8002c44:	f7ff fdff 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002c48:	ee18 1a10 	vmov	r1, s16
 8002c4c:	4628      	mov	r0, r5
        color = newColor;
 8002c4e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002c52:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002c56:	f010 f9d9 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c5e:	ee18 3a10 	vmov	r3, s16
 8002c62:	333c      	adds	r3, #60	; 0x3c
 8002c64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002c68:	2352      	movs	r3, #82	; 0x52
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002c6a:	ee18 0a10 	vmov	r0, s16
 8002c6e:	a90a      	add	r1, sp, #40	; 0x28
 8002c70:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c74:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c78:	f010 fc62 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c7c:	ee18 1a10 	vmov	r1, s16
 8002c80:	4630      	mov	r0, r6
 8002c82:	f00e faa8 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002c86:	ee18 0a90 	vmov	r0, s17
 8002c8a:	220c      	movs	r2, #12
 8002c8c:	2136      	movs	r1, #54	; 0x36
 8002c8e:	f7ff fdda 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002c92:	ee18 1a90 	vmov	r1, s17
 8002c96:	4628      	mov	r0, r5
        color = newColor;
 8002c98:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002c9c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002ca0:	f010 f9b4 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ca4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ca8:	ee18 3a90 	vmov	r3, s17
 8002cac:	333c      	adds	r3, #60	; 0x3c
 8002cae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002cb2:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002cb4:	ee18 0a90 	vmov	r0, s17
 8002cb8:	a90a      	add	r1, sp, #40	; 0x28
 8002cba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002cbe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002cc2:	f010 fc3d 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002cc6:	ee18 1a90 	vmov	r1, s17
 8002cca:	4630      	mov	r0, r6
 8002ccc:	f00e fa83 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002cd0:	ee19 0a10 	vmov	r0, s18
 8002cd4:	22f0      	movs	r2, #240	; 0xf0
 8002cd6:	2121      	movs	r1, #33	; 0x21
 8002cd8:	f7ff fdb5 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002cdc:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ce0:	aa0a      	add	r2, sp, #40	; 0x28
 8002ce2:	f04f 0802 	mov.w	r8, #2
 8002ce6:	a909      	add	r1, sp, #36	; 0x24
 8002ce8:	ee19 0a10 	vmov	r0, s18
 8002cec:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002cf0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002cf4:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002cf8:	f010 fe07 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002cfc:	2350      	movs	r3, #80	; 0x50
 8002cfe:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002d02:	3510      	adds	r5, #16
        updateTextPosition();
 8002d04:	ee19 0a10 	vmov	r0, s18
 8002d08:	f7ff fdf2 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002d0c:	ee19 1a10 	vmov	r1, s18
 8002d10:	4630      	mov	r0, r6
        colorPressed = col;
 8002d12:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002d16:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002d1a:	f00e fa5c 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002d1e:	ee19 0a90 	vmov	r0, s19
 8002d22:	22aa      	movs	r2, #170	; 0xaa
 8002d24:	2121      	movs	r1, #33	; 0x21
 8002d26:	f7ff fd8e 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d2a:	aa0a      	add	r2, sp, #40	; 0x28
 8002d2c:	a909      	add	r1, sp, #36	; 0x24
 8002d2e:	ee19 0a90 	vmov	r0, s19
 8002d32:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002d36:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002d3a:	f010 fde6 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002d3e:	234f      	movs	r3, #79	; 0x4f
 8002d40:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002d44:	ee19 0a90 	vmov	r0, s19
 8002d48:	f7ff fdd2 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002d4c:	ee19 1a90 	vmov	r1, s19
 8002d50:	4630      	mov	r0, r6
        colorPressed = col;
 8002d52:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002d56:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002d5a:	f00e fa3c 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002d5e:	ee1a 0a10 	vmov	r0, s20
 8002d62:	2264      	movs	r2, #100	; 0x64
 8002d64:	2121      	movs	r1, #33	; 0x21
 8002d66:	f7ff fd6e 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d6a:	aa0a      	add	r2, sp, #40	; 0x28
 8002d6c:	a909      	add	r1, sp, #36	; 0x24
 8002d6e:	ee1a 0a10 	vmov	r0, s20
 8002d72:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002d76:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002d7a:	f010 fdc6 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002d7e:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 8002d80:	ee1a 0a10 	vmov	r0, s20
 8002d84:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002d88:	f7ff fdb2 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002d8c:	4630      	mov	r0, r6
        colorPressed = col;
 8002d8e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002d92:	ee1a 1a10 	vmov	r1, s20
 8002d96:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002d9a:	f00e fa1c 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d9e:	4620      	mov	r0, r4
 8002da0:	b00d      	add	sp, #52	; 0x34
 8002da2:	ecbd 8b06 	vpop	{d8-d10}
 8002da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002daa:	bf00      	nop
 8002dac:	20013918 	.word	0x20013918
 8002db0:	0802cf8a 	.word	0x0802cf8a
 8002db4:	0802d000 	.word	0x0802d000

08002db8 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002db8:	4770      	bx	lr

08002dba <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002dba:	4770      	bx	lr

08002dbc <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002dbc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002dbe:	68c2      	ldr	r2, [r0, #12]
 8002dc0:	6844      	ldr	r4, [r0, #4]
 8002dc2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002dc4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002dc6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002dca:	07d2      	lsls	r2, r2, #31
 8002dcc:	bf48      	it	mi
 8002dce:	5962      	ldrmi	r2, [r4, r5]
 8002dd0:	689b      	ldr	r3, [r3, #8]
    }
 8002dd2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002dd4:	bf48      	it	mi
 8002dd6:	58d3      	ldrmi	r3, [r2, r3]
 8002dd8:	4718      	bx	r3

08002dda <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002dda:	6843      	ldr	r3, [r0, #4]
 8002ddc:	b12b      	cbz	r3, 8002dea <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002dde:	6883      	ldr	r3, [r0, #8]
 8002de0:	b92b      	cbnz	r3, 8002dee <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002de2:	68c0      	ldr	r0, [r0, #12]
 8002de4:	f000 0001 	and.w	r0, r0, #1
 8002de8:	4770      	bx	lr
 8002dea:	4618      	mov	r0, r3
 8002dec:	4770      	bx	lr
 8002dee:	2001      	movs	r0, #1
    }
 8002df0:	4770      	bx	lr

08002df2 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002df2:	b510      	push	{r4, lr}
 8002df4:	2110      	movs	r1, #16
 8002df6:	4604      	mov	r4, r0
 8002df8:	f027 fd3b 	bl	802a872 <_ZdlPvj>
 8002dfc:	4620      	mov	r0, r4
 8002dfe:	bd10      	pop	{r4, pc}

08002e00 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002e00:	b510      	push	{r4, lr}
 8002e02:	4b03      	ldr	r3, [pc, #12]	; (8002e10 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002e04:	6003      	str	r3, [r0, #0]
 8002e06:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e08:	f011 ff7c 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e0c:	4620      	mov	r0, r4
 8002e0e:	bd10      	pop	{r4, pc}
 8002e10:	0802d104 	.word	0x0802d104

08002e14 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002e14:	b507      	push	{r0, r1, r2, lr}
 8002e16:	4b07      	ldr	r3, [pc, #28]	; (8002e34 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002e18:	6003      	str	r3, [r0, #0]
 8002e1a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e1c:	f011 ff72 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e20:	9801      	ldr	r0, [sp, #4]
 8002e22:	f241 015c 	movw	r1, #4188	; 0x105c
 8002e26:	f027 fd24 	bl	802a872 <_ZdlPvj>
 8002e2a:	9801      	ldr	r0, [sp, #4]
 8002e2c:	b003      	add	sp, #12
 8002e2e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e32:	bf00      	nop
 8002e34:	0802d104 	.word	0x0802d104

08002e38 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002e38:	3098      	adds	r0, #152	; 0x98
 8002e3a:	4288      	cmp	r0, r1
{
 8002e3c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002e3e:	d105      	bne.n	8002e4c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002e40:	f013 fc62 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002e44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002e48:	f001 bc4e 	b.w	80046e8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002e4c:	bd08      	pop	{r3, pc}
	...

08002e50 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e54:	ed2d 8b02 	vpush	{d8}
 8002e58:	4604      	mov	r4, r0
 8002e5a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002e5c:	46a1      	mov	r9, r4
 8002e5e:	2500      	movs	r5, #0
 8002e60:	f015 f8d2 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8002e64:	4ba5      	ldr	r3, [pc, #660]	; (80030fc <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002e66:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e68:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002e6c:	2226      	movs	r2, #38	; 0x26
 8002e6e:	4629      	mov	r1, r5
 8002e70:	4648      	mov	r0, r9
 8002e72:	f028 fd16 	bl	802b8a2 <memset>
 8002e76:	4648      	mov	r0, r9
 8002e78:	f7ff fd06 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8002e7c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002e80:	26ff      	movs	r6, #255	; 0xff
 8002e82:	4b9f      	ldr	r3, [pc, #636]	; (8003100 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002e84:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002e86:	2226      	movs	r2, #38	; 0x26
 8002e88:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e8c:	4629      	mov	r1, r5
 8002e8e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002e92:	4640      	mov	r0, r8
 8002e94:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e96:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002e9a:	f028 fd02 	bl	802b8a2 <memset>
 8002e9e:	4640      	mov	r0, r8
 8002ea0:	f7ff fcf2 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8002ea4:	4b97      	ldr	r3, [pc, #604]	; (8003104 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002ea6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002ea8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002eac:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002eb0:	a90a      	add	r1, sp, #40	; 0x28
 8002eb2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002eb6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002eb8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002ebc:	f010 ff1b 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ec0:	4658      	mov	r0, fp
 8002ec2:	f011 f859 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002ec6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002eca:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002ece:	4618      	mov	r0, r3
 8002ed0:	ee08 3a90 	vmov	s17, r3
 8002ed4:	f7ff fcea 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002ed8:	4638      	mov	r0, r7
 8002eda:	f00f fdd5 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8002ede:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002ee2:	4618      	mov	r0, r3
 8002ee4:	9303      	str	r3, [sp, #12]
 8002ee6:	f7ff facf 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002eea:	4b87      	ldr	r3, [pc, #540]	; (8003108 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002eec:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002ef0:	3324      	adds	r3, #36	; 0x24
 8002ef2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002ef6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002efa:	4618      	mov	r0, r3
 8002efc:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002f00:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002f04:	ee08 3a10 	vmov	s16, r3
 8002f08:	f7ff fcd0 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002f0c:	4650      	mov	r0, sl
 8002f0e:	f7ff fccd 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f12:	4a7e      	ldr	r2, [pc, #504]	; (800310c <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002f14:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002f18:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002f1c:	4a7c      	ldr	r2, [pc, #496]	; (8003110 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002f1e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002f22:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002f26:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002f2a:	f011 fee1 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002f2e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f32:	462a      	mov	r2, r5
 8002f34:	4648      	mov	r0, r9
 8002f36:	9300      	str	r3, [sp, #0]
 8002f38:	4629      	mov	r1, r5
 8002f3a:	23f0      	movs	r3, #240	; 0xf0
 8002f3c:	f7ff fc90 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f40:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002f42:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f46:	66a3      	str	r3, [r4, #104]	; 0x68
 8002f48:	4649      	mov	r1, r9
 8002f4a:	4630      	mov	r0, r6
 8002f4c:	f00e f943 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f50:	462a      	mov	r2, r5
 8002f52:	4640      	mov	r0, r8
 8002f54:	4629      	mov	r1, r5
 8002f56:	f7ff fc76 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002f5a:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f5c:	4640      	mov	r0, r8
 8002f5e:	a90a      	add	r1, sp, #40	; 0x28
 8002f60:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f64:	f010 fec7 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f68:	4641      	mov	r1, r8
 8002f6a:	4630      	mov	r0, r6
 8002f6c:	f00e f933 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f70:	4658      	mov	r0, fp
 8002f72:	f240 1201 	movw	r2, #257	; 0x101
 8002f76:	2121      	movs	r1, #33	; 0x21
 8002f78:	f7ff fc65 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002f7c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002f7e:	aa0a      	add	r2, sp, #40	; 0x28
 8002f80:	a909      	add	r1, sp, #36	; 0x24
 8002f82:	4658      	mov	r0, fp
 8002f84:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f88:	2302      	movs	r3, #2
 8002f8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f8e:	f010 fcbc 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002f92:	2317      	movs	r3, #23
        updateTextPosition();
 8002f94:	4658      	mov	r0, fp
 8002f96:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002f9a:	f7ff fca9 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002f9e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002fa2:	330c      	adds	r3, #12
        color = col;
 8002fa4:	f04f 39ff 	mov.w	r9, #4294967295
 8002fa8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002fac:	4659      	mov	r1, fp
 8002fae:	4630      	mov	r0, r6
        colorPressed = col;
 8002fb0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002fb4:	f00e f90f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002fb8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002fbc:	223c      	movs	r2, #60	; 0x3c
 8002fbe:	ee18 0a90 	vmov	r0, s17
 8002fc2:	2120      	movs	r1, #32
 8002fc4:	f7ff fc3f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8002fc8:	ee18 1a90 	vmov	r1, s17
 8002fcc:	4640      	mov	r0, r8
        color = newColor;
 8002fce:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002fd2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002fd6:	f010 f819 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fda:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fde:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002fe2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002fe6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003114 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002fea:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fee:	2318      	movs	r3, #24
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002ff0:	ee18 0a90 	vmov	r0, s17
 8002ff4:	a90a      	add	r1, sp, #40	; 0x28
 8002ff6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ffa:	f010 faa1 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ffe:	ee18 1a90 	vmov	r1, s17
 8003002:	4630      	mov	r0, r6
 8003004:	f00e f8e7 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003008:	230a      	movs	r3, #10
 800300a:	9300      	str	r3, [sp, #0]
 800300c:	2232      	movs	r2, #50	; 0x32
 800300e:	23f0      	movs	r3, #240	; 0xf0
 8003010:	4629      	mov	r1, r5
 8003012:	4638      	mov	r0, r7
 8003014:	f7ff fc24 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003018:	9b03      	ldr	r3, [sp, #12]
 800301a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800301e:	22a0      	movs	r2, #160	; 0xa0
 8003020:	4611      	mov	r1, r2
 8003022:	4638      	mov	r0, r7
 8003024:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003028:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800302c:	f00f fe42 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003030:	22a0      	movs	r2, #160	; 0xa0
 8003032:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003036:	4638      	mov	r0, r7
 8003038:	f00f fe47 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800303c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003040:	2b20      	cmp	r3, #32
 8003042:	d005      	beq.n	8003050 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8003044:	2320      	movs	r3, #32
 8003046:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800304a:	4638      	mov	r0, r7
 800304c:	f00f fd3c 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003050:	4638      	mov	r0, r7
 8003052:	2101      	movs	r1, #1
 8003054:	f00f fe44 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003058:	4639      	mov	r1, r7
 800305a:	4630      	mov	r0, r6
 800305c:	f00e f8bb 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003060:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003064:	ee18 0a10 	vmov	r0, s16
 8003068:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800306a:	2500      	movs	r5, #0
 800306c:	2145      	movs	r1, #69	; 0x45
 800306e:	f7ff fbea 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003072:	ee18 1a10 	vmov	r1, s16
 8003076:	4640      	mov	r0, r8
        color = newColor;
 8003078:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800307c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003080:	f00f ffc4 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003084:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003088:	ee18 3a10 	vmov	r3, s16
 800308c:	333c      	adds	r3, #60	; 0x3c
 800308e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003092:	2319      	movs	r3, #25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003094:	ee18 0a10 	vmov	r0, s16
 8003098:	a90a      	add	r1, sp, #40	; 0x28
 800309a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800309e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030a2:	f010 fa4d 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030a6:	ee18 1a10 	vmov	r1, s16
 80030aa:	4630      	mov	r0, r6
 80030ac:	f00e f893 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80030b0:	220c      	movs	r2, #12
 80030b2:	4650      	mov	r0, sl
 80030b4:	2136      	movs	r1, #54	; 0x36
 80030b6:	f7ff fbc6 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80030ba:	4651      	mov	r1, sl
 80030bc:	4640      	mov	r0, r8
        color = newColor;
 80030be:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80030c2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80030c6:	f00f ffa1 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030ca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030ce:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80030d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80030d6:	231a      	movs	r3, #26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 80030d8:	a90a      	add	r1, sp, #40	; 0x28
 80030da:	4650      	mov	r0, sl
 80030dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030e0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030e4:	f010 fa2c 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030e8:	4630      	mov	r0, r6
 80030ea:	4651      	mov	r1, sl
 80030ec:	f00e f873 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030f0:	4620      	mov	r0, r4
 80030f2:	b00d      	add	sp, #52	; 0x34
 80030f4:	ecbd 8b02 	vpop	{d8}
 80030f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030fc:	0802d104 	.word	0x0802d104
 8003100:	0802fd84 	.word	0x0802fd84
 8003104:	0802ff4c 	.word	0x0802ff4c
 8003108:	0802fab8 	.word	0x0802fab8
 800310c:	0802d0ec 	.word	0x0802d0ec
 8003110:	08002e39 	.word	0x08002e39
 8003114:	0802d000 	.word	0x0802d000

08003118 <_ZN23Calibration_PadViewBase21scrollList1UpdateItemER23Configuration_Containers>:
    virtual void setupScreen();

    virtual void scrollList1UpdateItem(Configuration_Container& item, int16_t itemIndex)
    {
        // Override and implement this function in Calibration_Pad
    }
 8003118:	4770      	bx	lr

0800311a <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 800311a:	4770      	bx	lr

0800311c <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 800311c:	6803      	ldr	r3, [r0, #0]
 800311e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003120:	4718      	bx	r3

08003122 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 8003122:	2002      	movs	r0, #2
 8003124:	4770      	bx	lr

08003126 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003126:	4770      	bx	lr

08003128 <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 8003128:	4770      	bx	lr
	...

0800312c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 800312c:	b538      	push	{r3, r4, r5, lr}
 800312e:	4605      	mov	r5, r0
 8003130:	4b07      	ldr	r3, [pc, #28]	; (8003150 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev+0x24>)
 8003132:	f845 3b04 	str.w	r3, [r5], #4
 8003136:	f8d0 3678 	ldr.w	r3, [r0, #1656]	; 0x678
 800313a:	4604      	mov	r4, r0
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	f500 60cf 	add.w	r0, r0, #1656	; 0x678
 8003142:	4798      	blx	r3
 8003144:	6863      	ldr	r3, [r4, #4]
 8003146:	4628      	mov	r0, r5
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	4798      	blx	r3
 800314c:	4620      	mov	r0, r4
 800314e:	bd38      	pop	{r3, r4, r5, pc}
 8003150:	0802d2c0 	.word	0x0802d2c0

08003154 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003154:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003156:	68c2      	ldr	r2, [r0, #12]
 8003158:	6844      	ldr	r4, [r0, #4]
 800315a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800315c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800315e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003162:	07d2      	lsls	r2, r2, #31
 8003164:	bf48      	it	mi
 8003166:	5962      	ldrmi	r2, [r4, r5]
 8003168:	689b      	ldr	r3, [r3, #8]
    }
 800316a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800316c:	bf48      	it	mi
 800316e:	58d3      	ldrmi	r3, [r2, r3]
 8003170:	4718      	bx	r3

08003172 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003172:	6843      	ldr	r3, [r0, #4]
 8003174:	b12b      	cbz	r3, 8003182 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003176:	6883      	ldr	r3, [r0, #8]
 8003178:	b92b      	cbnz	r3, 8003186 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800317a:	68c0      	ldr	r0, [r0, #12]
 800317c:	f000 0001 	and.w	r0, r0, #1
 8003180:	4770      	bx	lr
 8003182:	4618      	mov	r0, r3
 8003184:	4770      	bx	lr
 8003186:	2001      	movs	r0, #1
    }
 8003188:	4770      	bx	lr

0800318a <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
    virtual void execute(T1 t1, T2 t2, T3 t3)
 800318a:	b4f0      	push	{r4, r5, r6, r7}
        (pobject->*pmemfun)(t1, t2, t3);
 800318c:	68c5      	ldr	r5, [r0, #12]
 800318e:	6846      	ldr	r6, [r0, #4]
 8003190:	106f      	asrs	r7, r5, #1
    virtual void execute(T1 t1, T2 t2, T3 t3)
 8003192:	4604      	mov	r4, r0
        (pobject->*pmemfun)(t1, t2, t3);
 8003194:	eb06 0065 	add.w	r0, r6, r5, asr #1
 8003198:	07ed      	lsls	r5, r5, #31
 800319a:	68a4      	ldr	r4, [r4, #8]
 800319c:	bf44      	itt	mi
 800319e:	59f5      	ldrmi	r5, [r6, r7]
 80031a0:	592c      	ldrmi	r4, [r5, r4]
 80031a2:	46a4      	mov	ip, r4
    }
 80031a4:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun)(t1, t2, t3);
 80031a6:	4760      	bx	ip

080031a8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80031a8:	6843      	ldr	r3, [r0, #4]
 80031aa:	b12b      	cbz	r3, 80031b8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 80031ac:	6883      	ldr	r3, [r0, #8]
 80031ae:	b92b      	cbnz	r3, 80031bc <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 80031b0:	68c0      	ldr	r0, [r0, #12]
 80031b2:	f000 0001 	and.w	r0, r0, #1
 80031b6:	4770      	bx	lr
 80031b8:	4618      	mov	r0, r3
 80031ba:	4770      	bx	lr
 80031bc:	2001      	movs	r0, #1
    }
 80031be:	4770      	bx	lr

080031c0 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED0Ev>:
 80031c0:	b510      	push	{r4, lr}
 80031c2:	4604      	mov	r4, r0
 80031c4:	f7ff ffb2 	bl	800312c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev>
 80031c8:	4620      	mov	r0, r4
 80031ca:	f640 41ec 	movw	r1, #3308	; 0xcec
 80031ce:	f027 fb50 	bl	802a872 <_ZdlPvj>
 80031d2:	4620      	mov	r0, r4
 80031d4:	bd10      	pop	{r4, pc}

080031d6 <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 80031d6:	b510      	push	{r4, lr}
 80031d8:	2110      	movs	r1, #16
 80031da:	4604      	mov	r4, r0
 80031dc:	f027 fb49 	bl	802a872 <_ZdlPvj>
 80031e0:	4620      	mov	r0, r4
 80031e2:	bd10      	pop	{r4, pc}

080031e4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031e4:	b510      	push	{r4, lr}
 80031e6:	2110      	movs	r1, #16
 80031e8:	4604      	mov	r4, r0
 80031ea:	f027 fb42 	bl	802a872 <_ZdlPvj>
 80031ee:	4620      	mov	r0, r4
 80031f0:	bd10      	pop	{r4, pc}
	...

080031f4 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80031f4:	b510      	push	{r4, lr}
 80031f6:	4b05      	ldr	r3, [pc, #20]	; (800320c <_ZN23Calibration_PadViewBaseD1Ev+0x18>)
 80031f8:	6003      	str	r3, [r0, #0]
 80031fa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80031fc:	f011 fd82 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003200:	f504 7061 	add.w	r0, r4, #900	; 0x384
 8003204:	f7ff ff92 	bl	800312c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EED1Ev>
}
 8003208:	4620      	mov	r0, r4
 800320a:	bd10      	pop	{r4, pc}
 800320c:	0802d308 	.word	0x0802d308

08003210 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003210:	b510      	push	{r4, lr}
 8003212:	4604      	mov	r4, r0
}
 8003214:	f7ff ffee 	bl	80031f4 <_ZN23Calibration_PadViewBaseD1Ev>
 8003218:	4620      	mov	r0, r4
 800321a:	f44f 51f5 	mov.w	r1, #7840	; 0x1ea0
 800321e:	f027 fb28 	bl	802a872 <_ZdlPvj>
 8003222:	4620      	mov	r0, r4
 8003224:	bd10      	pop	{r4, pc}

08003226 <_ZN23Calibration_PadViewBase11setupScreenEv>:
{
 8003226:	b510      	push	{r4, lr}
 8003228:	4604      	mov	r4, r0
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 800322a:	f500 703b 	add.w	r0, r0, #748	; 0x2ec
 800322e:	f00d fa80 	bl	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
        scrollList1ListItems[i].initialize();
 8003232:	f504 7062 	add.w	r0, r4, #904	; 0x388
 8003236:	f005 fd25 	bl	8008c84 <_ZN23Configuration_Container10initializeEv>
 800323a:	f8d4 39fc 	ldr.w	r3, [r4, #2556]	; 0x9fc
 800323e:	f604 10fc 	addw	r0, r4, #2556	; 0x9fc
 8003242:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003246:	4798      	blx	r3
    transitionBegins();
 8003248:	6823      	ldr	r3, [r4, #0]
 800324a:	4620      	mov	r0, r4
 800324c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
 800324e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    transitionBegins();
 8003252:	4718      	bx	r3

08003254 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 8003254:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 8003256:	b28b      	uxth	r3, r1
 8003258:	2b01      	cmp	r3, #1
 800325a:	d905      	bls.n	8003268 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x14>
 800325c:	4b05      	ldr	r3, [pc, #20]	; (8003274 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x20>)
 800325e:	4a06      	ldr	r2, [pc, #24]	; (8003278 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x24>)
 8003260:	4806      	ldr	r0, [pc, #24]	; (800327c <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi2EE11getDrawableEs+0x28>)
 8003262:	2154      	movs	r1, #84	; 0x54
 8003264:	f028 f918 	bl	802b498 <__assert_func>
        return &element[index];
 8003268:	f240 6374 	movw	r3, #1652	; 0x674
 800326c:	fb01 0003 	mla	r0, r1, r3, r0
    }
 8003270:	3004      	adds	r0, #4
 8003272:	bd08      	pop	{r3, pc}
 8003274:	0802d130 	.word	0x0802d130
 8003278:	0802d14b 	.word	0x0802d14b
 800327c:	0802d1e6 	.word	0x0802d1e6

08003280 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003280:	3098      	adds	r0, #152	; 0x98
 8003282:	4288      	cmp	r0, r1
{
 8003284:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003286:	d105      	bne.n	8003294 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003288:	f013 fa3e 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
}
 800328c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003290:	f001 ba2a 	b.w	80046e8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003294:	bd08      	pop	{r3, pc}
	...

08003298 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:
}

void Calibration_PadViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 8003298:	b570      	push	{r4, r5, r6, lr}
    if (items == &scrollList1ListItems)
 800329a:	f500 7461 	add.w	r4, r0, #900	; 0x384
 800329e:	428c      	cmp	r4, r1
{
 80032a0:	4615      	mov	r5, r2
 80032a2:	461a      	mov	r2, r3
    if (items == &scrollList1ListItems)
 80032a4:	d111      	bne.n	80032ca <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x32>
    {
        scrollList1UpdateItem(scrollList1ListItems[containerIndex], itemIndex);
 80032a6:	6803      	ldr	r3, [r0, #0]
        assert(index >= 0 && index < SIZE);
 80032a8:	2d01      	cmp	r5, #1
 80032aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032ac:	d905      	bls.n	80032ba <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x22>
 80032ae:	4b07      	ldr	r3, [pc, #28]	; (80032cc <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x34>)
 80032b0:	4a07      	ldr	r2, [pc, #28]	; (80032d0 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x38>)
 80032b2:	4808      	ldr	r0, [pc, #32]	; (80032d4 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x3c>)
 80032b4:	2161      	movs	r1, #97	; 0x61
 80032b6:	f028 f8ef 	bl	802b498 <__assert_func>
        return element[index];
 80032ba:	f240 6174 	movw	r1, #1652	; 0x674
 80032be:	fb05 4101 	mla	r1, r5, r1, r4
 80032c2:	3104      	adds	r1, #4
    }
}
 80032c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        scrollList1UpdateItem(scrollList1ListItems[containerIndex], itemIndex);
 80032c8:	4718      	bx	r3
}
 80032ca:	bd70      	pop	{r4, r5, r6, pc}
 80032cc:	0802d130 	.word	0x0802d130
 80032d0:	0802d245 	.word	0x0802d245
 80032d4:	0802d1e6 	.word	0x0802d1e6

080032d8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 80032d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032dc:	ed2d 8b06 	vpush	{d8-d10}
 80032e0:	4604      	mov	r4, r0
 80032e2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 80032e4:	46a3      	mov	fp, r4
 80032e6:	2500      	movs	r5, #0
 80032e8:	f014 fe8e 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 80032ec:	4bec      	ldr	r3, [pc, #944]	; (80036a0 <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 80032ee:	63e5      	str	r5, [r4, #60]	; 0x3c
 80032f0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80032f4:	2226      	movs	r2, #38	; 0x26
 80032f6:	4629      	mov	r1, r5
 80032f8:	4658      	mov	r0, fp
 80032fa:	f028 fad2 	bl	802b8a2 <memset>
 80032fe:	4658      	mov	r0, fp
 8003300:	f7ff fac2 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8003304:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003308:	26ff      	movs	r6, #255	; 0xff
 800330a:	4be6      	ldr	r3, [pc, #920]	; (80036a4 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>)
 800330c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800330e:	2226      	movs	r2, #38	; 0x26
 8003310:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003314:	4629      	mov	r1, r5
 8003316:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800331a:	4650      	mov	r0, sl
 800331c:	66a5      	str	r5, [r4, #104]	; 0x68
 800331e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003322:	f028 fabe 	bl	802b8a2 <memset>
 8003326:	4650      	mov	r0, sl
 8003328:	f7ff faae 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 800332c:	4bde      	ldr	r3, [pc, #888]	; (80036a8 <_ZN23Calibration_PadViewBaseC1Ev+0x3d0>)
 800332e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003330:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003334:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003338:	a90a      	add	r1, sp, #40	; 0x28
 800333a:	4650      	mov	r0, sl
        : Widget(), bitmap(bmp), alpha(255)
 800333c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003340:	f010 fcd9 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003344:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003348:	4618      	mov	r0, r3
 800334a:	ee09 3a10 	vmov	s18, r3
 800334e:	f010 fe13 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003352:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003356:	f504 7994 	add.w	r9, r4, #296	; 0x128
 800335a:	4618      	mov	r0, r3
 800335c:	ee09 3a90 	vmov	s19, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003360:	4ed2      	ldr	r6, [pc, #840]	; (80036ac <_ZN23Calibration_PadViewBaseC1Ev+0x3d4>)
 8003362:	f7ff faa3 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003366:	4648      	mov	r0, r9
 8003368:	f00f fb8e 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 800336c:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8003370:	f106 0724 	add.w	r7, r6, #36	; 0x24
 8003374:	4618      	mov	r0, r3
 8003376:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 800337a:	9302      	str	r3, [sp, #8]
 800337c:	f7ff f884 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003380:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8003384:	f8c4 71a0 	str.w	r7, [r4, #416]	; 0x1a0
 8003388:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800338c:	4640      	mov	r0, r8
 800338e:	f00f fb7b 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8003392:	f504 7307 	add.w	r3, r4, #540	; 0x21c
 8003396:	4618      	mov	r0, r3
 8003398:	9303      	str	r3, [sp, #12]
 800339a:	f7ff f875 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800339e:	f504 730c 	add.w	r3, r4, #560	; 0x230
 80033a2:	f8c4 621c 	str.w	r6, [r4, #540]	; 0x21c
 80033a6:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
 80033aa:	4618      	mov	r0, r3
 80033ac:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
 80033b0:	ee08 3a10 	vmov	s16, r3
 80033b4:	f7ff fa7a 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80033b8:	f504 731e 	add.w	r3, r4, #632	; 0x278
 80033bc:	4618      	mov	r0, r3
 80033be:	f504 7630 	add.w	r6, r4, #704	; 0x2c0
 80033c2:	ee08 3a90 	vmov	s17, r3
 80033c6:	f7ff fa71 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80033ca:	4630      	mov	r0, r6
 80033cc:	f00d fc08 	bl	8010be0 <_ZN8touchgfx10ScrollListC1Ev>
 80033d0:	f504 7361 	add.w	r3, r4, #900	; 0x384
 80033d4:	ee0a 3a10 	vmov	s20, r3
class DrawableListItems : public DrawableListItemsInterface
 80033d8:	4bb5      	ldr	r3, [pc, #724]	; (80036b0 <_ZN23Calibration_PadViewBaseC1Ev+0x3d8>)
 80033da:	f8c4 3384 	str.w	r3, [r4, #900]	; 0x384
 80033de:	f504 7062 	add.w	r0, r4, #904	; 0x388
 80033e2:	f005 fc45 	bl	8008c70 <_ZN23Configuration_ContainerC1Ev>
 80033e6:	f604 10fc 	addw	r0, r4, #2556	; 0x9fc
 80033ea:	f005 fc41 	bl	8008c70 <_ZN23Configuration_ContainerC1Ev>
        : pobject(pObject), pmemfun(pmemfun_3)
 80033ee:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80033f2:	4ab0      	ldr	r2, [pc, #704]	; (80036b4 <_ZN23Calibration_PadViewBaseC1Ev+0x3dc>)
 80033f4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
 80033f8:	4aaf      	ldr	r2, [pc, #700]	; (80036b8 <_ZN23Calibration_PadViewBaseC1Ev+0x3e0>)
 80033fa:	f8c3 2e88 	str.w	r2, [r3, #3720]	; 0xe88
        : pobject(pObject), pmemfun(pmemfun_1)
 80033fe:	4aaf      	ldr	r2, [pc, #700]	; (80036bc <_ZN23Calibration_PadViewBaseC1Ev+0x3e4>)
 8003400:	f8c3 2e90 	str.w	r2, [r3, #3728]	; 0xe90
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003404:	f504 5083 	add.w	r0, r4, #4192	; 0x1060
 8003408:	4aad      	ldr	r2, [pc, #692]	; (80036c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3e8>)
 800340a:	f8c3 2e98 	str.w	r2, [r3, #3736]	; 0xe98
        : pobject(pObject), pmemfun(pmemfun_3)
 800340e:	f8c3 4e84 	str.w	r4, [r3, #3716]	; 0xe84
 8003412:	f8c3 5e8c 	str.w	r5, [r3, #3724]	; 0xe8c
        : pobject(pObject), pmemfun(pmemfun_1)
 8003416:	f8c3 4e94 	str.w	r4, [r3, #3732]	; 0xe94
 800341a:	f8c3 5e9c 	str.w	r5, [r3, #3740]	; 0xe9c
 800341e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003422:	3010      	adds	r0, #16
 8003424:	f011 fc64 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003428:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800342c:	462a      	mov	r2, r5
 800342e:	4658      	mov	r0, fp
 8003430:	9300      	str	r3, [sp, #0]
 8003432:	4629      	mov	r1, r5
 8003434:	23f0      	movs	r3, #240	; 0xf0
 8003436:	f7ff fa13 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 800343a:	1d27      	adds	r7, r4, #4
        color = newColor;
 800343c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003440:	66a3      	str	r3, [r4, #104]	; 0x68
 8003442:	4659      	mov	r1, fp
 8003444:	4638      	mov	r0, r7
 8003446:	f00d fec6 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800344a:	462a      	mov	r2, r5
 800344c:	4650      	mov	r0, sl
 800344e:	4629      	mov	r1, r5
 8003450:	f7ff f9f9 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8003454:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003456:	4650      	mov	r0, sl
 8003458:	a90a      	add	r1, sp, #40	; 0x28
 800345a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800345e:	f010 fc4a 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003462:	4651      	mov	r1, sl
 8003464:	4638      	mov	r0, r7
 8003466:	f00d feb6 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800346a:	ee19 0a10 	vmov	r0, s18
 800346e:	f240 1201 	movw	r2, #257	; 0x101
 8003472:	2121      	movs	r1, #33	; 0x21
 8003474:	f7ff f9e7 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8003478:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800347a:	aa0a      	add	r2, sp, #40	; 0x28
 800347c:	a909      	add	r1, sp, #36	; 0x24
 800347e:	ee19 0a10 	vmov	r0, s18
 8003482:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003486:	2302      	movs	r3, #2
 8003488:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800348c:	f010 fa3d 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003490:	231d      	movs	r3, #29
        updateTextPosition();
 8003492:	ee19 0a10 	vmov	r0, s18
 8003496:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800349a:	f7ff fa29 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800349e:	f504 53f4 	add.w	r3, r4, #7808	; 0x1e80
 80034a2:	3310      	adds	r3, #16
        color = col;
 80034a4:	f04f 3aff 	mov.w	sl, #4294967295
 80034a8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80034ac:	ee19 1a10 	vmov	r1, s18
 80034b0:	4638      	mov	r0, r7
        colorPressed = col;
 80034b2:	e9c4 aa35 	strd	sl, sl, [r4, #212]	; 0xd4
 80034b6:	f00d fe8e 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ba:	f10d 0b10 	add.w	fp, sp, #16
    textArea3.setXY(70, 60);
 80034be:	223c      	movs	r2, #60	; 0x3c
 80034c0:	ee19 0a90 	vmov	r0, s19
 80034c4:	2146      	movs	r1, #70	; 0x46
 80034c6:	f7ff f9be 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80034ca:	ee19 1a90 	vmov	r1, s19
 80034ce:	4658      	mov	r0, fp
        color = newColor;
 80034d0:	f8c4 a110 	str.w	sl, [r4, #272]	; 0x110
        linespace = space;
 80034d4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80034d8:	f00f fd98 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80034dc:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80034e0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80034e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80034e8:	4b76      	ldr	r3, [pc, #472]	; (80036c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3ec>)
 80034ea:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80034ec:	ee19 0a90 	vmov	r0, s19
 80034f0:	231c      	movs	r3, #28
 80034f2:	a90a      	add	r1, sp, #40	; 0x28
 80034f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034f8:	f010 f822 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034fc:	ee19 1a90 	vmov	r1, s19
 8003500:	4638      	mov	r0, r7
 8003502:	f00d fe68 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003506:	230a      	movs	r3, #10
 8003508:	9300      	str	r3, [sp, #0]
 800350a:	2232      	movs	r2, #50	; 0x32
 800350c:	23f0      	movs	r3, #240	; 0xf0
 800350e:	4629      	mov	r1, r5
 8003510:	4648      	mov	r0, r9
 8003512:	f7ff f9a5 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003516:	9b02      	ldr	r3, [sp, #8]
 8003518:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800351c:	22a0      	movs	r2, #160	; 0xa0
 800351e:	4611      	mov	r1, r2
 8003520:	4648      	mov	r0, r9
 8003522:	f8c4 a1a4 	str.w	sl, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003526:	f8a4 a1a8 	strh.w	sl, [r4, #424]	; 0x1a8
 800352a:	f00f fbc3 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800352e:	22a0      	movs	r2, #160	; 0xa0
 8003530:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003534:	4648      	mov	r0, r9
 8003536:	f00f fbc8 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800353a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800353e:	2b20      	cmp	r3, #32
 8003540:	d005      	beq.n	800354e <_ZN23Calibration_PadViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8003542:	2320      	movs	r3, #32
 8003544:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8003548:	4648      	mov	r0, r9
 800354a:	f00f fabd 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800354e:	2101      	movs	r1, #1
 8003550:	4648      	mov	r0, r9
 8003552:	f00f fbc5 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003556:	4649      	mov	r1, r9
 8003558:	4638      	mov	r0, r7
 800355a:	f00d fe3c 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 800355e:	230a      	movs	r3, #10
 8003560:	9300      	str	r3, [sp, #0]
 8003562:	224b      	movs	r2, #75	; 0x4b
 8003564:	23f0      	movs	r3, #240	; 0xf0
 8003566:	2100      	movs	r1, #0
 8003568:	4640      	mov	r0, r8
 800356a:	f7ff f979 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 800356e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003572:	22a0      	movs	r2, #160	; 0xa0
 8003574:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
 8003578:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800357c:	9b03      	ldr	r3, [sp, #12]
 800357e:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
 8003582:	4611      	mov	r1, r2
 8003584:	4640      	mov	r0, r8
 8003586:	f00f fb95 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800358a:	22a0      	movs	r2, #160	; 0xa0
 800358c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003590:	4640      	mov	r0, r8
 8003592:	f00f fb9a 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003596:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800359a:	2b20      	cmp	r3, #32
 800359c:	d005      	beq.n	80035aa <_ZN23Calibration_PadViewBaseC1Ev+0x2d2>
        lineWidthQ5 = widthQ5;
 800359e:	2320      	movs	r3, #32
 80035a0:	f8c4 31e8 	str.w	r3, [r4, #488]	; 0x1e8
        updateCachedShape();
 80035a4:	4640      	mov	r0, r8
 80035a6:	f00f fa8f 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80035aa:	4640      	mov	r0, r8
 80035ac:	2101      	movs	r1, #1
 80035ae:	f00f fb97 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80035b2:	4641      	mov	r1, r8
 80035b4:	4638      	mov	r0, r7
        linespace = space;
 80035b6:	2500      	movs	r5, #0
 80035b8:	f00d fe0d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
 80035bc:	f10d 0810 	add.w	r8, sp, #16
    textArea2.setXY(69, 35);
 80035c0:	ee18 0a10 	vmov	r0, s16
 80035c4:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 80035c6:	f04f 3aff 	mov.w	sl, #4294967295
 80035ca:	2145      	movs	r1, #69	; 0x45
 80035cc:	f7ff f93b 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80035d0:	ee18 1a10 	vmov	r1, s16
 80035d4:	4640      	mov	r0, r8
        color = newColor;
 80035d6:	f8c4 a260 	str.w	sl, [r4, #608]	; 0x260
        linespace = space;
 80035da:	f8a4 5264 	strh.w	r5, [r4, #612]	; 0x264
        boundingArea = calculateBoundingArea();
 80035de:	f00f fd15 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035e2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80035e6:	ee18 3a10 	vmov	r3, s16
 80035ea:	333c      	adds	r3, #60	; 0x3c
 80035ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80035f0:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 80036c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3ec>
 80035f4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80035f8:	231e      	movs	r3, #30
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80035fa:	ee18 0a10 	vmov	r0, s16
 80035fe:	a90a      	add	r1, sp, #40	; 0x28
 8003600:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003604:	f00f ff9c 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003608:	ee18 1a10 	vmov	r1, s16
 800360c:	4638      	mov	r0, r7
 800360e:	f00d fde2 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003612:	ee18 0a90 	vmov	r0, s17
 8003616:	220c      	movs	r2, #12
 8003618:	2136      	movs	r1, #54	; 0x36
 800361a:	f7ff f914 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800361e:	ee18 1a90 	vmov	r1, s17
 8003622:	4640      	mov	r0, r8
        color = newColor;
 8003624:	f8c4 a2a8 	str.w	sl, [r4, #680]	; 0x2a8
        linespace = space;
 8003628:	f8a4 52ac 	strh.w	r5, [r4, #684]	; 0x2ac
        boundingArea = calculateBoundingArea();
 800362c:	f00f fcee 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003630:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003634:	ee18 3a90 	vmov	r3, s17
 8003638:	333c      	adds	r3, #60	; 0x3c
 800363a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800363e:	231f      	movs	r3, #31
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003640:	ee18 0a90 	vmov	r0, s17
 8003644:	a90a      	add	r1, sp, #40	; 0x28
 8003646:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800364a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800364e:	f00f ff77 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003652:	ee18 1a90 	vmov	r1, s17
 8003656:	4638      	mov	r0, r7
 8003658:	f00d fdbd 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scrollList1.setPosition(0, 85, 240, 167);
 800365c:	23a7      	movs	r3, #167	; 0xa7
 800365e:	2255      	movs	r2, #85	; 0x55
 8003660:	9300      	str	r3, [sp, #0]
 8003662:	4629      	mov	r1, r5
 8003664:	23f0      	movs	r3, #240	; 0xf0
 8003666:	4630      	mov	r0, r6
 8003668:	f7ff f8fa 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
    scrollList1.setHorizontal(false);
 800366c:	4629      	mov	r1, r5
 800366e:	4630      	mov	r0, r6
 8003670:	f00d fd35 	bl	80110de <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    scrollList1.setCircular(true);
 8003674:	4630      	mov	r0, r6
 8003676:	2101      	movs	r1, #1
 8003678:	f00d fd8c 	bl	8011194 <_ZN8touchgfx10ScrollBase11setCircularEb>
    scrollList1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 800367c:	4630      	mov	r0, r6
 800367e:	4912      	ldr	r1, [pc, #72]	; (80036c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3f0>)
 8003680:	f00d fc6d 	bl	8010f5e <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    scrollList1.setSwipeAcceleration(10);
 8003684:	4630      	mov	r0, r6
 8003686:	210a      	movs	r1, #10
 8003688:	f00d fc6c 	bl	8010f64 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
    scrollList1.setDragAcceleration(10);
 800368c:	4630      	mov	r0, r6
 800368e:	210a      	movs	r1, #10
 8003690:	f00d fc6b 	bl	8010f6a <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    scrollList1.setNumberOfItems(1);
 8003694:	4630      	mov	r0, r6
 8003696:	2101      	movs	r1, #1
 8003698:	f00d fbe1 	bl	8010e5e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
 800369c:	e016      	b.n	80036cc <_ZN23Calibration_PadViewBaseC1Ev+0x3f4>
 800369e:	bf00      	nop
 80036a0:	0802d308 	.word	0x0802d308
 80036a4:	0802fd84 	.word	0x0802fd84
 80036a8:	0802ff4c 	.word	0x0802ff4c
 80036ac:	0802fab8 	.word	0x0802fab8
 80036b0:	0802d2c0 	.word	0x0802d2c0
 80036b4:	0802d2d8 	.word	0x0802d2d8
 80036b8:	08003299 	.word	0x08003299
 80036bc:	0802d2f0 	.word	0x0802d2f0
 80036c0:	08003281 	.word	0x08003281
 80036c4:	0802d000 	.word	0x0802d000
 80036c8:	0801836d 	.word	0x0801836d
    scrollList1.setPadding(0, 0);
 80036cc:	462a      	mov	r2, r5
 80036ce:	4629      	mov	r1, r5
 80036d0:	4630      	mov	r0, r6
 80036d2:	f00d fb04 	bl	8010cde <_ZN8touchgfx10ScrollList10setPaddingEss>
    scrollList1.setSnapping(false);
 80036d6:	4629      	mov	r1, r5
 80036d8:	4630      	mov	r0, r6
 80036da:	f00d fb18 	bl	8010d0e <_ZN8touchgfx10ScrollList11setSnappingEb>
    scrollList1.setDrawableSize(286, 0);
 80036de:	462a      	mov	r2, r5
 80036e0:	4630      	mov	r0, r6
 80036e2:	f44f 718f 	mov.w	r1, #286	; 0x11e
 80036e6:	f00d fadd 	bl	8010ca4 <_ZN8touchgfx10ScrollList15setDrawableSizeEss>
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);
 80036ea:	ee1a 1a10 	vmov	r1, s20
 80036ee:	f504 52f4 	add.w	r2, r4, #7808	; 0x1e80
 80036f2:	4630      	mov	r0, r6
 80036f4:	f00d f9a9 	bl	8010a4a <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
 80036f8:	4638      	mov	r0, r7
 80036fa:	4631      	mov	r1, r6
 80036fc:	f00d fd6b 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003700:	4620      	mov	r0, r4
 8003702:	b00d      	add	sp, #52	; 0x34
 8003704:	ecbd 8b06 	vpop	{d8-d10}
 8003708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800370c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800370c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800370e:	4770      	bx	lr

08003710 <_ZN27Configuration_ContainerBaseD1Ev>:
}

Configuration_ContainerBase::~Configuration_ContainerBase()
{

}
 8003710:	4770      	bx	lr

08003712 <_ZN27Configuration_ContainerBase10initializeEv>:

void Configuration_ContainerBase::initialize()
{

}
 8003712:	4770      	bx	lr

08003714 <_ZN27Configuration_ContainerBaseD0Ev>:
Configuration_ContainerBase::~Configuration_ContainerBase()
 8003714:	b510      	push	{r4, lr}
}
 8003716:	f240 6174 	movw	r1, #1652	; 0x674
Configuration_ContainerBase::~Configuration_ContainerBase()
 800371a:	4604      	mov	r4, r0
}
 800371c:	f027 f8a9 	bl	802a872 <_ZdlPvj>
 8003720:	4620      	mov	r0, r4
 8003722:	bd10      	pop	{r4, pc}

08003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003724:	b510      	push	{r4, lr}
 8003726:	4604      	mov	r4, r0
        : TextArea()
 8003728:	f7ff f8c0 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800372c:	4b02      	ldr	r3, [pc, #8]	; (8003738 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800372e:	6023      	str	r3, [r4, #0]
 8003730:	2300      	movs	r3, #0
 8003732:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003734:	4620      	mov	r0, r4
 8003736:	bd10      	pop	{r4, pc}
 8003738:	0802d010 	.word	0x0802d010

0800373c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
    void setLineWidth(T width)
 800373c:	b410      	push	{r4}
        if (lineWidthQ5 == widthQ5)
 800373e:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003740:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003744:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003748:	d004      	beq.n	8003754 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 800374a:	f85d 4b04 	ldr.w	r4, [sp], #4
        lineWidthQ5 = widthQ5;
 800374e:	63c2      	str	r2, [r0, #60]	; 0x3c
        updateCachedShape();
 8003750:	f00f b9ba 	b.w	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003754:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003758:	4770      	bx	lr
	...

0800375c <_ZN27Configuration_ContainerBaseC1Ev>:
Configuration_ContainerBase::Configuration_ContainerBase()
 800375c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003760:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003764:	4607      	mov	r7, r0
 8003766:	ed2d 8b0e 	vpush	{d8-d14}
        : x(0), y(0), width(0), height(0)
 800376a:	2500      	movs	r5, #0
 800376c:	8483      	strh	r3, [r0, #36]	; 0x24
 800376e:	4beb      	ldr	r3, [pc, #940]	; (8003b1c <_ZN27Configuration_ContainerBaseC1Ev+0x3c0>)
          firstChild(0)
 8003770:	6285      	str	r5, [r0, #40]	; 0x28
 8003772:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003776:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 800377a:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 800377e:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8003782:	f847 3b2c 	str.w	r3, [r7], #44
 8003786:	b091      	sub	sp, #68	; 0x44
 8003788:	4604      	mov	r4, r0
 800378a:	4638      	mov	r0, r7
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800378c:	4ee4      	ldr	r6, [pc, #912]	; (8003b20 <_ZN27Configuration_ContainerBaseC1Ev+0x3c4>)
 800378e:	f00f f97b 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8003792:	f104 039c 	add.w	r3, r4, #156	; 0x9c
 8003796:	4618      	mov	r0, r3
 8003798:	f104 09b0 	add.w	r9, r4, #176	; 0xb0
 800379c:	9302      	str	r3, [sp, #8]
 800379e:	f7fe fe73 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80037a2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80037a6:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 80037aa:	f8c4 609c 	str.w	r6, [r4, #156]	; 0x9c
 80037ae:	4648      	mov	r0, r9
 80037b0:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
 80037b4:	f00f f968 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 80037b8:	f504 7290 	add.w	r2, r4, #288	; 0x120
 80037bc:	4610      	mov	r0, r2
 80037be:	f504 789a 	add.w	r8, r4, #308	; 0x134
 80037c2:	9203      	str	r2, [sp, #12]
 80037c4:	f7fe fe60 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80037c8:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80037cc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80037d0:	f8c4 6120 	str.w	r6, [r4, #288]	; 0x120
 80037d4:	4640      	mov	r0, r8
 80037d6:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80037da:	f00f f955 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 80037de:	f504 72d2 	add.w	r2, r4, #420	; 0x1a4
 80037e2:	4610      	mov	r0, r2
 80037e4:	f504 7adc 	add.w	sl, r4, #440	; 0x1b8
 80037e8:	9204      	str	r2, [sp, #16]
 80037ea:	f7fe fe4d 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80037ee:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80037f2:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
 80037f6:	f8c4 61a4 	str.w	r6, [r4, #420]	; 0x1a4
 80037fa:	4650      	mov	r0, sl
 80037fc:	f8c4 51b0 	str.w	r5, [r4, #432]	; 0x1b0
 8003800:	f7ff f854 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003804:	f504 7200 	add.w	r2, r4, #512	; 0x200
 8003808:	4610      	mov	r0, r2
 800380a:	ee0b 2a90 	vmov	s23, r2
 800380e:	f010 fa4b 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003812:	f504 720f 	add.w	r2, r4, #572	; 0x23c
 8003816:	4610      	mov	r0, r2
 8003818:	ee0c 2a10 	vmov	s24, r2
 800381c:	f010 fa44 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003820:	f504 721e 	add.w	r2, r4, #632	; 0x278
 8003824:	4610      	mov	r0, r2
 8003826:	ee0c 2a90 	vmov	s25, r2
 800382a:	f010 fa3d 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800382e:	f504 722d 	add.w	r2, r4, #692	; 0x2b4
 8003832:	4610      	mov	r0, r2
 8003834:	ee08 2a10 	vmov	s16, r2
 8003838:	f7ff ff74 	bl	8003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800383c:	f504 7240 	add.w	r2, r4, #768	; 0x300
 8003840:	4610      	mov	r0, r2
 8003842:	ee08 2a90 	vmov	s17, r2
 8003846:	f7ff ff6d 	bl	8003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800384a:	f504 7253 	add.w	r2, r4, #844	; 0x34c
 800384e:	4610      	mov	r0, r2
 8003850:	ee09 2a10 	vmov	s18, r2
 8003854:	f7ff ff66 	bl	8003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003858:	f504 7266 	add.w	r2, r4, #920	; 0x398
 800385c:	4610      	mov	r0, r2
 800385e:	ee0d 2a10 	vmov	s26, r2
 8003862:	f010 fa21 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003866:	f504 7275 	add.w	r2, r4, #980	; 0x3d4
 800386a:	4610      	mov	r0, r2
 800386c:	ee0d 2a90 	vmov	s27, r2
 8003870:	f010 fa1a 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003874:	f504 6282 	add.w	r2, r4, #1040	; 0x410
 8003878:	4610      	mov	r0, r2
 800387a:	ee0e 2a10 	vmov	s28, r2
 800387e:	f010 fa13 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003882:	f204 424c 	addw	r2, r4, #1100	; 0x44c
 8003886:	4610      	mov	r0, r2
 8003888:	ee0a 2a10 	vmov	s20, r2
 800388c:	f7ff ff4a 	bl	8003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003890:	f504 6293 	add.w	r2, r4, #1176	; 0x498
 8003894:	4610      	mov	r0, r2
 8003896:	ee0a 2a90 	vmov	s21, r2
 800389a:	f7ff ff43 	bl	8003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800389e:	f204 42e4 	addw	r2, r4, #1252	; 0x4e4
 80038a2:	4610      	mov	r0, r2
 80038a4:	f504 6ba6 	add.w	fp, r4, #1328	; 0x530
 80038a8:	ee0b 2a10 	vmov	s22, r2
 80038ac:	f7ff ff3a 	bl	8003724 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038b0:	4658      	mov	r0, fp
 80038b2:	f00f f8e9 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 80038b6:	f504 62b4 	add.w	r2, r4, #1440	; 0x5a0
 80038ba:	4610      	mov	r0, r2
 80038bc:	9205      	str	r2, [sp, #20]
 80038be:	f7fe fde3 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80038c2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80038c6:	f8c4 35a8 	str.w	r3, [r4, #1448]	; 0x5a8
 80038ca:	f204 53b4 	addw	r3, r4, #1460	; 0x5b4
 80038ce:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
 80038d2:	4618      	mov	r0, r3
 80038d4:	f8c4 55ac 	str.w	r5, [r4, #1452]	; 0x5ac
    line1_1_2_1.setPosition(0, 158, 240, 10);
 80038d8:	260a      	movs	r6, #10
Configuration_ContainerBase::Configuration_ContainerBase()
 80038da:	ee09 3a90 	vmov	s19, r3
 80038de:	f7fe ffe5 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        rect.width = width;
 80038e2:	4b90      	ldr	r3, [pc, #576]	; (8003b24 <_ZN27Configuration_ContainerBaseC1Ev+0x3c8>)
 80038e4:	60a3      	str	r3, [r4, #8]
    line1_1_2_1.setPosition(0, 158, 240, 10);
 80038e6:	4638      	mov	r0, r7
 80038e8:	23f0      	movs	r3, #240	; 0xf0
 80038ea:	229e      	movs	r2, #158	; 0x9e
 80038ec:	4629      	mov	r1, r5
 80038ee:	9600      	str	r6, [sp, #0]
 80038f0:	f7fe ffb6 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038f4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80038f8:	22a0      	movs	r2, #160	; 0xa0
 80038fa:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80038fe:	f8a4 30ac 	strh.w	r3, [r4, #172]	; 0xac
 8003902:	9b02      	ldr	r3, [sp, #8]
 8003904:	6563      	str	r3, [r4, #84]	; 0x54
 8003906:	4611      	mov	r1, r2
 8003908:	4638      	mov	r0, r7
 800390a:	f00f f9d3 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800390e:	22a0      	movs	r2, #160	; 0xa0
 8003910:	4638      	mov	r0, r7
 8003912:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003916:	f00f f9d8 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2_1.setLineWidth(1);
 800391a:	4638      	mov	r0, r7
 800391c:	2101      	movs	r1, #1
 800391e:	f7ff ff0d 	bl	800373c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003922:	4638      	mov	r0, r7
 8003924:	2101      	movs	r1, #1
 8003926:	f00f f9db 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1_1_2_1);
 800392a:	4639      	mov	r1, r7
 800392c:	4620      	mov	r0, r4
 800392e:	f00d fc52 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_2.setPosition(0, 133, 240, 10);
 8003932:	4648      	mov	r0, r9
 8003934:	23f0      	movs	r3, #240	; 0xf0
 8003936:	2285      	movs	r2, #133	; 0x85
 8003938:	4629      	mov	r1, r5
 800393a:	9600      	str	r6, [sp, #0]
 800393c:	f7fe ff90 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003940:	f04f 32ff 	mov.w	r2, #4294967295
 8003944:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003948:	f8c4 212c 	str.w	r2, [r4, #300]	; 0x12c
 800394c:	f8a4 3130 	strh.w	r3, [r4, #304]	; 0x130
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003950:	22a0      	movs	r2, #160	; 0xa0
 8003952:	9b03      	ldr	r3, [sp, #12]
 8003954:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8003958:	4611      	mov	r1, r2
 800395a:	4648      	mov	r0, r9
 800395c:	f00f f9aa 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003960:	22a0      	movs	r2, #160	; 0xa0
 8003962:	4648      	mov	r0, r9
 8003964:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003968:	f00f f9af 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2_2.setLineWidth(1);
 800396c:	4648      	mov	r0, r9
 800396e:	2101      	movs	r1, #1
 8003970:	f7ff fee4 	bl	800373c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003974:	4648      	mov	r0, r9
 8003976:	2101      	movs	r1, #1
 8003978:	f00f f9b2 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1_1_2_2);
 800397c:	4649      	mov	r1, r9
 800397e:	4620      	mov	r0, r4
 8003980:	f00d fc29 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_3.setPosition(0, 276, 240, 10);
 8003984:	4640      	mov	r0, r8
 8003986:	23f0      	movs	r3, #240	; 0xf0
 8003988:	f44f 728a 	mov.w	r2, #276	; 0x114
 800398c:	4629      	mov	r1, r5
 800398e:	9600      	str	r6, [sp, #0]
 8003990:	f7fe ff66 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003994:	f04f 32ff 	mov.w	r2, #4294967295
 8003998:	9b04      	ldr	r3, [sp, #16]
 800399a:	f8c4 21b0 	str.w	r2, [r4, #432]	; 0x1b0
 800399e:	f8a4 21b4 	strh.w	r2, [r4, #436]	; 0x1b4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80039a2:	22a0      	movs	r2, #160	; 0xa0
 80039a4:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80039a8:	4611      	mov	r1, r2
 80039aa:	4640      	mov	r0, r8
 80039ac:	f00f f982 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80039b0:	22a0      	movs	r2, #160	; 0xa0
 80039b2:	4640      	mov	r0, r8
 80039b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80039b8:	f00f f987 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2_3.setLineWidth(1);
 80039bc:	4640      	mov	r0, r8
 80039be:	2101      	movs	r1, #1
 80039c0:	f7ff febc 	bl	800373c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80039c4:	4640      	mov	r0, r8
 80039c6:	2101      	movs	r1, #1
 80039c8:	f00f f98a 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1_1_2_3);
 80039cc:	4641      	mov	r1, r8
 80039ce:	4620      	mov	r0, r4
 80039d0:	f00d fc01 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(96, 143);
 80039d4:	228f      	movs	r2, #143	; 0x8f
 80039d6:	4650      	mov	r0, sl
 80039d8:	2160      	movs	r1, #96	; 0x60
 80039da:	f7fe ff34 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80039de:	f10d 0818 	add.w	r8, sp, #24
        color = newColor;
 80039e2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80039e6:	4651      	mov	r1, sl
        color = newColor;
 80039e8:	f8c4 31e8 	str.w	r3, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80039ec:	4640      	mov	r0, r8
        linespace = space;
 80039ee:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80039f2:	f00f fb0b 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80039f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MM0P));
 80039fa:	af0e      	add	r7, sp, #56	; 0x38
 80039fc:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8003a00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a04:	f04f 0901 	mov.w	r9, #1
 8003a08:	4b47      	ldr	r3, [pc, #284]	; (8003b28 <_ZN27Configuration_ContainerBaseC1Ev+0x3cc>)
 8003a0a:	930e      	str	r3, [sp, #56]	; 0x38
 8003a0c:	4650      	mov	r0, sl
 8003a0e:	4639      	mov	r1, r7
 8003a10:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8003a14:	f00f fd94 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea3);
 8003a18:	4651      	mov	r1, sl
 8003a1a:	4620      	mov	r0, r4
 8003a1c:	f00d fbdb 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_5.setXY(194, 240);
 8003a20:	ee1b 0a90 	vmov	r0, s23
 8003a24:	22f0      	movs	r2, #240	; 0xf0
 8003a26:	21c2      	movs	r1, #194	; 0xc2
 8003a28:	f7fe ff0d 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8003a2c:	46ca      	mov	sl, r9
    buttonWithIcon1_5.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003a2e:	ab0d      	add	r3, sp, #52	; 0x34
 8003a30:	aa0c      	add	r2, sp, #48	; 0x30
 8003a32:	ee1b 0a90 	vmov	r0, s23
 8003a36:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8003a3a:	a90b      	add	r1, sp, #44	; 0x2c
 8003a3c:	f04f 0907 	mov.w	r9, #7
 8003a40:	9700      	str	r7, [sp, #0]
 8003a42:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003a46:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8003a4a:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
 8003a4e:	f010 f896 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_5);
 8003a52:	ee1b 1a90 	vmov	r1, s23
 8003a56:	4620      	mov	r0, r4
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003a58:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8003a5c:	f00d fbbb 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_4.setXY(194, 204);
 8003a60:	ee1c 0a10 	vmov	r0, s24
 8003a64:	22cc      	movs	r2, #204	; 0xcc
 8003a66:	21c2      	movs	r1, #194	; 0xc2
 8003a68:	f7fe feed 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_4.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003a6c:	ab0d      	add	r3, sp, #52	; 0x34
 8003a6e:	aa0c      	add	r2, sp, #48	; 0x30
 8003a70:	ee1c 0a10 	vmov	r0, s24
 8003a74:	a90b      	add	r1, sp, #44	; 0x2c
 8003a76:	9700      	str	r7, [sp, #0]
 8003a78:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 8003a7c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003a80:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8003a84:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
 8003a88:	f010 f879 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_4);
 8003a8c:	ee1c 1a10 	vmov	r1, s24
 8003a90:	4620      	mov	r0, r4
 8003a92:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 8003a96:	f00d fb9e 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_3.setXY(194, 168);
 8003a9a:	ee1c 0a90 	vmov	r0, s25
 8003a9e:	22a8      	movs	r2, #168	; 0xa8
 8003aa0:	21c2      	movs	r1, #194	; 0xc2
 8003aa2:	f7fe fed0 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003aa6:	ab0d      	add	r3, sp, #52	; 0x34
 8003aa8:	aa0c      	add	r2, sp, #48	; 0x30
 8003aaa:	ee1c 0a90 	vmov	r0, s25
 8003aae:	a90b      	add	r1, sp, #44	; 0x2c
 8003ab0:	9700      	str	r7, [sp, #0]
 8003ab2:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 8003ab6:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003aba:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8003abe:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
 8003ac2:	f010 f85c 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_3);
 8003ac6:	ee1c 1a90 	vmov	r1, s25
 8003aca:	4620      	mov	r0, r4
 8003acc:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003ad0:	f00d fb81 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_5.setXY(10, 247);
 8003ad4:	22f7      	movs	r2, #247	; 0xf7
 8003ad6:	ee18 0a10 	vmov	r0, s16
 8003ada:	4631      	mov	r1, r6
 8003adc:	f7fe feb3 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003ae0:	f04f 33ff 	mov.w	r3, #4294967295
 8003ae4:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8003ae8:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8003aec:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 8003af0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003af4:	f8df a034 	ldr.w	sl, [pc, #52]	; 8003b2c <_ZN27Configuration_ContainerBaseC1Ev+0x3d0>
 8003af8:	ee18 1a10 	vmov	r1, s16
 8003afc:	4640      	mov	r0, r8
 8003afe:	4798      	blx	r3
 8003b00:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003b04:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8003b08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textArea1_5Buffer, TEXTAREA1_5_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EFV9).getText());
 8003b0c:	f204 53fc 	addw	r3, r4, #1532	; 0x5fc
 8003b10:	9302      	str	r3, [sp, #8]
 8003b12:	f8da 3000 	ldr.w	r3, [sl]
 8003b16:	b98b      	cbnz	r3, 8003b3c <_ZN27Configuration_ContainerBaseC1Ev+0x3e0>
 8003b18:	e00a      	b.n	8003b30 <_ZN27Configuration_ContainerBaseC1Ev+0x3d4>
 8003b1a:	bf00      	nop
 8003b1c:	0802d348 	.word	0x0802d348
 8003b20:	0802fab8 	.word	0x0802fab8
 8003b24:	011e00f0 	.word	0x011e00f0
 8003b28:	0802d000 	.word	0x0802d000
 8003b2c:	2001390c 	.word	0x2001390c
 8003b30:	4b06      	ldr	r3, [pc, #24]	; (8003b4c <_ZN27Configuration_ContainerBaseC1Ev+0x3f0>)
 8003b32:	4a07      	ldr	r2, [pc, #28]	; (8003b50 <_ZN27Configuration_ContainerBaseC1Ev+0x3f4>)
 8003b34:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b36:	4807      	ldr	r0, [pc, #28]	; (8003b54 <_ZN27Configuration_ContainerBaseC1Ev+0x3f8>)
 8003b38:	f027 fcae 	bl	802b498 <__assert_func>
 8003b3c:	4b06      	ldr	r3, [pc, #24]	; (8003b58 <_ZN27Configuration_ContainerBaseC1Ev+0x3fc>)
 8003b3e:	881b      	ldrh	r3, [r3, #0]
 8003b40:	2b02      	cmp	r3, #2
 8003b42:	d80d      	bhi.n	8003b60 <_ZN27Configuration_ContainerBaseC1Ev+0x404>
 8003b44:	4b05      	ldr	r3, [pc, #20]	; (8003b5c <_ZN27Configuration_ContainerBaseC1Ev+0x400>)
 8003b46:	4a02      	ldr	r2, [pc, #8]	; (8003b50 <_ZN27Configuration_ContainerBaseC1Ev+0x3f4>)
 8003b48:	2161      	movs	r1, #97	; 0x61
 8003b4a:	e7f4      	b.n	8003b36 <_ZN27Configuration_ContainerBaseC1Ev+0x3da>
 8003b4c:	0802ce50 	.word	0x0802ce50
 8003b50:	0802cf52 	.word	0x0802cf52
 8003b54:	0802cecd 	.word	0x0802cecd
 8003b58:	20013910 	.word	0x20013910
 8003b5c:	0802cf14 	.word	0x0802cf14
        return texts->getText(typedTextId);
 8003b60:	4bdc      	ldr	r3, [pc, #880]	; (8003ed4 <_ZN27Configuration_ContainerBaseC1Ev+0x778>)
 8003b62:	2102      	movs	r1, #2
 8003b64:	6818      	ldr	r0, [r3, #0]
 8003b66:	f004 ff63 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8003b6a:	4631      	mov	r1, r6
 8003b6c:	4603      	mov	r3, r0
 8003b6e:	4ada      	ldr	r2, [pc, #872]	; (8003ed8 <_ZN27Configuration_ContainerBaseC1Ev+0x77c>)
 8003b70:	9802      	ldr	r0, [sp, #8]
 8003b72:	f015 ff77 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003b76:	9a02      	ldr	r2, [sp, #8]
 8003b78:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
    textArea1_5.resizeToCurrentText();
 8003b7c:	ee18 0a10 	vmov	r0, s16
 8003b80:	f00f fcbe 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b84:	2308      	movs	r3, #8
 8003b86:	4ad5      	ldr	r2, [pc, #852]	; (8003edc <_ZN27Configuration_ContainerBaseC1Ev+0x780>)
 8003b88:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
    textArea1_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TNZF));
 8003b8c:	ee18 0a10 	vmov	r0, s16
 8003b90:	4639      	mov	r1, r7
 8003b92:	920e      	str	r2, [sp, #56]	; 0x38
 8003b94:	f00f fcd4 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_5);
 8003b98:	ee18 1a10 	vmov	r1, s16
 8003b9c:	4620      	mov	r0, r4
 8003b9e:	f00d fb1a 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_4.setXY(22, 211);
 8003ba2:	22d3      	movs	r2, #211	; 0xd3
 8003ba4:	ee18 0a90 	vmov	r0, s17
 8003ba8:	2116      	movs	r1, #22
 8003baa:	f7fe fe4c 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8003bae:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8003bb2:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 8003bb6:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003bba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003bbe:	f8c4 1330 	str.w	r1, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003bc2:	4640      	mov	r0, r8
 8003bc4:	ee18 1a90 	vmov	r1, s17
 8003bc8:	4798      	blx	r3
 8003bca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003bce:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003bd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bd6:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(textArea1_4Buffer, TEXTAREA1_4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8X1K).getText());
 8003bda:	f504 61c2 	add.w	r1, r4, #1552	; 0x610
 8003bde:	9102      	str	r1, [sp, #8]
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d0a5      	beq.n	8003b30 <_ZN27Configuration_ContainerBaseC1Ev+0x3d4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003be4:	49be      	ldr	r1, [pc, #760]	; (8003ee0 <_ZN27Configuration_ContainerBaseC1Ev+0x784>)
 8003be6:	880b      	ldrh	r3, [r1, #0]
 8003be8:	2b03      	cmp	r3, #3
 8003bea:	d9ab      	bls.n	8003b44 <_ZN27Configuration_ContainerBaseC1Ev+0x3e8>
        return texts->getText(typedTextId);
 8003bec:	4bb9      	ldr	r3, [pc, #740]	; (8003ed4 <_ZN27Configuration_ContainerBaseC1Ev+0x778>)
 8003bee:	2103      	movs	r1, #3
 8003bf0:	6818      	ldr	r0, [r3, #0]
 8003bf2:	f004 ff1d 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8003bf6:	4ab8      	ldr	r2, [pc, #736]	; (8003ed8 <_ZN27Configuration_ContainerBaseC1Ev+0x77c>)
 8003bf8:	4603      	mov	r3, r0
 8003bfa:	4631      	mov	r1, r6
 8003bfc:	9802      	ldr	r0, [sp, #8]
 8003bfe:	f015 ff31 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003c02:	9802      	ldr	r0, [sp, #8]
 8003c04:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
    textArea1_4.resizeToCurrentText();
 8003c08:	ee18 0a90 	vmov	r0, s17
 8003c0c:	f00f fc78 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003c10:	2309      	movs	r3, #9
 8003c12:	4ab2      	ldr	r2, [pc, #712]	; (8003edc <_ZN27Configuration_ContainerBaseC1Ev+0x780>)
 8003c14:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
    textArea1_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DS48));
 8003c18:	ee18 0a90 	vmov	r0, s17
 8003c1c:	4639      	mov	r1, r7
 8003c1e:	920e      	str	r2, [sp, #56]	; 0x38
 8003c20:	f00f fc8e 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_4);
 8003c24:	ee18 1a90 	vmov	r1, s17
 8003c28:	4620      	mov	r0, r4
 8003c2a:	f00d fad4 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_3.setXY(22, 175);
 8003c2e:	22af      	movs	r2, #175	; 0xaf
 8003c30:	ee19 0a10 	vmov	r0, s18
 8003c34:	2116      	movs	r1, #22
 8003c36:	f7fe fe06 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8003c3a:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8003c3e:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8003c42:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003c46:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003c4a:	f8c4 037c 	str.w	r0, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8003c4e:	ee19 1a10 	vmov	r1, s18
 8003c52:	4640      	mov	r0, r8
 8003c54:	4798      	blx	r3
 8003c56:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003c5a:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8003c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c62:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(textArea1_3Buffer, TEXTAREA1_3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KMHD).getText());
 8003c66:	f204 6824 	addw	r8, r4, #1572	; 0x624
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	f43f af60 	beq.w	8003b30 <_ZN27Configuration_ContainerBaseC1Ev+0x3d4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c70:	499b      	ldr	r1, [pc, #620]	; (8003ee0 <_ZN27Configuration_ContainerBaseC1Ev+0x784>)
 8003c72:	880b      	ldrh	r3, [r1, #0]
 8003c74:	2b04      	cmp	r3, #4
 8003c76:	f67f af65 	bls.w	8003b44 <_ZN27Configuration_ContainerBaseC1Ev+0x3e8>
        return texts->getText(typedTextId);
 8003c7a:	4b96      	ldr	r3, [pc, #600]	; (8003ed4 <_ZN27Configuration_ContainerBaseC1Ev+0x778>)
 8003c7c:	2104      	movs	r1, #4
 8003c7e:	6818      	ldr	r0, [r3, #0]
 8003c80:	f004 fed6 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8003c84:	4a94      	ldr	r2, [pc, #592]	; (8003ed8 <_ZN27Configuration_ContainerBaseC1Ev+0x77c>)
 8003c86:	4603      	mov	r3, r0
 8003c88:	4631      	mov	r1, r6
 8003c8a:	4640      	mov	r0, r8
 8003c8c:	f015 feea 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_3.resizeToCurrentText();
 8003c90:	ee19 0a10 	vmov	r0, s18
 8003c94:	f8c4 8394 	str.w	r8, [r4, #916]	; 0x394
 8003c98:	f00f fc32 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003c9c:	4a8f      	ldr	r2, [pc, #572]	; (8003edc <_ZN27Configuration_ContainerBaseC1Ev+0x780>)
 8003c9e:	920e      	str	r2, [sp, #56]	; 0x38
    textArea1_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TD3K));
 8003ca0:	ee19 0a10 	vmov	r0, s18
 8003ca4:	4639      	mov	r1, r7
 8003ca6:	f8ad 603c 	strh.w	r6, [sp, #60]	; 0x3c
 8003caa:	f00f fc49 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_3);
 8003cae:	ee19 1a10 	vmov	r1, s18
 8003cb2:	4620      	mov	r0, r4
 8003cb4:	f00d fa8f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_2.setXY(194, 97);
 8003cb8:	ee1d 0a10 	vmov	r0, s26
 8003cbc:	2261      	movs	r2, #97	; 0x61
 8003cbe:	21c2      	movs	r1, #194	; 0xc2
 8003cc0:	f7fe fdc1 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003cc4:	a80d      	add	r0, sp, #52	; 0x34
 8003cc6:	4603      	mov	r3, r0
 8003cc8:	a80c      	add	r0, sp, #48	; 0x30
 8003cca:	4602      	mov	r2, r0
 8003ccc:	a80b      	add	r0, sp, #44	; 0x2c
 8003cce:	f04f 0801 	mov.w	r8, #1
 8003cd2:	4601      	mov	r1, r0
 8003cd4:	9700      	str	r7, [sp, #0]
 8003cd6:	ee1d 0a10 	vmov	r0, s26
 8003cda:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8003cde:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003ce2:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8003ce6:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
 8003cea:	f00f ff48 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_2);
 8003cee:	ee1d 1a10 	vmov	r1, s26
 8003cf2:	4620      	mov	r0, r4
 8003cf4:	f8c4 53d0 	str.w	r5, [r4, #976]	; 0x3d0
 8003cf8:	f00d fa6d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1_1.setXY(194, 61);
 8003cfc:	ee1d 0a90 	vmov	r0, s27
 8003d00:	223d      	movs	r2, #61	; 0x3d
 8003d02:	21c2      	movs	r1, #194	; 0xc2
 8003d04:	f7fe fd9f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003d08:	a80d      	add	r0, sp, #52	; 0x34
 8003d0a:	4603      	mov	r3, r0
 8003d0c:	a80c      	add	r0, sp, #48	; 0x30
 8003d0e:	4602      	mov	r2, r0
 8003d10:	a80b      	add	r0, sp, #44	; 0x2c
 8003d12:	4601      	mov	r1, r0
 8003d14:	9700      	str	r7, [sp, #0]
 8003d16:	ee1d 0a90 	vmov	r0, s27
 8003d1a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8003d1e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003d22:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8003d26:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
 8003d2a:	f00f ff28 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1_1);
 8003d2e:	ee1d 1a90 	vmov	r1, s27
 8003d32:	4620      	mov	r0, r4
 8003d34:	f8c4 540c 	str.w	r5, [r4, #1036]	; 0x40c
 8003d38:	f00d fa4d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(194, 25);
 8003d3c:	ee1e 0a10 	vmov	r0, s28
 8003d40:	2219      	movs	r2, #25
 8003d42:	21c2      	movs	r1, #194	; 0xc2
 8003d44:	f7fe fd7f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003d48:	a80d      	add	r0, sp, #52	; 0x34
 8003d4a:	4603      	mov	r3, r0
 8003d4c:	a80c      	add	r0, sp, #48	; 0x30
 8003d4e:	4602      	mov	r2, r0
 8003d50:	a80b      	add	r0, sp, #44	; 0x2c
 8003d52:	4601      	mov	r1, r0
 8003d54:	9700      	str	r7, [sp, #0]
 8003d56:	ee1e 0a10 	vmov	r0, s28
 8003d5a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8003d5e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003d62:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8003d66:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
 8003d6a:	f00f ff08 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1);
 8003d6e:	ee1e 1a10 	vmov	r1, s28
 8003d72:	4620      	mov	r0, r4
 8003d74:	f8c4 5448 	str.w	r5, [r4, #1096]	; 0x448
 8003d78:	f00d fa2d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_2.setXY(10, 104);
 8003d7c:	ee1a 0a10 	vmov	r0, s20
 8003d80:	2268      	movs	r2, #104	; 0x68
 8003d82:	4631      	mov	r1, r6
 8003d84:	f7fe fd5f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d88:	f8da 3000 	ldr.w	r3, [sl]
        linespace = space;
 8003d8c:	f8a4 5480 	strh.w	r5, [r4, #1152]	; 0x480
        color = newColor;
 8003d90:	f04f 30ff 	mov.w	r0, #4294967295
 8003d94:	f8c4 047c 	str.w	r0, [r4, #1148]	; 0x47c
        boundingArea = calculateBoundingArea();
 8003d98:	f8c4 5488 	str.w	r5, [r4, #1160]	; 0x488
 8003d9c:	f8c4 048c 	str.w	r0, [r4, #1164]	; 0x48c
 8003da0:	f8c4 5490 	str.w	r5, [r4, #1168]	; 0x490
    Unicode::snprintf(textArea1_2Buffer, TEXTAREA1_2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QWFM).getText());
 8003da4:	f504 68c7 	add.w	r8, r4, #1592	; 0x638
 8003da8:	2b00      	cmp	r3, #0
 8003daa:	f43f aec1 	beq.w	8003b30 <_ZN27Configuration_ContainerBaseC1Ev+0x3d4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003dae:	494c      	ldr	r1, [pc, #304]	; (8003ee0 <_ZN27Configuration_ContainerBaseC1Ev+0x784>)
 8003db0:	880b      	ldrh	r3, [r1, #0]
 8003db2:	2b05      	cmp	r3, #5
 8003db4:	f67f aec6 	bls.w	8003b44 <_ZN27Configuration_ContainerBaseC1Ev+0x3e8>
        return texts->getText(typedTextId);
 8003db8:	4b46      	ldr	r3, [pc, #280]	; (8003ed4 <_ZN27Configuration_ContainerBaseC1Ev+0x778>)
 8003dba:	2105      	movs	r1, #5
 8003dbc:	6818      	ldr	r0, [r3, #0]
 8003dbe:	f004 fe37 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8003dc2:	4a45      	ldr	r2, [pc, #276]	; (8003ed8 <_ZN27Configuration_ContainerBaseC1Ev+0x77c>)
 8003dc4:	4603      	mov	r3, r0
 8003dc6:	4631      	mov	r1, r6
 8003dc8:	4640      	mov	r0, r8
 8003dca:	f015 fe4b 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_2.resizeToCurrentText();
 8003dce:	ee1a 0a10 	vmov	r0, s20
 8003dd2:	f8c4 8494 	str.w	r8, [r4, #1172]	; 0x494
 8003dd6:	f00f fb93 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003dda:	230b      	movs	r3, #11
 8003ddc:	4a3f      	ldr	r2, [pc, #252]	; (8003edc <_ZN27Configuration_ContainerBaseC1Ev+0x780>)
 8003dde:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIHR));
 8003de2:	ee1a 0a10 	vmov	r0, s20
 8003de6:	4639      	mov	r1, r7
 8003de8:	920e      	str	r2, [sp, #56]	; 0x38
 8003dea:	f00f fba9 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_2);
 8003dee:	ee1a 1a10 	vmov	r1, s20
 8003df2:	4620      	mov	r0, r4
 8003df4:	f00d f9ef 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(22, 68);
 8003df8:	ee1a 0a90 	vmov	r0, s21
 8003dfc:	2244      	movs	r2, #68	; 0x44
 8003dfe:	2116      	movs	r1, #22
 8003e00:	f7fe fd21 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003e04:	f04f 33ff 	mov.w	r3, #4294967295
 8003e08:	f8c4 34c8 	str.w	r3, [r4, #1224]	; 0x4c8
        boundingArea = calculateBoundingArea();
 8003e0c:	f8c4 34d8 	str.w	r3, [r4, #1240]	; 0x4d8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e10:	f8da 3000 	ldr.w	r3, [sl]
        linespace = space;
 8003e14:	f8a4 54cc 	strh.w	r5, [r4, #1228]	; 0x4cc
        boundingArea = calculateBoundingArea();
 8003e18:	f8c4 54d4 	str.w	r5, [r4, #1236]	; 0x4d4
 8003e1c:	f8c4 54dc 	str.w	r5, [r4, #1244]	; 0x4dc
    Unicode::snprintf(textArea1_1Buffer, TEXTAREA1_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UKN6).getText());
 8003e20:	f204 654c 	addw	r5, r4, #1612	; 0x64c
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	f43f ae83 	beq.w	8003b30 <_ZN27Configuration_ContainerBaseC1Ev+0x3d4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e2a:	492d      	ldr	r1, [pc, #180]	; (8003ee0 <_ZN27Configuration_ContainerBaseC1Ev+0x784>)
 8003e2c:	880b      	ldrh	r3, [r1, #0]
 8003e2e:	2b06      	cmp	r3, #6
 8003e30:	f67f ae88 	bls.w	8003b44 <_ZN27Configuration_ContainerBaseC1Ev+0x3e8>
        return texts->getText(typedTextId);
 8003e34:	f8df 909c 	ldr.w	r9, [pc, #156]	; 8003ed4 <_ZN27Configuration_ContainerBaseC1Ev+0x778>
        : typedTextId(id)
 8003e38:	4f28      	ldr	r7, [pc, #160]	; (8003edc <_ZN27Configuration_ContainerBaseC1Ev+0x780>)
        return texts->getText(typedTextId);
 8003e3a:	f8d9 0000 	ldr.w	r0, [r9]
 8003e3e:	2106      	movs	r1, #6
 8003e40:	f004 fdf6 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8003e44:	4a24      	ldr	r2, [pc, #144]	; (8003ed8 <_ZN27Configuration_ContainerBaseC1Ev+0x77c>)
 8003e46:	4603      	mov	r3, r0
 8003e48:	210a      	movs	r1, #10
 8003e4a:	4628      	mov	r0, r5
 8003e4c:	f015 fe0a 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1_1.resizeToCurrentText();
 8003e50:	ee1a 0a90 	vmov	r0, s21
 8003e54:	f8c4 54e0 	str.w	r5, [r4, #1248]	; 0x4e0
 8003e58:	f00f fb52 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e5c:	230c      	movs	r3, #12
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GZ9R));
 8003e5e:	ee1a 0a90 	vmov	r0, s21
 8003e62:	a90e      	add	r1, sp, #56	; 0x38
 8003e64:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003e68:	970e      	str	r7, [sp, #56]	; 0x38
 8003e6a:	f00f fb69 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1_1);
 8003e6e:	ee1a 1a90 	vmov	r1, s21
 8003e72:	4620      	mov	r0, r4
 8003e74:	f00d f9af 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(22, 32);
 8003e78:	ee1b 0a10 	vmov	r0, s22
 8003e7c:	2220      	movs	r2, #32
 8003e7e:	2116      	movs	r1, #22
 8003e80:	f7fe fce1 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e84:	4b17      	ldr	r3, [pc, #92]	; (8003ee4 <_ZN27Configuration_ContainerBaseC1Ev+0x788>)
 8003e86:	681b      	ldr	r3, [r3, #0]
        linespace = space;
 8003e88:	2500      	movs	r5, #0
        color = newColor;
 8003e8a:	f04f 36ff 	mov.w	r6, #4294967295
 8003e8e:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
        linespace = space;
 8003e92:	f8a4 5518 	strh.w	r5, [r4, #1304]	; 0x518
        boundingArea = calculateBoundingArea();
 8003e96:	f8c4 5520 	str.w	r5, [r4, #1312]	; 0x520
 8003e9a:	f8c4 6524 	str.w	r6, [r4, #1316]	; 0x524
 8003e9e:	f8c4 5528 	str.w	r5, [r4, #1320]	; 0x528
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_L0JG).getText());
 8003ea2:	f504 68cc 	add.w	r8, r4, #1632	; 0x660
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	f43f ae42 	beq.w	8003b30 <_ZN27Configuration_ContainerBaseC1Ev+0x3d4>
        return typedTextId < numberOfTypedTexts;
 8003eac:	4b0c      	ldr	r3, [pc, #48]	; (8003ee0 <_ZN27Configuration_ContainerBaseC1Ev+0x784>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003eae:	881b      	ldrh	r3, [r3, #0]
 8003eb0:	2b07      	cmp	r3, #7
 8003eb2:	f67f ae47 	bls.w	8003b44 <_ZN27Configuration_ContainerBaseC1Ev+0x3e8>
        return texts->getText(typedTextId);
 8003eb6:	f8d9 0000 	ldr.w	r0, [r9]
 8003eba:	2107      	movs	r1, #7
 8003ebc:	f004 fdb8 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8003ec0:	4a05      	ldr	r2, [pc, #20]	; (8003ed8 <_ZN27Configuration_ContainerBaseC1Ev+0x77c>)
 8003ec2:	4603      	mov	r3, r0
 8003ec4:	210a      	movs	r1, #10
 8003ec6:	4640      	mov	r0, r8
 8003ec8:	f015 fdcc 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8003ecc:	ee1b 0a10 	vmov	r0, s22
 8003ed0:	e00a      	b.n	8003ee8 <_ZN27Configuration_ContainerBaseC1Ev+0x78c>
 8003ed2:	bf00      	nop
 8003ed4:	20013918 	.word	0x20013918
 8003ed8:	0802cf8a 	.word	0x0802cf8a
 8003edc:	0802d000 	.word	0x0802d000
 8003ee0:	20013910 	.word	0x20013910
 8003ee4:	2001390c 	.word	0x2001390c
 8003ee8:	f8c4 852c 	str.w	r8, [r4, #1324]	; 0x52c
 8003eec:	f00f fb08 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003ef0:	230d      	movs	r3, #13
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AGRP));
 8003ef2:	ee1b 0a10 	vmov	r0, s22
 8003ef6:	a90e      	add	r1, sp, #56	; 0x38
 8003ef8:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003efc:	970e      	str	r7, [sp, #56]	; 0x38
 8003efe:	f00f fb1f 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8003f02:	ee1b 1a10 	vmov	r1, s22
 8003f06:	4620      	mov	r0, r4
 8003f08:	f00d f965 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 8003f0c:	230a      	movs	r3, #10
 8003f0e:	9300      	str	r3, [sp, #0]
 8003f10:	4629      	mov	r1, r5
 8003f12:	4658      	mov	r0, fp
 8003f14:	23f0      	movs	r3, #240	; 0xf0
 8003f16:	220f      	movs	r2, #15
 8003f18:	f7fe fca2 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f1c:	9b05      	ldr	r3, [sp, #20]
 8003f1e:	f8c4 3558 	str.w	r3, [r4, #1368]	; 0x558
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003f22:	22a0      	movs	r2, #160	; 0xa0
 8003f24:	f8c4 65ac 	str.w	r6, [r4, #1452]	; 0x5ac
 8003f28:	f8a4 65b0 	strh.w	r6, [r4, #1456]	; 0x5b0
 8003f2c:	4611      	mov	r1, r2
 8003f2e:	4658      	mov	r0, fp
 8003f30:	f00e fec0 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003f34:	22a0      	movs	r2, #160	; 0xa0
 8003f36:	4658      	mov	r0, fp
 8003f38:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003f3c:	f00e fec5 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2.setLineWidth(1);
 8003f40:	4658      	mov	r0, fp
 8003f42:	2101      	movs	r1, #1
 8003f44:	f7ff fbfa 	bl	800373c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003f48:	4658      	mov	r0, fp
 8003f4a:	2101      	movs	r1, #1
 8003f4c:	f00e fec8 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1_1_2);
 8003f50:	4659      	mov	r1, fp
 8003f52:	4620      	mov	r0, r4
 8003f54:	f00d f93f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2.setXY(92, 0);
 8003f58:	462a      	mov	r2, r5
 8003f5a:	ee19 0a90 	vmov	r0, s19
 8003f5e:	215c      	movs	r1, #92	; 0x5c
 8003f60:	f7fe fc71 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003f64:	f8c4 65e4 	str.w	r6, [r4, #1508]	; 0x5e4
        boundingArea = calculateBoundingArea();
 8003f68:	ae06      	add	r6, sp, #24
 8003f6a:	ee19 1a90 	vmov	r1, s19
 8003f6e:	4630      	mov	r0, r6
        linespace = space;
 8003f70:	f8a4 55e8 	strh.w	r5, [r4, #1512]	; 0x5e8
        boundingArea = calculateBoundingArea();
 8003f74:	f00f f84a 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003f78:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003f7c:	ee19 3a90 	vmov	r3, s19
 8003f80:	333c      	adds	r3, #60	; 0x3c
 8003f82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K99K));
 8003f86:	ee19 0a90 	vmov	r0, s19
 8003f8a:	a90e      	add	r1, sp, #56	; 0x38
 8003f8c:	970e      	str	r7, [sp, #56]	; 0x38
 8003f8e:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
 8003f92:	f00f fad5 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea3_2);
 8003f96:	4620      	mov	r0, r4
 8003f98:	ee19 1a90 	vmov	r1, s19
 8003f9c:	f00d f91b 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003fa0:	4620      	mov	r0, r4
 8003fa2:	b011      	add	sp, #68	; 0x44
 8003fa4:	ecbd 8b0e 	vpop	{d8-d14}
 8003fa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003fac <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003fac:	4770      	bx	lr

08003fae <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003fae:	4770      	bx	lr

08003fb0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003fb0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003fb4:	6808      	ldr	r0, [r1, #0]
 8003fb6:	6849      	ldr	r1, [r1, #4]
 8003fb8:	c303      	stmia	r3!, {r0, r1}
    }
 8003fba:	4770      	bx	lr

08003fbc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003fbc:	4770      	bx	lr

08003fbe <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003fbe:	4770      	bx	lr

08003fc0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003fc0:	6041      	str	r1, [r0, #4]
    }
 8003fc2:	4770      	bx	lr

08003fc4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003fc4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003fc6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003fc8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003fcc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003fd0:	8002      	strh	r2, [r0, #0]
 8003fd2:	8042      	strh	r2, [r0, #2]
 8003fd4:	8084      	strh	r4, [r0, #4]
 8003fd6:	80c1      	strh	r1, [r0, #6]
        }
 8003fd8:	bd10      	pop	{r4, pc}

08003fda <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003fda:	4770      	bx	lr

08003fdc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003fdc:	4770      	bx	lr
	...

08003fe0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003fe0:	4b06      	ldr	r3, [pc, #24]	; (8003ffc <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003fe2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003fec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ff0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ff4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003ff8:	4770      	bx	lr
 8003ffa:	bf00      	nop
 8003ffc:	0800439d 	.word	0x0800439d

08004000 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004000:	2301      	movs	r3, #1
 8004002:	7203      	strb	r3, [r0, #8]
    }
 8004004:	4770      	bx	lr

08004006 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004006:	4770      	bx	lr

08004008 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004008:	4770      	bx	lr

0800400a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800400a:	4770      	bx	lr

0800400c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800400c:	4770      	bx	lr

0800400e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800400e:	4770      	bx	lr

08004010 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004010:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004012:	6840      	ldr	r0, [r0, #4]
 8004014:	6803      	ldr	r3, [r0, #0]
 8004016:	3110      	adds	r1, #16
 8004018:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800401a:	4718      	bx	r3

0800401c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800401c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800401e:	6840      	ldr	r0, [r0, #4]
 8004020:	6803      	ldr	r3, [r0, #0]
 8004022:	3110      	adds	r1, #16
 8004024:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004026:	4718      	bx	r3

08004028 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004028:	4770      	bx	lr

0800402a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800402a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800402c:	6840      	ldr	r0, [r0, #4]
 800402e:	6803      	ldr	r3, [r0, #0]
 8004030:	3110      	adds	r1, #16
 8004032:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004034:	4718      	bx	r3

08004036 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004036:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004038:	6840      	ldr	r0, [r0, #4]
 800403a:	6803      	ldr	r3, [r0, #0]
 800403c:	3110      	adds	r1, #16
 800403e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004040:	4718      	bx	r3

08004042 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004042:	4770      	bx	lr

08004044 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004044:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004046:	68c2      	ldr	r2, [r0, #12]
 8004048:	6841      	ldr	r1, [r0, #4]
 800404a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800404c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800404e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004052:	07d2      	lsls	r2, r2, #31
 8004054:	bf48      	it	mi
 8004056:	590a      	ldrmi	r2, [r1, r4]
 8004058:	689b      	ldr	r3, [r3, #8]
    }
 800405a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800405e:	bf48      	it	mi
 8004060:	58d3      	ldrmi	r3, [r2, r3]
 8004062:	4718      	bx	r3

08004064 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004064:	6843      	ldr	r3, [r0, #4]
 8004066:	b12b      	cbz	r3, 8004074 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004068:	6883      	ldr	r3, [r0, #8]
 800406a:	b92b      	cbnz	r3, 8004078 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800406c:	68c0      	ldr	r0, [r0, #12]
 800406e:	f000 0001 	and.w	r0, r0, #1
 8004072:	4770      	bx	lr
 8004074:	4618      	mov	r0, r3
 8004076:	4770      	bx	lr
 8004078:	2001      	movs	r0, #1
    }
 800407a:	4770      	bx	lr

0800407c <_ZN8touchgfx12NoTransitionD0Ev>:
 800407c:	b510      	push	{r4, lr}
 800407e:	210c      	movs	r1, #12
 8004080:	4604      	mov	r4, r0
 8004082:	f026 fbf6 	bl	802a872 <_ZdlPvj>
 8004086:	4620      	mov	r0, r4
 8004088:	bd10      	pop	{r4, pc}

0800408a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800408a:	b510      	push	{r4, lr}
 800408c:	2110      	movs	r1, #16
 800408e:	4604      	mov	r4, r0
 8004090:	f026 fbef 	bl	802a872 <_ZdlPvj>
 8004094:	4620      	mov	r0, r4
 8004096:	bd10      	pop	{r4, pc}

08004098 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004098:	b510      	push	{r4, lr}
 800409a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800409e:	4604      	mov	r4, r0
 80040a0:	f026 fbe7 	bl	802a872 <_ZdlPvj>
 80040a4:	4620      	mov	r0, r4
 80040a6:	bd10      	pop	{r4, pc}

080040a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80040a8:	b510      	push	{r4, lr}
 80040aa:	2138      	movs	r1, #56	; 0x38
 80040ac:	4604      	mov	r4, r0
 80040ae:	f026 fbe0 	bl	802a872 <_ZdlPvj>
 80040b2:	4620      	mov	r0, r4
 80040b4:	bd10      	pop	{r4, pc}

080040b6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80040b6:	b510      	push	{r4, lr}
 80040b8:	2128      	movs	r1, #40	; 0x28
 80040ba:	4604      	mov	r4, r0
 80040bc:	f026 fbd9 	bl	802a872 <_ZdlPvj>
 80040c0:	4620      	mov	r0, r4
 80040c2:	bd10      	pop	{r4, pc}

080040c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80040c4:	b510      	push	{r4, lr}
 80040c6:	2138      	movs	r1, #56	; 0x38
 80040c8:	4604      	mov	r4, r0
 80040ca:	f026 fbd2 	bl	802a872 <_ZdlPvj>
 80040ce:	4620      	mov	r0, r4
 80040d0:	bd10      	pop	{r4, pc}

080040d2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80040d2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80040d4:	f012 fb18 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 80040d8:	6803      	ldr	r3, [r0, #0]
    }
 80040da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80040de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040e0:	4718      	bx	r3
	...

080040e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80040e4:	b513      	push	{r0, r1, r4, lr}
 80040e6:	4604      	mov	r4, r0
        animationCounter++;
 80040e8:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80040ea:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80040ec:	3001      	adds	r0, #1
 80040ee:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80040f0:	4298      	cmp	r0, r3
        animationCounter++;
 80040f2:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80040f4:	d905      	bls.n	8004102 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80040f6:	2301      	movs	r3, #1
 80040f8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80040fa:	2300      	movs	r3, #0
 80040fc:	72a3      	strb	r3, [r4, #10]
    }
 80040fe:	b002      	add	sp, #8
 8004100:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004102:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004106:	2100      	movs	r1, #0
 8004108:	f014 f96e 	bl	80183e8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800410c:	f010 0201 	ands.w	r2, r0, #1
 8004110:	b283      	uxth	r3, r0
 8004112:	d12a      	bne.n	800416a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004114:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004116:	4a19      	ldr	r2, [pc, #100]	; (800417c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004118:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800411c:	89e3      	ldrh	r3, [r4, #14]
 800411e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004120:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004124:	82a0      	strh	r0, [r4, #20]
 8004126:	2000      	movs	r0, #0
 8004128:	1ad2      	subs	r2, r2, r3
 800412a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800412e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004130:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004132:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004134:	4a12      	ldr	r2, [pc, #72]	; (8004180 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004136:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800413a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800413c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004140:	691b      	ldr	r3, [r3, #16]
 8004142:	f8ad 1000 	strh.w	r1, [sp]
 8004146:	f8ad 2006 	strh.w	r2, [sp, #6]
 800414a:	4669      	mov	r1, sp
 800414c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800414e:	7aa3      	ldrb	r3, [r4, #10]
 8004150:	2b01      	cmp	r3, #1
 8004152:	d1d4      	bne.n	80040fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004154:	4b0b      	ldr	r3, [pc, #44]	; (8004184 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004156:	781b      	ldrb	r3, [r3, #0]
 8004158:	2b00      	cmp	r3, #0
 800415a:	d0d0      	beq.n	80040fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800415c:	f012 fad4 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004160:	b002      	add	sp, #8
 8004162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004166:	f012 bad5 	b.w	8016714 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800416a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800416e:	2800      	cmp	r0, #0
 8004170:	bfd8      	it	le
 8004172:	460a      	movle	r2, r1
 8004174:	4413      	add	r3, r2
 8004176:	81e3      	strh	r3, [r4, #14]
 8004178:	e7cd      	b.n	8004116 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800417a:	bf00      	nop
 800417c:	200138a8 	.word	0x200138a8
 8004180:	200138aa 	.word	0x200138aa
 8004184:	200138b2 	.word	0x200138b2

08004188 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004188:	b510      	push	{r4, lr}
 800418a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800418c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004190:	b158      	cbz	r0, 80041aa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004192:	6803      	ldr	r3, [r0, #0]
 8004194:	68db      	ldr	r3, [r3, #12]
 8004196:	4798      	blx	r3
 8004198:	b138      	cbz	r0, 80041aa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800419a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800419e:	6803      	ldr	r3, [r0, #0]
 80041a0:	689b      	ldr	r3, [r3, #8]
 80041a2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80041a4:	2300      	movs	r3, #0
 80041a6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80041aa:	bd10      	pop	{r4, pc}

080041ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80041ac:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041b0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80041b4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041b6:	68a8      	ldr	r0, [r5, #8]
 80041b8:	6803      	ldr	r3, [r0, #0]
 80041ba:	6a1b      	ldr	r3, [r3, #32]
 80041bc:	4798      	blx	r3
 80041be:	2897      	cmp	r0, #151	; 0x97
 80041c0:	d805      	bhi.n	80041ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80041c2:	4b46      	ldr	r3, [pc, #280]	; (80042dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80041c4:	4a46      	ldr	r2, [pc, #280]	; (80042e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80041c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041c8:	4846      	ldr	r0, [pc, #280]	; (80042e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80041ca:	f027 f965 	bl	802b498 <__assert_func>
 80041ce:	6868      	ldr	r0, [r5, #4]
 80041d0:	6803      	ldr	r3, [r0, #0]
 80041d2:	6a1b      	ldr	r3, [r3, #32]
 80041d4:	4798      	blx	r3
 80041d6:	280f      	cmp	r0, #15
 80041d8:	d803      	bhi.n	80041e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80041da:	4b43      	ldr	r3, [pc, #268]	; (80042e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80041dc:	4a40      	ldr	r2, [pc, #256]	; (80042e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80041de:	21a4      	movs	r1, #164	; 0xa4
 80041e0:	e7f2      	b.n	80041c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041e2:	68e8      	ldr	r0, [r5, #12]
 80041e4:	6803      	ldr	r3, [r0, #0]
 80041e6:	6a1b      	ldr	r3, [r3, #32]
 80041e8:	4798      	blx	r3
 80041ea:	280b      	cmp	r0, #11
 80041ec:	d803      	bhi.n	80041f6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80041ee:	4b3f      	ldr	r3, [pc, #252]	; (80042ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80041f0:	4a3b      	ldr	r2, [pc, #236]	; (80042e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80041f2:	21a5      	movs	r1, #165	; 0xa5
 80041f4:	e7e8      	b.n	80041c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80041f6:	f012 fa87 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041fa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80042f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80041fe:	3004      	adds	r0, #4
 8004200:	f012 fae8 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004204:	f8d9 0000 	ldr.w	r0, [r9]
 8004208:	b110      	cbz	r0, 8004210 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800420a:	6803      	ldr	r3, [r0, #0]
 800420c:	68db      	ldr	r3, [r3, #12]
 800420e:	4798      	blx	r3
    if (*currentTrans)
 8004210:	f8d9 0000 	ldr.w	r0, [r9]
 8004214:	b110      	cbz	r0, 800421c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	4798      	blx	r3
    if (*currentScreen)
 800421c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80042f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004220:	f8d8 0000 	ldr.w	r0, [r8]
 8004224:	b110      	cbz	r0, 800422c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004226:	6803      	ldr	r3, [r0, #0]
 8004228:	695b      	ldr	r3, [r3, #20]
 800422a:	4798      	blx	r3
    if (*currentPresenter)
 800422c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004230:	b110      	cbz	r0, 8004238 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004232:	6803      	ldr	r3, [r0, #0]
 8004234:	685b      	ldr	r3, [r3, #4]
 8004236:	4798      	blx	r3
    if (*currentScreen)
 8004238:	f8d8 0000 	ldr.w	r0, [r8]
 800423c:	b110      	cbz	r0, 8004244 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800423e:	6803      	ldr	r3, [r0, #0]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	4798      	blx	r3
    if (*currentPresenter)
 8004244:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004248:	b110      	cbz	r0, 8004250 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800424a:	6803      	ldr	r3, [r0, #0]
 800424c:	689b      	ldr	r3, [r3, #8]
 800424e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004250:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004252:	6803      	ldr	r3, [r0, #0]
 8004254:	2100      	movs	r1, #0
 8004256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004258:	4798      	blx	r3
        : screenContainer(0), done(false)
 800425a:	f04f 0b00 	mov.w	fp, #0
 800425e:	4b24      	ldr	r3, [pc, #144]	; (80042f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004260:	6003      	str	r3, [r0, #0]
 8004262:	4604      	mov	r4, r0
 8004264:	f8c0 b004 	str.w	fp, [r0, #4]
 8004268:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800426c:	68a8      	ldr	r0, [r5, #8]
 800426e:	6803      	ldr	r3, [r0, #0]
 8004270:	4659      	mov	r1, fp
 8004272:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004274:	4798      	blx	r3
 8004276:	4606      	mov	r6, r0
 8004278:	f005 f8bc 	bl	80093f4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800427c:	6868      	ldr	r0, [r5, #4]
 800427e:	6803      	ldr	r3, [r0, #0]
 8004280:	4659      	mov	r1, fp
 8004282:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004284:	4798      	blx	r3
 8004286:	4631      	mov	r1, r6
 8004288:	4605      	mov	r5, r0
 800428a:	f005 f88f 	bl	80093ac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800428e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004292:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004296:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800429a:	b1e5      	cbz	r5, 80042d6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 800429c:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800429e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042a2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80042a4:	f8c5 a008 	str.w	sl, [r5, #8]
 80042a8:	4630      	mov	r0, r6
 80042aa:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80042ac:	63f5      	str	r5, [r6, #60]	; 0x3c
 80042ae:	4798      	blx	r3
    newPresenter->activate();
 80042b0:	682b      	ldr	r3, [r5, #0]
 80042b2:	4628      	mov	r0, r5
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042b8:	4621      	mov	r1, r4
 80042ba:	4630      	mov	r0, r6
 80042bc:	f014 f850 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042c0:	6823      	ldr	r3, [r4, #0]
 80042c2:	4620      	mov	r0, r4
 80042c4:	691b      	ldr	r3, [r3, #16]
 80042c6:	4798      	blx	r3
    newTransition->invalidate();
 80042c8:	6823      	ldr	r3, [r4, #0]
 80042ca:	695b      	ldr	r3, [r3, #20]
 80042cc:	4620      	mov	r0, r4
}
 80042ce:	b001      	add	sp, #4
 80042d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042d4:	4718      	bx	r3
    model->bind(newPresenter);
 80042d6:	462b      	mov	r3, r5
 80042d8:	e7e1      	b.n	800429e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80042da:	bf00      	nop
 80042dc:	0802d3d4 	.word	0x0802d3d4
 80042e0:	0802d462 	.word	0x0802d462
 80042e4:	0802d570 	.word	0x0802d570
 80042e8:	0802d5b7 	.word	0x0802d5b7
 80042ec:	0802d65a 	.word	0x0802d65a
 80042f0:	0802ea78 	.word	0x0802ea78
 80042f4:	200138fc 	.word	0x200138fc
 80042f8:	200138f8 	.word	0x200138f8

080042fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80042fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80042fe:	4604      	mov	r4, r0
        animationCounter++;
 8004300:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004302:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004304:	3001      	adds	r0, #1
 8004306:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004308:	4298      	cmp	r0, r3
        animationCounter++;
 800430a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800430c:	d905      	bls.n	800431a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800430e:	2301      	movs	r3, #1
 8004310:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004312:	2300      	movs	r3, #0
 8004314:	72a3      	strb	r3, [r4, #10]
    }
 8004316:	b003      	add	sp, #12
 8004318:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800431a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800431e:	2100      	movs	r1, #0
 8004320:	f014 f862 	bl	80183e8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004324:	f010 0201 	ands.w	r2, r0, #1
 8004328:	b283      	uxth	r3, r0
 800432a:	d128      	bne.n	800437e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800432c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800432e:	4b18      	ldr	r3, [pc, #96]	; (8004390 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004330:	4818      	ldr	r0, [pc, #96]	; (8004394 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004332:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004334:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004336:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004338:	f9b0 0000 	ldrsh.w	r0, [r0]
 800433c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004340:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004342:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004344:	442b      	add	r3, r5
 8004346:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004348:	b212      	sxth	r2, r2
 800434a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800434e:	6803      	ldr	r3, [r0, #0]
 8004350:	8322      	strh	r2, [r4, #24]
 8004352:	f8ad 2000 	strh.w	r2, [sp]
 8004356:	2200      	movs	r2, #0
 8004358:	691b      	ldr	r3, [r3, #16]
 800435a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800435e:	4669      	mov	r1, sp
 8004360:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004362:	7aa3      	ldrb	r3, [r4, #10]
 8004364:	2b01      	cmp	r3, #1
 8004366:	d1d6      	bne.n	8004316 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004368:	4b0b      	ldr	r3, [pc, #44]	; (8004398 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800436a:	781b      	ldrb	r3, [r3, #0]
 800436c:	2b00      	cmp	r3, #0
 800436e:	d0d2      	beq.n	8004316 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004370:	f012 f9ca 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004374:	b003      	add	sp, #12
 8004376:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800437a:	f012 b9cb 	b.w	8016714 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800437e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004382:	2800      	cmp	r0, #0
 8004384:	bfd8      	it	le
 8004386:	460a      	movle	r2, r1
 8004388:	4413      	add	r3, r2
 800438a:	81e3      	strh	r3, [r4, #14]
 800438c:	e7cf      	b.n	800432e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800438e:	bf00      	nop
 8004390:	200138a8 	.word	0x200138a8
 8004394:	200138aa 	.word	0x200138aa
 8004398:	200138b2 	.word	0x200138b2

0800439c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 800439c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043a0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80043a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043a6:	68a8      	ldr	r0, [r5, #8]
 80043a8:	6803      	ldr	r3, [r0, #0]
 80043aa:	6a1b      	ldr	r3, [r3, #32]
 80043ac:	4798      	blx	r3
 80043ae:	f241 137b 	movw	r3, #4475	; 0x117b
 80043b2:	4298      	cmp	r0, r3
 80043b4:	d805      	bhi.n	80043c2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80043b6:	4b46      	ldr	r3, [pc, #280]	; (80044d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80043b8:	4a46      	ldr	r2, [pc, #280]	; (80044d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80043ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043bc:	4846      	ldr	r0, [pc, #280]	; (80044d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80043be:	f027 f86b 	bl	802b498 <__assert_func>
 80043c2:	6868      	ldr	r0, [r5, #4]
 80043c4:	6803      	ldr	r3, [r0, #0]
 80043c6:	6a1b      	ldr	r3, [r3, #32]
 80043c8:	4798      	blx	r3
 80043ca:	280f      	cmp	r0, #15
 80043cc:	d803      	bhi.n	80043d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80043ce:	4b43      	ldr	r3, [pc, #268]	; (80044dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80043d0:	4a40      	ldr	r2, [pc, #256]	; (80044d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80043d2:	21a4      	movs	r1, #164	; 0xa4
 80043d4:	e7f2      	b.n	80043bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043d6:	68e8      	ldr	r0, [r5, #12]
 80043d8:	6803      	ldr	r3, [r0, #0]
 80043da:	6a1b      	ldr	r3, [r3, #32]
 80043dc:	4798      	blx	r3
 80043de:	280b      	cmp	r0, #11
 80043e0:	d803      	bhi.n	80043ea <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80043e2:	4b3f      	ldr	r3, [pc, #252]	; (80044e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80043e4:	4a3b      	ldr	r2, [pc, #236]	; (80044d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80043e6:	21a5      	movs	r1, #165	; 0xa5
 80043e8:	e7e8      	b.n	80043bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043ea:	f012 f98d 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043ee:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80044e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80043f2:	3004      	adds	r0, #4
 80043f4:	f012 f9ee 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043f8:	f8d9 0000 	ldr.w	r0, [r9]
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	68db      	ldr	r3, [r3, #12]
 8004402:	4798      	blx	r3
    if (*currentTrans)
 8004404:	f8d9 0000 	ldr.w	r0, [r9]
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	4798      	blx	r3
    if (*currentScreen)
 8004410:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80044ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004414:	f8d8 0000 	ldr.w	r0, [r8]
 8004418:	b110      	cbz	r0, 8004420 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800441a:	6803      	ldr	r3, [r0, #0]
 800441c:	695b      	ldr	r3, [r3, #20]
 800441e:	4798      	blx	r3
    if (*currentPresenter)
 8004420:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004424:	b110      	cbz	r0, 800442c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004426:	6803      	ldr	r3, [r0, #0]
 8004428:	685b      	ldr	r3, [r3, #4]
 800442a:	4798      	blx	r3
    if (*currentScreen)
 800442c:	f8d8 0000 	ldr.w	r0, [r8]
 8004430:	b110      	cbz	r0, 8004438 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004432:	6803      	ldr	r3, [r0, #0]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	4798      	blx	r3
    if (*currentPresenter)
 8004438:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800443c:	b110      	cbz	r0, 8004444 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	689b      	ldr	r3, [r3, #8]
 8004442:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004444:	68e8      	ldr	r0, [r5, #12]
 8004446:	6803      	ldr	r3, [r0, #0]
 8004448:	2100      	movs	r1, #0
 800444a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800444c:	4798      	blx	r3
 800444e:	f04f 0b00 	mov.w	fp, #0
 8004452:	4b24      	ldr	r3, [pc, #144]	; (80044e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004454:	6003      	str	r3, [r0, #0]
 8004456:	4604      	mov	r4, r0
 8004458:	f8c0 b004 	str.w	fp, [r0, #4]
 800445c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004460:	68a8      	ldr	r0, [r5, #8]
 8004462:	6803      	ldr	r3, [r0, #0]
 8004464:	4659      	mov	r1, fp
 8004466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004468:	4798      	blx	r3
 800446a:	4606      	mov	r6, r0
 800446c:	f004 fc66 	bl	8008d3c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004470:	6868      	ldr	r0, [r5, #4]
 8004472:	6803      	ldr	r3, [r0, #0]
 8004474:	4659      	mov	r1, fp
 8004476:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004478:	4798      	blx	r3
 800447a:	4631      	mov	r1, r6
 800447c:	4605      	mov	r5, r0
 800447e:	f004 fc37 	bl	8008cf0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004482:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004486:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800448a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800448e:	b1e5      	cbz	r5, 80044ca <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8004490:	1d2b      	adds	r3, r5, #4
 8004492:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004496:	6833      	ldr	r3, [r6, #0]
 8004498:	f8c5 a008 	str.w	sl, [r5, #8]
 800449c:	4630      	mov	r0, r6
 800449e:	68db      	ldr	r3, [r3, #12]
 80044a0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80044a2:	4798      	blx	r3
    newPresenter->activate();
 80044a4:	682b      	ldr	r3, [r5, #0]
 80044a6:	4628      	mov	r0, r5
 80044a8:	681b      	ldr	r3, [r3, #0]
 80044aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044ac:	4621      	mov	r1, r4
 80044ae:	4630      	mov	r0, r6
 80044b0:	f013 ff56 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044b4:	6823      	ldr	r3, [r4, #0]
 80044b6:	4620      	mov	r0, r4
 80044b8:	691b      	ldr	r3, [r3, #16]
 80044ba:	4798      	blx	r3
    newTransition->invalidate();
 80044bc:	6823      	ldr	r3, [r4, #0]
 80044be:	695b      	ldr	r3, [r3, #20]
 80044c0:	4620      	mov	r0, r4
}
 80044c2:	b001      	add	sp, #4
 80044c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044c8:	4718      	bx	r3
    model->bind(newPresenter);
 80044ca:	462b      	mov	r3, r5
 80044cc:	e7e1      	b.n	8004492 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80044ce:	bf00      	nop
 80044d0:	0802d3d4 	.word	0x0802d3d4
 80044d4:	0802d6fd 	.word	0x0802d6fd
 80044d8:	0802d570 	.word	0x0802d570
 80044dc:	0802d5b7 	.word	0x0802d5b7
 80044e0:	0802d65a 	.word	0x0802d65a
 80044e4:	0802ea78 	.word	0x0802ea78
 80044e8:	200138fc 	.word	0x200138fc
 80044ec:	200138f8 	.word	0x200138f8

080044f0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80044f0:	4b04      	ldr	r3, [pc, #16]	; (8004504 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80044f8:	b10a      	cbz	r2, 80044fe <_ZN8touchgfx3HAL3lcdEv+0xe>
 80044fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80044fc:	b900      	cbnz	r0, 8004500 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80044fe:	6898      	ldr	r0, [r3, #8]
    }
 8004500:	4770      	bx	lr
 8004502:	bf00      	nop
 8004504:	200138b4 	.word	0x200138b4

08004508 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800450a:	4604      	mov	r4, r0
 800450c:	4617      	mov	r7, r2
 800450e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004510:	f012 fa2e 	bl	8016970 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004514:	4b10      	ldr	r3, [pc, #64]	; (8004558 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004516:	601c      	str	r4, [r3, #0]
      model(m)
 8004518:	4b10      	ldr	r3, [pc, #64]	; (800455c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800451a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800451c:	4b10      	ldr	r3, [pc, #64]	; (8004560 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800451e:	2500      	movs	r5, #0
 8004520:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004524:	4b0f      	ldr	r3, [pc, #60]	; (8004564 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004526:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800452a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800452c:	6803      	ldr	r3, [r0, #0]
 800452e:	2101      	movs	r1, #1
 8004530:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004532:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004536:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800453a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800453c:	4628      	mov	r0, r5
 800453e:	f004 fa3b 	bl	80089b8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004542:	f7ff ffd5 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8004546:	f01b fe16 	bl	8020176 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800454a:	f7ff ffd1 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 800454e:	f01b fe8d 	bl	802026c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004552:	4620      	mov	r0, r4
 8004554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004556:	bf00      	nop
 8004558:	20013908 	.word	0x20013908
 800455c:	0802ea24 	.word	0x0802ea24
 8004560:	0802ea0c 	.word	0x0802ea0c
 8004564:	200138b4 	.word	0x200138b4

08004568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004568:	4b06      	ldr	r3, [pc, #24]	; (8004584 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800456a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800456e:	2300      	movs	r3, #0
 8004570:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004574:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004578:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800457c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004580:	4770      	bx	lr
 8004582:	bf00      	nop
 8004584:	0800439d 	.word	0x0800439d

08004588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8004588:	4b06      	ldr	r3, [pc, #24]	; (80045a4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800458a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800458e:	2300      	movs	r3, #0
 8004590:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004594:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004598:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800459c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045a0:	4770      	bx	lr
 80045a2:	bf00      	nop
 80045a4:	08004bad 	.word	0x08004bad

080045a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80045a8:	4b06      	ldr	r3, [pc, #24]	; (80045c4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80045aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045ae:	2300      	movs	r3, #0
 80045b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045c0:	4770      	bx	lr
 80045c2:	bf00      	nop
 80045c4:	080059d1 	.word	0x080059d1

080045c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80045c8:	4b06      	ldr	r3, [pc, #24]	; (80045e4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80045ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045ce:	2300      	movs	r3, #0
 80045d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045e0:	4770      	bx	lr
 80045e2:	bf00      	nop
 80045e4:	08004a6d 	.word	0x08004a6d

080045e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80045e8:	4b06      	ldr	r3, [pc, #24]	; (8004604 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80045ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045ee:	2300      	movs	r3, #0
 80045f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004600:	4770      	bx	lr
 8004602:	bf00      	nop
 8004604:	08005891 	.word	0x08005891

08004608 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004608:	4b06      	ldr	r3, [pc, #24]	; (8004624 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800460a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800460e:	2300      	movs	r3, #0
 8004610:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004614:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004618:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800461c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004620:	4770      	bx	lr
 8004622:	bf00      	nop
 8004624:	08005751 	.word	0x08005751

08004628 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004628:	4b06      	ldr	r3, [pc, #24]	; (8004644 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800462a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800462e:	2300      	movs	r3, #0
 8004630:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004634:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004638:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800463c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004640:	4770      	bx	lr
 8004642:	bf00      	nop
 8004644:	08005611 	.word	0x08005611

08004648 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004648:	4b06      	ldr	r3, [pc, #24]	; (8004664 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800464a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800464e:	2300      	movs	r3, #0
 8004650:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004654:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004658:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800465c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004660:	4770      	bx	lr
 8004662:	bf00      	nop
 8004664:	080054d1 	.word	0x080054d1

08004668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004668:	4b06      	ldr	r3, [pc, #24]	; (8004684 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800466a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800466e:	2300      	movs	r3, #0
 8004670:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004674:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004678:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800467c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004680:	4770      	bx	lr
 8004682:	bf00      	nop
 8004684:	0800492d 	.word	0x0800492d

08004688 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004688:	4b06      	ldr	r3, [pc, #24]	; (80046a4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 800468a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800468e:	2300      	movs	r3, #0
 8004690:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004694:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004698:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800469c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046a0:	4770      	bx	lr
 80046a2:	bf00      	nop
 80046a4:	08005391 	.word	0x08005391

080046a8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80046a8:	4b06      	ldr	r3, [pc, #24]	; (80046c4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80046aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046ae:	2300      	movs	r3, #0
 80046b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046c0:	4770      	bx	lr
 80046c2:	bf00      	nop
 80046c4:	08005251 	.word	0x08005251

080046c8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80046c8:	4b06      	ldr	r3, [pc, #24]	; (80046e4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80046ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046ce:	2300      	movs	r3, #0
 80046d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046e0:	4770      	bx	lr
 80046e2:	bf00      	nop
 80046e4:	08005111 	.word	0x08005111

080046e8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80046e8:	4b06      	ldr	r3, [pc, #24]	; (8004704 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80046ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046ee:	2300      	movs	r3, #0
 80046f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004700:	4770      	bx	lr
 8004702:	bf00      	nop
 8004704:	080047ed 	.word	0x080047ed

08004708 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004708:	4b06      	ldr	r3, [pc, #24]	; (8004724 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800470a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800470e:	2300      	movs	r3, #0
 8004710:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004714:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004718:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800471c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004720:	4770      	bx	lr
 8004722:	bf00      	nop
 8004724:	08004fd1 	.word	0x08004fd1

08004728 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8004728:	4b06      	ldr	r3, [pc, #24]	; (8004744 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800472a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800472e:	2300      	movs	r3, #0
 8004730:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004734:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004738:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800473c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004740:	4770      	bx	lr
 8004742:	bf00      	nop
 8004744:	08004e91 	.word	0x08004e91

08004748 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004748:	4b06      	ldr	r3, [pc, #24]	; (8004764 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 800474a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800474e:	2300      	movs	r3, #0
 8004750:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004754:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004758:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800475c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004760:	4770      	bx	lr
 8004762:	bf00      	nop
 8004764:	08004d51 	.word	0x08004d51

08004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004768:	4b06      	ldr	r3, [pc, #24]	; (8004784 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800476a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800476e:	2300      	movs	r3, #0
 8004770:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004774:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004778:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800477c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004780:	4770      	bx	lr
 8004782:	bf00      	nop
 8004784:	080041ad 	.word	0x080041ad

08004788 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004788:	6803      	ldr	r3, [r0, #0]
 800478a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800478c:	4718      	bx	r3
	...

08004790 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004790:	4b12      	ldr	r3, [pc, #72]	; (80047dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004792:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004794:	6003      	str	r3, [r0, #0]
 8004796:	f44f 7380 	mov.w	r3, #256	; 0x100
 800479a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800479c:	4b10      	ldr	r3, [pc, #64]	; (80047e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800479e:	7241      	strb	r1, [r0, #9]
 80047a0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80047a2:	4910      	ldr	r1, [pc, #64]	; (80047e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80047a4:	4b10      	ldr	r3, [pc, #64]	; (80047e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80047a6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80047aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80047ae:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80047b0:	2200      	movs	r2, #0
 80047b2:	6042      	str	r2, [r0, #4]
 80047b4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80047b6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80047b8:	81c2      	strh	r2, [r0, #14]
          solid()
 80047ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80047be:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80047c2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80047c6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80047ca:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80047cc:	9100      	str	r1, [sp, #0]
 80047ce:	3010      	adds	r0, #16
 80047d0:	4611      	mov	r1, r2
 80047d2:	f7fe f845 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80047d6:	4620      	mov	r0, r4
 80047d8:	b002      	add	sp, #8
 80047da:	bd10      	pop	{r4, pc}
 80047dc:	0802eac0 	.word	0x0802eac0
 80047e0:	0802e9a4 	.word	0x0802e9a4
 80047e4:	200138aa 	.word	0x200138aa
 80047e8:	200138a8 	.word	0x200138a8

080047ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 80047ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047f0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047f4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047f6:	68a0      	ldr	r0, [r4, #8]
 80047f8:	6803      	ldr	r3, [r0, #0]
 80047fa:	6a1b      	ldr	r3, [r3, #32]
 80047fc:	4798      	blx	r3
 80047fe:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004802:	d205      	bcs.n	8004810 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004804:	4b42      	ldr	r3, [pc, #264]	; (8004910 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004806:	4a43      	ldr	r2, [pc, #268]	; (8004914 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004808:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800480a:	4843      	ldr	r0, [pc, #268]	; (8004918 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 800480c:	f026 fe44 	bl	802b498 <__assert_func>
 8004810:	6860      	ldr	r0, [r4, #4]
 8004812:	6803      	ldr	r3, [r0, #0]
 8004814:	6a1b      	ldr	r3, [r3, #32]
 8004816:	4798      	blx	r3
 8004818:	280f      	cmp	r0, #15
 800481a:	d803      	bhi.n	8004824 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 800481c:	4b3f      	ldr	r3, [pc, #252]	; (800491c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 800481e:	4a3d      	ldr	r2, [pc, #244]	; (8004914 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004820:	21a4      	movs	r1, #164	; 0xa4
 8004822:	e7f2      	b.n	800480a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004824:	68e0      	ldr	r0, [r4, #12]
 8004826:	6803      	ldr	r3, [r0, #0]
 8004828:	6a1b      	ldr	r3, [r3, #32]
 800482a:	4798      	blx	r3
 800482c:	2837      	cmp	r0, #55	; 0x37
 800482e:	d803      	bhi.n	8004838 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004830:	4b3b      	ldr	r3, [pc, #236]	; (8004920 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004832:	4a38      	ldr	r2, [pc, #224]	; (8004914 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004834:	21a5      	movs	r1, #165	; 0xa5
 8004836:	e7e8      	b.n	800480a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004838:	f011 ff66 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800483c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004924 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004840:	3004      	adds	r0, #4
 8004842:	f011 ffc7 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004846:	f8d9 0000 	ldr.w	r0, [r9]
 800484a:	b110      	cbz	r0, 8004852 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 800484c:	6803      	ldr	r3, [r0, #0]
 800484e:	68db      	ldr	r3, [r3, #12]
 8004850:	4798      	blx	r3
    if (*currentTrans)
 8004852:	f8d9 0000 	ldr.w	r0, [r9]
 8004856:	b110      	cbz	r0, 800485e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004858:	6803      	ldr	r3, [r0, #0]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	4798      	blx	r3
    if (*currentScreen)
 800485e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004928 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004862:	f8d8 0000 	ldr.w	r0, [r8]
 8004866:	b110      	cbz	r0, 800486e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004868:	6803      	ldr	r3, [r0, #0]
 800486a:	695b      	ldr	r3, [r3, #20]
 800486c:	4798      	blx	r3
    if (*currentPresenter)
 800486e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004872:	b110      	cbz	r0, 800487a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004874:	6803      	ldr	r3, [r0, #0]
 8004876:	685b      	ldr	r3, [r3, #4]
 8004878:	4798      	blx	r3
    if (*currentScreen)
 800487a:	f8d8 0000 	ldr.w	r0, [r8]
 800487e:	b110      	cbz	r0, 8004886 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004880:	6803      	ldr	r3, [r0, #0]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	4798      	blx	r3
    if (*currentPresenter)
 8004886:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800488a:	b110      	cbz	r0, 8004892 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800488c:	6803      	ldr	r3, [r0, #0]
 800488e:	689b      	ldr	r3, [r3, #8]
 8004890:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004892:	68e0      	ldr	r0, [r4, #12]
 8004894:	2100      	movs	r1, #0
 8004896:	f7ff ff77 	bl	8004788 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800489a:	2114      	movs	r1, #20
 800489c:	4605      	mov	r5, r0
 800489e:	f7ff ff77 	bl	8004790 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80048a2:	68a0      	ldr	r0, [r4, #8]
 80048a4:	6803      	ldr	r3, [r0, #0]
 80048a6:	2100      	movs	r1, #0
 80048a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048aa:	4798      	blx	r3
 80048ac:	4606      	mov	r6, r0
 80048ae:	f004 f921 	bl	8008af4 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048b2:	6860      	ldr	r0, [r4, #4]
 80048b4:	6803      	ldr	r3, [r0, #0]
 80048b6:	2100      	movs	r1, #0
 80048b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048ba:	4798      	blx	r3
 80048bc:	4631      	mov	r1, r6
 80048be:	4604      	mov	r4, r0
 80048c0:	f004 f8f2 	bl	8008aa8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80048c4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048c8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048cc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048d0:	b1dc      	cbz	r4, 800490a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 80048d2:	1d23      	adds	r3, r4, #4
 80048d4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048d8:	6833      	ldr	r3, [r6, #0]
 80048da:	f8c4 a008 	str.w	sl, [r4, #8]
 80048de:	4630      	mov	r0, r6
 80048e0:	68db      	ldr	r3, [r3, #12]
 80048e2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048e4:	4798      	blx	r3
    newPresenter->activate();
 80048e6:	6823      	ldr	r3, [r4, #0]
 80048e8:	4620      	mov	r0, r4
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048ee:	4629      	mov	r1, r5
 80048f0:	4630      	mov	r0, r6
 80048f2:	f013 fd35 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048f6:	682b      	ldr	r3, [r5, #0]
 80048f8:	4628      	mov	r0, r5
 80048fa:	691b      	ldr	r3, [r3, #16]
 80048fc:	4798      	blx	r3
    newTransition->invalidate();
 80048fe:	682b      	ldr	r3, [r5, #0]
 8004900:	4628      	mov	r0, r5
 8004902:	695b      	ldr	r3, [r3, #20]
}
 8004904:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004908:	4718      	bx	r3
    model->bind(newPresenter);
 800490a:	4623      	mov	r3, r4
 800490c:	e7e2      	b.n	80048d4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 800490e:	bf00      	nop
 8004910:	0802d3d4 	.word	0x0802d3d4
 8004914:	0802d805 	.word	0x0802d805
 8004918:	0802d570 	.word	0x0802d570
 800491c:	0802d5b7 	.word	0x0802d5b7
 8004920:	0802d65a 	.word	0x0802d65a
 8004924:	200138fc 	.word	0x200138fc
 8004928:	200138f8 	.word	0x200138f8

0800492c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 800492c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004930:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004934:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004936:	68a0      	ldr	r0, [r4, #8]
 8004938:	6803      	ldr	r3, [r0, #0]
 800493a:	6a1b      	ldr	r3, [r3, #32]
 800493c:	4798      	blx	r3
 800493e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004942:	d205      	bcs.n	8004950 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004944:	4b42      	ldr	r3, [pc, #264]	; (8004a50 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004946:	4a43      	ldr	r2, [pc, #268]	; (8004a54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004948:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800494a:	4843      	ldr	r0, [pc, #268]	; (8004a58 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 800494c:	f026 fda4 	bl	802b498 <__assert_func>
 8004950:	6860      	ldr	r0, [r4, #4]
 8004952:	6803      	ldr	r3, [r0, #0]
 8004954:	6a1b      	ldr	r3, [r3, #32]
 8004956:	4798      	blx	r3
 8004958:	280f      	cmp	r0, #15
 800495a:	d803      	bhi.n	8004964 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 800495c:	4b3f      	ldr	r3, [pc, #252]	; (8004a5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800495e:	4a3d      	ldr	r2, [pc, #244]	; (8004a54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004960:	21a4      	movs	r1, #164	; 0xa4
 8004962:	e7f2      	b.n	800494a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004964:	68e0      	ldr	r0, [r4, #12]
 8004966:	6803      	ldr	r3, [r0, #0]
 8004968:	6a1b      	ldr	r3, [r3, #32]
 800496a:	4798      	blx	r3
 800496c:	2837      	cmp	r0, #55	; 0x37
 800496e:	d803      	bhi.n	8004978 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004970:	4b3b      	ldr	r3, [pc, #236]	; (8004a60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004972:	4a38      	ldr	r2, [pc, #224]	; (8004a54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004974:	21a5      	movs	r1, #165	; 0xa5
 8004976:	e7e8      	b.n	800494a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004978:	f011 fec6 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800497c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a64 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004980:	3004      	adds	r0, #4
 8004982:	f011 ff27 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004986:	f8d9 0000 	ldr.w	r0, [r9]
 800498a:	b110      	cbz	r0, 8004992 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 800498c:	6803      	ldr	r3, [r0, #0]
 800498e:	68db      	ldr	r3, [r3, #12]
 8004990:	4798      	blx	r3
    if (*currentTrans)
 8004992:	f8d9 0000 	ldr.w	r0, [r9]
 8004996:	b110      	cbz	r0, 800499e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004998:	6803      	ldr	r3, [r0, #0]
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	4798      	blx	r3
    if (*currentScreen)
 800499e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80049a2:	f8d8 0000 	ldr.w	r0, [r8]
 80049a6:	b110      	cbz	r0, 80049ae <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80049a8:	6803      	ldr	r3, [r0, #0]
 80049aa:	695b      	ldr	r3, [r3, #20]
 80049ac:	4798      	blx	r3
    if (*currentPresenter)
 80049ae:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049b2:	b110      	cbz	r0, 80049ba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80049b4:	6803      	ldr	r3, [r0, #0]
 80049b6:	685b      	ldr	r3, [r3, #4]
 80049b8:	4798      	blx	r3
    if (*currentScreen)
 80049ba:	f8d8 0000 	ldr.w	r0, [r8]
 80049be:	b110      	cbz	r0, 80049c6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80049c0:	6803      	ldr	r3, [r0, #0]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	4798      	blx	r3
    if (*currentPresenter)
 80049c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049ca:	b110      	cbz	r0, 80049d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80049cc:	6803      	ldr	r3, [r0, #0]
 80049ce:	689b      	ldr	r3, [r3, #8]
 80049d0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049d2:	68e0      	ldr	r0, [r4, #12]
 80049d4:	2100      	movs	r1, #0
 80049d6:	f7ff fed7 	bl	8004788 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80049da:	2114      	movs	r1, #20
 80049dc:	4605      	mov	r5, r0
 80049de:	f7ff fed7 	bl	8004790 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049e2:	68a0      	ldr	r0, [r4, #8]
 80049e4:	6803      	ldr	r3, [r0, #0]
 80049e6:	2100      	movs	r1, #0
 80049e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049ea:	4798      	blx	r3
 80049ec:	4606      	mov	r6, r0
 80049ee:	f004 fa65 	bl	8008ebc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049f2:	6860      	ldr	r0, [r4, #4]
 80049f4:	6803      	ldr	r3, [r0, #0]
 80049f6:	2100      	movs	r1, #0
 80049f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049fa:	4798      	blx	r3
 80049fc:	4631      	mov	r1, r6
 80049fe:	4604      	mov	r4, r0
 8004a00:	f004 fa36 	bl	8008e70 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004a04:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a08:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a0c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a10:	b1dc      	cbz	r4, 8004a4a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004a12:	1d23      	adds	r3, r4, #4
 8004a14:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a18:	6833      	ldr	r3, [r6, #0]
 8004a1a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a1e:	4630      	mov	r0, r6
 8004a20:	68db      	ldr	r3, [r3, #12]
 8004a22:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a24:	4798      	blx	r3
    newPresenter->activate();
 8004a26:	6823      	ldr	r3, [r4, #0]
 8004a28:	4620      	mov	r0, r4
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a2e:	4629      	mov	r1, r5
 8004a30:	4630      	mov	r0, r6
 8004a32:	f013 fc95 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a36:	682b      	ldr	r3, [r5, #0]
 8004a38:	4628      	mov	r0, r5
 8004a3a:	691b      	ldr	r3, [r3, #16]
 8004a3c:	4798      	blx	r3
    newTransition->invalidate();
 8004a3e:	682b      	ldr	r3, [r5, #0]
 8004a40:	4628      	mov	r0, r5
 8004a42:	695b      	ldr	r3, [r3, #20]
}
 8004a44:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a48:	4718      	bx	r3
    model->bind(newPresenter);
 8004a4a:	4623      	mov	r3, r4
 8004a4c:	e7e2      	b.n	8004a14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004a4e:	bf00      	nop
 8004a50:	0802d3d4 	.word	0x0802d3d4
 8004a54:	0802d923 	.word	0x0802d923
 8004a58:	0802d570 	.word	0x0802d570
 8004a5c:	0802d5b7 	.word	0x0802d5b7
 8004a60:	0802d65a 	.word	0x0802d65a
 8004a64:	200138fc 	.word	0x200138fc
 8004a68:	200138f8 	.word	0x200138f8

08004a6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a70:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a74:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a76:	68a0      	ldr	r0, [r4, #8]
 8004a78:	6803      	ldr	r3, [r0, #0]
 8004a7a:	6a1b      	ldr	r3, [r3, #32]
 8004a7c:	4798      	blx	r3
 8004a7e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004a82:	d205      	bcs.n	8004a90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004a84:	4b42      	ldr	r3, [pc, #264]	; (8004b90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004a86:	4a43      	ldr	r2, [pc, #268]	; (8004b94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004a88:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a8a:	4843      	ldr	r0, [pc, #268]	; (8004b98 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004a8c:	f026 fd04 	bl	802b498 <__assert_func>
 8004a90:	6860      	ldr	r0, [r4, #4]
 8004a92:	6803      	ldr	r3, [r0, #0]
 8004a94:	6a1b      	ldr	r3, [r3, #32]
 8004a96:	4798      	blx	r3
 8004a98:	280f      	cmp	r0, #15
 8004a9a:	d803      	bhi.n	8004aa4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004a9c:	4b3f      	ldr	r3, [pc, #252]	; (8004b9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004a9e:	4a3d      	ldr	r2, [pc, #244]	; (8004b94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004aa0:	21a4      	movs	r1, #164	; 0xa4
 8004aa2:	e7f2      	b.n	8004a8a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004aa4:	68e0      	ldr	r0, [r4, #12]
 8004aa6:	6803      	ldr	r3, [r0, #0]
 8004aa8:	6a1b      	ldr	r3, [r3, #32]
 8004aaa:	4798      	blx	r3
 8004aac:	2837      	cmp	r0, #55	; 0x37
 8004aae:	d803      	bhi.n	8004ab8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004ab0:	4b3b      	ldr	r3, [pc, #236]	; (8004ba0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004ab2:	4a38      	ldr	r2, [pc, #224]	; (8004b94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004ab4:	21a5      	movs	r1, #165	; 0xa5
 8004ab6:	e7e8      	b.n	8004a8a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ab8:	f011 fe26 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004abc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ba4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004ac0:	3004      	adds	r0, #4
 8004ac2:	f011 fe87 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ac6:	f8d9 0000 	ldr.w	r0, [r9]
 8004aca:	b110      	cbz	r0, 8004ad2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004acc:	6803      	ldr	r3, [r0, #0]
 8004ace:	68db      	ldr	r3, [r3, #12]
 8004ad0:	4798      	blx	r3
    if (*currentTrans)
 8004ad2:	f8d9 0000 	ldr.w	r0, [r9]
 8004ad6:	b110      	cbz	r0, 8004ade <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ad8:	6803      	ldr	r3, [r0, #0]
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	4798      	blx	r3
    if (*currentScreen)
 8004ade:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ba8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004ae2:	f8d8 0000 	ldr.w	r0, [r8]
 8004ae6:	b110      	cbz	r0, 8004aee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004ae8:	6803      	ldr	r3, [r0, #0]
 8004aea:	695b      	ldr	r3, [r3, #20]
 8004aec:	4798      	blx	r3
    if (*currentPresenter)
 8004aee:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004af2:	b110      	cbz	r0, 8004afa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	685b      	ldr	r3, [r3, #4]
 8004af8:	4798      	blx	r3
    if (*currentScreen)
 8004afa:	f8d8 0000 	ldr.w	r0, [r8]
 8004afe:	b110      	cbz	r0, 8004b06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b00:	6803      	ldr	r3, [r0, #0]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	4798      	blx	r3
    if (*currentPresenter)
 8004b06:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b0a:	b110      	cbz	r0, 8004b12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	689b      	ldr	r3, [r3, #8]
 8004b10:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b12:	68e0      	ldr	r0, [r4, #12]
 8004b14:	2100      	movs	r1, #0
 8004b16:	f7ff fe37 	bl	8004788 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004b1a:	2114      	movs	r1, #20
 8004b1c:	4605      	mov	r5, r0
 8004b1e:	f7ff fe37 	bl	8004790 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b22:	68a0      	ldr	r0, [r4, #8]
 8004b24:	6803      	ldr	r3, [r0, #0]
 8004b26:	2100      	movs	r1, #0
 8004b28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b2a:	4798      	blx	r3
 8004b2c:	4606      	mov	r6, r0
 8004b2e:	f004 f965 	bl	8008dfc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b32:	6860      	ldr	r0, [r4, #4]
 8004b34:	6803      	ldr	r3, [r0, #0]
 8004b36:	2100      	movs	r1, #0
 8004b38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b3a:	4798      	blx	r3
 8004b3c:	4631      	mov	r1, r6
 8004b3e:	4604      	mov	r4, r0
 8004b40:	f004 f936 	bl	8008db0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004b44:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b48:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b4c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b50:	b1dc      	cbz	r4, 8004b8a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004b52:	1d23      	adds	r3, r4, #4
 8004b54:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b58:	6833      	ldr	r3, [r6, #0]
 8004b5a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b5e:	4630      	mov	r0, r6
 8004b60:	68db      	ldr	r3, [r3, #12]
 8004b62:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b64:	4798      	blx	r3
    newPresenter->activate();
 8004b66:	6823      	ldr	r3, [r4, #0]
 8004b68:	4620      	mov	r0, r4
 8004b6a:	681b      	ldr	r3, [r3, #0]
 8004b6c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b6e:	4629      	mov	r1, r5
 8004b70:	4630      	mov	r0, r6
 8004b72:	f013 fbf5 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b76:	682b      	ldr	r3, [r5, #0]
 8004b78:	4628      	mov	r0, r5
 8004b7a:	691b      	ldr	r3, [r3, #16]
 8004b7c:	4798      	blx	r3
    newTransition->invalidate();
 8004b7e:	682b      	ldr	r3, [r5, #0]
 8004b80:	4628      	mov	r0, r5
 8004b82:	695b      	ldr	r3, [r3, #20]
}
 8004b84:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b88:	4718      	bx	r3
    model->bind(newPresenter);
 8004b8a:	4623      	mov	r3, r4
 8004b8c:	e7e2      	b.n	8004b54 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004b8e:	bf00      	nop
 8004b90:	0802d3d4 	.word	0x0802d3d4
 8004b94:	0802da53 	.word	0x0802da53
 8004b98:	0802d570 	.word	0x0802d570
 8004b9c:	0802d5b7 	.word	0x0802d5b7
 8004ba0:	0802d65a 	.word	0x0802d65a
 8004ba4:	200138fc 	.word	0x200138fc
 8004ba8:	200138f8 	.word	0x200138f8

08004bac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bb0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bb4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bb6:	68a0      	ldr	r0, [r4, #8]
 8004bb8:	6803      	ldr	r3, [r0, #0]
 8004bba:	6a1b      	ldr	r3, [r3, #32]
 8004bbc:	4798      	blx	r3
 8004bbe:	f241 137b 	movw	r3, #4475	; 0x117b
 8004bc2:	4298      	cmp	r0, r3
 8004bc4:	d805      	bhi.n	8004bd2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004bc6:	4b42      	ldr	r3, [pc, #264]	; (8004cd0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004bc8:	4a42      	ldr	r2, [pc, #264]	; (8004cd4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004bca:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bcc:	4842      	ldr	r0, [pc, #264]	; (8004cd8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004bce:	f026 fc63 	bl	802b498 <__assert_func>
 8004bd2:	6860      	ldr	r0, [r4, #4]
 8004bd4:	6803      	ldr	r3, [r0, #0]
 8004bd6:	6a1b      	ldr	r3, [r3, #32]
 8004bd8:	4798      	blx	r3
 8004bda:	280f      	cmp	r0, #15
 8004bdc:	d803      	bhi.n	8004be6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004bde:	4b3f      	ldr	r3, [pc, #252]	; (8004cdc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004be0:	4a3c      	ldr	r2, [pc, #240]	; (8004cd4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004be2:	21a4      	movs	r1, #164	; 0xa4
 8004be4:	e7f2      	b.n	8004bcc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004be6:	68e0      	ldr	r0, [r4, #12]
 8004be8:	6803      	ldr	r3, [r0, #0]
 8004bea:	6a1b      	ldr	r3, [r3, #32]
 8004bec:	4798      	blx	r3
 8004bee:	2837      	cmp	r0, #55	; 0x37
 8004bf0:	d803      	bhi.n	8004bfa <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004bf2:	4b3b      	ldr	r3, [pc, #236]	; (8004ce0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004bf4:	4a37      	ldr	r2, [pc, #220]	; (8004cd4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004bf6:	21a5      	movs	r1, #165	; 0xa5
 8004bf8:	e7e8      	b.n	8004bcc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004bfa:	f011 fd85 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bfe:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ce4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004c02:	3004      	adds	r0, #4
 8004c04:	f011 fde6 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c08:	f8d9 0000 	ldr.w	r0, [r9]
 8004c0c:	b110      	cbz	r0, 8004c14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c0e:	6803      	ldr	r3, [r0, #0]
 8004c10:	68db      	ldr	r3, [r3, #12]
 8004c12:	4798      	blx	r3
    if (*currentTrans)
 8004c14:	f8d9 0000 	ldr.w	r0, [r9]
 8004c18:	b110      	cbz	r0, 8004c20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c1a:	6803      	ldr	r3, [r0, #0]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	4798      	blx	r3
    if (*currentScreen)
 8004c20:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ce8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004c24:	f8d8 0000 	ldr.w	r0, [r8]
 8004c28:	b110      	cbz	r0, 8004c30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c2a:	6803      	ldr	r3, [r0, #0]
 8004c2c:	695b      	ldr	r3, [r3, #20]
 8004c2e:	4798      	blx	r3
    if (*currentPresenter)
 8004c30:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c34:	b110      	cbz	r0, 8004c3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c36:	6803      	ldr	r3, [r0, #0]
 8004c38:	685b      	ldr	r3, [r3, #4]
 8004c3a:	4798      	blx	r3
    if (*currentScreen)
 8004c3c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c40:	b110      	cbz	r0, 8004c48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c42:	6803      	ldr	r3, [r0, #0]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	4798      	blx	r3
    if (*currentPresenter)
 8004c48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c4c:	b110      	cbz	r0, 8004c54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c4e:	6803      	ldr	r3, [r0, #0]
 8004c50:	689b      	ldr	r3, [r3, #8]
 8004c52:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c54:	68e0      	ldr	r0, [r4, #12]
 8004c56:	2100      	movs	r1, #0
 8004c58:	f7ff fd96 	bl	8004788 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c5c:	2114      	movs	r1, #20
 8004c5e:	4605      	mov	r5, r0
 8004c60:	f7ff fd96 	bl	8004790 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c64:	68a0      	ldr	r0, [r4, #8]
 8004c66:	6803      	ldr	r3, [r0, #0]
 8004c68:	2100      	movs	r1, #0
 8004c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c6c:	4798      	blx	r3
 8004c6e:	4606      	mov	r6, r0
 8004c70:	f004 f864 	bl	8008d3c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c74:	6860      	ldr	r0, [r4, #4]
 8004c76:	6803      	ldr	r3, [r0, #0]
 8004c78:	2100      	movs	r1, #0
 8004c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c7c:	4798      	blx	r3
 8004c7e:	4631      	mov	r1, r6
 8004c80:	4604      	mov	r4, r0
 8004c82:	f004 f835 	bl	8008cf0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004c86:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c8a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c8e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c92:	b1dc      	cbz	r4, 8004ccc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004c94:	1d23      	adds	r3, r4, #4
 8004c96:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c9a:	6833      	ldr	r3, [r6, #0]
 8004c9c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ca0:	4630      	mov	r0, r6
 8004ca2:	68db      	ldr	r3, [r3, #12]
 8004ca4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ca6:	4798      	blx	r3
    newPresenter->activate();
 8004ca8:	6823      	ldr	r3, [r4, #0]
 8004caa:	4620      	mov	r0, r4
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cb0:	4629      	mov	r1, r5
 8004cb2:	4630      	mov	r0, r6
 8004cb4:	f013 fb54 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cb8:	682b      	ldr	r3, [r5, #0]
 8004cba:	4628      	mov	r0, r5
 8004cbc:	691b      	ldr	r3, [r3, #16]
 8004cbe:	4798      	blx	r3
    newTransition->invalidate();
 8004cc0:	682b      	ldr	r3, [r5, #0]
 8004cc2:	4628      	mov	r0, r5
 8004cc4:	695b      	ldr	r3, [r3, #20]
}
 8004cc6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cca:	4718      	bx	r3
    model->bind(newPresenter);
 8004ccc:	4623      	mov	r3, r4
 8004cce:	e7e2      	b.n	8004c96 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004cd0:	0802d3d4 	.word	0x0802d3d4
 8004cd4:	0802db71 	.word	0x0802db71
 8004cd8:	0802d570 	.word	0x0802d570
 8004cdc:	0802d5b7 	.word	0x0802d5b7
 8004ce0:	0802d65a 	.word	0x0802d65a
 8004ce4:	200138fc 	.word	0x200138fc
 8004ce8:	200138f8 	.word	0x200138f8

08004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004cec:	6803      	ldr	r3, [r0, #0]
 8004cee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf0:	4718      	bx	r3
	...

08004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004cf4:	4b12      	ldr	r3, [pc, #72]	; (8004d40 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004cf6:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004cf8:	6003      	str	r3, [r0, #0]
 8004cfa:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004cfe:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004d00:	4b10      	ldr	r3, [pc, #64]	; (8004d44 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004d02:	7241      	strb	r1, [r0, #9]
 8004d04:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004d06:	4910      	ldr	r1, [pc, #64]	; (8004d48 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004d08:	4b10      	ldr	r3, [pc, #64]	; (8004d4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004d0a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004d0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004d12:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004d14:	2200      	movs	r2, #0
 8004d16:	6042      	str	r2, [r0, #4]
 8004d18:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004d1a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004d1c:	81c2      	strh	r2, [r0, #14]
          solid()
 8004d1e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004d22:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004d26:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004d2a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004d2e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004d30:	9100      	str	r1, [sp, #0]
 8004d32:	3010      	adds	r0, #16
 8004d34:	4611      	mov	r1, r2
 8004d36:	f7fd fd93 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004d3a:	4620      	mov	r0, r4
 8004d3c:	b002      	add	sp, #8
 8004d3e:	bd10      	pop	{r4, pc}
 8004d40:	0802ea9c 	.word	0x0802ea9c
 8004d44:	0802e9a4 	.word	0x0802e9a4
 8004d48:	200138aa 	.word	0x200138aa
 8004d4c:	200138a8 	.word	0x200138a8

08004d50 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d54:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d5a:	68a0      	ldr	r0, [r4, #8]
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	6a1b      	ldr	r3, [r3, #32]
 8004d60:	4798      	blx	r3
 8004d62:	f241 03af 	movw	r3, #4271	; 0x10af
 8004d66:	4298      	cmp	r0, r3
 8004d68:	d805      	bhi.n	8004d76 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004d6a:	4b42      	ldr	r3, [pc, #264]	; (8004e74 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004d6c:	4a42      	ldr	r2, [pc, #264]	; (8004e78 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004d6e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d70:	4842      	ldr	r0, [pc, #264]	; (8004e7c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004d72:	f026 fb91 	bl	802b498 <__assert_func>
 8004d76:	6860      	ldr	r0, [r4, #4]
 8004d78:	6803      	ldr	r3, [r0, #0]
 8004d7a:	6a1b      	ldr	r3, [r3, #32]
 8004d7c:	4798      	blx	r3
 8004d7e:	280f      	cmp	r0, #15
 8004d80:	d803      	bhi.n	8004d8a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004d82:	4b3f      	ldr	r3, [pc, #252]	; (8004e80 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004d84:	4a3c      	ldr	r2, [pc, #240]	; (8004e78 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004d86:	21a4      	movs	r1, #164	; 0xa4
 8004d88:	e7f2      	b.n	8004d70 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d8a:	68e0      	ldr	r0, [r4, #12]
 8004d8c:	6803      	ldr	r3, [r0, #0]
 8004d8e:	6a1b      	ldr	r3, [r3, #32]
 8004d90:	4798      	blx	r3
 8004d92:	2837      	cmp	r0, #55	; 0x37
 8004d94:	d803      	bhi.n	8004d9e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004d96:	4b3b      	ldr	r3, [pc, #236]	; (8004e84 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004d98:	4a37      	ldr	r2, [pc, #220]	; (8004e78 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004d9a:	21a5      	movs	r1, #165	; 0xa5
 8004d9c:	e7e8      	b.n	8004d70 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d9e:	f011 fcb3 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004da2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e88 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004da6:	3004      	adds	r0, #4
 8004da8:	f011 fd14 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dac:	f8d9 0000 	ldr.w	r0, [r9]
 8004db0:	b110      	cbz	r0, 8004db8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004db2:	6803      	ldr	r3, [r0, #0]
 8004db4:	68db      	ldr	r3, [r3, #12]
 8004db6:	4798      	blx	r3
    if (*currentTrans)
 8004db8:	f8d9 0000 	ldr.w	r0, [r9]
 8004dbc:	b110      	cbz	r0, 8004dc4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004dbe:	6803      	ldr	r3, [r0, #0]
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	4798      	blx	r3
    if (*currentScreen)
 8004dc4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004e8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004dc8:	f8d8 0000 	ldr.w	r0, [r8]
 8004dcc:	b110      	cbz	r0, 8004dd4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004dce:	6803      	ldr	r3, [r0, #0]
 8004dd0:	695b      	ldr	r3, [r3, #20]
 8004dd2:	4798      	blx	r3
    if (*currentPresenter)
 8004dd4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dd8:	b110      	cbz	r0, 8004de0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004dda:	6803      	ldr	r3, [r0, #0]
 8004ddc:	685b      	ldr	r3, [r3, #4]
 8004dde:	4798      	blx	r3
    if (*currentScreen)
 8004de0:	f8d8 0000 	ldr.w	r0, [r8]
 8004de4:	b110      	cbz	r0, 8004dec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004de6:	6803      	ldr	r3, [r0, #0]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	4798      	blx	r3
    if (*currentPresenter)
 8004dec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004df0:	b110      	cbz	r0, 8004df8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004df2:	6803      	ldr	r3, [r0, #0]
 8004df4:	689b      	ldr	r3, [r3, #8]
 8004df6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004df8:	68e0      	ldr	r0, [r4, #12]
 8004dfa:	2100      	movs	r1, #0
 8004dfc:	f7ff ff76 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e00:	2114      	movs	r1, #20
 8004e02:	4605      	mov	r5, r0
 8004e04:	f7ff ff76 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e08:	68a0      	ldr	r0, [r4, #8]
 8004e0a:	6803      	ldr	r3, [r0, #0]
 8004e0c:	2100      	movs	r1, #0
 8004e0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e10:	4798      	blx	r3
 8004e12:	4606      	mov	r6, r0
 8004e14:	f004 fa96 	bl	8009344 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e18:	6860      	ldr	r0, [r4, #4]
 8004e1a:	6803      	ldr	r3, [r0, #0]
 8004e1c:	2100      	movs	r1, #0
 8004e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e20:	4798      	blx	r3
 8004e22:	4631      	mov	r1, r6
 8004e24:	4604      	mov	r4, r0
 8004e26:	f004 fa67 	bl	80092f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004e2a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e2e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e32:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e36:	b1dc      	cbz	r4, 8004e70 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004e38:	1d23      	adds	r3, r4, #4
 8004e3a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e3e:	6833      	ldr	r3, [r6, #0]
 8004e40:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e44:	4630      	mov	r0, r6
 8004e46:	68db      	ldr	r3, [r3, #12]
 8004e48:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e4a:	4798      	blx	r3
    newPresenter->activate();
 8004e4c:	6823      	ldr	r3, [r4, #0]
 8004e4e:	4620      	mov	r0, r4
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e54:	4629      	mov	r1, r5
 8004e56:	4630      	mov	r0, r6
 8004e58:	f013 fa82 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e5c:	682b      	ldr	r3, [r5, #0]
 8004e5e:	4628      	mov	r0, r5
 8004e60:	691b      	ldr	r3, [r3, #16]
 8004e62:	4798      	blx	r3
    newTransition->invalidate();
 8004e64:	682b      	ldr	r3, [r5, #0]
 8004e66:	4628      	mov	r0, r5
 8004e68:	695b      	ldr	r3, [r3, #20]
}
 8004e6a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e6e:	4718      	bx	r3
    model->bind(newPresenter);
 8004e70:	4623      	mov	r3, r4
 8004e72:	e7e2      	b.n	8004e3a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004e74:	0802d3d4 	.word	0x0802d3d4
 8004e78:	0802dc8b 	.word	0x0802dc8b
 8004e7c:	0802d570 	.word	0x0802d570
 8004e80:	0802d5b7 	.word	0x0802d5b7
 8004e84:	0802d65a 	.word	0x0802d65a
 8004e88:	200138fc 	.word	0x200138fc
 8004e8c:	200138f8 	.word	0x200138f8

08004e90 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004e90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e94:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e9a:	68a0      	ldr	r0, [r4, #8]
 8004e9c:	6803      	ldr	r3, [r0, #0]
 8004e9e:	6a1b      	ldr	r3, [r3, #32]
 8004ea0:	4798      	blx	r3
 8004ea2:	f241 035b 	movw	r3, #4187	; 0x105b
 8004ea6:	4298      	cmp	r0, r3
 8004ea8:	d805      	bhi.n	8004eb6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8004eaa:	4b42      	ldr	r3, [pc, #264]	; (8004fb4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004eac:	4a42      	ldr	r2, [pc, #264]	; (8004fb8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004eae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004eb0:	4842      	ldr	r0, [pc, #264]	; (8004fbc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8004eb2:	f026 faf1 	bl	802b498 <__assert_func>
 8004eb6:	6860      	ldr	r0, [r4, #4]
 8004eb8:	6803      	ldr	r3, [r0, #0]
 8004eba:	6a1b      	ldr	r3, [r3, #32]
 8004ebc:	4798      	blx	r3
 8004ebe:	280f      	cmp	r0, #15
 8004ec0:	d803      	bhi.n	8004eca <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8004ec2:	4b3f      	ldr	r3, [pc, #252]	; (8004fc0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8004ec4:	4a3c      	ldr	r2, [pc, #240]	; (8004fb8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004ec6:	21a4      	movs	r1, #164	; 0xa4
 8004ec8:	e7f2      	b.n	8004eb0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004eca:	68e0      	ldr	r0, [r4, #12]
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	6a1b      	ldr	r3, [r3, #32]
 8004ed0:	4798      	blx	r3
 8004ed2:	2837      	cmp	r0, #55	; 0x37
 8004ed4:	d803      	bhi.n	8004ede <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8004ed6:	4b3b      	ldr	r3, [pc, #236]	; (8004fc4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8004ed8:	4a37      	ldr	r2, [pc, #220]	; (8004fb8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004eda:	21a5      	movs	r1, #165	; 0xa5
 8004edc:	e7e8      	b.n	8004eb0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004ede:	f011 fc13 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ee2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fc8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004ee6:	3004      	adds	r0, #4
 8004ee8:	f011 fc74 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004eec:	f8d9 0000 	ldr.w	r0, [r9]
 8004ef0:	b110      	cbz	r0, 8004ef8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ef2:	6803      	ldr	r3, [r0, #0]
 8004ef4:	68db      	ldr	r3, [r3, #12]
 8004ef6:	4798      	blx	r3
    if (*currentTrans)
 8004ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8004efc:	b110      	cbz	r0, 8004f04 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004efe:	6803      	ldr	r3, [r0, #0]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	4798      	blx	r3
    if (*currentScreen)
 8004f04:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004fcc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004f08:	f8d8 0000 	ldr.w	r0, [r8]
 8004f0c:	b110      	cbz	r0, 8004f14 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f0e:	6803      	ldr	r3, [r0, #0]
 8004f10:	695b      	ldr	r3, [r3, #20]
 8004f12:	4798      	blx	r3
    if (*currentPresenter)
 8004f14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f18:	b110      	cbz	r0, 8004f20 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f1a:	6803      	ldr	r3, [r0, #0]
 8004f1c:	685b      	ldr	r3, [r3, #4]
 8004f1e:	4798      	blx	r3
    if (*currentScreen)
 8004f20:	f8d8 0000 	ldr.w	r0, [r8]
 8004f24:	b110      	cbz	r0, 8004f2c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f26:	6803      	ldr	r3, [r0, #0]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	4798      	blx	r3
    if (*currentPresenter)
 8004f2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f30:	b110      	cbz	r0, 8004f38 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f32:	6803      	ldr	r3, [r0, #0]
 8004f34:	689b      	ldr	r3, [r3, #8]
 8004f36:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f38:	68e0      	ldr	r0, [r4, #12]
 8004f3a:	2100      	movs	r1, #0
 8004f3c:	f7ff fed6 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f40:	2114      	movs	r1, #20
 8004f42:	4605      	mov	r5, r0
 8004f44:	f7ff fed6 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f48:	68a0      	ldr	r0, [r4, #8]
 8004f4a:	6803      	ldr	r3, [r0, #0]
 8004f4c:	2100      	movs	r1, #0
 8004f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f50:	4798      	blx	r3
 8004f52:	4606      	mov	r6, r0
 8004f54:	f003 fe28 	bl	8008ba8 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f58:	6860      	ldr	r0, [r4, #4]
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	2100      	movs	r1, #0
 8004f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f60:	4798      	blx	r3
 8004f62:	4631      	mov	r1, r6
 8004f64:	4604      	mov	r4, r0
 8004f66:	f003 fdf9 	bl	8008b5c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8004f6a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f6e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f72:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f76:	b1dc      	cbz	r4, 8004fb0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004f78:	1d23      	adds	r3, r4, #4
 8004f7a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f7e:	6833      	ldr	r3, [r6, #0]
 8004f80:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f84:	4630      	mov	r0, r6
 8004f86:	68db      	ldr	r3, [r3, #12]
 8004f88:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f8a:	4798      	blx	r3
    newPresenter->activate();
 8004f8c:	6823      	ldr	r3, [r4, #0]
 8004f8e:	4620      	mov	r0, r4
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f94:	4629      	mov	r1, r5
 8004f96:	4630      	mov	r0, r6
 8004f98:	f013 f9e2 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f9c:	682b      	ldr	r3, [r5, #0]
 8004f9e:	4628      	mov	r0, r5
 8004fa0:	691b      	ldr	r3, [r3, #16]
 8004fa2:	4798      	blx	r3
    newTransition->invalidate();
 8004fa4:	682b      	ldr	r3, [r5, #0]
 8004fa6:	4628      	mov	r0, r5
 8004fa8:	695b      	ldr	r3, [r3, #20]
}
 8004faa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fae:	4718      	bx	r3
    model->bind(newPresenter);
 8004fb0:	4623      	mov	r3, r4
 8004fb2:	e7e2      	b.n	8004f7a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004fb4:	0802d3d4 	.word	0x0802d3d4
 8004fb8:	0802ddab 	.word	0x0802ddab
 8004fbc:	0802d570 	.word	0x0802d570
 8004fc0:	0802d5b7 	.word	0x0802d5b7
 8004fc4:	0802d65a 	.word	0x0802d65a
 8004fc8:	200138fc 	.word	0x200138fc
 8004fcc:	200138f8 	.word	0x200138f8

08004fd0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fd4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fd8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fda:	68a0      	ldr	r0, [r4, #8]
 8004fdc:	6803      	ldr	r3, [r0, #0]
 8004fde:	6a1b      	ldr	r3, [r3, #32]
 8004fe0:	4798      	blx	r3
 8004fe2:	f5b0 5ff5 	cmp.w	r0, #7840	; 0x1ea0
 8004fe6:	d205      	bcs.n	8004ff4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 8004fe8:	4b42      	ldr	r3, [pc, #264]	; (80050f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004fea:	4a43      	ldr	r2, [pc, #268]	; (80050f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004fec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004fee:	4843      	ldr	r0, [pc, #268]	; (80050fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004ff0:	f026 fa52 	bl	802b498 <__assert_func>
 8004ff4:	6860      	ldr	r0, [r4, #4]
 8004ff6:	6803      	ldr	r3, [r0, #0]
 8004ff8:	6a1b      	ldr	r3, [r3, #32]
 8004ffa:	4798      	blx	r3
 8004ffc:	280f      	cmp	r0, #15
 8004ffe:	d803      	bhi.n	8005008 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 8005000:	4b3f      	ldr	r3, [pc, #252]	; (8005100 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005002:	4a3d      	ldr	r2, [pc, #244]	; (80050f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005004:	21a4      	movs	r1, #164	; 0xa4
 8005006:	e7f2      	b.n	8004fee <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005008:	68e0      	ldr	r0, [r4, #12]
 800500a:	6803      	ldr	r3, [r0, #0]
 800500c:	6a1b      	ldr	r3, [r3, #32]
 800500e:	4798      	blx	r3
 8005010:	2837      	cmp	r0, #55	; 0x37
 8005012:	d803      	bhi.n	800501c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 8005014:	4b3b      	ldr	r3, [pc, #236]	; (8005104 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005016:	4a38      	ldr	r2, [pc, #224]	; (80050f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005018:	21a5      	movs	r1, #165	; 0xa5
 800501a:	e7e8      	b.n	8004fee <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800501c:	f011 fb74 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005020:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005108 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005024:	3004      	adds	r0, #4
 8005026:	f011 fbd5 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800502a:	f8d9 0000 	ldr.w	r0, [r9]
 800502e:	b110      	cbz	r0, 8005036 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005030:	6803      	ldr	r3, [r0, #0]
 8005032:	68db      	ldr	r3, [r3, #12]
 8005034:	4798      	blx	r3
    if (*currentTrans)
 8005036:	f8d9 0000 	ldr.w	r0, [r9]
 800503a:	b110      	cbz	r0, 8005042 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800503c:	6803      	ldr	r3, [r0, #0]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	4798      	blx	r3
    if (*currentScreen)
 8005042:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800510c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005046:	f8d8 0000 	ldr.w	r0, [r8]
 800504a:	b110      	cbz	r0, 8005052 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800504c:	6803      	ldr	r3, [r0, #0]
 800504e:	695b      	ldr	r3, [r3, #20]
 8005050:	4798      	blx	r3
    if (*currentPresenter)
 8005052:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005056:	b110      	cbz	r0, 800505e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005058:	6803      	ldr	r3, [r0, #0]
 800505a:	685b      	ldr	r3, [r3, #4]
 800505c:	4798      	blx	r3
    if (*currentScreen)
 800505e:	f8d8 0000 	ldr.w	r0, [r8]
 8005062:	b110      	cbz	r0, 800506a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005064:	6803      	ldr	r3, [r0, #0]
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	4798      	blx	r3
    if (*currentPresenter)
 800506a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800506e:	b110      	cbz	r0, 8005076 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005070:	6803      	ldr	r3, [r0, #0]
 8005072:	689b      	ldr	r3, [r3, #8]
 8005074:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005076:	68e0      	ldr	r0, [r4, #12]
 8005078:	2100      	movs	r1, #0
 800507a:	f7ff fe37 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800507e:	2114      	movs	r1, #20
 8005080:	4605      	mov	r5, r0
 8005082:	f7ff fe37 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005086:	68a0      	ldr	r0, [r4, #8]
 8005088:	6803      	ldr	r3, [r0, #0]
 800508a:	2100      	movs	r1, #0
 800508c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800508e:	4798      	blx	r3
 8005090:	4606      	mov	r6, r0
 8005092:	f003 fdcb 	bl	8008c2c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005096:	6860      	ldr	r0, [r4, #4]
 8005098:	6803      	ldr	r3, [r0, #0]
 800509a:	2100      	movs	r1, #0
 800509c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800509e:	4798      	blx	r3
 80050a0:	4631      	mov	r1, r6
 80050a2:	4604      	mov	r4, r0
 80050a4:	f003 fd9c 	bl	8008be0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80050a8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050ac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050b0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050b4:	b1dc      	cbz	r4, 80050ee <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 80050b6:	1d23      	adds	r3, r4, #4
 80050b8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050bc:	6833      	ldr	r3, [r6, #0]
 80050be:	f8c4 a008 	str.w	sl, [r4, #8]
 80050c2:	4630      	mov	r0, r6
 80050c4:	68db      	ldr	r3, [r3, #12]
 80050c6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050c8:	4798      	blx	r3
    newPresenter->activate();
 80050ca:	6823      	ldr	r3, [r4, #0]
 80050cc:	4620      	mov	r0, r4
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050d2:	4629      	mov	r1, r5
 80050d4:	4630      	mov	r0, r6
 80050d6:	f013 f943 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050da:	682b      	ldr	r3, [r5, #0]
 80050dc:	4628      	mov	r0, r5
 80050de:	691b      	ldr	r3, [r3, #16]
 80050e0:	4798      	blx	r3
    newTransition->invalidate();
 80050e2:	682b      	ldr	r3, [r5, #0]
 80050e4:	4628      	mov	r0, r5
 80050e6:	695b      	ldr	r3, [r3, #20]
}
 80050e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050ec:	4718      	bx	r3
    model->bind(newPresenter);
 80050ee:	4623      	mov	r3, r4
 80050f0:	e7e2      	b.n	80050b8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 80050f2:	bf00      	nop
 80050f4:	0802d3d4 	.word	0x0802d3d4
 80050f8:	0802ded3 	.word	0x0802ded3
 80050fc:	0802d570 	.word	0x0802d570
 8005100:	0802d5b7 	.word	0x0802d5b7
 8005104:	0802d65a 	.word	0x0802d65a
 8005108:	200138fc 	.word	0x200138fc
 800510c:	200138f8 	.word	0x200138f8

08005110 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8005110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005114:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005118:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800511a:	68a0      	ldr	r0, [r4, #8]
 800511c:	6803      	ldr	r3, [r0, #0]
 800511e:	6a1b      	ldr	r3, [r3, #32]
 8005120:	4798      	blx	r3
 8005122:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005126:	d205      	bcs.n	8005134 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8005128:	4b42      	ldr	r3, [pc, #264]	; (8005234 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800512a:	4a43      	ldr	r2, [pc, #268]	; (8005238 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800512c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800512e:	4843      	ldr	r0, [pc, #268]	; (800523c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8005130:	f026 f9b2 	bl	802b498 <__assert_func>
 8005134:	6860      	ldr	r0, [r4, #4]
 8005136:	6803      	ldr	r3, [r0, #0]
 8005138:	6a1b      	ldr	r3, [r3, #32]
 800513a:	4798      	blx	r3
 800513c:	280f      	cmp	r0, #15
 800513e:	d803      	bhi.n	8005148 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8005140:	4b3f      	ldr	r3, [pc, #252]	; (8005240 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8005142:	4a3d      	ldr	r2, [pc, #244]	; (8005238 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005144:	21a4      	movs	r1, #164	; 0xa4
 8005146:	e7f2      	b.n	800512e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005148:	68e0      	ldr	r0, [r4, #12]
 800514a:	6803      	ldr	r3, [r0, #0]
 800514c:	6a1b      	ldr	r3, [r3, #32]
 800514e:	4798      	blx	r3
 8005150:	2837      	cmp	r0, #55	; 0x37
 8005152:	d803      	bhi.n	800515c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8005154:	4b3b      	ldr	r3, [pc, #236]	; (8005244 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8005156:	4a38      	ldr	r2, [pc, #224]	; (8005238 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005158:	21a5      	movs	r1, #165	; 0xa5
 800515a:	e7e8      	b.n	800512e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800515c:	f011 fad4 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005160:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005248 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8005164:	3004      	adds	r0, #4
 8005166:	f011 fb35 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800516a:	f8d9 0000 	ldr.w	r0, [r9]
 800516e:	b110      	cbz	r0, 8005176 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005170:	6803      	ldr	r3, [r0, #0]
 8005172:	68db      	ldr	r3, [r3, #12]
 8005174:	4798      	blx	r3
    if (*currentTrans)
 8005176:	f8d9 0000 	ldr.w	r0, [r9]
 800517a:	b110      	cbz	r0, 8005182 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800517c:	6803      	ldr	r3, [r0, #0]
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	4798      	blx	r3
    if (*currentScreen)
 8005182:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800524c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8005186:	f8d8 0000 	ldr.w	r0, [r8]
 800518a:	b110      	cbz	r0, 8005192 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800518c:	6803      	ldr	r3, [r0, #0]
 800518e:	695b      	ldr	r3, [r3, #20]
 8005190:	4798      	blx	r3
    if (*currentPresenter)
 8005192:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005196:	b110      	cbz	r0, 800519e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005198:	6803      	ldr	r3, [r0, #0]
 800519a:	685b      	ldr	r3, [r3, #4]
 800519c:	4798      	blx	r3
    if (*currentScreen)
 800519e:	f8d8 0000 	ldr.w	r0, [r8]
 80051a2:	b110      	cbz	r0, 80051aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80051a4:	6803      	ldr	r3, [r0, #0]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	4798      	blx	r3
    if (*currentPresenter)
 80051aa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051ae:	b110      	cbz	r0, 80051b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80051b0:	6803      	ldr	r3, [r0, #0]
 80051b2:	689b      	ldr	r3, [r3, #8]
 80051b4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051b6:	68e0      	ldr	r0, [r4, #12]
 80051b8:	2100      	movs	r1, #0
 80051ba:	f7ff fd97 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051be:	2114      	movs	r1, #20
 80051c0:	4605      	mov	r5, r0
 80051c2:	f7ff fd97 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051c6:	68a0      	ldr	r0, [r4, #8]
 80051c8:	6803      	ldr	r3, [r0, #0]
 80051ca:	2100      	movs	r1, #0
 80051cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ce:	4798      	blx	r3
 80051d0:	4606      	mov	r6, r0
 80051d2:	f003 fc8f 	bl	8008af4 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051d6:	6860      	ldr	r0, [r4, #4]
 80051d8:	6803      	ldr	r3, [r0, #0]
 80051da:	2100      	movs	r1, #0
 80051dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051de:	4798      	blx	r3
 80051e0:	4631      	mov	r1, r6
 80051e2:	4604      	mov	r4, r0
 80051e4:	f003 fc60 	bl	8008aa8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80051e8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051ec:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80051f0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80051f4:	b1dc      	cbz	r4, 800522e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80051f6:	1d23      	adds	r3, r4, #4
 80051f8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80051fc:	6833      	ldr	r3, [r6, #0]
 80051fe:	f8c4 a008 	str.w	sl, [r4, #8]
 8005202:	4630      	mov	r0, r6
 8005204:	68db      	ldr	r3, [r3, #12]
 8005206:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005208:	4798      	blx	r3
    newPresenter->activate();
 800520a:	6823      	ldr	r3, [r4, #0]
 800520c:	4620      	mov	r0, r4
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005212:	4629      	mov	r1, r5
 8005214:	4630      	mov	r0, r6
 8005216:	f013 f8a3 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800521a:	682b      	ldr	r3, [r5, #0]
 800521c:	4628      	mov	r0, r5
 800521e:	691b      	ldr	r3, [r3, #16]
 8005220:	4798      	blx	r3
    newTransition->invalidate();
 8005222:	682b      	ldr	r3, [r5, #0]
 8005224:	4628      	mov	r0, r5
 8005226:	695b      	ldr	r3, [r3, #20]
}
 8005228:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800522c:	4718      	bx	r3
    model->bind(newPresenter);
 800522e:	4623      	mov	r3, r4
 8005230:	e7e2      	b.n	80051f8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8005232:	bf00      	nop
 8005234:	0802d3d4 	.word	0x0802d3d4
 8005238:	0802dff9 	.word	0x0802dff9
 800523c:	0802d570 	.word	0x0802d570
 8005240:	0802d5b7 	.word	0x0802d5b7
 8005244:	0802d65a 	.word	0x0802d65a
 8005248:	200138fc 	.word	0x200138fc
 800524c:	200138f8 	.word	0x200138f8

08005250 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005254:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005258:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800525a:	68a0      	ldr	r0, [r4, #8]
 800525c:	6803      	ldr	r3, [r0, #0]
 800525e:	6a1b      	ldr	r3, [r3, #32]
 8005260:	4798      	blx	r3
 8005262:	f241 035b 	movw	r3, #4187	; 0x105b
 8005266:	4298      	cmp	r0, r3
 8005268:	d805      	bhi.n	8005276 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800526a:	4b42      	ldr	r3, [pc, #264]	; (8005374 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800526c:	4a42      	ldr	r2, [pc, #264]	; (8005378 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800526e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005270:	4842      	ldr	r0, [pc, #264]	; (800537c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005272:	f026 f911 	bl	802b498 <__assert_func>
 8005276:	6860      	ldr	r0, [r4, #4]
 8005278:	6803      	ldr	r3, [r0, #0]
 800527a:	6a1b      	ldr	r3, [r3, #32]
 800527c:	4798      	blx	r3
 800527e:	280f      	cmp	r0, #15
 8005280:	d803      	bhi.n	800528a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005282:	4b3f      	ldr	r3, [pc, #252]	; (8005380 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005284:	4a3c      	ldr	r2, [pc, #240]	; (8005378 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005286:	21a4      	movs	r1, #164	; 0xa4
 8005288:	e7f2      	b.n	8005270 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800528a:	68e0      	ldr	r0, [r4, #12]
 800528c:	6803      	ldr	r3, [r0, #0]
 800528e:	6a1b      	ldr	r3, [r3, #32]
 8005290:	4798      	blx	r3
 8005292:	2837      	cmp	r0, #55	; 0x37
 8005294:	d803      	bhi.n	800529e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005296:	4b3b      	ldr	r3, [pc, #236]	; (8005384 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005298:	4a37      	ldr	r2, [pc, #220]	; (8005378 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800529a:	21a5      	movs	r1, #165	; 0xa5
 800529c:	e7e8      	b.n	8005270 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800529e:	f011 fa33 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052a2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005388 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80052a6:	3004      	adds	r0, #4
 80052a8:	f011 fa94 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052ac:	f8d9 0000 	ldr.w	r0, [r9]
 80052b0:	b110      	cbz	r0, 80052b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052b2:	6803      	ldr	r3, [r0, #0]
 80052b4:	68db      	ldr	r3, [r3, #12]
 80052b6:	4798      	blx	r3
    if (*currentTrans)
 80052b8:	f8d9 0000 	ldr.w	r0, [r9]
 80052bc:	b110      	cbz	r0, 80052c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052be:	6803      	ldr	r3, [r0, #0]
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	4798      	blx	r3
    if (*currentScreen)
 80052c4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800538c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80052c8:	f8d8 0000 	ldr.w	r0, [r8]
 80052cc:	b110      	cbz	r0, 80052d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052ce:	6803      	ldr	r3, [r0, #0]
 80052d0:	695b      	ldr	r3, [r3, #20]
 80052d2:	4798      	blx	r3
    if (*currentPresenter)
 80052d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052d8:	b110      	cbz	r0, 80052e0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052da:	6803      	ldr	r3, [r0, #0]
 80052dc:	685b      	ldr	r3, [r3, #4]
 80052de:	4798      	blx	r3
    if (*currentScreen)
 80052e0:	f8d8 0000 	ldr.w	r0, [r8]
 80052e4:	b110      	cbz	r0, 80052ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80052e6:	6803      	ldr	r3, [r0, #0]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	4798      	blx	r3
    if (*currentPresenter)
 80052ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052f0:	b110      	cbz	r0, 80052f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80052f2:	6803      	ldr	r3, [r0, #0]
 80052f4:	689b      	ldr	r3, [r3, #8]
 80052f6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80052f8:	68e0      	ldr	r0, [r4, #12]
 80052fa:	2100      	movs	r1, #0
 80052fc:	f7ff fcf6 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005300:	2114      	movs	r1, #20
 8005302:	4605      	mov	r5, r0
 8005304:	f7ff fcf6 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005308:	68a0      	ldr	r0, [r4, #8]
 800530a:	6803      	ldr	r3, [r0, #0]
 800530c:	2100      	movs	r1, #0
 800530e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005310:	4798      	blx	r3
 8005312:	4606      	mov	r6, r0
 8005314:	f003 fe6e 	bl	8008ff4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005318:	6860      	ldr	r0, [r4, #4]
 800531a:	6803      	ldr	r3, [r0, #0]
 800531c:	2100      	movs	r1, #0
 800531e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005320:	4798      	blx	r3
 8005322:	4631      	mov	r1, r6
 8005324:	4604      	mov	r4, r0
 8005326:	f003 fe3f 	bl	8008fa8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800532a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800532e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005332:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005336:	b1dc      	cbz	r4, 8005370 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005338:	1d23      	adds	r3, r4, #4
 800533a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800533e:	6833      	ldr	r3, [r6, #0]
 8005340:	f8c4 a008 	str.w	sl, [r4, #8]
 8005344:	4630      	mov	r0, r6
 8005346:	68db      	ldr	r3, [r3, #12]
 8005348:	63f4      	str	r4, [r6, #60]	; 0x3c
 800534a:	4798      	blx	r3
    newPresenter->activate();
 800534c:	6823      	ldr	r3, [r4, #0]
 800534e:	4620      	mov	r0, r4
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005354:	4629      	mov	r1, r5
 8005356:	4630      	mov	r0, r6
 8005358:	f013 f802 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800535c:	682b      	ldr	r3, [r5, #0]
 800535e:	4628      	mov	r0, r5
 8005360:	691b      	ldr	r3, [r3, #16]
 8005362:	4798      	blx	r3
    newTransition->invalidate();
 8005364:	682b      	ldr	r3, [r5, #0]
 8005366:	4628      	mov	r0, r5
 8005368:	695b      	ldr	r3, [r3, #20]
}
 800536a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800536e:	4718      	bx	r3
    model->bind(newPresenter);
 8005370:	4623      	mov	r3, r4
 8005372:	e7e2      	b.n	800533a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005374:	0802d3d4 	.word	0x0802d3d4
 8005378:	0802e117 	.word	0x0802e117
 800537c:	0802d570 	.word	0x0802d570
 8005380:	0802d5b7 	.word	0x0802d5b7
 8005384:	0802d65a 	.word	0x0802d65a
 8005388:	200138fc 	.word	0x200138fc
 800538c:	200138f8 	.word	0x200138f8

08005390 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005394:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005398:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800539a:	68a0      	ldr	r0, [r4, #8]
 800539c:	6803      	ldr	r3, [r0, #0]
 800539e:	6a1b      	ldr	r3, [r3, #32]
 80053a0:	4798      	blx	r3
 80053a2:	f241 035b 	movw	r3, #4187	; 0x105b
 80053a6:	4298      	cmp	r0, r3
 80053a8:	d805      	bhi.n	80053b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80053aa:	4b42      	ldr	r3, [pc, #264]	; (80054b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80053ac:	4a42      	ldr	r2, [pc, #264]	; (80054b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053ae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053b0:	4842      	ldr	r0, [pc, #264]	; (80054bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80053b2:	f026 f871 	bl	802b498 <__assert_func>
 80053b6:	6860      	ldr	r0, [r4, #4]
 80053b8:	6803      	ldr	r3, [r0, #0]
 80053ba:	6a1b      	ldr	r3, [r3, #32]
 80053bc:	4798      	blx	r3
 80053be:	280f      	cmp	r0, #15
 80053c0:	d803      	bhi.n	80053ca <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80053c2:	4b3f      	ldr	r3, [pc, #252]	; (80054c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80053c4:	4a3c      	ldr	r2, [pc, #240]	; (80054b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053c6:	21a4      	movs	r1, #164	; 0xa4
 80053c8:	e7f2      	b.n	80053b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053ca:	68e0      	ldr	r0, [r4, #12]
 80053cc:	6803      	ldr	r3, [r0, #0]
 80053ce:	6a1b      	ldr	r3, [r3, #32]
 80053d0:	4798      	blx	r3
 80053d2:	2837      	cmp	r0, #55	; 0x37
 80053d4:	d803      	bhi.n	80053de <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80053d6:	4b3b      	ldr	r3, [pc, #236]	; (80054c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80053d8:	4a37      	ldr	r2, [pc, #220]	; (80054b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053da:	21a5      	movs	r1, #165	; 0xa5
 80053dc:	e7e8      	b.n	80053b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80053de:	f011 f993 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053e2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80053e6:	3004      	adds	r0, #4
 80053e8:	f011 f9f4 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053ec:	f8d9 0000 	ldr.w	r0, [r9]
 80053f0:	b110      	cbz	r0, 80053f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80053f2:	6803      	ldr	r3, [r0, #0]
 80053f4:	68db      	ldr	r3, [r3, #12]
 80053f6:	4798      	blx	r3
    if (*currentTrans)
 80053f8:	f8d9 0000 	ldr.w	r0, [r9]
 80053fc:	b110      	cbz	r0, 8005404 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80053fe:	6803      	ldr	r3, [r0, #0]
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	4798      	blx	r3
    if (*currentScreen)
 8005404:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80054cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005408:	f8d8 0000 	ldr.w	r0, [r8]
 800540c:	b110      	cbz	r0, 8005414 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800540e:	6803      	ldr	r3, [r0, #0]
 8005410:	695b      	ldr	r3, [r3, #20]
 8005412:	4798      	blx	r3
    if (*currentPresenter)
 8005414:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005418:	b110      	cbz	r0, 8005420 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800541a:	6803      	ldr	r3, [r0, #0]
 800541c:	685b      	ldr	r3, [r3, #4]
 800541e:	4798      	blx	r3
    if (*currentScreen)
 8005420:	f8d8 0000 	ldr.w	r0, [r8]
 8005424:	b110      	cbz	r0, 800542c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005426:	6803      	ldr	r3, [r0, #0]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	4798      	blx	r3
    if (*currentPresenter)
 800542c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005430:	b110      	cbz	r0, 8005438 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005432:	6803      	ldr	r3, [r0, #0]
 8005434:	689b      	ldr	r3, [r3, #8]
 8005436:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005438:	68e0      	ldr	r0, [r4, #12]
 800543a:	2100      	movs	r1, #0
 800543c:	f7ff fc56 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005440:	2114      	movs	r1, #20
 8005442:	4605      	mov	r5, r0
 8005444:	f7ff fc56 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005448:	68a0      	ldr	r0, [r4, #8]
 800544a:	6803      	ldr	r3, [r0, #0]
 800544c:	2100      	movs	r1, #0
 800544e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005450:	4798      	blx	r3
 8005452:	4606      	mov	r6, r0
 8005454:	f003 fd8c 	bl	8008f70 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005458:	6860      	ldr	r0, [r4, #4]
 800545a:	6803      	ldr	r3, [r0, #0]
 800545c:	2100      	movs	r1, #0
 800545e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005460:	4798      	blx	r3
 8005462:	4631      	mov	r1, r6
 8005464:	4604      	mov	r4, r0
 8005466:	f003 fd5d 	bl	8008f24 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800546a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800546e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005472:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005476:	b1dc      	cbz	r4, 80054b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005478:	1d23      	adds	r3, r4, #4
 800547a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800547e:	6833      	ldr	r3, [r6, #0]
 8005480:	f8c4 a008 	str.w	sl, [r4, #8]
 8005484:	4630      	mov	r0, r6
 8005486:	68db      	ldr	r3, [r3, #12]
 8005488:	63f4      	str	r4, [r6, #60]	; 0x3c
 800548a:	4798      	blx	r3
    newPresenter->activate();
 800548c:	6823      	ldr	r3, [r4, #0]
 800548e:	4620      	mov	r0, r4
 8005490:	681b      	ldr	r3, [r3, #0]
 8005492:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005494:	4629      	mov	r1, r5
 8005496:	4630      	mov	r0, r6
 8005498:	f012 ff62 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800549c:	682b      	ldr	r3, [r5, #0]
 800549e:	4628      	mov	r0, r5
 80054a0:	691b      	ldr	r3, [r3, #16]
 80054a2:	4798      	blx	r3
    newTransition->invalidate();
 80054a4:	682b      	ldr	r3, [r5, #0]
 80054a6:	4628      	mov	r0, r5
 80054a8:	695b      	ldr	r3, [r3, #20]
}
 80054aa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054ae:	4718      	bx	r3
    model->bind(newPresenter);
 80054b0:	4623      	mov	r3, r4
 80054b2:	e7e2      	b.n	800547a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80054b4:	0802d3d4 	.word	0x0802d3d4
 80054b8:	0802e25b 	.word	0x0802e25b
 80054bc:	0802d570 	.word	0x0802d570
 80054c0:	0802d5b7 	.word	0x0802d5b7
 80054c4:	0802d65a 	.word	0x0802d65a
 80054c8:	200138fc 	.word	0x200138fc
 80054cc:	200138f8 	.word	0x200138f8

080054d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80054d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054d4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80054d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054da:	68a0      	ldr	r0, [r4, #8]
 80054dc:	6803      	ldr	r3, [r0, #0]
 80054de:	6a1b      	ldr	r3, [r3, #32]
 80054e0:	4798      	blx	r3
 80054e2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80054e6:	d205      	bcs.n	80054f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80054e8:	4b42      	ldr	r3, [pc, #264]	; (80055f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80054ea:	4a43      	ldr	r2, [pc, #268]	; (80055f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80054ec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054ee:	4843      	ldr	r0, [pc, #268]	; (80055fc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80054f0:	f025 ffd2 	bl	802b498 <__assert_func>
 80054f4:	6860      	ldr	r0, [r4, #4]
 80054f6:	6803      	ldr	r3, [r0, #0]
 80054f8:	6a1b      	ldr	r3, [r3, #32]
 80054fa:	4798      	blx	r3
 80054fc:	280f      	cmp	r0, #15
 80054fe:	d803      	bhi.n	8005508 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005500:	4b3f      	ldr	r3, [pc, #252]	; (8005600 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005502:	4a3d      	ldr	r2, [pc, #244]	; (80055f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005504:	21a4      	movs	r1, #164	; 0xa4
 8005506:	e7f2      	b.n	80054ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005508:	68e0      	ldr	r0, [r4, #12]
 800550a:	6803      	ldr	r3, [r0, #0]
 800550c:	6a1b      	ldr	r3, [r3, #32]
 800550e:	4798      	blx	r3
 8005510:	2837      	cmp	r0, #55	; 0x37
 8005512:	d803      	bhi.n	800551c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005514:	4b3b      	ldr	r3, [pc, #236]	; (8005604 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005516:	4a38      	ldr	r2, [pc, #224]	; (80055f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005518:	21a5      	movs	r1, #165	; 0xa5
 800551a:	e7e8      	b.n	80054ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800551c:	f011 f8f4 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005520:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005608 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005524:	3004      	adds	r0, #4
 8005526:	f011 f955 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800552a:	f8d9 0000 	ldr.w	r0, [r9]
 800552e:	b110      	cbz	r0, 8005536 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005530:	6803      	ldr	r3, [r0, #0]
 8005532:	68db      	ldr	r3, [r3, #12]
 8005534:	4798      	blx	r3
    if (*currentTrans)
 8005536:	f8d9 0000 	ldr.w	r0, [r9]
 800553a:	b110      	cbz	r0, 8005542 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800553c:	6803      	ldr	r3, [r0, #0]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	4798      	blx	r3
    if (*currentScreen)
 8005542:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800560c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005546:	f8d8 0000 	ldr.w	r0, [r8]
 800554a:	b110      	cbz	r0, 8005552 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800554c:	6803      	ldr	r3, [r0, #0]
 800554e:	695b      	ldr	r3, [r3, #20]
 8005550:	4798      	blx	r3
    if (*currentPresenter)
 8005552:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005556:	b110      	cbz	r0, 800555e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005558:	6803      	ldr	r3, [r0, #0]
 800555a:	685b      	ldr	r3, [r3, #4]
 800555c:	4798      	blx	r3
    if (*currentScreen)
 800555e:	f8d8 0000 	ldr.w	r0, [r8]
 8005562:	b110      	cbz	r0, 800556a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005564:	6803      	ldr	r3, [r0, #0]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	4798      	blx	r3
    if (*currentPresenter)
 800556a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800556e:	b110      	cbz	r0, 8005576 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005570:	6803      	ldr	r3, [r0, #0]
 8005572:	689b      	ldr	r3, [r3, #8]
 8005574:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005576:	68e0      	ldr	r0, [r4, #12]
 8005578:	2100      	movs	r1, #0
 800557a:	f7ff fbb7 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800557e:	2114      	movs	r1, #20
 8005580:	4605      	mov	r5, r0
 8005582:	f7ff fbb7 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005586:	68a0      	ldr	r0, [r4, #8]
 8005588:	6803      	ldr	r3, [r0, #0]
 800558a:	2100      	movs	r1, #0
 800558c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800558e:	4798      	blx	r3
 8005590:	4606      	mov	r6, r0
 8005592:	f003 fc93 	bl	8008ebc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005596:	6860      	ldr	r0, [r4, #4]
 8005598:	6803      	ldr	r3, [r0, #0]
 800559a:	2100      	movs	r1, #0
 800559c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800559e:	4798      	blx	r3
 80055a0:	4631      	mov	r1, r6
 80055a2:	4604      	mov	r4, r0
 80055a4:	f003 fc64 	bl	8008e70 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80055a8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055ac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055b0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055b4:	b1dc      	cbz	r4, 80055ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80055b6:	1d23      	adds	r3, r4, #4
 80055b8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055bc:	6833      	ldr	r3, [r6, #0]
 80055be:	f8c4 a008 	str.w	sl, [r4, #8]
 80055c2:	4630      	mov	r0, r6
 80055c4:	68db      	ldr	r3, [r3, #12]
 80055c6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055c8:	4798      	blx	r3
    newPresenter->activate();
 80055ca:	6823      	ldr	r3, [r4, #0]
 80055cc:	4620      	mov	r0, r4
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055d2:	4629      	mov	r1, r5
 80055d4:	4630      	mov	r0, r6
 80055d6:	f012 fec3 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055da:	682b      	ldr	r3, [r5, #0]
 80055dc:	4628      	mov	r0, r5
 80055de:	691b      	ldr	r3, [r3, #16]
 80055e0:	4798      	blx	r3
    newTransition->invalidate();
 80055e2:	682b      	ldr	r3, [r5, #0]
 80055e4:	4628      	mov	r0, r5
 80055e6:	695b      	ldr	r3, [r3, #20]
}
 80055e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055ec:	4718      	bx	r3
    model->bind(newPresenter);
 80055ee:	4623      	mov	r3, r4
 80055f0:	e7e2      	b.n	80055b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80055f2:	bf00      	nop
 80055f4:	0802d3d4 	.word	0x0802d3d4
 80055f8:	0802e39b 	.word	0x0802e39b
 80055fc:	0802d570 	.word	0x0802d570
 8005600:	0802d5b7 	.word	0x0802d5b7
 8005604:	0802d65a 	.word	0x0802d65a
 8005608:	200138fc 	.word	0x200138fc
 800560c:	200138f8 	.word	0x200138f8

08005610 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005610:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005614:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005618:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800561a:	68a0      	ldr	r0, [r4, #8]
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	6a1b      	ldr	r3, [r3, #32]
 8005620:	4798      	blx	r3
 8005622:	f241 035b 	movw	r3, #4187	; 0x105b
 8005626:	4298      	cmp	r0, r3
 8005628:	d805      	bhi.n	8005636 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800562a:	4b42      	ldr	r3, [pc, #264]	; (8005734 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800562c:	4a42      	ldr	r2, [pc, #264]	; (8005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800562e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005630:	4842      	ldr	r0, [pc, #264]	; (800573c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005632:	f025 ff31 	bl	802b498 <__assert_func>
 8005636:	6860      	ldr	r0, [r4, #4]
 8005638:	6803      	ldr	r3, [r0, #0]
 800563a:	6a1b      	ldr	r3, [r3, #32]
 800563c:	4798      	blx	r3
 800563e:	280f      	cmp	r0, #15
 8005640:	d803      	bhi.n	800564a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8005642:	4b3f      	ldr	r3, [pc, #252]	; (8005740 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005644:	4a3c      	ldr	r2, [pc, #240]	; (8005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005646:	21a4      	movs	r1, #164	; 0xa4
 8005648:	e7f2      	b.n	8005630 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800564a:	68e0      	ldr	r0, [r4, #12]
 800564c:	6803      	ldr	r3, [r0, #0]
 800564e:	6a1b      	ldr	r3, [r3, #32]
 8005650:	4798      	blx	r3
 8005652:	2837      	cmp	r0, #55	; 0x37
 8005654:	d803      	bhi.n	800565e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005656:	4b3b      	ldr	r3, [pc, #236]	; (8005744 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005658:	4a37      	ldr	r2, [pc, #220]	; (8005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800565a:	21a5      	movs	r1, #165	; 0xa5
 800565c:	e7e8      	b.n	8005630 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800565e:	f011 f853 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005662:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005748 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005666:	3004      	adds	r0, #4
 8005668:	f011 f8b4 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800566c:	f8d9 0000 	ldr.w	r0, [r9]
 8005670:	b110      	cbz	r0, 8005678 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005672:	6803      	ldr	r3, [r0, #0]
 8005674:	68db      	ldr	r3, [r3, #12]
 8005676:	4798      	blx	r3
    if (*currentTrans)
 8005678:	f8d9 0000 	ldr.w	r0, [r9]
 800567c:	b110      	cbz	r0, 8005684 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	4798      	blx	r3
    if (*currentScreen)
 8005684:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800574c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005688:	f8d8 0000 	ldr.w	r0, [r8]
 800568c:	b110      	cbz	r0, 8005694 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800568e:	6803      	ldr	r3, [r0, #0]
 8005690:	695b      	ldr	r3, [r3, #20]
 8005692:	4798      	blx	r3
    if (*currentPresenter)
 8005694:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005698:	b110      	cbz	r0, 80056a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	685b      	ldr	r3, [r3, #4]
 800569e:	4798      	blx	r3
    if (*currentScreen)
 80056a0:	f8d8 0000 	ldr.w	r0, [r8]
 80056a4:	b110      	cbz	r0, 80056ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80056a6:	6803      	ldr	r3, [r0, #0]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	4798      	blx	r3
    if (*currentPresenter)
 80056ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056b0:	b110      	cbz	r0, 80056b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80056b2:	6803      	ldr	r3, [r0, #0]
 80056b4:	689b      	ldr	r3, [r3, #8]
 80056b6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056b8:	68e0      	ldr	r0, [r4, #12]
 80056ba:	2100      	movs	r1, #0
 80056bc:	f7ff fb16 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056c0:	2114      	movs	r1, #20
 80056c2:	4605      	mov	r5, r0
 80056c4:	f7ff fb16 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056c8:	68a0      	ldr	r0, [r4, #8]
 80056ca:	6803      	ldr	r3, [r0, #0]
 80056cc:	2100      	movs	r1, #0
 80056ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056d0:	4798      	blx	r3
 80056d2:	4606      	mov	r6, r0
 80056d4:	f003 fdd0 	bl	8009278 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056d8:	6860      	ldr	r0, [r4, #4]
 80056da:	6803      	ldr	r3, [r0, #0]
 80056dc:	2100      	movs	r1, #0
 80056de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056e0:	4798      	blx	r3
 80056e2:	4631      	mov	r1, r6
 80056e4:	4604      	mov	r4, r0
 80056e6:	f003 fda1 	bl	800922c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80056ea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056ee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80056f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056f6:	b1dc      	cbz	r4, 8005730 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80056f8:	1d23      	adds	r3, r4, #4
 80056fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056fe:	6833      	ldr	r3, [r6, #0]
 8005700:	f8c4 a008 	str.w	sl, [r4, #8]
 8005704:	4630      	mov	r0, r6
 8005706:	68db      	ldr	r3, [r3, #12]
 8005708:	63f4      	str	r4, [r6, #60]	; 0x3c
 800570a:	4798      	blx	r3
    newPresenter->activate();
 800570c:	6823      	ldr	r3, [r4, #0]
 800570e:	4620      	mov	r0, r4
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005714:	4629      	mov	r1, r5
 8005716:	4630      	mov	r0, r6
 8005718:	f012 fe22 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800571c:	682b      	ldr	r3, [r5, #0]
 800571e:	4628      	mov	r0, r5
 8005720:	691b      	ldr	r3, [r3, #16]
 8005722:	4798      	blx	r3
    newTransition->invalidate();
 8005724:	682b      	ldr	r3, [r5, #0]
 8005726:	4628      	mov	r0, r5
 8005728:	695b      	ldr	r3, [r3, #20]
}
 800572a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800572e:	4718      	bx	r3
    model->bind(newPresenter);
 8005730:	4623      	mov	r3, r4
 8005732:	e7e2      	b.n	80056fa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005734:	0802d3d4 	.word	0x0802d3d4
 8005738:	0802e4cb 	.word	0x0802e4cb
 800573c:	0802d570 	.word	0x0802d570
 8005740:	0802d5b7 	.word	0x0802d5b7
 8005744:	0802d65a 	.word	0x0802d65a
 8005748:	200138fc 	.word	0x200138fc
 800574c:	200138f8 	.word	0x200138f8

08005750 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005750:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005754:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005758:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800575a:	68a0      	ldr	r0, [r4, #8]
 800575c:	6803      	ldr	r3, [r0, #0]
 800575e:	6a1b      	ldr	r3, [r3, #32]
 8005760:	4798      	blx	r3
 8005762:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005766:	4298      	cmp	r0, r3
 8005768:	d805      	bhi.n	8005776 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800576a:	4b42      	ldr	r3, [pc, #264]	; (8005874 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 800576c:	4a42      	ldr	r2, [pc, #264]	; (8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800576e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005770:	4842      	ldr	r0, [pc, #264]	; (800587c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005772:	f025 fe91 	bl	802b498 <__assert_func>
 8005776:	6860      	ldr	r0, [r4, #4]
 8005778:	6803      	ldr	r3, [r0, #0]
 800577a:	6a1b      	ldr	r3, [r3, #32]
 800577c:	4798      	blx	r3
 800577e:	280f      	cmp	r0, #15
 8005780:	d803      	bhi.n	800578a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005782:	4b3f      	ldr	r3, [pc, #252]	; (8005880 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005784:	4a3c      	ldr	r2, [pc, #240]	; (8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005786:	21a4      	movs	r1, #164	; 0xa4
 8005788:	e7f2      	b.n	8005770 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800578a:	68e0      	ldr	r0, [r4, #12]
 800578c:	6803      	ldr	r3, [r0, #0]
 800578e:	6a1b      	ldr	r3, [r3, #32]
 8005790:	4798      	blx	r3
 8005792:	2837      	cmp	r0, #55	; 0x37
 8005794:	d803      	bhi.n	800579e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005796:	4b3b      	ldr	r3, [pc, #236]	; (8005884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005798:	4a37      	ldr	r2, [pc, #220]	; (8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800579a:	21a5      	movs	r1, #165	; 0xa5
 800579c:	e7e8      	b.n	8005770 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800579e:	f010 ffb3 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057a2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005888 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80057a6:	3004      	adds	r0, #4
 80057a8:	f011 f814 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057ac:	f8d9 0000 	ldr.w	r0, [r9]
 80057b0:	b110      	cbz	r0, 80057b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80057b2:	6803      	ldr	r3, [r0, #0]
 80057b4:	68db      	ldr	r3, [r3, #12]
 80057b6:	4798      	blx	r3
    if (*currentTrans)
 80057b8:	f8d9 0000 	ldr.w	r0, [r9]
 80057bc:	b110      	cbz	r0, 80057c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80057be:	6803      	ldr	r3, [r0, #0]
 80057c0:	681b      	ldr	r3, [r3, #0]
 80057c2:	4798      	blx	r3
    if (*currentScreen)
 80057c4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800588c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80057c8:	f8d8 0000 	ldr.w	r0, [r8]
 80057cc:	b110      	cbz	r0, 80057d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057ce:	6803      	ldr	r3, [r0, #0]
 80057d0:	695b      	ldr	r3, [r3, #20]
 80057d2:	4798      	blx	r3
    if (*currentPresenter)
 80057d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057d8:	b110      	cbz	r0, 80057e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057da:	6803      	ldr	r3, [r0, #0]
 80057dc:	685b      	ldr	r3, [r3, #4]
 80057de:	4798      	blx	r3
    if (*currentScreen)
 80057e0:	f8d8 0000 	ldr.w	r0, [r8]
 80057e4:	b110      	cbz	r0, 80057ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80057e6:	6803      	ldr	r3, [r0, #0]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	4798      	blx	r3
    if (*currentPresenter)
 80057ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057f0:	b110      	cbz	r0, 80057f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	689b      	ldr	r3, [r3, #8]
 80057f6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057f8:	68e0      	ldr	r0, [r4, #12]
 80057fa:	2100      	movs	r1, #0
 80057fc:	f7ff fa76 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005800:	2114      	movs	r1, #20
 8005802:	4605      	mov	r5, r0
 8005804:	f7ff fa76 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005808:	68a0      	ldr	r0, [r4, #8]
 800580a:	6803      	ldr	r3, [r0, #0]
 800580c:	2100      	movs	r1, #0
 800580e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005810:	4798      	blx	r3
 8005812:	4606      	mov	r6, r0
 8005814:	f003 fc90 	bl	8009138 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005818:	6860      	ldr	r0, [r4, #4]
 800581a:	6803      	ldr	r3, [r0, #0]
 800581c:	2100      	movs	r1, #0
 800581e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005820:	4798      	blx	r3
 8005822:	4631      	mov	r1, r6
 8005824:	4604      	mov	r4, r0
 8005826:	f003 fc61 	bl	80090ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800582a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800582e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005832:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005836:	b1dc      	cbz	r4, 8005870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005838:	1d23      	adds	r3, r4, #4
 800583a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800583e:	6833      	ldr	r3, [r6, #0]
 8005840:	f8c4 a008 	str.w	sl, [r4, #8]
 8005844:	4630      	mov	r0, r6
 8005846:	68db      	ldr	r3, [r3, #12]
 8005848:	63f4      	str	r4, [r6, #60]	; 0x3c
 800584a:	4798      	blx	r3
    newPresenter->activate();
 800584c:	6823      	ldr	r3, [r4, #0]
 800584e:	4620      	mov	r0, r4
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005854:	4629      	mov	r1, r5
 8005856:	4630      	mov	r0, r6
 8005858:	f012 fd82 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800585c:	682b      	ldr	r3, [r5, #0]
 800585e:	4628      	mov	r0, r5
 8005860:	691b      	ldr	r3, [r3, #16]
 8005862:	4798      	blx	r3
    newTransition->invalidate();
 8005864:	682b      	ldr	r3, [r5, #0]
 8005866:	4628      	mov	r0, r5
 8005868:	695b      	ldr	r3, [r3, #20]
}
 800586a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800586e:	4718      	bx	r3
    model->bind(newPresenter);
 8005870:	4623      	mov	r3, r4
 8005872:	e7e2      	b.n	800583a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005874:	0802d3d4 	.word	0x0802d3d4
 8005878:	0802e60d 	.word	0x0802e60d
 800587c:	0802d570 	.word	0x0802d570
 8005880:	0802d5b7 	.word	0x0802d5b7
 8005884:	0802d65a 	.word	0x0802d65a
 8005888:	200138fc 	.word	0x200138fc
 800588c:	200138f8 	.word	0x200138f8

08005890 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005894:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005898:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800589a:	68a0      	ldr	r0, [r4, #8]
 800589c:	6803      	ldr	r3, [r0, #0]
 800589e:	6a1b      	ldr	r3, [r3, #32]
 80058a0:	4798      	blx	r3
 80058a2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80058a6:	d205      	bcs.n	80058b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80058a8:	4b42      	ldr	r3, [pc, #264]	; (80059b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80058aa:	4a43      	ldr	r2, [pc, #268]	; (80059b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058ac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058ae:	4843      	ldr	r0, [pc, #268]	; (80059bc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80058b0:	f025 fdf2 	bl	802b498 <__assert_func>
 80058b4:	6860      	ldr	r0, [r4, #4]
 80058b6:	6803      	ldr	r3, [r0, #0]
 80058b8:	6a1b      	ldr	r3, [r3, #32]
 80058ba:	4798      	blx	r3
 80058bc:	280f      	cmp	r0, #15
 80058be:	d803      	bhi.n	80058c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80058c0:	4b3f      	ldr	r3, [pc, #252]	; (80059c0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80058c2:	4a3d      	ldr	r2, [pc, #244]	; (80059b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058c4:	21a4      	movs	r1, #164	; 0xa4
 80058c6:	e7f2      	b.n	80058ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058c8:	68e0      	ldr	r0, [r4, #12]
 80058ca:	6803      	ldr	r3, [r0, #0]
 80058cc:	6a1b      	ldr	r3, [r3, #32]
 80058ce:	4798      	blx	r3
 80058d0:	2837      	cmp	r0, #55	; 0x37
 80058d2:	d803      	bhi.n	80058dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80058d4:	4b3b      	ldr	r3, [pc, #236]	; (80059c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80058d6:	4a38      	ldr	r2, [pc, #224]	; (80059b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058d8:	21a5      	movs	r1, #165	; 0xa5
 80058da:	e7e8      	b.n	80058ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80058dc:	f010 ff14 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058e0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80058e4:	3004      	adds	r0, #4
 80058e6:	f010 ff75 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058ea:	f8d9 0000 	ldr.w	r0, [r9]
 80058ee:	b110      	cbz	r0, 80058f6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80058f0:	6803      	ldr	r3, [r0, #0]
 80058f2:	68db      	ldr	r3, [r3, #12]
 80058f4:	4798      	blx	r3
    if (*currentTrans)
 80058f6:	f8d9 0000 	ldr.w	r0, [r9]
 80058fa:	b110      	cbz	r0, 8005902 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80058fc:	6803      	ldr	r3, [r0, #0]
 80058fe:	681b      	ldr	r3, [r3, #0]
 8005900:	4798      	blx	r3
    if (*currentScreen)
 8005902:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059cc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005906:	f8d8 0000 	ldr.w	r0, [r8]
 800590a:	b110      	cbz	r0, 8005912 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800590c:	6803      	ldr	r3, [r0, #0]
 800590e:	695b      	ldr	r3, [r3, #20]
 8005910:	4798      	blx	r3
    if (*currentPresenter)
 8005912:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005916:	b110      	cbz	r0, 800591e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005918:	6803      	ldr	r3, [r0, #0]
 800591a:	685b      	ldr	r3, [r3, #4]
 800591c:	4798      	blx	r3
    if (*currentScreen)
 800591e:	f8d8 0000 	ldr.w	r0, [r8]
 8005922:	b110      	cbz	r0, 800592a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005924:	6803      	ldr	r3, [r0, #0]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	4798      	blx	r3
    if (*currentPresenter)
 800592a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800592e:	b110      	cbz	r0, 8005936 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005930:	6803      	ldr	r3, [r0, #0]
 8005932:	689b      	ldr	r3, [r3, #8]
 8005934:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005936:	68e0      	ldr	r0, [r4, #12]
 8005938:	2100      	movs	r1, #0
 800593a:	f7ff f9d7 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800593e:	2114      	movs	r1, #20
 8005940:	4605      	mov	r5, r0
 8005942:	f7ff f9d7 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005946:	68a0      	ldr	r0, [r4, #8]
 8005948:	6803      	ldr	r3, [r0, #0]
 800594a:	2100      	movs	r1, #0
 800594c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800594e:	4798      	blx	r3
 8005950:	4606      	mov	r6, r0
 8005952:	f003 fb97 	bl	8009084 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005956:	6860      	ldr	r0, [r4, #4]
 8005958:	6803      	ldr	r3, [r0, #0]
 800595a:	2100      	movs	r1, #0
 800595c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800595e:	4798      	blx	r3
 8005960:	4631      	mov	r1, r6
 8005962:	4604      	mov	r4, r0
 8005964:	f003 fb68 	bl	8009038 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005968:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800596c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005970:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005974:	b1dc      	cbz	r4, 80059ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005976:	1d23      	adds	r3, r4, #4
 8005978:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800597c:	6833      	ldr	r3, [r6, #0]
 800597e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005982:	4630      	mov	r0, r6
 8005984:	68db      	ldr	r3, [r3, #12]
 8005986:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005988:	4798      	blx	r3
    newPresenter->activate();
 800598a:	6823      	ldr	r3, [r4, #0]
 800598c:	4620      	mov	r0, r4
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005992:	4629      	mov	r1, r5
 8005994:	4630      	mov	r0, r6
 8005996:	f012 fce3 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800599a:	682b      	ldr	r3, [r5, #0]
 800599c:	4628      	mov	r0, r5
 800599e:	691b      	ldr	r3, [r3, #16]
 80059a0:	4798      	blx	r3
    newTransition->invalidate();
 80059a2:	682b      	ldr	r3, [r5, #0]
 80059a4:	4628      	mov	r0, r5
 80059a6:	695b      	ldr	r3, [r3, #20]
}
 80059a8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059ac:	4718      	bx	r3
    model->bind(newPresenter);
 80059ae:	4623      	mov	r3, r4
 80059b0:	e7e2      	b.n	8005978 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80059b2:	bf00      	nop
 80059b4:	0802d3d4 	.word	0x0802d3d4
 80059b8:	0802e74f 	.word	0x0802e74f
 80059bc:	0802d570 	.word	0x0802d570
 80059c0:	0802d5b7 	.word	0x0802d5b7
 80059c4:	0802d65a 	.word	0x0802d65a
 80059c8:	200138fc 	.word	0x200138fc
 80059cc:	200138f8 	.word	0x200138f8

080059d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80059d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059d4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059da:	68a0      	ldr	r0, [r4, #8]
 80059dc:	6803      	ldr	r3, [r0, #0]
 80059de:	6a1b      	ldr	r3, [r3, #32]
 80059e0:	4798      	blx	r3
 80059e2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80059e6:	d205      	bcs.n	80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 80059e8:	4b42      	ldr	r3, [pc, #264]	; (8005af4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80059ea:	4a43      	ldr	r2, [pc, #268]	; (8005af8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80059ec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059ee:	4843      	ldr	r0, [pc, #268]	; (8005afc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80059f0:	f025 fd52 	bl	802b498 <__assert_func>
 80059f4:	6860      	ldr	r0, [r4, #4]
 80059f6:	6803      	ldr	r3, [r0, #0]
 80059f8:	6a1b      	ldr	r3, [r3, #32]
 80059fa:	4798      	blx	r3
 80059fc:	280f      	cmp	r0, #15
 80059fe:	d803      	bhi.n	8005a08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005a00:	4b3f      	ldr	r3, [pc, #252]	; (8005b00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005a02:	4a3d      	ldr	r2, [pc, #244]	; (8005af8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a04:	21a4      	movs	r1, #164	; 0xa4
 8005a06:	e7f2      	b.n	80059ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a08:	68e0      	ldr	r0, [r4, #12]
 8005a0a:	6803      	ldr	r3, [r0, #0]
 8005a0c:	6a1b      	ldr	r3, [r3, #32]
 8005a0e:	4798      	blx	r3
 8005a10:	2837      	cmp	r0, #55	; 0x37
 8005a12:	d803      	bhi.n	8005a1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005a14:	4b3b      	ldr	r3, [pc, #236]	; (8005b04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005a16:	4a38      	ldr	r2, [pc, #224]	; (8005af8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a18:	21a5      	movs	r1, #165	; 0xa5
 8005a1a:	e7e8      	b.n	80059ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a1c:	f010 fe74 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a20:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005a24:	3004      	adds	r0, #4
 8005a26:	f010 fed5 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a2a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a2e:	b110      	cbz	r0, 8005a36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a30:	6803      	ldr	r3, [r0, #0]
 8005a32:	68db      	ldr	r3, [r3, #12]
 8005a34:	4798      	blx	r3
    if (*currentTrans)
 8005a36:	f8d9 0000 	ldr.w	r0, [r9]
 8005a3a:	b110      	cbz	r0, 8005a42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a3c:	6803      	ldr	r3, [r0, #0]
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	4798      	blx	r3
    if (*currentScreen)
 8005a42:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005a46:	f8d8 0000 	ldr.w	r0, [r8]
 8005a4a:	b110      	cbz	r0, 8005a52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a4c:	6803      	ldr	r3, [r0, #0]
 8005a4e:	695b      	ldr	r3, [r3, #20]
 8005a50:	4798      	blx	r3
    if (*currentPresenter)
 8005a52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a56:	b110      	cbz	r0, 8005a5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a58:	6803      	ldr	r3, [r0, #0]
 8005a5a:	685b      	ldr	r3, [r3, #4]
 8005a5c:	4798      	blx	r3
    if (*currentScreen)
 8005a5e:	f8d8 0000 	ldr.w	r0, [r8]
 8005a62:	b110      	cbz	r0, 8005a6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a64:	6803      	ldr	r3, [r0, #0]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	4798      	blx	r3
    if (*currentPresenter)
 8005a6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a6e:	b110      	cbz	r0, 8005a76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a70:	6803      	ldr	r3, [r0, #0]
 8005a72:	689b      	ldr	r3, [r3, #8]
 8005a74:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a76:	68e0      	ldr	r0, [r4, #12]
 8005a78:	2100      	movs	r1, #0
 8005a7a:	f7ff f937 	bl	8004cec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a7e:	2114      	movs	r1, #20
 8005a80:	4605      	mov	r5, r0
 8005a82:	f7ff f937 	bl	8004cf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a86:	68a0      	ldr	r0, [r4, #8]
 8005a88:	6803      	ldr	r3, [r0, #0]
 8005a8a:	2100      	movs	r1, #0
 8005a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a8e:	4798      	blx	r3
 8005a90:	4606      	mov	r6, r0
 8005a92:	f003 f9b3 	bl	8008dfc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a96:	6860      	ldr	r0, [r4, #4]
 8005a98:	6803      	ldr	r3, [r0, #0]
 8005a9a:	2100      	movs	r1, #0
 8005a9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a9e:	4798      	blx	r3
 8005aa0:	4631      	mov	r1, r6
 8005aa2:	4604      	mov	r4, r0
 8005aa4:	f003 f984 	bl	8008db0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005aa8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005aac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ab0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ab4:	b1dc      	cbz	r4, 8005aee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005ab6:	1d23      	adds	r3, r4, #4
 8005ab8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005abc:	6833      	ldr	r3, [r6, #0]
 8005abe:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ac2:	4630      	mov	r0, r6
 8005ac4:	68db      	ldr	r3, [r3, #12]
 8005ac6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ac8:	4798      	blx	r3
    newPresenter->activate();
 8005aca:	6823      	ldr	r3, [r4, #0]
 8005acc:	4620      	mov	r0, r4
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ad2:	4629      	mov	r1, r5
 8005ad4:	4630      	mov	r0, r6
 8005ad6:	f012 fc43 	bl	8018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ada:	682b      	ldr	r3, [r5, #0]
 8005adc:	4628      	mov	r0, r5
 8005ade:	691b      	ldr	r3, [r3, #16]
 8005ae0:	4798      	blx	r3
    newTransition->invalidate();
 8005ae2:	682b      	ldr	r3, [r5, #0]
 8005ae4:	4628      	mov	r0, r5
 8005ae6:	695b      	ldr	r3, [r3, #20]
}
 8005ae8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005aec:	4718      	bx	r3
    model->bind(newPresenter);
 8005aee:	4623      	mov	r3, r4
 8005af0:	e7e2      	b.n	8005ab8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005af2:	bf00      	nop
 8005af4:	0802d3d4 	.word	0x0802d3d4
 8005af8:	0802e87b 	.word	0x0802e87b
 8005afc:	0802d570 	.word	0x0802d570
 8005b00:	0802d5b7 	.word	0x0802d5b7
 8005b04:	0802d65a 	.word	0x0802d65a
 8005b08:	200138fc 	.word	0x200138fc
 8005b0c:	200138f8 	.word	0x200138f8

08005b10 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005b10:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005b12:	4770      	bx	lr

08005b14 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005b14:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005b16:	4770      	bx	lr

08005b18 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005b18:	4770      	bx	lr

08005b1a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005b1a:	888b      	ldrh	r3, [r1, #4]
 8005b1c:	69c0      	ldr	r0, [r0, #28]
 8005b1e:	680a      	ldr	r2, [r1, #0]
 8005b20:	0adb      	lsrs	r3, r3, #11
 8005b22:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005b26:	4410      	add	r0, r2
 8005b28:	4770      	bx	lr

08005b2a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005b2a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005b2c:	b1c2      	cbz	r2, 8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005b2e:	7b13      	ldrb	r3, [r2, #12]
 8005b30:	b1b3      	cbz	r3, 8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005b32:	7b54      	ldrb	r4, [r2, #13]
 8005b34:	7ad2      	ldrb	r2, [r2, #11]
 8005b36:	0224      	lsls	r4, r4, #8
 8005b38:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b3c:	4314      	orrs	r4, r2
 8005b3e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b40:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b42:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005b46:	8813      	ldrh	r3, [r2, #0]
 8005b48:	428b      	cmp	r3, r1
 8005b4a:	d102      	bne.n	8005b52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005b4c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005b50:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005b52:	d805      	bhi.n	8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b54:	3801      	subs	r0, #1
 8005b56:	b280      	uxth	r0, r0
 8005b58:	3204      	adds	r2, #4
 8005b5a:	2800      	cmp	r0, #0
 8005b5c:	d1f3      	bne.n	8005b46 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005b5e:	e7f7      	b.n	8005b50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005b60:	2000      	movs	r0, #0
 8005b62:	e7f5      	b.n	8005b50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005b64 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005b64:	b510      	push	{r4, lr}
 8005b66:	212c      	movs	r1, #44	; 0x2c
 8005b68:	4604      	mov	r4, r0
 8005b6a:	f024 fe82 	bl	802a872 <_ZdlPvj>
 8005b6e:	4620      	mov	r0, r4
 8005b70:	bd10      	pop	{r4, pc}
	...

08005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005b74:	b530      	push	{r4, r5, lr}
 8005b76:	b08b      	sub	sp, #44	; 0x2c
 8005b78:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005b7a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005b7e:	9508      	str	r5, [sp, #32]
 8005b80:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005b84:	9507      	str	r5, [sp, #28]
 8005b86:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005b8a:	9506      	str	r5, [sp, #24]
 8005b8c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005b90:	9505      	str	r5, [sp, #20]
 8005b92:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005b96:	9504      	str	r5, [sp, #16]
 8005b98:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005b9c:	9503      	str	r5, [sp, #12]
 8005b9e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005ba2:	9502      	str	r5, [sp, #8]
 8005ba4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005ba8:	9501      	str	r5, [sp, #4]
 8005baa:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005bae:	9500      	str	r5, [sp, #0]
 8005bb0:	f011 ff40 	bl	8017a34 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005bb4:	4b06      	ldr	r3, [pc, #24]	; (8005bd0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005bb6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005bb8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005bba:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005bbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005bbe:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005bc0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bc2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005bc4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005bc6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005bc8:	4620      	mov	r0, r4
 8005bca:	b00b      	add	sp, #44	; 0x2c
 8005bcc:	bd30      	pop	{r4, r5, pc}
 8005bce:	bf00      	nop
 8005bd0:	0802eae4 	.word	0x0802eae4

08005bd4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005bd4:	4770      	bx	lr

08005bd6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005bd6:	4770      	bx	lr

08005bd8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005bd8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bda:	68c2      	ldr	r2, [r0, #12]
 8005bdc:	6844      	ldr	r4, [r0, #4]
 8005bde:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005be0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005be2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005be6:	07d2      	lsls	r2, r2, #31
 8005be8:	bf48      	it	mi
 8005bea:	5962      	ldrmi	r2, [r4, r5]
 8005bec:	689b      	ldr	r3, [r3, #8]
    }
 8005bee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bf0:	bf48      	it	mi
 8005bf2:	58d3      	ldrmi	r3, [r2, r3]
 8005bf4:	4718      	bx	r3

08005bf6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005bf6:	6843      	ldr	r3, [r0, #4]
 8005bf8:	b12b      	cbz	r3, 8005c06 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005bfa:	6883      	ldr	r3, [r0, #8]
 8005bfc:	b92b      	cbnz	r3, 8005c0a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005bfe:	68c0      	ldr	r0, [r0, #12]
 8005c00:	f000 0001 	and.w	r0, r0, #1
 8005c04:	4770      	bx	lr
 8005c06:	4618      	mov	r0, r3
 8005c08:	4770      	bx	lr
 8005c0a:	2001      	movs	r0, #1
    }
 8005c0c:	4770      	bx	lr

08005c0e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c0e:	b510      	push	{r4, lr}
 8005c10:	2110      	movs	r1, #16
 8005c12:	4604      	mov	r4, r0
 8005c14:	f024 fe2d 	bl	802a872 <_ZdlPvj>
 8005c18:	4620      	mov	r0, r4
 8005c1a:	bd10      	pop	{r4, pc}

08005c1c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c1c:	b510      	push	{r4, lr}
 8005c1e:	4b03      	ldr	r3, [pc, #12]	; (8005c2c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005c20:	6003      	str	r3, [r0, #0]
 8005c22:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c24:	f00f f86e 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c28:	4620      	mov	r0, r4
 8005c2a:	bd10      	pop	{r4, pc}
 8005c2c:	0802eb5c 	.word	0x0802eb5c

08005c30 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c30:	b507      	push	{r0, r1, r2, lr}
 8005c32:	4b07      	ldr	r3, [pc, #28]	; (8005c50 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005c34:	6003      	str	r3, [r0, #0]
 8005c36:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c38:	f00f f864 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c3c:	9801      	ldr	r0, [sp, #4]
 8005c3e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005c42:	f024 fe16 	bl	802a872 <_ZdlPvj>
 8005c46:	9801      	ldr	r0, [sp, #4]
 8005c48:	b003      	add	sp, #12
 8005c4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005c4e:	bf00      	nop
 8005c50:	0802eb5c 	.word	0x0802eb5c

08005c54 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005c54:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005c56:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005c5a:	4299      	cmp	r1, r3
{
 8005c5c:	4604      	mov	r4, r0
 8005c5e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005c60:	d103      	bne.n	8005c6a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005c62:	f010 fd51 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005c66:	f7fe fc9f 	bl	80045a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005c6a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c6e:	429d      	cmp	r5, r3
 8005c70:	d103      	bne.n	8005c7a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005c72:	f010 fd49 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8005c76:	f7fe fd27 	bl	80046c8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005c7a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c7e:	429d      	cmp	r5, r3
 8005c80:	d103      	bne.n	8005c8a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005c82:	f010 fd41 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005c86:	f7fe fd5f 	bl	8004748 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005c8a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005c8e:	42a5      	cmp	r5, r4
 8005c90:	d10a      	bne.n	8005ca8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005c92:	4806      	ldr	r0, [pc, #24]	; (8005cac <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005c94:	2200      	movs	r2, #0
 8005c96:	2120      	movs	r1, #32
 8005c98:	f004 fa4a 	bl	800a130 <HAL_GPIO_WritePin>
 8005c9c:	f010 fd34 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005ca0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005ca4:	f7fe bd60 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005ca8:	bd38      	pop	{r3, r4, r5, pc}
 8005caa:	bf00      	nop
 8005cac:	40021000 	.word	0x40021000

08005cb0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cb4:	ed2d 8b06 	vpush	{d8-d10}
 8005cb8:	4604      	mov	r4, r0
 8005cba:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005cbc:	46a3      	mov	fp, r4
        : presenter(0)
 8005cbe:	2500      	movs	r5, #0
 8005cc0:	f012 f9a2 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8005cc4:	4b6a      	ldr	r3, [pc, #424]	; (8005e70 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005cc6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005cc8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005ccc:	2226      	movs	r2, #38	; 0x26
 8005cce:	4629      	mov	r1, r5
 8005cd0:	4658      	mov	r0, fp
 8005cd2:	f025 fde6 	bl	802b8a2 <memset>
 8005cd6:	4658      	mov	r0, fp
 8005cd8:	f7fc fdd6 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8005cdc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005ce0:	26ff      	movs	r6, #255	; 0xff
 8005ce2:	4b64      	ldr	r3, [pc, #400]	; (8005e74 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005ce4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005ce6:	2226      	movs	r2, #38	; 0x26
 8005ce8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005cec:	4629      	mov	r1, r5
 8005cee:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005cf2:	4650      	mov	r0, sl
        : color(col)
 8005cf4:	66a5      	str	r5, [r4, #104]	; 0x68
 8005cf6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005cfa:	f025 fdd2 	bl	802b8a2 <memset>
 8005cfe:	4650      	mov	r0, sl
 8005d00:	f7fc fdc2 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8005d04:	4b5c      	ldr	r3, [pc, #368]	; (8005e78 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005d06:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005d08:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005d0c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005d10:	a90c      	add	r1, sp, #48	; 0x30
 8005d12:	4650      	mov	r0, sl
 8005d14:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005d18:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005d1c:	f00d ffeb 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005d20:	4640      	mov	r0, r8
 8005d22:	f7fc fdc3 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8005d26:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005d2a:	4b54      	ldr	r3, [pc, #336]	; (8005e7c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005d2c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005d30:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005d34:	4638      	mov	r0, r7
 8005d36:	f00c fea7 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8005d3a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d3e:	4618      	mov	r0, r3
 8005d40:	9303      	str	r3, [sp, #12]
 8005d42:	f7fc fba1 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d46:	4b4e      	ldr	r3, [pc, #312]	; (8005e80 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005d48:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005d4c:	f504 79b4 	add.w	r9, r4, #360	; 0x168
 8005d50:	3324      	adds	r3, #36	; 0x24
 8005d52:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005d56:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005d5a:	4648      	mov	r0, r9
 8005d5c:	f7fc fda6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8005d60:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005d64:	4618      	mov	r0, r3
 8005d66:	ee08 3a10 	vmov	s16, r3
 8005d6a:	f7fc fd9f 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8005d6e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005d72:	4618      	mov	r0, r3
 8005d74:	ee08 3a90 	vmov	s17, r3
 8005d78:	f7fc fd98 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8005d7c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005d80:	4618      	mov	r0, r3
 8005d82:	ee09 3a10 	vmov	s18, r3
 8005d86:	f00e f8f7 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d8a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005d8e:	4618      	mov	r0, r3
 8005d90:	ee09 3a90 	vmov	s19, r3
 8005d94:	f00e f8f0 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d98:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005d9c:	4618      	mov	r0, r3
 8005d9e:	ee0a 3a10 	vmov	s20, r3
 8005da2:	f00e f8e9 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005da6:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005daa:	4618      	mov	r0, r3
 8005dac:	ee0a 3a90 	vmov	s21, r3
 8005db0:	f00d ff7a 	bl	8013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005db4:	4a33      	ldr	r2, [pc, #204]	; (8005e84 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005db6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005dba:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005dbe:	4a32      	ldr	r2, [pc, #200]	; (8005e88 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005dc0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005dc4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005dc8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005dcc:	f00e ff90 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005dd0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005dd4:	462a      	mov	r2, r5
 8005dd6:	4658      	mov	r0, fp
 8005dd8:	9300      	str	r3, [sp, #0]
 8005dda:	4629      	mov	r1, r5
 8005ddc:	23f0      	movs	r3, #240	; 0xf0
 8005dde:	f7fc fd3f 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005de2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005de4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005de8:	66a3      	str	r3, [r4, #104]	; 0x68
 8005dea:	4659      	mov	r1, fp
 8005dec:	4630      	mov	r0, r6
 8005dee:	f00b f9f2 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005df2:	462a      	mov	r2, r5
 8005df4:	4650      	mov	r0, sl
 8005df6:	4629      	mov	r1, r5
 8005df8:	f7fc fd25 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8005dfc:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005dfe:	4650      	mov	r0, sl
 8005e00:	a90c      	add	r1, sp, #48	; 0x30
 8005e02:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005e06:	f00d ff76 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005e0a:	4651      	mov	r1, sl
 8005e0c:	4630      	mov	r0, r6
 8005e0e:	f00b f9e2 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005e12:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005e16:	2156      	movs	r1, #86	; 0x56
 8005e18:	4640      	mov	r0, r8
 8005e1a:	f7fc fd14 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8005e1e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005e22:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005e26:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005e2a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005e2e:	4650      	mov	r0, sl
 8005e30:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005e34:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005e38:	4641      	mov	r1, r8
 8005e3a:	4798      	blx	r3
 8005e3c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005e40:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005e44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e48:	4b10      	ldr	r3, [pc, #64]	; (8005e8c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005e4a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005e4c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005e50:	b92b      	cbnz	r3, 8005e5e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005e52:	4b0f      	ldr	r3, [pc, #60]	; (8005e90 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005e54:	4a0f      	ldr	r2, [pc, #60]	; (8005e94 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e56:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e58:	480f      	ldr	r0, [pc, #60]	; (8005e98 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005e5a:	f025 fb1d 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e5e:	4b0f      	ldr	r3, [pc, #60]	; (8005e9c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e60:	881b      	ldrh	r3, [r3, #0]
 8005e62:	2b38      	cmp	r3, #56	; 0x38
 8005e64:	d81e      	bhi.n	8005ea4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005e66:	4b0e      	ldr	r3, [pc, #56]	; (8005ea0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005e68:	4a0a      	ldr	r2, [pc, #40]	; (8005e94 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e6a:	2161      	movs	r1, #97	; 0x61
 8005e6c:	e7f4      	b.n	8005e58 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005e6e:	bf00      	nop
 8005e70:	0802eb5c 	.word	0x0802eb5c
 8005e74:	0802fd84 	.word	0x0802fd84
 8005e78:	0802ff4c 	.word	0x0802ff4c
 8005e7c:	0802d010 	.word	0x0802d010
 8005e80:	0802fab8 	.word	0x0802fab8
 8005e84:	0802eb44 	.word	0x0802eb44
 8005e88:	08005c55 	.word	0x08005c55
 8005e8c:	2001390c 	.word	0x2001390c
 8005e90:	0802ce50 	.word	0x0802ce50
 8005e94:	0802cf52 	.word	0x0802cf52
 8005e98:	0802cecd 	.word	0x0802cecd
 8005e9c:	20013910 	.word	0x20013910
 8005ea0:	0802cf14 	.word	0x0802cf14
        return texts->getText(typedTextId);
 8005ea4:	4ba6      	ldr	r3, [pc, #664]	; (8006140 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005ea6:	2138      	movs	r1, #56	; 0x38
 8005ea8:	6818      	ldr	r0, [r3, #0]
 8005eaa:	f002 fdc1 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8005eae:	4aa5      	ldr	r2, [pc, #660]	; (8006144 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005eb0:	4603      	mov	r3, r0
 8005eb2:	2104      	movs	r1, #4
 8005eb4:	4650      	mov	r0, sl
 8005eb6:	f013 fdd5 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005eba:	4640      	mov	r0, r8
        wc1 = value;
 8005ebc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005ec0:	f00d fb1e 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005ec4:	4ba0      	ldr	r3, [pc, #640]	; (8006148 <_ZN17Main_MenuViewBaseC1Ev+0x498>)
 8005ec6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005ec8:	a90c      	add	r1, sp, #48	; 0x30
 8005eca:	2339      	movs	r3, #57	; 0x39
 8005ecc:	4640      	mov	r0, r8
 8005ece:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005ed2:	f00d fb35 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ed6:	4641      	mov	r1, r8
 8005ed8:	4630      	mov	r0, r6
 8005eda:	f00b f97c 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005ede:	230a      	movs	r3, #10
 8005ee0:	9300      	str	r3, [sp, #0]
 8005ee2:	2232      	movs	r2, #50	; 0x32
 8005ee4:	23f0      	movs	r3, #240	; 0xf0
 8005ee6:	4629      	mov	r1, r5
 8005ee8:	4638      	mov	r0, r7
 8005eea:	f7fc fcb9 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005eee:	9b03      	ldr	r3, [sp, #12]
 8005ef0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005ef4:	22a0      	movs	r2, #160	; 0xa0
 8005ef6:	4611      	mov	r1, r2
 8005ef8:	4638      	mov	r0, r7
 8005efa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005efe:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005f02:	f00c fed7 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f06:	22a0      	movs	r2, #160	; 0xa0
 8005f08:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005f0c:	4638      	mov	r0, r7
 8005f0e:	f00c fedc 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005f12:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005f16:	2b20      	cmp	r3, #32
 8005f18:	d005      	beq.n	8005f26 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005f1a:	2320      	movs	r3, #32
 8005f1c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005f20:	4638      	mov	r0, r7
 8005f22:	f00c fdd1 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005f26:	4638      	mov	r0, r7
 8005f28:	2101      	movs	r1, #1
 8005f2a:	f00c fed9 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005f2e:	4639      	mov	r1, r7
 8005f30:	4630      	mov	r0, r6
 8005f32:	ad04      	add	r5, sp, #16
 8005f34:	f00b f94f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005f38:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8005f3c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005f40:	2223      	movs	r2, #35	; 0x23
 8005f42:	4648      	mov	r0, r9
 8005f44:	2145      	movs	r1, #69	; 0x45
 8005f46:	f7fc fc7e 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005f4a:	4649      	mov	r1, r9
 8005f4c:	4628      	mov	r0, r5
        color = newColor;
 8005f4e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005f52:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005f56:	f00d f859 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005f5e:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8005f62:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8005f66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f6a:	f8df b1dc 	ldr.w	fp, [pc, #476]	; 8006148 <_ZN17Main_MenuViewBaseC1Ev+0x498>
 8005f6e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f72:	2358      	movs	r3, #88	; 0x58
 8005f74:	4641      	mov	r1, r8
 8005f76:	4648      	mov	r0, r9
 8005f78:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005f7c:	f00d fae0 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f80:	4649      	mov	r1, r9
 8005f82:	4630      	mov	r0, r6
 8005f84:	f00b f927 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005f88:	ee18 0a10 	vmov	r0, s16
 8005f8c:	220c      	movs	r2, #12
 8005f8e:	2136      	movs	r1, #54	; 0x36
 8005f90:	f7fc fc59 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8005f94:	ee18 1a10 	vmov	r1, s16
 8005f98:	4628      	mov	r0, r5
        color = newColor;
 8005f9a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005f9e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005fa2:	f00d f833 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fa6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005faa:	ee18 3a10 	vmov	r3, s16
 8005fae:	f103 0c3c 	add.w	ip, r3, #60	; 0x3c
 8005fb2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005fb6:	2259      	movs	r2, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005fb8:	ee18 0a10 	vmov	r0, s16
 8005fbc:	4641      	mov	r1, r8
 8005fbe:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8005fc2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005fc6:	f00d fabb 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fca:	ee18 1a10 	vmov	r1, s16
 8005fce:	4630      	mov	r0, r6
 8005fd0:	f00b f901 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005fd4:	2358      	movs	r3, #88	; 0x58
 8005fd6:	4619      	mov	r1, r3
 8005fd8:	ee18 0a90 	vmov	r0, s17
 8005fdc:	223c      	movs	r2, #60	; 0x3c
 8005fde:	f7fc fc32 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8005fe2:	ee18 1a90 	vmov	r1, s17
 8005fe6:	4628      	mov	r0, r5
        color = newColor;
 8005fe8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005fec:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005ff0:	f00d f80c 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ff4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ff8:	ee18 3a90 	vmov	r3, s17
 8005ffc:	333c      	adds	r3, #60	; 0x3c
 8005ffe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006002:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006004:	ee18 0a90 	vmov	r0, s17
 8006008:	4641      	mov	r1, r8
 800600a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800600e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006012:	f00d fa95 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006016:	ee18 1a90 	vmov	r1, s17
 800601a:	4630      	mov	r0, r6
 800601c:	f00b f8db 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006020:	ee19 0a10 	vmov	r0, s18
 8006024:	22f0      	movs	r2, #240	; 0xf0
 8006026:	2121      	movs	r1, #33	; 0x21
 8006028:	f7fc fc0d 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800602c:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006030:	4642      	mov	r2, r8
 8006032:	f04f 0902 	mov.w	r9, #2
 8006036:	a90b      	add	r1, sp, #44	; 0x2c
 8006038:	ee19 0a10 	vmov	r0, s18
 800603c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006040:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006044:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006048:	f00d fc5f 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800604c:	235a      	movs	r3, #90	; 0x5a
 800604e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006052:	350c      	adds	r5, #12
        updateTextPosition();
 8006054:	ee19 0a10 	vmov	r0, s18
 8006058:	f7fc fc4a 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800605c:	ee19 1a10 	vmov	r1, s18
 8006060:	4630      	mov	r0, r6
        colorPressed = col;
 8006062:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006066:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800606a:	f00b f8b4 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800606e:	ee19 0a90 	vmov	r0, s19
 8006072:	22aa      	movs	r2, #170	; 0xaa
 8006074:	2121      	movs	r1, #33	; 0x21
 8006076:	f7fc fbe6 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800607a:	4642      	mov	r2, r8
 800607c:	a90b      	add	r1, sp, #44	; 0x2c
 800607e:	ee19 0a90 	vmov	r0, s19
 8006082:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006086:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 800608a:	f00d fc3e 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800608e:	235b      	movs	r3, #91	; 0x5b
 8006090:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006094:	ee19 0a90 	vmov	r0, s19
 8006098:	f7fc fc2a 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800609c:	ee19 1a90 	vmov	r1, s19
 80060a0:	4630      	mov	r0, r6
        colorPressed = col;
 80060a2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80060a6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80060aa:	f00b f894 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80060ae:	ee1a 0a10 	vmov	r0, s20
 80060b2:	2264      	movs	r2, #100	; 0x64
 80060b4:	2121      	movs	r1, #33	; 0x21
 80060b6:	f7fc fbc6 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060ba:	4642      	mov	r2, r8
 80060bc:	a90b      	add	r1, sp, #44	; 0x2c
 80060be:	ee1a 0a10 	vmov	r0, s20
 80060c2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80060c6:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 80060ca:	f00d fc1e 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060ce:	235c      	movs	r3, #92	; 0x5c
 80060d0:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80060d4:	ee1a 0a10 	vmov	r0, s20
 80060d8:	f7fc fc0a 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060dc:	ee1a 1a10 	vmov	r1, s20
 80060e0:	4630      	mov	r0, r6
        colorPressed = col;
 80060e2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80060e6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80060ea:	f00b f874 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80060ee:	ee1a 0a90 	vmov	r0, s21
 80060f2:	2205      	movs	r2, #5
 80060f4:	21c6      	movs	r1, #198	; 0xc6
 80060f6:	f7fc fba6 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80060fa:	2301      	movs	r3, #1
 80060fc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006100:	2308      	movs	r3, #8
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006102:	ee1a 0a90 	vmov	r0, s21
 8006106:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800610a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800610e:	aa0a      	add	r2, sp, #40	; 0x28
 8006110:	ab0b      	add	r3, sp, #44	; 0x2c
 8006112:	a909      	add	r1, sp, #36	; 0x24
 8006114:	f8cd 8000 	str.w	r8, [sp]
 8006118:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 800611c:	f00d fd2f 	bl	8013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006120:	4630      	mov	r0, r6
 8006122:	ee1a 1a90 	vmov	r1, s21
 8006126:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800612a:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800612e:	f00b f852 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006132:	4620      	mov	r0, r4
 8006134:	b00f      	add	sp, #60	; 0x3c
 8006136:	ecbd 8b06 	vpop	{d8-d10}
 800613a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800613e:	bf00      	nop
 8006140:	20013918 	.word	0x20013918
 8006144:	0802cf8a 	.word	0x0802cf8a
 8006148:	0802d000 	.word	0x0802d000

0800614c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 800614c:	4770      	bx	lr

0800614e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800614e:	4770      	bx	lr

08006150 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006150:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006152:	68c2      	ldr	r2, [r0, #12]
 8006154:	6844      	ldr	r4, [r0, #4]
 8006156:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006158:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800615a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800615e:	07d2      	lsls	r2, r2, #31
 8006160:	bf48      	it	mi
 8006162:	5962      	ldrmi	r2, [r4, r5]
 8006164:	689b      	ldr	r3, [r3, #8]
    }
 8006166:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006168:	bf48      	it	mi
 800616a:	58d3      	ldrmi	r3, [r2, r3]
 800616c:	4718      	bx	r3

0800616e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800616e:	6843      	ldr	r3, [r0, #4]
 8006170:	b12b      	cbz	r3, 800617e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006172:	6883      	ldr	r3, [r0, #8]
 8006174:	b92b      	cbnz	r3, 8006182 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006176:	68c0      	ldr	r0, [r0, #12]
 8006178:	f000 0001 	and.w	r0, r0, #1
 800617c:	4770      	bx	lr
 800617e:	4618      	mov	r0, r3
 8006180:	4770      	bx	lr
 8006182:	2001      	movs	r0, #1
    }
 8006184:	4770      	bx	lr

08006186 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006186:	b510      	push	{r4, lr}
 8006188:	2110      	movs	r1, #16
 800618a:	4604      	mov	r4, r0
 800618c:	f024 fb71 	bl	802a872 <_ZdlPvj>
 8006190:	4620      	mov	r0, r4
 8006192:	bd10      	pop	{r4, pc}

08006194 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006194:	b510      	push	{r4, lr}
 8006196:	4b03      	ldr	r3, [pc, #12]	; (80061a4 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006198:	6003      	str	r3, [r0, #0]
 800619a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800619c:	f00e fdb2 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061a0:	4620      	mov	r0, r4
 80061a2:	bd10      	pop	{r4, pc}
 80061a4:	0802eba8 	.word	0x0802eba8

080061a8 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80061a8:	b507      	push	{r0, r1, r2, lr}
 80061aa:	4b07      	ldr	r3, [pc, #28]	; (80061c8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80061ac:	6003      	str	r3, [r0, #0]
 80061ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061b0:	f00e fda8 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061b4:	9801      	ldr	r0, [sp, #4]
 80061b6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80061ba:	f024 fb5a 	bl	802a872 <_ZdlPvj>
 80061be:	9801      	ldr	r0, [sp, #4]
 80061c0:	b003      	add	sp, #12
 80061c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80061c6:	bf00      	nop
 80061c8:	0802eba8 	.word	0x0802eba8

080061cc <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80061cc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80061ce:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80061d2:	4299      	cmp	r1, r3
{
 80061d4:	4604      	mov	r4, r0
 80061d6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80061d8:	d103      	bne.n	80061e2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80061da:	f010 fa95 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80061de:	f7fe f9d3 	bl	8004588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80061e2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80061e6:	429d      	cmp	r5, r3
 80061e8:	d103      	bne.n	80061f2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80061ea:	f010 fa8d 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80061ee:	f7fe f9fb 	bl	80045e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80061f2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80061f6:	42a5      	cmp	r5, r4
 80061f8:	d105      	bne.n	8006206 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80061fa:	f010 fa85 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80061fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006202:	f7fe ba21 	b.w	8004648 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006206:	bd38      	pop	{r3, r4, r5, pc}

08006208 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800620c:	ed2d 8b06 	vpush	{d8-d10}
 8006210:	4604      	mov	r4, r0
 8006212:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006214:	46a3      	mov	fp, r4
 8006216:	2500      	movs	r5, #0
 8006218:	f011 fef6 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 800621c:	4b66      	ldr	r3, [pc, #408]	; (80063b8 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800621e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006220:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006224:	2226      	movs	r2, #38	; 0x26
 8006226:	4629      	mov	r1, r5
 8006228:	4658      	mov	r0, fp
 800622a:	f025 fb3a 	bl	802b8a2 <memset>
 800622e:	4658      	mov	r0, fp
 8006230:	f7fc fb2a 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006234:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006238:	26ff      	movs	r6, #255	; 0xff
 800623a:	4b60      	ldr	r3, [pc, #384]	; (80063bc <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 800623c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800623e:	2226      	movs	r2, #38	; 0x26
 8006240:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006244:	4629      	mov	r1, r5
 8006246:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800624a:	4650      	mov	r0, sl
 800624c:	66a5      	str	r5, [r4, #104]	; 0x68
 800624e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006252:	f025 fb26 	bl	802b8a2 <memset>
 8006256:	4650      	mov	r0, sl
 8006258:	f7fc fb16 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 800625c:	4b58      	ldr	r3, [pc, #352]	; (80063c0 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800625e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006260:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006264:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006268:	a90a      	add	r1, sp, #40	; 0x28
 800626a:	4650      	mov	r0, sl
 800626c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006270:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006274:	f00d fd3f 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006278:	4648      	mov	r0, r9
 800627a:	f7fc fb17 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800627e:	4b51      	ldr	r3, [pc, #324]	; (80063c4 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8006280:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006284:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006288:	4618      	mov	r0, r3
 800628a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800628e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006292:	ee08 3a90 	vmov	s17, r3
 8006296:	f7fc fb09 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800629a:	4638      	mov	r0, r7
 800629c:	f00c fbf4 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 80062a0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80062a4:	4618      	mov	r0, r3
 80062a6:	9303      	str	r3, [sp, #12]
 80062a8:	f7fc f8ee 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80062ac:	4b46      	ldr	r3, [pc, #280]	; (80063c8 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80062ae:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80062b2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80062b6:	3324      	adds	r3, #36	; 0x24
 80062b8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80062bc:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80062c0:	4640      	mov	r0, r8
 80062c2:	f7fc faf3 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80062c6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80062ca:	4618      	mov	r0, r3
 80062cc:	ee08 3a10 	vmov	s16, r3
 80062d0:	f7fc faec 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80062d4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80062d8:	4618      	mov	r0, r3
 80062da:	ee09 3a10 	vmov	s18, r3
 80062de:	f00d fe4b 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062e2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80062e6:	4618      	mov	r0, r3
 80062e8:	ee09 3a90 	vmov	s19, r3
 80062ec:	f00d fe44 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062f0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80062f4:	4618      	mov	r0, r3
 80062f6:	ee0a 3a10 	vmov	s20, r3
 80062fa:	f00d fe3d 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80062fe:	4a33      	ldr	r2, [pc, #204]	; (80063cc <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006300:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006304:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006308:	4a31      	ldr	r2, [pc, #196]	; (80063d0 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800630a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800630e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006312:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006316:	f00e fceb 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800631a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800631e:	462a      	mov	r2, r5
 8006320:	4658      	mov	r0, fp
 8006322:	9300      	str	r3, [sp, #0]
 8006324:	4629      	mov	r1, r5
 8006326:	23f0      	movs	r3, #240	; 0xf0
 8006328:	f7fc fa9a 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 800632c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800632e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006332:	66a3      	str	r3, [r4, #104]	; 0x68
 8006334:	4659      	mov	r1, fp
 8006336:	4630      	mov	r0, r6
 8006338:	f00a ff4d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800633c:	462a      	mov	r2, r5
 800633e:	4650      	mov	r0, sl
 8006340:	4629      	mov	r1, r5
 8006342:	f7fc fa80 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006346:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006348:	4650      	mov	r0, sl
 800634a:	a90a      	add	r1, sp, #40	; 0x28
 800634c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006350:	f00d fcd1 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006354:	4651      	mov	r1, sl
 8006356:	4630      	mov	r0, r6
 8006358:	f00a ff3d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800635c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006360:	2156      	movs	r1, #86	; 0x56
 8006362:	4648      	mov	r0, r9
 8006364:	f7fc fa6f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006368:	f04f 33ff 	mov.w	r3, #4294967295
 800636c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006370:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006374:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006378:	f10d 0b10 	add.w	fp, sp, #16
 800637c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006380:	4649      	mov	r1, r9
 8006382:	4658      	mov	r0, fp
 8006384:	4798      	blx	r3
 8006386:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800638a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800638e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006392:	4b10      	ldr	r3, [pc, #64]	; (80063d4 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006394:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006396:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800639a:	b92b      	cbnz	r3, 80063a8 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 800639c:	4b0e      	ldr	r3, [pc, #56]	; (80063d8 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 800639e:	4a0f      	ldr	r2, [pc, #60]	; (80063dc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80063a0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063a2:	480f      	ldr	r0, [pc, #60]	; (80063e0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80063a4:	f025 f878 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80063a8:	4b0e      	ldr	r3, [pc, #56]	; (80063e4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063aa:	881b      	ldrh	r3, [r3, #0]
 80063ac:	2b29      	cmp	r3, #41	; 0x29
 80063ae:	d81d      	bhi.n	80063ec <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80063b0:	4b0d      	ldr	r3, [pc, #52]	; (80063e8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80063b2:	4a0a      	ldr	r2, [pc, #40]	; (80063dc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80063b4:	2161      	movs	r1, #97	; 0x61
 80063b6:	e7f4      	b.n	80063a2 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80063b8:	0802eba8 	.word	0x0802eba8
 80063bc:	0802fd84 	.word	0x0802fd84
 80063c0:	0802ff4c 	.word	0x0802ff4c
 80063c4:	0802d010 	.word	0x0802d010
 80063c8:	0802fab8 	.word	0x0802fab8
 80063cc:	0802eb90 	.word	0x0802eb90
 80063d0:	080061cd 	.word	0x080061cd
 80063d4:	2001390c 	.word	0x2001390c
 80063d8:	0802ce50 	.word	0x0802ce50
 80063dc:	0802cf52 	.word	0x0802cf52
 80063e0:	0802cecd 	.word	0x0802cecd
 80063e4:	20013910 	.word	0x20013910
 80063e8:	0802cf14 	.word	0x0802cf14
        return texts->getText(typedTextId);
 80063ec:	4b95      	ldr	r3, [pc, #596]	; (8006644 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80063ee:	2129      	movs	r1, #41	; 0x29
 80063f0:	6818      	ldr	r0, [r3, #0]
 80063f2:	f002 fb1d 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80063f6:	4a94      	ldr	r2, [pc, #592]	; (8006648 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80063f8:	4603      	mov	r3, r0
 80063fa:	2104      	movs	r1, #4
 80063fc:	4650      	mov	r0, sl
 80063fe:	f013 fb31 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006402:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006406:	4648      	mov	r0, r9
 8006408:	f00d f87a 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800640c:	f8df a23c 	ldr.w	sl, [pc, #572]	; 800664c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006410:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006414:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006416:	a90a      	add	r1, sp, #40	; 0x28
 8006418:	4648      	mov	r0, r9
 800641a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800641e:	f00d f88f 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006422:	4649      	mov	r1, r9
 8006424:	4630      	mov	r0, r6
 8006426:	f00a fed6 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800642a:	223c      	movs	r2, #60	; 0x3c
 800642c:	ee18 0a90 	vmov	r0, s17
 8006430:	213d      	movs	r1, #61	; 0x3d
 8006432:	f7fc fa08 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006436:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800643a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800643e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006442:	4658      	mov	r0, fp
        linespace = space;
 8006444:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006448:	f00c fde0 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800644c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006450:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006454:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006458:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800645a:	ee18 0a90 	vmov	r0, s17
 800645e:	a90a      	add	r1, sp, #40	; 0x28
 8006460:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006464:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006468:	f00d f86a 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800646c:	ee18 1a90 	vmov	r1, s17
 8006470:	4630      	mov	r0, r6
 8006472:	f00a feb0 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006476:	230a      	movs	r3, #10
 8006478:	9300      	str	r3, [sp, #0]
 800647a:	2232      	movs	r2, #50	; 0x32
 800647c:	23f0      	movs	r3, #240	; 0xf0
 800647e:	4629      	mov	r1, r5
 8006480:	4638      	mov	r0, r7
 8006482:	f7fc f9ed 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006486:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800648a:	22a0      	movs	r2, #160	; 0xa0
 800648c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006490:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006494:	9b03      	ldr	r3, [sp, #12]
 8006496:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800649a:	4611      	mov	r1, r2
 800649c:	4638      	mov	r0, r7
 800649e:	f00c fc09 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064a2:	22a0      	movs	r2, #160	; 0xa0
 80064a4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80064a8:	4638      	mov	r0, r7
 80064aa:	f00c fc0e 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80064ae:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80064b2:	2b20      	cmp	r3, #32
 80064b4:	d005      	beq.n	80064c2 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80064b6:	2320      	movs	r3, #32
 80064b8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80064bc:	4638      	mov	r0, r7
 80064be:	f00c fb03 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80064c2:	4638      	mov	r0, r7
 80064c4:	2101      	movs	r1, #1
 80064c6:	f00c fc0b 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80064ca:	4639      	mov	r1, r7
 80064cc:	4630      	mov	r0, r6
 80064ce:	f00a fe82 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80064d2:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80064d6:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80064d8:	2223      	movs	r2, #35	; 0x23
 80064da:	4640      	mov	r0, r8
        linespace = space;
 80064dc:	f04f 0a00 	mov.w	sl, #0
 80064e0:	2145      	movs	r1, #69	; 0x45
 80064e2:	f7fc f9b0 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064e6:	4641      	mov	r1, r8
 80064e8:	4638      	mov	r0, r7
        color = newColor;
 80064ea:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80064ee:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80064f2:	f00c fd8b 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064f6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80064fa:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80064fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006502:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800664c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006506:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800650a:	2356      	movs	r3, #86	; 0x56
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 800650c:	a90a      	add	r1, sp, #40	; 0x28
 800650e:	4640      	mov	r0, r8
 8006510:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006514:	f00d f814 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006518:	4641      	mov	r1, r8
 800651a:	4630      	mov	r0, r6
 800651c:	f00a fe5b 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006520:	ee18 0a10 	vmov	r0, s16
 8006524:	220c      	movs	r2, #12
 8006526:	2136      	movs	r1, #54	; 0x36
 8006528:	f7fc f98d 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800652c:	ee18 1a10 	vmov	r1, s16
 8006530:	4638      	mov	r0, r7
        color = newColor;
 8006532:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006536:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800653a:	f00c fd67 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800653e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006542:	ee18 3a10 	vmov	r3, s16
 8006546:	333c      	adds	r3, #60	; 0x3c
 8006548:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800654c:	2357      	movs	r3, #87	; 0x57
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800654e:	ee18 0a10 	vmov	r0, s16
 8006552:	a90a      	add	r1, sp, #40	; 0x28
 8006554:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006558:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800655c:	f00c fff0 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006560:	ee18 1a10 	vmov	r1, s16
 8006564:	4630      	mov	r0, r6
 8006566:	f00a fe36 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800656a:	ee19 0a10 	vmov	r0, s18
 800656e:	22f0      	movs	r2, #240	; 0xf0
 8006570:	2121      	movs	r1, #33	; 0x21
 8006572:	f7fc f968 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006576:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800657a:	aa0a      	add	r2, sp, #40	; 0x28
 800657c:	f04f 0802 	mov.w	r8, #2
 8006580:	a909      	add	r1, sp, #36	; 0x24
 8006582:	ee19 0a10 	vmov	r0, s18
 8006586:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800658a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800658e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006592:	f00d f9ba 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006596:	2355      	movs	r3, #85	; 0x55
 8006598:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800659c:	3710      	adds	r7, #16
        updateTextPosition();
 800659e:	ee19 0a10 	vmov	r0, s18
 80065a2:	f7fc f9a5 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065a6:	ee19 1a10 	vmov	r1, s18
 80065aa:	4630      	mov	r0, r6
        colorPressed = col;
 80065ac:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80065b0:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80065b4:	f00a fe0f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80065b8:	ee19 0a90 	vmov	r0, s19
 80065bc:	22aa      	movs	r2, #170	; 0xaa
 80065be:	2121      	movs	r1, #33	; 0x21
 80065c0:	f7fc f941 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065c4:	aa0a      	add	r2, sp, #40	; 0x28
 80065c6:	a909      	add	r1, sp, #36	; 0x24
 80065c8:	ee19 0a90 	vmov	r0, s19
 80065cc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80065d0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80065d4:	f00d f999 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80065d8:	2354      	movs	r3, #84	; 0x54
 80065da:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80065de:	ee19 0a90 	vmov	r0, s19
 80065e2:	f7fc f985 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065e6:	ee19 1a90 	vmov	r1, s19
 80065ea:	4630      	mov	r0, r6
        colorPressed = col;
 80065ec:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80065f0:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80065f4:	f00a fdef 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80065f8:	ee1a 0a10 	vmov	r0, s20
 80065fc:	2264      	movs	r2, #100	; 0x64
 80065fe:	2121      	movs	r1, #33	; 0x21
 8006600:	f7fc f921 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006604:	aa0a      	add	r2, sp, #40	; 0x28
 8006606:	a909      	add	r1, sp, #36	; 0x24
 8006608:	ee1a 0a10 	vmov	r0, s20
 800660c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006610:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006614:	f00d f979 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006618:	2353      	movs	r3, #83	; 0x53
        updateTextPosition();
 800661a:	ee1a 0a10 	vmov	r0, s20
 800661e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006622:	f7fc f965 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006626:	4630      	mov	r0, r6
        colorPressed = col;
 8006628:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 800662c:	ee1a 1a10 	vmov	r1, s20
 8006630:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006634:	f00a fdcf 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006638:	4620      	mov	r0, r4
 800663a:	b00d      	add	sp, #52	; 0x34
 800663c:	ecbd 8b06 	vpop	{d8-d10}
 8006640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006644:	20013918 	.word	0x20013918
 8006648:	0802cf8a 	.word	0x0802cf8a
 800664c:	0802d000 	.word	0x0802d000

08006650 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006650:	4770      	bx	lr

08006652 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006652:	4770      	bx	lr

08006654 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006654:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006656:	68c2      	ldr	r2, [r0, #12]
 8006658:	6844      	ldr	r4, [r0, #4]
 800665a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800665c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800665e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006662:	07d2      	lsls	r2, r2, #31
 8006664:	bf48      	it	mi
 8006666:	5962      	ldrmi	r2, [r4, r5]
 8006668:	689b      	ldr	r3, [r3, #8]
    }
 800666a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800666c:	bf48      	it	mi
 800666e:	58d3      	ldrmi	r3, [r2, r3]
 8006670:	4718      	bx	r3

08006672 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006672:	6843      	ldr	r3, [r0, #4]
 8006674:	b12b      	cbz	r3, 8006682 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006676:	6883      	ldr	r3, [r0, #8]
 8006678:	b92b      	cbnz	r3, 8006686 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800667a:	68c0      	ldr	r0, [r0, #12]
 800667c:	f000 0001 	and.w	r0, r0, #1
 8006680:	4770      	bx	lr
 8006682:	4618      	mov	r0, r3
 8006684:	4770      	bx	lr
 8006686:	2001      	movs	r0, #1
    }
 8006688:	4770      	bx	lr

0800668a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800668a:	b510      	push	{r4, lr}
 800668c:	2110      	movs	r1, #16
 800668e:	4604      	mov	r4, r0
 8006690:	f024 f8ef 	bl	802a872 <_ZdlPvj>
 8006694:	4620      	mov	r0, r4
 8006696:	bd10      	pop	{r4, pc}

08006698 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006698:	b510      	push	{r4, lr}
 800669a:	4b03      	ldr	r3, [pc, #12]	; (80066a8 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 800669c:	6003      	str	r3, [r0, #0]
 800669e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066a0:	f00e fb30 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066a4:	4620      	mov	r0, r4
 80066a6:	bd10      	pop	{r4, pc}
 80066a8:	0802ebf4 	.word	0x0802ebf4

080066ac <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80066ac:	b507      	push	{r0, r1, r2, lr}
 80066ae:	4b07      	ldr	r3, [pc, #28]	; (80066cc <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80066b0:	6003      	str	r3, [r0, #0]
 80066b2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066b4:	f00e fb26 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066b8:	9801      	ldr	r0, [sp, #4]
 80066ba:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066be:	f024 f8d8 	bl	802a872 <_ZdlPvj>
 80066c2:	9801      	ldr	r0, [sp, #4]
 80066c4:	b003      	add	sp, #12
 80066c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80066ca:	bf00      	nop
 80066cc:	0802ebf4 	.word	0x0802ebf4

080066d0 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80066d0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80066d2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80066d6:	4299      	cmp	r1, r3
{
 80066d8:	4604      	mov	r4, r0
 80066da:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80066dc:	d103      	bne.n	80066e6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066de:	f010 f813 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80066e2:	f7fd ff71 	bl	80045c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80066e6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80066ea:	429d      	cmp	r5, r3
 80066ec:	d103      	bne.n	80066f6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066ee:	f010 f80b 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80066f2:	f7fd ffd9 	bl	80046a8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 80066f6:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 80066fa:	42a5      	cmp	r5, r4
 80066fc:	d105      	bne.n	800670a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80066fe:	f010 f803 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006702:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006706:	f7fd bfbf 	b.w	8004688 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 800670a:	bd38      	pop	{r3, r4, r5, pc}

0800670c <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 800670c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006710:	ed2d 8b06 	vpush	{d8-d10}
 8006714:	4604      	mov	r4, r0
 8006716:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006718:	46a3      	mov	fp, r4
 800671a:	2500      	movs	r5, #0
 800671c:	f011 fc74 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8006720:	4b66      	ldr	r3, [pc, #408]	; (80068bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006722:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006724:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006728:	2226      	movs	r2, #38	; 0x26
 800672a:	4629      	mov	r1, r5
 800672c:	4658      	mov	r0, fp
 800672e:	f025 f8b8 	bl	802b8a2 <memset>
 8006732:	4658      	mov	r0, fp
 8006734:	f7fc f8a8 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006738:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800673c:	26ff      	movs	r6, #255	; 0xff
 800673e:	4b60      	ldr	r3, [pc, #384]	; (80068c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006740:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006742:	2226      	movs	r2, #38	; 0x26
 8006744:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006748:	4629      	mov	r1, r5
 800674a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800674e:	4650      	mov	r0, sl
 8006750:	66a5      	str	r5, [r4, #104]	; 0x68
 8006752:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006756:	f025 f8a4 	bl	802b8a2 <memset>
 800675a:	4650      	mov	r0, sl
 800675c:	f7fc f894 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006760:	4b58      	ldr	r3, [pc, #352]	; (80068c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006762:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006764:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006768:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800676c:	a90a      	add	r1, sp, #40	; 0x28
 800676e:	4650      	mov	r0, sl
 8006770:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006774:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006778:	f00d fabd 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800677c:	4648      	mov	r0, r9
 800677e:	f7fc f895 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8006782:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006786:	4b50      	ldr	r3, [pc, #320]	; (80068c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006788:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800678c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006790:	4638      	mov	r0, r7
 8006792:	f00c f979 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8006796:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800679a:	4618      	mov	r0, r3
 800679c:	9303      	str	r3, [sp, #12]
 800679e:	f7fb fe73 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067a2:	4b4a      	ldr	r3, [pc, #296]	; (80068cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80067a4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80067a8:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80067ac:	3324      	adds	r3, #36	; 0x24
 80067ae:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80067b2:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80067b6:	4640      	mov	r0, r8
 80067b8:	f7fc f878 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80067bc:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80067c0:	4618      	mov	r0, r3
 80067c2:	ee08 3a10 	vmov	s16, r3
 80067c6:	f7fc f871 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80067ca:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80067ce:	4618      	mov	r0, r3
 80067d0:	ee08 3a90 	vmov	s17, r3
 80067d4:	f7fc f86a 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80067d8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067dc:	4618      	mov	r0, r3
 80067de:	ee09 3a10 	vmov	s18, r3
 80067e2:	f00d fbc9 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067e6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067ea:	4618      	mov	r0, r3
 80067ec:	ee09 3a90 	vmov	s19, r3
 80067f0:	f00d fbc2 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067f4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067f8:	4618      	mov	r0, r3
 80067fa:	ee0a 3a10 	vmov	s20, r3
 80067fe:	f00d fbbb 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006802:	4a33      	ldr	r2, [pc, #204]	; (80068d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006804:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006808:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800680c:	4a31      	ldr	r2, [pc, #196]	; (80068d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800680e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006812:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006816:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800681a:	f00e fa69 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800681e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006822:	462a      	mov	r2, r5
 8006824:	4658      	mov	r0, fp
 8006826:	9300      	str	r3, [sp, #0]
 8006828:	4629      	mov	r1, r5
 800682a:	23f0      	movs	r3, #240	; 0xf0
 800682c:	f7fc f818 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006830:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006832:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006836:	66a3      	str	r3, [r4, #104]	; 0x68
 8006838:	4659      	mov	r1, fp
 800683a:	4630      	mov	r0, r6
 800683c:	f00a fccb 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006840:	462a      	mov	r2, r5
 8006842:	4650      	mov	r0, sl
 8006844:	4629      	mov	r1, r5
 8006846:	f7fb fffe 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800684a:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800684c:	4650      	mov	r0, sl
 800684e:	a90a      	add	r1, sp, #40	; 0x28
 8006850:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006854:	f00d fa4f 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006858:	4651      	mov	r1, sl
 800685a:	4630      	mov	r0, r6
 800685c:	f00a fcbb 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006860:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006864:	2156      	movs	r1, #86	; 0x56
 8006866:	4648      	mov	r0, r9
 8006868:	f7fb ffed 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800686c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006870:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006874:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006878:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800687c:	4650      	mov	r0, sl
 800687e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006882:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006886:	4649      	mov	r1, r9
 8006888:	4798      	blx	r3
 800688a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800688e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006892:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006896:	4b10      	ldr	r3, [pc, #64]	; (80068d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006898:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800689a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800689e:	b92b      	cbnz	r3, 80068ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 80068a0:	4b0e      	ldr	r3, [pc, #56]	; (80068dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80068a2:	4a0f      	ldr	r2, [pc, #60]	; (80068e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80068a4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068a6:	480f      	ldr	r0, [pc, #60]	; (80068e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80068a8:	f024 fdf6 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068ac:	4b0e      	ldr	r3, [pc, #56]	; (80068e8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068ae:	881b      	ldrh	r3, [r3, #0]
 80068b0:	2b24      	cmp	r3, #36	; 0x24
 80068b2:	d81d      	bhi.n	80068f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80068b4:	4b0d      	ldr	r3, [pc, #52]	; (80068ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80068b6:	4a0a      	ldr	r2, [pc, #40]	; (80068e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80068b8:	2161      	movs	r1, #97	; 0x61
 80068ba:	e7f4      	b.n	80068a6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80068bc:	0802ebf4 	.word	0x0802ebf4
 80068c0:	0802fd84 	.word	0x0802fd84
 80068c4:	0802ff4c 	.word	0x0802ff4c
 80068c8:	0802d010 	.word	0x0802d010
 80068cc:	0802fab8 	.word	0x0802fab8
 80068d0:	0802ebdc 	.word	0x0802ebdc
 80068d4:	080066d1 	.word	0x080066d1
 80068d8:	2001390c 	.word	0x2001390c
 80068dc:	0802ce50 	.word	0x0802ce50
 80068e0:	0802cf52 	.word	0x0802cf52
 80068e4:	0802cecd 	.word	0x0802cecd
 80068e8:	20013910 	.word	0x20013910
 80068ec:	0802cf14 	.word	0x0802cf14
        return texts->getText(typedTextId);
 80068f0:	4b93      	ldr	r3, [pc, #588]	; (8006b40 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80068f2:	2124      	movs	r1, #36	; 0x24
 80068f4:	6818      	ldr	r0, [r3, #0]
 80068f6:	f002 f89b 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80068fa:	4a92      	ldr	r2, [pc, #584]	; (8006b44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80068fc:	4603      	mov	r3, r0
 80068fe:	2104      	movs	r1, #4
 8006900:	4650      	mov	r0, sl
 8006902:	f013 f8af 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006906:	4648      	mov	r0, r9
        wc1 = value;
 8006908:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800690c:	f00c fdf8 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006910:	4b8d      	ldr	r3, [pc, #564]	; (8006b48 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006912:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006914:	a90a      	add	r1, sp, #40	; 0x28
 8006916:	2325      	movs	r3, #37	; 0x25
 8006918:	4648      	mov	r0, r9
 800691a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800691e:	f00c fe0f 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006922:	4649      	mov	r1, r9
 8006924:	4630      	mov	r0, r6
 8006926:	f00a fc56 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800692a:	230a      	movs	r3, #10
 800692c:	9300      	str	r3, [sp, #0]
 800692e:	2232      	movs	r2, #50	; 0x32
 8006930:	23f0      	movs	r3, #240	; 0xf0
 8006932:	4629      	mov	r1, r5
 8006934:	4638      	mov	r0, r7
 8006936:	f7fb ff93 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 800693a:	9b03      	ldr	r3, [sp, #12]
 800693c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006940:	22a0      	movs	r2, #160	; 0xa0
 8006942:	4611      	mov	r1, r2
 8006944:	4638      	mov	r0, r7
 8006946:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800694a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800694e:	f00c f9b1 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006952:	22a0      	movs	r2, #160	; 0xa0
 8006954:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006958:	4638      	mov	r0, r7
 800695a:	f00c f9b6 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800695e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006962:	2b20      	cmp	r3, #32
 8006964:	d005      	beq.n	8006972 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006966:	2320      	movs	r3, #32
 8006968:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800696c:	4638      	mov	r0, r7
 800696e:	f00c f8ab 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006972:	4638      	mov	r0, r7
 8006974:	2101      	movs	r1, #1
 8006976:	f00c f9b3 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800697a:	4639      	mov	r1, r7
 800697c:	4630      	mov	r0, r6
 800697e:	ad04      	add	r5, sp, #16
        color = newColor;
 8006980:	f04f 37ff 	mov.w	r7, #4294967295
 8006984:	f00a fc27 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006988:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 800698c:	2223      	movs	r2, #35	; 0x23
 800698e:	4640      	mov	r0, r8
 8006990:	2145      	movs	r1, #69	; 0x45
 8006992:	f7fb ff58 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006996:	4641      	mov	r1, r8
 8006998:	4628      	mov	r0, r5
        color = newColor;
 800699a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800699e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80069a2:	f00c fb33 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069aa:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80069ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069b2:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006b48 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80069b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80069ba:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80069bc:	a90a      	add	r1, sp, #40	; 0x28
 80069be:	4640      	mov	r0, r8
 80069c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069c4:	f00c fdbc 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069c8:	4641      	mov	r1, r8
 80069ca:	4630      	mov	r0, r6
 80069cc:	f00a fc03 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069d0:	ee18 0a10 	vmov	r0, s16
 80069d4:	220c      	movs	r2, #12
 80069d6:	2136      	movs	r1, #54	; 0x36
 80069d8:	f7fb ff35 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80069dc:	ee18 1a10 	vmov	r1, s16
 80069e0:	4628      	mov	r0, r5
        color = newColor;
 80069e2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80069e6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80069ea:	f00c fb0f 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069ee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069f2:	ee18 3a10 	vmov	r3, s16
 80069f6:	333c      	adds	r3, #60	; 0x3c
 80069f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069fc:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80069fe:	ee18 0a10 	vmov	r0, s16
 8006a02:	a90a      	add	r1, sp, #40	; 0x28
 8006a04:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a08:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a0c:	f00c fd98 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a10:	ee18 1a10 	vmov	r1, s16
 8006a14:	4630      	mov	r0, r6
 8006a16:	f00a fbde 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006a1a:	ee18 0a90 	vmov	r0, s17
 8006a1e:	223c      	movs	r2, #60	; 0x3c
 8006a20:	2121      	movs	r1, #33	; 0x21
 8006a22:	f7fb ff10 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006a26:	ee18 1a90 	vmov	r1, s17
 8006a2a:	4628      	mov	r0, r5
        color = newColor;
 8006a2c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006a30:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a34:	f00c faea 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a3c:	ee18 3a90 	vmov	r3, s17
 8006a40:	333c      	adds	r3, #60	; 0x3c
 8006a42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a46:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006a48:	ee18 0a90 	vmov	r0, s17
 8006a4c:	a90a      	add	r1, sp, #40	; 0x28
 8006a4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a52:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a56:	f00c fd73 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a5a:	ee18 1a90 	vmov	r1, s17
 8006a5e:	4630      	mov	r0, r6
 8006a60:	f00a fbb9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a64:	ee19 0a10 	vmov	r0, s18
 8006a68:	22f0      	movs	r2, #240	; 0xf0
 8006a6a:	2121      	movs	r1, #33	; 0x21
 8006a6c:	f7fb feeb 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006a70:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a74:	aa0a      	add	r2, sp, #40	; 0x28
 8006a76:	f04f 0802 	mov.w	r8, #2
 8006a7a:	a909      	add	r1, sp, #36	; 0x24
 8006a7c:	ee19 0a10 	vmov	r0, s18
 8006a80:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a84:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a88:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a8c:	f00c ff3d 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a90:	2342      	movs	r3, #66	; 0x42
 8006a92:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006a96:	3510      	adds	r5, #16
        updateTextPosition();
 8006a98:	ee19 0a10 	vmov	r0, s18
 8006a9c:	f7fb ff28 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006aa0:	ee19 1a10 	vmov	r1, s18
 8006aa4:	4630      	mov	r0, r6
        colorPressed = col;
 8006aa6:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006aaa:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006aae:	f00a fb92 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006ab2:	ee19 0a90 	vmov	r0, s19
 8006ab6:	22aa      	movs	r2, #170	; 0xaa
 8006ab8:	2121      	movs	r1, #33	; 0x21
 8006aba:	f7fb fec4 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006abe:	aa0a      	add	r2, sp, #40	; 0x28
 8006ac0:	a909      	add	r1, sp, #36	; 0x24
 8006ac2:	ee19 0a90 	vmov	r0, s19
 8006ac6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006aca:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ace:	f00c ff1c 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ad2:	2341      	movs	r3, #65	; 0x41
 8006ad4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ad8:	ee19 0a90 	vmov	r0, s19
 8006adc:	f7fb ff08 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ae0:	ee19 1a90 	vmov	r1, s19
 8006ae4:	4630      	mov	r0, r6
        colorPressed = col;
 8006ae6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006aea:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006aee:	f00a fb72 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006af2:	ee1a 0a10 	vmov	r0, s20
 8006af6:	2264      	movs	r2, #100	; 0x64
 8006af8:	2121      	movs	r1, #33	; 0x21
 8006afa:	f7fb fea4 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006afe:	aa0a      	add	r2, sp, #40	; 0x28
 8006b00:	a909      	add	r1, sp, #36	; 0x24
 8006b02:	ee1a 0a10 	vmov	r0, s20
 8006b06:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b0a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b0e:	f00c fefc 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b12:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006b14:	ee1a 0a10 	vmov	r0, s20
 8006b18:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b1c:	f7fb fee8 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b20:	4630      	mov	r0, r6
        colorPressed = col;
 8006b22:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006b26:	ee1a 1a10 	vmov	r1, s20
 8006b2a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006b2e:	f00a fb52 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b32:	4620      	mov	r0, r4
 8006b34:	b00d      	add	sp, #52	; 0x34
 8006b36:	ecbd 8b06 	vpop	{d8-d10}
 8006b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b3e:	bf00      	nop
 8006b40:	20013918 	.word	0x20013918
 8006b44:	0802cf8a 	.word	0x0802cf8a
 8006b48:	0802d000 	.word	0x0802d000

08006b4c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006b4c:	4770      	bx	lr

08006b4e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b4e:	4770      	bx	lr

08006b50 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b50:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b52:	68c2      	ldr	r2, [r0, #12]
 8006b54:	6844      	ldr	r4, [r0, #4]
 8006b56:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b58:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b5a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b5e:	07d2      	lsls	r2, r2, #31
 8006b60:	bf48      	it	mi
 8006b62:	5962      	ldrmi	r2, [r4, r5]
 8006b64:	689b      	ldr	r3, [r3, #8]
    }
 8006b66:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b68:	bf48      	it	mi
 8006b6a:	58d3      	ldrmi	r3, [r2, r3]
 8006b6c:	4718      	bx	r3

08006b6e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b6e:	6843      	ldr	r3, [r0, #4]
 8006b70:	b12b      	cbz	r3, 8006b7e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b72:	6883      	ldr	r3, [r0, #8]
 8006b74:	b92b      	cbnz	r3, 8006b82 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b76:	68c0      	ldr	r0, [r0, #12]
 8006b78:	f000 0001 	and.w	r0, r0, #1
 8006b7c:	4770      	bx	lr
 8006b7e:	4618      	mov	r0, r3
 8006b80:	4770      	bx	lr
 8006b82:	2001      	movs	r0, #1
    }
 8006b84:	4770      	bx	lr

08006b86 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b86:	b510      	push	{r4, lr}
 8006b88:	2110      	movs	r1, #16
 8006b8a:	4604      	mov	r4, r0
 8006b8c:	f023 fe71 	bl	802a872 <_ZdlPvj>
 8006b90:	4620      	mov	r0, r4
 8006b92:	bd10      	pop	{r4, pc}

08006b94 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006b94:	b510      	push	{r4, lr}
 8006b96:	4b03      	ldr	r3, [pc, #12]	; (8006ba4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006b98:	6003      	str	r3, [r0, #0]
 8006b9a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b9c:	f00e f8b2 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ba0:	4620      	mov	r0, r4
 8006ba2:	bd10      	pop	{r4, pc}
 8006ba4:	0802ec40 	.word	0x0802ec40

08006ba8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006ba8:	b507      	push	{r0, r1, r2, lr}
 8006baa:	4b07      	ldr	r3, [pc, #28]	; (8006bc8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006bac:	6003      	str	r3, [r0, #0]
 8006bae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bb0:	f00e f8a8 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bb4:	9801      	ldr	r0, [sp, #4]
 8006bb6:	f241 015c 	movw	r1, #4188	; 0x105c
 8006bba:	f023 fe5a 	bl	802a872 <_ZdlPvj>
 8006bbe:	9801      	ldr	r0, [sp, #4]
 8006bc0:	b003      	add	sp, #12
 8006bc2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006bc6:	bf00      	nop
 8006bc8:	0802ec40 	.word	0x0802ec40

08006bcc <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006bcc:	3098      	adds	r0, #152	; 0x98
 8006bce:	4288      	cmp	r0, r1
{
 8006bd0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bd2:	d105      	bne.n	8006be0 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006bd4:	f00f fd98 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006bd8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006bdc:	f7fd bd44 	b.w	8004668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006be0:	bd08      	pop	{r3, pc}
	...

08006be4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006be8:	ed2d 8b02 	vpush	{d8}
 8006bec:	4604      	mov	r4, r0
 8006bee:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006bf0:	46a1      	mov	r9, r4
 8006bf2:	2500      	movs	r5, #0
 8006bf4:	f011 fa08 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8006bf8:	4ba5      	ldr	r3, [pc, #660]	; (8006e90 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006bfa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006bfc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006c00:	2226      	movs	r2, #38	; 0x26
 8006c02:	4629      	mov	r1, r5
 8006c04:	4648      	mov	r0, r9
 8006c06:	f024 fe4c 	bl	802b8a2 <memset>
 8006c0a:	4648      	mov	r0, r9
 8006c0c:	f7fb fe3c 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006c10:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006c14:	26ff      	movs	r6, #255	; 0xff
 8006c16:	4b9f      	ldr	r3, [pc, #636]	; (8006e94 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006c18:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c1a:	2226      	movs	r2, #38	; 0x26
 8006c1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c20:	4629      	mov	r1, r5
 8006c22:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c26:	4640      	mov	r0, r8
 8006c28:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c2a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c2e:	f024 fe38 	bl	802b8a2 <memset>
 8006c32:	4640      	mov	r0, r8
 8006c34:	f7fb fe28 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006c38:	4b97      	ldr	r3, [pc, #604]	; (8006e98 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006c3a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c3c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c40:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c44:	a90a      	add	r1, sp, #40	; 0x28
 8006c46:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c4a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006c4c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c50:	f00d f851 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c54:	4658      	mov	r0, fp
 8006c56:	f00d f98f 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c5a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006c5e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006c62:	4618      	mov	r0, r3
 8006c64:	ee08 3a90 	vmov	s17, r3
 8006c68:	f7fb fe20 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8006c6c:	4638      	mov	r0, r7
 8006c6e:	f00b ff0b 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8006c72:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c76:	4618      	mov	r0, r3
 8006c78:	9303      	str	r3, [sp, #12]
 8006c7a:	f7fb fc05 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c7e:	4b87      	ldr	r3, [pc, #540]	; (8006e9c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006c80:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006c84:	3324      	adds	r3, #36	; 0x24
 8006c86:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006c8a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006c8e:	4618      	mov	r0, r3
 8006c90:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006c94:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006c98:	ee08 3a10 	vmov	s16, r3
 8006c9c:	f7fb fe06 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8006ca0:	4650      	mov	r0, sl
 8006ca2:	f7fb fe03 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006ca6:	4a7e      	ldr	r2, [pc, #504]	; (8006ea0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006ca8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006cac:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006cb0:	4a7c      	ldr	r2, [pc, #496]	; (8006ea4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006cb2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006cb6:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006cba:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006cbe:	f00e f817 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006cc2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006cc6:	462a      	mov	r2, r5
 8006cc8:	4648      	mov	r0, r9
 8006cca:	9300      	str	r3, [sp, #0]
 8006ccc:	4629      	mov	r1, r5
 8006cce:	23f0      	movs	r3, #240	; 0xf0
 8006cd0:	f7fb fdc6 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cd4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006cd6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006cda:	66a3      	str	r3, [r4, #104]	; 0x68
 8006cdc:	4649      	mov	r1, r9
 8006cde:	4630      	mov	r0, r6
 8006ce0:	f00a fa79 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006ce4:	462a      	mov	r2, r5
 8006ce6:	4640      	mov	r0, r8
 8006ce8:	4629      	mov	r1, r5
 8006cea:	f7fb fdac 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006cee:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006cf0:	4640      	mov	r0, r8
 8006cf2:	a90a      	add	r1, sp, #40	; 0x28
 8006cf4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cf8:	f00c fffd 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006cfc:	4641      	mov	r1, r8
 8006cfe:	4630      	mov	r0, r6
 8006d00:	f00a fa69 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006d04:	4658      	mov	r0, fp
 8006d06:	f240 1201 	movw	r2, #257	; 0x101
 8006d0a:	2121      	movs	r1, #33	; 0x21
 8006d0c:	f7fb fd9b 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006d10:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d12:	aa0a      	add	r2, sp, #40	; 0x28
 8006d14:	a909      	add	r1, sp, #36	; 0x24
 8006d16:	4658      	mov	r0, fp
 8006d18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d1c:	2302      	movs	r3, #2
 8006d1e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d22:	f00c fdf2 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d26:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006d28:	4658      	mov	r0, fp
 8006d2a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006d2e:	f7fb fddf 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006d32:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006d36:	330c      	adds	r3, #12
        color = col;
 8006d38:	f04f 39ff 	mov.w	r9, #4294967295
 8006d3c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006d40:	4659      	mov	r1, fp
 8006d42:	4630      	mov	r0, r6
        colorPressed = col;
 8006d44:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006d48:	f00a fa45 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d4c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006d50:	223c      	movs	r2, #60	; 0x3c
 8006d52:	ee18 0a90 	vmov	r0, s17
 8006d56:	2117      	movs	r1, #23
 8006d58:	f7fb fd75 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006d5c:	ee18 1a90 	vmov	r1, s17
 8006d60:	4640      	mov	r0, r8
        color = newColor;
 8006d62:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006d66:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d6a:	f00c f94f 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d6e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d72:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006d76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d7a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006ea8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006d7e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d82:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006d84:	ee18 0a90 	vmov	r0, s17
 8006d88:	a90a      	add	r1, sp, #40	; 0x28
 8006d8a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d8e:	f00c fbd7 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d92:	ee18 1a90 	vmov	r1, s17
 8006d96:	4630      	mov	r0, r6
 8006d98:	f00a fa1d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d9c:	230a      	movs	r3, #10
 8006d9e:	9300      	str	r3, [sp, #0]
 8006da0:	2232      	movs	r2, #50	; 0x32
 8006da2:	23f0      	movs	r3, #240	; 0xf0
 8006da4:	4629      	mov	r1, r5
 8006da6:	4638      	mov	r0, r7
 8006da8:	f7fb fd5a 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006dac:	9b03      	ldr	r3, [sp, #12]
 8006dae:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006db2:	22a0      	movs	r2, #160	; 0xa0
 8006db4:	4611      	mov	r1, r2
 8006db6:	4638      	mov	r0, r7
 8006db8:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006dbc:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006dc0:	f00b ff78 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dc4:	22a0      	movs	r2, #160	; 0xa0
 8006dc6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dca:	4638      	mov	r0, r7
 8006dcc:	f00b ff7d 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006dd0:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006dd4:	2b20      	cmp	r3, #32
 8006dd6:	d005      	beq.n	8006de4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006dd8:	2320      	movs	r3, #32
 8006dda:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006dde:	4638      	mov	r0, r7
 8006de0:	f00b fe72 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006de4:	4638      	mov	r0, r7
 8006de6:	2101      	movs	r1, #1
 8006de8:	f00b ff7a 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dec:	4639      	mov	r1, r7
 8006dee:	4630      	mov	r0, r6
 8006df0:	f00a f9f1 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006df4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006df8:	ee18 0a10 	vmov	r0, s16
 8006dfc:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006dfe:	2500      	movs	r5, #0
 8006e00:	2145      	movs	r1, #69	; 0x45
 8006e02:	f7fb fd20 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e06:	ee18 1a10 	vmov	r1, s16
 8006e0a:	4640      	mov	r0, r8
        color = newColor;
 8006e0c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006e10:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006e14:	f00c f8fa 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e18:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e1c:	ee18 3a10 	vmov	r3, s16
 8006e20:	333c      	adds	r3, #60	; 0x3c
 8006e22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e26:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006e28:	ee18 0a10 	vmov	r0, s16
 8006e2c:	a90a      	add	r1, sp, #40	; 0x28
 8006e2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e32:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e36:	f00c fb83 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e3a:	ee18 1a10 	vmov	r1, s16
 8006e3e:	4630      	mov	r0, r6
 8006e40:	f00a f9c9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e44:	220c      	movs	r2, #12
 8006e46:	4650      	mov	r0, sl
 8006e48:	2136      	movs	r1, #54	; 0x36
 8006e4a:	f7fb fcfc 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8006e4e:	4651      	mov	r1, sl
 8006e50:	4640      	mov	r0, r8
        color = newColor;
 8006e52:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006e56:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006e5a:	f00c f8d7 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e5e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e62:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006e66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e6a:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006e6c:	a90a      	add	r1, sp, #40	; 0x28
 8006e6e:	4650      	mov	r0, sl
 8006e70:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e74:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e78:	f00c fb62 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e7c:	4630      	mov	r0, r6
 8006e7e:	4651      	mov	r1, sl
 8006e80:	f00a f9a9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e84:	4620      	mov	r0, r4
 8006e86:	b00d      	add	sp, #52	; 0x34
 8006e88:	ecbd 8b02 	vpop	{d8}
 8006e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e90:	0802ec40 	.word	0x0802ec40
 8006e94:	0802fd84 	.word	0x0802fd84
 8006e98:	0802ff4c 	.word	0x0802ff4c
 8006e9c:	0802fab8 	.word	0x0802fab8
 8006ea0:	0802ec28 	.word	0x0802ec28
 8006ea4:	08006bcd 	.word	0x08006bcd
 8006ea8:	0802d000 	.word	0x0802d000

08006eac <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006eac:	4770      	bx	lr

08006eae <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006eae:	4770      	bx	lr

08006eb0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006eb0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006eb2:	68c2      	ldr	r2, [r0, #12]
 8006eb4:	6844      	ldr	r4, [r0, #4]
 8006eb6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006eb8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006eba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006ebe:	07d2      	lsls	r2, r2, #31
 8006ec0:	bf48      	it	mi
 8006ec2:	5962      	ldrmi	r2, [r4, r5]
 8006ec4:	689b      	ldr	r3, [r3, #8]
    }
 8006ec6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ec8:	bf48      	it	mi
 8006eca:	58d3      	ldrmi	r3, [r2, r3]
 8006ecc:	4718      	bx	r3

08006ece <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006ece:	6843      	ldr	r3, [r0, #4]
 8006ed0:	b12b      	cbz	r3, 8006ede <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006ed2:	6883      	ldr	r3, [r0, #8]
 8006ed4:	b92b      	cbnz	r3, 8006ee2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006ed6:	68c0      	ldr	r0, [r0, #12]
 8006ed8:	f000 0001 	and.w	r0, r0, #1
 8006edc:	4770      	bx	lr
 8006ede:	4618      	mov	r0, r3
 8006ee0:	4770      	bx	lr
 8006ee2:	2001      	movs	r0, #1
    }
 8006ee4:	4770      	bx	lr

08006ee6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ee6:	b510      	push	{r4, lr}
 8006ee8:	2110      	movs	r1, #16
 8006eea:	4604      	mov	r4, r0
 8006eec:	f023 fcc1 	bl	802a872 <_ZdlPvj>
 8006ef0:	4620      	mov	r0, r4
 8006ef2:	bd10      	pop	{r4, pc}

08006ef4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006ef4:	b510      	push	{r4, lr}
 8006ef6:	4b03      	ldr	r3, [pc, #12]	; (8006f04 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006ef8:	6003      	str	r3, [r0, #0]
 8006efa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006efc:	f00d ff02 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f00:	4620      	mov	r0, r4
 8006f02:	bd10      	pop	{r4, pc}
 8006f04:	0802ec8c 	.word	0x0802ec8c

08006f08 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006f08:	b507      	push	{r0, r1, r2, lr}
 8006f0a:	4b07      	ldr	r3, [pc, #28]	; (8006f28 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006f0c:	6003      	str	r3, [r0, #0]
 8006f0e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f10:	f00d fef8 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f14:	9801      	ldr	r0, [sp, #4]
 8006f16:	f241 015c 	movw	r1, #4188	; 0x105c
 8006f1a:	f023 fcaa 	bl	802a872 <_ZdlPvj>
 8006f1e:	9801      	ldr	r0, [sp, #4]
 8006f20:	b003      	add	sp, #12
 8006f22:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f26:	bf00      	nop
 8006f28:	0802ec8c 	.word	0x0802ec8c

08006f2c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006f2c:	3098      	adds	r0, #152	; 0x98
 8006f2e:	4288      	cmp	r0, r1
{
 8006f30:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f32:	d105      	bne.n	8006f40 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f34:	f00f fbe8 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006f38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006f3c:	f7fd bb94 	b.w	8004668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006f40:	bd08      	pop	{r3, pc}
	...

08006f44 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f48:	ed2d 8b02 	vpush	{d8}
 8006f4c:	4604      	mov	r4, r0
 8006f4e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006f50:	46a1      	mov	r9, r4
 8006f52:	2500      	movs	r5, #0
 8006f54:	f011 f858 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8006f58:	4ba5      	ldr	r3, [pc, #660]	; (80071f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006f5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f5c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f60:	2226      	movs	r2, #38	; 0x26
 8006f62:	4629      	mov	r1, r5
 8006f64:	4648      	mov	r0, r9
 8006f66:	f024 fc9c 	bl	802b8a2 <memset>
 8006f6a:	4648      	mov	r0, r9
 8006f6c:	f7fb fc8c 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006f70:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006f74:	26ff      	movs	r6, #255	; 0xff
 8006f76:	4b9f      	ldr	r3, [pc, #636]	; (80071f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006f78:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f7a:	2226      	movs	r2, #38	; 0x26
 8006f7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f80:	4629      	mov	r1, r5
 8006f82:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f86:	4640      	mov	r0, r8
 8006f88:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f8e:	f024 fc88 	bl	802b8a2 <memset>
 8006f92:	4640      	mov	r0, r8
 8006f94:	f7fb fc78 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8006f98:	4b97      	ldr	r3, [pc, #604]	; (80071f8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006f9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f9c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006fa0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006fa4:	a90a      	add	r1, sp, #40	; 0x28
 8006fa6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006faa:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006fac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006fb0:	f00c fea1 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fb4:	4658      	mov	r0, fp
 8006fb6:	f00c ffdf 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006fba:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006fbe:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006fc2:	4618      	mov	r0, r3
 8006fc4:	ee08 3a90 	vmov	s17, r3
 8006fc8:	f7fb fc70 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8006fcc:	4638      	mov	r0, r7
 8006fce:	f00b fd5b 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8006fd2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fd6:	4618      	mov	r0, r3
 8006fd8:	9303      	str	r3, [sp, #12]
 8006fda:	f7fb fa55 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006fde:	4b87      	ldr	r3, [pc, #540]	; (80071fc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006fe0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006fe4:	3324      	adds	r3, #36	; 0x24
 8006fe6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006fea:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006fee:	4618      	mov	r0, r3
 8006ff0:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006ff4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006ff8:	ee08 3a10 	vmov	s16, r3
 8006ffc:	f7fb fc56 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007000:	4650      	mov	r0, sl
 8007002:	f7fb fc53 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007006:	4a7e      	ldr	r2, [pc, #504]	; (8007200 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8007008:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800700c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007010:	4a7c      	ldr	r2, [pc, #496]	; (8007204 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007012:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007016:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 800701a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800701e:	f00d fe67 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007022:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007026:	462a      	mov	r2, r5
 8007028:	4648      	mov	r0, r9
 800702a:	9300      	str	r3, [sp, #0]
 800702c:	4629      	mov	r1, r5
 800702e:	23f0      	movs	r3, #240	; 0xf0
 8007030:	f7fb fc16 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007034:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007036:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800703a:	66a3      	str	r3, [r4, #104]	; 0x68
 800703c:	4649      	mov	r1, r9
 800703e:	4630      	mov	r0, r6
 8007040:	f00a f8c9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007044:	462a      	mov	r2, r5
 8007046:	4640      	mov	r0, r8
 8007048:	4629      	mov	r1, r5
 800704a:	f7fb fbfc 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800704e:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007050:	4640      	mov	r0, r8
 8007052:	a90a      	add	r1, sp, #40	; 0x28
 8007054:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007058:	f00c fe4d 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800705c:	4641      	mov	r1, r8
 800705e:	4630      	mov	r0, r6
 8007060:	f00a f8b9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007064:	4658      	mov	r0, fp
 8007066:	f240 1201 	movw	r2, #257	; 0x101
 800706a:	2121      	movs	r1, #33	; 0x21
 800706c:	f7fb fbeb 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8007070:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007072:	aa0a      	add	r2, sp, #40	; 0x28
 8007074:	a909      	add	r1, sp, #36	; 0x24
 8007076:	4658      	mov	r0, fp
 8007078:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800707c:	2302      	movs	r3, #2
 800707e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007082:	f00c fc42 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007086:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8007088:	4658      	mov	r0, fp
 800708a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800708e:	f7fb fc2f 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007092:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007096:	330c      	adds	r3, #12
        color = col;
 8007098:	f04f 39ff 	mov.w	r9, #4294967295
 800709c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80070a0:	4659      	mov	r1, fp
 80070a2:	4630      	mov	r0, r6
        colorPressed = col;
 80070a4:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80070a8:	f00a f895 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80070ac:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80070b0:	223c      	movs	r2, #60	; 0x3c
 80070b2:	ee18 0a90 	vmov	r0, s17
 80070b6:	2117      	movs	r1, #23
 80070b8:	f7fb fbc5 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80070bc:	ee18 1a90 	vmov	r1, s17
 80070c0:	4640      	mov	r0, r8
        color = newColor;
 80070c2:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80070c6:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80070ca:	f00b ff9f 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070ce:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070d2:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80070d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80070da:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007208 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80070de:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070e2:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80070e4:	ee18 0a90 	vmov	r0, s17
 80070e8:	a90a      	add	r1, sp, #40	; 0x28
 80070ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070ee:	f00c fa27 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070f2:	ee18 1a90 	vmov	r1, s17
 80070f6:	4630      	mov	r0, r6
 80070f8:	f00a f86d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80070fc:	230a      	movs	r3, #10
 80070fe:	9300      	str	r3, [sp, #0]
 8007100:	2232      	movs	r2, #50	; 0x32
 8007102:	23f0      	movs	r3, #240	; 0xf0
 8007104:	4629      	mov	r1, r5
 8007106:	4638      	mov	r0, r7
 8007108:	f7fb fbaa 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 800710c:	9b03      	ldr	r3, [sp, #12]
 800710e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007112:	22a0      	movs	r2, #160	; 0xa0
 8007114:	4611      	mov	r1, r2
 8007116:	4638      	mov	r0, r7
 8007118:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800711c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007120:	f00b fdc8 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007124:	22a0      	movs	r2, #160	; 0xa0
 8007126:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800712a:	4638      	mov	r0, r7
 800712c:	f00b fdcd 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007130:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007134:	2b20      	cmp	r3, #32
 8007136:	d005      	beq.n	8007144 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007138:	2320      	movs	r3, #32
 800713a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800713e:	4638      	mov	r0, r7
 8007140:	f00b fcc2 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007144:	4638      	mov	r0, r7
 8007146:	2101      	movs	r1, #1
 8007148:	f00b fdca 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800714c:	4639      	mov	r1, r7
 800714e:	4630      	mov	r0, r6
 8007150:	f00a f841 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007154:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007158:	ee18 0a10 	vmov	r0, s16
 800715c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800715e:	2500      	movs	r5, #0
 8007160:	2145      	movs	r1, #69	; 0x45
 8007162:	f7fb fb70 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007166:	ee18 1a10 	vmov	r1, s16
 800716a:	4640      	mov	r0, r8
        color = newColor;
 800716c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007170:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007174:	f00b ff4a 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007178:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800717c:	ee18 3a10 	vmov	r3, s16
 8007180:	333c      	adds	r3, #60	; 0x3c
 8007182:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007186:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007188:	ee18 0a10 	vmov	r0, s16
 800718c:	a90a      	add	r1, sp, #40	; 0x28
 800718e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007192:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007196:	f00c f9d3 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800719a:	ee18 1a10 	vmov	r1, s16
 800719e:	4630      	mov	r0, r6
 80071a0:	f00a f819 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071a4:	220c      	movs	r2, #12
 80071a6:	4650      	mov	r0, sl
 80071a8:	2136      	movs	r1, #54	; 0x36
 80071aa:	f7fb fb4c 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80071ae:	4651      	mov	r1, sl
 80071b0:	4640      	mov	r0, r8
        color = newColor;
 80071b2:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80071b6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80071ba:	f00b ff27 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071be:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071c2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80071c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071ca:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80071cc:	a90a      	add	r1, sp, #40	; 0x28
 80071ce:	4650      	mov	r0, sl
 80071d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071d4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071d8:	f00c f9b2 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071dc:	4630      	mov	r0, r6
 80071de:	4651      	mov	r1, sl
 80071e0:	f009 fff9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071e4:	4620      	mov	r0, r4
 80071e6:	b00d      	add	sp, #52	; 0x34
 80071e8:	ecbd 8b02 	vpop	{d8}
 80071ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071f0:	0802ec8c 	.word	0x0802ec8c
 80071f4:	0802fd84 	.word	0x0802fd84
 80071f8:	0802ff4c 	.word	0x0802ff4c
 80071fc:	0802fab8 	.word	0x0802fab8
 8007200:	0802ec74 	.word	0x0802ec74
 8007204:	08006f2d 	.word	0x08006f2d
 8007208:	0802d000 	.word	0x0802d000

0800720c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 800720c:	4770      	bx	lr

0800720e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800720e:	4770      	bx	lr

08007210 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007210:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007212:	68c2      	ldr	r2, [r0, #12]
 8007214:	6844      	ldr	r4, [r0, #4]
 8007216:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007218:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800721a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800721e:	07d2      	lsls	r2, r2, #31
 8007220:	bf48      	it	mi
 8007222:	5962      	ldrmi	r2, [r4, r5]
 8007224:	689b      	ldr	r3, [r3, #8]
    }
 8007226:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007228:	bf48      	it	mi
 800722a:	58d3      	ldrmi	r3, [r2, r3]
 800722c:	4718      	bx	r3

0800722e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800722e:	6843      	ldr	r3, [r0, #4]
 8007230:	b12b      	cbz	r3, 800723e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007232:	6883      	ldr	r3, [r0, #8]
 8007234:	b92b      	cbnz	r3, 8007242 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007236:	68c0      	ldr	r0, [r0, #12]
 8007238:	f000 0001 	and.w	r0, r0, #1
 800723c:	4770      	bx	lr
 800723e:	4618      	mov	r0, r3
 8007240:	4770      	bx	lr
 8007242:	2001      	movs	r0, #1
    }
 8007244:	4770      	bx	lr

08007246 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007246:	b510      	push	{r4, lr}
 8007248:	2110      	movs	r1, #16
 800724a:	4604      	mov	r4, r0
 800724c:	f023 fb11 	bl	802a872 <_ZdlPvj>
 8007250:	4620      	mov	r0, r4
 8007252:	bd10      	pop	{r4, pc}

08007254 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007254:	b510      	push	{r4, lr}
 8007256:	4b03      	ldr	r3, [pc, #12]	; (8007264 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007258:	6003      	str	r3, [r0, #0]
 800725a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800725c:	f00d fd52 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007260:	4620      	mov	r0, r4
 8007262:	bd10      	pop	{r4, pc}
 8007264:	0802ecd8 	.word	0x0802ecd8

08007268 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007268:	b507      	push	{r0, r1, r2, lr}
 800726a:	4b07      	ldr	r3, [pc, #28]	; (8007288 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 800726c:	6003      	str	r3, [r0, #0]
 800726e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007270:	f00d fd48 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007274:	9801      	ldr	r0, [sp, #4]
 8007276:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800727a:	f023 fafa 	bl	802a872 <_ZdlPvj>
 800727e:	9801      	ldr	r0, [sp, #4]
 8007280:	b003      	add	sp, #12
 8007282:	f85d fb04 	ldr.w	pc, [sp], #4
 8007286:	bf00      	nop
 8007288:	0802ecd8 	.word	0x0802ecd8

0800728c <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800728c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800728e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8007292:	4299      	cmp	r1, r3
{
 8007294:	4604      	mov	r4, r0
 8007296:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007298:	d103      	bne.n	80072a2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800729a:	f00f fa35 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800729e:	f7fd f993 	bl	80045c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80072a2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80072a6:	429d      	cmp	r5, r3
 80072a8:	d103      	bne.n	80072b2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80072aa:	f00f fa2d 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80072ae:	f7fd f9ab 	bl	8004608 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80072b2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80072b6:	42a5      	cmp	r5, r4
 80072b8:	d105      	bne.n	80072c6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80072ba:	f00f fa25 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80072be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80072c2:	f7fd b9b1 	b.w	8004628 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80072c6:	bd38      	pop	{r3, r4, r5, pc}

080072c8 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80072c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072cc:	ed2d 8b06 	vpush	{d8-d10}
 80072d0:	4604      	mov	r4, r0
 80072d2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80072d4:	46a3      	mov	fp, r4
 80072d6:	2500      	movs	r5, #0
 80072d8:	f010 fe96 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 80072dc:	4b66      	ldr	r3, [pc, #408]	; (8007478 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80072de:	63e5      	str	r5, [r4, #60]	; 0x3c
 80072e0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80072e4:	2226      	movs	r2, #38	; 0x26
 80072e6:	4629      	mov	r1, r5
 80072e8:	4658      	mov	r0, fp
 80072ea:	f024 fada 	bl	802b8a2 <memset>
 80072ee:	4658      	mov	r0, fp
 80072f0:	f7fb faca 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 80072f4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80072f8:	26ff      	movs	r6, #255	; 0xff
 80072fa:	4b60      	ldr	r3, [pc, #384]	; (800747c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80072fc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80072fe:	2226      	movs	r2, #38	; 0x26
 8007300:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007304:	4629      	mov	r1, r5
 8007306:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800730a:	4650      	mov	r0, sl
 800730c:	66a5      	str	r5, [r4, #104]	; 0x68
 800730e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007312:	f024 fac6 	bl	802b8a2 <memset>
 8007316:	4650      	mov	r0, sl
 8007318:	f7fb fab6 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 800731c:	4b58      	ldr	r3, [pc, #352]	; (8007480 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800731e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007320:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007324:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007328:	a90a      	add	r1, sp, #40	; 0x28
 800732a:	4650      	mov	r0, sl
 800732c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007330:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007334:	f00c fcdf 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007338:	4648      	mov	r0, r9
 800733a:	f7fb fab7 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800733e:	4b51      	ldr	r3, [pc, #324]	; (8007484 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007340:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007344:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007348:	4618      	mov	r0, r3
 800734a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800734e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8007352:	ee08 3a90 	vmov	s17, r3
 8007356:	f7fb faa9 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800735a:	4638      	mov	r0, r7
 800735c:	f00b fb94 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8007360:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007364:	4618      	mov	r0, r3
 8007366:	9303      	str	r3, [sp, #12]
 8007368:	f7fb f88e 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800736c:	4b46      	ldr	r3, [pc, #280]	; (8007488 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 800736e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8007372:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007376:	3324      	adds	r3, #36	; 0x24
 8007378:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 800737c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007380:	4640      	mov	r0, r8
 8007382:	f7fb fa93 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007386:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800738a:	4618      	mov	r0, r3
 800738c:	ee08 3a10 	vmov	s16, r3
 8007390:	f7fb fa8c 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007394:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007398:	4618      	mov	r0, r3
 800739a:	ee09 3a10 	vmov	s18, r3
 800739e:	f00c fdeb 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80073a2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80073a6:	4618      	mov	r0, r3
 80073a8:	ee09 3a90 	vmov	s19, r3
 80073ac:	f00c fde4 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80073b0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80073b4:	4618      	mov	r0, r3
 80073b6:	ee0a 3a10 	vmov	s20, r3
 80073ba:	f00c fddd 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80073be:	4a33      	ldr	r2, [pc, #204]	; (800748c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80073c0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073c4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80073c8:	4a31      	ldr	r2, [pc, #196]	; (8007490 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073ca:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073ce:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80073d2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80073d6:	f00d fc8b 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073da:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073de:	462a      	mov	r2, r5
 80073e0:	4658      	mov	r0, fp
 80073e2:	9300      	str	r3, [sp, #0]
 80073e4:	4629      	mov	r1, r5
 80073e6:	23f0      	movs	r3, #240	; 0xf0
 80073e8:	f7fb fa3a 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073ec:	1d26      	adds	r6, r4, #4
        color = newColor;
 80073ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80073f2:	66a3      	str	r3, [r4, #104]	; 0x68
 80073f4:	4659      	mov	r1, fp
 80073f6:	4630      	mov	r0, r6
 80073f8:	f009 feed 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80073fc:	462a      	mov	r2, r5
 80073fe:	4650      	mov	r0, sl
 8007400:	4629      	mov	r1, r5
 8007402:	f7fb fa20 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8007406:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007408:	4650      	mov	r0, sl
 800740a:	a90a      	add	r1, sp, #40	; 0x28
 800740c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007410:	f00c fc71 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007414:	4651      	mov	r1, sl
 8007416:	4630      	mov	r0, r6
 8007418:	f009 fedd 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800741c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007420:	2156      	movs	r1, #86	; 0x56
 8007422:	4648      	mov	r0, r9
 8007424:	f7fb fa0f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007428:	f04f 33ff 	mov.w	r3, #4294967295
 800742c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007430:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007434:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007438:	f10d 0b10 	add.w	fp, sp, #16
 800743c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007440:	4649      	mov	r1, r9
 8007442:	4658      	mov	r0, fp
 8007444:	4798      	blx	r3
 8007446:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800744a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800744e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007452:	4b10      	ldr	r3, [pc, #64]	; (8007494 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007454:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007456:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800745a:	b92b      	cbnz	r3, 8007468 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 800745c:	4b0e      	ldr	r3, [pc, #56]	; (8007498 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800745e:	4a0f      	ldr	r2, [pc, #60]	; (800749c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007460:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007462:	480f      	ldr	r0, [pc, #60]	; (80074a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007464:	f024 f818 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007468:	4b0e      	ldr	r3, [pc, #56]	; (80074a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800746a:	881b      	ldrh	r3, [r3, #0]
 800746c:	2b26      	cmp	r3, #38	; 0x26
 800746e:	d81d      	bhi.n	80074ac <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007470:	4b0d      	ldr	r3, [pc, #52]	; (80074a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007472:	4a0a      	ldr	r2, [pc, #40]	; (800749c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007474:	2161      	movs	r1, #97	; 0x61
 8007476:	e7f4      	b.n	8007462 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007478:	0802ecd8 	.word	0x0802ecd8
 800747c:	0802fd84 	.word	0x0802fd84
 8007480:	0802ff4c 	.word	0x0802ff4c
 8007484:	0802d010 	.word	0x0802d010
 8007488:	0802fab8 	.word	0x0802fab8
 800748c:	0802ecc0 	.word	0x0802ecc0
 8007490:	0800728d 	.word	0x0800728d
 8007494:	2001390c 	.word	0x2001390c
 8007498:	0802ce50 	.word	0x0802ce50
 800749c:	0802cf52 	.word	0x0802cf52
 80074a0:	0802cecd 	.word	0x0802cecd
 80074a4:	20013910 	.word	0x20013910
 80074a8:	0802cf14 	.word	0x0802cf14
        return texts->getText(typedTextId);
 80074ac:	4b95      	ldr	r3, [pc, #596]	; (8007704 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80074ae:	2126      	movs	r1, #38	; 0x26
 80074b0:	6818      	ldr	r0, [r3, #0]
 80074b2:	f001 fabd 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80074b6:	4a94      	ldr	r2, [pc, #592]	; (8007708 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80074b8:	4603      	mov	r3, r0
 80074ba:	2104      	movs	r1, #4
 80074bc:	4650      	mov	r0, sl
 80074be:	f012 fad1 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80074c2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80074c6:	4648      	mov	r0, r9
 80074c8:	f00c f81a 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074cc:	f8df a23c 	ldr.w	sl, [pc, #572]	; 800770c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80074d0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80074d4:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80074d6:	a90a      	add	r1, sp, #40	; 0x28
 80074d8:	4648      	mov	r0, r9
 80074da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074de:	f00c f82f 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074e2:	4649      	mov	r1, r9
 80074e4:	4630      	mov	r0, r6
 80074e6:	f009 fe76 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80074ea:	223c      	movs	r2, #60	; 0x3c
 80074ec:	ee18 0a90 	vmov	r0, s17
 80074f0:	2129      	movs	r1, #41	; 0x29
 80074f2:	f7fb f9a8 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80074f6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80074fa:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80074fe:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007502:	4658      	mov	r0, fp
        linespace = space;
 8007504:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007508:	f00b fd80 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800750c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007510:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007514:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007518:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 800751a:	ee18 0a90 	vmov	r0, s17
 800751e:	a90a      	add	r1, sp, #40	; 0x28
 8007520:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007524:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007528:	f00c f80a 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800752c:	ee18 1a90 	vmov	r1, s17
 8007530:	4630      	mov	r0, r6
 8007532:	f009 fe50 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007536:	230a      	movs	r3, #10
 8007538:	9300      	str	r3, [sp, #0]
 800753a:	2232      	movs	r2, #50	; 0x32
 800753c:	23f0      	movs	r3, #240	; 0xf0
 800753e:	4629      	mov	r1, r5
 8007540:	4638      	mov	r0, r7
 8007542:	f7fb f98d 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007546:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800754a:	22a0      	movs	r2, #160	; 0xa0
 800754c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007550:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007554:	9b03      	ldr	r3, [sp, #12]
 8007556:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800755a:	4611      	mov	r1, r2
 800755c:	4638      	mov	r0, r7
 800755e:	f00b fba9 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007562:	22a0      	movs	r2, #160	; 0xa0
 8007564:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007568:	4638      	mov	r0, r7
 800756a:	f00b fbae 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800756e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007572:	2b20      	cmp	r3, #32
 8007574:	d005      	beq.n	8007582 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8007576:	2320      	movs	r3, #32
 8007578:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 800757c:	4638      	mov	r0, r7
 800757e:	f00b faa3 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007582:	4638      	mov	r0, r7
 8007584:	2101      	movs	r1, #1
 8007586:	f00b fbab 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800758a:	4639      	mov	r1, r7
 800758c:	4630      	mov	r0, r6
 800758e:	f009 fe22 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007592:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007596:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007598:	2223      	movs	r2, #35	; 0x23
 800759a:	4640      	mov	r0, r8
        linespace = space;
 800759c:	f04f 0a00 	mov.w	sl, #0
 80075a0:	2145      	movs	r1, #69	; 0x45
 80075a2:	f7fb f950 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80075a6:	4641      	mov	r1, r8
 80075a8:	4638      	mov	r0, r7
        color = newColor;
 80075aa:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80075ae:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80075b2:	f00b fd2b 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075b6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80075ba:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075c2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800770c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80075c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075ca:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 80075cc:	a90a      	add	r1, sp, #40	; 0x28
 80075ce:	4640      	mov	r0, r8
 80075d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075d4:	f00b ffb4 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075d8:	4641      	mov	r1, r8
 80075da:	4630      	mov	r0, r6
 80075dc:	f009 fdfb 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075e0:	ee18 0a10 	vmov	r0, s16
 80075e4:	220c      	movs	r2, #12
 80075e6:	2136      	movs	r1, #54	; 0x36
 80075e8:	f7fb f92d 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80075ec:	ee18 1a10 	vmov	r1, s16
 80075f0:	4638      	mov	r0, r7
        color = newColor;
 80075f2:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80075f6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80075fa:	f00b fd07 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075fe:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007602:	ee18 3a10 	vmov	r3, s16
 8007606:	333c      	adds	r3, #60	; 0x3c
 8007608:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800760c:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 800760e:	ee18 0a10 	vmov	r0, s16
 8007612:	a90a      	add	r1, sp, #40	; 0x28
 8007614:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007618:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800761c:	f00b ff90 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007620:	ee18 1a10 	vmov	r1, s16
 8007624:	4630      	mov	r0, r6
 8007626:	f009 fdd6 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800762a:	ee19 0a10 	vmov	r0, s18
 800762e:	22f0      	movs	r2, #240	; 0xf0
 8007630:	2121      	movs	r1, #33	; 0x21
 8007632:	f7fb f908 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8007636:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800763a:	aa0a      	add	r2, sp, #40	; 0x28
 800763c:	f04f 0802 	mov.w	r8, #2
 8007640:	a909      	add	r1, sp, #36	; 0x24
 8007642:	ee19 0a10 	vmov	r0, s18
 8007646:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800764a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800764e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007652:	f00c f95a 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007656:	2347      	movs	r3, #71	; 0x47
 8007658:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800765c:	3710      	adds	r7, #16
        updateTextPosition();
 800765e:	ee19 0a10 	vmov	r0, s18
 8007662:	f7fb f945 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007666:	ee19 1a10 	vmov	r1, s18
 800766a:	4630      	mov	r0, r6
        colorPressed = col;
 800766c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007670:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007674:	f009 fdaf 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007678:	ee19 0a90 	vmov	r0, s19
 800767c:	22aa      	movs	r2, #170	; 0xaa
 800767e:	2121      	movs	r1, #33	; 0x21
 8007680:	f7fb f8e1 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007684:	aa0a      	add	r2, sp, #40	; 0x28
 8007686:	a909      	add	r1, sp, #36	; 0x24
 8007688:	ee19 0a90 	vmov	r0, s19
 800768c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007690:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007694:	f00c f939 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007698:	2346      	movs	r3, #70	; 0x46
 800769a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800769e:	ee19 0a90 	vmov	r0, s19
 80076a2:	f7fb f925 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076a6:	ee19 1a90 	vmov	r1, s19
 80076aa:	4630      	mov	r0, r6
        colorPressed = col;
 80076ac:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80076b0:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80076b4:	f009 fd8f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80076b8:	ee1a 0a10 	vmov	r0, s20
 80076bc:	2264      	movs	r2, #100	; 0x64
 80076be:	2121      	movs	r1, #33	; 0x21
 80076c0:	f7fb f8c1 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076c4:	aa0a      	add	r2, sp, #40	; 0x28
 80076c6:	a909      	add	r1, sp, #36	; 0x24
 80076c8:	ee1a 0a10 	vmov	r0, s20
 80076cc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80076d0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076d4:	f00c f919 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076d8:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80076da:	ee1a 0a10 	vmov	r0, s20
 80076de:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80076e2:	f7fb f905 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076e6:	4630      	mov	r0, r6
        colorPressed = col;
 80076e8:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80076ec:	ee1a 1a10 	vmov	r1, s20
 80076f0:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80076f4:	f009 fd6f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076f8:	4620      	mov	r0, r4
 80076fa:	b00d      	add	sp, #52	; 0x34
 80076fc:	ecbd 8b06 	vpop	{d8-d10}
 8007700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007704:	20013918 	.word	0x20013918
 8007708:	0802cf8a 	.word	0x0802cf8a
 800770c:	0802d000 	.word	0x0802d000

08007710 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007710:	4770      	bx	lr

08007712 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007712:	4770      	bx	lr

08007714 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007714:	4770      	bx	lr

08007716 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007716:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007718:	68c2      	ldr	r2, [r0, #12]
 800771a:	6844      	ldr	r4, [r0, #4]
 800771c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800771e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007720:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007724:	07d2      	lsls	r2, r2, #31
 8007726:	bf48      	it	mi
 8007728:	5962      	ldrmi	r2, [r4, r5]
 800772a:	689b      	ldr	r3, [r3, #8]
    }
 800772c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800772e:	bf48      	it	mi
 8007730:	58d3      	ldrmi	r3, [r2, r3]
 8007732:	4718      	bx	r3

08007734 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007734:	6843      	ldr	r3, [r0, #4]
 8007736:	b12b      	cbz	r3, 8007744 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007738:	6883      	ldr	r3, [r0, #8]
 800773a:	b92b      	cbnz	r3, 8007748 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800773c:	68c0      	ldr	r0, [r0, #12]
 800773e:	f000 0001 	and.w	r0, r0, #1
 8007742:	4770      	bx	lr
 8007744:	4618      	mov	r0, r3
 8007746:	4770      	bx	lr
 8007748:	2001      	movs	r0, #1
    }
 800774a:	4770      	bx	lr

0800774c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800774c:	b510      	push	{r4, lr}
 800774e:	2110      	movs	r1, #16
 8007750:	4604      	mov	r4, r0
 8007752:	f023 f88e 	bl	802a872 <_ZdlPvj>
 8007756:	4620      	mov	r0, r4
 8007758:	bd10      	pop	{r4, pc}
	...

0800775c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800775c:	b510      	push	{r4, lr}
 800775e:	4b03      	ldr	r3, [pc, #12]	; (800776c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007760:	6003      	str	r3, [r0, #0]
 8007762:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007764:	f00d face 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007768:	4620      	mov	r0, r4
 800776a:	bd10      	pop	{r4, pc}
 800776c:	0802ed24 	.word	0x0802ed24

08007770 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007770:	b507      	push	{r0, r1, r2, lr}
 8007772:	4b07      	ldr	r3, [pc, #28]	; (8007790 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007774:	6003      	str	r3, [r0, #0]
 8007776:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007778:	f00d fac4 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800777c:	9801      	ldr	r0, [sp, #4]
 800777e:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007782:	f023 f876 	bl	802a872 <_ZdlPvj>
 8007786:	9801      	ldr	r0, [sp, #4]
 8007788:	b003      	add	sp, #12
 800778a:	f85d fb04 	ldr.w	pc, [sp], #4
 800778e:	bf00      	nop
 8007790:	0802ed24 	.word	0x0802ed24

08007794 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007794:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007796:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 800779a:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 800779e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80077a0:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80077a2:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80077a6:	d105      	bne.n	80077b4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 80077a8:	6803      	ldr	r3, [r0, #0]
 80077aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077ac:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80077ae:	2300      	movs	r3, #0
 80077b0:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 80077b4:	bd10      	pop	{r4, pc}

080077b6 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80077b6:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 80077ba:	4288      	cmp	r0, r1
{
 80077bc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80077be:	d105      	bne.n	80077cc <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077c0:	f00e ffa2 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
}
 80077c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80077c8:	f7fc bf0e 	b.w	80045e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80077cc:	bd08      	pop	{r3, pc}
	...

080077d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80077d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077d4:	ed2d 8b0a 	vpush	{d8-d12}
 80077d8:	4604      	mov	r4, r0
 80077da:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80077dc:	46a3      	mov	fp, r4
 80077de:	2500      	movs	r5, #0
 80077e0:	f010 fc12 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 80077e4:	4bac      	ldr	r3, [pc, #688]	; (8007a98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 80077e6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077e8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80077ec:	2226      	movs	r2, #38	; 0x26
 80077ee:	4629      	mov	r1, r5
 80077f0:	4658      	mov	r0, fp
 80077f2:	f024 f856 	bl	802b8a2 <memset>
 80077f6:	4658      	mov	r0, fp
 80077f8:	f7fb f846 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 80077fc:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8007800:	27ff      	movs	r7, #255	; 0xff
 8007802:	4ba6      	ldr	r3, [pc, #664]	; (8007a9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007804:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007806:	2226      	movs	r2, #38	; 0x26
 8007808:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800780c:	4629      	mov	r1, r5
 800780e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8007812:	4630      	mov	r0, r6
 8007814:	66a5      	str	r5, [r4, #104]	; 0x68
 8007816:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800781a:	f024 f842 	bl	802b8a2 <memset>
 800781e:	4630      	mov	r0, r6
 8007820:	f7fb f832 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8007824:	4b9e      	ldr	r3, [pc, #632]	; (8007aa0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007826:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007828:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800782c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007830:	a90a      	add	r1, sp, #40	; 0x28
 8007832:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8007834:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007838:	f00c fa5d 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800783c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007840:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8007844:	4618      	mov	r0, r3
 8007846:	ee09 3a10 	vmov	s18, r3
 800784a:	f504 7920 	add.w	r9, r4, #640	; 0x280
 800784e:	f7fb f82d 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007852:	4640      	mov	r0, r8
 8007854:	f00b ff12 	bl	801367c <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007858:	4648      	mov	r0, r9
 800785a:	f7fb f827 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800785e:	4f91      	ldr	r7, [pc, #580]	; (8007aa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007860:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 8007864:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8007868:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800786a:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800786e:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007872:	f7fb f81b 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007876:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 800787a:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 800787e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007880:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007884:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007888:	f7fb f810 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800788c:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007890:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 8007894:	4618      	mov	r0, r3
 8007896:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 800789a:	ee0a 3a90 	vmov	s21, r3
 800789e:	f7fb f805 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80078a2:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80078a6:	4618      	mov	r0, r3
 80078a8:	ee0b 3a10 	vmov	s22, r3
 80078ac:	f7fa fffe 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80078b0:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80078b4:	4618      	mov	r0, r3
 80078b6:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80078ba:	ee0b 3a90 	vmov	s23, r3
 80078be:	f7fa fff5 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80078c2:	4650      	mov	r0, sl
 80078c4:	f00b f8e0 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 80078c8:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80078cc:	4618      	mov	r0, r3
 80078ce:	9302      	str	r3, [sp, #8]
 80078d0:	f7fa fdda 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80078d4:	4b74      	ldr	r3, [pc, #464]	; (8007aa8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80078d6:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80078da:	3324      	adds	r3, #36	; 0x24
 80078dc:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80078e0:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80078e4:	4618      	mov	r0, r3
 80078e6:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80078ea:	ee08 3a10 	vmov	s16, r3
 80078ee:	f7fa ffdd 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80078f2:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80078f6:	4618      	mov	r0, r3
 80078f8:	ee08 3a90 	vmov	s17, r3
 80078fc:	f7fa ffd6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007900:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007904:	4618      	mov	r0, r3
 8007906:	ee0c 3a10 	vmov	s24, r3
 800790a:	f00c fb35 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800790e:	4a67      	ldr	r2, [pc, #412]	; (8007aac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007910:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007914:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007918:	4a65      	ldr	r2, [pc, #404]	; (8007ab0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 800791a:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800791e:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007922:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007926:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800792a:	f00d f9e1 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800792e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007932:	462a      	mov	r2, r5
 8007934:	4658      	mov	r0, fp
 8007936:	9300      	str	r3, [sp, #0]
 8007938:	4629      	mov	r1, r5
 800793a:	23f0      	movs	r3, #240	; 0xf0
 800793c:	f7fa ff90 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007940:	1d27      	adds	r7, r4, #4
        color = newColor;
 8007942:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007946:	66a3      	str	r3, [r4, #104]	; 0x68
 8007948:	4659      	mov	r1, fp
 800794a:	4638      	mov	r0, r7
 800794c:	f009 fc43 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007950:	462a      	mov	r2, r5
 8007952:	4630      	mov	r0, r6
 8007954:	4629      	mov	r1, r5
 8007956:	f7fa ff76 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800795a:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800795c:	4630      	mov	r0, r6
 800795e:	a90a      	add	r1, sp, #40	; 0x28
 8007960:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007964:	f00c f9c7 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007968:	4631      	mov	r1, r6
 800796a:	4638      	mov	r0, r7
 800796c:	f009 fc33 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007970:	223c      	movs	r2, #60	; 0x3c
 8007972:	ee19 0a10 	vmov	r0, s18
 8007976:	211f      	movs	r1, #31
 8007978:	f7fa ff65 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800797c:	ae04      	add	r6, sp, #16
        color = newColor;
 800797e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007982:	ee19 1a10 	vmov	r1, s18
        color = newColor;
 8007986:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800798a:	4630      	mov	r0, r6
        linespace = space;
 800798c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007990:	f00b fb3c 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007994:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007998:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800799c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80079a0:	f04f 0b35 	mov.w	fp, #53	; 0x35
 80079a4:	4b43      	ldr	r3, [pc, #268]	; (8007ab4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80079a6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80079a8:	ee19 0a10 	vmov	r0, s18
 80079ac:	a90a      	add	r1, sp, #40	; 0x28
 80079ae:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80079b2:	f00b fdc5 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079b6:	ee19 1a10 	vmov	r1, s18
 80079ba:	4638      	mov	r0, r7
 80079bc:	f009 fc0b 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80079c0:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80079c2:	4640      	mov	r0, r8
 80079c4:	a90a      	add	r1, sp, #40	; 0x28
 80079c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079ca:	f008 fcab 	bl	8010324 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80079ce:	236a      	movs	r3, #106	; 0x6a
 80079d0:	4640      	mov	r0, r8
 80079d2:	9300      	str	r3, [sp, #0]
 80079d4:	225e      	movs	r2, #94	; 0x5e
 80079d6:	23b8      	movs	r3, #184	; 0xb8
 80079d8:	211c      	movs	r1, #28
 80079da:	f7fa ff41 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80079de:	225c      	movs	r2, #92	; 0x5c
 80079e0:	4611      	mov	r1, r2
 80079e2:	4640      	mov	r0, r8
 80079e4:	f00b fef5 	bl	80137d2 <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80079e8:	4640      	mov	r0, r8
 80079ea:	225a      	movs	r2, #90	; 0x5a
 80079ec:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079f0:	f00b ff74 	bl	80138dc <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80079f4:	462b      	mov	r3, r5
 80079f6:	225a      	movs	r2, #90	; 0x5a
 80079f8:	4640      	mov	r0, r8
 80079fa:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079fe:	9500      	str	r5, [sp, #0]
 8007a00:	f008 fb3d 	bl	801007e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007a04:	4640      	mov	r0, r8
 8007a06:	4629      	mov	r1, r5
 8007a08:	f00b ff12 	bl	8013830 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007a0c:	465b      	mov	r3, fp
 8007a0e:	2208      	movs	r2, #8
 8007a10:	4640      	mov	r0, r8
 8007a12:	2105      	movs	r1, #5
 8007a14:	f00b fec8 	bl	80137a8 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a18:	4640      	mov	r0, r8
 8007a1a:	2101      	movs	r1, #1
 8007a1c:	f00b fe66 	bl	80136ec <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a20:	4640      	mov	r0, r8
 8007a22:	2101      	movs	r1, #1
 8007a24:	f00b fe65 	bl	80136f2 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007a28:	f04f 0b0f 	mov.w	fp, #15
 8007a2c:	4641      	mov	r1, r8
 8007a2e:	4638      	mov	r0, r7
 8007a30:	f009 fbd1 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007a34:	22e6      	movs	r2, #230	; 0xe6
 8007a36:	23f0      	movs	r3, #240	; 0xf0
 8007a38:	4629      	mov	r1, r5
 8007a3a:	4648      	mov	r0, r9
 8007a3c:	f8cd b000 	str.w	fp, [sp]
 8007a40:	f7fa ff0e 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8007a44:	f04f 33ff 	mov.w	r3, #4294967295
 8007a48:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007a4c:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007a50:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007a54:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a58:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8007acc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2fc>
 8007a5c:	4649      	mov	r1, r9
 8007a5e:	4630      	mov	r0, r6
 8007a60:	4798      	blx	r3
 8007a62:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007a66:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007a6a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007a6e:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8007a72:	9303      	str	r3, [sp, #12]
 8007a74:	f8d8 3000 	ldr.w	r3, [r8]
 8007a78:	b92b      	cbnz	r3, 8007a86 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
 8007a7a:	4b0f      	ldr	r3, [pc, #60]	; (8007ab8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007a7c:	4a0f      	ldr	r2, [pc, #60]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007a7e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a80:	480f      	ldr	r0, [pc, #60]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8007a82:	f023 fd09 	bl	802b498 <__assert_func>
 8007a86:	4b0f      	ldr	r3, [pc, #60]	; (8007ac4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 8007a88:	881b      	ldrh	r3, [r3, #0]
 8007a8a:	2b0e      	cmp	r3, #14
 8007a8c:	d820      	bhi.n	8007ad0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x300>
 8007a8e:	4b0e      	ldr	r3, [pc, #56]	; (8007ac8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>)
 8007a90:	4a0a      	ldr	r2, [pc, #40]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007a92:	2161      	movs	r1, #97	; 0x61
 8007a94:	e7f4      	b.n	8007a80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 8007a96:	bf00      	nop
 8007a98:	0802ed24 	.word	0x0802ed24
 8007a9c:	0802fd84 	.word	0x0802fd84
 8007aa0:	0802ff4c 	.word	0x0802ff4c
 8007aa4:	0802d010 	.word	0x0802d010
 8007aa8:	0802fab8 	.word	0x0802fab8
 8007aac:	0802ed0c 	.word	0x0802ed0c
 8007ab0:	080077b7 	.word	0x080077b7
 8007ab4:	0802d000 	.word	0x0802d000
 8007ab8:	0802ce50 	.word	0x0802ce50
 8007abc:	0802cf52 	.word	0x0802cf52
 8007ac0:	0802cecd 	.word	0x0802cecd
 8007ac4:	20013910 	.word	0x20013910
 8007ac8:	0802cf14 	.word	0x0802cf14
 8007acc:	2001390c 	.word	0x2001390c
        return texts->getText(typedTextId);
 8007ad0:	4be1      	ldr	r3, [pc, #900]	; (8007e58 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8007ad2:	210e      	movs	r1, #14
 8007ad4:	6818      	ldr	r0, [r3, #0]
 8007ad6:	f000 ffab 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8007ada:	4ae0      	ldr	r2, [pc, #896]	; (8007e5c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 8007adc:	4603      	mov	r3, r0
 8007ade:	210a      	movs	r1, #10
 8007ae0:	9803      	ldr	r0, [sp, #12]
 8007ae2:	f011 ffbf 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007ae6:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007ae8:	4bdd      	ldr	r3, [pc, #884]	; (8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007aea:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007aee:	4648      	mov	r0, r9
 8007af0:	930a      	str	r3, [sp, #40]	; 0x28
 8007af2:	a90a      	add	r1, sp, #40	; 0x28
 8007af4:	2311      	movs	r3, #17
 8007af6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007afa:	f00b fd21 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007afe:	4649      	mov	r1, r9
 8007b00:	4638      	mov	r0, r7
 8007b02:	f009 fb68 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007b06:	22d7      	movs	r2, #215	; 0xd7
 8007b08:	ee19 0a90 	vmov	r0, s19
 8007b0c:	23f0      	movs	r3, #240	; 0xf0
 8007b0e:	4629      	mov	r1, r5
 8007b10:	f8cd b000 	str.w	fp, [sp]
 8007b14:	f7fa fea4 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b18:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007b1c:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007b20:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007b24:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007b28:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007b2c:	4630      	mov	r0, r6
 8007b2e:	ee19 1a90 	vmov	r1, s19
 8007b32:	4798      	blx	r3
 8007b34:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b38:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007b3c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b40:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007b44:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	d096      	beq.n	8007a7a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b4c:	49c5      	ldr	r1, [pc, #788]	; (8007e64 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x694>)
 8007b4e:	880b      	ldrh	r3, [r1, #0]
 8007b50:	2b0f      	cmp	r3, #15
 8007b52:	d99c      	bls.n	8007a8e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2be>
        return texts->getText(typedTextId);
 8007b54:	4ac0      	ldr	r2, [pc, #768]	; (8007e58 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8007b56:	4659      	mov	r1, fp
 8007b58:	6810      	ldr	r0, [r2, #0]
 8007b5a:	f000 ff69 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8007b5e:	4abf      	ldr	r2, [pc, #764]	; (8007e5c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 8007b60:	4603      	mov	r3, r0
 8007b62:	210a      	movs	r1, #10
 8007b64:	4648      	mov	r0, r9
 8007b66:	f011 ff7d 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007b6a:	4bbd      	ldr	r3, [pc, #756]	; (8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007b6c:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007b70:	a80a      	add	r0, sp, #40	; 0x28
 8007b72:	4601      	mov	r1, r0
 8007b74:	930a      	str	r3, [sp, #40]	; 0x28
 8007b76:	ee19 0a90 	vmov	r0, s19
 8007b7a:	2312      	movs	r3, #18
 8007b7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b80:	f00b fcde 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b84:	ee19 1a90 	vmov	r1, s19
 8007b88:	4638      	mov	r0, r7
 8007b8a:	f009 fb24 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007b8e:	22c8      	movs	r2, #200	; 0xc8
 8007b90:	ee1a 0a10 	vmov	r0, s20
 8007b94:	23f0      	movs	r3, #240	; 0xf0
 8007b96:	4629      	mov	r1, r5
 8007b98:	f8cd b000 	str.w	fp, [sp]
 8007b9c:	f7fa fe60 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ba0:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8007ba4:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8007ba8:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8007bac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007bb0:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007bb4:	ee1a 1a10 	vmov	r1, s20
 8007bb8:	4630      	mov	r0, r6
 8007bba:	4798      	blx	r3
 8007bbc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007bc0:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007bc4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007bc8:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007bcc:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007bd0:	2b00      	cmp	r3, #0
 8007bd2:	f43f af52 	beq.w	8007a7a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bd6:	49a3      	ldr	r1, [pc, #652]	; (8007e64 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x694>)
 8007bd8:	880b      	ldrh	r3, [r1, #0]
 8007bda:	2b10      	cmp	r3, #16
 8007bdc:	f67f af57 	bls.w	8007a8e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2be>
        return texts->getText(typedTextId);
 8007be0:	4a9d      	ldr	r2, [pc, #628]	; (8007e58 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8007be2:	2110      	movs	r1, #16
 8007be4:	6810      	ldr	r0, [r2, #0]
 8007be6:	f000 ff23 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8007bea:	4a9c      	ldr	r2, [pc, #624]	; (8007e5c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 8007bec:	4603      	mov	r3, r0
 8007bee:	210a      	movs	r1, #10
 8007bf0:	4648      	mov	r0, r9
 8007bf2:	f011 ff37 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007bf6:	4b9a      	ldr	r3, [pc, #616]	; (8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007bf8:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007bfa:	ee1a 0a10 	vmov	r0, s20
 8007bfe:	2313      	movs	r3, #19
 8007c00:	a90a      	add	r1, sp, #40	; 0x28
 8007c02:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007c06:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c0a:	f00b fc99 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c0e:	ee1a 1a10 	vmov	r1, s20
 8007c12:	4638      	mov	r0, r7
 8007c14:	f009 fadf 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007c18:	ee1a 0a90 	vmov	r0, s21
 8007c1c:	224c      	movs	r2, #76	; 0x4c
 8007c1e:	2171      	movs	r1, #113	; 0x71
 8007c20:	f7fa fe11 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007c24:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007c28:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8007c2c:	f8c4 2394 	str.w	r2, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007c30:	4630      	mov	r0, r6
        linespace = space;
 8007c32:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007c36:	f00b f9e9 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c3a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c3e:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007c42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c46:	4b86      	ldr	r3, [pc, #536]	; (8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007c48:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007c4a:	ee1a 0a90 	vmov	r0, s21
 8007c4e:	2314      	movs	r3, #20
 8007c50:	a90a      	add	r1, sp, #40	; 0x28
 8007c52:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c56:	f00b fc73 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c5a:	ee1a 1a90 	vmov	r1, s21
 8007c5e:	4638      	mov	r0, r7
 8007c60:	f009 fab9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007c64:	ee1b 0a10 	vmov	r0, s22
 8007c68:	22b9      	movs	r2, #185	; 0xb9
 8007c6a:	4629      	mov	r1, r5
 8007c6c:	f7fa fdeb 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007c70:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007c74:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007c78:	f8c4 23dc 	str.w	r2, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8007c7c:	4630      	mov	r0, r6
        linespace = space;
 8007c7e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007c82:	f00b f9c3 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c86:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c8a:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007c8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c92:	4b73      	ldr	r3, [pc, #460]	; (8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007c94:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007c96:	ee1b 0a10 	vmov	r0, s22
 8007c9a:	2315      	movs	r3, #21
 8007c9c:	a90a      	add	r1, sp, #40	; 0x28
 8007c9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ca2:	f00b fc4d 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ca6:	ee1b 1a10 	vmov	r1, s22
 8007caa:	4638      	mov	r0, r7
 8007cac:	f009 fa93 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007cb0:	ee1b 0a90 	vmov	r0, s23
 8007cb4:	22b9      	movs	r2, #185	; 0xb9
 8007cb6:	21d9      	movs	r1, #217	; 0xd9
 8007cb8:	f7fa fdc5 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007cbc:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007cc0:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8007cc4:	f8c4 2424 	str.w	r2, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007cc8:	4630      	mov	r0, r6
        linespace = space;
 8007cca:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007cce:	f00b f99d 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cd2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007cd6:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007cda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cde:	4b60      	ldr	r3, [pc, #384]	; (8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8007ce0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007ce2:	ee1b 0a90 	vmov	r0, s23
 8007ce6:	2316      	movs	r3, #22
 8007ce8:	a90a      	add	r1, sp, #40	; 0x28
 8007cea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cee:	f00b fc27 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cf2:	ee1b 1a90 	vmov	r1, s23
 8007cf6:	4638      	mov	r0, r7
 8007cf8:	f009 fa6d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007cfc:	230a      	movs	r3, #10
 8007cfe:	9300      	str	r3, [sp, #0]
 8007d00:	2232      	movs	r2, #50	; 0x32
 8007d02:	23f0      	movs	r3, #240	; 0xf0
 8007d04:	4629      	mov	r1, r5
 8007d06:	4650      	mov	r0, sl
 8007d08:	f7fa fdaa 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d0c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d10:	22a0      	movs	r2, #160	; 0xa0
 8007d12:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007d16:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8007d1a:	9b02      	ldr	r3, [sp, #8]
 8007d1c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007d20:	4611      	mov	r1, r2
 8007d22:	4650      	mov	r0, sl
 8007d24:	f00a ffc6 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d28:	22a0      	movs	r2, #160	; 0xa0
 8007d2a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007d2e:	4650      	mov	r0, sl
 8007d30:	f00a ffcb 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007d34:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007d38:	2b20      	cmp	r3, #32
 8007d3a:	d005      	beq.n	8007d48 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x578>
        lineWidthQ5 = widthQ5;
 8007d3c:	2320      	movs	r3, #32
 8007d3e:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007d42:	4650      	mov	r0, sl
 8007d44:	f00a fec0 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007d48:	4650      	mov	r0, sl
 8007d4a:	2101      	movs	r1, #1
 8007d4c:	f00a ffc8 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007d50:	4651      	mov	r1, sl
 8007d52:	4638      	mov	r0, r7
 8007d54:	f009 fa3f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007d58:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007d5c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007d5e:	ee18 0a10 	vmov	r0, s16
 8007d62:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007d64:	f04f 0900 	mov.w	r9, #0
 8007d68:	2145      	movs	r1, #69	; 0x45
 8007d6a:	f7fa fd6c 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007d6e:	ee18 1a10 	vmov	r1, s16
 8007d72:	4628      	mov	r0, r5
        color = newColor;
 8007d74:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007d78:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007d7c:	f00b f946 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d84:	ee18 3a10 	vmov	r3, s16
 8007d88:	333c      	adds	r3, #60	; 0x3c
 8007d8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d8e:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007e60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>
 8007d92:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007d96:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007d98:	ee18 0a10 	vmov	r0, s16
 8007d9c:	a90a      	add	r1, sp, #40	; 0x28
 8007d9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007da2:	f00b fbcd 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007da6:	ee18 1a10 	vmov	r1, s16
 8007daa:	4638      	mov	r0, r7
 8007dac:	f009 fa13 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007db0:	ee18 0a90 	vmov	r0, s17
 8007db4:	220c      	movs	r2, #12
 8007db6:	2136      	movs	r1, #54	; 0x36
 8007db8:	f7fa fd45 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8007dbc:	ee18 1a90 	vmov	r1, s17
 8007dc0:	4628      	mov	r0, r5
        color = newColor;
 8007dc2:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007dc6:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007dca:	f00b f91f 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007dce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007dd2:	ee18 3a90 	vmov	r3, s17
 8007dd6:	333c      	adds	r3, #60	; 0x3c
 8007dd8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ddc:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007dde:	ee18 0a90 	vmov	r0, s17
 8007de2:	a90a      	add	r1, sp, #40	; 0x28
 8007de4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007de8:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007dec:	f00b fba8 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007df0:	ee18 1a90 	vmov	r1, s17
 8007df4:	4638      	mov	r0, r7
 8007df6:	f009 f9ee 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007dfa:	ee1c 0a10 	vmov	r0, s24
 8007dfe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007e02:	2121      	movs	r1, #33	; 0x21
 8007e04:	f7fa fd1f 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8007e08:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007e0a:	aa0a      	add	r2, sp, #40	; 0x28
 8007e0c:	a909      	add	r1, sp, #36	; 0x24
 8007e0e:	ee1c 0a10 	vmov	r0, s24
 8007e12:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007e16:	2302      	movs	r3, #2
 8007e18:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e1c:	f00b fd75 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007e20:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007e22:	ee1c 0a10 	vmov	r0, s24
 8007e26:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007e2a:	f7fa fd61 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007e2e:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007e32:	3304      	adds	r3, #4
 8007e34:	4638      	mov	r0, r7
 8007e36:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007e3a:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007e3e:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007e42:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007e46:	f009 f9c6 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	b00d      	add	sp, #52	; 0x34
 8007e4e:	ecbd 8b0a 	vpop	{d8-d12}
 8007e52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e56:	bf00      	nop
 8007e58:	20013918 	.word	0x20013918
 8007e5c:	0802cf8a 	.word	0x0802cf8a
 8007e60:	0802d000 	.word	0x0802d000
 8007e64:	20013910 	.word	0x20013910

08007e68 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007e68:	4770      	bx	lr

08007e6a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e6a:	4770      	bx	lr

08007e6c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007e6c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e6e:	68c2      	ldr	r2, [r0, #12]
 8007e70:	6844      	ldr	r4, [r0, #4]
 8007e72:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e74:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007e76:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e7a:	07d2      	lsls	r2, r2, #31
 8007e7c:	bf48      	it	mi
 8007e7e:	5962      	ldrmi	r2, [r4, r5]
 8007e80:	689b      	ldr	r3, [r3, #8]
    }
 8007e82:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e84:	bf48      	it	mi
 8007e86:	58d3      	ldrmi	r3, [r2, r3]
 8007e88:	4718      	bx	r3

08007e8a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007e8a:	6843      	ldr	r3, [r0, #4]
 8007e8c:	b12b      	cbz	r3, 8007e9a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007e8e:	6883      	ldr	r3, [r0, #8]
 8007e90:	b92b      	cbnz	r3, 8007e9e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007e92:	68c0      	ldr	r0, [r0, #12]
 8007e94:	f000 0001 	and.w	r0, r0, #1
 8007e98:	4770      	bx	lr
 8007e9a:	4618      	mov	r0, r3
 8007e9c:	4770      	bx	lr
 8007e9e:	2001      	movs	r0, #1
    }
 8007ea0:	4770      	bx	lr

08007ea2 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007ea2:	b510      	push	{r4, lr}
 8007ea4:	2110      	movs	r1, #16
 8007ea6:	4604      	mov	r4, r0
 8007ea8:	f022 fce3 	bl	802a872 <_ZdlPvj>
 8007eac:	4620      	mov	r0, r4
 8007eae:	bd10      	pop	{r4, pc}

08007eb0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007eb0:	b510      	push	{r4, lr}
 8007eb2:	4b03      	ldr	r3, [pc, #12]	; (8007ec0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007eb4:	6003      	str	r3, [r0, #0]
 8007eb6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007eb8:	f00c ff24 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ebc:	4620      	mov	r0, r4
 8007ebe:	bd10      	pop	{r4, pc}
 8007ec0:	0802ed74 	.word	0x0802ed74

08007ec4 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007ec4:	b507      	push	{r0, r1, r2, lr}
 8007ec6:	4b07      	ldr	r3, [pc, #28]	; (8007ee4 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007ec8:	6003      	str	r3, [r0, #0]
 8007eca:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007ecc:	f00c ff1a 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ed0:	9801      	ldr	r0, [sp, #4]
 8007ed2:	f241 015c 	movw	r1, #4188	; 0x105c
 8007ed6:	f022 fccc 	bl	802a872 <_ZdlPvj>
 8007eda:	9801      	ldr	r0, [sp, #4]
 8007edc:	b003      	add	sp, #12
 8007ede:	f85d fb04 	ldr.w	pc, [sp], #4
 8007ee2:	bf00      	nop
 8007ee4:	0802ed74 	.word	0x0802ed74

08007ee8 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007ee8:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007eec:	4288      	cmp	r0, r1
{
 8007eee:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007ef0:	d105      	bne.n	8007efe <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007ef2:	f00e fc09 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007ef6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007efa:	f7fc bb75 	b.w	80045e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007efe:	bd08      	pop	{r3, pc}

08007f00 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f04:	ed2d 8b02 	vpush	{d8}
 8007f08:	4604      	mov	r4, r0
 8007f0a:	b08d      	sub	sp, #52	; 0x34
 8007f0c:	f010 f87c 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007f10:	4622      	mov	r2, r4
 8007f12:	2500      	movs	r5, #0
 8007f14:	4ba4      	ldr	r3, [pc, #656]	; (80081a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007f16:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007f18:	f842 3b40 	str.w	r3, [r2], #64
 8007f1c:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007f20:	4629      	mov	r1, r5
 8007f22:	2226      	movs	r2, #38	; 0x26
 8007f24:	ee18 0a10 	vmov	r0, s16
 8007f28:	f023 fcbb 	bl	802b8a2 <memset>
 8007f2c:	ee18 0a10 	vmov	r0, s16
 8007f30:	f7fa fcaa 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8007f34:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007f38:	26ff      	movs	r6, #255	; 0xff
 8007f3a:	4b9c      	ldr	r3, [pc, #624]	; (80081ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007f3c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007f3e:	2226      	movs	r2, #38	; 0x26
 8007f40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f44:	4629      	mov	r1, r5
 8007f46:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007f4a:	66a5      	str	r5, [r4, #104]	; 0x68
 8007f4c:	4658      	mov	r0, fp
 8007f4e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f52:	f023 fca6 	bl	802b8a2 <memset>
 8007f56:	4658      	mov	r0, fp
 8007f58:	f7fa fc96 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8007f5c:	4b94      	ldr	r3, [pc, #592]	; (80081b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007f5e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007f60:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007f64:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007f68:	a90a      	add	r1, sp, #40	; 0x28
 8007f6a:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007f6e:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007f72:	4658      	mov	r0, fp
 8007f74:	f00b febf 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f78:	4638      	mov	r0, r7
 8007f7a:	f00a fd85 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 8007f7e:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f82:	4618      	mov	r0, r3
 8007f84:	9303      	str	r3, [sp, #12]
 8007f86:	f7fa fa7f 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f8a:	4b8a      	ldr	r3, [pc, #552]	; (80081b4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007f8c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007f90:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007f94:	3324      	adds	r3, #36	; 0x24
 8007f96:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007f9a:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007f9e:	4650      	mov	r0, sl
 8007fa0:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007fa4:	f7fa fc82 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007fa8:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007fac:	4648      	mov	r0, r9
 8007fae:	f7fa fc7d 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007fb2:	4640      	mov	r0, r8
 8007fb4:	f7fa fc7a 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8007fb8:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007fbc:	4618      	mov	r0, r3
 8007fbe:	ee08 3a90 	vmov	s17, r3
 8007fc2:	f00b ffd9 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007fc6:	4a7c      	ldr	r2, [pc, #496]	; (80081b8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007fc8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007fcc:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007fd0:	4a7a      	ldr	r2, [pc, #488]	; (80081bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007fd2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007fd6:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007fda:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007fde:	f00c fe87 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007fe2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007fe6:	462a      	mov	r2, r5
 8007fe8:	ee18 0a10 	vmov	r0, s16
 8007fec:	9300      	str	r3, [sp, #0]
 8007fee:	4629      	mov	r1, r5
 8007ff0:	23f0      	movs	r3, #240	; 0xf0
 8007ff2:	f7fa fc35 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ff6:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007ff8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007ffc:	66a3      	str	r3, [r4, #104]	; 0x68
 8007ffe:	ee18 1a10 	vmov	r1, s16
 8008002:	4630      	mov	r0, r6
 8008004:	f009 f8e7 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008008:	462a      	mov	r2, r5
 800800a:	4629      	mov	r1, r5
 800800c:	4658      	mov	r0, fp
 800800e:	f7fa fc1a 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8008012:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008014:	a90a      	add	r1, sp, #40	; 0x28
 8008016:	4658      	mov	r0, fp
 8008018:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800801c:	f00b fe6b 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008020:	4659      	mov	r1, fp
 8008022:	4630      	mov	r0, r6
 8008024:	f009 f8d7 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008028:	230a      	movs	r3, #10
 800802a:	9300      	str	r3, [sp, #0]
 800802c:	2232      	movs	r2, #50	; 0x32
 800802e:	23f0      	movs	r3, #240	; 0xf0
 8008030:	4629      	mov	r1, r5
 8008032:	4638      	mov	r0, r7
 8008034:	f7fa fc14 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008038:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800803c:	22a0      	movs	r2, #160	; 0xa0
 800803e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008042:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008046:	9b03      	ldr	r3, [sp, #12]
 8008048:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800804c:	4611      	mov	r1, r2
 800804e:	4638      	mov	r0, r7
 8008050:	f00a fe30 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008054:	22a0      	movs	r2, #160	; 0xa0
 8008056:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800805a:	4638      	mov	r0, r7
 800805c:	f00a fe35 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008060:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008064:	2b20      	cmp	r3, #32
 8008066:	d005      	beq.n	8008074 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8008068:	2320      	movs	r3, #32
 800806a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800806e:	4638      	mov	r0, r7
 8008070:	f00a fd2a 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008074:	4638      	mov	r0, r7
 8008076:	2101      	movs	r1, #1
 8008078:	f00a fe32 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800807c:	4639      	mov	r1, r7
 800807e:	4630      	mov	r0, r6
 8008080:	f009 f8a9 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008084:	ad04      	add	r5, sp, #16
        color = newColor;
 8008086:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 800808a:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 800808e:	2223      	movs	r2, #35	; 0x23
 8008090:	4650      	mov	r0, sl
 8008092:	2145      	movs	r1, #69	; 0x45
 8008094:	f7fa fbd7 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008098:	4651      	mov	r1, sl
 800809a:	4628      	mov	r0, r5
        color = newColor;
 800809c:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80080a0:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80080a4:	f00a ffb2 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080ac:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80080b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80080b4:	4b42      	ldr	r3, [pc, #264]	; (80081c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080b6:	930a      	str	r3, [sp, #40]	; 0x28
 80080b8:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80080ba:	a90a      	add	r1, sp, #40	; 0x28
 80080bc:	4650      	mov	r0, sl
 80080be:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80080c2:	f00b fa3d 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080c6:	4651      	mov	r1, sl
 80080c8:	4630      	mov	r0, r6
 80080ca:	f009 f884 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80080ce:	223c      	movs	r2, #60	; 0x3c
 80080d0:	4648      	mov	r0, r9
 80080d2:	211f      	movs	r1, #31
 80080d4:	f7fa fbb7 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80080d8:	4649      	mov	r1, r9
 80080da:	4628      	mov	r0, r5
        color = newColor;
 80080dc:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80080e0:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80080e4:	f00a ff92 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080e8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080ec:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80080f0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80080f4:	4b32      	ldr	r3, [pc, #200]	; (80081c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080f6:	930a      	str	r3, [sp, #40]	; 0x28
 80080f8:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80080fa:	a90a      	add	r1, sp, #40	; 0x28
 80080fc:	4648      	mov	r0, r9
 80080fe:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8008102:	f00b fa1d 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008106:	4649      	mov	r1, r9
 8008108:	4630      	mov	r0, r6
 800810a:	f009 f864 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800810e:	220c      	movs	r2, #12
 8008110:	4640      	mov	r0, r8
 8008112:	2136      	movs	r1, #54	; 0x36
 8008114:	f7fa fb97 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8008118:	4641      	mov	r1, r8
 800811a:	4628      	mov	r0, r5
        color = newColor;
 800811c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8008120:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008124:	f00a ff72 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008128:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800812c:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 8008130:	4b23      	ldr	r3, [pc, #140]	; (80081c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8008132:	930a      	str	r3, [sp, #40]	; 0x28
 8008134:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008138:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800813a:	a90a      	add	r1, sp, #40	; 0x28
 800813c:	4640      	mov	r0, r8
 800813e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008142:	f00b f9fd 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008146:	4641      	mov	r1, r8
 8008148:	4630      	mov	r0, r6
 800814a:	f009 f844 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800814e:	ee18 0a90 	vmov	r0, s17
 8008152:	f240 1201 	movw	r2, #257	; 0x101
 8008156:	2121      	movs	r1, #33	; 0x21
 8008158:	f7fa fb75 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800815c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800815e:	aa0a      	add	r2, sp, #40	; 0x28
 8008160:	a909      	add	r1, sp, #36	; 0x24
 8008162:	ee18 0a90 	vmov	r0, s17
 8008166:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800816a:	2302      	movs	r3, #2
 800816c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008170:	f00b fbcb 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008174:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8008176:	ee18 0a90 	vmov	r0, s17
 800817a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800817e:	f7fa fbb7 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008182:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8008186:	330c      	adds	r3, #12
 8008188:	4630      	mov	r0, r6
        colorPressed = col;
 800818a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800818e:	ee18 1a90 	vmov	r1, s17
 8008192:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8008196:	f009 f81e 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800819a:	4620      	mov	r0, r4
 800819c:	b00d      	add	sp, #52	; 0x34
 800819e:	ecbd 8b02 	vpop	{d8}
 80081a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80081a6:	bf00      	nop
 80081a8:	0802ed74 	.word	0x0802ed74
 80081ac:	0802fd84 	.word	0x0802fd84
 80081b0:	0802ff4c 	.word	0x0802ff4c
 80081b4:	0802fab8 	.word	0x0802fab8
 80081b8:	0802ed5c 	.word	0x0802ed5c
 80081bc:	08007ee9 	.word	0x08007ee9
 80081c0:	0802d000 	.word	0x0802d000

080081c4 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80081c4:	4770      	bx	lr

080081c6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081c6:	4770      	bx	lr

080081c8 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80081c8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081ca:	68c2      	ldr	r2, [r0, #12]
 80081cc:	6844      	ldr	r4, [r0, #4]
 80081ce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80081d0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80081d2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80081d6:	07d2      	lsls	r2, r2, #31
 80081d8:	bf48      	it	mi
 80081da:	5962      	ldrmi	r2, [r4, r5]
 80081dc:	689b      	ldr	r3, [r3, #8]
    }
 80081de:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081e0:	bf48      	it	mi
 80081e2:	58d3      	ldrmi	r3, [r2, r3]
 80081e4:	4718      	bx	r3

080081e6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80081e6:	6843      	ldr	r3, [r0, #4]
 80081e8:	b12b      	cbz	r3, 80081f6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80081ea:	6883      	ldr	r3, [r0, #8]
 80081ec:	b92b      	cbnz	r3, 80081fa <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80081ee:	68c0      	ldr	r0, [r0, #12]
 80081f0:	f000 0001 	and.w	r0, r0, #1
 80081f4:	4770      	bx	lr
 80081f6:	4618      	mov	r0, r3
 80081f8:	4770      	bx	lr
 80081fa:	2001      	movs	r0, #1
    }
 80081fc:	4770      	bx	lr

080081fe <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081fe:	b510      	push	{r4, lr}
 8008200:	2110      	movs	r1, #16
 8008202:	4604      	mov	r4, r0
 8008204:	f022 fb35 	bl	802a872 <_ZdlPvj>
 8008208:	4620      	mov	r0, r4
 800820a:	bd10      	pop	{r4, pc}

0800820c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800820c:	b510      	push	{r4, lr}
 800820e:	4b03      	ldr	r3, [pc, #12]	; (800821c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8008210:	6003      	str	r3, [r0, #0]
 8008212:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008214:	f00c fd76 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008218:	4620      	mov	r0, r4
 800821a:	bd10      	pop	{r4, pc}
 800821c:	0802edc0 	.word	0x0802edc0

08008220 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008220:	b507      	push	{r0, r1, r2, lr}
 8008222:	4b07      	ldr	r3, [pc, #28]	; (8008240 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008224:	6003      	str	r3, [r0, #0]
 8008226:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008228:	f00c fd6c 	bl	8014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800822c:	9801      	ldr	r0, [sp, #4]
 800822e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008232:	f022 fb1e 	bl	802a872 <_ZdlPvj>
 8008236:	9801      	ldr	r0, [sp, #4]
 8008238:	b003      	add	sp, #12
 800823a:	f85d fb04 	ldr.w	pc, [sp], #4
 800823e:	bf00      	nop
 8008240:	0802edc0 	.word	0x0802edc0

08008244 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008244:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008248:	4288      	cmp	r0, r1
{
 800824a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800824c:	d105      	bne.n	800825a <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800824e:	f00e fa5b 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8008252:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008256:	f7fc b997 	b.w	8004588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800825a:	bd08      	pop	{r3, pc}

0800825c <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 800825c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008260:	ed2d 8b04 	vpush	{d8-d9}
 8008264:	4604      	mov	r4, r0
 8008266:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008268:	46a3      	mov	fp, r4
 800826a:	2500      	movs	r5, #0
 800826c:	f00f fecc 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8008270:	4bd1      	ldr	r3, [pc, #836]	; (80085b8 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8008272:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008274:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008278:	2226      	movs	r2, #38	; 0x26
 800827a:	4629      	mov	r1, r5
 800827c:	4658      	mov	r0, fp
 800827e:	f023 fb10 	bl	802b8a2 <memset>
 8008282:	4658      	mov	r0, fp
 8008284:	f7fa fb00 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 8008288:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800828c:	26ff      	movs	r6, #255	; 0xff
 800828e:	4bcb      	ldr	r3, [pc, #812]	; (80085bc <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008290:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008292:	2226      	movs	r2, #38	; 0x26
 8008294:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008298:	4629      	mov	r1, r5
 800829a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800829e:	4650      	mov	r0, sl
 80082a0:	66a5      	str	r5, [r4, #104]	; 0x68
 80082a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80082a6:	f023 fafc 	bl	802b8a2 <memset>
 80082aa:	4650      	mov	r0, sl
 80082ac:	f7fa faec 	bl	8002888 <_ZN8touchgfx6WidgetC1Ev>
 80082b0:	4bc3      	ldr	r3, [pc, #780]	; (80085c0 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80082b2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80082b4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80082b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80082bc:	a90a      	add	r1, sp, #40	; 0x28
 80082be:	4650      	mov	r0, sl
 80082c0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80082c4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80082c8:	f00b fd15 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80082cc:	4648      	mov	r0, r9
 80082ce:	f7fa faed 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80082d2:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80082d6:	4bbb      	ldr	r3, [pc, #748]	; (80085c4 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80082d8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80082dc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80082e0:	4638      	mov	r0, r7
 80082e2:	f00a fbd1 	bl	8012a88 <_ZN8touchgfx4LineC1Ev>
 80082e6:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80082ea:	4618      	mov	r0, r3
 80082ec:	9303      	str	r3, [sp, #12]
 80082ee:	f7fa f8cb 	bl	8002488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80082f2:	4bb5      	ldr	r3, [pc, #724]	; (80085c8 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80082f4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80082f8:	3324      	adds	r3, #36	; 0x24
 80082fa:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80082fe:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8008302:	4618      	mov	r0, r3
 8008304:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008308:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800830c:	ee09 3a10 	vmov	s18, r3
 8008310:	f00b fe32 	bl	8013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008314:	4640      	mov	r0, r8
 8008316:	f7fa fac9 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800831a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800831e:	4618      	mov	r0, r3
 8008320:	ee08 3a10 	vmov	s16, r3
 8008324:	f7fa fac2 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8008328:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800832c:	4618      	mov	r0, r3
 800832e:	ee08 3a90 	vmov	s17, r3
 8008332:	f7fa fabb 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008336:	4aa5      	ldr	r2, [pc, #660]	; (80085cc <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008338:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800833c:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008340:	4aa3      	ldr	r2, [pc, #652]	; (80085d0 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008342:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008346:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800834a:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800834e:	f00c fccf 	bl	8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008352:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008356:	462a      	mov	r2, r5
 8008358:	4658      	mov	r0, fp
 800835a:	9300      	str	r3, [sp, #0]
 800835c:	4629      	mov	r1, r5
 800835e:	23f0      	movs	r3, #240	; 0xf0
 8008360:	f7fa fa7e 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008364:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008366:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800836a:	66a3      	str	r3, [r4, #104]	; 0x68
 800836c:	4659      	mov	r1, fp
 800836e:	4630      	mov	r0, r6
 8008370:	f008 ff31 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008374:	462a      	mov	r2, r5
 8008376:	4650      	mov	r0, sl
 8008378:	4629      	mov	r1, r5
 800837a:	f7fa fa64 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800837e:	2306      	movs	r3, #6
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008380:	4650      	mov	r0, sl
 8008382:	a90a      	add	r1, sp, #40	; 0x28
 8008384:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008388:	f00b fcb5 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800838c:	4651      	mov	r1, sl
 800838e:	4630      	mov	r0, r6
 8008390:	f008 ff21 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008394:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008398:	2156      	movs	r1, #86	; 0x56
 800839a:	4648      	mov	r0, r9
 800839c:	f7fa fa53 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80083a0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80083a4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80083a8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80083ac:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80083b0:	4650      	mov	r0, sl
 80083b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80083b6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80083ba:	4649      	mov	r1, r9
 80083bc:	4798      	blx	r3
 80083be:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80083c2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80083c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80083ca:	4b82      	ldr	r3, [pc, #520]	; (80085d4 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80083cc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80083ce:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80083d2:	b92b      	cbnz	r3, 80083e0 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80083d4:	4b80      	ldr	r3, [pc, #512]	; (80085d8 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80083d6:	4a81      	ldr	r2, [pc, #516]	; (80085dc <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083d8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083da:	4881      	ldr	r0, [pc, #516]	; (80085e0 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80083dc:	f023 f85c 	bl	802b498 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80083e0:	4b80      	ldr	r3, [pc, #512]	; (80085e4 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083e2:	881b      	ldrh	r3, [r3, #0]
 80083e4:	2b20      	cmp	r3, #32
 80083e6:	d803      	bhi.n	80083f0 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80083e8:	4b7f      	ldr	r3, [pc, #508]	; (80085e8 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80083ea:	4a7c      	ldr	r2, [pc, #496]	; (80085dc <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083ec:	2161      	movs	r1, #97	; 0x61
 80083ee:	e7f4      	b.n	80083da <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80083f0:	4b7e      	ldr	r3, [pc, #504]	; (80085ec <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80083f2:	2120      	movs	r1, #32
 80083f4:	6818      	ldr	r0, [r3, #0]
 80083f6:	f000 fb1b 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80083fa:	4a7d      	ldr	r2, [pc, #500]	; (80085f0 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80083fc:	4603      	mov	r3, r0
 80083fe:	2104      	movs	r1, #4
 8008400:	4650      	mov	r0, sl
 8008402:	f011 fb2f 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8008406:	4648      	mov	r0, r9
        wc1 = value;
 8008408:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800840c:	f00b f878 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008410:	4b78      	ldr	r3, [pc, #480]	; (80085f4 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8008412:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008414:	a90a      	add	r1, sp, #40	; 0x28
 8008416:	2321      	movs	r3, #33	; 0x21
 8008418:	4648      	mov	r0, r9
 800841a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800841e:	f00b f88f 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008422:	4649      	mov	r1, r9
 8008424:	4630      	mov	r0, r6
 8008426:	f008 fed6 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800842a:	230a      	movs	r3, #10
 800842c:	9300      	str	r3, [sp, #0]
 800842e:	2232      	movs	r2, #50	; 0x32
 8008430:	23f0      	movs	r3, #240	; 0xf0
 8008432:	4629      	mov	r1, r5
 8008434:	4638      	mov	r0, r7
 8008436:	f7fa fa13 	bl	8002860 <_ZN8touchgfx8Drawable11setPositionEssss>
 800843a:	9b03      	ldr	r3, [sp, #12]
 800843c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008440:	22a0      	movs	r2, #160	; 0xa0
 8008442:	4611      	mov	r1, r2
 8008444:	4638      	mov	r0, r7
 8008446:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800844a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800844e:	f00a fc31 	bl	8012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008452:	22a0      	movs	r2, #160	; 0xa0
 8008454:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008458:	4638      	mov	r0, r7
 800845a:	f00a fc36 	bl	8012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800845e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008462:	2b20      	cmp	r3, #32
 8008464:	d005      	beq.n	8008472 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008466:	2320      	movs	r3, #32
 8008468:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800846c:	4638      	mov	r0, r7
 800846e:	f00a fb2b 	bl	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008472:	4638      	mov	r0, r7
 8008474:	2101      	movs	r1, #1
 8008476:	f00a fc33 	bl	8012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800847a:	4639      	mov	r1, r7
 800847c:	4630      	mov	r0, r6
 800847e:	f008 feaa 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008482:	ee19 0a10 	vmov	r0, s18
 8008486:	22f0      	movs	r2, #240	; 0xf0
 8008488:	2121      	movs	r1, #33	; 0x21
 800848a:	f7fa f9dc 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800848e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008490:	aa0a      	add	r2, sp, #40	; 0x28
 8008492:	a909      	add	r1, sp, #36	; 0x24
 8008494:	ee19 0a10 	vmov	r0, s18
 8008498:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800849c:	2302      	movs	r3, #2
 800849e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80084a2:	f00b fa32 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80084a6:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 80084a8:	ee19 0a10 	vmov	r0, s18
 80084ac:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80084b0:	f7fa fa1e 	bl	80028f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80084b4:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80084b8:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80084bc:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80084c0:	ee19 1a10 	vmov	r1, s18
 80084c4:	4630      	mov	r0, r6
        colorPressed = col;
 80084c6:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80084ca:	ad04      	add	r5, sp, #16
 80084cc:	f008 fe83 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80084d0:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80084d4:	225b      	movs	r2, #91	; 0x5b
 80084d6:	4640      	mov	r0, r8
 80084d8:	2105      	movs	r1, #5
 80084da:	f7fa f9b4 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80084de:	4641      	mov	r1, r8
 80084e0:	4628      	mov	r0, r5
        color = newColor;
 80084e2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80084e6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80084ea:	f00a fd8f 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084ee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80084f2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80084f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80084fa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80085f4 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80084fe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008502:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008504:	a90a      	add	r1, sp, #40	; 0x28
 8008506:	4640      	mov	r0, r8
 8008508:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800850c:	f00b f818 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008510:	4641      	mov	r1, r8
 8008512:	4630      	mov	r0, r6
 8008514:	f008 fe5f 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008518:	ee18 0a10 	vmov	r0, s16
 800851c:	2223      	movs	r2, #35	; 0x23
 800851e:	2145      	movs	r1, #69	; 0x45
 8008520:	f7fa f991 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8008524:	ee18 1a10 	vmov	r1, s16
 8008528:	4628      	mov	r0, r5
        color = newColor;
 800852a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800852e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008532:	f00a fd6b 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008536:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800853a:	ee18 3a10 	vmov	r3, s16
 800853e:	333c      	adds	r3, #60	; 0x3c
 8008540:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008544:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008546:	ee18 0a10 	vmov	r0, s16
 800854a:	a90a      	add	r1, sp, #40	; 0x28
 800854c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008550:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008554:	f00a fff4 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008558:	ee18 1a10 	vmov	r1, s16
 800855c:	4630      	mov	r0, r6
 800855e:	f008 fe3a 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008562:	ee18 0a90 	vmov	r0, s17
 8008566:	220c      	movs	r2, #12
 8008568:	2136      	movs	r1, #54	; 0x36
 800856a:	f7fa f96c 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 800856e:	ee18 1a90 	vmov	r1, s17
 8008572:	4628      	mov	r0, r5
        color = newColor;
 8008574:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008578:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 800857c:	f00a fd46 	bl	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008580:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008584:	ee18 3a90 	vmov	r3, s17
 8008588:	333c      	adds	r3, #60	; 0x3c
 800858a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800858e:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008590:	ee18 0a90 	vmov	r0, s17
 8008594:	a90a      	add	r1, sp, #40	; 0x28
 8008596:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800859a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800859e:	f00a ffcf 	bl	8013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085a2:	4630      	mov	r0, r6
 80085a4:	ee18 1a90 	vmov	r1, s17
 80085a8:	f008 fe15 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80085ac:	4620      	mov	r0, r4
 80085ae:	b00d      	add	sp, #52	; 0x34
 80085b0:	ecbd 8b04 	vpop	{d8-d9}
 80085b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085b8:	0802edc0 	.word	0x0802edc0
 80085bc:	0802fd84 	.word	0x0802fd84
 80085c0:	0802ff4c 	.word	0x0802ff4c
 80085c4:	0802d010 	.word	0x0802d010
 80085c8:	0802fab8 	.word	0x0802fab8
 80085cc:	0802eda8 	.word	0x0802eda8
 80085d0:	08008245 	.word	0x08008245
 80085d4:	2001390c 	.word	0x2001390c
 80085d8:	0802ce50 	.word	0x0802ce50
 80085dc:	0802cf52 	.word	0x0802cf52
 80085e0:	0802cecd 	.word	0x0802cecd
 80085e4:	20013910 	.word	0x20013910
 80085e8:	0802cf14 	.word	0x0802cf14
 80085ec:	20013918 	.word	0x20013918
 80085f0:	0802cf8a 	.word	0x0802cf8a
 80085f4:	0802d000 	.word	0x0802d000

080085f8 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80085f8:	4770      	bx	lr

080085fa <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80085fa:	4770      	bx	lr

080085fc <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085fc:	b510      	push	{r4, lr}
}
 80085fe:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008600:	4604      	mov	r4, r0
}
 8008602:	f022 f936 	bl	802a872 <_ZdlPvj>
 8008606:	4620      	mov	r0, r4
 8008608:	bd10      	pop	{r4, pc}
	...

0800860c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800860c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008610:	4604      	mov	r4, r0
 8008612:	4626      	mov	r6, r4
 8008614:	f00f fcf8 	bl	8018008 <_ZN8touchgfx6ScreenC1Ev>
 8008618:	2500      	movs	r5, #0
 800861a:	4b2e      	ldr	r3, [pc, #184]	; (80086d4 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800861c:	63e5      	str	r5, [r4, #60]	; 0x3c
 800861e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008622:	4b2d      	ldr	r3, [pc, #180]	; (80086d8 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008624:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008626:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800862a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800862e:	23ff      	movs	r3, #255	; 0xff
 8008630:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008634:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008638:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800863c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008640:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008644:	4a25      	ldr	r2, [pc, #148]	; (80086dc <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008646:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800864a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800864e:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008650:	a901      	add	r1, sp, #4
 8008652:	4638      	mov	r0, r7
 8008654:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008658:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800865c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008660:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008664:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008668:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800866c:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008670:	66a5      	str	r5, [r4, #104]	; 0x68
 8008672:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008676:	f00b fb3e 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800867a:	462a      	mov	r2, r5
 800867c:	4629      	mov	r1, r5
 800867e:	4630      	mov	r0, r6
 8008680:	f7fa f8e1 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008684:	4630      	mov	r0, r6
 8008686:	21f0      	movs	r1, #240	; 0xf0
 8008688:	f7f9 fe4a 	bl	8002320 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800868c:	4630      	mov	r0, r6
 800868e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008692:	f7f9 fe47 	bl	8002324 <_ZN8touchgfx8Drawable9setHeightEs>
 8008696:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800869a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800869e:	66a3      	str	r3, [r4, #104]	; 0x68
 80086a0:	4631      	mov	r1, r6
 80086a2:	4640      	mov	r0, r8
 80086a4:	f008 fd97 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 80086a8:	462a      	mov	r2, r5
 80086aa:	4638      	mov	r0, r7
 80086ac:	f06f 0102 	mvn.w	r1, #2
 80086b0:	f7fa f8c9 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 80086b4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80086b6:	a901      	add	r1, sp, #4
 80086b8:	4638      	mov	r0, r7
 80086ba:	f8ad 3004 	strh.w	r3, [sp, #4]
 80086be:	f00b fb1a 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80086c2:	4640      	mov	r0, r8
 80086c4:	4639      	mov	r1, r7
 80086c6:	f008 fd86 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80086ca:	4620      	mov	r0, r4
 80086cc:	b002      	add	sp, #8
 80086ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80086d2:	bf00      	nop
 80086d4:	0802edf4 	.word	0x0802edf4
 80086d8:	0802fd84 	.word	0x0802fd84
 80086dc:	0802ff4c 	.word	0x0802ff4c

080086e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086e0:	4770      	bx	lr
	...

080086e4 <_Z23getFont_verdana_10_4bppv>:
{
 80086e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086e6:	4d17      	ldr	r5, [pc, #92]	; (8008744 <_Z23getFont_verdana_10_4bppv+0x60>)
 80086e8:	682c      	ldr	r4, [r5, #0]
 80086ea:	f3bf 8f5b 	dmb	ish
 80086ee:	f014 0401 	ands.w	r4, r4, #1
{
 80086f2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086f4:	d122      	bne.n	800873c <_Z23getFont_verdana_10_4bppv+0x58>
 80086f6:	4628      	mov	r0, r5
 80086f8:	f022 f8bd 	bl	802a876 <__cxa_guard_acquire>
 80086fc:	b1f0      	cbz	r0, 800873c <_Z23getFont_verdana_10_4bppv+0x58>
 80086fe:	233f      	movs	r3, #63	; 0x3f
 8008700:	9309      	str	r3, [sp, #36]	; 0x24
 8008702:	4b11      	ldr	r3, [pc, #68]	; (8008748 <_Z23getFont_verdana_10_4bppv+0x64>)
 8008704:	9308      	str	r3, [sp, #32]
 8008706:	4b11      	ldr	r3, [pc, #68]	; (800874c <_Z23getFont_verdana_10_4bppv+0x68>)
 8008708:	9307      	str	r3, [sp, #28]
 800870a:	2301      	movs	r3, #1
 800870c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008710:	9304      	str	r3, [sp, #16]
 8008712:	2304      	movs	r3, #4
 8008714:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008718:	230a      	movs	r3, #10
 800871a:	490d      	ldr	r1, [pc, #52]	; (8008750 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800871c:	9300      	str	r3, [sp, #0]
 800871e:	225f      	movs	r2, #95	; 0x5f
 8008720:	230c      	movs	r3, #12
 8008722:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008726:	480b      	ldr	r0, [pc, #44]	; (8008754 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008728:	940a      	str	r4, [sp, #40]	; 0x28
 800872a:	9401      	str	r4, [sp, #4]
 800872c:	f7fd fa22 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008730:	4809      	ldr	r0, [pc, #36]	; (8008758 <_Z23getFont_verdana_10_4bppv+0x74>)
 8008732:	f022 fecf 	bl	802b4d4 <atexit>
 8008736:	4628      	mov	r0, r5
 8008738:	f022 f8a9 	bl	802a88e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800873c:	4805      	ldr	r0, [pc, #20]	; (8008754 <_Z23getFont_verdana_10_4bppv+0x70>)
 800873e:	b00f      	add	sp, #60	; 0x3c
 8008740:	bd30      	pop	{r4, r5, pc}
 8008742:	bf00      	nop
 8008744:	200029b0 	.word	0x200029b0
 8008748:	08047bd0 	.word	0x08047bd0
 800874c:	08047e0c 	.word	0x08047e0c
 8008750:	08046c18 	.word	0x08046c18
 8008754:	200029b4 	.word	0x200029b4
 8008758:	080086e1 	.word	0x080086e1

0800875c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800875c:	4770      	bx	lr
	...

08008760 <_Z23getFont_verdana_12_4bppv>:
{
 8008760:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008762:	4d17      	ldr	r5, [pc, #92]	; (80087c0 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008764:	682c      	ldr	r4, [r5, #0]
 8008766:	f3bf 8f5b 	dmb	ish
 800876a:	f014 0401 	ands.w	r4, r4, #1
{
 800876e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008770:	d122      	bne.n	80087b8 <_Z23getFont_verdana_12_4bppv+0x58>
 8008772:	4628      	mov	r0, r5
 8008774:	f022 f87f 	bl	802a876 <__cxa_guard_acquire>
 8008778:	b1f0      	cbz	r0, 80087b8 <_Z23getFont_verdana_12_4bppv+0x58>
 800877a:	233f      	movs	r3, #63	; 0x3f
 800877c:	9309      	str	r3, [sp, #36]	; 0x24
 800877e:	4b11      	ldr	r3, [pc, #68]	; (80087c4 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008780:	9308      	str	r3, [sp, #32]
 8008782:	4b11      	ldr	r3, [pc, #68]	; (80087c8 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008784:	9307      	str	r3, [sp, #28]
 8008786:	2301      	movs	r3, #1
 8008788:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800878c:	9304      	str	r3, [sp, #16]
 800878e:	2304      	movs	r3, #4
 8008790:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008794:	230c      	movs	r3, #12
 8008796:	490d      	ldr	r1, [pc, #52]	; (80087cc <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008798:	9300      	str	r3, [sp, #0]
 800879a:	2260      	movs	r2, #96	; 0x60
 800879c:	230f      	movs	r3, #15
 800879e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80087a2:	480b      	ldr	r0, [pc, #44]	; (80087d0 <_Z23getFont_verdana_12_4bppv+0x70>)
 80087a4:	940a      	str	r4, [sp, #40]	; 0x28
 80087a6:	9401      	str	r4, [sp, #4]
 80087a8:	f7fd f9e4 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80087ac:	4809      	ldr	r0, [pc, #36]	; (80087d4 <_Z23getFont_verdana_12_4bppv+0x74>)
 80087ae:	f022 fe91 	bl	802b4d4 <atexit>
 80087b2:	4628      	mov	r0, r5
 80087b4:	f022 f86b 	bl	802a88e <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80087b8:	4805      	ldr	r0, [pc, #20]	; (80087d0 <_Z23getFont_verdana_12_4bppv+0x70>)
 80087ba:	b00f      	add	sp, #60	; 0x3c
 80087bc:	bd30      	pop	{r4, r5, pc}
 80087be:	bf00      	nop
 80087c0:	200029e0 	.word	0x200029e0
 80087c4:	08047c04 	.word	0x08047c04
 80087c8:	08047e10 	.word	0x08047e10
 80087cc:	0804714c 	.word	0x0804714c
 80087d0:	200029e4 	.word	0x200029e4
 80087d4:	0800875d 	.word	0x0800875d

080087d8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087d8:	4770      	bx	lr
	...

080087dc <_Z23getFont_verdana_19_4bppv>:
{
 80087dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087de:	4d17      	ldr	r5, [pc, #92]	; (800883c <_Z23getFont_verdana_19_4bppv+0x60>)
 80087e0:	682c      	ldr	r4, [r5, #0]
 80087e2:	f3bf 8f5b 	dmb	ish
 80087e6:	f014 0401 	ands.w	r4, r4, #1
{
 80087ea:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087ec:	d122      	bne.n	8008834 <_Z23getFont_verdana_19_4bppv+0x58>
 80087ee:	4628      	mov	r0, r5
 80087f0:	f022 f841 	bl	802a876 <__cxa_guard_acquire>
 80087f4:	b1f0      	cbz	r0, 8008834 <_Z23getFont_verdana_19_4bppv+0x58>
 80087f6:	233f      	movs	r3, #63	; 0x3f
 80087f8:	9309      	str	r3, [sp, #36]	; 0x24
 80087fa:	4b11      	ldr	r3, [pc, #68]	; (8008840 <_Z23getFont_verdana_19_4bppv+0x64>)
 80087fc:	9308      	str	r3, [sp, #32]
 80087fe:	4b11      	ldr	r3, [pc, #68]	; (8008844 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008800:	9307      	str	r3, [sp, #28]
 8008802:	2301      	movs	r3, #1
 8008804:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008808:	9304      	str	r3, [sp, #16]
 800880a:	2304      	movs	r3, #4
 800880c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008810:	2313      	movs	r3, #19
 8008812:	490d      	ldr	r1, [pc, #52]	; (8008848 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008814:	9300      	str	r3, [sp, #0]
 8008816:	225f      	movs	r2, #95	; 0x5f
 8008818:	2317      	movs	r3, #23
 800881a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800881e:	480b      	ldr	r0, [pc, #44]	; (800884c <_Z23getFont_verdana_19_4bppv+0x70>)
 8008820:	940a      	str	r4, [sp, #40]	; 0x28
 8008822:	9401      	str	r4, [sp, #4]
 8008824:	f7fd f9a6 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008828:	4809      	ldr	r0, [pc, #36]	; (8008850 <_Z23getFont_verdana_19_4bppv+0x74>)
 800882a:	f022 fe53 	bl	802b4d4 <atexit>
 800882e:	4628      	mov	r0, r5
 8008830:	f022 f82d 	bl	802a88e <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008834:	4805      	ldr	r0, [pc, #20]	; (800884c <_Z23getFont_verdana_19_4bppv+0x70>)
 8008836:	b00f      	add	sp, #60	; 0x3c
 8008838:	bd30      	pop	{r4, r5, pc}
 800883a:	bf00      	nop
 800883c:	20002a10 	.word	0x20002a10
 8008840:	08047c88 	.word	0x08047c88
 8008844:	08047e14 	.word	0x08047e14
 8008848:	0804768c 	.word	0x0804768c
 800884c:	20002a14 	.word	0x20002a14
 8008850:	080087d9 	.word	0x080087d9

08008854 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008854:	4770      	bx	lr
	...

08008858 <_Z23getFont_verdana_40_4bppv>:
{
 8008858:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800885a:	4d16      	ldr	r5, [pc, #88]	; (80088b4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800885c:	682c      	ldr	r4, [r5, #0]
 800885e:	f3bf 8f5b 	dmb	ish
 8008862:	f014 0401 	ands.w	r4, r4, #1
{
 8008866:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008868:	d120      	bne.n	80088ac <_Z23getFont_verdana_40_4bppv+0x54>
 800886a:	4628      	mov	r0, r5
 800886c:	f022 f803 	bl	802a876 <__cxa_guard_acquire>
 8008870:	b1e0      	cbz	r0, 80088ac <_Z23getFont_verdana_40_4bppv+0x54>
 8008872:	233f      	movs	r3, #63	; 0x3f
 8008874:	9309      	str	r3, [sp, #36]	; 0x24
 8008876:	4b10      	ldr	r3, [pc, #64]	; (80088b8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008878:	9308      	str	r3, [sp, #32]
 800887a:	4b10      	ldr	r3, [pc, #64]	; (80088bc <_Z23getFont_verdana_40_4bppv+0x64>)
 800887c:	4910      	ldr	r1, [pc, #64]	; (80088c0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800887e:	4811      	ldr	r0, [pc, #68]	; (80088c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008880:	940a      	str	r4, [sp, #40]	; 0x28
 8008882:	2201      	movs	r2, #1
 8008884:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008888:	2304      	movs	r3, #4
 800888a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800888e:	2328      	movs	r3, #40	; 0x28
 8008890:	9300      	str	r3, [sp, #0]
 8008892:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008896:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800889a:	9405      	str	r4, [sp, #20]
 800889c:	f7fd f96a 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80088a0:	4809      	ldr	r0, [pc, #36]	; (80088c8 <_Z23getFont_verdana_40_4bppv+0x70>)
 80088a2:	f022 fe17 	bl	802b4d4 <atexit>
 80088a6:	4628      	mov	r0, r5
 80088a8:	f021 fff1 	bl	802a88e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80088ac:	4805      	ldr	r0, [pc, #20]	; (80088c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80088ae:	b00f      	add	sp, #60	; 0x3c
 80088b0:	bd30      	pop	{r4, r5, pc}
 80088b2:	bf00      	nop
 80088b4:	20002a40 	.word	0x20002a40
 80088b8:	08047e08 	.word	0x08047e08
 80088bc:	08047e18 	.word	0x08047e18
 80088c0:	08047bc0 	.word	0x08047bc0
 80088c4:	20002a44 	.word	0x20002a44
 80088c8:	08008855 	.word	0x08008855

080088cc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80088cc:	2000      	movs	r0, #0
 80088ce:	4770      	bx	lr

080088d0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80088d0:	2000      	movs	r0, #0
 80088d2:	4770      	bx	lr

080088d4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088d4:	b40e      	push	{r1, r2, r3}
 80088d6:	b503      	push	{r0, r1, lr}
 80088d8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088da:	2100      	movs	r1, #0
{
 80088dc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80088e0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088e2:	f00e fecf 	bl	8017684 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088e6:	b002      	add	sp, #8
 80088e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80088ec:	b003      	add	sp, #12
 80088ee:	4770      	bx	lr

080088f0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088f0:	b40c      	push	{r2, r3}
 80088f2:	b507      	push	{r0, r1, r2, lr}
 80088f4:	ab04      	add	r3, sp, #16
 80088f6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80088fa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80088fc:	f00e fec2 	bl	8017684 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008900:	b003      	add	sp, #12
 8008902:	f85d eb04 	ldr.w	lr, [sp], #4
 8008906:	b002      	add	sp, #8
 8008908:	4770      	bx	lr
	...

0800890c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800890c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800890e:	b510      	push	{r4, lr}
 8008910:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008912:	b373      	cbz	r3, 8008972 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008914:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008916:	b92b      	cbnz	r3, 8008924 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008918:	4b18      	ldr	r3, [pc, #96]	; (800897c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800891a:	4a19      	ldr	r2, [pc, #100]	; (8008980 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800891c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800891e:	4819      	ldr	r0, [pc, #100]	; (8008984 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008920:	f022 fdba 	bl	802b498 <__assert_func>
            return buffer[pos];
 8008924:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008926:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800892a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800892c:	b30b      	cbz	r3, 8008972 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800892e:	f010 fae4 	bl	8018efa <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008932:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008934:	2b01      	cmp	r3, #1
 8008936:	d803      	bhi.n	8008940 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008938:	4b13      	ldr	r3, [pc, #76]	; (8008988 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800893a:	4a14      	ldr	r2, [pc, #80]	; (800898c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800893c:	21cb      	movs	r1, #203	; 0xcb
 800893e:	e7ee      	b.n	800891e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008940:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008942:	1c53      	adds	r3, r2, #1
 8008944:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008946:	2b09      	cmp	r3, #9
 8008948:	4619      	mov	r1, r3
 800894a:	bf88      	it	hi
 800894c:	f1a3 010a 	subhi.w	r1, r3, #10
 8008950:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008954:	f640 103f 	movw	r0, #2367	; 0x93f
 8008958:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800895a:	4281      	cmp	r1, r0
 800895c:	d109      	bne.n	8008972 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800895e:	2b0a      	cmp	r3, #10
 8008960:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008964:	bf28      	it	cs
 8008966:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008968:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800896c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800896e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008970:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008972:	4620      	mov	r0, r4
}
 8008974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008978:	f010 b9c2 	b.w	8018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800897c:	0802ee20 	.word	0x0802ee20
 8008980:	0802ee29 	.word	0x0802ee29
 8008984:	0802eed4 	.word	0x0802eed4
 8008988:	0802ef1e 	.word	0x0802ef1e
 800898c:	0802ef2c 	.word	0x0802ef2c

08008990 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008990:	f010 b97d 	b.w	8018c8e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008994 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008994:	b510      	push	{r4, lr}
 8008996:	b086      	sub	sp, #24
 8008998:	ac02      	add	r4, sp, #8
 800899a:	e884 0006 	stmia.w	r4, {r1, r2}
 800899e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80089a0:	ab0a      	add	r3, sp, #40	; 0x28
 80089a2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80089a4:	9301      	str	r3, [sp, #4]
 80089a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80089a8:	9300      	str	r3, [sp, #0]
 80089aa:	4621      	mov	r1, r4
 80089ac:	9b08      	ldr	r3, [sp, #32]
 80089ae:	f00d fa2d 	bl	8015e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80089b2:	b006      	add	sp, #24
 80089b4:	bd10      	pop	{r4, pc}
	...

080089b8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80089b8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80089ba:	bb18      	cbnz	r0, 8008a04 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80089bc:	4b12      	ldr	r3, [pc, #72]	; (8008a08 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80089be:	4813      	ldr	r0, [pc, #76]	; (8008a0c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80089c0:	681c      	ldr	r4, [r3, #0]
 80089c2:	4913      	ldr	r1, [pc, #76]	; (8008a10 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80089c4:	b1b4      	cbz	r4, 80089f4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80089c6:	6822      	ldr	r2, [r4, #0]
 80089c8:	4422      	add	r2, r4
 80089ca:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80089cc:	6862      	ldr	r2, [r4, #4]
 80089ce:	4422      	add	r2, r4
 80089d0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80089d2:	68a2      	ldr	r2, [r4, #8]
 80089d4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80089d6:	4b0f      	ldr	r3, [pc, #60]	; (8008a14 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80089d8:	2200      	movs	r2, #0
 80089da:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80089dc:	f000 f838 	bl	8008a50 <_ZN17TypedTextDatabase8getFontsEv>
 80089e0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80089e2:	f000 f833 	bl	8008a4c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80089e6:	4b0c      	ldr	r3, [pc, #48]	; (8008a18 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80089e8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80089ea:	4b0c      	ldr	r3, [pc, #48]	; (8008a1c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80089ec:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80089ee:	4b0c      	ldr	r3, [pc, #48]	; (8008a20 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80089f0:	8018      	strh	r0, [r3, #0]
    }
}
 80089f2:	e007      	b.n	8008a04 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80089f4:	4b0b      	ldr	r3, [pc, #44]	; (8008a24 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80089f6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80089f8:	4b0b      	ldr	r3, [pc, #44]	; (8008a28 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80089fa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80089fc:	4b0b      	ldr	r3, [pc, #44]	; (8008a2c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80089fe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008a00:	2c00      	cmp	r4, #0
 8008a02:	d1e8      	bne.n	80089d6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008a04:	bd38      	pop	{r3, r4, r5, pc}
 8008a06:	bf00      	nop
 8008a08:	20002a70 	.word	0x20002a70
 8008a0c:	20002a74 	.word	0x20002a74
 8008a10:	20002a78 	.word	0x20002a78
 8008a14:	20002a7c 	.word	0x20002a7c
 8008a18:	2001390c 	.word	0x2001390c
 8008a1c:	20013914 	.word	0x20013914
 8008a20:	20013910 	.word	0x20013910
 8008a24:	08047f90 	.word	0x08047f90
 8008a28:	08047e1c 	.word	0x08047e1c
 8008a2c:	080484d8 	.word	0x080484d8

08008a30 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008a30:	4b04      	ldr	r3, [pc, #16]	; (8008a44 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008a32:	681b      	ldr	r3, [r3, #0]
 8008a34:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008a38:	4b03      	ldr	r3, [pc, #12]	; (8008a48 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008a3a:	681b      	ldr	r3, [r3, #0]
}
 8008a3c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008a40:	4770      	bx	lr
 8008a42:	bf00      	nop
 8008a44:	20002a78 	.word	0x20002a78
 8008a48:	20002a74 	.word	0x20002a74

08008a4c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008a4c:	205d      	movs	r0, #93	; 0x5d
 8008a4e:	4770      	bx	lr

08008a50 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008a50:	4800      	ldr	r0, [pc, #0]	; (8008a54 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008a52:	4770      	bx	lr
 8008a54:	20002a80 	.word	0x20002a80

08008a58 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008a58:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008a5a:	f7ff febf 	bl	80087dc <_Z23getFont_verdana_19_4bppv>
};
 8008a5e:	4c06      	ldr	r4, [pc, #24]	; (8008a78 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008a60:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008a62:	f7ff fef9 	bl	8008858 <_Z23getFont_verdana_40_4bppv>
};
 8008a66:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008a68:	f7ff fe3c 	bl	80086e4 <_Z23getFont_verdana_10_4bppv>
};
 8008a6c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008a6e:	f7ff fe77 	bl	8008760 <_Z23getFont_verdana_12_4bppv>
};
 8008a72:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008a74:	bd10      	pop	{r4, pc}
 8008a76:	bf00      	nop
 8008a78:	20002a80 	.word	0x20002a80

08008a7c <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8008a7c:	4770      	bx	lr

08008a7e <_ZThn4_N20CalibrationPresenterD1Ev>:
 8008a7e:	3804      	subs	r0, #4
 8008a80:	4770      	bx	lr

08008a82 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8008a82:	4770      	bx	lr

08008a84 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008a84:	68c0      	ldr	r0, [r0, #12]
 8008a86:	6803      	ldr	r3, [r0, #0]
 8008a88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a8a:	4718      	bx	r3

08008a8c <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008a8c:	f1a0 0004 	sub.w	r0, r0, #4
 8008a90:	f7ff bff8 	b.w	8008a84 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008a94 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008a94:	b510      	push	{r4, lr}
 8008a96:	2110      	movs	r1, #16
 8008a98:	4604      	mov	r4, r0
 8008a9a:	f021 feea 	bl	802a872 <_ZdlPvj>
 8008a9e:	4620      	mov	r0, r4
 8008aa0:	bd10      	pop	{r4, pc}

08008aa2 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008aa2:	f1a0 0004 	sub.w	r0, r0, #4
 8008aa6:	e7f5      	b.n	8008a94 <_ZN20CalibrationPresenterD0Ev>

08008aa8 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008aa8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008aaa:	2200      	movs	r2, #0
 8008aac:	6082      	str	r2, [r0, #8]
    : view(v)
 8008aae:	4a04      	ldr	r2, [pc, #16]	; (8008ac0 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008ab0:	60c1      	str	r1, [r0, #12]
 8008ab2:	f102 0408 	add.w	r4, r2, #8
 8008ab6:	3224      	adds	r2, #36	; 0x24
 8008ab8:	6004      	str	r4, [r0, #0]
 8008aba:	6042      	str	r2, [r0, #4]
}
 8008abc:	bd10      	pop	{r4, pc}
 8008abe:	bf00      	nop
 8008ac0:	0802f000 	.word	0x0802f000

08008ac4 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008ac4:	4770      	bx	lr
	...

08008ac8 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008ac8:	b510      	push	{r4, lr}
 8008aca:	4b03      	ldr	r3, [pc, #12]	; (8008ad8 <_ZN15CalibrationViewD1Ev+0x10>)
 8008acc:	6003      	str	r3, [r0, #0]
 8008ace:	4604      	mov	r4, r0
 8008ad0:	f7f9 fe3e 	bl	8002750 <_ZN19CalibrationViewBaseD1Ev>
 8008ad4:	4620      	mov	r0, r4
 8008ad6:	bd10      	pop	{r4, pc}
 8008ad8:	0802f03c 	.word	0x0802f03c

08008adc <_ZN15CalibrationViewD0Ev>:
 8008adc:	b510      	push	{r4, lr}
 8008ade:	4604      	mov	r4, r0
 8008ae0:	f7ff fff2 	bl	8008ac8 <_ZN15CalibrationViewD1Ev>
 8008ae4:	4620      	mov	r0, r4
 8008ae6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008aea:	f021 fec2 	bl	802a872 <_ZdlPvj>
 8008aee:	4620      	mov	r0, r4
 8008af0:	bd10      	pop	{r4, pc}
	...

08008af4 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008af4:	b510      	push	{r4, lr}
 8008af6:	4604      	mov	r4, r0
 8008af8:	f7f9 ff3e 	bl	8002978 <_ZN19CalibrationViewBaseC1Ev>
 8008afc:	4b01      	ldr	r3, [pc, #4]	; (8008b04 <_ZN15CalibrationViewC1Ev+0x10>)
 8008afe:	6023      	str	r3, [r4, #0]
}
 8008b00:	4620      	mov	r0, r4
 8008b02:	bd10      	pop	{r4, pc}
 8008b04:	0802f03c 	.word	0x0802f03c

08008b08 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008b08:	f7f9 bdef 	b.w	80026ea <_ZN19CalibrationViewBase11setupScreenEv>

08008b0c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008b0c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b0e:	4a0a      	ldr	r2, [pc, #40]	; (8008b38 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008b10:	4605      	mov	r5, r0
 8008b12:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b14:	460b      	mov	r3, r1
 8008b16:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008b1a:	2104      	movs	r1, #4
 8008b1c:	f010 ffa2 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008b20:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008b24:	f00e fed8 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008b28:	b92c      	cbnz	r4, 8008b36 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8008b2a:	f00d fded 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008b2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008b32:	f7fb be19 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008b36:	bd38      	pop	{r3, r4, r5, pc}
 8008b38:	0802f030 	.word	0x0802f030

08008b3c <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008b3c:	4770      	bx	lr

08008b3e <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8008b3e:	3804      	subs	r0, #4
 8008b40:	4770      	bx	lr

08008b42 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8008b42:	4770      	bx	lr

08008b44 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008b44:	4770      	bx	lr

08008b46 <_ZN25Calibration_HallPresenterD0Ev>:
 8008b46:	b510      	push	{r4, lr}
 8008b48:	2110      	movs	r1, #16
 8008b4a:	4604      	mov	r4, r0
 8008b4c:	f021 fe91 	bl	802a872 <_ZdlPvj>
 8008b50:	4620      	mov	r0, r4
 8008b52:	bd10      	pop	{r4, pc}

08008b54 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008b54:	f1a0 0004 	sub.w	r0, r0, #4
 8008b58:	e7f5      	b.n	8008b46 <_ZN25Calibration_HallPresenterD0Ev>

08008b5a <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8008b5a:	4770      	bx	lr

08008b5c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8008b5c:	b510      	push	{r4, lr}
 8008b5e:	2200      	movs	r2, #0
 8008b60:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b62:	4a04      	ldr	r2, [pc, #16]	; (8008b74 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8008b64:	60c1      	str	r1, [r0, #12]
 8008b66:	f102 0408 	add.w	r4, r2, #8
 8008b6a:	3224      	adds	r2, #36	; 0x24
 8008b6c:	6004      	str	r4, [r0, #0]
 8008b6e:	6042      	str	r2, [r0, #4]
}
 8008b70:	bd10      	pop	{r4, pc}
 8008b72:	bf00      	nop
 8008b74:	0802f06c 	.word	0x0802f06c

08008b78 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8008b78:	4770      	bx	lr

08008b7a <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8008b7a:	4770      	bx	lr

08008b7c <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8008b7c:	b510      	push	{r4, lr}
 8008b7e:	4b03      	ldr	r3, [pc, #12]	; (8008b8c <_ZN20Calibration_HallViewD1Ev+0x10>)
 8008b80:	6003      	str	r3, [r0, #0]
 8008b82:	4604      	mov	r4, r0
 8008b84:	f7fa f93c 	bl	8002e00 <_ZN24Calibration_HallViewBaseD1Ev>
 8008b88:	4620      	mov	r0, r4
 8008b8a:	bd10      	pop	{r4, pc}
 8008b8c:	0802f0a4 	.word	0x0802f0a4

08008b90 <_ZN20Calibration_HallViewD0Ev>:
 8008b90:	b510      	push	{r4, lr}
 8008b92:	4604      	mov	r4, r0
 8008b94:	f7ff fff2 	bl	8008b7c <_ZN20Calibration_HallViewD1Ev>
 8008b98:	4620      	mov	r0, r4
 8008b9a:	f241 015c 	movw	r1, #4188	; 0x105c
 8008b9e:	f021 fe68 	bl	802a872 <_ZdlPvj>
 8008ba2:	4620      	mov	r0, r4
 8008ba4:	bd10      	pop	{r4, pc}
	...

08008ba8 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008ba8:	b510      	push	{r4, lr}
 8008baa:	4604      	mov	r4, r0
 8008bac:	f7fa f950 	bl	8002e50 <_ZN24Calibration_HallViewBaseC1Ev>
 8008bb0:	4b01      	ldr	r3, [pc, #4]	; (8008bb8 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008bb2:	6023      	str	r3, [r4, #0]
}
 8008bb4:	4620      	mov	r0, r4
 8008bb6:	bd10      	pop	{r4, pc}
 8008bb8:	0802f0a4 	.word	0x0802f0a4

08008bbc <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8008bbc:	f7fa b8fc 	b.w	8002db8 <_ZN24Calibration_HallViewBase11setupScreenEv>

08008bc0 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008bc0:	4770      	bx	lr

08008bc2 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008bc2:	3804      	subs	r0, #4
 8008bc4:	4770      	bx	lr

08008bc6 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008bc6:	4770      	bx	lr

08008bc8 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008bc8:	4770      	bx	lr

08008bca <_ZN24Calibration_PadPresenterD0Ev>:
 8008bca:	b510      	push	{r4, lr}
 8008bcc:	2110      	movs	r1, #16
 8008bce:	4604      	mov	r4, r0
 8008bd0:	f021 fe4f 	bl	802a872 <_ZdlPvj>
 8008bd4:	4620      	mov	r0, r4
 8008bd6:	bd10      	pop	{r4, pc}

08008bd8 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008bd8:	f1a0 0004 	sub.w	r0, r0, #4
 8008bdc:	e7f5      	b.n	8008bca <_ZN24Calibration_PadPresenterD0Ev>

08008bde <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008bde:	4770      	bx	lr

08008be0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008be0:	b510      	push	{r4, lr}
 8008be2:	2200      	movs	r2, #0
 8008be4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008be6:	4a04      	ldr	r2, [pc, #16]	; (8008bf8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008be8:	60c1      	str	r1, [r0, #12]
 8008bea:	f102 0408 	add.w	r4, r2, #8
 8008bee:	3224      	adds	r2, #36	; 0x24
 8008bf0:	6004      	str	r4, [r0, #0]
 8008bf2:	6042      	str	r2, [r0, #4]
}
 8008bf4:	bd10      	pop	{r4, pc}
 8008bf6:	bf00      	nop
 8008bf8:	0802f0d4 	.word	0x0802f0d4

08008bfc <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008bfc:	4770      	bx	lr

08008bfe <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008bfe:	4770      	bx	lr

08008c00 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008c00:	b510      	push	{r4, lr}
 8008c02:	4b03      	ldr	r3, [pc, #12]	; (8008c10 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008c04:	6003      	str	r3, [r0, #0]
 8008c06:	4604      	mov	r4, r0
 8008c08:	f7fa faf4 	bl	80031f4 <_ZN23Calibration_PadViewBaseD1Ev>
 8008c0c:	4620      	mov	r0, r4
 8008c0e:	bd10      	pop	{r4, pc}
 8008c10:	0802f10c 	.word	0x0802f10c

08008c14 <_ZN19Calibration_PadViewD0Ev>:
 8008c14:	b510      	push	{r4, lr}
 8008c16:	4604      	mov	r4, r0
 8008c18:	f7ff fff2 	bl	8008c00 <_ZN19Calibration_PadViewD1Ev>
 8008c1c:	4620      	mov	r0, r4
 8008c1e:	f44f 51f5 	mov.w	r1, #7840	; 0x1ea0
 8008c22:	f021 fe26 	bl	802a872 <_ZdlPvj>
 8008c26:	4620      	mov	r0, r4
 8008c28:	bd10      	pop	{r4, pc}
	...

08008c2c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008c2c:	b510      	push	{r4, lr}
 8008c2e:	4604      	mov	r4, r0
 8008c30:	f7fa fb52 	bl	80032d8 <_ZN23Calibration_PadViewBaseC1Ev>
 8008c34:	4b01      	ldr	r3, [pc, #4]	; (8008c3c <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008c36:	6023      	str	r3, [r4, #0]
}
 8008c38:	4620      	mov	r0, r4
 8008c3a:	bd10      	pop	{r4, pc}
 8008c3c:	0802f10c 	.word	0x0802f10c

08008c40 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008c40:	f7fa baf1 	b.w	8003226 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008c44 <_ZN23Configuration_ContainerD1Ev>:

class Configuration_Container : public Configuration_ContainerBase
{
public:
    Configuration_Container();
    virtual ~Configuration_Container() {}
 8008c44:	b510      	push	{r4, lr}
 8008c46:	4b03      	ldr	r3, [pc, #12]	; (8008c54 <_ZN23Configuration_ContainerD1Ev+0x10>)
 8008c48:	6003      	str	r3, [r0, #0]
 8008c4a:	4604      	mov	r4, r0
 8008c4c:	f7fa fd60 	bl	8003710 <_ZN27Configuration_ContainerBaseD1Ev>
 8008c50:	4620      	mov	r0, r4
 8008c52:	bd10      	pop	{r4, pc}
 8008c54:	0802f150 	.word	0x0802f150

08008c58 <_ZN23Configuration_ContainerD0Ev>:
 8008c58:	b510      	push	{r4, lr}
 8008c5a:	4604      	mov	r4, r0
 8008c5c:	f7ff fff2 	bl	8008c44 <_ZN23Configuration_ContainerD1Ev>
 8008c60:	4620      	mov	r0, r4
 8008c62:	f240 6174 	movw	r1, #1652	; 0x674
 8008c66:	f021 fe04 	bl	802a872 <_ZdlPvj>
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	bd10      	pop	{r4, pc}
	...

08008c70 <_ZN23Configuration_ContainerC1Ev>:
#include <gui/containers/Configuration_Container.hpp>

Configuration_Container::Configuration_Container()
 8008c70:	b510      	push	{r4, lr}
 8008c72:	4604      	mov	r4, r0
 8008c74:	f7fa fd72 	bl	800375c <_ZN27Configuration_ContainerBaseC1Ev>
 8008c78:	4b01      	ldr	r3, [pc, #4]	; (8008c80 <_ZN23Configuration_ContainerC1Ev+0x10>)
 8008c7a:	6023      	str	r3, [r4, #0]
{

}
 8008c7c:	4620      	mov	r0, r4
 8008c7e:	bd10      	pop	{r4, pc}
 8008c80:	0802f150 	.word	0x0802f150

08008c84 <_ZN23Configuration_Container10initializeEv>:

void Configuration_Container::initialize()
{
    Configuration_ContainerBase::initialize();
 8008c84:	f7fa bd45 	b.w	8003712 <_ZN27Configuration_ContainerBase10initializeEv>

08008c88 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008c88:	4770      	bx	lr

08008c8a <_ZN19FrontendApplicationD0Ev>:
 8008c8a:	b510      	push	{r4, lr}
 8008c8c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008c90:	4604      	mov	r4, r0
 8008c92:	f021 fdee 	bl	802a872 <_ZdlPvj>
 8008c96:	4620      	mov	r0, r4
 8008c98:	bd10      	pop	{r4, pc}

08008c9a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008c9a:	b510      	push	{r4, lr}
 8008c9c:	4604      	mov	r4, r0
    {
        model.tick();
 8008c9e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008ca2:	f000 fafb 	bl	800929c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008ca6:	4620      	mov	r0, r4
    }
 8008ca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008cac:	f00d bdf0 	b.w	8016890 <_ZN8touchgfx11Application15handleTickEventEv>

08008cb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008cb0:	b510      	push	{r4, lr}
 8008cb2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008cb4:	f7fb fc28 	bl	8004508 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008cb8:	4b01      	ldr	r3, [pc, #4]	; (8008cc0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008cba:	6023      	str	r3, [r4, #0]
{

}
 8008cbc:	4620      	mov	r0, r4
 8008cbe:	bd10      	pop	{r4, pc}
 8008cc0:	0802f1e4 	.word	0x0802f1e4

08008cc4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008cc4:	4770      	bx	lr

08008cc6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008cc6:	3804      	subs	r0, #4
 8008cc8:	4770      	bx	lr

08008cca <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008cca:	4770      	bx	lr

08008ccc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008ccc:	68c0      	ldr	r0, [r0, #12]
 8008cce:	6803      	ldr	r3, [r0, #0]
 8008cd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cd2:	4718      	bx	r3

08008cd4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008cd4:	f1a0 0004 	sub.w	r0, r0, #4
 8008cd8:	f7ff bff8 	b.w	8008ccc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008cdc <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008cdc:	b510      	push	{r4, lr}
 8008cde:	2110      	movs	r1, #16
 8008ce0:	4604      	mov	r4, r0
 8008ce2:	f021 fdc6 	bl	802a872 <_ZdlPvj>
 8008ce6:	4620      	mov	r0, r4
 8008ce8:	bd10      	pop	{r4, pc}

08008cea <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008cea:	f1a0 0004 	sub.w	r0, r0, #4
 8008cee:	e7f5      	b.n	8008cdc <_ZN18Main_MenuPresenterD0Ev>

08008cf0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008cf0:	b510      	push	{r4, lr}
 8008cf2:	2200      	movs	r2, #0
 8008cf4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008cf6:	4a04      	ldr	r2, [pc, #16]	; (8008d08 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008cf8:	60c1      	str	r1, [r0, #12]
 8008cfa:	f102 0408 	add.w	r4, r2, #8
 8008cfe:	3224      	adds	r2, #36	; 0x24
 8008d00:	6004      	str	r4, [r0, #0]
 8008d02:	6042      	str	r2, [r0, #4]
}
 8008d04:	bd10      	pop	{r4, pc}
 8008d06:	bf00      	nop
 8008d08:	0802f230 	.word	0x0802f230

08008d0c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008d0c:	4770      	bx	lr
	...

08008d10 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008d10:	b510      	push	{r4, lr}
 8008d12:	4b03      	ldr	r3, [pc, #12]	; (8008d20 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008d14:	6003      	str	r3, [r0, #0]
 8008d16:	4604      	mov	r4, r0
 8008d18:	f7fc ff80 	bl	8005c1c <_ZN17Main_MenuViewBaseD1Ev>
 8008d1c:	4620      	mov	r0, r4
 8008d1e:	bd10      	pop	{r4, pc}
 8008d20:	0802f268 	.word	0x0802f268

08008d24 <_ZN13Main_MenuViewD0Ev>:
 8008d24:	b510      	push	{r4, lr}
 8008d26:	4604      	mov	r4, r0
 8008d28:	f7ff fff2 	bl	8008d10 <_ZN13Main_MenuViewD1Ev>
 8008d2c:	4620      	mov	r0, r4
 8008d2e:	f241 117c 	movw	r1, #4476	; 0x117c
 8008d32:	f021 fd9e 	bl	802a872 <_ZdlPvj>
 8008d36:	4620      	mov	r0, r4
 8008d38:	bd10      	pop	{r4, pc}
	...

08008d3c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008d3c:	b510      	push	{r4, lr}
 8008d3e:	4604      	mov	r4, r0
 8008d40:	f7fc ffb6 	bl	8005cb0 <_ZN17Main_MenuViewBaseC1Ev>
 8008d44:	4b01      	ldr	r3, [pc, #4]	; (8008d4c <_ZN13Main_MenuViewC1Ev+0x10>)
 8008d46:	6023      	str	r3, [r4, #0]
}
 8008d48:	4620      	mov	r0, r4
 8008d4a:	bd10      	pop	{r4, pc}
 8008d4c:	0802f268 	.word	0x0802f268

08008d50 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008d50:	f7fc bf40 	b.w	8005bd4 <_ZN17Main_MenuViewBase11setupScreenEv>

08008d54 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008d54:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d56:	4a0a      	ldr	r2, [pc, #40]	; (8008d80 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008d58:	4605      	mov	r5, r0
 8008d5a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d5c:	460b      	mov	r3, r1
 8008d5e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008d62:	2104      	movs	r1, #4
 8008d64:	f010 fe7e 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008d68:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d6c:	f00e fdb4 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d70:	b92c      	cbnz	r4, 8008d7e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008d72:	f00d fcc9 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d7a:	f7fb bcf5 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d7e:	bd38      	pop	{r3, r4, r5, pc}
 8008d80:	0802f030 	.word	0x0802f030

08008d84 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008d84:	4770      	bx	lr

08008d86 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008d86:	3804      	subs	r0, #4
 8008d88:	4770      	bx	lr

08008d8a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008d8a:	4770      	bx	lr

08008d8c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d8c:	68c0      	ldr	r0, [r0, #12]
 8008d8e:	6803      	ldr	r3, [r0, #0]
 8008d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d92:	4718      	bx	r3

08008d94 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d94:	f1a0 0004 	sub.w	r0, r0, #4
 8008d98:	f7ff bff8 	b.w	8008d8c <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008d9c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008d9c:	b510      	push	{r4, lr}
 8008d9e:	2110      	movs	r1, #16
 8008da0:	4604      	mov	r4, r0
 8008da2:	f021 fd66 	bl	802a872 <_ZdlPvj>
 8008da6:	4620      	mov	r0, r4
 8008da8:	bd10      	pop	{r4, pc}

08008daa <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008daa:	f1a0 0004 	sub.w	r0, r0, #4
 8008dae:	e7f5      	b.n	8008d9c <_ZN20MeasurementPresenterD0Ev>

08008db0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008db0:	b510      	push	{r4, lr}
 8008db2:	2200      	movs	r2, #0
 8008db4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008db6:	4a04      	ldr	r2, [pc, #16]	; (8008dc8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008db8:	60c1      	str	r1, [r0, #12]
 8008dba:	f102 0408 	add.w	r4, r2, #8
 8008dbe:	3224      	adds	r2, #36	; 0x24
 8008dc0:	6004      	str	r4, [r0, #0]
 8008dc2:	6042      	str	r2, [r0, #4]
}
 8008dc4:	bd10      	pop	{r4, pc}
 8008dc6:	bf00      	nop
 8008dc8:	0802f298 	.word	0x0802f298

08008dcc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008dcc:	4770      	bx	lr
	...

08008dd0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008dd0:	b510      	push	{r4, lr}
 8008dd2:	4b03      	ldr	r3, [pc, #12]	; (8008de0 <_ZN15MeasurementViewD1Ev+0x10>)
 8008dd4:	6003      	str	r3, [r0, #0]
 8008dd6:	4604      	mov	r4, r0
 8008dd8:	f7fd f9dc 	bl	8006194 <_ZN19MeasurementViewBaseD1Ev>
 8008ddc:	4620      	mov	r0, r4
 8008dde:	bd10      	pop	{r4, pc}
 8008de0:	0802f2d0 	.word	0x0802f2d0

08008de4 <_ZN15MeasurementViewD0Ev>:
 8008de4:	b510      	push	{r4, lr}
 8008de6:	4604      	mov	r4, r0
 8008de8:	f7ff fff2 	bl	8008dd0 <_ZN15MeasurementViewD1Ev>
 8008dec:	4620      	mov	r0, r4
 8008dee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008df2:	f021 fd3e 	bl	802a872 <_ZdlPvj>
 8008df6:	4620      	mov	r0, r4
 8008df8:	bd10      	pop	{r4, pc}
	...

08008dfc <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008dfc:	b510      	push	{r4, lr}
 8008dfe:	4604      	mov	r4, r0
 8008e00:	f7fd fa02 	bl	8006208 <_ZN19MeasurementViewBaseC1Ev>
 8008e04:	4b01      	ldr	r3, [pc, #4]	; (8008e0c <_ZN15MeasurementViewC1Ev+0x10>)
 8008e06:	6023      	str	r3, [r4, #0]
}
 8008e08:	4620      	mov	r0, r4
 8008e0a:	bd10      	pop	{r4, pc}
 8008e0c:	0802f2d0 	.word	0x0802f2d0

08008e10 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008e10:	f7fd b99c 	b.w	800614c <_ZN19MeasurementViewBase11setupScreenEv>

08008e14 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008e14:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e16:	4a0a      	ldr	r2, [pc, #40]	; (8008e40 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008e18:	4605      	mov	r5, r0
 8008e1a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e1c:	460b      	mov	r3, r1
 8008e1e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008e22:	2104      	movs	r1, #4
 8008e24:	f010 fe1e 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008e28:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e2c:	f00e fd54 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e30:	b92c      	cbnz	r4, 8008e3e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008e32:	f00d fc69 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e3a:	f7fb bc95 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e3e:	bd38      	pop	{r3, r4, r5, pc}
 8008e40:	0802f030 	.word	0x0802f030

08008e44 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008e44:	4770      	bx	lr

08008e46 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008e46:	3804      	subs	r0, #4
 8008e48:	4770      	bx	lr

08008e4a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008e4a:	4770      	bx	lr

08008e4c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e4c:	68c0      	ldr	r0, [r0, #12]
 8008e4e:	6803      	ldr	r3, [r0, #0]
 8008e50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e52:	4718      	bx	r3

08008e54 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e54:	f1a0 0004 	sub.w	r0, r0, #4
 8008e58:	f7ff bff8 	b.w	8008e4c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008e5c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008e5c:	b510      	push	{r4, lr}
 8008e5e:	2110      	movs	r1, #16
 8008e60:	4604      	mov	r4, r0
 8008e62:	f021 fd06 	bl	802a872 <_ZdlPvj>
 8008e66:	4620      	mov	r0, r4
 8008e68:	bd10      	pop	{r4, pc}

08008e6a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008e6a:	f1a0 0004 	sub.w	r0, r0, #4
 8008e6e:	e7f5      	b.n	8008e5c <_ZN29Measurement_AccuratePresenterD0Ev>

08008e70 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008e70:	b510      	push	{r4, lr}
 8008e72:	2200      	movs	r2, #0
 8008e74:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e76:	4a04      	ldr	r2, [pc, #16]	; (8008e88 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008e78:	60c1      	str	r1, [r0, #12]
 8008e7a:	f102 0408 	add.w	r4, r2, #8
 8008e7e:	3224      	adds	r2, #36	; 0x24
 8008e80:	6004      	str	r4, [r0, #0]
 8008e82:	6042      	str	r2, [r0, #4]
}
 8008e84:	bd10      	pop	{r4, pc}
 8008e86:	bf00      	nop
 8008e88:	0802f300 	.word	0x0802f300

08008e8c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008e8c:	4770      	bx	lr
	...

08008e90 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008e90:	b510      	push	{r4, lr}
 8008e92:	4b03      	ldr	r3, [pc, #12]	; (8008ea0 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008e94:	6003      	str	r3, [r0, #0]
 8008e96:	4604      	mov	r4, r0
 8008e98:	f7fd fbfe 	bl	8006698 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008e9c:	4620      	mov	r0, r4
 8008e9e:	bd10      	pop	{r4, pc}
 8008ea0:	0802f338 	.word	0x0802f338

08008ea4 <_ZN24Measurement_AccurateViewD0Ev>:
 8008ea4:	b510      	push	{r4, lr}
 8008ea6:	4604      	mov	r4, r0
 8008ea8:	f7ff fff2 	bl	8008e90 <_ZN24Measurement_AccurateViewD1Ev>
 8008eac:	4620      	mov	r0, r4
 8008eae:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008eb2:	f021 fcde 	bl	802a872 <_ZdlPvj>
 8008eb6:	4620      	mov	r0, r4
 8008eb8:	bd10      	pop	{r4, pc}
	...

08008ebc <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008ebc:	b510      	push	{r4, lr}
 8008ebe:	4604      	mov	r4, r0
 8008ec0:	f7fd fc24 	bl	800670c <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008ec4:	4b01      	ldr	r3, [pc, #4]	; (8008ecc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008ec6:	6023      	str	r3, [r4, #0]
}
 8008ec8:	4620      	mov	r0, r4
 8008eca:	bd10      	pop	{r4, pc}
 8008ecc:	0802f338 	.word	0x0802f338

08008ed0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008ed0:	f7fd bbbe 	b.w	8006650 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008ed4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008ed4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ed6:	4a0a      	ldr	r2, [pc, #40]	; (8008f00 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008ed8:	4605      	mov	r5, r0
 8008eda:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008edc:	460b      	mov	r3, r1
 8008ede:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008ee2:	2104      	movs	r1, #4
 8008ee4:	f010 fdbe 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ee8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008eec:	f00e fcf4 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008ef0:	b92c      	cbnz	r4, 8008efe <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008ef2:	f00d fc09 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008ef6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008efa:	f7fb bc35 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008efe:	bd38      	pop	{r3, r4, r5, pc}
 8008f00:	0802f030 	.word	0x0802f030

08008f04 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008f04:	4770      	bx	lr

08008f06 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008f06:	3804      	subs	r0, #4
 8008f08:	4770      	bx	lr

08008f0a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008f0a:	4770      	bx	lr

08008f0c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008f0c:	4770      	bx	lr

08008f0e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f0e:	b510      	push	{r4, lr}
 8008f10:	2110      	movs	r1, #16
 8008f12:	4604      	mov	r4, r0
 8008f14:	f021 fcad 	bl	802a872 <_ZdlPvj>
 8008f18:	4620      	mov	r0, r4
 8008f1a:	bd10      	pop	{r4, pc}

08008f1c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f1c:	f1a0 0004 	sub.w	r0, r0, #4
 8008f20:	e7f5      	b.n	8008f0e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008f22 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008f22:	4770      	bx	lr

08008f24 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008f24:	b510      	push	{r4, lr}
 8008f26:	2200      	movs	r2, #0
 8008f28:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f2a:	4a04      	ldr	r2, [pc, #16]	; (8008f3c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008f2c:	60c1      	str	r1, [r0, #12]
 8008f2e:	f102 0408 	add.w	r4, r2, #8
 8008f32:	3224      	adds	r2, #36	; 0x24
 8008f34:	6004      	str	r4, [r0, #0]
 8008f36:	6042      	str	r2, [r0, #4]
}
 8008f38:	bd10      	pop	{r4, pc}
 8008f3a:	bf00      	nop
 8008f3c:	0802f368 	.word	0x0802f368

08008f40 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008f40:	4770      	bx	lr
	...

08008f44 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008f44:	b510      	push	{r4, lr}
 8008f46:	4b03      	ldr	r3, [pc, #12]	; (8008f54 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008f48:	6003      	str	r3, [r0, #0]
 8008f4a:	4604      	mov	r4, r0
 8008f4c:	f7fd fe22 	bl	8006b94 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008f50:	4620      	mov	r0, r4
 8008f52:	bd10      	pop	{r4, pc}
 8008f54:	0802f3a0 	.word	0x0802f3a0

08008f58 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008f58:	b510      	push	{r4, lr}
 8008f5a:	4604      	mov	r4, r0
 8008f5c:	f7ff fff2 	bl	8008f44 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008f60:	4620      	mov	r0, r4
 8008f62:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f66:	f021 fc84 	bl	802a872 <_ZdlPvj>
 8008f6a:	4620      	mov	r0, r4
 8008f6c:	bd10      	pop	{r4, pc}
	...

08008f70 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008f70:	b510      	push	{r4, lr}
 8008f72:	4604      	mov	r4, r0
 8008f74:	f7fd fe36 	bl	8006be4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008f78:	4b01      	ldr	r3, [pc, #4]	; (8008f80 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008f7a:	6023      	str	r3, [r4, #0]
}
 8008f7c:	4620      	mov	r0, r4
 8008f7e:	bd10      	pop	{r4, pc}
 8008f80:	0802f3a0 	.word	0x0802f3a0

08008f84 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008f84:	f7fd bde2 	b.w	8006b4c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008f88 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008f88:	4770      	bx	lr

08008f8a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008f8a:	3804      	subs	r0, #4
 8008f8c:	4770      	bx	lr

08008f8e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008f8e:	4770      	bx	lr

08008f90 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008f90:	4770      	bx	lr

08008f92 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f92:	b510      	push	{r4, lr}
 8008f94:	2110      	movs	r1, #16
 8008f96:	4604      	mov	r4, r0
 8008f98:	f021 fc6b 	bl	802a872 <_ZdlPvj>
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	bd10      	pop	{r4, pc}

08008fa0 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008fa0:	f1a0 0004 	sub.w	r0, r0, #4
 8008fa4:	e7f5      	b.n	8008f92 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008fa6 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008fa6:	4770      	bx	lr

08008fa8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008fa8:	b510      	push	{r4, lr}
 8008faa:	2200      	movs	r2, #0
 8008fac:	6082      	str	r2, [r0, #8]
    : view(v)
 8008fae:	4a04      	ldr	r2, [pc, #16]	; (8008fc0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008fb0:	60c1      	str	r1, [r0, #12]
 8008fb2:	f102 0408 	add.w	r4, r2, #8
 8008fb6:	3224      	adds	r2, #36	; 0x24
 8008fb8:	6004      	str	r4, [r0, #0]
 8008fba:	6042      	str	r2, [r0, #4]
}
 8008fbc:	bd10      	pop	{r4, pc}
 8008fbe:	bf00      	nop
 8008fc0:	0802f3cc 	.word	0x0802f3cc

08008fc4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008fc4:	4770      	bx	lr
	...

08008fc8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008fc8:	b510      	push	{r4, lr}
 8008fca:	4b03      	ldr	r3, [pc, #12]	; (8008fd8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008fcc:	6003      	str	r3, [r0, #0]
 8008fce:	4604      	mov	r4, r0
 8008fd0:	f7fd ff90 	bl	8006ef4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008fd4:	4620      	mov	r0, r4
 8008fd6:	bd10      	pop	{r4, pc}
 8008fd8:	0802f404 	.word	0x0802f404

08008fdc <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008fdc:	b510      	push	{r4, lr}
 8008fde:	4604      	mov	r4, r0
 8008fe0:	f7ff fff2 	bl	8008fc8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008fe4:	4620      	mov	r0, r4
 8008fe6:	f241 015c 	movw	r1, #4188	; 0x105c
 8008fea:	f021 fc42 	bl	802a872 <_ZdlPvj>
 8008fee:	4620      	mov	r0, r4
 8008ff0:	bd10      	pop	{r4, pc}
	...

08008ff4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008ff4:	b510      	push	{r4, lr}
 8008ff6:	4604      	mov	r4, r0
 8008ff8:	f7fd ffa4 	bl	8006f44 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008ffc:	4b01      	ldr	r3, [pc, #4]	; (8009004 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008ffe:	6023      	str	r3, [r4, #0]
}
 8009000:	4620      	mov	r0, r4
 8009002:	bd10      	pop	{r4, pc}
 8009004:	0802f404 	.word	0x0802f404

08009008 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009008:	f7fd bf50 	b.w	8006eac <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800900c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800900c:	4770      	bx	lr

0800900e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800900e:	3804      	subs	r0, #4
 8009010:	4770      	bx	lr

08009012 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009012:	4770      	bx	lr

08009014 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009014:	68c0      	ldr	r0, [r0, #12]
 8009016:	6803      	ldr	r3, [r0, #0]
 8009018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800901a:	4718      	bx	r3

0800901c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800901c:	f1a0 0004 	sub.w	r0, r0, #4
 8009020:	f7ff bff8 	b.w	8009014 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009024 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009024:	b510      	push	{r4, lr}
 8009026:	2110      	movs	r1, #16
 8009028:	4604      	mov	r4, r0
 800902a:	f021 fc22 	bl	802a872 <_ZdlPvj>
 800902e:	4620      	mov	r0, r4
 8009030:	bd10      	pop	{r4, pc}

08009032 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009032:	f1a0 0004 	sub.w	r0, r0, #4
 8009036:	e7f5      	b.n	8009024 <_ZN27Measurement_SinglePresenterD0Ev>

08009038 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009038:	b510      	push	{r4, lr}
 800903a:	2200      	movs	r2, #0
 800903c:	6082      	str	r2, [r0, #8]
    : view(v)
 800903e:	4a04      	ldr	r2, [pc, #16]	; (8009050 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009040:	60c1      	str	r1, [r0, #12]
 8009042:	f102 0408 	add.w	r4, r2, #8
 8009046:	3224      	adds	r2, #36	; 0x24
 8009048:	6004      	str	r4, [r0, #0]
 800904a:	6042      	str	r2, [r0, #4]
}
 800904c:	bd10      	pop	{r4, pc}
 800904e:	bf00      	nop
 8009050:	0802f430 	.word	0x0802f430

08009054 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009054:	4770      	bx	lr
	...

08009058 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009058:	b510      	push	{r4, lr}
 800905a:	4b03      	ldr	r3, [pc, #12]	; (8009068 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800905c:	6003      	str	r3, [r0, #0]
 800905e:	4604      	mov	r4, r0
 8009060:	f7fe f8f8 	bl	8007254 <_ZN26Measurement_SingleViewBaseD1Ev>
 8009064:	4620      	mov	r0, r4
 8009066:	bd10      	pop	{r4, pc}
 8009068:	0802f468 	.word	0x0802f468

0800906c <_ZN22Measurement_SingleViewD0Ev>:
 800906c:	b510      	push	{r4, lr}
 800906e:	4604      	mov	r4, r0
 8009070:	f7ff fff2 	bl	8009058 <_ZN22Measurement_SingleViewD1Ev>
 8009074:	4620      	mov	r0, r4
 8009076:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800907a:	f021 fbfa 	bl	802a872 <_ZdlPvj>
 800907e:	4620      	mov	r0, r4
 8009080:	bd10      	pop	{r4, pc}
	...

08009084 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009084:	b510      	push	{r4, lr}
 8009086:	4604      	mov	r4, r0
 8009088:	f7fe f91e 	bl	80072c8 <_ZN26Measurement_SingleViewBaseC1Ev>
 800908c:	4b01      	ldr	r3, [pc, #4]	; (8009094 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800908e:	6023      	str	r3, [r4, #0]
}
 8009090:	4620      	mov	r0, r4
 8009092:	bd10      	pop	{r4, pc}
 8009094:	0802f468 	.word	0x0802f468

08009098 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009098:	f7fe b8b8 	b.w	800720c <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800909c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800909c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800909e:	4a0a      	ldr	r2, [pc, #40]	; (80090c8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80090a0:	4605      	mov	r5, r0
 80090a2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80090a4:	460b      	mov	r3, r1
 80090a6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80090aa:	2104      	movs	r1, #4
 80090ac:	f010 fcda 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80090b0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80090b4:	f00e fc10 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80090b8:	b92c      	cbnz	r4, 80090c6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80090ba:	f00d fb25 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80090be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80090c2:	f7fb bb51 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80090c6:	bd38      	pop	{r3, r4, r5, pc}
 80090c8:	0802f030 	.word	0x0802f030

080090cc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80090cc:	4770      	bx	lr

080090ce <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80090ce:	3804      	subs	r0, #4
 80090d0:	4770      	bx	lr

080090d2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80090d2:	4770      	bx	lr

080090d4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80090d4:	4770      	bx	lr

080090d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80090d6:	b510      	push	{r4, lr}
 80090d8:	2110      	movs	r1, #16
 80090da:	4604      	mov	r4, r0
 80090dc:	f021 fbc9 	bl	802a872 <_ZdlPvj>
 80090e0:	4620      	mov	r0, r4
 80090e2:	bd10      	pop	{r4, pc}

080090e4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80090e4:	f1a0 0004 	sub.w	r0, r0, #4
 80090e8:	e7f5      	b.n	80090d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080090ea <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80090ea:	4770      	bx	lr

080090ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80090ec:	b510      	push	{r4, lr}
 80090ee:	2200      	movs	r2, #0
 80090f0:	6082      	str	r2, [r0, #8]
    : view(v)
 80090f2:	4a04      	ldr	r2, [pc, #16]	; (8009104 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80090f4:	60c1      	str	r1, [r0, #12]
 80090f6:	f102 0408 	add.w	r4, r2, #8
 80090fa:	3224      	adds	r2, #36	; 0x24
 80090fc:	6004      	str	r4, [r0, #0]
 80090fe:	6042      	str	r2, [r0, #4]
}
 8009100:	bd10      	pop	{r4, pc}
 8009102:	bf00      	nop
 8009104:	0802f498 	.word	0x0802f498

08009108 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009108:	4770      	bx	lr
	...

0800910c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800910c:	b510      	push	{r4, lr}
 800910e:	4b03      	ldr	r3, [pc, #12]	; (800911c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009110:	6003      	str	r3, [r0, #0]
 8009112:	4604      	mov	r4, r0
 8009114:	f7fe fb22 	bl	800775c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009118:	4620      	mov	r0, r4
 800911a:	bd10      	pop	{r4, pc}
 800911c:	0802f4d8 	.word	0x0802f4d8

08009120 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009120:	b510      	push	{r4, lr}
 8009122:	4604      	mov	r4, r0
 8009124:	f7ff fff2 	bl	800910c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009128:	4620      	mov	r0, r4
 800912a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800912e:	f021 fba0 	bl	802a872 <_ZdlPvj>
 8009132:	4620      	mov	r0, r4
 8009134:	bd10      	pop	{r4, pc}
	...

08009138 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009138:	b510      	push	{r4, lr}
 800913a:	4604      	mov	r4, r0
 800913c:	f7fe fb48 	bl	80077d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009140:	4b01      	ldr	r3, [pc, #4]	; (8009148 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009142:	6023      	str	r3, [r4, #0]
}
 8009144:	4620      	mov	r0, r4
 8009146:	bd10      	pop	{r4, pc}
 8009148:	0802f4d8 	.word	0x0802f4d8

0800914c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800914c:	f7fe bae1 	b.w	8007712 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009150 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009150:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009152:	4e2a      	ldr	r6, [pc, #168]	; (80091fc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009154:	4f2a      	ldr	r7, [pc, #168]	; (8009200 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8009156:	4604      	mov	r4, r0
 8009158:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 800915a:	6803      	ldr	r3, [r0, #0]
{
 800915c:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 800915e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009160:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009162:	2201      	movs	r2, #1
 8009164:	2180      	movs	r1, #128	; 0x80
 8009166:	4638      	mov	r0, r7
 8009168:	f000 ffe2 	bl	800a130 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 800916c:	f7f7 fc30 	bl	80009d0 <updateGUI_test>
 8009170:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8009172:	f7f8 f92b 	bl	80013cc <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009176:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8009178:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800917a:	2001      	movs	r0, #1
 800917c:	f7f7 fb74 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8009180:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8009184:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009186:	ed8d 0a04 	vstr	s0, [sp, #16]
 800918a:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 800918e:	9001      	str	r0, [sp, #4]
 8009190:	f00a fb4e 	bl	8013830 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009194:	9801      	ldr	r0, [sp, #4]
 8009196:	f00e fb9f 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800919a:	462b      	mov	r3, r5
 800919c:	4a19      	ldr	r2, [pc, #100]	; (8009204 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 800919e:	210a      	movs	r1, #10
 80091a0:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80091a4:	f010 fc5e 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80091a8:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80091ac:	f00e fb94 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80091b0:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80091b2:	4a15      	ldr	r2, [pc, #84]	; (8009208 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091b4:	9303      	str	r3, [sp, #12]
 80091b6:	210a      	movs	r1, #10
 80091b8:	ab03      	add	r3, sp, #12
 80091ba:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80091be:	f010 fe3d 	bl	8019e3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80091c2:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80091c6:	f00e fb87 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80091ca:	9b05      	ldr	r3, [sp, #20]
 80091cc:	4a0e      	ldr	r2, [pc, #56]	; (8009208 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091ce:	9303      	str	r3, [sp, #12]
 80091d0:	210a      	movs	r1, #10
 80091d2:	ab03      	add	r3, sp, #12
 80091d4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80091d8:	f010 fe30 	bl	8019e3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80091dc:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80091e0:	f00e fb7a 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80091e4:	4638      	mov	r0, r7
 80091e6:	2200      	movs	r2, #0
 80091e8:	2180      	movs	r1, #128	; 0x80
 80091ea:	f000 ffa1 	bl	800a130 <HAL_GPIO_WritePin>
 80091ee:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091f0:	6803      	ldr	r3, [r0, #0]
 80091f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80091f4:	b007      	add	sp, #28
 80091f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091fa:	4718      	bx	r3
 80091fc:	200138b4 	.word	0x200138b4
 8009200:	40020000 	.word	0x40020000
 8009204:	0802f030 	.word	0x0802f030
 8009208:	0802f4c8 	.word	0x0802f4c8

0800920c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800920c:	4770      	bx	lr

0800920e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800920e:	3804      	subs	r0, #4
 8009210:	4770      	bx	lr

08009212 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8009212:	4770      	bx	lr

08009214 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009214:	4770      	bx	lr

08009216 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8009216:	b510      	push	{r4, lr}
 8009218:	2110      	movs	r1, #16
 800921a:	4604      	mov	r4, r0
 800921c:	f021 fb29 	bl	802a872 <_ZdlPvj>
 8009220:	4620      	mov	r0, r4
 8009222:	bd10      	pop	{r4, pc}

08009224 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009224:	f1a0 0004 	sub.w	r0, r0, #4
 8009228:	e7f5      	b.n	8009216 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800922a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800922a:	4770      	bx	lr

0800922c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800922c:	b510      	push	{r4, lr}
 800922e:	2200      	movs	r2, #0
 8009230:	6082      	str	r2, [r0, #8]
    : view(v)
 8009232:	4a04      	ldr	r2, [pc, #16]	; (8009244 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009234:	60c1      	str	r1, [r0, #12]
 8009236:	f102 0408 	add.w	r4, r2, #8
 800923a:	3224      	adds	r2, #36	; 0x24
 800923c:	6004      	str	r4, [r0, #0]
 800923e:	6042      	str	r2, [r0, #4]
}
 8009240:	bd10      	pop	{r4, pc}
 8009242:	bf00      	nop
 8009244:	0802f508 	.word	0x0802f508

08009248 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009248:	4770      	bx	lr
	...

0800924c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800924c:	b510      	push	{r4, lr}
 800924e:	4b03      	ldr	r3, [pc, #12]	; (800925c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009250:	6003      	str	r3, [r0, #0]
 8009252:	4604      	mov	r4, r0
 8009254:	f7fe fe2c 	bl	8007eb0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009258:	4620      	mov	r0, r4
 800925a:	bd10      	pop	{r4, pc}
 800925c:	0802f540 	.word	0x0802f540

08009260 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009260:	b510      	push	{r4, lr}
 8009262:	4604      	mov	r4, r0
 8009264:	f7ff fff2 	bl	800924c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009268:	4620      	mov	r0, r4
 800926a:	f241 015c 	movw	r1, #4188	; 0x105c
 800926e:	f021 fb00 	bl	802a872 <_ZdlPvj>
 8009272:	4620      	mov	r0, r4
 8009274:	bd10      	pop	{r4, pc}
	...

08009278 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009278:	b510      	push	{r4, lr}
 800927a:	4604      	mov	r4, r0
 800927c:	f7fe fe40 	bl	8007f00 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009280:	4b01      	ldr	r3, [pc, #4]	; (8009288 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009282:	6023      	str	r3, [r4, #0]
}
 8009284:	4620      	mov	r0, r4
 8009286:	bd10      	pop	{r4, pc}
 8009288:	0802f540 	.word	0x0802f540

0800928c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800928c:	f7fe bdec 	b.w	8007e68 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009290 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009290:	2100      	movs	r1, #0
 8009292:	223c      	movs	r2, #60	; 0x3c
 8009294:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009298:	4770      	bx	lr
	...

0800929c <_ZN5Model4tickEv>:

void Model::tick()
{
 800929c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800929e:	4d0a      	ldr	r5, [pc, #40]	; (80092c8 <_ZN5Model4tickEv+0x2c>)
{
 80092a0:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80092a2:	6828      	ldr	r0, [r5, #0]
 80092a4:	f004 faa4 	bl	800d7f0 <osMessageQueueGetCount>
 80092a8:	b168      	cbz	r0, 80092c6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80092aa:	2300      	movs	r3, #0
 80092ac:	6828      	ldr	r0, [r5, #0]
 80092ae:	461a      	mov	r2, r3
 80092b0:	1d21      	adds	r1, r4, #4
 80092b2:	f004 fa69 	bl	800d788 <osMessageQueueGet>
 80092b6:	b930      	cbnz	r0, 80092c6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80092b8:	6820      	ldr	r0, [r4, #0]
 80092ba:	6861      	ldr	r1, [r4, #4]
 80092bc:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80092be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80092c2:	689b      	ldr	r3, [r3, #8]
 80092c4:	4718      	bx	r3
}
 80092c6:	bd70      	pop	{r4, r5, r6, pc}
 80092c8:	200001d0 	.word	0x200001d0

080092cc <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80092cc:	4770      	bx	lr

080092ce <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80092ce:	3804      	subs	r0, #4
 80092d0:	4770      	bx	lr

080092d2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80092d2:	4770      	bx	lr

080092d4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80092d4:	68c0      	ldr	r0, [r0, #12]
 80092d6:	6803      	ldr	r3, [r0, #0]
 80092d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092da:	4718      	bx	r3

080092dc <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80092dc:	f1a0 0004 	sub.w	r0, r0, #4
 80092e0:	f7ff bff8 	b.w	80092d4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080092e4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80092e4:	b510      	push	{r4, lr}
 80092e6:	2110      	movs	r1, #16
 80092e8:	4604      	mov	r4, r0
 80092ea:	f021 fac2 	bl	802a872 <_ZdlPvj>
 80092ee:	4620      	mov	r0, r4
 80092f0:	bd10      	pop	{r4, pc}

080092f2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80092f2:	f1a0 0004 	sub.w	r0, r0, #4
 80092f6:	e7f5      	b.n	80092e4 <_ZN21Project_InfoPresenterD0Ev>

080092f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80092f8:	b510      	push	{r4, lr}
 80092fa:	2200      	movs	r2, #0
 80092fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80092fe:	4a04      	ldr	r2, [pc, #16]	; (8009310 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009300:	60c1      	str	r1, [r0, #12]
 8009302:	f102 0408 	add.w	r4, r2, #8
 8009306:	3224      	adds	r2, #36	; 0x24
 8009308:	6004      	str	r4, [r0, #0]
 800930a:	6042      	str	r2, [r0, #4]
}
 800930c:	bd10      	pop	{r4, pc}
 800930e:	bf00      	nop
 8009310:	0802f56c 	.word	0x0802f56c

08009314 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009314:	4770      	bx	lr
	...

08009318 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009318:	b510      	push	{r4, lr}
 800931a:	4b03      	ldr	r3, [pc, #12]	; (8009328 <_ZN16Project_InfoViewD1Ev+0x10>)
 800931c:	6003      	str	r3, [r0, #0]
 800931e:	4604      	mov	r4, r0
 8009320:	f7fe ff74 	bl	800820c <_ZN20Project_InfoViewBaseD1Ev>
 8009324:	4620      	mov	r0, r4
 8009326:	bd10      	pop	{r4, pc}
 8009328:	0802f5a4 	.word	0x0802f5a4

0800932c <_ZN16Project_InfoViewD0Ev>:
 800932c:	b510      	push	{r4, lr}
 800932e:	4604      	mov	r4, r0
 8009330:	f7ff fff2 	bl	8009318 <_ZN16Project_InfoViewD1Ev>
 8009334:	4620      	mov	r0, r4
 8009336:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800933a:	f021 fa9a 	bl	802a872 <_ZdlPvj>
 800933e:	4620      	mov	r0, r4
 8009340:	bd10      	pop	{r4, pc}
	...

08009344 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009344:	b510      	push	{r4, lr}
 8009346:	4604      	mov	r4, r0
 8009348:	f7fe ff88 	bl	800825c <_ZN20Project_InfoViewBaseC1Ev>
 800934c:	4b01      	ldr	r3, [pc, #4]	; (8009354 <_ZN16Project_InfoViewC1Ev+0x10>)
 800934e:	6023      	str	r3, [r4, #0]
}
 8009350:	4620      	mov	r0, r4
 8009352:	bd10      	pop	{r4, pc}
 8009354:	0802f5a4 	.word	0x0802f5a4

08009358 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009358:	f7fe bf34 	b.w	80081c4 <_ZN20Project_InfoViewBase11setupScreenEv>

0800935c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800935c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800935e:	4a0a      	ldr	r2, [pc, #40]	; (8009388 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009360:	4605      	mov	r5, r0
 8009362:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009364:	460b      	mov	r3, r1
 8009366:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800936a:	2104      	movs	r1, #4
 800936c:	f010 fb7a 	bl	8019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009370:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009374:	f00e fab0 	bl	80178d8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009378:	b92c      	cbnz	r4, 8009386 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800937a:	f00d f9c5 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800937e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009382:	f7fb b9f1 	b.w	8004768 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009386:	bd38      	pop	{r3, r4, r5, pc}
 8009388:	0802f030 	.word	0x0802f030

0800938c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800938c:	4770      	bx	lr

0800938e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800938e:	3804      	subs	r0, #4
 8009390:	4770      	bx	lr

08009392 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009392:	4770      	bx	lr

08009394 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009394:	4770      	bx	lr

08009396 <_ZN21Shutting_OffPresenterD0Ev>:
 8009396:	b510      	push	{r4, lr}
 8009398:	2110      	movs	r1, #16
 800939a:	4604      	mov	r4, r0
 800939c:	f021 fa69 	bl	802a872 <_ZdlPvj>
 80093a0:	4620      	mov	r0, r4
 80093a2:	bd10      	pop	{r4, pc}

080093a4 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80093a4:	f1a0 0004 	sub.w	r0, r0, #4
 80093a8:	e7f5      	b.n	8009396 <_ZN21Shutting_OffPresenterD0Ev>

080093aa <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80093aa:	4770      	bx	lr

080093ac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80093ac:	b510      	push	{r4, lr}
 80093ae:	2200      	movs	r2, #0
 80093b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80093b2:	4a04      	ldr	r2, [pc, #16]	; (80093c4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80093b4:	60c1      	str	r1, [r0, #12]
 80093b6:	f102 0408 	add.w	r4, r2, #8
 80093ba:	3224      	adds	r2, #36	; 0x24
 80093bc:	6004      	str	r4, [r0, #0]
 80093be:	6042      	str	r2, [r0, #4]
}
 80093c0:	bd10      	pop	{r4, pc}
 80093c2:	bf00      	nop
 80093c4:	0802f5d4 	.word	0x0802f5d4

080093c8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80093c8:	4770      	bx	lr
	...

080093cc <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80093cc:	b510      	push	{r4, lr}
 80093ce:	4b03      	ldr	r3, [pc, #12]	; (80093dc <_ZN16Shutting_OffViewD1Ev+0x10>)
 80093d0:	6003      	str	r3, [r0, #0]
 80093d2:	4604      	mov	r4, r0
 80093d4:	f7ff f910 	bl	80085f8 <_ZN20Shutting_OffViewBaseD1Ev>
 80093d8:	4620      	mov	r0, r4
 80093da:	bd10      	pop	{r4, pc}
 80093dc:	0802f60c 	.word	0x0802f60c

080093e0 <_ZN16Shutting_OffViewD0Ev>:
 80093e0:	b510      	push	{r4, lr}
 80093e2:	4604      	mov	r4, r0
 80093e4:	f7ff fff2 	bl	80093cc <_ZN16Shutting_OffViewD1Ev>
 80093e8:	4620      	mov	r0, r4
 80093ea:	2198      	movs	r1, #152	; 0x98
 80093ec:	f021 fa41 	bl	802a872 <_ZdlPvj>
 80093f0:	4620      	mov	r0, r4
 80093f2:	bd10      	pop	{r4, pc}

080093f4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80093f4:	b510      	push	{r4, lr}
 80093f6:	4604      	mov	r4, r0
 80093f8:	f7ff f908 	bl	800860c <_ZN20Shutting_OffViewBaseC1Ev>
 80093fc:	4b01      	ldr	r3, [pc, #4]	; (8009404 <_ZN16Shutting_OffViewC1Ev+0x10>)
 80093fe:	6023      	str	r3, [r4, #0]
}
 8009400:	4620      	mov	r0, r4
 8009402:	bd10      	pop	{r4, pc}
 8009404:	0802f60c 	.word	0x0802f60c

08009408 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009408:	f7ff b8f7 	b.w	80085fa <_ZN20Shutting_OffViewBase11setupScreenEv>

0800940c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800940c:	20f0      	movs	r0, #240	; 0xf0
 800940e:	4770      	bx	lr

08009410 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009410:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009414:	4770      	bx	lr
 8009416:	bf00      	nop

08009418 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009418:	2029      	movs	r0, #41	; 0x29
 800941a:	f7f7 be4f 	b.w	80010bc <LCD_IO_WriteReg>
 800941e:	bf00      	nop

08009420 <ili9341_DisplayOff>:
 8009420:	2028      	movs	r0, #40	; 0x28
 8009422:	f7f7 be4b 	b.w	80010bc <LCD_IO_WriteReg>
 8009426:	bf00      	nop

08009428 <ili9341_Init>:
{
 8009428:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800942a:	f7f7 fe0d 	bl	8001048 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800942e:	20ca      	movs	r0, #202	; 0xca
 8009430:	f7f7 fe44 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009434:	20c3      	movs	r0, #195	; 0xc3
 8009436:	f7f7 fe17 	bl	8001068 <LCD_IO_WriteData>
 800943a:	2008      	movs	r0, #8
 800943c:	f7f7 fe14 	bl	8001068 <LCD_IO_WriteData>
 8009440:	2050      	movs	r0, #80	; 0x50
 8009442:	f7f7 fe11 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009446:	20cf      	movs	r0, #207	; 0xcf
 8009448:	f7f7 fe38 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800944c:	2000      	movs	r0, #0
 800944e:	f7f7 fe0b 	bl	8001068 <LCD_IO_WriteData>
 8009452:	20c1      	movs	r0, #193	; 0xc1
 8009454:	f7f7 fe08 	bl	8001068 <LCD_IO_WriteData>
 8009458:	2030      	movs	r0, #48	; 0x30
 800945a:	f7f7 fe05 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800945e:	20ed      	movs	r0, #237	; 0xed
 8009460:	f7f7 fe2c 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009464:	2064      	movs	r0, #100	; 0x64
 8009466:	f7f7 fdff 	bl	8001068 <LCD_IO_WriteData>
 800946a:	2003      	movs	r0, #3
 800946c:	f7f7 fdfc 	bl	8001068 <LCD_IO_WriteData>
 8009470:	2012      	movs	r0, #18
 8009472:	f7f7 fdf9 	bl	8001068 <LCD_IO_WriteData>
 8009476:	2081      	movs	r0, #129	; 0x81
 8009478:	f7f7 fdf6 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800947c:	20e8      	movs	r0, #232	; 0xe8
 800947e:	f7f7 fe1d 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009482:	2085      	movs	r0, #133	; 0x85
 8009484:	f7f7 fdf0 	bl	8001068 <LCD_IO_WriteData>
 8009488:	2000      	movs	r0, #0
 800948a:	f7f7 fded 	bl	8001068 <LCD_IO_WriteData>
 800948e:	2078      	movs	r0, #120	; 0x78
 8009490:	f7f7 fdea 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009494:	20cb      	movs	r0, #203	; 0xcb
 8009496:	f7f7 fe11 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800949a:	2039      	movs	r0, #57	; 0x39
 800949c:	f7f7 fde4 	bl	8001068 <LCD_IO_WriteData>
 80094a0:	202c      	movs	r0, #44	; 0x2c
 80094a2:	f7f7 fde1 	bl	8001068 <LCD_IO_WriteData>
 80094a6:	2000      	movs	r0, #0
 80094a8:	f7f7 fdde 	bl	8001068 <LCD_IO_WriteData>
 80094ac:	2034      	movs	r0, #52	; 0x34
 80094ae:	f7f7 fddb 	bl	8001068 <LCD_IO_WriteData>
 80094b2:	2002      	movs	r0, #2
 80094b4:	f7f7 fdd8 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094b8:	20f7      	movs	r0, #247	; 0xf7
 80094ba:	f7f7 fdff 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094be:	2020      	movs	r0, #32
 80094c0:	f7f7 fdd2 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094c4:	20ea      	movs	r0, #234	; 0xea
 80094c6:	f7f7 fdf9 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094ca:	2000      	movs	r0, #0
 80094cc:	f7f7 fdcc 	bl	8001068 <LCD_IO_WriteData>
 80094d0:	2000      	movs	r0, #0
 80094d2:	f7f7 fdc9 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094d6:	20b1      	movs	r0, #177	; 0xb1
 80094d8:	f7f7 fdf0 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094dc:	2000      	movs	r0, #0
 80094de:	f7f7 fdc3 	bl	8001068 <LCD_IO_WriteData>
 80094e2:	201b      	movs	r0, #27
 80094e4:	f7f7 fdc0 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094e8:	20b6      	movs	r0, #182	; 0xb6
 80094ea:	f7f7 fde7 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094ee:	200a      	movs	r0, #10
 80094f0:	f7f7 fdba 	bl	8001068 <LCD_IO_WriteData>
 80094f4:	20a2      	movs	r0, #162	; 0xa2
 80094f6:	f7f7 fdb7 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094fa:	20c0      	movs	r0, #192	; 0xc0
 80094fc:	f7f7 fdde 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009500:	2010      	movs	r0, #16
 8009502:	f7f7 fdb1 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009506:	20c1      	movs	r0, #193	; 0xc1
 8009508:	f7f7 fdd8 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800950c:	2010      	movs	r0, #16
 800950e:	f7f7 fdab 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009512:	20c5      	movs	r0, #197	; 0xc5
 8009514:	f7f7 fdd2 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009518:	2045      	movs	r0, #69	; 0x45
 800951a:	f7f7 fda5 	bl	8001068 <LCD_IO_WriteData>
 800951e:	2015      	movs	r0, #21
 8009520:	f7f7 fda2 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009524:	20c7      	movs	r0, #199	; 0xc7
 8009526:	f7f7 fdc9 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800952a:	2090      	movs	r0, #144	; 0x90
 800952c:	f7f7 fd9c 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009530:	2036      	movs	r0, #54	; 0x36
 8009532:	f7f7 fdc3 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009536:	20c8      	movs	r0, #200	; 0xc8
 8009538:	f7f7 fd96 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800953c:	20f2      	movs	r0, #242	; 0xf2
 800953e:	f7f7 fdbd 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009542:	2000      	movs	r0, #0
 8009544:	f7f7 fd90 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009548:	20b0      	movs	r0, #176	; 0xb0
 800954a:	f7f7 fdb7 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800954e:	20c2      	movs	r0, #194	; 0xc2
 8009550:	f7f7 fd8a 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009554:	20b6      	movs	r0, #182	; 0xb6
 8009556:	f7f7 fdb1 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800955a:	200a      	movs	r0, #10
 800955c:	f7f7 fd84 	bl	8001068 <LCD_IO_WriteData>
 8009560:	20a7      	movs	r0, #167	; 0xa7
 8009562:	f7f7 fd81 	bl	8001068 <LCD_IO_WriteData>
 8009566:	2027      	movs	r0, #39	; 0x27
 8009568:	f7f7 fd7e 	bl	8001068 <LCD_IO_WriteData>
 800956c:	2004      	movs	r0, #4
 800956e:	f7f7 fd7b 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009572:	202a      	movs	r0, #42	; 0x2a
 8009574:	f7f7 fda2 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009578:	2000      	movs	r0, #0
 800957a:	f7f7 fd75 	bl	8001068 <LCD_IO_WriteData>
 800957e:	2000      	movs	r0, #0
 8009580:	f7f7 fd72 	bl	8001068 <LCD_IO_WriteData>
 8009584:	2000      	movs	r0, #0
 8009586:	f7f7 fd6f 	bl	8001068 <LCD_IO_WriteData>
 800958a:	20ef      	movs	r0, #239	; 0xef
 800958c:	f7f7 fd6c 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009590:	202b      	movs	r0, #43	; 0x2b
 8009592:	f7f7 fd93 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009596:	2000      	movs	r0, #0
 8009598:	f7f7 fd66 	bl	8001068 <LCD_IO_WriteData>
 800959c:	2000      	movs	r0, #0
 800959e:	f7f7 fd63 	bl	8001068 <LCD_IO_WriteData>
 80095a2:	2001      	movs	r0, #1
 80095a4:	f7f7 fd60 	bl	8001068 <LCD_IO_WriteData>
 80095a8:	203f      	movs	r0, #63	; 0x3f
 80095aa:	f7f7 fd5d 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095ae:	20f6      	movs	r0, #246	; 0xf6
 80095b0:	f7f7 fd84 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095b4:	2001      	movs	r0, #1
 80095b6:	f7f7 fd57 	bl	8001068 <LCD_IO_WriteData>
 80095ba:	2000      	movs	r0, #0
 80095bc:	f7f7 fd54 	bl	8001068 <LCD_IO_WriteData>
 80095c0:	2006      	movs	r0, #6
 80095c2:	f7f7 fd51 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095c6:	202c      	movs	r0, #44	; 0x2c
 80095c8:	f7f7 fd78 	bl	80010bc <LCD_IO_WriteReg>
  LCD_Delay(200);
 80095cc:	20c8      	movs	r0, #200	; 0xc8
 80095ce:	f7f7 fddd 	bl	800118c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80095d2:	2026      	movs	r0, #38	; 0x26
 80095d4:	f7f7 fd72 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095d8:	2001      	movs	r0, #1
 80095da:	f7f7 fd45 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095de:	20e0      	movs	r0, #224	; 0xe0
 80095e0:	f7f7 fd6c 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095e4:	200f      	movs	r0, #15
 80095e6:	f7f7 fd3f 	bl	8001068 <LCD_IO_WriteData>
 80095ea:	2029      	movs	r0, #41	; 0x29
 80095ec:	f7f7 fd3c 	bl	8001068 <LCD_IO_WriteData>
 80095f0:	2024      	movs	r0, #36	; 0x24
 80095f2:	f7f7 fd39 	bl	8001068 <LCD_IO_WriteData>
 80095f6:	200c      	movs	r0, #12
 80095f8:	f7f7 fd36 	bl	8001068 <LCD_IO_WriteData>
 80095fc:	200e      	movs	r0, #14
 80095fe:	f7f7 fd33 	bl	8001068 <LCD_IO_WriteData>
 8009602:	2009      	movs	r0, #9
 8009604:	f7f7 fd30 	bl	8001068 <LCD_IO_WriteData>
 8009608:	204e      	movs	r0, #78	; 0x4e
 800960a:	f7f7 fd2d 	bl	8001068 <LCD_IO_WriteData>
 800960e:	2078      	movs	r0, #120	; 0x78
 8009610:	f7f7 fd2a 	bl	8001068 <LCD_IO_WriteData>
 8009614:	203c      	movs	r0, #60	; 0x3c
 8009616:	f7f7 fd27 	bl	8001068 <LCD_IO_WriteData>
 800961a:	2009      	movs	r0, #9
 800961c:	f7f7 fd24 	bl	8001068 <LCD_IO_WriteData>
 8009620:	2013      	movs	r0, #19
 8009622:	f7f7 fd21 	bl	8001068 <LCD_IO_WriteData>
 8009626:	2005      	movs	r0, #5
 8009628:	f7f7 fd1e 	bl	8001068 <LCD_IO_WriteData>
 800962c:	2017      	movs	r0, #23
 800962e:	f7f7 fd1b 	bl	8001068 <LCD_IO_WriteData>
 8009632:	2011      	movs	r0, #17
 8009634:	f7f7 fd18 	bl	8001068 <LCD_IO_WriteData>
 8009638:	2000      	movs	r0, #0
 800963a:	f7f7 fd15 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800963e:	20e1      	movs	r0, #225	; 0xe1
 8009640:	f7f7 fd3c 	bl	80010bc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009644:	2000      	movs	r0, #0
 8009646:	f7f7 fd0f 	bl	8001068 <LCD_IO_WriteData>
 800964a:	2016      	movs	r0, #22
 800964c:	f7f7 fd0c 	bl	8001068 <LCD_IO_WriteData>
 8009650:	201b      	movs	r0, #27
 8009652:	f7f7 fd09 	bl	8001068 <LCD_IO_WriteData>
 8009656:	2004      	movs	r0, #4
 8009658:	f7f7 fd06 	bl	8001068 <LCD_IO_WriteData>
 800965c:	2011      	movs	r0, #17
 800965e:	f7f7 fd03 	bl	8001068 <LCD_IO_WriteData>
 8009662:	2007      	movs	r0, #7
 8009664:	f7f7 fd00 	bl	8001068 <LCD_IO_WriteData>
 8009668:	2031      	movs	r0, #49	; 0x31
 800966a:	f7f7 fcfd 	bl	8001068 <LCD_IO_WriteData>
 800966e:	2033      	movs	r0, #51	; 0x33
 8009670:	f7f7 fcfa 	bl	8001068 <LCD_IO_WriteData>
 8009674:	2042      	movs	r0, #66	; 0x42
 8009676:	f7f7 fcf7 	bl	8001068 <LCD_IO_WriteData>
 800967a:	2005      	movs	r0, #5
 800967c:	f7f7 fcf4 	bl	8001068 <LCD_IO_WriteData>
 8009680:	200c      	movs	r0, #12
 8009682:	f7f7 fcf1 	bl	8001068 <LCD_IO_WriteData>
 8009686:	200a      	movs	r0, #10
 8009688:	f7f7 fcee 	bl	8001068 <LCD_IO_WriteData>
 800968c:	2028      	movs	r0, #40	; 0x28
 800968e:	f7f7 fceb 	bl	8001068 <LCD_IO_WriteData>
 8009692:	202f      	movs	r0, #47	; 0x2f
 8009694:	f7f7 fce8 	bl	8001068 <LCD_IO_WriteData>
 8009698:	200f      	movs	r0, #15
 800969a:	f7f7 fce5 	bl	8001068 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800969e:	2011      	movs	r0, #17
 80096a0:	f7f7 fd0c 	bl	80010bc <LCD_IO_WriteReg>
  LCD_Delay(200);
 80096a4:	20c8      	movs	r0, #200	; 0xc8
 80096a6:	f7f7 fd71 	bl	800118c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80096aa:	2029      	movs	r0, #41	; 0x29
 80096ac:	f7f7 fd06 	bl	80010bc <LCD_IO_WriteReg>
}
 80096b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80096b4:	202c      	movs	r0, #44	; 0x2c
 80096b6:	f7f7 bd01 	b.w	80010bc <LCD_IO_WriteReg>
 80096ba:	bf00      	nop

080096bc <ili9341_ReadID>:
{
 80096bc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80096be:	f7f7 fcc3 	bl	8001048 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80096c2:	2103      	movs	r1, #3
 80096c4:	20d3      	movs	r0, #211	; 0xd3
 80096c6:	f7f7 fd23 	bl	8001110 <LCD_IO_ReadData>
}
 80096ca:	b280      	uxth	r0, r0
 80096cc:	bd08      	pop	{r3, pc}
 80096ce:	bf00      	nop

080096d0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80096d0:	221f      	movs	r2, #31
 80096d2:	210b      	movs	r1, #11
 80096d4:	b2c0      	uxtb	r0, r0
 80096d6:	f7f7 bc69 	b.w	8000fac <IOE_Write>
 80096da:	bf00      	nop

080096dc <stmpe811_Reset>:
{
 80096dc:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80096de:	b2c4      	uxtb	r4, r0
 80096e0:	2202      	movs	r2, #2
 80096e2:	2103      	movs	r1, #3
 80096e4:	4620      	mov	r0, r4
 80096e6:	f7f7 fc61 	bl	8000fac <IOE_Write>
  IOE_Delay(10); 
 80096ea:	200a      	movs	r0, #10
 80096ec:	f7f7 fcaa 	bl	8001044 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80096f0:	4620      	mov	r0, r4
 80096f2:	2200      	movs	r2, #0
 80096f4:	2103      	movs	r1, #3
 80096f6:	f7f7 fc59 	bl	8000fac <IOE_Write>
}
 80096fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80096fe:	2002      	movs	r0, #2
 8009700:	f7f7 bca0 	b.w	8001044 <IOE_Delay>

08009704 <stmpe811_ReadID>:
{
 8009704:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009706:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009708:	f7f7 fc4c 	bl	8000fa4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800970c:	2100      	movs	r1, #0
 800970e:	4620      	mov	r0, r4
 8009710:	f7f7 fc64 	bl	8000fdc <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009714:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009716:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009718:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800971a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800971c:	f7f7 fc5e 	bl	8000fdc <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009720:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009724:	b280      	uxth	r0, r0
 8009726:	bd10      	pop	{r4, pc}

08009728 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009728:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800972a:	b2c4      	uxtb	r4, r0
 800972c:	2140      	movs	r1, #64	; 0x40
 800972e:	4620      	mov	r0, r4
 8009730:	f7f7 fc54 	bl	8000fdc <IOE_Read>
  
  if(state > 0)
 8009734:	0603      	lsls	r3, r0, #24
 8009736:	d40b      	bmi.n	8009750 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009738:	4620      	mov	r0, r4
 800973a:	2201      	movs	r2, #1
 800973c:	214b      	movs	r1, #75	; 0x4b
 800973e:	f7f7 fc35 	bl	8000fac <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009742:	4620      	mov	r0, r4
 8009744:	2200      	movs	r2, #0
 8009746:	214b      	movs	r1, #75	; 0x4b
 8009748:	f7f7 fc30 	bl	8000fac <IOE_Write>
  uint8_t ret = 0;
 800974c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800974e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009750:	214c      	movs	r1, #76	; 0x4c
 8009752:	4620      	mov	r0, r4
 8009754:	f7f7 fc42 	bl	8000fdc <IOE_Read>
      ret = 1;
 8009758:	3800      	subs	r0, #0
 800975a:	bf18      	it	ne
 800975c:	2001      	movne	r0, #1
}
 800975e:	bd10      	pop	{r4, pc}

08009760 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009760:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009762:	210b      	movs	r1, #11
 8009764:	b2c0      	uxtb	r0, r0
 8009766:	f7f7 fc39 	bl	8000fdc <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800976a:	f000 001f 	and.w	r0, r0, #31
 800976e:	bd08      	pop	{r3, pc}

08009770 <stmpe811_TS_GetXY>:
{
 8009770:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009772:	2304      	movs	r3, #4
{
 8009774:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009776:	b2c4      	uxtb	r4, r0
{
 8009778:	4615      	mov	r5, r2
 800977a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800977c:	eb0d 0203 	add.w	r2, sp, r3
 8009780:	21d7      	movs	r1, #215	; 0xd7
 8009782:	4620      	mov	r0, r4
 8009784:	f7f7 fc46 	bl	8001014 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009788:	9b01      	ldr	r3, [sp, #4]
 800978a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800978c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800978e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009792:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009794:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009796:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009798:	2201      	movs	r2, #1
 800979a:	214b      	movs	r1, #75	; 0x4b
 800979c:	f7f7 fc06 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80097a0:	2200      	movs	r2, #0
 80097a2:	214b      	movs	r1, #75	; 0x4b
 80097a4:	4620      	mov	r0, r4
 80097a6:	f7f7 fc01 	bl	8000fac <IOE_Write>
}
 80097aa:	b002      	add	sp, #8
 80097ac:	bd70      	pop	{r4, r5, r6, pc}
 80097ae:	bf00      	nop

080097b0 <stmpe811_TS_Start>:
{
 80097b0:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097b2:	b2c4      	uxtb	r4, r0
 80097b4:	2104      	movs	r1, #4
 80097b6:	4620      	mov	r0, r4
 80097b8:	f7f7 fc10 	bl	8000fdc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097bc:	2104      	movs	r1, #4
 80097be:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097c2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097c4:	4620      	mov	r0, r4
 80097c6:	f7f7 fbf1 	bl	8000fac <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80097ca:	2117      	movs	r1, #23
 80097cc:	4620      	mov	r0, r4
 80097ce:	f7f7 fc05 	bl	8000fdc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80097d2:	2117      	movs	r1, #23
 80097d4:	f000 020f 	and.w	r2, r0, #15
 80097d8:	4620      	mov	r0, r4
 80097da:	f7f7 fbe7 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097de:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80097e2:	4620      	mov	r0, r4
 80097e4:	2104      	movs	r1, #4
 80097e6:	f7f7 fbe1 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80097ea:	2249      	movs	r2, #73	; 0x49
 80097ec:	2120      	movs	r1, #32
 80097ee:	4620      	mov	r0, r4
 80097f0:	f7f7 fbdc 	bl	8000fac <IOE_Write>
  IOE_Delay(2); 
 80097f4:	2002      	movs	r0, #2
 80097f6:	f7f7 fc25 	bl	8001044 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80097fa:	4620      	mov	r0, r4
 80097fc:	2201      	movs	r2, #1
 80097fe:	2121      	movs	r1, #33	; 0x21
 8009800:	f7f7 fbd4 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009804:	4620      	mov	r0, r4
 8009806:	229a      	movs	r2, #154	; 0x9a
 8009808:	2141      	movs	r1, #65	; 0x41
 800980a:	f7f7 fbcf 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800980e:	4620      	mov	r0, r4
 8009810:	2201      	movs	r2, #1
 8009812:	214a      	movs	r1, #74	; 0x4a
 8009814:	f7f7 fbca 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009818:	4620      	mov	r0, r4
 800981a:	2201      	movs	r2, #1
 800981c:	214b      	movs	r1, #75	; 0x4b
 800981e:	f7f7 fbc5 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009822:	4620      	mov	r0, r4
 8009824:	2200      	movs	r2, #0
 8009826:	214b      	movs	r1, #75	; 0x4b
 8009828:	f7f7 fbc0 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800982c:	4620      	mov	r0, r4
 800982e:	2201      	movs	r2, #1
 8009830:	2156      	movs	r1, #86	; 0x56
 8009832:	f7f7 fbbb 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009836:	4620      	mov	r0, r4
 8009838:	2201      	movs	r2, #1
 800983a:	2158      	movs	r1, #88	; 0x58
 800983c:	f7f7 fbb6 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009840:	4620      	mov	r0, r4
 8009842:	2201      	movs	r2, #1
 8009844:	2140      	movs	r1, #64	; 0x40
 8009846:	f7f7 fbb1 	bl	8000fac <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800984a:	4620      	mov	r0, r4
 800984c:	22ff      	movs	r2, #255	; 0xff
 800984e:	210b      	movs	r1, #11
 8009850:	f7f7 fbac 	bl	8000fac <IOE_Write>
}
 8009854:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009858:	2002      	movs	r0, #2
 800985a:	f7f7 bbf3 	b.w	8001044 <IOE_Delay>
 800985e:	bf00      	nop

08009860 <stmpe811_TS_DisableIT>:
{
 8009860:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009862:	b2c4      	uxtb	r4, r0
 8009864:	2109      	movs	r1, #9
 8009866:	4620      	mov	r0, r4
 8009868:	f7f7 fbb8 	bl	8000fdc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800986c:	2109      	movs	r1, #9
 800986e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009872:	4620      	mov	r0, r4
 8009874:	f7f7 fb9a 	bl	8000fac <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009878:	210a      	movs	r1, #10
 800987a:	4620      	mov	r0, r4
 800987c:	f7f7 fbae 	bl	8000fdc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009880:	210a      	movs	r1, #10
 8009882:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009886:	4620      	mov	r0, r4
}
 8009888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800988c:	f7f7 bb8e 	b.w	8000fac <IOE_Write>

08009890 <stmpe811_TS_EnableIT>:
{
 8009890:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009892:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009894:	f7f7 fb88 	bl	8000fa8 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009898:	210a      	movs	r1, #10
 800989a:	4620      	mov	r0, r4
 800989c:	f7f7 fb9e 	bl	8000fdc <IOE_Read>
  tmp |= Source; 
 80098a0:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80098a4:	b2c2      	uxtb	r2, r0
 80098a6:	210a      	movs	r1, #10
 80098a8:	4620      	mov	r0, r4
 80098aa:	f7f7 fb7f 	bl	8000fac <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80098ae:	2109      	movs	r1, #9
 80098b0:	4620      	mov	r0, r4
 80098b2:	f7f7 fb93 	bl	8000fdc <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80098b6:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098ba:	b2c2      	uxtb	r2, r0
 80098bc:	2109      	movs	r1, #9
 80098be:	4620      	mov	r0, r4
}
 80098c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098c4:	f7f7 bb72 	b.w	8000fac <IOE_Write>

080098c8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80098c8:	4a10      	ldr	r2, [pc, #64]	; (800990c <stmpe811_Init+0x44>)
 80098ca:	7813      	ldrb	r3, [r2, #0]
 80098cc:	4298      	cmp	r0, r3
 80098ce:	d004      	beq.n	80098da <stmpe811_Init+0x12>
 80098d0:	7851      	ldrb	r1, [r2, #1]
 80098d2:	4288      	cmp	r0, r1
 80098d4:	d001      	beq.n	80098da <stmpe811_Init+0x12>
 80098d6:	b113      	cbz	r3, 80098de <stmpe811_Init+0x16>
 80098d8:	b101      	cbz	r1, 80098dc <stmpe811_Init+0x14>
 80098da:	4770      	bx	lr
 80098dc:	2301      	movs	r3, #1
{
 80098de:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80098e0:	b2c4      	uxtb	r4, r0
 80098e2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80098e4:	f7f7 fb5e 	bl	8000fa4 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80098e8:	2202      	movs	r2, #2
 80098ea:	2103      	movs	r1, #3
 80098ec:	4620      	mov	r0, r4
 80098ee:	f7f7 fb5d 	bl	8000fac <IOE_Write>
  IOE_Delay(10); 
 80098f2:	200a      	movs	r0, #10
 80098f4:	f7f7 fba6 	bl	8001044 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80098f8:	4620      	mov	r0, r4
 80098fa:	2200      	movs	r2, #0
 80098fc:	2103      	movs	r1, #3
 80098fe:	f7f7 fb55 	bl	8000fac <IOE_Write>
}
 8009902:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009906:	2002      	movs	r0, #2
 8009908:	f7f7 bb9c 	b.w	8001044 <IOE_Delay>
 800990c:	20002a90 	.word	0x20002a90

08009910 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009910:	4b05      	ldr	r3, [pc, #20]	; (8009928 <SystemInit+0x18>)
 8009912:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009916:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800991a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800991e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009922:	6099      	str	r1, [r3, #8]
#endif
}
 8009924:	4770      	bx	lr
 8009926:	bf00      	nop
 8009928:	e000ed00 	.word	0xe000ed00

0800992c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800992c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800992e:	4b0b      	ldr	r3, [pc, #44]	; (800995c <HAL_Init+0x30>)
 8009930:	681a      	ldr	r2, [r3, #0]
 8009932:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009936:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009938:	681a      	ldr	r2, [r3, #0]
 800993a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800993e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009940:	681a      	ldr	r2, [r3, #0]
 8009942:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009946:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009948:	2003      	movs	r0, #3
 800994a:	f000 f82d 	bl	80099a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800994e:	2000      	movs	r0, #0
 8009950:	f7f7 fff0 	bl	8001934 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009954:	f7f7 fd6e 	bl	8001434 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009958:	2000      	movs	r0, #0
 800995a:	bd08      	pop	{r3, pc}
 800995c:	40023c00 	.word	0x40023c00

08009960 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009960:	4a03      	ldr	r2, [pc, #12]	; (8009970 <HAL_IncTick+0x10>)
 8009962:	4b04      	ldr	r3, [pc, #16]	; (8009974 <HAL_IncTick+0x14>)
 8009964:	6811      	ldr	r1, [r2, #0]
 8009966:	781b      	ldrb	r3, [r3, #0]
 8009968:	440b      	add	r3, r1
 800996a:	6013      	str	r3, [r2, #0]
}
 800996c:	4770      	bx	lr
 800996e:	bf00      	nop
 8009970:	20002a94 	.word	0x20002a94
 8009974:	20000094 	.word	0x20000094

08009978 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009978:	4b01      	ldr	r3, [pc, #4]	; (8009980 <HAL_GetTick+0x8>)
 800997a:	6818      	ldr	r0, [r3, #0]
}
 800997c:	4770      	bx	lr
 800997e:	bf00      	nop
 8009980:	20002a94 	.word	0x20002a94

08009984 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009984:	b538      	push	{r3, r4, r5, lr}
 8009986:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009988:	f7ff fff6 	bl	8009978 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800998c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800998e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009990:	d002      	beq.n	8009998 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009992:	4b04      	ldr	r3, [pc, #16]	; (80099a4 <HAL_Delay+0x20>)
 8009994:	781b      	ldrb	r3, [r3, #0]
 8009996:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009998:	f7ff ffee 	bl	8009978 <HAL_GetTick>
 800999c:	1b43      	subs	r3, r0, r5
 800999e:	42a3      	cmp	r3, r4
 80099a0:	d3fa      	bcc.n	8009998 <HAL_Delay+0x14>
  {
  }
}
 80099a2:	bd38      	pop	{r3, r4, r5, pc}
 80099a4:	20000094 	.word	0x20000094

080099a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80099a8:	4907      	ldr	r1, [pc, #28]	; (80099c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80099aa:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099ac:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099ae:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099b2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099b6:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80099b8:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80099ba:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80099be:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80099c2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80099c4:	4770      	bx	lr
 80099c6:	bf00      	nop
 80099c8:	e000ed00 	.word	0xe000ed00

080099cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80099cc:	4b1c      	ldr	r3, [pc, #112]	; (8009a40 <HAL_NVIC_SetPriority+0x74>)
 80099ce:	68db      	ldr	r3, [r3, #12]
 80099d0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80099d4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099d6:	f1c3 0e07 	rsb	lr, r3, #7
 80099da:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099de:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099e2:	bf28      	it	cs
 80099e4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099e8:	f1bc 0f06 	cmp.w	ip, #6
 80099ec:	d91b      	bls.n	8009a26 <HAL_NVIC_SetPriority+0x5a>
 80099ee:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80099f0:	f04f 3cff 	mov.w	ip, #4294967295
 80099f4:	fa0c fc03 	lsl.w	ip, ip, r3
 80099f8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80099fc:	f04f 3cff 	mov.w	ip, #4294967295
 8009a00:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009a04:	ea21 010c 	bic.w	r1, r1, ip
 8009a08:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009a0a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009a0c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009a10:	db0c      	blt.n	8009a2c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a12:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009a16:	0109      	lsls	r1, r1, #4
 8009a18:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009a1c:	b2c9      	uxtb	r1, r1
 8009a1e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009a22:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a26:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009a28:	4613      	mov	r3, r2
 8009a2a:	e7e7      	b.n	80099fc <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a2c:	4b05      	ldr	r3, [pc, #20]	; (8009a44 <HAL_NVIC_SetPriority+0x78>)
 8009a2e:	f000 000f 	and.w	r0, r0, #15
 8009a32:	0109      	lsls	r1, r1, #4
 8009a34:	4403      	add	r3, r0
 8009a36:	b2c9      	uxtb	r1, r1
 8009a38:	7619      	strb	r1, [r3, #24]
 8009a3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a3e:	bf00      	nop
 8009a40:	e000ed00 	.word	0xe000ed00
 8009a44:	e000ecfc 	.word	0xe000ecfc

08009a48 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009a48:	2800      	cmp	r0, #0
 8009a4a:	db07      	blt.n	8009a5c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009a4c:	0941      	lsrs	r1, r0, #5
 8009a4e:	4a04      	ldr	r2, [pc, #16]	; (8009a60 <HAL_NVIC_EnableIRQ+0x18>)
 8009a50:	f000 001f 	and.w	r0, r0, #31
 8009a54:	2301      	movs	r3, #1
 8009a56:	4083      	lsls	r3, r0
 8009a58:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009a5c:	4770      	bx	lr
 8009a5e:	bf00      	nop
 8009a60:	e000e100 	.word	0xe000e100

08009a64 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009a64:	b180      	cbz	r0, 8009a88 <HAL_CRC_Init+0x24>
{
 8009a66:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009a68:	7943      	ldrb	r3, [r0, #5]
 8009a6a:	4604      	mov	r4, r0
 8009a6c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a70:	b11b      	cbz	r3, 8009a7a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009a72:	2301      	movs	r3, #1
 8009a74:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009a76:	2000      	movs	r0, #0
}
 8009a78:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009a7a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009a7c:	f7f7 fcfa 	bl	8001474 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009a80:	2301      	movs	r3, #1
 8009a82:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009a84:	2000      	movs	r0, #0
}
 8009a86:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009a88:	2001      	movs	r0, #1
}
 8009a8a:	4770      	bx	lr

08009a8c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009a8c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009a90:	2b02      	cmp	r3, #2
 8009a92:	d003      	beq.n	8009a9c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009a94:	2380      	movs	r3, #128	; 0x80
 8009a96:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009a98:	2001      	movs	r0, #1
 8009a9a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009a9c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009a9e:	2305      	movs	r3, #5
 8009aa0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009aa4:	6813      	ldr	r3, [r2, #0]
 8009aa6:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009aaa:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009aac:	6013      	str	r3, [r2, #0]
}
 8009aae:	4770      	bx	lr

08009ab0 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009ab0:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009ab4:	4770      	bx	lr
 8009ab6:	bf00      	nop

08009ab8 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8009ab8:	4b21      	ldr	r3, [pc, #132]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009aba:	68da      	ldr	r2, [r3, #12]
 8009abc:	06d0      	lsls	r0, r2, #27
 8009abe:	d505      	bpl.n	8009acc <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ac0:	4920      	ldr	r1, [pc, #128]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009ac2:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009ac4:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ac6:	4302      	orrs	r2, r0
 8009ac8:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009aca:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009acc:	4b1c      	ldr	r3, [pc, #112]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009ace:	68da      	ldr	r2, [r3, #12]
 8009ad0:	0691      	lsls	r1, r2, #26
 8009ad2:	d506      	bpl.n	8009ae2 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ad4:	491b      	ldr	r1, [pc, #108]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009ad6:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ad8:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ada:	f042 0208 	orr.w	r2, r2, #8
 8009ade:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ae0:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009ae2:	4b17      	ldr	r3, [pc, #92]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009ae4:	68da      	ldr	r2, [r3, #12]
 8009ae6:	0652      	lsls	r2, r2, #25
 8009ae8:	d506      	bpl.n	8009af8 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009aea:	4916      	ldr	r1, [pc, #88]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009aec:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009aee:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009af0:	f042 0204 	orr.w	r2, r2, #4
 8009af4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009af6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009af8:	4b11      	ldr	r3, [pc, #68]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009afa:	68da      	ldr	r2, [r3, #12]
 8009afc:	0610      	lsls	r0, r2, #24
 8009afe:	d506      	bpl.n	8009b0e <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009b00:	4910      	ldr	r1, [pc, #64]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009b02:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009b04:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009b06:	f042 0202 	orr.w	r2, r2, #2
 8009b0a:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009b0c:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009b0e:	4b0c      	ldr	r3, [pc, #48]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009b10:	68da      	ldr	r2, [r3, #12]
 8009b12:	05d1      	lsls	r1, r2, #23
 8009b14:	d507      	bpl.n	8009b26 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b16:	490b      	ldr	r1, [pc, #44]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009b18:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b1a:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b1e:	f042 0201 	orr.w	r2, r2, #1
 8009b22:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b24:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009b26:	4b06      	ldr	r3, [pc, #24]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009b28:	68da      	ldr	r2, [r3, #12]
 8009b2a:	0792      	lsls	r2, r2, #30
 8009b2c:	d506      	bpl.n	8009b3c <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b2e:	4905      	ldr	r1, [pc, #20]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009b30:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b32:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b34:	f042 0220 	orr.w	r2, r2, #32
 8009b38:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b3a:	60d8      	str	r0, [r3, #12]
  }
}
 8009b3c:	4770      	bx	lr
 8009b3e:	bf00      	nop
 8009b40:	40023c00 	.word	0x40023c00
 8009b44:	20002a98 	.word	0x20002a98

08009b48 <HAL_FLASH_Program>:
{
 8009b48:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009b4c:	4f4d      	ldr	r7, [pc, #308]	; (8009c84 <HAL_FLASH_Program+0x13c>)
{
 8009b4e:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009b50:	7e3b      	ldrb	r3, [r7, #24]
 8009b52:	2b01      	cmp	r3, #1
 8009b54:	d060      	beq.n	8009c18 <HAL_FLASH_Program+0xd0>
 8009b56:	2301      	movs	r3, #1
 8009b58:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009b5a:	2300      	movs	r3, #0
 8009b5c:	4681      	mov	r9, r0
 8009b5e:	468a      	mov	sl, r1
 8009b60:	4690      	mov	r8, r2
 8009b62:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009b64:	f7ff ff08 	bl	8009978 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b68:	4d47      	ldr	r5, [pc, #284]	; (8009c88 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009b6a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b6c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b70:	e004      	b.n	8009b7c <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b72:	f7ff ff01 	bl	8009978 <HAL_GetTick>
 8009b76:	1b00      	subs	r0, r0, r4
 8009b78:	42b0      	cmp	r0, r6
 8009b7a:	d848      	bhi.n	8009c0e <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b7c:	68eb      	ldr	r3, [r5, #12]
 8009b7e:	03d8      	lsls	r0, r3, #15
 8009b80:	d4f7      	bmi.n	8009b72 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009b82:	68eb      	ldr	r3, [r5, #12]
 8009b84:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009b86:	bf44      	itt	mi
 8009b88:	2301      	movmi	r3, #1
 8009b8a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009b8c:	4b3e      	ldr	r3, [pc, #248]	; (8009c88 <HAL_FLASH_Program+0x140>)
 8009b8e:	68da      	ldr	r2, [r3, #12]
 8009b90:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009b94:	d154      	bne.n	8009c40 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009b96:	f1b9 0f00 	cmp.w	r9, #0
 8009b9a:	d040      	beq.n	8009c1e <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009b9c:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009ba0:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009ba2:	d051      	beq.n	8009c48 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009ba4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009ba8:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009baa:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009bae:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009bb0:	d05e      	beq.n	8009c70 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009bb2:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009bb6:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009bb8:	691a      	ldr	r2, [r3, #16]
 8009bba:	f042 0201 	orr.w	r2, r2, #1
 8009bbe:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009bc0:	f8ca 8000 	str.w	r8, [sl]
 8009bc4:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009bc8:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009bcc:	2300      	movs	r3, #0
 8009bce:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009bd0:	f7ff fed2 	bl	8009978 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bd4:	4d2c      	ldr	r5, [pc, #176]	; (8009c88 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009bd6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bd8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bdc:	e004      	b.n	8009be8 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bde:	f7ff fecb 	bl	8009978 <HAL_GetTick>
 8009be2:	1b00      	subs	r0, r0, r4
 8009be4:	42b0      	cmp	r0, r6
 8009be6:	d829      	bhi.n	8009c3c <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009be8:	68eb      	ldr	r3, [r5, #12]
 8009bea:	03da      	lsls	r2, r3, #15
 8009bec:	d4f7      	bmi.n	8009bde <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009bee:	68eb      	ldr	r3, [r5, #12]
 8009bf0:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009bf2:	bf44      	itt	mi
 8009bf4:	2301      	movmi	r3, #1
 8009bf6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009bf8:	4b23      	ldr	r3, [pc, #140]	; (8009c88 <HAL_FLASH_Program+0x140>)
 8009bfa:	68d8      	ldr	r0, [r3, #12]
 8009bfc:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009c00:	d132      	bne.n	8009c68 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009c02:	4a21      	ldr	r2, [pc, #132]	; (8009c88 <HAL_FLASH_Program+0x140>)
 8009c04:	6913      	ldr	r3, [r2, #16]
 8009c06:	f023 0301 	bic.w	r3, r3, #1
 8009c0a:	6113      	str	r3, [r2, #16]
 8009c0c:	e000      	b.n	8009c10 <HAL_FLASH_Program+0xc8>
 8009c0e:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009c10:	2300      	movs	r3, #0
 8009c12:	763b      	strb	r3, [r7, #24]
}
 8009c14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009c18:	2002      	movs	r0, #2
}
 8009c1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c1e:	691a      	ldr	r2, [r3, #16]
 8009c20:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c24:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009c26:	691a      	ldr	r2, [r3, #16]
 8009c28:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c2a:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009c2c:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c30:	f042 0201 	orr.w	r2, r2, #1
 8009c34:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009c36:	f88a 8000 	strb.w	r8, [sl]
}
 8009c3a:	e7c7      	b.n	8009bcc <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009c3c:	2003      	movs	r0, #3
 8009c3e:	e7e0      	b.n	8009c02 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009c40:	f7ff ff3a 	bl	8009ab8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c44:	2001      	movs	r0, #1
 8009c46:	e7e3      	b.n	8009c10 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c48:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c4c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009c4e:	691a      	ldr	r2, [r3, #16]
 8009c50:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009c54:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c56:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009c58:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c5c:	f042 0201 	orr.w	r2, r2, #1
 8009c60:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009c62:	f8aa 8000 	strh.w	r8, [sl]
}
 8009c66:	e7b1      	b.n	8009bcc <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009c68:	f7ff ff26 	bl	8009ab8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c6c:	2001      	movs	r0, #1
 8009c6e:	e7c8      	b.n	8009c02 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009c70:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c74:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c76:	691a      	ldr	r2, [r3, #16]
 8009c78:	f042 0201 	orr.w	r2, r2, #1
 8009c7c:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009c7e:	f8ca 8000 	str.w	r8, [sl]
}
 8009c82:	e7a3      	b.n	8009bcc <HAL_FLASH_Program+0x84>
 8009c84:	20002a98 	.word	0x20002a98
 8009c88:	40023c00 	.word	0x40023c00

08009c8c <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c8c:	4b06      	ldr	r3, [pc, #24]	; (8009ca8 <HAL_FLASH_Unlock+0x1c>)
 8009c8e:	691a      	ldr	r2, [r3, #16]
 8009c90:	2a00      	cmp	r2, #0
 8009c92:	db01      	blt.n	8009c98 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009c94:	2000      	movs	r0, #0
}
 8009c96:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c98:	4904      	ldr	r1, [pc, #16]	; (8009cac <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c9a:	4a05      	ldr	r2, [pc, #20]	; (8009cb0 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c9c:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c9e:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009ca0:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009ca2:	0fc0      	lsrs	r0, r0, #31
 8009ca4:	4770      	bx	lr
 8009ca6:	bf00      	nop
 8009ca8:	40023c00 	.word	0x40023c00
 8009cac:	45670123 	.word	0x45670123
 8009cb0:	cdef89ab 	.word	0xcdef89ab

08009cb4 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009cb4:	4a03      	ldr	r2, [pc, #12]	; (8009cc4 <HAL_FLASH_Lock+0x10>)
 8009cb6:	6913      	ldr	r3, [r2, #16]
 8009cb8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009cbc:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009cbe:	6113      	str	r3, [r2, #16]
}
 8009cc0:	4770      	bx	lr
 8009cc2:	bf00      	nop
 8009cc4:	40023c00 	.word	0x40023c00

08009cc8 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009cc8:	4b01      	ldr	r3, [pc, #4]	; (8009cd0 <HAL_FLASH_GetError+0x8>)
 8009cca:	69d8      	ldr	r0, [r3, #28]
}  
 8009ccc:	4770      	bx	lr
 8009cce:	bf00      	nop
 8009cd0:	20002a98 	.word	0x20002a98

08009cd4 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cd4:	4b14      	ldr	r3, [pc, #80]	; (8009d28 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009cd6:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cd8:	2200      	movs	r2, #0
{ 
 8009cda:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cdc:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009cde:	f7ff fe4b 	bl	8009978 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009ce2:	4e12      	ldr	r6, [pc, #72]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009ce4:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009ce6:	1c63      	adds	r3, r4, #1
 8009ce8:	d10f      	bne.n	8009d0a <FLASH_WaitForLastOperation+0x36>
 8009cea:	4a10      	ldr	r2, [pc, #64]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
 8009cec:	68d3      	ldr	r3, [r2, #12]
 8009cee:	03d8      	lsls	r0, r3, #15
 8009cf0:	d4fc      	bmi.n	8009cec <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009cf2:	4b0e      	ldr	r3, [pc, #56]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
 8009cf4:	68da      	ldr	r2, [r3, #12]
 8009cf6:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009cf8:	bf44      	itt	mi
 8009cfa:	2201      	movmi	r2, #1
 8009cfc:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009cfe:	4b0b      	ldr	r3, [pc, #44]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
 8009d00:	68d8      	ldr	r0, [r3, #12]
 8009d02:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009d06:	d10b      	bne.n	8009d20 <FLASH_WaitForLastOperation+0x4c>
}  
 8009d08:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009d0a:	68f3      	ldr	r3, [r6, #12]
 8009d0c:	03d9      	lsls	r1, r3, #15
 8009d0e:	d5f0      	bpl.n	8009cf2 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009d10:	b124      	cbz	r4, 8009d1c <FLASH_WaitForLastOperation+0x48>
 8009d12:	f7ff fe31 	bl	8009978 <HAL_GetTick>
 8009d16:	1b40      	subs	r0, r0, r5
 8009d18:	42a0      	cmp	r0, r4
 8009d1a:	d9e4      	bls.n	8009ce6 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009d1c:	2003      	movs	r0, #3
}  
 8009d1e:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009d20:	f7ff feca 	bl	8009ab8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009d24:	2001      	movs	r0, #1
}  
 8009d26:	bd70      	pop	{r4, r5, r6, pc}
 8009d28:	20002a98 	.word	0x20002a98
 8009d2c:	40023c00 	.word	0x40023c00

08009d30 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009d30:	4b14      	ldr	r3, [pc, #80]	; (8009d84 <FLASH_FlushCaches+0x54>)
 8009d32:	681a      	ldr	r2, [r3, #0]
 8009d34:	0591      	lsls	r1, r2, #22
 8009d36:	d50f      	bpl.n	8009d58 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009d3e:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009d40:	681a      	ldr	r2, [r3, #0]
 8009d42:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d46:	601a      	str	r2, [r3, #0]
 8009d48:	681a      	ldr	r2, [r3, #0]
 8009d4a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009d4e:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009d50:	681a      	ldr	r2, [r3, #0]
 8009d52:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d56:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009d58:	4b0a      	ldr	r3, [pc, #40]	; (8009d84 <FLASH_FlushCaches+0x54>)
 8009d5a:	681a      	ldr	r2, [r3, #0]
 8009d5c:	0552      	lsls	r2, r2, #21
 8009d5e:	d50f      	bpl.n	8009d80 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009d60:	681a      	ldr	r2, [r3, #0]
 8009d62:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d66:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009d68:	681a      	ldr	r2, [r3, #0]
 8009d6a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009d6e:	601a      	str	r2, [r3, #0]
 8009d70:	681a      	ldr	r2, [r3, #0]
 8009d72:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009d76:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009d78:	681a      	ldr	r2, [r3, #0]
 8009d7a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009d7e:	601a      	str	r2, [r3, #0]
  }
}
 8009d80:	4770      	bx	lr
 8009d82:	bf00      	nop
 8009d84:	40023c00 	.word	0x40023c00

08009d88 <HAL_FLASHEx_Erase>:
{
 8009d88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009d8c:	4f44      	ldr	r7, [pc, #272]	; (8009ea0 <HAL_FLASHEx_Erase+0x118>)
 8009d8e:	7e3b      	ldrb	r3, [r7, #24]
 8009d90:	2b01      	cmp	r3, #1
 8009d92:	d053      	beq.n	8009e3c <HAL_FLASHEx_Erase+0xb4>
 8009d94:	2301      	movs	r3, #1
 8009d96:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d98:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009d9c:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009d9e:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009da0:	f7ff ff98 	bl	8009cd4 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009da4:	4606      	mov	r6, r0
 8009da6:	2800      	cmp	r0, #0
 8009da8:	d143      	bne.n	8009e32 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009daa:	f04f 33ff 	mov.w	r3, #4294967295
 8009dae:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009db2:	f8d9 3000 	ldr.w	r3, [r9]
 8009db6:	2b01      	cmp	r3, #1
 8009db8:	d044      	beq.n	8009e44 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009dba:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009dbe:	442b      	add	r3, r5
 8009dc0:	429d      	cmp	r5, r3
 8009dc2:	d234      	bcs.n	8009e2e <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009dc4:	4c37      	ldr	r4, [pc, #220]	; (8009ea4 <HAL_FLASHEx_Erase+0x11c>)
 8009dc6:	e005      	b.n	8009dd4 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009dc8:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009dcc:	3501      	adds	r5, #1
 8009dce:	4413      	add	r3, r2
 8009dd0:	42ab      	cmp	r3, r5
 8009dd2:	d92c      	bls.n	8009e2e <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009dd4:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009dd8:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009dda:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009dde:	bf98      	it	ls
 8009de0:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009de2:	6923      	ldr	r3, [r4, #16]
 8009de4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009de8:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009dea:	6923      	ldr	r3, [r4, #16]
 8009dec:	430b      	orrs	r3, r1
 8009dee:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009df0:	6923      	ldr	r3, [r4, #16]
 8009df2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009df6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009df8:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009dfa:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009dfc:	bf8c      	ite	hi
 8009dfe:	1d2a      	addhi	r2, r5, #4
 8009e00:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009e02:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009e06:	f043 0302 	orr.w	r3, r3, #2
 8009e0a:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009e0c:	6923      	ldr	r3, [r4, #16]
 8009e0e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e12:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e14:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e18:	f7ff ff5c 	bl	8009cd4 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009e1c:	6923      	ldr	r3, [r4, #16]
 8009e1e:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009e22:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009e24:	2800      	cmp	r0, #0
 8009e26:	d0cf      	beq.n	8009dc8 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009e28:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e2c:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009e2e:	f7ff ff7f 	bl	8009d30 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009e32:	2300      	movs	r3, #0
 8009e34:	763b      	strb	r3, [r7, #24]
}
 8009e36:	4630      	mov	r0, r6
 8009e38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009e3c:	2602      	movs	r6, #2
}
 8009e3e:	4630      	mov	r0, r6
 8009e40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e44:	4a17      	ldr	r2, [pc, #92]	; (8009ea4 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e46:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e4a:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e4c:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e50:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009e54:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e56:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009e58:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e5a:	d01a      	beq.n	8009e92 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009e5c:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009e5e:	bf0c      	ite	eq
 8009e60:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009e64:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009e68:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009e6a:	4c0e      	ldr	r4, [pc, #56]	; (8009ea4 <HAL_FLASHEx_Erase+0x11c>)
 8009e6c:	021b      	lsls	r3, r3, #8
 8009e6e:	6922      	ldr	r2, [r4, #16]
 8009e70:	b29b      	uxth	r3, r3
 8009e72:	4313      	orrs	r3, r2
 8009e74:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e78:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e7a:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e7e:	f7ff ff29 	bl	8009cd4 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e82:	6923      	ldr	r3, [r4, #16]
 8009e84:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009e88:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e8c:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e8e:	6123      	str	r3, [r4, #16]
 8009e90:	e7cd      	b.n	8009e2e <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009e92:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009e96:	f041 0104 	orr.w	r1, r1, #4
 8009e9a:	6111      	str	r1, [r2, #16]
 8009e9c:	e7e5      	b.n	8009e6a <HAL_FLASHEx_Erase+0xe2>
 8009e9e:	bf00      	nop
 8009ea0:	20002a98 	.word	0x20002a98
 8009ea4:	40023c00 	.word	0x40023c00

08009ea8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009eac:	2200      	movs	r2, #0
 8009eae:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009eb0:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a114 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009eb4:	4e90      	ldr	r6, [pc, #576]	; (800a0f8 <HAL_GPIO_Init+0x250>)
{
 8009eb6:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009eb8:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009eba:	4689      	mov	r9, r1
 8009ebc:	e005      	b.n	8009eca <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ebe:	3301      	adds	r3, #1
 8009ec0:	2b10      	cmp	r3, #16
 8009ec2:	f102 0202 	add.w	r2, r2, #2
 8009ec6:	f000 8095 	beq.w	8009ff4 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009eca:	2101      	movs	r1, #1
 8009ecc:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009ece:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009ed2:	43a1      	bics	r1, r4
 8009ed4:	d1f3      	bne.n	8009ebe <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009ed6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009eda:	f00c 0103 	and.w	r1, ip, #3
 8009ede:	1e4d      	subs	r5, r1, #1
 8009ee0:	2d01      	cmp	r5, #1
 8009ee2:	f240 808a 	bls.w	8009ffa <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009ee6:	2903      	cmp	r1, #3
 8009ee8:	f040 80ca 	bne.w	800a080 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009eec:	4091      	lsls	r1, r2
 8009eee:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009ef0:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009ef2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009ef4:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009ef6:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009efa:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009efc:	d0df      	beq.n	8009ebe <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009efe:	2100      	movs	r1, #0
 8009f00:	9103      	str	r1, [sp, #12]
 8009f02:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f06:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009f0a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009f0e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f12:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009f16:	9103      	str	r1, [sp, #12]
 8009f18:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f1a:	f023 0103 	bic.w	r1, r3, #3
 8009f1e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009f22:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f26:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f2a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f2c:	00bf      	lsls	r7, r7, #2
 8009f2e:	f04f 0e0f 	mov.w	lr, #15
 8009f32:	fa0e fe07 	lsl.w	lr, lr, r7
 8009f36:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009f3a:	4d70      	ldr	r5, [pc, #448]	; (800a0fc <HAL_GPIO_Init+0x254>)
 8009f3c:	42a8      	cmp	r0, r5
 8009f3e:	d02e      	beq.n	8009f9e <HAL_GPIO_Init+0xf6>
 8009f40:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009f44:	42a8      	cmp	r0, r5
 8009f46:	f000 809f 	beq.w	800a088 <HAL_GPIO_Init+0x1e0>
 8009f4a:	4d6d      	ldr	r5, [pc, #436]	; (800a100 <HAL_GPIO_Init+0x258>)
 8009f4c:	42a8      	cmp	r0, r5
 8009f4e:	f000 80a2 	beq.w	800a096 <HAL_GPIO_Init+0x1ee>
 8009f52:	4d6c      	ldr	r5, [pc, #432]	; (800a104 <HAL_GPIO_Init+0x25c>)
 8009f54:	42a8      	cmp	r0, r5
 8009f56:	f000 80a5 	beq.w	800a0a4 <HAL_GPIO_Init+0x1fc>
 8009f5a:	4d6b      	ldr	r5, [pc, #428]	; (800a108 <HAL_GPIO_Init+0x260>)
 8009f5c:	42a8      	cmp	r0, r5
 8009f5e:	f000 80a8 	beq.w	800a0b2 <HAL_GPIO_Init+0x20a>
 8009f62:	4d6a      	ldr	r5, [pc, #424]	; (800a10c <HAL_GPIO_Init+0x264>)
 8009f64:	42a8      	cmp	r0, r5
 8009f66:	f000 80b2 	beq.w	800a0ce <HAL_GPIO_Init+0x226>
 8009f6a:	4d69      	ldr	r5, [pc, #420]	; (800a110 <HAL_GPIO_Init+0x268>)
 8009f6c:	42a8      	cmp	r0, r5
 8009f6e:	f000 80b5 	beq.w	800a0dc <HAL_GPIO_Init+0x234>
 8009f72:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a118 <HAL_GPIO_Init+0x270>
 8009f76:	4570      	cmp	r0, lr
 8009f78:	f000 80a2 	beq.w	800a0c0 <HAL_GPIO_Init+0x218>
 8009f7c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a11c <HAL_GPIO_Init+0x274>
 8009f80:	4570      	cmp	r0, lr
 8009f82:	f000 80b2 	beq.w	800a0ea <HAL_GPIO_Init+0x242>
 8009f86:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a120 <HAL_GPIO_Init+0x278>
 8009f8a:	4570      	cmp	r0, lr
 8009f8c:	bf0c      	ite	eq
 8009f8e:	f04f 0e09 	moveq.w	lr, #9
 8009f92:	f04f 0e0a 	movne.w	lr, #10
 8009f96:	fa0e f707 	lsl.w	r7, lr, r7
 8009f9a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009f9e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009fa2:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009fa4:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009fa8:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009fac:	bf0c      	ite	eq
 8009fae:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fb0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009fb4:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009fb6:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009fb8:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009fbc:	bf0c      	ite	eq
 8009fbe:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fc0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009fc4:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009fc6:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009fc8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009fcc:	bf0c      	ite	eq
 8009fce:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fd0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009fd4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009fd6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009fd8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fdc:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009fe0:	bf0c      	ite	eq
 8009fe2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fe4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fe8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009fea:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fec:	f102 0202 	add.w	r2, r2, #2
 8009ff0:	f47f af6b 	bne.w	8009eca <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009ff4:	b005      	add	sp, #20
 8009ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009ffa:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009ffe:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a002:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a006:	2503      	movs	r5, #3
 800a008:	fa05 f802 	lsl.w	r8, r5, r2
 800a00c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a010:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a014:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a016:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a018:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a01c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a020:	409f      	lsls	r7, r3
 800a022:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a026:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a02a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a02c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a02e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a032:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a036:	4097      	lsls	r7, r2
 800a038:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a03c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a03e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a040:	fa01 f102 	lsl.w	r1, r1, r2
 800a044:	f47f af54 	bne.w	8009ef0 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a048:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a04c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a050:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a054:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a058:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a05a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a05e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a062:	fa07 f708 	lsl.w	r7, r7, r8
 800a066:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a068:	270f      	movs	r7, #15
 800a06a:	fa07 f808 	lsl.w	r8, r7, r8
 800a06e:	9f00      	ldr	r7, [sp, #0]
 800a070:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a074:	9f01      	ldr	r7, [sp, #4]
 800a076:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a07a:	f8ce 7020 	str.w	r7, [lr, #32]
 800a07e:	e737      	b.n	8009ef0 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a080:	2503      	movs	r5, #3
 800a082:	4095      	lsls	r5, r2
 800a084:	43ed      	mvns	r5, r5
 800a086:	e7d1      	b.n	800a02c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a088:	f04f 0e01 	mov.w	lr, #1
 800a08c:	fa0e f707 	lsl.w	r7, lr, r7
 800a090:	ea48 0807 	orr.w	r8, r8, r7
 800a094:	e783      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a096:	f04f 0e02 	mov.w	lr, #2
 800a09a:	fa0e f707 	lsl.w	r7, lr, r7
 800a09e:	ea48 0807 	orr.w	r8, r8, r7
 800a0a2:	e77c      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0a4:	f04f 0e03 	mov.w	lr, #3
 800a0a8:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ac:	ea48 0807 	orr.w	r8, r8, r7
 800a0b0:	e775      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0b2:	f04f 0e04 	mov.w	lr, #4
 800a0b6:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ba:	ea48 0807 	orr.w	r8, r8, r7
 800a0be:	e76e      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0c0:	f04f 0e07 	mov.w	lr, #7
 800a0c4:	fa0e f707 	lsl.w	r7, lr, r7
 800a0c8:	ea48 0807 	orr.w	r8, r8, r7
 800a0cc:	e767      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0ce:	f04f 0e05 	mov.w	lr, #5
 800a0d2:	fa0e f707 	lsl.w	r7, lr, r7
 800a0d6:	ea48 0807 	orr.w	r8, r8, r7
 800a0da:	e760      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0dc:	f04f 0e06 	mov.w	lr, #6
 800a0e0:	fa0e f707 	lsl.w	r7, lr, r7
 800a0e4:	ea48 0807 	orr.w	r8, r8, r7
 800a0e8:	e759      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0ea:	f04f 0e08 	mov.w	lr, #8
 800a0ee:	fa0e f707 	lsl.w	r7, lr, r7
 800a0f2:	ea48 0807 	orr.w	r8, r8, r7
 800a0f6:	e752      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0f8:	40013c00 	.word	0x40013c00
 800a0fc:	40020000 	.word	0x40020000
 800a100:	40020800 	.word	0x40020800
 800a104:	40020c00 	.word	0x40020c00
 800a108:	40021000 	.word	0x40021000
 800a10c:	40021400 	.word	0x40021400
 800a110:	40021800 	.word	0x40021800
 800a114:	40023800 	.word	0x40023800
 800a118:	40021c00 	.word	0x40021c00
 800a11c:	40022000 	.word	0x40022000
 800a120:	40022400 	.word	0x40022400

0800a124 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a124:	6903      	ldr	r3, [r0, #16]
 800a126:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a128:	bf14      	ite	ne
 800a12a:	2001      	movne	r0, #1
 800a12c:	2000      	moveq	r0, #0
 800a12e:	4770      	bx	lr

0800a130 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a130:	b902      	cbnz	r2, 800a134 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a132:	0409      	lsls	r1, r1, #16
 800a134:	6181      	str	r1, [r0, #24]
  }
}
 800a136:	4770      	bx	lr

0800a138 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a138:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a13a:	ea01 0203 	and.w	r2, r1, r3
 800a13e:	ea21 0103 	bic.w	r1, r1, r3
 800a142:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a146:	6181      	str	r1, [r0, #24]
}
 800a148:	4770      	bx	lr
 800a14a:	bf00      	nop

0800a14c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a14c:	4770      	bx	lr
 800a14e:	bf00      	nop

0800a150 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a150:	4a04      	ldr	r2, [pc, #16]	; (800a164 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a152:	6951      	ldr	r1, [r2, #20]
 800a154:	4201      	tst	r1, r0
 800a156:	d100      	bne.n	800a15a <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a158:	4770      	bx	lr
{
 800a15a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a15c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a15e:	f7ff fff5 	bl	800a14c <HAL_GPIO_EXTI_Callback>
}
 800a162:	bd08      	pop	{r3, pc}
 800a164:	40013c00 	.word	0x40013c00

0800a168 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a16c:	6804      	ldr	r4, [r0, #0]
{
 800a16e:	b083      	sub	sp, #12
 800a170:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a172:	6823      	ldr	r3, [r4, #0]
{
 800a174:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a178:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a17c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a180:	4606      	mov	r6, r0
 800a182:	468a      	mov	sl, r1
 800a184:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a186:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a188:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a18c:	d136      	bne.n	800a1fc <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a18e:	6965      	ldr	r5, [r4, #20]
 800a190:	07e8      	lsls	r0, r5, #31
 800a192:	d5fc      	bpl.n	800a18e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a194:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a198:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a19a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a19e:	d003      	beq.n	800a1a8 <I2C_RequestMemoryWrite+0x40>
 800a1a0:	e04f      	b.n	800a242 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1a2:	6961      	ldr	r1, [r4, #20]
 800a1a4:	054d      	lsls	r5, r1, #21
 800a1a6:	d45d      	bmi.n	800a264 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a1a8:	6961      	ldr	r1, [r4, #20]
 800a1aa:	078b      	lsls	r3, r1, #30
 800a1ac:	d5f9      	bpl.n	800a1a2 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1ae:	2300      	movs	r3, #0
 800a1b0:	9301      	str	r3, [sp, #4]
 800a1b2:	6963      	ldr	r3, [r4, #20]
 800a1b4:	9301      	str	r3, [sp, #4]
 800a1b6:	69a3      	ldr	r3, [r4, #24]
 800a1b8:	9301      	str	r3, [sp, #4]
 800a1ba:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1bc:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a1c0:	f040 8088 	bne.w	800a2d4 <I2C_RequestMemoryWrite+0x16c>
 800a1c4:	6963      	ldr	r3, [r4, #20]
 800a1c6:	061a      	lsls	r2, r3, #24
 800a1c8:	d464      	bmi.n	800a294 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1ca:	6963      	ldr	r3, [r4, #20]
 800a1cc:	055b      	lsls	r3, r3, #21
 800a1ce:	d5f9      	bpl.n	800a1c4 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1d0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1d2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1d6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1d8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1da:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1dc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a1e0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1e4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a1e6:	f043 0304 	orr.w	r3, r3, #4
 800a1ea:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1ec:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a1ee:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1f0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a1f2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1f6:	d066      	beq.n	800a2c6 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a1f8:	2001      	movs	r0, #1
 800a1fa:	e01f      	b.n	800a23c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1fc:	6963      	ldr	r3, [r4, #20]
 800a1fe:	07d9      	lsls	r1, r3, #31
 800a200:	d4c8      	bmi.n	800a194 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a202:	f7ff fbb9 	bl	8009978 <HAL_GetTick>
 800a206:	eba0 000b 	sub.w	r0, r0, fp
 800a20a:	4581      	cmp	r9, r0
 800a20c:	d304      	bcc.n	800a218 <I2C_RequestMemoryWrite+0xb0>
 800a20e:	f1b9 0f00 	cmp.w	r9, #0
 800a212:	d001      	beq.n	800a218 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a214:	6834      	ldr	r4, [r6, #0]
 800a216:	e7b7      	b.n	800a188 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a218:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a21a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a21c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a21e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a222:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a226:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a228:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a22a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a22e:	f042 0220 	orr.w	r2, r2, #32
 800a232:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a234:	680b      	ldr	r3, [r1, #0]
 800a236:	05dc      	lsls	r4, r3, #23
 800a238:	d435      	bmi.n	800a2a6 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a23a:	2003      	movs	r0, #3
}
 800a23c:	b003      	add	sp, #12
 800a23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a242:	6963      	ldr	r3, [r4, #20]
 800a244:	0798      	lsls	r0, r3, #30
 800a246:	d4b2      	bmi.n	800a1ae <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a248:	6963      	ldr	r3, [r4, #20]
 800a24a:	055a      	lsls	r2, r3, #21
 800a24c:	d40a      	bmi.n	800a264 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a24e:	f7ff fb93 	bl	8009978 <HAL_GetTick>
 800a252:	eba0 000b 	sub.w	r0, r0, fp
 800a256:	4581      	cmp	r9, r0
 800a258:	d34e      	bcc.n	800a2f8 <I2C_RequestMemoryWrite+0x190>
 800a25a:	f1b9 0f00 	cmp.w	r9, #0
 800a25e:	d04b      	beq.n	800a2f8 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a260:	6834      	ldr	r4, [r6, #0]
 800a262:	e79a      	b.n	800a19a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a264:	6823      	ldr	r3, [r4, #0]
 800a266:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a26a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a26c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a26e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a272:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a274:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a276:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a278:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a27c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a280:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a282:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a286:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a28a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a28c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a28e:	b003      	add	sp, #12
 800a290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a294:	f1b8 0f01 	cmp.w	r8, #1
 800a298:	d109      	bne.n	800a2ae <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a29a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a29c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a29e:	6127      	str	r7, [r4, #16]
}
 800a2a0:	b003      	add	sp, #12
 800a2a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a2a6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2aa:	6433      	str	r3, [r6, #64]	; 0x40
 800a2ac:	e7c5      	b.n	800a23a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a2ae:	0a3b      	lsrs	r3, r7, #8
 800a2b0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2b2:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a2b6:	d12e      	bne.n	800a316 <I2C_RequestMemoryWrite+0x1ae>
 800a2b8:	6963      	ldr	r3, [r4, #20]
 800a2ba:	0619      	lsls	r1, r3, #24
 800a2bc:	d4ed      	bmi.n	800a29a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2be:	6963      	ldr	r3, [r4, #20]
 800a2c0:	055a      	lsls	r2, r3, #21
 800a2c2:	d5f9      	bpl.n	800a2b8 <I2C_RequestMemoryWrite+0x150>
 800a2c4:	e784      	b.n	800a1d0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2c6:	6832      	ldr	r2, [r6, #0]
 800a2c8:	6813      	ldr	r3, [r2, #0]
 800a2ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a2ce:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2d0:	6013      	str	r3, [r2, #0]
 800a2d2:	e7b3      	b.n	800a23c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2d4:	6963      	ldr	r3, [r4, #20]
 800a2d6:	061d      	lsls	r5, r3, #24
 800a2d8:	d4dc      	bmi.n	800a294 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2da:	6963      	ldr	r3, [r4, #20]
 800a2dc:	0559      	lsls	r1, r3, #21
 800a2de:	f53f af77 	bmi.w	800a1d0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2e2:	f7ff fb49 	bl	8009978 <HAL_GetTick>
 800a2e6:	eba0 000b 	sub.w	r0, r0, fp
 800a2ea:	4581      	cmp	r9, r0
 800a2ec:	d325      	bcc.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
 800a2ee:	f1b9 0f00 	cmp.w	r9, #0
 800a2f2:	d022      	beq.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2f4:	6834      	ldr	r4, [r6, #0]
 800a2f6:	e761      	b.n	800a1bc <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2f8:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2fa:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2fc:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2fe:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a302:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a306:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a308:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a30c:	f043 0320 	orr.w	r3, r3, #32
 800a310:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a312:	2001      	movs	r0, #1
 800a314:	e792      	b.n	800a23c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a316:	6963      	ldr	r3, [r4, #20]
 800a318:	061b      	lsls	r3, r3, #24
 800a31a:	d4be      	bmi.n	800a29a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a31c:	6963      	ldr	r3, [r4, #20]
 800a31e:	0558      	lsls	r0, r3, #21
 800a320:	f53f af56 	bmi.w	800a1d0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a324:	f7ff fb28 	bl	8009978 <HAL_GetTick>
 800a328:	eba0 000b 	sub.w	r0, r0, fp
 800a32c:	4581      	cmp	r9, r0
 800a32e:	d304      	bcc.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
 800a330:	f1b9 0f00 	cmp.w	r9, #0
 800a334:	d001      	beq.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a336:	6834      	ldr	r4, [r6, #0]
 800a338:	e7bb      	b.n	800a2b2 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a33a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a33c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a33e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a340:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a344:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a348:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a34a:	4313      	orrs	r3, r2
 800a34c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a34e:	e74d      	b.n	800a1ec <I2C_RequestMemoryWrite+0x84>

0800a350 <I2C_RequestMemoryRead>:
{
 800a350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a354:	6804      	ldr	r4, [r0, #0]
{
 800a356:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a358:	6823      	ldr	r3, [r4, #0]
 800a35a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a35e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a360:	6823      	ldr	r3, [r4, #0]
{
 800a362:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a364:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a368:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a36c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a370:	6023      	str	r3, [r4, #0]
{
 800a372:	4606      	mov	r6, r0
 800a374:	468b      	mov	fp, r1
 800a376:	4617      	mov	r7, r2
 800a378:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a37c:	d13a      	bne.n	800a3f4 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a37e:	6965      	ldr	r5, [r4, #20]
 800a380:	07eb      	lsls	r3, r5, #31
 800a382:	d5fc      	bpl.n	800a37e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a384:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a388:	6123      	str	r3, [r4, #16]
 800a38a:	fa5f fb8b 	uxtb.w	fp, fp
 800a38e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a392:	d003      	beq.n	800a39c <I2C_RequestMemoryRead+0x4c>
 800a394:	e069      	b.n	800a46a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a396:	6965      	ldr	r5, [r4, #20]
 800a398:	056a      	lsls	r2, r5, #21
 800a39a:	d44e      	bmi.n	800a43a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a39c:	6965      	ldr	r5, [r4, #20]
 800a39e:	07a9      	lsls	r1, r5, #30
 800a3a0:	d5f9      	bpl.n	800a396 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3a2:	2300      	movs	r3, #0
 800a3a4:	9301      	str	r3, [sp, #4]
 800a3a6:	6963      	ldr	r3, [r4, #20]
 800a3a8:	9301      	str	r3, [sp, #4]
 800a3aa:	69a3      	ldr	r3, [r4, #24]
 800a3ac:	9301      	str	r3, [sp, #4]
 800a3ae:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3b0:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a3b4:	f040 80bd 	bne.w	800a532 <I2C_RequestMemoryRead+0x1e2>
 800a3b8:	6963      	ldr	r3, [r4, #20]
 800a3ba:	0618      	lsls	r0, r3, #24
 800a3bc:	d468      	bmi.n	800a490 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3be:	6963      	ldr	r3, [r4, #20]
 800a3c0:	0559      	lsls	r1, r3, #21
 800a3c2:	d5f9      	bpl.n	800a3b8 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3c4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3c6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3ca:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3cc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3ce:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3d0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3d4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a3d8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a3da:	f043 0304 	orr.w	r3, r3, #4
 800a3de:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a3e2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a3e6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3ea:	d070      	beq.n	800a4ce <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a3ec:	2001      	movs	r0, #1
}
 800a3ee:	b003      	add	sp, #12
 800a3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3f4:	6963      	ldr	r3, [r4, #20]
 800a3f6:	07dd      	lsls	r5, r3, #31
 800a3f8:	d4c4      	bmi.n	800a384 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3fa:	f7ff fabd 	bl	8009978 <HAL_GetTick>
 800a3fe:	eba0 0009 	sub.w	r0, r0, r9
 800a402:	4582      	cmp	sl, r0
 800a404:	d304      	bcc.n	800a410 <I2C_RequestMemoryRead+0xc0>
 800a406:	f1ba 0f00 	cmp.w	sl, #0
 800a40a:	d001      	beq.n	800a410 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a40c:	6834      	ldr	r4, [r6, #0]
 800a40e:	e7b3      	b.n	800a378 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a410:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a412:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a414:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a416:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a41a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a41e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a420:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a422:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a426:	f042 0220 	orr.w	r2, r2, #32
 800a42a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a42c:	680b      	ldr	r3, [r1, #0]
 800a42e:	05dc      	lsls	r4, r3, #23
 800a430:	d43d      	bmi.n	800a4ae <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a432:	2003      	movs	r0, #3
}
 800a434:	b003      	add	sp, #12
 800a436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a43a:	6823      	ldr	r3, [r4, #0]
 800a43c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a440:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a442:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a444:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a448:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a44a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a44c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a44e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a452:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a456:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a458:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a45c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a460:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a462:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a464:	b003      	add	sp, #12
 800a466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a46a:	6963      	ldr	r3, [r4, #20]
 800a46c:	079b      	lsls	r3, r3, #30
 800a46e:	d498      	bmi.n	800a3a2 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a470:	6963      	ldr	r3, [r4, #20]
 800a472:	0558      	lsls	r0, r3, #21
 800a474:	d4e1      	bmi.n	800a43a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a476:	f7ff fa7f 	bl	8009978 <HAL_GetTick>
 800a47a:	eba0 0009 	sub.w	r0, r0, r9
 800a47e:	4582      	cmp	sl, r0
 800a480:	f0c0 808f 	bcc.w	800a5a2 <I2C_RequestMemoryRead+0x252>
 800a484:	f1ba 0f00 	cmp.w	sl, #0
 800a488:	f000 808b 	beq.w	800a5a2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a48c:	6834      	ldr	r4, [r6, #0]
 800a48e:	e77e      	b.n	800a38e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a490:	f1b8 0f01 	cmp.w	r8, #1
 800a494:	d10f      	bne.n	800a4b6 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a496:	b2ff      	uxtb	r7, r7
 800a498:	6127      	str	r7, [r4, #16]
 800a49a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a49e:	d16e      	bne.n	800a57e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4a0:	6963      	ldr	r3, [r4, #20]
 800a4a2:	061b      	lsls	r3, r3, #24
 800a4a4:	d41a      	bmi.n	800a4dc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4a6:	6963      	ldr	r3, [r4, #20]
 800a4a8:	055f      	lsls	r7, r3, #21
 800a4aa:	d5f9      	bpl.n	800a4a0 <I2C_RequestMemoryRead+0x150>
 800a4ac:	e78a      	b.n	800a3c4 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a4ae:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a4b2:	6433      	str	r3, [r6, #64]	; 0x40
 800a4b4:	e7bd      	b.n	800a432 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a4b6:	0a3b      	lsrs	r3, r7, #8
 800a4b8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4ba:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4be:	d17e      	bne.n	800a5be <I2C_RequestMemoryRead+0x26e>
 800a4c0:	6963      	ldr	r3, [r4, #20]
 800a4c2:	061d      	lsls	r5, r3, #24
 800a4c4:	d4e7      	bmi.n	800a496 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4c6:	6963      	ldr	r3, [r4, #20]
 800a4c8:	0558      	lsls	r0, r3, #21
 800a4ca:	d5f9      	bpl.n	800a4c0 <I2C_RequestMemoryRead+0x170>
 800a4cc:	e77a      	b.n	800a3c4 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4ce:	6832      	ldr	r2, [r6, #0]
 800a4d0:	6813      	ldr	r3, [r2, #0]
 800a4d2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a4d6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4d8:	6013      	str	r3, [r2, #0]
 800a4da:	e7ab      	b.n	800a434 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4dc:	6823      	ldr	r3, [r4, #0]
 800a4de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a4e2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a4e4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4e8:	d113      	bne.n	800a512 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4ea:	6963      	ldr	r3, [r4, #20]
 800a4ec:	07d8      	lsls	r0, r3, #31
 800a4ee:	d5fc      	bpl.n	800a4ea <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a4f0:	f04b 0301 	orr.w	r3, fp, #1
 800a4f4:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a4f6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4fa:	d003      	beq.n	800a504 <I2C_RequestMemoryRead+0x1b4>
 800a4fc:	e02b      	b.n	800a556 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4fe:	6963      	ldr	r3, [r4, #20]
 800a500:	055b      	lsls	r3, r3, #21
 800a502:	d49a      	bmi.n	800a43a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a504:	6963      	ldr	r3, [r4, #20]
 800a506:	43db      	mvns	r3, r3
 800a508:	f013 0302 	ands.w	r3, r3, #2
 800a50c:	d1f7      	bne.n	800a4fe <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a50e:	4618      	mov	r0, r3
 800a510:	e790      	b.n	800a434 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a512:	6963      	ldr	r3, [r4, #20]
 800a514:	07d9      	lsls	r1, r3, #31
 800a516:	d4eb      	bmi.n	800a4f0 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a518:	f7ff fa2e 	bl	8009978 <HAL_GetTick>
 800a51c:	eba0 0009 	sub.w	r0, r0, r9
 800a520:	4582      	cmp	sl, r0
 800a522:	f4ff af75 	bcc.w	800a410 <I2C_RequestMemoryRead+0xc0>
 800a526:	f1ba 0f00 	cmp.w	sl, #0
 800a52a:	f43f af71 	beq.w	800a410 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a52e:	6834      	ldr	r4, [r6, #0]
 800a530:	e7d8      	b.n	800a4e4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a532:	6963      	ldr	r3, [r4, #20]
 800a534:	061a      	lsls	r2, r3, #24
 800a536:	d4ab      	bmi.n	800a490 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a538:	6963      	ldr	r3, [r4, #20]
 800a53a:	055d      	lsls	r5, r3, #21
 800a53c:	f53f af42 	bmi.w	800a3c4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a540:	f7ff fa1a 	bl	8009978 <HAL_GetTick>
 800a544:	eba0 0009 	sub.w	r0, r0, r9
 800a548:	4582      	cmp	sl, r0
 800a54a:	d34b      	bcc.n	800a5e4 <I2C_RequestMemoryRead+0x294>
 800a54c:	f1ba 0f00 	cmp.w	sl, #0
 800a550:	d048      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a552:	6834      	ldr	r4, [r6, #0]
 800a554:	e72c      	b.n	800a3b0 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a556:	6963      	ldr	r3, [r4, #20]
 800a558:	43db      	mvns	r3, r3
 800a55a:	f013 0302 	ands.w	r3, r3, #2
 800a55e:	d0d6      	beq.n	800a50e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a560:	6963      	ldr	r3, [r4, #20]
 800a562:	055a      	lsls	r2, r3, #21
 800a564:	f53f af69 	bmi.w	800a43a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a568:	f7ff fa06 	bl	8009978 <HAL_GetTick>
 800a56c:	eba0 0009 	sub.w	r0, r0, r9
 800a570:	4582      	cmp	sl, r0
 800a572:	d316      	bcc.n	800a5a2 <I2C_RequestMemoryRead+0x252>
 800a574:	f1ba 0f00 	cmp.w	sl, #0
 800a578:	d013      	beq.n	800a5a2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a57a:	6834      	ldr	r4, [r6, #0]
 800a57c:	e7bb      	b.n	800a4f6 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a57e:	6963      	ldr	r3, [r4, #20]
 800a580:	061d      	lsls	r5, r3, #24
 800a582:	d4ab      	bmi.n	800a4dc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a584:	6963      	ldr	r3, [r4, #20]
 800a586:	055a      	lsls	r2, r3, #21
 800a588:	f53f af1c 	bmi.w	800a3c4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a58c:	f7ff f9f4 	bl	8009978 <HAL_GetTick>
 800a590:	eba0 0009 	sub.w	r0, r0, r9
 800a594:	4582      	cmp	sl, r0
 800a596:	d325      	bcc.n	800a5e4 <I2C_RequestMemoryRead+0x294>
 800a598:	f1ba 0f00 	cmp.w	sl, #0
 800a59c:	d022      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a59e:	6834      	ldr	r4, [r6, #0]
 800a5a0:	e77b      	b.n	800a49a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5a2:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5a4:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5a6:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5a8:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5ac:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5b0:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a5b2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5b6:	f043 0320 	orr.w	r3, r3, #32
 800a5ba:	6433      	str	r3, [r6, #64]	; 0x40
 800a5bc:	e716      	b.n	800a3ec <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5be:	6963      	ldr	r3, [r4, #20]
 800a5c0:	0619      	lsls	r1, r3, #24
 800a5c2:	f53f af68 	bmi.w	800a496 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5c6:	6963      	ldr	r3, [r4, #20]
 800a5c8:	055b      	lsls	r3, r3, #21
 800a5ca:	f53f aefb 	bmi.w	800a3c4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5ce:	f7ff f9d3 	bl	8009978 <HAL_GetTick>
 800a5d2:	eba0 0009 	sub.w	r0, r0, r9
 800a5d6:	4582      	cmp	sl, r0
 800a5d8:	d304      	bcc.n	800a5e4 <I2C_RequestMemoryRead+0x294>
 800a5da:	f1ba 0f00 	cmp.w	sl, #0
 800a5de:	d001      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5e0:	6834      	ldr	r4, [r6, #0]
 800a5e2:	e76a      	b.n	800a4ba <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5e4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5e6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5e8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5ea:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a5ee:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a5f2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5f4:	4313      	orrs	r3, r2
 800a5f6:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a5f8:	e6f2      	b.n	800a3e0 <I2C_RequestMemoryRead+0x90>
 800a5fa:	bf00      	nop

0800a5fc <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a5fc:	2800      	cmp	r0, #0
 800a5fe:	f000 80b9 	beq.w	800a774 <HAL_I2C_Init+0x178>
{
 800a602:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a604:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a608:	4604      	mov	r4, r0
 800a60a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a60e:	2b00      	cmp	r3, #0
 800a610:	f000 8098 	beq.w	800a744 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a614:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a616:	2224      	movs	r2, #36	; 0x24
 800a618:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a61c:	681a      	ldr	r2, [r3, #0]
 800a61e:	f022 0201 	bic.w	r2, r2, #1
 800a622:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a624:	681a      	ldr	r2, [r3, #0]
 800a626:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a62a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a62c:	681a      	ldr	r2, [r3, #0]
 800a62e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a632:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a634:	f001 fe70 	bl	800c318 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a638:	6865      	ldr	r5, [r4, #4]
 800a63a:	4b4f      	ldr	r3, [pc, #316]	; (800a778 <HAL_I2C_Init+0x17c>)
 800a63c:	429d      	cmp	r5, r3
 800a63e:	d84f      	bhi.n	800a6e0 <HAL_I2C_Init+0xe4>
 800a640:	4b4e      	ldr	r3, [pc, #312]	; (800a77c <HAL_I2C_Init+0x180>)
 800a642:	4298      	cmp	r0, r3
 800a644:	d97c      	bls.n	800a740 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a646:	4b4e      	ldr	r3, [pc, #312]	; (800a780 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a648:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a64a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a64e:	1e43      	subs	r3, r0, #1
 800a650:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a654:	6822      	ldr	r2, [r4, #0]
 800a656:	6851      	ldr	r1, [r2, #4]
 800a658:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a65c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a660:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a662:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a664:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a668:	f10c 0c01 	add.w	ip, ip, #1
 800a66c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a670:	ea41 010c 	orr.w	r1, r1, ip
 800a674:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a676:	69d1      	ldr	r1, [r2, #28]
 800a678:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a67c:	3301      	adds	r3, #1
 800a67e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a682:	4203      	tst	r3, r0
 800a684:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a688:	d161      	bne.n	800a74e <HAL_I2C_Init+0x152>
 800a68a:	2304      	movs	r3, #4
 800a68c:	430b      	orrs	r3, r1
 800a68e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a690:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a694:	6811      	ldr	r1, [r2, #0]
 800a696:	4303      	orrs	r3, r0
 800a698:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a69c:	430b      	orrs	r3, r1
 800a69e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a6a0:	6891      	ldr	r1, [r2, #8]
 800a6a2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a6a6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a6aa:	4303      	orrs	r3, r0
 800a6ac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6b0:	430b      	orrs	r3, r1
 800a6b2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a6b4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a6b8:	68d1      	ldr	r1, [r2, #12]
 800a6ba:	4303      	orrs	r3, r0
 800a6bc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6c0:	430b      	orrs	r3, r1
 800a6c2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a6c4:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6c6:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a6c8:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a6cc:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a6ce:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6d0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a6d2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a6d6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a6dc:	4618      	mov	r0, r3
}
 800a6de:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a6e0:	4b28      	ldr	r3, [pc, #160]	; (800a784 <HAL_I2C_Init+0x188>)
 800a6e2:	4298      	cmp	r0, r3
 800a6e4:	d92c      	bls.n	800a740 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6e6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6e8:	4b25      	ldr	r3, [pc, #148]	; (800a780 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6ea:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6ec:	4e26      	ldr	r6, [pc, #152]	; (800a788 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a6ee:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6f2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a6f6:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a6fa:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6fc:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a700:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a704:	fb01 f303 	mul.w	r3, r1, r3
 800a708:	fba6 6303 	umull	r6, r3, r6, r3
 800a70c:	6a11      	ldr	r1, [r2, #32]
 800a70e:	099b      	lsrs	r3, r3, #6
 800a710:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a714:	3301      	adds	r3, #1
 800a716:	430b      	orrs	r3, r1
 800a718:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a71a:	69d1      	ldr	r1, [r2, #28]
 800a71c:	68a3      	ldr	r3, [r4, #8]
 800a71e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a722:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a726:	b9ab      	cbnz	r3, 800a754 <HAL_I2C_Init+0x158>
 800a728:	1e43      	subs	r3, r0, #1
 800a72a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a72e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a732:	3301      	adds	r3, #1
 800a734:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a738:	b1d3      	cbz	r3, 800a770 <HAL_I2C_Init+0x174>
 800a73a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a73e:	e7a5      	b.n	800a68c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a740:	2001      	movs	r0, #1
}
 800a742:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a744:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a748:	f7f6 feae 	bl	80014a8 <HAL_I2C_MspInit>
 800a74c:	e762      	b.n	800a614 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a74e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a752:	e79b      	b.n	800a68c <HAL_I2C_Init+0x90>
 800a754:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a758:	1e43      	subs	r3, r0, #1
 800a75a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a75e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a762:	3301      	adds	r3, #1
 800a764:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a768:	b113      	cbz	r3, 800a770 <HAL_I2C_Init+0x174>
 800a76a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a76e:	e78d      	b.n	800a68c <HAL_I2C_Init+0x90>
 800a770:	2301      	movs	r3, #1
 800a772:	e78b      	b.n	800a68c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a774:	2001      	movs	r0, #1
}
 800a776:	4770      	bx	lr
 800a778:	000186a0 	.word	0x000186a0
 800a77c:	001e847f 	.word	0x001e847f
 800a780:	431bde83 	.word	0x431bde83
 800a784:	003d08ff 	.word	0x003d08ff
 800a788:	10624dd3 	.word	0x10624dd3

0800a78c <HAL_I2C_Mem_Write>:
{
 800a78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a790:	4604      	mov	r4, r0
 800a792:	b083      	sub	sp, #12
 800a794:	4699      	mov	r9, r3
 800a796:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a79a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a79c:	460f      	mov	r7, r1
 800a79e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a7a0:	f7ff f8ea 	bl	8009978 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a7a4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a7a8:	2b20      	cmp	r3, #32
 800a7aa:	d004      	beq.n	800a7b6 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a7ac:	2702      	movs	r7, #2
}
 800a7ae:	4638      	mov	r0, r7
 800a7b0:	b003      	add	sp, #12
 800a7b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7b6:	4605      	mov	r5, r0
 800a7b8:	e005      	b.n	800a7c6 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7ba:	f7ff f8dd 	bl	8009978 <HAL_GetTick>
 800a7be:	1b40      	subs	r0, r0, r5
 800a7c0:	2819      	cmp	r0, #25
 800a7c2:	f200 80a8 	bhi.w	800a916 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7c6:	6820      	ldr	r0, [r4, #0]
 800a7c8:	6983      	ldr	r3, [r0, #24]
 800a7ca:	ea6f 0c03 	mvn.w	ip, r3
 800a7ce:	f01c 0b02 	ands.w	fp, ip, #2
 800a7d2:	d0f2      	beq.n	800a7ba <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a7d4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a7d8:	2b01      	cmp	r3, #1
 800a7da:	d0e7      	beq.n	800a7ac <HAL_I2C_Mem_Write+0x20>
 800a7dc:	2301      	movs	r3, #1
 800a7de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a7e2:	6803      	ldr	r3, [r0, #0]
 800a7e4:	07db      	lsls	r3, r3, #31
 800a7e6:	d572      	bpl.n	800a8ce <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7e8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a7ea:	6807      	ldr	r7, [r0, #0]
 800a7ec:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a7f0:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a7f2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a7f4:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7f6:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7f8:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7fc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a800:	2040      	movs	r0, #64	; 0x40
 800a802:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a806:	2000      	movs	r0, #0
 800a808:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a80a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a80e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a810:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a812:	4856      	ldr	r0, [pc, #344]	; (800a96c <HAL_I2C_Mem_Write+0x1e0>)
 800a814:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a816:	464b      	mov	r3, r9
 800a818:	4642      	mov	r2, r8
 800a81a:	4620      	mov	r0, r4
 800a81c:	f7ff fca4 	bl	800a168 <I2C_RequestMemoryWrite>
 800a820:	4607      	mov	r7, r0
 800a822:	bb00      	cbnz	r0, 800a866 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a824:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a826:	2b00      	cmp	r3, #0
 800a828:	f000 809e 	beq.w	800a968 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a82c:	6823      	ldr	r3, [r4, #0]
 800a82e:	1c72      	adds	r2, r6, #1
 800a830:	d159      	bne.n	800a8e6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a832:	695a      	ldr	r2, [r3, #20]
 800a834:	0610      	lsls	r0, r2, #24
 800a836:	d41b      	bmi.n	800a870 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a838:	695a      	ldr	r2, [r3, #20]
 800a83a:	0551      	lsls	r1, r2, #21
 800a83c:	d5f9      	bpl.n	800a832 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a83e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a840:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a844:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a846:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a848:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a84a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a84e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a852:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a854:	f043 0304 	orr.w	r3, r3, #4
 800a858:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a85a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a85c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a85e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a860:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a864:	d038      	beq.n	800a8d8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a866:	2701      	movs	r7, #1
}
 800a868:	4638      	mov	r0, r7
 800a86a:	b003      	add	sp, #12
 800a86c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a870:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a874:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a878:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a87a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a87e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a882:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a884:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a886:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a888:	3a01      	subs	r2, #1
 800a88a:	b292      	uxth	r2, r2
 800a88c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a88e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a890:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a892:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a894:	0740      	lsls	r0, r0, #29
 800a896:	d517      	bpl.n	800a8c8 <HAL_I2C_Mem_Write+0x13c>
 800a898:	b942      	cbnz	r2, 800a8ac <HAL_I2C_Mem_Write+0x120>
 800a89a:	1c72      	adds	r2, r6, #1
 800a89c:	d156      	bne.n	800a94c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a89e:	695a      	ldr	r2, [r3, #20]
 800a8a0:	0750      	lsls	r0, r2, #29
 800a8a2:	d446      	bmi.n	800a932 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8a4:	695a      	ldr	r2, [r3, #20]
 800a8a6:	0551      	lsls	r1, r2, #21
 800a8a8:	d5f9      	bpl.n	800a89e <HAL_I2C_Mem_Write+0x112>
 800a8aa:	e7c8      	b.n	800a83e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a8ac:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a8b0:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a8b2:	f10c 0102 	add.w	r1, ip, #2
 800a8b6:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a8b8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a8ba:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a8be:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a8c0:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a8c2:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a8c4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a8c6:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a8c8:	2a00      	cmp	r2, #0
 800a8ca:	d1b0      	bne.n	800a82e <HAL_I2C_Mem_Write+0xa2>
 800a8cc:	e7e5      	b.n	800a89a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a8ce:	6803      	ldr	r3, [r0, #0]
 800a8d0:	f043 0301 	orr.w	r3, r3, #1
 800a8d4:	6003      	str	r3, [r0, #0]
 800a8d6:	e787      	b.n	800a7e8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8d8:	6822      	ldr	r2, [r4, #0]
 800a8da:	6813      	ldr	r3, [r2, #0]
 800a8dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a8e0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8e2:	6013      	str	r3, [r2, #0]
 800a8e4:	e763      	b.n	800a7ae <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8e6:	695a      	ldr	r2, [r3, #20]
 800a8e8:	0612      	lsls	r2, r2, #24
 800a8ea:	d4c1      	bmi.n	800a870 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8ec:	695a      	ldr	r2, [r3, #20]
 800a8ee:	0551      	lsls	r1, r2, #21
 800a8f0:	d4a5      	bmi.n	800a83e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8f2:	f7ff f841 	bl	8009978 <HAL_GetTick>
 800a8f6:	1b40      	subs	r0, r0, r5
 800a8f8:	4286      	cmp	r6, r0
 800a8fa:	d301      	bcc.n	800a900 <HAL_I2C_Mem_Write+0x174>
 800a8fc:	2e00      	cmp	r6, #0
 800a8fe:	d195      	bne.n	800a82c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a900:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a902:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a904:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a906:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a90a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a90e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a910:	4313      	orrs	r3, r2
 800a912:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a914:	e7a1      	b.n	800a85a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a916:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a918:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a91c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a920:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a924:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a926:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a92a:	f043 0320 	orr.w	r3, r3, #32
 800a92e:	6423      	str	r3, [r4, #64]	; 0x40
 800a930:	e73c      	b.n	800a7ac <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a932:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a934:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a936:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a93a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a93c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a93e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a942:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a946:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a94a:	e730      	b.n	800a7ae <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a94c:	695a      	ldr	r2, [r3, #20]
 800a94e:	0752      	lsls	r2, r2, #29
 800a950:	d4ef      	bmi.n	800a932 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a952:	695a      	ldr	r2, [r3, #20]
 800a954:	0551      	lsls	r1, r2, #21
 800a956:	f53f af72 	bmi.w	800a83e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a95a:	f7ff f80d 	bl	8009978 <HAL_GetTick>
 800a95e:	1b40      	subs	r0, r0, r5
 800a960:	4286      	cmp	r6, r0
 800a962:	d3cd      	bcc.n	800a900 <HAL_I2C_Mem_Write+0x174>
 800a964:	2e00      	cmp	r6, #0
 800a966:	d0cb      	beq.n	800a900 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a968:	6823      	ldr	r3, [r4, #0]
 800a96a:	e796      	b.n	800a89a <HAL_I2C_Mem_Write+0x10e>
 800a96c:	ffff0000 	.word	0xffff0000

0800a970 <HAL_I2C_Mem_Read>:
{
 800a970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a974:	4604      	mov	r4, r0
 800a976:	b087      	sub	sp, #28
 800a978:	4699      	mov	r9, r3
 800a97a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a97e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a980:	460f      	mov	r7, r1
 800a982:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a984:	f7fe fff8 	bl	8009978 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a988:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a98c:	2b20      	cmp	r3, #32
 800a98e:	d004      	beq.n	800a99a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a990:	2702      	movs	r7, #2
}
 800a992:	4638      	mov	r0, r7
 800a994:	b007      	add	sp, #28
 800a996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a99a:	4606      	mov	r6, r0
 800a99c:	e005      	b.n	800a9aa <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a99e:	f7fe ffeb 	bl	8009978 <HAL_GetTick>
 800a9a2:	1b80      	subs	r0, r0, r6
 800a9a4:	2819      	cmp	r0, #25
 800a9a6:	f200 80d2 	bhi.w	800ab4e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a9aa:	f8d4 c000 	ldr.w	ip, [r4]
 800a9ae:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a9b2:	43c0      	mvns	r0, r0
 800a9b4:	f010 0b02 	ands.w	fp, r0, #2
 800a9b8:	d0f1      	beq.n	800a99e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a9ba:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a9be:	2b01      	cmp	r3, #1
 800a9c0:	d0e6      	beq.n	800a990 <HAL_I2C_Mem_Read+0x20>
 800a9c2:	2301      	movs	r3, #1
 800a9c4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a9c8:	f8dc 3000 	ldr.w	r3, [ip]
 800a9cc:	07d9      	lsls	r1, r3, #31
 800a9ce:	d537      	bpl.n	800aa40 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9d0:	f8dc 0000 	ldr.w	r0, [ip]
 800a9d4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a9d8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a9dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a9de:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9e0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9e2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9e6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a9ea:	2040      	movs	r0, #64	; 0x40
 800a9ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9f0:	2000      	movs	r0, #0
 800a9f2:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a9f4:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a9f8:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a9fa:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a9fc:	4893      	ldr	r0, [pc, #588]	; (800ac4c <HAL_I2C_Mem_Read+0x2dc>)
 800a9fe:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa00:	4639      	mov	r1, r7
 800aa02:	464b      	mov	r3, r9
 800aa04:	4642      	mov	r2, r8
 800aa06:	4620      	mov	r0, r4
 800aa08:	f7ff fca2 	bl	800a350 <I2C_RequestMemoryRead>
 800aa0c:	4607      	mov	r7, r0
 800aa0e:	2800      	cmp	r0, #0
 800aa10:	f040 80ab 	bne.w	800ab6a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800aa14:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800aa16:	b9d2      	cbnz	r2, 800aa4e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa18:	6823      	ldr	r3, [r4, #0]
 800aa1a:	9002      	str	r0, [sp, #8]
 800aa1c:	695a      	ldr	r2, [r3, #20]
 800aa1e:	9202      	str	r2, [sp, #8]
 800aa20:	699a      	ldr	r2, [r3, #24]
 800aa22:	9202      	str	r2, [sp, #8]
 800aa24:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa26:	681a      	ldr	r2, [r3, #0]
 800aa28:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa2c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa2e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800aa30:	2220      	movs	r2, #32
 800aa32:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aa36:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa3a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800aa3e:	e7a8      	b.n	800a992 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800aa40:	f8dc 3000 	ldr.w	r3, [ip]
 800aa44:	f043 0301 	orr.w	r3, r3, #1
 800aa48:	f8cc 3000 	str.w	r3, [ip]
 800aa4c:	e7c0      	b.n	800a9d0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800aa4e:	2a01      	cmp	r2, #1
 800aa50:	f000 812c 	beq.w	800acac <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800aa54:	2a02      	cmp	r2, #2
 800aa56:	f000 80bd 	beq.w	800abd4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa5a:	6823      	ldr	r3, [r4, #0]
 800aa5c:	9005      	str	r0, [sp, #20]
 800aa5e:	6959      	ldr	r1, [r3, #20]
 800aa60:	9105      	str	r1, [sp, #20]
 800aa62:	6999      	ldr	r1, [r3, #24]
 800aa64:	9105      	str	r1, [sp, #20]
 800aa66:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800aa68:	2a03      	cmp	r2, #3
 800aa6a:	d849      	bhi.n	800ab00 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800aa6c:	2a01      	cmp	r2, #1
 800aa6e:	f000 80eb 	beq.w	800ac48 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800aa72:	2a02      	cmp	r2, #2
 800aa74:	f000 8089 	beq.w	800ab8a <HAL_I2C_Mem_Read+0x21a>
 800aa78:	1c69      	adds	r1, r5, #1
 800aa7a:	f040 80bb 	bne.w	800abf4 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa7e:	695a      	ldr	r2, [r3, #20]
 800aa80:	0752      	lsls	r2, r2, #29
 800aa82:	d5fc      	bpl.n	800aa7e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa84:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa86:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa88:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa8c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa8e:	691b      	ldr	r3, [r3, #16]
 800aa90:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aa92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aa94:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa96:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa98:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aa9a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aa9c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aa9e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aaa0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaa2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaa4:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800aaa6:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aaa8:	6822      	ldr	r2, [r4, #0]
 800aaaa:	f040 80af 	bne.w	800ac0c <HAL_I2C_Mem_Read+0x29c>
 800aaae:	6953      	ldr	r3, [r2, #20]
 800aab0:	075b      	lsls	r3, r3, #29
 800aab2:	d5fc      	bpl.n	800aaae <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aab4:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aab6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aab8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aabc:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aabe:	6913      	ldr	r3, [r2, #16]
 800aac0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aac2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aac4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aac6:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aac8:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800aaca:	3b01      	subs	r3, #1
 800aacc:	b29b      	uxth	r3, r3
 800aace:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aad0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aad2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aad4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aad8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aada:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aade:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aae0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aae2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aae4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aae6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aae8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aaea:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aaec:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aaee:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aaf0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaf2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaf4:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aaf6:	2a00      	cmp	r2, #0
 800aaf8:	d099      	beq.n	800aa2e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800aafa:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aafc:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800aafe:	d9b5      	bls.n	800aa6c <HAL_I2C_Mem_Read+0xfc>
 800ab00:	b95d      	cbnz	r5, 800ab1a <HAL_I2C_Mem_Read+0x1aa>
 800ab02:	e0c5      	b.n	800ac90 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ab04:	695a      	ldr	r2, [r3, #20]
 800ab06:	06d0      	lsls	r0, r2, #27
 800ab08:	f100 80b2 	bmi.w	800ac70 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab0c:	f7fe ff34 	bl	8009978 <HAL_GetTick>
 800ab10:	1b80      	subs	r0, r0, r6
 800ab12:	4285      	cmp	r5, r0
 800ab14:	f0c0 8086 	bcc.w	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ab18:	6823      	ldr	r3, [r4, #0]
 800ab1a:	695a      	ldr	r2, [r3, #20]
 800ab1c:	0652      	lsls	r2, r2, #25
 800ab1e:	d5f1      	bpl.n	800ab04 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab20:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab22:	691b      	ldr	r3, [r3, #16]
 800ab24:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ab26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab28:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ab2a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab2e:	3b01      	subs	r3, #1
 800ab30:	b29b      	uxth	r3, r3
 800ab32:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab34:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ab36:	3a01      	subs	r2, #1
 800ab38:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ab3a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab3e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ab40:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab42:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab46:	d5d6      	bpl.n	800aaf6 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab48:	6903      	ldr	r3, [r0, #16]
 800ab4a:	704b      	strb	r3, [r1, #1]
 800ab4c:	e036      	b.n	800abbc <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab4e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab50:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab54:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab58:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab5e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab62:	f043 0320 	orr.w	r3, r3, #32
 800ab66:	6423      	str	r3, [r4, #64]	; 0x40
 800ab68:	e712      	b.n	800a990 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ab6a:	2701      	movs	r7, #1
}
 800ab6c:	4638      	mov	r0, r7
 800ab6e:	b007      	add	sp, #28
 800ab70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab74:	695a      	ldr	r2, [r3, #20]
 800ab76:	0750      	lsls	r0, r2, #29
 800ab78:	d40c      	bmi.n	800ab94 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab7a:	f7fe fefd 	bl	8009978 <HAL_GetTick>
 800ab7e:	1b80      	subs	r0, r0, r6
 800ab80:	4285      	cmp	r5, r0
 800ab82:	d34f      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
 800ab84:	2d00      	cmp	r5, #0
 800ab86:	d04d      	beq.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab88:	6823      	ldr	r3, [r4, #0]
 800ab8a:	1c69      	adds	r1, r5, #1
 800ab8c:	d1f2      	bne.n	800ab74 <HAL_I2C_Mem_Read+0x204>
 800ab8e:	695a      	ldr	r2, [r3, #20]
 800ab90:	0752      	lsls	r2, r2, #29
 800ab92:	d5fc      	bpl.n	800ab8e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab94:	681a      	ldr	r2, [r3, #0]
 800ab96:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab9a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab9c:	691a      	ldr	r2, [r3, #16]
 800ab9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aba0:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800aba2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aba4:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800aba6:	3b01      	subs	r3, #1
 800aba8:	b29b      	uxth	r3, r3
 800abaa:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800abae:	3b01      	subs	r3, #1
 800abb0:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abb2:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800abb4:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abb6:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800abb8:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abba:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800abbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800abbe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800abc0:	3301      	adds	r3, #1
 800abc2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800abc4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abc6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800abc8:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800abca:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800abcc:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800abce:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800abd0:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abd2:	e790      	b.n	800aaf6 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abd4:	6823      	ldr	r3, [r4, #0]
 800abd6:	6819      	ldr	r1, [r3, #0]
 800abd8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abdc:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abde:	6819      	ldr	r1, [r3, #0]
 800abe0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800abe4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abe6:	9004      	str	r0, [sp, #16]
 800abe8:	6959      	ldr	r1, [r3, #20]
 800abea:	9104      	str	r1, [sp, #16]
 800abec:	6999      	ldr	r1, [r3, #24]
 800abee:	9104      	str	r1, [sp, #16]
 800abf0:	9904      	ldr	r1, [sp, #16]
 800abf2:	e739      	b.n	800aa68 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abf4:	695a      	ldr	r2, [r3, #20]
 800abf6:	0750      	lsls	r0, r2, #29
 800abf8:	f53f af44 	bmi.w	800aa84 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abfc:	f7fe febc 	bl	8009978 <HAL_GetTick>
 800ac00:	1b80      	subs	r0, r0, r6
 800ac02:	4285      	cmp	r5, r0
 800ac04:	d30e      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
 800ac06:	b16d      	cbz	r5, 800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac08:	6823      	ldr	r3, [r4, #0]
 800ac0a:	e735      	b.n	800aa78 <HAL_I2C_Mem_Read+0x108>
 800ac0c:	6953      	ldr	r3, [r2, #20]
 800ac0e:	0758      	lsls	r0, r3, #29
 800ac10:	f53f af50 	bmi.w	800aab4 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac14:	f7fe feb0 	bl	8009978 <HAL_GetTick>
 800ac18:	1b80      	subs	r0, r0, r6
 800ac1a:	4285      	cmp	r5, r0
 800ac1c:	d302      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
 800ac1e:	2d00      	cmp	r5, #0
 800ac20:	f47f af41 	bne.w	800aaa6 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac24:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac26:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac28:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac2e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac32:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac34:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac38:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac3a:	f043 0320 	orr.w	r3, r3, #32
}
 800ac3e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac40:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ac42:	b007      	add	sp, #28
 800ac44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac48:	b95d      	cbnz	r5, 800ac62 <HAL_I2C_Mem_Read+0x2f2>
 800ac4a:	e02b      	b.n	800aca4 <HAL_I2C_Mem_Read+0x334>
 800ac4c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac50:	695a      	ldr	r2, [r3, #20]
 800ac52:	06d2      	lsls	r2, r2, #27
 800ac54:	d40c      	bmi.n	800ac70 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac56:	f7fe fe8f 	bl	8009978 <HAL_GetTick>
 800ac5a:	1b80      	subs	r0, r0, r6
 800ac5c:	4285      	cmp	r5, r0
 800ac5e:	d3e1      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac60:	6823      	ldr	r3, [r4, #0]
 800ac62:	695a      	ldr	r2, [r3, #20]
 800ac64:	0651      	lsls	r1, r2, #25
 800ac66:	d5f3      	bpl.n	800ac50 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac68:	691a      	ldr	r2, [r3, #16]
 800ac6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac6c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ac6e:	e7a5      	b.n	800abbc <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac70:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac72:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac76:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac78:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac7a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac7c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac80:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ac84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac86:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ac88:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac8c:	2701      	movs	r7, #1
 800ac8e:	e680      	b.n	800a992 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac90:	695a      	ldr	r2, [r3, #20]
 800ac92:	0652      	lsls	r2, r2, #25
 800ac94:	f53f af44 	bmi.w	800ab20 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac98:	695a      	ldr	r2, [r3, #20]
 800ac9a:	06d1      	lsls	r1, r2, #27
 800ac9c:	d4e8      	bmi.n	800ac70 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac9e:	f7fe fe6b 	bl	8009978 <HAL_GetTick>
 800aca2:	e7bf      	b.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aca4:	695a      	ldr	r2, [r3, #20]
 800aca6:	0650      	lsls	r0, r2, #25
 800aca8:	d5f6      	bpl.n	800ac98 <HAL_I2C_Mem_Read+0x328>
 800acaa:	e7dd      	b.n	800ac68 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acac:	6823      	ldr	r3, [r4, #0]
 800acae:	6819      	ldr	r1, [r3, #0]
 800acb0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800acb4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acb6:	9003      	str	r0, [sp, #12]
 800acb8:	6959      	ldr	r1, [r3, #20]
 800acba:	9103      	str	r1, [sp, #12]
 800acbc:	6999      	ldr	r1, [r3, #24]
 800acbe:	9103      	str	r1, [sp, #12]
 800acc0:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acc2:	6819      	ldr	r1, [r3, #0]
 800acc4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800acc8:	6019      	str	r1, [r3, #0]
 800acca:	e6cd      	b.n	800aa68 <HAL_I2C_Mem_Read+0xf8>

0800accc <HAL_I2C_MasterTxCpltCallback>:
 800accc:	4770      	bx	lr
 800acce:	bf00      	nop

0800acd0 <HAL_I2C_MasterRxCpltCallback>:
 800acd0:	4770      	bx	lr
 800acd2:	bf00      	nop

0800acd4 <HAL_I2C_SlaveTxCpltCallback>:
 800acd4:	4770      	bx	lr
 800acd6:	bf00      	nop

0800acd8 <HAL_I2C_SlaveRxCpltCallback>:
 800acd8:	4770      	bx	lr
 800acda:	bf00      	nop

0800acdc <HAL_I2C_AddrCallback>:
}
 800acdc:	4770      	bx	lr
 800acde:	bf00      	nop

0800ace0 <HAL_I2C_ListenCpltCallback>:
 800ace0:	4770      	bx	lr
 800ace2:	bf00      	nop

0800ace4 <HAL_I2C_MemTxCpltCallback>:
 800ace4:	4770      	bx	lr
 800ace6:	bf00      	nop

0800ace8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ace8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800acec:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800acee:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800acf0:	b959      	cbnz	r1, 800ad0a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acf2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acf4:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acf6:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acf8:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acfa:	d00d      	beq.n	800ad18 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800acfc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ad00:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800ad02:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad04:	3201      	adds	r2, #1
 800ad06:	6502      	str	r2, [r0, #80]	; 0x50
 800ad08:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800ad0a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad0c:	2901      	cmp	r1, #1
 800ad0e:	d009      	beq.n	800ad24 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ad10:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad12:	2902      	cmp	r1, #2
 800ad14:	d00e      	beq.n	800ad34 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800ad16:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad18:	b2d2      	uxtb	r2, r2
 800ad1a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800ad1c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad1e:	3202      	adds	r2, #2
 800ad20:	6502      	str	r2, [r0, #80]	; 0x50
 800ad22:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad24:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800ad26:	6801      	ldr	r1, [r0, #0]
 800ad28:	b2d2      	uxtb	r2, r2
 800ad2a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ad2c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad2e:	3201      	adds	r2, #1
 800ad30:	6502      	str	r2, [r0, #80]	; 0x50
 800ad32:	4770      	bx	lr
 800ad34:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ad36:	2a22      	cmp	r2, #34	; 0x22
 800ad38:	d01f      	beq.n	800ad7a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad3a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad3c:	b289      	uxth	r1, r1
 800ad3e:	b9c1      	cbnz	r1, 800ad72 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad40:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad42:	b289      	uxth	r1, r1
 800ad44:	2900      	cmp	r1, #0
 800ad46:	d1e6      	bne.n	800ad16 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ad48:	2a21      	cmp	r2, #33	; 0x21
 800ad4a:	d1e4      	bne.n	800ad16 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad4c:	6802      	ldr	r2, [r0, #0]
{
 800ad4e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad50:	6854      	ldr	r4, [r2, #4]
 800ad52:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ad56:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad58:	6814      	ldr	r4, [r2, #0]
 800ad5a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ad5e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ad60:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad62:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ad64:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad68:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ad6c:	f7ff ffba 	bl	800ace4 <HAL_I2C_MemTxCpltCallback>
}
 800ad70:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad72:	2a21      	cmp	r2, #33	; 0x21
 800ad74:	d00a      	beq.n	800ad8c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ad78:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ad7a:	6801      	ldr	r1, [r0, #0]
 800ad7c:	680a      	ldr	r2, [r1, #0]
 800ad7e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ad82:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ad84:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad86:	3201      	adds	r2, #1
 800ad88:	6502      	str	r2, [r0, #80]	; 0x50
 800ad8a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ad8c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ad8e:	6802      	ldr	r2, [r0, #0]
 800ad90:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ad94:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ad96:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ad98:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ad9a:	3a01      	subs	r2, #1
 800ad9c:	b292      	uxth	r2, r2
 800ad9e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ada0:	4770      	bx	lr
 800ada2:	bf00      	nop

0800ada4 <HAL_I2C_MemRxCpltCallback>:
 800ada4:	4770      	bx	lr
 800ada6:	bf00      	nop

0800ada8 <HAL_I2C_ErrorCallback>:
 800ada8:	4770      	bx	lr
 800adaa:	bf00      	nop

0800adac <HAL_I2C_AbortCpltCallback>:
 800adac:	4770      	bx	lr
 800adae:	bf00      	nop

0800adb0 <I2C_DMAAbort>:
{
 800adb0:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adb2:	4b3a      	ldr	r3, [pc, #232]	; (800ae9c <I2C_DMAAbort+0xec>)
 800adb4:	4a3a      	ldr	r2, [pc, #232]	; (800aea0 <I2C_DMAAbort+0xf0>)
 800adb6:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800adb8:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800adba:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adbc:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800adbe:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc0:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800adc4:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc6:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adc8:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800adcc:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adce:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800add2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800add6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800add8:	9301      	str	r3, [sp, #4]
 800adda:	e005      	b.n	800ade8 <I2C_DMAAbort+0x38>
    count--;
 800addc:	9b01      	ldr	r3, [sp, #4]
 800adde:	3b01      	subs	r3, #1
 800ade0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ade2:	6813      	ldr	r3, [r2, #0]
 800ade4:	059b      	lsls	r3, r3, #22
 800ade6:	d506      	bpl.n	800adf6 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ade8:	9b01      	ldr	r3, [sp, #4]
 800adea:	2b00      	cmp	r3, #0
 800adec:	d1f6      	bne.n	800addc <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800adee:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800adf0:	f043 0320 	orr.w	r3, r3, #32
 800adf4:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800adf6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800adf8:	b34c      	cbz	r4, 800ae4e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800adfa:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800adfc:	2500      	movs	r5, #0
 800adfe:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ae00:	b1f3      	cbz	r3, 800ae40 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae02:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae04:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae06:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ae0a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ae0c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae0e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ae10:	2400      	movs	r4, #0
 800ae12:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ae14:	6813      	ldr	r3, [r2, #0]
 800ae16:	f023 0301 	bic.w	r3, r3, #1
 800ae1a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ae1c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ae20:	2b60      	cmp	r3, #96	; 0x60
 800ae22:	d02a      	beq.n	800ae7a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ae24:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ae28:	2928      	cmp	r1, #40	; 0x28
 800ae2a:	d019      	beq.n	800ae60 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ae2c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae2e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ae30:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae34:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ae38:	f7ff ffb6 	bl	800ada8 <HAL_I2C_ErrorCallback>
}
 800ae3c:	b002      	add	sp, #8
 800ae3e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae40:	6815      	ldr	r5, [r2, #0]
 800ae42:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae46:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae48:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae4a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ae4c:	e7e2      	b.n	800ae14 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ae4e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ae50:	b1f3      	cbz	r3, 800ae90 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae52:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae54:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae56:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae5a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae5c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae5e:	e7d7      	b.n	800ae10 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ae60:	6813      	ldr	r3, [r2, #0]
 800ae62:	f043 0301 	orr.w	r3, r3, #1
 800ae66:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae68:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae6a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae6c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ae70:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae72:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae74:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ae78:	e7de      	b.n	800ae38 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae7a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ae7c:	2220      	movs	r2, #32
 800ae7e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae82:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800ae86:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800ae88:	f7ff ff90 	bl	800adac <HAL_I2C_AbortCpltCallback>
}
 800ae8c:	b002      	add	sp, #8
 800ae8e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae90:	6814      	ldr	r4, [r2, #0]
 800ae92:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800ae96:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800ae98:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae9a:	e7bb      	b.n	800ae14 <I2C_DMAAbort+0x64>
 800ae9c:	20000090 	.word	0x20000090
 800aea0:	14f8b589 	.word	0x14f8b589

0800aea4 <I2C_ITError>:
{
 800aea4:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aea6:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800aeaa:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aeae:	2b10      	cmp	r3, #16
{
 800aeb0:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aeb2:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aeb4:	d039      	beq.n	800af2a <I2C_ITError+0x86>
 800aeb6:	b2d9      	uxtb	r1, r3
 800aeb8:	2940      	cmp	r1, #64	; 0x40
 800aeba:	d036      	beq.n	800af2a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800aebc:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800aec0:	2928      	cmp	r1, #40	; 0x28
 800aec2:	d03d      	beq.n	800af40 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aec4:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800aec6:	6859      	ldr	r1, [r3, #4]
 800aec8:	0508      	lsls	r0, r1, #20
 800aeca:	d407      	bmi.n	800aedc <I2C_ITError+0x38>
 800aecc:	2a60      	cmp	r2, #96	; 0x60
 800aece:	d005      	beq.n	800aedc <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800aed0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aed4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800aedc:	2200      	movs	r2, #0
 800aede:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aee0:	685a      	ldr	r2, [r3, #4]
 800aee2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800aee6:	d134      	bne.n	800af52 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aee8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aeec:	2960      	cmp	r1, #96	; 0x60
 800aeee:	d075      	beq.n	800afdc <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aef0:	695a      	ldr	r2, [r3, #20]
 800aef2:	0650      	lsls	r0, r2, #25
 800aef4:	d505      	bpl.n	800af02 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aef6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aef8:	691b      	ldr	r3, [r3, #16]
 800aefa:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aefc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aefe:	3301      	adds	r3, #1
 800af00:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800af02:	4620      	mov	r0, r4
 800af04:	f7ff ff50 	bl	800ada8 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800af08:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800af0a:	0719      	lsls	r1, r3, #28
 800af0c:	d004      	beq.n	800af18 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af0e:	6822      	ldr	r2, [r4, #0]
 800af10:	6853      	ldr	r3, [r2, #4]
 800af12:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800af16:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800af18:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af1c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af1e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800af20:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af22:	d501      	bpl.n	800af28 <I2C_ITError+0x84>
 800af24:	2b28      	cmp	r3, #40	; 0x28
 800af26:	d02f      	beq.n	800af88 <I2C_ITError+0xe4>
}
 800af28:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af2a:	2a22      	cmp	r2, #34	; 0x22
 800af2c:	d1c6      	bne.n	800aebc <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af2e:	6823      	ldr	r3, [r4, #0]
 800af30:	681a      	ldr	r2, [r3, #0]
 800af32:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af36:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800af38:	685a      	ldr	r2, [r3, #4]
 800af3a:	0512      	lsls	r2, r2, #20
 800af3c:	d5c8      	bpl.n	800aed0 <I2C_ITError+0x2c>
 800af3e:	e7cd      	b.n	800aedc <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af40:	2300      	movs	r3, #0
 800af42:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af44:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800af46:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af4a:	685a      	ldr	r2, [r3, #4]
 800af4c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af50:	d0ca      	beq.n	800aee8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af52:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af54:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af56:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af5a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af5c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800af60:	2b01      	cmp	r3, #1
 800af62:	d01e      	beq.n	800afa2 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800af64:	4b28      	ldr	r3, [pc, #160]	; (800b008 <I2C_ITError+0x164>)
 800af66:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800af68:	f7fe fd90 	bl	8009a8c <HAL_DMA_Abort_IT>
 800af6c:	2800      	cmp	r0, #0
 800af6e:	d0cb      	beq.n	800af08 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800af70:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af72:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800af74:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af76:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800af78:	f023 0301 	bic.w	r3, r3, #1
 800af7c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af7e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af82:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af84:	4798      	blx	r3
 800af86:	e7bf      	b.n	800af08 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af88:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800af8a:	4920      	ldr	r1, [pc, #128]	; (800b00c <I2C_ITError+0x168>)
 800af8c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800af8e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800af90:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800af92:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800af94:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800af98:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800af9c:	f7ff fea0 	bl	800ace0 <HAL_I2C_ListenCpltCallback>
}
 800afa0:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800afa2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800afa4:	4b18      	ldr	r3, [pc, #96]	; (800b008 <I2C_ITError+0x164>)
 800afa6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800afa8:	f7fe fd70 	bl	8009a8c <HAL_DMA_Abort_IT>
 800afac:	2800      	cmp	r0, #0
 800afae:	d0ab      	beq.n	800af08 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afb0:	6823      	ldr	r3, [r4, #0]
 800afb2:	695a      	ldr	r2, [r3, #20]
 800afb4:	0651      	lsls	r1, r2, #25
 800afb6:	d506      	bpl.n	800afc6 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afb8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afba:	691b      	ldr	r3, [r3, #16]
 800afbc:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800afbe:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afc0:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800afc2:	3201      	adds	r2, #1
 800afc4:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afc6:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afc8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800afca:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afce:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800afd0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800afd2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afd6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800afd8:	4798      	blx	r3
 800afda:	e795      	b.n	800af08 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800afdc:	2120      	movs	r1, #32
 800afde:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800afe2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afe4:	695a      	ldr	r2, [r3, #20]
 800afe6:	0652      	lsls	r2, r2, #25
 800afe8:	d506      	bpl.n	800aff8 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afec:	691b      	ldr	r3, [r3, #16]
 800afee:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aff0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800aff2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800aff4:	3201      	adds	r2, #1
 800aff6:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800aff8:	681a      	ldr	r2, [r3, #0]
 800affa:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800affe:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b000:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b002:	f7ff fed3 	bl	800adac <HAL_I2C_AbortCpltCallback>
 800b006:	e77f      	b.n	800af08 <I2C_ITError+0x64>
 800b008:	0800adb1 	.word	0x0800adb1
 800b00c:	ffff0000 	.word	0xffff0000

0800b010 <HAL_I2C_EV_IRQHandler>:
{
 800b010:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b012:	6803      	ldr	r3, [r0, #0]
{
 800b014:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b016:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b018:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b01a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b01e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b022:	2910      	cmp	r1, #16
{
 800b024:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b026:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b028:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b02c:	d022      	beq.n	800b074 <HAL_I2C_EV_IRQHandler+0x64>
 800b02e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b032:	d01f      	beq.n	800b074 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b034:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b036:	2900      	cmp	r1, #0
 800b038:	f000 8094 	beq.w	800b164 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b03c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b03e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b040:	f011 0602 	ands.w	r6, r1, #2
 800b044:	d059      	beq.n	800b0fa <HAL_I2C_EV_IRQHandler+0xea>
 800b046:	0586      	lsls	r6, r0, #22
 800b048:	d559      	bpl.n	800b0fe <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b04a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b04c:	b102      	cbz	r2, 800b050 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b04e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b050:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b054:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b058:	2a28      	cmp	r2, #40	; 0x28
 800b05a:	f000 821e 	beq.w	800b49a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b05e:	2200      	movs	r2, #0
 800b060:	920c      	str	r2, [sp, #48]	; 0x30
 800b062:	6959      	ldr	r1, [r3, #20]
 800b064:	910c      	str	r1, [sp, #48]	; 0x30
 800b066:	699b      	ldr	r3, [r3, #24]
 800b068:	930c      	str	r3, [sp, #48]	; 0x30
 800b06a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b06c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b070:	b00e      	add	sp, #56	; 0x38
 800b072:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b074:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b076:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b078:	f011 0f01 	tst.w	r1, #1
 800b07c:	d11a      	bne.n	800b0b4 <HAL_I2C_EV_IRQHandler+0xa4>
 800b07e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b082:	d0f5      	beq.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b084:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b088:	d0f2      	beq.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b08a:	070d      	lsls	r5, r1, #28
 800b08c:	d56d      	bpl.n	800b16a <HAL_I2C_EV_IRQHandler+0x15a>
 800b08e:	0585      	lsls	r5, r0, #22
 800b090:	f140 8083 	bpl.w	800b19a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b094:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b096:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b098:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b09a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b09c:	2900      	cmp	r1, #0
 800b09e:	f000 81e3 	beq.w	800b468 <HAL_I2C_EV_IRQHandler+0x458>
 800b0a2:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b0a4:	2a00      	cmp	r2, #0
 800b0a6:	f000 81df 	beq.w	800b468 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b0aa:	685a      	ldr	r2, [r3, #4]
 800b0ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b0b0:	605a      	str	r2, [r3, #4]
 800b0b2:	e7dd      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0b4:	0585      	lsls	r5, r0, #22
 800b0b6:	d56e      	bpl.n	800b196 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b0b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0ba:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b0be:	f000 81e9 	beq.w	800b494 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b0c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0c4:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b0c8:	bf04      	itt	eq
 800b0ca:	2208      	moveq	r2, #8
 800b0cc:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b0ce:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b0d2:	2a40      	cmp	r2, #64	; 0x40
 800b0d4:	f000 81d7 	beq.w	800b486 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b0d8:	6922      	ldr	r2, [r4, #16]
 800b0da:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b0de:	f000 81b2 	beq.w	800b446 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b0e2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b0e4:	2a00      	cmp	r2, #0
 800b0e6:	f040 81ef 	bne.w	800b4c8 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b0ea:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b0ec:	11d2      	asrs	r2, r2, #7
 800b0ee:	f002 0206 	and.w	r2, r2, #6
 800b0f2:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b0f6:	611a      	str	r2, [r3, #16]
 800b0f8:	e7ba      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0fa:	06cd      	lsls	r5, r1, #27
 800b0fc:	d47c      	bmi.n	800b1f8 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b0fe:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b102:	2a21      	cmp	r2, #33	; 0x21
 800b104:	f000 80f5 	beq.w	800b2f2 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b108:	064e      	lsls	r6, r1, #25
 800b10a:	f140 8132 	bpl.w	800b372 <HAL_I2C_EV_IRQHandler+0x362>
 800b10e:	0545      	lsls	r5, r0, #21
 800b110:	f140 812f 	bpl.w	800b372 <HAL_I2C_EV_IRQHandler+0x362>
 800b114:	0749      	lsls	r1, r1, #29
 800b116:	f100 812f 	bmi.w	800b378 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b11a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b11e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b120:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b122:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b124:	2a00      	cmp	r2, #0
 800b126:	d0a3      	beq.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b128:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b12a:	691b      	ldr	r3, [r3, #16]
 800b12c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b12e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b130:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b132:	3b01      	subs	r3, #1
 800b134:	b29b      	uxth	r3, r3
 800b136:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b138:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b13a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b13c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b13e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b140:	2b00      	cmp	r3, #0
 800b142:	d195      	bne.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b144:	292a      	cmp	r1, #42	; 0x2a
 800b146:	d193      	bne.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b148:	6822      	ldr	r2, [r4, #0]
 800b14a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b14c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b14e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b150:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b154:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b156:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b158:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b15a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b15e:	f7ff fdbb 	bl	800acd8 <HAL_I2C_SlaveRxCpltCallback>
 800b162:	e785      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b164:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b166:	6959      	ldr	r1, [r3, #20]
 800b168:	e76a      	b.n	800b040 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b16a:	078d      	lsls	r5, r1, #30
 800b16c:	d515      	bpl.n	800b19a <HAL_I2C_EV_IRQHandler+0x18a>
 800b16e:	0585      	lsls	r5, r0, #22
 800b170:	d513      	bpl.n	800b19a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b172:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b176:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b178:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b17a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b17e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b180:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b182:	f000 81b3 	beq.w	800b4ec <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b186:	2200      	movs	r2, #0
 800b188:	920a      	str	r2, [sp, #40]	; 0x28
 800b18a:	695a      	ldr	r2, [r3, #20]
 800b18c:	920a      	str	r2, [sp, #40]	; 0x28
 800b18e:	699b      	ldr	r3, [r3, #24]
 800b190:	930a      	str	r3, [sp, #40]	; 0x28
 800b192:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b194:	e76c      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b196:	070d      	lsls	r5, r1, #28
 800b198:	d5e7      	bpl.n	800b16a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b19a:	0776      	lsls	r6, r6, #29
 800b19c:	f140 80f5 	bpl.w	800b38a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b1a0:	685d      	ldr	r5, [r3, #4]
 800b1a2:	052d      	lsls	r5, r5, #20
 800b1a4:	f53f af64 	bmi.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b1a8:	060e      	lsls	r6, r1, #24
 800b1aa:	f140 8115 	bpl.w	800b3d8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1ae:	0545      	lsls	r5, r0, #21
 800b1b0:	f140 8112 	bpl.w	800b3d8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1b4:	074e      	lsls	r6, r1, #29
 800b1b6:	f100 8112 	bmi.w	800b3de <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ba:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1be:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1c0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b1c4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1c6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1c8:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1ca:	2800      	cmp	r0, #0
 800b1cc:	f040 8235 	bne.w	800b63a <HAL_I2C_EV_IRQHandler+0x62a>
 800b1d0:	2a21      	cmp	r2, #33	; 0x21
 800b1d2:	f000 8347 	beq.w	800b864 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b1d6:	2940      	cmp	r1, #64	; 0x40
 800b1d8:	f47f af4a 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b1dc:	2a22      	cmp	r2, #34	; 0x22
 800b1de:	f47f af47 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b1e2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1e4:	b292      	uxth	r2, r2
 800b1e6:	2a00      	cmp	r2, #0
 800b1e8:	f000 8268 	beq.w	800b6bc <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1ec:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b1f0:	2a40      	cmp	r2, #64	; 0x40
 800b1f2:	f040 80b4 	bne.w	800b35e <HAL_I2C_EV_IRQHandler+0x34e>
 800b1f6:	e0fc      	b.n	800b3f2 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b1f8:	0585      	lsls	r5, r0, #22
 800b1fa:	d580      	bpl.n	800b0fe <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1fc:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b200:	685a      	ldr	r2, [r3, #4]
 800b202:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b206:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b208:	960d      	str	r6, [sp, #52]	; 0x34
 800b20a:	695a      	ldr	r2, [r3, #20]
 800b20c:	920d      	str	r2, [sp, #52]	; 0x34
 800b20e:	681a      	ldr	r2, [r3, #0]
 800b210:	f042 0201 	orr.w	r2, r2, #1
 800b214:	601a      	str	r2, [r3, #0]
 800b216:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b218:	681a      	ldr	r2, [r3, #0]
 800b21a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b21e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b220:	685a      	ldr	r2, [r3, #4]
 800b222:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b224:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b226:	d521      	bpl.n	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b228:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b22c:	2a22      	cmp	r2, #34	; 0x22
 800b22e:	f000 817a 	beq.w	800b526 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b232:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b234:	6802      	ldr	r2, [r0, #0]
 800b236:	6852      	ldr	r2, [r2, #4]
 800b238:	b292      	uxth	r2, r2
 800b23a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b23c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b23e:	b292      	uxth	r2, r2
 800b240:	b11a      	cbz	r2, 800b24a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b242:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b244:	f042 0204 	orr.w	r2, r2, #4
 800b248:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b24a:	685a      	ldr	r2, [r3, #4]
 800b24c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b250:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b252:	f7fe fc2d 	bl	8009ab0 <HAL_DMA_GetState>
 800b256:	2801      	cmp	r0, #1
 800b258:	d008      	beq.n	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b25a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b25c:	4b99      	ldr	r3, [pc, #612]	; (800b4c4 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b25e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b260:	f7fe fc14 	bl	8009a8c <HAL_DMA_Abort_IT>
 800b264:	b110      	cbz	r0, 800b26c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b266:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b268:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b26a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b26c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b26e:	b29b      	uxth	r3, r3
 800b270:	b313      	cbz	r3, 800b2b8 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b272:	6823      	ldr	r3, [r4, #0]
 800b274:	695a      	ldr	r2, [r3, #20]
 800b276:	0752      	lsls	r2, r2, #29
 800b278:	d50a      	bpl.n	800b290 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b27a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b27c:	691b      	ldr	r3, [r3, #16]
 800b27e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b280:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b282:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b284:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b286:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b288:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b28a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b28c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b28e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b290:	695a      	ldr	r2, [r3, #20]
 800b292:	0656      	lsls	r6, r2, #25
 800b294:	d509      	bpl.n	800b2aa <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b296:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b298:	691b      	ldr	r3, [r3, #16]
 800b29a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b29c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b29e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b2a0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b2a2:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b2a4:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b2a6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b2a8:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b2aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b2ac:	b29b      	uxth	r3, r3
 800b2ae:	b11b      	cbz	r3, 800b2b8 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b2b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2b2:	f043 0304 	orr.w	r3, r3, #4
 800b2b6:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b2b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2ba:	2b00      	cmp	r3, #0
 800b2bc:	f040 80dd 	bne.w	800b47a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b2c0:	2d2a      	cmp	r5, #42	; 0x2a
 800b2c2:	f000 8151 	beq.w	800b568 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b2c6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b2ca:	2b28      	cmp	r3, #40	; 0x28
 800b2cc:	f000 8154 	beq.w	800b578 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b2d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b2d2:	2b22      	cmp	r3, #34	; 0x22
 800b2d4:	d002      	beq.n	800b2dc <HAL_I2C_EV_IRQHandler+0x2cc>
 800b2d6:	2d22      	cmp	r5, #34	; 0x22
 800b2d8:	f47f aeca 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2dc:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b2de:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2e0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2e2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b2e4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2ec:	f7ff fcf4 	bl	800acd8 <HAL_I2C_SlaveRxCpltCallback>
 800b2f0:	e6be      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2f2:	060d      	lsls	r5, r1, #24
 800b2f4:	d528      	bpl.n	800b348 <HAL_I2C_EV_IRQHandler+0x338>
 800b2f6:	0546      	lsls	r6, r0, #21
 800b2f8:	d526      	bpl.n	800b348 <HAL_I2C_EV_IRQHandler+0x338>
 800b2fa:	074d      	lsls	r5, r1, #29
 800b2fc:	d427      	bmi.n	800b34e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2fe:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b302:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b304:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b306:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b308:	2900      	cmp	r1, #0
 800b30a:	f43f aeb1 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b30e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b310:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b314:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b316:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b318:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b31a:	3901      	subs	r1, #1
 800b31c:	b289      	uxth	r1, r1
 800b31e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b320:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b322:	b289      	uxth	r1, r1
 800b324:	2900      	cmp	r1, #0
 800b326:	f47f aea3 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b32a:	2829      	cmp	r0, #41	; 0x29
 800b32c:	f47f aea0 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b330:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b332:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b334:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b338:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b33a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b33c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b33e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b342:	f7ff fcc7 	bl	800acd4 <HAL_I2C_SlaveTxCpltCallback>
 800b346:	e693      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b348:	0749      	lsls	r1, r1, #29
 800b34a:	f57f ae91 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b34e:	0582      	lsls	r2, r0, #22
 800b350:	f57f ae8e 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b354:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b356:	b292      	uxth	r2, r2
 800b358:	2a00      	cmp	r2, #0
 800b35a:	f43f ae89 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b35e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b360:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b364:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b366:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b368:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b36a:	3b01      	subs	r3, #1
 800b36c:	b29b      	uxth	r3, r3
 800b36e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b370:	e67e      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b372:	074a      	lsls	r2, r1, #29
 800b374:	f57f ae7c 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b378:	0586      	lsls	r6, r0, #22
 800b37a:	f57f ae79 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b37e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b380:	b292      	uxth	r2, r2
 800b382:	2a00      	cmp	r2, #0
 800b384:	f43f ae74 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b388:	e01b      	b.n	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b38a:	685a      	ldr	r2, [r3, #4]
 800b38c:	0512      	lsls	r2, r2, #20
 800b38e:	f53f ae6f 	bmi.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b392:	064e      	lsls	r6, r1, #25
 800b394:	d433      	bmi.n	800b3fe <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b396:	0749      	lsls	r1, r1, #29
 800b398:	f57f ae6a 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b39c:	0582      	lsls	r2, r0, #22
 800b39e:	f57f ae67 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b3a2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b3a4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3a6:	b292      	uxth	r2, r2
 800b3a8:	2a04      	cmp	r2, #4
 800b3aa:	f000 8113 	beq.w	800b5d4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b3ae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3b0:	b292      	uxth	r2, r2
 800b3b2:	2a03      	cmp	r2, #3
 800b3b4:	f000 8153 	beq.w	800b65e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b3b8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3ba:	b292      	uxth	r2, r2
 800b3bc:	2a02      	cmp	r2, #2
 800b3be:	f000 8182 	beq.w	800b6c6 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3c4:	691b      	ldr	r3, [r3, #16]
 800b3c6:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b3c8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3cc:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b3ce:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b3d0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b3d2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3d4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b3d6:	e64b      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3d8:	074d      	lsls	r5, r1, #29
 800b3da:	f57f ae49 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b3de:	0581      	lsls	r1, r0, #22
 800b3e0:	f57f ae46 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b3e4:	2a21      	cmp	r2, #33	; 0x21
 800b3e6:	f000 80fd 	beq.w	800b5e4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b3ea:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b3ee:	f47f ae3f 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3f2:	4620      	mov	r0, r4
}
 800b3f4:	b00e      	add	sp, #56	; 0x38
 800b3f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3fa:	f7ff bc75 	b.w	800ace8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3fe:	0545      	lsls	r5, r0, #21
 800b400:	d5c9      	bpl.n	800b396 <HAL_I2C_EV_IRQHandler+0x386>
 800b402:	f011 0104 	ands.w	r1, r1, #4
 800b406:	d1c9      	bne.n	800b39c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b408:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b40c:	2a22      	cmp	r2, #34	; 0x22
 800b40e:	f47f ae2f 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b412:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b414:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b416:	2a03      	cmp	r2, #3
 800b418:	f240 81ec 	bls.w	800b7f4 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b41c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b41e:	691b      	ldr	r3, [r3, #16]
 800b420:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b422:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b424:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b426:	3b01      	subs	r3, #1
 800b428:	b29b      	uxth	r3, r3
 800b42a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b42c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b42e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b430:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b432:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b434:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b436:	f47f ae1b 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b43a:	6822      	ldr	r2, [r4, #0]
 800b43c:	6853      	ldr	r3, [r2, #4]
 800b43e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b442:	6053      	str	r3, [r2, #4]
 800b444:	e614      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b446:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b44a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b44c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b44e:	bf16      	itet	ne
 800b450:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b454:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b458:	b2d2      	uxtbne	r2, r2
 800b45a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b45c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b45e:	b11a      	cbz	r2, 800b468 <HAL_I2C_EV_IRQHandler+0x458>
 800b460:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b462:	2a00      	cmp	r2, #0
 800b464:	f47f ae21 	bne.w	800b0aa <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b468:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b46a:	2a00      	cmp	r2, #0
 800b46c:	f43f ae00 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b470:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b472:	2a00      	cmp	r2, #0
 800b474:	f47f ae19 	bne.w	800b0aa <HAL_I2C_EV_IRQHandler+0x9a>
 800b478:	e5fa      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b47a:	4620      	mov	r0, r4
}
 800b47c:	b00e      	add	sp, #56	; 0x38
 800b47e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b482:	f7ff bd0f 	b.w	800aea4 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b486:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b488:	bb52      	cbnz	r2, 800b4e0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b48a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b48c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b490:	611a      	str	r2, [r3, #16]
 800b492:	e5ed      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b494:	2201      	movs	r2, #1
 800b496:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b498:	e619      	b.n	800b0ce <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b49a:	685a      	ldr	r2, [r3, #4]
 800b49c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b4a0:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b4a2:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b4a4:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b4a8:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b4ac:	bf54      	ite	pl
 800b4ae:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b4b0:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b4b2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b4b6:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b4ba:	4620      	mov	r0, r4
 800b4bc:	f7ff fc0e 	bl	800acdc <HAL_I2C_AddrCallback>
 800b4c0:	e5d6      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b4c2:	bf00      	nop
 800b4c4:	0800adb1 	.word	0x0800adb1
      else if (hi2c->EventCount == 1U)
 800b4c8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4ca:	2a01      	cmp	r2, #1
 800b4cc:	f47f add0 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b4d0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4d2:	11d2      	asrs	r2, r2, #7
 800b4d4:	f002 0206 	and.w	r2, r2, #6
 800b4d8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b4dc:	611a      	str	r2, [r3, #16]
 800b4de:	e5c7      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b4e0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4e2:	f042 0201 	orr.w	r2, r2, #1
 800b4e6:	b2d2      	uxtb	r2, r2
 800b4e8:	611a      	str	r2, [r3, #16]
 800b4ea:	e5c1      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b4ec:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b4ee:	b911      	cbnz	r1, 800b4f6 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b4f0:	2a40      	cmp	r2, #64	; 0x40
 800b4f2:	f000 809b 	beq.w	800b62c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b4f6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4f8:	b922      	cbnz	r2, 800b504 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b4fa:	6921      	ldr	r1, [r4, #16]
 800b4fc:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b500:	f000 809f 	beq.w	800b642 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b504:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b506:	b292      	uxth	r2, r2
 800b508:	2a00      	cmp	r2, #0
 800b50a:	d142      	bne.n	800b592 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b50c:	9203      	str	r2, [sp, #12]
 800b50e:	695a      	ldr	r2, [r3, #20]
 800b510:	9203      	str	r2, [sp, #12]
 800b512:	699a      	ldr	r2, [r3, #24]
 800b514:	9203      	str	r2, [sp, #12]
 800b516:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b518:	681a      	ldr	r2, [r3, #0]
 800b51a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b51e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b520:	2300      	movs	r3, #0
 800b522:	6523      	str	r3, [r4, #80]	; 0x50
 800b524:	e5a4      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b526:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b528:	6802      	ldr	r2, [r0, #0]
 800b52a:	6852      	ldr	r2, [r2, #4]
 800b52c:	b292      	uxth	r2, r2
 800b52e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b530:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b532:	b292      	uxth	r2, r2
 800b534:	b11a      	cbz	r2, 800b53e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b536:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b538:	f042 0204 	orr.w	r2, r2, #4
 800b53c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b53e:	685a      	ldr	r2, [r3, #4]
 800b540:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b544:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b546:	f7fe fab3 	bl	8009ab0 <HAL_DMA_GetState>
 800b54a:	2801      	cmp	r0, #1
 800b54c:	f43f ae8e 	beq.w	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b550:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b552:	4b98      	ldr	r3, [pc, #608]	; (800b7b4 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b554:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b556:	f7fe fa99 	bl	8009a8c <HAL_DMA_Abort_IT>
 800b55a:	2800      	cmp	r0, #0
 800b55c:	f43f ae86 	beq.w	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b560:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b562:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b564:	4798      	blx	r3
 800b566:	e681      	b.n	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b568:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b56a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b56c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b56e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b572:	f7ff fbb1 	bl	800acd8 <HAL_I2C_SlaveRxCpltCallback>
 800b576:	e6a6      	b.n	800b2c6 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b578:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b57a:	498f      	ldr	r1, [pc, #572]	; (800b7b8 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b57c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b57e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b580:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b582:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b584:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b588:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b58c:	f7ff fba8 	bl	800ace0 <HAL_I2C_ListenCpltCallback>
 800b590:	e56e      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b592:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b594:	b292      	uxth	r2, r2
 800b596:	2a01      	cmp	r2, #1
 800b598:	d070      	beq.n	800b67c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b59a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b59c:	b292      	uxth	r2, r2
 800b59e:	2a02      	cmp	r2, #2
 800b5a0:	f000 80d6 	beq.w	800b750 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5a4:	681a      	ldr	r2, [r3, #0]
 800b5a6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b5aa:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b5ac:	685a      	ldr	r2, [r3, #4]
 800b5ae:	0511      	lsls	r1, r2, #20
 800b5b0:	d508      	bpl.n	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b5b2:	2820      	cmp	r0, #32
 800b5b4:	f200 80f8 	bhi.w	800b7a8 <HAL_I2C_EV_IRQHandler+0x798>
 800b5b8:	2807      	cmp	r0, #7
 800b5ba:	f200 80ea 	bhi.w	800b792 <HAL_I2C_EV_IRQHandler+0x782>
 800b5be:	2801      	cmp	r0, #1
 800b5c0:	f000 80ed 	beq.w	800b79e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5c4:	2200      	movs	r2, #0
 800b5c6:	9209      	str	r2, [sp, #36]	; 0x24
 800b5c8:	695a      	ldr	r2, [r3, #20]
 800b5ca:	9209      	str	r2, [sp, #36]	; 0x24
 800b5cc:	699b      	ldr	r3, [r3, #24]
 800b5ce:	9309      	str	r3, [sp, #36]	; 0x24
 800b5d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5d2:	e7a5      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5d4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5d6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5dc:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5de:	691b      	ldr	r3, [r3, #16]
 800b5e0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b5e2:	e6f1      	b.n	800b3c8 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b5e4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b5e6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b5ea:	2a21      	cmp	r2, #33	; 0x21
 800b5ec:	f47f ad40 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b5f0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5f2:	b292      	uxth	r2, r2
 800b5f4:	2a00      	cmp	r2, #0
 800b5f6:	f47f aeb2 	bne.w	800b35e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b5fa:	2908      	cmp	r1, #8
 800b5fc:	f000 80e2 	beq.w	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b600:	2920      	cmp	r1, #32
 800b602:	f000 80df 	beq.w	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b606:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b60a:	f000 80db 	beq.w	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b60e:	6859      	ldr	r1, [r3, #4]
 800b610:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b614:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b616:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b618:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b61a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b61c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b620:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b622:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b626:	f7ff fb51 	bl	800accc <HAL_I2C_MasterTxCpltCallback>
 800b62a:	e521      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b62c:	9101      	str	r1, [sp, #4]
 800b62e:	695a      	ldr	r2, [r3, #20]
 800b630:	9201      	str	r2, [sp, #4]
 800b632:	699b      	ldr	r3, [r3, #24]
 800b634:	9301      	str	r3, [sp, #4]
 800b636:	9b01      	ldr	r3, [sp, #4]
 800b638:	e51a      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b63a:	2a21      	cmp	r2, #33	; 0x21
 800b63c:	f43f add1 	beq.w	800b1e2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b640:	e5c9      	b.n	800b1d6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b642:	9202      	str	r2, [sp, #8]
 800b644:	695a      	ldr	r2, [r3, #20]
 800b646:	9202      	str	r2, [sp, #8]
 800b648:	699a      	ldr	r2, [r3, #24]
 800b64a:	9202      	str	r2, [sp, #8]
 800b64c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b64e:	681a      	ldr	r2, [r3, #0]
 800b650:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b654:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b656:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b658:	3301      	adds	r3, #1
 800b65a:	6523      	str	r3, [r4, #80]	; 0x50
 800b65c:	e508      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b65e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b660:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b662:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b666:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b668:	f43f aeab 	beq.w	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b66c:	2902      	cmp	r1, #2
 800b66e:	f43f aea8 	beq.w	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b672:	681a      	ldr	r2, [r3, #0]
 800b674:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b678:	601a      	str	r2, [r3, #0]
 800b67a:	e6a2      	b.n	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b67c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b680:	f000 811b 	beq.w	800b8ba <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b684:	2808      	cmp	r0, #8
 800b686:	f000 8108 	beq.w	800b89a <HAL_I2C_EV_IRQHandler+0x88a>
 800b68a:	2820      	cmp	r0, #32
 800b68c:	f000 8105 	beq.w	800b89a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b690:	2d12      	cmp	r5, #18
 800b692:	f000 80ff 	beq.w	800b894 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b696:	2810      	cmp	r0, #16
 800b698:	d804      	bhi.n	800b6a4 <HAL_I2C_EV_IRQHandler+0x694>
 800b69a:	4a48      	ldr	r2, [pc, #288]	; (800b7bc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b69c:	40c2      	lsrs	r2, r0
 800b69e:	07d1      	lsls	r1, r2, #31
 800b6a0:	f100 814c 	bmi.w	800b93c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b6a4:	681a      	ldr	r2, [r3, #0]
 800b6a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6aa:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b6ac:	2200      	movs	r2, #0
 800b6ae:	9206      	str	r2, [sp, #24]
 800b6b0:	695a      	ldr	r2, [r3, #20]
 800b6b2:	9206      	str	r2, [sp, #24]
 800b6b4:	699b      	ldr	r3, [r3, #24]
 800b6b6:	9306      	str	r3, [sp, #24]
 800b6b8:	9b06      	ldr	r3, [sp, #24]
 800b6ba:	e731      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6bc:	685a      	ldr	r2, [r3, #4]
 800b6be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6c2:	605a      	str	r2, [r3, #4]
 800b6c4:	e4d4      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b6c6:	3901      	subs	r1, #1
 800b6c8:	290f      	cmp	r1, #15
 800b6ca:	d809      	bhi.n	800b6e0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b6cc:	e8df f001 	tbb	[pc, r1]
 800b6d0:	3608363b 	.word	0x3608363b
 800b6d4:	08080808 	.word	0x08080808
 800b6d8:	08080808 	.word	0x08080808
 800b6dc:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6e0:	681a      	ldr	r2, [r3, #0]
 800b6e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6e6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6ea:	691b      	ldr	r3, [r3, #16]
 800b6ec:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b6ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b6f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6f2:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b6f4:	3b01      	subs	r3, #1
 800b6f6:	b29b      	uxth	r3, r3
 800b6f8:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6fa:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b6fc:	1c51      	adds	r1, r2, #1
 800b6fe:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b700:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b702:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b704:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b706:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b708:	3b01      	subs	r3, #1
 800b70a:	b29b      	uxth	r3, r3
 800b70c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b70e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b710:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b712:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b716:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b718:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b71a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b71c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b720:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b724:	2b40      	cmp	r3, #64	; 0x40
 800b726:	f000 80f5 	beq.w	800b914 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b72a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b72c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b72e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b732:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b734:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b736:	f7ff facb 	bl	800acd0 <HAL_I2C_MasterRxCpltCallback>
 800b73a:	e499      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b73c:	681a      	ldr	r2, [r3, #0]
 800b73e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b742:	601a      	str	r2, [r3, #0]
 800b744:	e7d0      	b.n	800b6e8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b746:	681a      	ldr	r2, [r3, #0]
 800b748:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b74c:	601a      	str	r2, [r3, #0]
 800b74e:	e7cb      	b.n	800b6e8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b750:	2810      	cmp	r0, #16
 800b752:	d804      	bhi.n	800b75e <HAL_I2C_EV_IRQHandler+0x74e>
 800b754:	4a19      	ldr	r2, [pc, #100]	; (800b7bc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b756:	40c2      	lsrs	r2, r0
 800b758:	07d2      	lsls	r2, r2, #31
 800b75a:	f100 80c2 	bmi.w	800b8e2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b75e:	681a      	ldr	r2, [r3, #0]
 800b760:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b764:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b766:	681a      	ldr	r2, [r3, #0]
 800b768:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b76c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b76e:	685a      	ldr	r2, [r3, #4]
 800b770:	0516      	lsls	r6, r2, #20
 800b772:	d506      	bpl.n	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b774:	2820      	cmp	r0, #32
 800b776:	f240 80bc 	bls.w	800b8f2 <HAL_I2C_EV_IRQHandler+0x8e2>
 800b77a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b77e:	f000 80bd 	beq.w	800b8fc <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b782:	2200      	movs	r2, #0
 800b784:	9208      	str	r2, [sp, #32]
 800b786:	695a      	ldr	r2, [r3, #20]
 800b788:	9208      	str	r2, [sp, #32]
 800b78a:	699b      	ldr	r3, [r3, #24]
 800b78c:	9308      	str	r3, [sp, #32]
 800b78e:	9b08      	ldr	r3, [sp, #32]
 800b790:	e6c6      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
 800b792:	4a0b      	ldr	r2, [pc, #44]	; (800b7c0 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b794:	3808      	subs	r0, #8
 800b796:	40c2      	lsrs	r2, r0
 800b798:	07d2      	lsls	r2, r2, #31
 800b79a:	f57f af13 	bpl.w	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b79e:	685a      	ldr	r2, [r3, #4]
 800b7a0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b7a4:	605a      	str	r2, [r3, #4]
 800b7a6:	e70d      	b.n	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7a8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b7ac:	f47f af0a 	bne.w	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7b0:	e7f5      	b.n	800b79e <HAL_I2C_EV_IRQHandler+0x78e>
 800b7b2:	bf00      	nop
 800b7b4:	0800adb1 	.word	0x0800adb1
 800b7b8:	ffff0000 	.word	0xffff0000
 800b7bc:	00010014 	.word	0x00010014
 800b7c0:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b7c4:	6859      	ldr	r1, [r3, #4]
 800b7c6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b7ca:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7cc:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7ce:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b7d0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7d2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b7d6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7d8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b7da:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7de:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7e2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7e6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7e8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7ea:	f47f af1c 	bne.w	800b626 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7ee:	f7ff fa79 	bl	800ace4 <HAL_I2C_MemTxCpltCallback>
 800b7f2:	e43d      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b7f4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b7f6:	2802      	cmp	r0, #2
 800b7f8:	f43f af60 	beq.w	800b6bc <HAL_I2C_EV_IRQHandler+0x6ac>
 800b7fc:	2a01      	cmp	r2, #1
 800b7fe:	f63f af5d 	bhi.w	800b6bc <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b802:	4a62      	ldr	r2, [pc, #392]	; (800b98c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b804:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b806:	6812      	ldr	r2, [r2, #0]
 800b808:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b80c:	fbb2 f2f0 	udiv	r2, r2, r0
 800b810:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b814:	920b      	str	r2, [sp, #44]	; 0x2c
 800b816:	e004      	b.n	800b822 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b818:	681a      	ldr	r2, [r3, #0]
 800b81a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b81e:	f000 8092 	beq.w	800b946 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b822:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b824:	3a01      	subs	r2, #1
 800b826:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b828:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b82a:	2900      	cmp	r1, #0
 800b82c:	d1f4      	bne.n	800b818 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b82e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b830:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b832:	f042 0220 	orr.w	r2, r2, #32
 800b836:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b838:	685a      	ldr	r2, [r3, #4]
 800b83a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b83e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b840:	691b      	ldr	r3, [r3, #16]
 800b842:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b844:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b846:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b848:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b84a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b84c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b84e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b850:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b852:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b854:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b858:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b85a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b85e:	f7ff faa3 	bl	800ada8 <HAL_I2C_ErrorCallback>
 800b862:	e405      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b864:	2d08      	cmp	r5, #8
 800b866:	d0ad      	beq.n	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b868:	2d20      	cmp	r5, #32
 800b86a:	d0ab      	beq.n	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b86c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b870:	d0a8      	beq.n	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b872:	685a      	ldr	r2, [r3, #4]
 800b874:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b878:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b87a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b87c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b87e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b880:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b882:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b886:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b888:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b88c:	f7ff fa1e 	bl	800accc <HAL_I2C_MasterTxCpltCallback>
 800b890:	f7ff bbee 	b.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b894:	2801      	cmp	r0, #1
 800b896:	f43f af05 	beq.w	800b6a4 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b89a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b89c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b89e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8a2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8a4:	9107      	str	r1, [sp, #28]
 800b8a6:	695a      	ldr	r2, [r3, #20]
 800b8a8:	9207      	str	r2, [sp, #28]
 800b8aa:	699a      	ldr	r2, [r3, #24]
 800b8ac:	9207      	str	r2, [sp, #28]
 800b8ae:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8b0:	681a      	ldr	r2, [r3, #0]
 800b8b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8b6:	601a      	str	r2, [r3, #0]
 800b8b8:	e632      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ba:	681a      	ldr	r2, [r3, #0]
 800b8bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8c0:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b8c2:	685a      	ldr	r2, [r3, #4]
 800b8c4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b8c8:	d02d      	beq.n	800b926 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ca:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8cc:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8d2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8d4:	9104      	str	r1, [sp, #16]
 800b8d6:	695a      	ldr	r2, [r3, #20]
 800b8d8:	9204      	str	r2, [sp, #16]
 800b8da:	699b      	ldr	r3, [r3, #24]
 800b8dc:	9304      	str	r3, [sp, #16]
 800b8de:	9b04      	ldr	r3, [sp, #16]
 800b8e0:	e61e      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8e2:	681a      	ldr	r2, [r3, #0]
 800b8e4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b8e8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b8ea:	685a      	ldr	r2, [r3, #4]
 800b8ec:	0515      	lsls	r5, r2, #20
 800b8ee:	f57f af48 	bpl.w	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b8f2:	2807      	cmp	r0, #7
 800b8f4:	d807      	bhi.n	800b906 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b8f6:	2801      	cmp	r0, #1
 800b8f8:	f47f af43 	bne.w	800b782 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b8fc:	685a      	ldr	r2, [r3, #4]
 800b8fe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b902:	605a      	str	r2, [r3, #4]
 800b904:	e73d      	b.n	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b906:	4a22      	ldr	r2, [pc, #136]	; (800b990 <HAL_I2C_EV_IRQHandler+0x980>)
 800b908:	3808      	subs	r0, #8
 800b90a:	40c2      	lsrs	r2, r0
 800b90c:	07d0      	lsls	r0, r2, #31
 800b90e:	f57f af38 	bpl.w	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b912:	e7f3      	b.n	800b8fc <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b914:	2300      	movs	r3, #0
 800b916:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b91a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b91c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b91e:	f7ff fa41 	bl	800ada4 <HAL_I2C_MemRxCpltCallback>
 800b922:	f7ff bba5 	b.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b926:	9205      	str	r2, [sp, #20]
 800b928:	695a      	ldr	r2, [r3, #20]
 800b92a:	9205      	str	r2, [sp, #20]
 800b92c:	699a      	ldr	r2, [r3, #24]
 800b92e:	9205      	str	r2, [sp, #20]
 800b930:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b932:	681a      	ldr	r2, [r3, #0]
 800b934:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b938:	601a      	str	r2, [r3, #0]
 800b93a:	e5f1      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b93c:	681a      	ldr	r2, [r3, #0]
 800b93e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b942:	601a      	str	r2, [r3, #0]
 800b944:	e6b2      	b.n	800b6ac <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b946:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b948:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b94a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b94e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b950:	6859      	ldr	r1, [r3, #4]
 800b952:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b956:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b958:	691b      	ldr	r3, [r3, #16]
 800b95a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b95c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b95e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b960:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b962:	b29b      	uxth	r3, r3
 800b964:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b966:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b96a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b96c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b970:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b972:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b974:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b976:	f47f aed9 	bne.w	800b72c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b97a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b97e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b980:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b982:	f7ff fa0f 	bl	800ada4 <HAL_I2C_MemRxCpltCallback>
 800b986:	f7ff bb73 	b.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b98a:	bf00      	nop
 800b98c:	20000090 	.word	0x20000090
 800b990:	01000101 	.word	0x01000101

0800b994 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b994:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b998:	2a20      	cmp	r2, #32
{
 800b99a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b99c:	fa5f fc82 	uxtb.w	ip, r2
 800b9a0:	d001      	beq.n	800b9a6 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9a2:	2002      	movs	r0, #2
  }
}
 800b9a4:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b9a6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9a8:	2024      	movs	r0, #36	; 0x24
 800b9aa:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9ae:	6810      	ldr	r0, [r2, #0]
 800b9b0:	f020 0001 	bic.w	r0, r0, #1
 800b9b4:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b9b6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9b8:	f020 0010 	bic.w	r0, r0, #16
 800b9bc:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b9be:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9c0:	4301      	orrs	r1, r0
 800b9c2:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b9c4:	6811      	ldr	r1, [r2, #0]
 800b9c6:	f041 0101 	orr.w	r1, r1, #1
 800b9ca:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b9cc:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b9ce:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b9d2:	4770      	bx	lr

0800b9d4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b9d4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b9d8:	2a20      	cmp	r2, #32
 800b9da:	d001      	beq.n	800b9e0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9dc:	2002      	movs	r0, #2
  }
}
 800b9de:	4770      	bx	lr
{
 800b9e0:	b410      	push	{r4}
 800b9e2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b9e6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9e8:	2224      	movs	r2, #36	; 0x24
 800b9ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9ee:	6822      	ldr	r2, [r4, #0]
 800b9f0:	f022 0201 	bic.w	r2, r2, #1
 800b9f4:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b9f6:	4603      	mov	r3, r0
 800b9f8:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b9fa:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b9fe:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ba00:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ba02:	b289      	uxth	r1, r1
 800ba04:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ba06:	6822      	ldr	r2, [r4, #0]
 800ba08:	f042 0201 	orr.w	r2, r2, #1
 800ba0c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ba0e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ba12:	2000      	movs	r0, #0
}
 800ba14:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba18:	4770      	bx	lr
 800ba1a:	bf00      	nop

0800ba1c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ba1c:	2800      	cmp	r0, #0
 800ba1e:	d069      	beq.n	800baf4 <HAL_LTDC_Init+0xd8>
{
 800ba20:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ba22:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ba26:	4604      	mov	r4, r0
 800ba28:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba2c:	2b00      	cmp	r3, #0
 800ba2e:	d05c      	beq.n	800baea <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba30:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba32:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba34:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba38:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba3c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba3e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba40:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba44:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ba48:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba4a:	6999      	ldr	r1, [r3, #24]
 800ba4c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba4e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba50:	430a      	orrs	r2, r1
 800ba52:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba54:	689a      	ldr	r2, [r3, #8]
 800ba56:	4928      	ldr	r1, [pc, #160]	; (800baf8 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ba58:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba5a:	400a      	ands	r2, r1
 800ba5c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ba5e:	689a      	ldr	r2, [r3, #8]
 800ba60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba64:	69a0      	ldr	r0, [r4, #24]
 800ba66:	4302      	orrs	r2, r0
 800ba68:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba6a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ba6c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba6e:	400a      	ands	r2, r1
 800ba70:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ba72:	68da      	ldr	r2, [r3, #12]
 800ba74:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba78:	6a20      	ldr	r0, [r4, #32]
 800ba7a:	4302      	orrs	r2, r0
 800ba7c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba7e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ba80:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba82:	400a      	ands	r2, r1
 800ba84:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ba86:	691a      	ldr	r2, [r3, #16]
 800ba88:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba8c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ba8e:	4302      	orrs	r2, r0
 800ba90:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba92:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ba94:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba96:	400a      	ands	r2, r1
 800ba98:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ba9a:	695a      	ldr	r2, [r3, #20]
 800ba9c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ba9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800baa2:	430a      	orrs	r2, r1
 800baa4:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800baa6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800baa8:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800baac:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bab0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bab4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bab6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bab8:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800babc:	432a      	orrs	r2, r5
 800babe:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bac2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bac6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bac8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800baca:	f042 0206 	orr.w	r2, r2, #6
 800bace:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bad0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bad2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bad6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bad8:	ea42 020c 	orr.w	r2, r2, ip
 800badc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bade:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bae2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bae6:	4608      	mov	r0, r1
}
 800bae8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800baea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800baee:	f7f5 fd43 	bl	8001578 <HAL_LTDC_MspInit>
 800baf2:	e79d      	b.n	800ba30 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800baf4:	2001      	movs	r0, #1
}
 800baf6:	4770      	bx	lr
 800baf8:	f000f800 	.word	0xf000f800

0800bafc <HAL_LTDC_ErrorCallback>:
 800bafc:	4770      	bx	lr
 800bafe:	bf00      	nop

0800bb00 <HAL_LTDC_ReloadEventCallback>:
 800bb00:	4770      	bx	lr
 800bb02:	bf00      	nop

0800bb04 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bb04:	6803      	ldr	r3, [r0, #0]
{
 800bb06:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bb08:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bb0a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb0c:	076a      	lsls	r2, r5, #29
{
 800bb0e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb10:	d501      	bpl.n	800bb16 <HAL_LTDC_IRQHandler+0x12>
 800bb12:	0771      	lsls	r1, r6, #29
 800bb14:	d41d      	bmi.n	800bb52 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bb16:	07aa      	lsls	r2, r5, #30
 800bb18:	d501      	bpl.n	800bb1e <HAL_LTDC_IRQHandler+0x1a>
 800bb1a:	07b3      	lsls	r3, r6, #30
 800bb1c:	d42d      	bmi.n	800bb7a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bb1e:	07e8      	lsls	r0, r5, #31
 800bb20:	d501      	bpl.n	800bb26 <HAL_LTDC_IRQHandler+0x22>
 800bb22:	07f1      	lsls	r1, r6, #31
 800bb24:	d440      	bmi.n	800bba8 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bb26:	072a      	lsls	r2, r5, #28
 800bb28:	d501      	bpl.n	800bb2e <HAL_LTDC_IRQHandler+0x2a>
 800bb2a:	0733      	lsls	r3, r6, #28
 800bb2c:	d400      	bmi.n	800bb30 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bb2e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb30:	6823      	ldr	r3, [r4, #0]
 800bb32:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb34:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb36:	f022 0208 	bic.w	r2, r2, #8
 800bb3a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb3c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb3e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bb40:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb42:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb46:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bb4a:	4620      	mov	r0, r4
 800bb4c:	f7ff ffd8 	bl	800bb00 <HAL_LTDC_ReloadEventCallback>
}
 800bb50:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bb52:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb54:	f022 0204 	bic.w	r2, r2, #4
 800bb58:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bb5a:	2204      	movs	r2, #4
 800bb5c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bb5e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bb62:	f043 0301 	orr.w	r3, r3, #1
 800bb66:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bb6a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb6c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb70:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb74:	f7ff ffc2 	bl	800bafc <HAL_LTDC_ErrorCallback>
 800bb78:	e7cd      	b.n	800bb16 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bb7a:	6823      	ldr	r3, [r4, #0]
 800bb7c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb7e:	f022 0202 	bic.w	r2, r2, #2
 800bb82:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bb84:	2202      	movs	r2, #2
 800bb86:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bb88:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bb8c:	f043 0302 	orr.w	r3, r3, #2
 800bb90:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb94:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bb96:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb98:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb9c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bba0:	4620      	mov	r0, r4
 800bba2:	f7ff ffab 	bl	800bafc <HAL_LTDC_ErrorCallback>
 800bba6:	e7ba      	b.n	800bb1e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bba8:	6823      	ldr	r3, [r4, #0]
 800bbaa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bbac:	f022 0201 	bic.w	r2, r2, #1
 800bbb0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bbb2:	2201      	movs	r2, #1
 800bbb4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bbb6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bbb8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bbbc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bbc0:	4620      	mov	r0, r4
 800bbc2:	f7f6 fcd5 	bl	8002570 <HAL_LTDC_LineEventCallback>
 800bbc6:	e7ae      	b.n	800bb26 <HAL_LTDC_IRQHandler+0x22>

0800bbc8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bbc8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bbcc:	2b01      	cmp	r3, #1
 800bbce:	f000 80c2 	beq.w	800bd56 <HAL_LTDC_ConfigLayer+0x18e>
{
 800bbd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbd6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbda:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbde:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbe2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbe4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbe6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbea:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bbee:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbf2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bbf6:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbfa:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bbfe:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc00:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc04:	460c      	mov	r4, r1
 800bc06:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc08:	9301      	str	r3, [sp, #4]
 800bc0a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc0c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc0e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bc12:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc16:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc18:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc1a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc20:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc24:	6823      	ldr	r3, [r4, #0]
 800bc26:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc2a:	9b01      	ldr	r3, [sp, #4]
 800bc2c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc30:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc34:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc36:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bc38:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc3c:	1c51      	adds	r1, r2, #1
 800bc3e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bc42:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc44:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc46:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc4a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc4e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bc52:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bc56:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bc5a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc5e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc62:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc64:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc66:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bc6a:	3301      	adds	r3, #1
 800bc6c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bc70:	4403      	add	r3, r0
 800bc72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bc76:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc7a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc7e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc80:	f023 0307 	bic.w	r3, r3, #7
 800bc84:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc88:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc8c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc90:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bc94:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bc98:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc9c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bca0:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bca4:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bca8:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bcac:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bcb0:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bcb4:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bcb8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bcbc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bcc0:	696b      	ldr	r3, [r5, #20]
 800bcc2:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bcc6:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bcca:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bcce:	f023 0307 	bic.w	r3, r3, #7
 800bcd2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bcd6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bcda:	4303      	orrs	r3, r0
 800bcdc:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bce0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bce4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bce6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcea:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bcee:	bb69      	cbnz	r1, 800bd4c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bcf0:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcf2:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcf4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcf6:	fb03 f707 	mul.w	r7, r3, r7
 800bcfa:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcfc:	fb02 f303 	mul.w	r3, r2, r3
 800bd00:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bd04:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd08:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bd0a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bd0e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bd12:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bd16:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bd1a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bd1e:	f023 0307 	bic.w	r3, r3, #7
 800bd22:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd26:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd2a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd2e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd30:	4313      	orrs	r3, r2
 800bd32:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bd36:	2300      	movs	r3, #0
  return HAL_OK;
 800bd38:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd3a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bd3e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd42:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bd46:	b003      	add	sp, #12
 800bd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bd4c:	3901      	subs	r1, #1
 800bd4e:	2906      	cmp	r1, #6
 800bd50:	d903      	bls.n	800bd5a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bd52:	2301      	movs	r3, #1
 800bd54:	e7cd      	b.n	800bcf2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bd56:	2002      	movs	r0, #2
}
 800bd58:	4770      	bx	lr
 800bd5a:	4b02      	ldr	r3, [pc, #8]	; (800bd64 <HAL_LTDC_ConfigLayer+0x19c>)
 800bd5c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bd60:	e7c7      	b.n	800bcf2 <HAL_LTDC_ConfigLayer+0x12a>
 800bd62:	bf00      	nop
 800bd64:	0802f650 	.word	0x0802f650

0800bd68 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bd68:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bd6c:	2b01      	cmp	r3, #1
 800bd6e:	d019      	beq.n	800bda4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd70:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd72:	2302      	movs	r3, #2
{
 800bd74:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd76:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd7a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd7c:	4c0a      	ldr	r4, [pc, #40]	; (800bda8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd7e:	f023 0301 	bic.w	r3, r3, #1
 800bd82:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd84:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd86:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bd88:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd8a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd8e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd92:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd94:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd98:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bd9c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bda0:	4618      	mov	r0, r3
}
 800bda2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bda4:	2002      	movs	r0, #2
}
 800bda6:	4770      	bx	lr
 800bda8:	40016800 	.word	0x40016800

0800bdac <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bdac:	2800      	cmp	r0, #0
 800bdae:	f000 81a2 	beq.w	800c0f6 <HAL_RCC_OscConfig+0x34a>
{
 800bdb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdb6:	6803      	ldr	r3, [r0, #0]
 800bdb8:	07dd      	lsls	r5, r3, #31
{
 800bdba:	b082      	sub	sp, #8
 800bdbc:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdbe:	d52f      	bpl.n	800be20 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdc0:	499e      	ldr	r1, [pc, #632]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bdc2:	688a      	ldr	r2, [r1, #8]
 800bdc4:	f002 020c 	and.w	r2, r2, #12
 800bdc8:	2a04      	cmp	r2, #4
 800bdca:	f000 80ed 	beq.w	800bfa8 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bdce:	688a      	ldr	r2, [r1, #8]
 800bdd0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdd4:	2a08      	cmp	r2, #8
 800bdd6:	f000 80e3 	beq.w	800bfa0 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bdda:	6863      	ldr	r3, [r4, #4]
 800bddc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bde0:	f000 80ec 	beq.w	800bfbc <HAL_RCC_OscConfig+0x210>
 800bde4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bde8:	f000 8175 	beq.w	800c0d6 <HAL_RCC_OscConfig+0x32a>
 800bdec:	4d93      	ldr	r5, [pc, #588]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bdee:	682a      	ldr	r2, [r5, #0]
 800bdf0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bdf4:	602a      	str	r2, [r5, #0]
 800bdf6:	682a      	ldr	r2, [r5, #0]
 800bdf8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bdfc:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bdfe:	2b00      	cmp	r3, #0
 800be00:	f040 80e1 	bne.w	800bfc6 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800be04:	f7fd fdb8 	bl	8009978 <HAL_GetTick>
 800be08:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be0a:	e005      	b.n	800be18 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800be0c:	f7fd fdb4 	bl	8009978 <HAL_GetTick>
 800be10:	1b80      	subs	r0, r0, r6
 800be12:	2864      	cmp	r0, #100	; 0x64
 800be14:	f200 8101 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be18:	682b      	ldr	r3, [r5, #0]
 800be1a:	039b      	lsls	r3, r3, #14
 800be1c:	d4f6      	bmi.n	800be0c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800be1e:	6823      	ldr	r3, [r4, #0]
 800be20:	079f      	lsls	r7, r3, #30
 800be22:	d528      	bpl.n	800be76 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be24:	4a85      	ldr	r2, [pc, #532]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800be26:	6891      	ldr	r1, [r2, #8]
 800be28:	f011 0f0c 	tst.w	r1, #12
 800be2c:	f000 8090 	beq.w	800bf50 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800be30:	6891      	ldr	r1, [r2, #8]
 800be32:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be36:	2908      	cmp	r1, #8
 800be38:	f000 8086 	beq.w	800bf48 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800be3c:	68e3      	ldr	r3, [r4, #12]
 800be3e:	2b00      	cmp	r3, #0
 800be40:	f000 810e 	beq.w	800c060 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800be44:	4b7e      	ldr	r3, [pc, #504]	; (800c040 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be46:	4e7d      	ldr	r6, [pc, #500]	; (800c03c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800be48:	2201      	movs	r2, #1
 800be4a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800be4c:	f7fd fd94 	bl	8009978 <HAL_GetTick>
 800be50:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be52:	e005      	b.n	800be60 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800be54:	f7fd fd90 	bl	8009978 <HAL_GetTick>
 800be58:	1b40      	subs	r0, r0, r5
 800be5a:	2802      	cmp	r0, #2
 800be5c:	f200 80dd 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be60:	6833      	ldr	r3, [r6, #0]
 800be62:	0798      	lsls	r0, r3, #30
 800be64:	d5f6      	bpl.n	800be54 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800be66:	6833      	ldr	r3, [r6, #0]
 800be68:	6922      	ldr	r2, [r4, #16]
 800be6a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800be6e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800be72:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800be74:	6823      	ldr	r3, [r4, #0]
 800be76:	071a      	lsls	r2, r3, #28
 800be78:	d451      	bmi.n	800bf1e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800be7a:	0758      	lsls	r0, r3, #29
 800be7c:	d52f      	bpl.n	800bede <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800be7e:	4a6f      	ldr	r2, [pc, #444]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800be80:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800be82:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800be86:	d07f      	beq.n	800bf88 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800be88:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800be8a:	4e6e      	ldr	r6, [pc, #440]	; (800c044 <HAL_RCC_OscConfig+0x298>)
 800be8c:	6833      	ldr	r3, [r6, #0]
 800be8e:	05d9      	lsls	r1, r3, #23
 800be90:	f140 80b3 	bpl.w	800bffa <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800be94:	68a3      	ldr	r3, [r4, #8]
 800be96:	2b01      	cmp	r3, #1
 800be98:	f000 80c3 	beq.w	800c022 <HAL_RCC_OscConfig+0x276>
 800be9c:	2b05      	cmp	r3, #5
 800be9e:	f000 812c 	beq.w	800c0fa <HAL_RCC_OscConfig+0x34e>
 800bea2:	4e66      	ldr	r6, [pc, #408]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bea4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bea6:	f022 0201 	bic.w	r2, r2, #1
 800beaa:	6732      	str	r2, [r6, #112]	; 0x70
 800beac:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800beae:	f022 0204 	bic.w	r2, r2, #4
 800beb2:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800beb4:	2b00      	cmp	r3, #0
 800beb6:	f040 80b9 	bne.w	800c02c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800beba:	f7fd fd5d 	bl	8009978 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bebe:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800bec2:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bec4:	e005      	b.n	800bed2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bec6:	f7fd fd57 	bl	8009978 <HAL_GetTick>
 800beca:	1bc0      	subs	r0, r0, r7
 800becc:	4540      	cmp	r0, r8
 800bece:	f200 80a4 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bed2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800bed4:	0798      	lsls	r0, r3, #30
 800bed6:	d4f6      	bmi.n	800bec6 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800bed8:	2d00      	cmp	r5, #0
 800beda:	f040 8106 	bne.w	800c0ea <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800bede:	69a0      	ldr	r0, [r4, #24]
 800bee0:	b1c8      	cbz	r0, 800bf16 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800bee2:	4d56      	ldr	r5, [pc, #344]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bee4:	68ab      	ldr	r3, [r5, #8]
 800bee6:	f003 030c 	and.w	r3, r3, #12
 800beea:	2b08      	cmp	r3, #8
 800beec:	f000 80c9 	beq.w	800c082 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bef0:	4b53      	ldr	r3, [pc, #332]	; (800c040 <HAL_RCC_OscConfig+0x294>)
 800bef2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bef4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800bef6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bef8:	f000 8109 	beq.w	800c10e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800befc:	f7fd fd3c 	bl	8009978 <HAL_GetTick>
 800bf00:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf02:	e005      	b.n	800bf10 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bf04:	f7fd fd38 	bl	8009978 <HAL_GetTick>
 800bf08:	1b00      	subs	r0, r0, r4
 800bf0a:	2802      	cmp	r0, #2
 800bf0c:	f200 8085 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf10:	682b      	ldr	r3, [r5, #0]
 800bf12:	019b      	lsls	r3, r3, #6
 800bf14:	d4f6      	bmi.n	800bf04 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800bf16:	2000      	movs	r0, #0
}
 800bf18:	b002      	add	sp, #8
 800bf1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bf1e:	6963      	ldr	r3, [r4, #20]
 800bf20:	b30b      	cbz	r3, 800bf66 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bf22:	4b47      	ldr	r3, [pc, #284]	; (800c040 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf24:	4e45      	ldr	r6, [pc, #276]	; (800c03c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bf26:	2201      	movs	r2, #1
 800bf28:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf2c:	f7fd fd24 	bl	8009978 <HAL_GetTick>
 800bf30:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf32:	e004      	b.n	800bf3e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf34:	f7fd fd20 	bl	8009978 <HAL_GetTick>
 800bf38:	1b40      	subs	r0, r0, r5
 800bf3a:	2802      	cmp	r0, #2
 800bf3c:	d86d      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf3e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf40:	079b      	lsls	r3, r3, #30
 800bf42:	d5f7      	bpl.n	800bf34 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bf44:	6823      	ldr	r3, [r4, #0]
 800bf46:	e798      	b.n	800be7a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bf48:	6852      	ldr	r2, [r2, #4]
 800bf4a:	0256      	lsls	r6, r2, #9
 800bf4c:	f53f af76 	bmi.w	800be3c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bf50:	4a3a      	ldr	r2, [pc, #232]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bf52:	6812      	ldr	r2, [r2, #0]
 800bf54:	0795      	lsls	r5, r2, #30
 800bf56:	d544      	bpl.n	800bfe2 <HAL_RCC_OscConfig+0x236>
 800bf58:	68e2      	ldr	r2, [r4, #12]
 800bf5a:	2a01      	cmp	r2, #1
 800bf5c:	d041      	beq.n	800bfe2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bf5e:	2001      	movs	r0, #1
}
 800bf60:	b002      	add	sp, #8
 800bf62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bf66:	4a36      	ldr	r2, [pc, #216]	; (800c040 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf68:	4e34      	ldr	r6, [pc, #208]	; (800c03c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bf6a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf6e:	f7fd fd03 	bl	8009978 <HAL_GetTick>
 800bf72:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf74:	e004      	b.n	800bf80 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf76:	f7fd fcff 	bl	8009978 <HAL_GetTick>
 800bf7a:	1b40      	subs	r0, r0, r5
 800bf7c:	2802      	cmp	r0, #2
 800bf7e:	d84c      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf80:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf82:	079f      	lsls	r7, r3, #30
 800bf84:	d4f7      	bmi.n	800bf76 <HAL_RCC_OscConfig+0x1ca>
 800bf86:	e7dd      	b.n	800bf44 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bf88:	9301      	str	r3, [sp, #4]
 800bf8a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf8c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bf90:	6413      	str	r3, [r2, #64]	; 0x40
 800bf92:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf94:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bf98:	9301      	str	r3, [sp, #4]
 800bf9a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bf9c:	2501      	movs	r5, #1
 800bf9e:	e774      	b.n	800be8a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bfa0:	684a      	ldr	r2, [r1, #4]
 800bfa2:	0250      	lsls	r0, r2, #9
 800bfa4:	f57f af19 	bpl.w	800bdda <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bfa8:	4a24      	ldr	r2, [pc, #144]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bfaa:	6812      	ldr	r2, [r2, #0]
 800bfac:	0391      	lsls	r1, r2, #14
 800bfae:	f57f af37 	bpl.w	800be20 <HAL_RCC_OscConfig+0x74>
 800bfb2:	6862      	ldr	r2, [r4, #4]
 800bfb4:	2a00      	cmp	r2, #0
 800bfb6:	f47f af33 	bne.w	800be20 <HAL_RCC_OscConfig+0x74>
 800bfba:	e7d0      	b.n	800bf5e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bfbc:	4a1f      	ldr	r2, [pc, #124]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bfbe:	6813      	ldr	r3, [r2, #0]
 800bfc0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bfc4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bfc6:	f7fd fcd7 	bl	8009978 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfca:	4e1c      	ldr	r6, [pc, #112]	; (800c03c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bfcc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfce:	e004      	b.n	800bfda <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bfd0:	f7fd fcd2 	bl	8009978 <HAL_GetTick>
 800bfd4:	1b40      	subs	r0, r0, r5
 800bfd6:	2864      	cmp	r0, #100	; 0x64
 800bfd8:	d81f      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfda:	6833      	ldr	r3, [r6, #0]
 800bfdc:	039a      	lsls	r2, r3, #14
 800bfde:	d5f7      	bpl.n	800bfd0 <HAL_RCC_OscConfig+0x224>
 800bfe0:	e71d      	b.n	800be1e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bfe2:	4916      	ldr	r1, [pc, #88]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bfe4:	6920      	ldr	r0, [r4, #16]
 800bfe6:	680a      	ldr	r2, [r1, #0]
 800bfe8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bfec:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bff0:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bff2:	071a      	lsls	r2, r3, #28
 800bff4:	f57f af41 	bpl.w	800be7a <HAL_RCC_OscConfig+0xce>
 800bff8:	e791      	b.n	800bf1e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bffa:	6833      	ldr	r3, [r6, #0]
 800bffc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c000:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c002:	f7fd fcb9 	bl	8009978 <HAL_GetTick>
 800c006:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c008:	6833      	ldr	r3, [r6, #0]
 800c00a:	05da      	lsls	r2, r3, #23
 800c00c:	f53f af42 	bmi.w	800be94 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c010:	f7fd fcb2 	bl	8009978 <HAL_GetTick>
 800c014:	1bc0      	subs	r0, r0, r7
 800c016:	2802      	cmp	r0, #2
 800c018:	d9f6      	bls.n	800c008 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c01a:	2003      	movs	r0, #3
}
 800c01c:	b002      	add	sp, #8
 800c01e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c022:	4a06      	ldr	r2, [pc, #24]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800c024:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c026:	f043 0301 	orr.w	r3, r3, #1
 800c02a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c02c:	f7fd fca4 	bl	8009978 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c030:	4f02      	ldr	r7, [pc, #8]	; (800c03c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c032:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c034:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c038:	e00b      	b.n	800c052 <HAL_RCC_OscConfig+0x2a6>
 800c03a:	bf00      	nop
 800c03c:	40023800 	.word	0x40023800
 800c040:	42470000 	.word	0x42470000
 800c044:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c048:	f7fd fc96 	bl	8009978 <HAL_GetTick>
 800c04c:	1b80      	subs	r0, r0, r6
 800c04e:	4540      	cmp	r0, r8
 800c050:	d8e3      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c052:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c054:	079b      	lsls	r3, r3, #30
 800c056:	d5f7      	bpl.n	800c048 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c058:	2d00      	cmp	r5, #0
 800c05a:	f43f af40 	beq.w	800bede <HAL_RCC_OscConfig+0x132>
 800c05e:	e044      	b.n	800c0ea <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c060:	4a42      	ldr	r2, [pc, #264]	; (800c16c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c062:	4e43      	ldr	r6, [pc, #268]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c064:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c066:	f7fd fc87 	bl	8009978 <HAL_GetTick>
 800c06a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c06c:	e004      	b.n	800c078 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c06e:	f7fd fc83 	bl	8009978 <HAL_GetTick>
 800c072:	1b40      	subs	r0, r0, r5
 800c074:	2802      	cmp	r0, #2
 800c076:	d8d0      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c078:	6833      	ldr	r3, [r6, #0]
 800c07a:	0799      	lsls	r1, r3, #30
 800c07c:	d4f7      	bmi.n	800c06e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c07e:	6823      	ldr	r3, [r4, #0]
 800c080:	e6f9      	b.n	800be76 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c082:	2801      	cmp	r0, #1
 800c084:	f43f af48 	beq.w	800bf18 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c088:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c08a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c08c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c090:	4291      	cmp	r1, r2
 800c092:	f47f af64 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c096:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c098:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c09c:	4291      	cmp	r1, r2
 800c09e:	f47f af5e 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c0a4:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c0a8:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c0aa:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c0ae:	f47f af56 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c0b4:	0852      	lsrs	r2, r2, #1
 800c0b6:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c0ba:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0bc:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c0c0:	f47f af4d 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c0c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c0c6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0ca:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c0ce:	bf14      	ite	ne
 800c0d0:	2001      	movne	r0, #1
 800c0d2:	2000      	moveq	r0, #0
 800c0d4:	e720      	b.n	800bf18 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c0d6:	4b26      	ldr	r3, [pc, #152]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
 800c0d8:	681a      	ldr	r2, [r3, #0]
 800c0da:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c0de:	601a      	str	r2, [r3, #0]
 800c0e0:	681a      	ldr	r2, [r3, #0]
 800c0e2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c0e6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c0e8:	e76d      	b.n	800bfc6 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c0ea:	4a21      	ldr	r2, [pc, #132]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
 800c0ec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c0ee:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c0f2:	6413      	str	r3, [r2, #64]	; 0x40
 800c0f4:	e6f3      	b.n	800bede <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c0f6:	2001      	movs	r0, #1
}
 800c0f8:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c0fa:	4b1d      	ldr	r3, [pc, #116]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
 800c0fc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c0fe:	f042 0204 	orr.w	r2, r2, #4
 800c102:	671a      	str	r2, [r3, #112]	; 0x70
 800c104:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c106:	f042 0201 	orr.w	r2, r2, #1
 800c10a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c10c:	e78e      	b.n	800c02c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c10e:	f7fd fc33 	bl	8009978 <HAL_GetTick>
 800c112:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c114:	e005      	b.n	800c122 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c116:	f7fd fc2f 	bl	8009978 <HAL_GetTick>
 800c11a:	1b80      	subs	r0, r0, r6
 800c11c:	2802      	cmp	r0, #2
 800c11e:	f63f af7c 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c122:	682b      	ldr	r3, [r5, #0]
 800c124:	0199      	lsls	r1, r3, #6
 800c126:	d4f6      	bmi.n	800c116 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c128:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c12c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c12e:	430b      	orrs	r3, r1
 800c130:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c134:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c138:	0852      	lsrs	r2, r2, #1
 800c13a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c13e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c140:	490a      	ldr	r1, [pc, #40]	; (800c16c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c142:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c146:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c148:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c14a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c14c:	f7fd fc14 	bl	8009978 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c150:	4d07      	ldr	r5, [pc, #28]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c152:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c154:	e005      	b.n	800c162 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c156:	f7fd fc0f 	bl	8009978 <HAL_GetTick>
 800c15a:	1b00      	subs	r0, r0, r4
 800c15c:	2802      	cmp	r0, #2
 800c15e:	f63f af5c 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c162:	682b      	ldr	r3, [r5, #0]
 800c164:	019a      	lsls	r2, r3, #6
 800c166:	d5f6      	bpl.n	800c156 <HAL_RCC_OscConfig+0x3aa>
 800c168:	e6d5      	b.n	800bf16 <HAL_RCC_OscConfig+0x16a>
 800c16a:	bf00      	nop
 800c16c:	42470000 	.word	0x42470000
 800c170:	40023800 	.word	0x40023800

0800c174 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c174:	4916      	ldr	r1, [pc, #88]	; (800c1d0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c176:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c178:	688b      	ldr	r3, [r1, #8]
 800c17a:	f003 030c 	and.w	r3, r3, #12
 800c17e:	2b04      	cmp	r3, #4
 800c180:	d01b      	beq.n	800c1ba <HAL_RCC_GetSysClockFreq+0x46>
 800c182:	2b08      	cmp	r3, #8
 800c184:	d117      	bne.n	800c1b6 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c186:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c188:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c18a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c18c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c190:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c194:	d113      	bne.n	800c1be <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c196:	480f      	ldr	r0, [pc, #60]	; (800c1d4 <HAL_RCC_GetSysClockFreq+0x60>)
 800c198:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c19c:	fba1 0100 	umull	r0, r1, r1, r0
 800c1a0:	f7f4 f8d6 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c1a4:	4b0a      	ldr	r3, [pc, #40]	; (800c1d0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c1a6:	685b      	ldr	r3, [r3, #4]
 800c1a8:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c1ac:	3301      	adds	r3, #1
 800c1ae:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c1b0:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c1b4:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c1b6:	4807      	ldr	r0, [pc, #28]	; (800c1d4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c1b8:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c1ba:	4807      	ldr	r0, [pc, #28]	; (800c1d8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c1bc:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c1be:	4806      	ldr	r0, [pc, #24]	; (800c1d8 <HAL_RCC_GetSysClockFreq+0x64>)
 800c1c0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c1c4:	2300      	movs	r3, #0
 800c1c6:	fba1 0100 	umull	r0, r1, r1, r0
 800c1ca:	f7f4 f8c1 	bl	8000350 <__aeabi_uldivmod>
 800c1ce:	e7e9      	b.n	800c1a4 <HAL_RCC_GetSysClockFreq+0x30>
 800c1d0:	40023800 	.word	0x40023800
 800c1d4:	00f42400 	.word	0x00f42400
 800c1d8:	007a1200 	.word	0x007a1200

0800c1dc <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c1dc:	2800      	cmp	r0, #0
 800c1de:	f000 8087 	beq.w	800c2f0 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1e2:	4a48      	ldr	r2, [pc, #288]	; (800c304 <HAL_RCC_ClockConfig+0x128>)
 800c1e4:	6813      	ldr	r3, [r2, #0]
 800c1e6:	f003 030f 	and.w	r3, r3, #15
 800c1ea:	428b      	cmp	r3, r1
{
 800c1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1f0:	460d      	mov	r5, r1
 800c1f2:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1f4:	d209      	bcs.n	800c20a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1f6:	b2cb      	uxtb	r3, r1
 800c1f8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1fa:	6813      	ldr	r3, [r2, #0]
 800c1fc:	f003 030f 	and.w	r3, r3, #15
 800c200:	428b      	cmp	r3, r1
 800c202:	d002      	beq.n	800c20a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c204:	2001      	movs	r0, #1
}
 800c206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c20a:	6823      	ldr	r3, [r4, #0]
 800c20c:	0798      	lsls	r0, r3, #30
 800c20e:	d514      	bpl.n	800c23a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c210:	0759      	lsls	r1, r3, #29
 800c212:	d504      	bpl.n	800c21e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c214:	493c      	ldr	r1, [pc, #240]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c216:	688a      	ldr	r2, [r1, #8]
 800c218:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c21c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c21e:	071a      	lsls	r2, r3, #28
 800c220:	d504      	bpl.n	800c22c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c222:	4939      	ldr	r1, [pc, #228]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c224:	688a      	ldr	r2, [r1, #8]
 800c226:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c22a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c22c:	4936      	ldr	r1, [pc, #216]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c22e:	68a0      	ldr	r0, [r4, #8]
 800c230:	688a      	ldr	r2, [r1, #8]
 800c232:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c236:	4302      	orrs	r2, r0
 800c238:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c23a:	07df      	lsls	r7, r3, #31
 800c23c:	d521      	bpl.n	800c282 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c23e:	6862      	ldr	r2, [r4, #4]
 800c240:	2a01      	cmp	r2, #1
 800c242:	d057      	beq.n	800c2f4 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c244:	1e93      	subs	r3, r2, #2
 800c246:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c248:	4b2f      	ldr	r3, [pc, #188]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c24a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c24c:	d94d      	bls.n	800c2ea <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c24e:	0799      	lsls	r1, r3, #30
 800c250:	d5d8      	bpl.n	800c204 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c252:	4e2d      	ldr	r6, [pc, #180]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c254:	68b3      	ldr	r3, [r6, #8]
 800c256:	f023 0303 	bic.w	r3, r3, #3
 800c25a:	4313      	orrs	r3, r2
 800c25c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c25e:	f7fd fb8b 	bl	8009978 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c262:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c266:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c268:	e004      	b.n	800c274 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c26a:	f7fd fb85 	bl	8009978 <HAL_GetTick>
 800c26e:	1bc0      	subs	r0, r0, r7
 800c270:	4540      	cmp	r0, r8
 800c272:	d844      	bhi.n	800c2fe <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c274:	68b3      	ldr	r3, [r6, #8]
 800c276:	6862      	ldr	r2, [r4, #4]
 800c278:	f003 030c 	and.w	r3, r3, #12
 800c27c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c280:	d1f3      	bne.n	800c26a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c282:	4a20      	ldr	r2, [pc, #128]	; (800c304 <HAL_RCC_ClockConfig+0x128>)
 800c284:	6813      	ldr	r3, [r2, #0]
 800c286:	f003 030f 	and.w	r3, r3, #15
 800c28a:	42ab      	cmp	r3, r5
 800c28c:	d906      	bls.n	800c29c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c28e:	b2eb      	uxtb	r3, r5
 800c290:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c292:	6813      	ldr	r3, [r2, #0]
 800c294:	f003 030f 	and.w	r3, r3, #15
 800c298:	42ab      	cmp	r3, r5
 800c29a:	d1b3      	bne.n	800c204 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c29c:	6823      	ldr	r3, [r4, #0]
 800c29e:	075a      	lsls	r2, r3, #29
 800c2a0:	d506      	bpl.n	800c2b0 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c2a2:	4919      	ldr	r1, [pc, #100]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2a4:	68e0      	ldr	r0, [r4, #12]
 800c2a6:	688a      	ldr	r2, [r1, #8]
 800c2a8:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c2ac:	4302      	orrs	r2, r0
 800c2ae:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c2b0:	071b      	lsls	r3, r3, #28
 800c2b2:	d507      	bpl.n	800c2c4 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c2b4:	4a14      	ldr	r2, [pc, #80]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2b6:	6921      	ldr	r1, [r4, #16]
 800c2b8:	6893      	ldr	r3, [r2, #8]
 800c2ba:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c2be:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c2c2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2c4:	f7ff ff56 	bl	800c174 <HAL_RCC_GetSysClockFreq>
 800c2c8:	4a0f      	ldr	r2, [pc, #60]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2ca:	4c10      	ldr	r4, [pc, #64]	; (800c30c <HAL_RCC_ClockConfig+0x130>)
 800c2cc:	6892      	ldr	r2, [r2, #8]
 800c2ce:	4910      	ldr	r1, [pc, #64]	; (800c310 <HAL_RCC_ClockConfig+0x134>)
 800c2d0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c2d4:	4603      	mov	r3, r0
 800c2d6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c2d8:	480e      	ldr	r0, [pc, #56]	; (800c314 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2da:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c2dc:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2de:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c2e0:	f7f5 fb28 	bl	8001934 <HAL_InitTick>
  return HAL_OK;
 800c2e4:	2000      	movs	r0, #0
}
 800c2e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c2ea:	0198      	lsls	r0, r3, #6
 800c2ec:	d4b1      	bmi.n	800c252 <HAL_RCC_ClockConfig+0x76>
 800c2ee:	e789      	b.n	800c204 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c2f0:	2001      	movs	r0, #1
}
 800c2f2:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c2f4:	4b04      	ldr	r3, [pc, #16]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2f6:	681b      	ldr	r3, [r3, #0]
 800c2f8:	039e      	lsls	r6, r3, #14
 800c2fa:	d4aa      	bmi.n	800c252 <HAL_RCC_ClockConfig+0x76>
 800c2fc:	e782      	b.n	800c204 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c2fe:	2003      	movs	r0, #3
 800c300:	e781      	b.n	800c206 <HAL_RCC_ClockConfig+0x2a>
 800c302:	bf00      	nop
 800c304:	40023c00 	.word	0x40023c00
 800c308:	40023800 	.word	0x40023800
 800c30c:	0802f638 	.word	0x0802f638
 800c310:	20000090 	.word	0x20000090
 800c314:	20000098 	.word	0x20000098

0800c318 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c318:	4b04      	ldr	r3, [pc, #16]	; (800c32c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c31a:	4905      	ldr	r1, [pc, #20]	; (800c330 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c31c:	689b      	ldr	r3, [r3, #8]
 800c31e:	4a05      	ldr	r2, [pc, #20]	; (800c334 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c320:	6808      	ldr	r0, [r1, #0]
 800c322:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c326:	5cd3      	ldrb	r3, [r2, r3]
}
 800c328:	40d8      	lsrs	r0, r3
 800c32a:	4770      	bx	lr
 800c32c:	40023800 	.word	0x40023800
 800c330:	20000090 	.word	0x20000090
 800c334:	0802f648 	.word	0x0802f648

0800c338 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c338:	4b0e      	ldr	r3, [pc, #56]	; (800c374 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c33a:	220f      	movs	r2, #15
 800c33c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c33e:	689a      	ldr	r2, [r3, #8]
 800c340:	f002 0203 	and.w	r2, r2, #3
 800c344:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c346:	689a      	ldr	r2, [r3, #8]
 800c348:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c34c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c34e:	689a      	ldr	r2, [r3, #8]
 800c350:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c354:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c356:	689b      	ldr	r3, [r3, #8]
 800c358:	08db      	lsrs	r3, r3, #3
{
 800c35a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c35c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c360:	4c05      	ldr	r4, [pc, #20]	; (800c378 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c362:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c364:	6823      	ldr	r3, [r4, #0]
}
 800c366:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c36a:	f003 030f 	and.w	r3, r3, #15
 800c36e:	600b      	str	r3, [r1, #0]
}
 800c370:	4770      	bx	lr
 800c372:	bf00      	nop
 800c374:	40023800 	.word	0x40023800
 800c378:	40023c00 	.word	0x40023c00

0800c37c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c37c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c37e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c380:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c384:	b083      	sub	sp, #12
 800c386:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c388:	d111      	bne.n	800c3ae <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c38a:	f013 0f0c 	tst.w	r3, #12
 800c38e:	d16f      	bne.n	800c470 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c390:	0698      	lsls	r0, r3, #26
 800c392:	f100 80c2 	bmi.w	800c51a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c396:	f013 0310 	ands.w	r3, r3, #16
 800c39a:	f000 80bb 	beq.w	800c514 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c39e:	4b89      	ldr	r3, [pc, #548]	; (800c5c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c3a0:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c3a4:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c3a8:	2000      	movs	r0, #0
}
 800c3aa:	b003      	add	sp, #12
 800c3ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c3ae:	4b86      	ldr	r3, [pc, #536]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3b0:	4e86      	ldr	r6, [pc, #536]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c3b2:	2200      	movs	r2, #0
 800c3b4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c3b6:	f7fd fadf 	bl	8009978 <HAL_GetTick>
 800c3ba:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3bc:	e004      	b.n	800c3c8 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c3be:	f7fd fadb 	bl	8009978 <HAL_GetTick>
 800c3c2:	1b43      	subs	r3, r0, r5
 800c3c4:	2b02      	cmp	r3, #2
 800c3c6:	d850      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3c8:	6833      	ldr	r3, [r6, #0]
 800c3ca:	0118      	lsls	r0, r3, #4
 800c3cc:	d4f7      	bmi.n	800c3be <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c3ce:	6823      	ldr	r3, [r4, #0]
 800c3d0:	07d9      	lsls	r1, r3, #31
 800c3d2:	d506      	bpl.n	800c3e2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c3d4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c3d8:	0712      	lsls	r2, r2, #28
 800c3da:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c3de:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c3e2:	079a      	lsls	r2, r3, #30
 800c3e4:	d515      	bpl.n	800c412 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3e6:	4979      	ldr	r1, [pc, #484]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3e8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3ea:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3ee:	6865      	ldr	r5, [r4, #4]
 800c3f0:	0612      	lsls	r2, r2, #24
 800c3f2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c3f6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c3fa:	4302      	orrs	r2, r0
 800c3fc:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c400:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c404:	69e2      	ldr	r2, [r4, #28]
 800c406:	f020 001f 	bic.w	r0, r0, #31
 800c40a:	3a01      	subs	r2, #1
 800c40c:	4302      	orrs	r2, r0
 800c40e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c412:	065b      	lsls	r3, r3, #25
 800c414:	d509      	bpl.n	800c42a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c416:	1d20      	adds	r0, r4, #4
 800c418:	c80b      	ldmia	r0, {r0, r1, r3}
 800c41a:	061b      	lsls	r3, r3, #24
 800c41c:	4a6b      	ldr	r2, [pc, #428]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c41e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c422:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c426:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c42a:	4b67      	ldr	r3, [pc, #412]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c42c:	4e67      	ldr	r6, [pc, #412]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c42e:	2201      	movs	r2, #1
 800c430:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c432:	f7fd faa1 	bl	8009978 <HAL_GetTick>
 800c436:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c438:	e004      	b.n	800c444 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c43a:	f7fd fa9d 	bl	8009978 <HAL_GetTick>
 800c43e:	1b40      	subs	r0, r0, r5
 800c440:	2802      	cmp	r0, #2
 800c442:	d812      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c444:	6833      	ldr	r3, [r6, #0]
 800c446:	011f      	lsls	r7, r3, #4
 800c448:	d5f7      	bpl.n	800c43a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c44a:	6823      	ldr	r3, [r4, #0]
 800c44c:	e79d      	b.n	800c38a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c44e:	f7fd fa93 	bl	8009978 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c452:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c456:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c458:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c45a:	079b      	lsls	r3, r3, #30
 800c45c:	f100 80a5 	bmi.w	800c5aa <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c460:	f7fd fa8a 	bl	8009978 <HAL_GetTick>
 800c464:	1b80      	subs	r0, r0, r6
 800c466:	42b8      	cmp	r0, r7
 800c468:	d9f6      	bls.n	800c458 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c46a:	2003      	movs	r0, #3
}
 800c46c:	b003      	add	sp, #12
 800c46e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c470:	4b55      	ldr	r3, [pc, #340]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c472:	4e56      	ldr	r6, [pc, #344]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c474:	2200      	movs	r2, #0
 800c476:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c478:	f7fd fa7e 	bl	8009978 <HAL_GetTick>
 800c47c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c47e:	e004      	b.n	800c48a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c480:	f7fd fa7a 	bl	8009978 <HAL_GetTick>
 800c484:	1b43      	subs	r3, r0, r5
 800c486:	2b02      	cmp	r3, #2
 800c488:	d8ef      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c48a:	6833      	ldr	r3, [r6, #0]
 800c48c:	0098      	lsls	r0, r3, #2
 800c48e:	d4f7      	bmi.n	800c480 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c490:	6822      	ldr	r2, [r4, #0]
 800c492:	0751      	lsls	r1, r2, #29
 800c494:	d515      	bpl.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c496:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c498:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c49c:	6920      	ldr	r0, [r4, #16]
 800c49e:	061b      	lsls	r3, r3, #24
 800c4a0:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c4a4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4a8:	430b      	orrs	r3, r1
 800c4aa:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c4ae:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c4b2:	6a21      	ldr	r1, [r4, #32]
 800c4b4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c4b8:	3901      	subs	r1, #1
 800c4ba:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c4be:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c4c2:	0713      	lsls	r3, r2, #28
 800c4c4:	d514      	bpl.n	800c4f0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4c6:	4a41      	ldr	r2, [pc, #260]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4c8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4ca:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4ce:	6920      	ldr	r0, [r4, #16]
 800c4d0:	071b      	lsls	r3, r3, #28
 800c4d2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c4d6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4da:	430b      	orrs	r3, r1
 800c4dc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c4e0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c4e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c4e6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c4ea:	430b      	orrs	r3, r1
 800c4ec:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c4f0:	4b35      	ldr	r3, [pc, #212]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4f2:	4e36      	ldr	r6, [pc, #216]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c4f4:	2201      	movs	r2, #1
 800c4f6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c4f8:	f7fd fa3e 	bl	8009978 <HAL_GetTick>
 800c4fc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4fe:	e004      	b.n	800c50a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c500:	f7fd fa3a 	bl	8009978 <HAL_GetTick>
 800c504:	1b40      	subs	r0, r0, r5
 800c506:	2802      	cmp	r0, #2
 800c508:	d8af      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c50a:	6833      	ldr	r3, [r6, #0]
 800c50c:	009f      	lsls	r7, r3, #2
 800c50e:	d5f7      	bpl.n	800c500 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c510:	6823      	ldr	r3, [r4, #0]
 800c512:	e73d      	b.n	800c390 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c514:	4618      	mov	r0, r3
}
 800c516:	b003      	add	sp, #12
 800c518:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c51a:	4b2c      	ldr	r3, [pc, #176]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c51c:	4d2c      	ldr	r5, [pc, #176]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c51e:	2200      	movs	r2, #0
 800c520:	9201      	str	r2, [sp, #4]
 800c522:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c524:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c528:	641a      	str	r2, [r3, #64]	; 0x40
 800c52a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c52c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c530:	9301      	str	r3, [sp, #4]
 800c532:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c534:	682b      	ldr	r3, [r5, #0]
 800c536:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c53a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c53c:	f7fd fa1c 	bl	8009978 <HAL_GetTick>
 800c540:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c542:	e004      	b.n	800c54e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c544:	f7fd fa18 	bl	8009978 <HAL_GetTick>
 800c548:	1b83      	subs	r3, r0, r6
 800c54a:	2b02      	cmp	r3, #2
 800c54c:	d88d      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c54e:	682b      	ldr	r3, [r5, #0]
 800c550:	05d9      	lsls	r1, r3, #23
 800c552:	d5f7      	bpl.n	800c544 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c554:	4d1d      	ldr	r5, [pc, #116]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c556:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c558:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c55a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c55e:	d111      	bne.n	800c584 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c560:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c564:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c568:	d021      	beq.n	800c5ae <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c56a:	4918      	ldr	r1, [pc, #96]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c56c:	688a      	ldr	r2, [r1, #8]
 800c56e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c572:	608a      	str	r2, [r1, #8]
 800c574:	4a15      	ldr	r2, [pc, #84]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c576:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c578:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c57c:	430b      	orrs	r3, r1
 800c57e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c580:	6823      	ldr	r3, [r4, #0]
 800c582:	e708      	b.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c584:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c588:	4291      	cmp	r1, r2
 800c58a:	d0eb      	beq.n	800c564 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c58c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c58e:	4a0e      	ldr	r2, [pc, #56]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c590:	2101      	movs	r1, #1
 800c592:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c596:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c59a:	2100      	movs	r1, #0
 800c59c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c5a0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c5a2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c5a4:	07da      	lsls	r2, r3, #31
 800c5a6:	f53f af52 	bmi.w	800c44e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c5aa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c5ac:	e7d8      	b.n	800c560 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c5ae:	4807      	ldr	r0, [pc, #28]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c5b0:	6882      	ldr	r2, [r0, #8]
 800c5b2:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c5b6:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c5ba:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c5be:	430a      	orrs	r2, r1
 800c5c0:	6082      	str	r2, [r0, #8]
 800c5c2:	e7d7      	b.n	800c574 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c5c4:	42471000 	.word	0x42471000
 800c5c8:	42470000 	.word	0x42470000
 800c5cc:	40023800 	.word	0x40023800
 800c5d0:	40007000 	.word	0x40007000

0800c5d4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c5d4:	b1f0      	cbz	r0, 800c614 <HAL_SDRAM_Init+0x40>
{
 800c5d6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c5d8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5dc:	460d      	mov	r5, r1
 800c5de:	4604      	mov	r4, r0
 800c5e0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c5e4:	b18b      	cbz	r3, 800c60a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5e6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c5e8:	2302      	movs	r3, #2
 800c5ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5ee:	f851 0b04 	ldr.w	r0, [r1], #4
 800c5f2:	f000 fe51 	bl	800d298 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c5f6:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c5fa:	4629      	mov	r1, r5
 800c5fc:	f000 fe8a 	bl	800d314 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c600:	2301      	movs	r3, #1
 800c602:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c606:	2000      	movs	r0, #0
}
 800c608:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c60a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c60e:	f7f5 f929 	bl	8001864 <HAL_SDRAM_MspInit>
 800c612:	e7e8      	b.n	800c5e6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c614:	2001      	movs	r0, #1
}
 800c616:	4770      	bx	lr

0800c618 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c618:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c61a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c61e:	2b02      	cmp	r3, #2
{
 800c620:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c622:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c624:	d004      	beq.n	800c630 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c626:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c62a:	2c01      	cmp	r4, #1
 800c62c:	d001      	beq.n	800c632 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c62e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c630:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c632:	460e      	mov	r6, r1
 800c634:	2302      	movs	r3, #2
 800c636:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c63a:	6828      	ldr	r0, [r5, #0]
 800c63c:	f000 feb6 	bl	800d3ac <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c640:	6833      	ldr	r3, [r6, #0]
 800c642:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c644:	bf06      	itte	eq
 800c646:	2305      	moveq	r3, #5
 800c648:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c64c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c650:	2000      	movs	r0, #0
}
 800c652:	bd70      	pop	{r4, r5, r6, pc}

0800c654 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c654:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c656:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c65a:	2b02      	cmp	r3, #2
{
 800c65c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c65e:	b2d8      	uxtb	r0, r3
 800c660:	d005      	beq.n	800c66e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c662:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c666:	2b01      	cmp	r3, #1
 800c668:	b2dd      	uxtb	r5, r3
 800c66a:	d001      	beq.n	800c670 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c66c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c66e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c670:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c672:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c674:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c678:	f000 fec2 	bl	800d400 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c67c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c680:	2000      	movs	r0, #0
}
 800c682:	bd38      	pop	{r3, r4, r5, pc}

0800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c688:	b082      	sub	sp, #8
 800c68a:	461d      	mov	r5, r3
 800c68c:	4616      	mov	r6, r2
 800c68e:	460c      	mov	r4, r1
 800c690:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c692:	f7fd f971 	bl	8009978 <HAL_GetTick>
 800c696:	4435      	add	r5, r6
 800c698:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c69a:	f7fd f96d 	bl	8009978 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c69e:	4b27      	ldr	r3, [pc, #156]	; (800c73c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c6a0:	681b      	ldr	r3, [r3, #0]
 800c6a2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c6a6:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c6aa:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c6ac:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6ae:	1c73      	adds	r3, r6, #1
 800c6b0:	6839      	ldr	r1, [r7, #0]
 800c6b2:	d107      	bne.n	800c6c4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c6b4:	688b      	ldr	r3, [r1, #8]
 800c6b6:	ea34 0303 	bics.w	r3, r4, r3
 800c6ba:	d0fb      	beq.n	800c6b4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c6bc:	2000      	movs	r0, #0
}
 800c6be:	b002      	add	sp, #8
 800c6c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6c4:	688b      	ldr	r3, [r1, #8]
 800c6c6:	ea34 0303 	bics.w	r3, r4, r3
 800c6ca:	d1f7      	bne.n	800c6bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c6cc:	f7fd f954 	bl	8009978 <HAL_GetTick>
 800c6d0:	eba0 0008 	sub.w	r0, r0, r8
 800c6d4:	42a8      	cmp	r0, r5
 800c6d6:	d208      	bcs.n	800c6ea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c6d8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c6da:	2b00      	cmp	r3, #0
      count--;
 800c6dc:	9b01      	ldr	r3, [sp, #4]
 800c6de:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c6e2:	bf08      	it	eq
 800c6e4:	2500      	moveq	r5, #0
      count--;
 800c6e6:	9301      	str	r3, [sp, #4]
 800c6e8:	e7e1      	b.n	800c6ae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6ea:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6ee:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6f0:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6f4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c6f8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6fa:	d013      	beq.n	800c724 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c6fc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c6fe:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c702:	d107      	bne.n	800c714 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c704:	681a      	ldr	r2, [r3, #0]
 800c706:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c70a:	601a      	str	r2, [r3, #0]
 800c70c:	681a      	ldr	r2, [r3, #0]
 800c70e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c712:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c714:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c716:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c718:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c71c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c720:	2003      	movs	r0, #3
 800c722:	e7cc      	b.n	800c6be <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c724:	68ba      	ldr	r2, [r7, #8]
 800c726:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c72a:	d002      	beq.n	800c732 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c72c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c730:	d1e4      	bne.n	800c6fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c732:	681a      	ldr	r2, [r3, #0]
 800c734:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c738:	601a      	str	r2, [r3, #0]
 800c73a:	e7df      	b.n	800c6fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c73c:	20000090 	.word	0x20000090

0800c740 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c740:	b538      	push	{r3, r4, r5, lr}
 800c742:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c744:	6842      	ldr	r2, [r0, #4]
 800c746:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c74a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c74c:	d006      	beq.n	800c75c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c74e:	460a      	mov	r2, r1
 800c750:	2101      	movs	r1, #1
 800c752:	f7ff ff97 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c756:	b978      	cbnz	r0, 800c778 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c758:	2000      	movs	r0, #0
}
 800c75a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c75c:	6882      	ldr	r2, [r0, #8]
 800c75e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c762:	d01c      	beq.n	800c79e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c764:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c768:	d00c      	beq.n	800c784 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c76a:	460a      	mov	r2, r1
 800c76c:	4620      	mov	r0, r4
 800c76e:	2180      	movs	r1, #128	; 0x80
 800c770:	f7ff ff88 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c774:	2800      	cmp	r0, #0
 800c776:	d0ef      	beq.n	800c758 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c778:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c77a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c77e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c780:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c782:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c784:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c786:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c788:	6829      	ldr	r1, [r5, #0]
 800c78a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c78e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c790:	2101      	movs	r1, #1
 800c792:	f7ff ff77 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c796:	2800      	cmp	r0, #0
 800c798:	d1ee      	bne.n	800c778 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c79a:	2000      	movs	r0, #0
 800c79c:	e7dd      	b.n	800c75a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c79e:	6800      	ldr	r0, [r0, #0]
 800c7a0:	6802      	ldr	r2, [r0, #0]
 800c7a2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c7a6:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c7a8:	460a      	mov	r2, r1
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	2180      	movs	r1, #128	; 0x80
 800c7ae:	f7ff ff69 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c7b2:	2800      	cmp	r0, #0
 800c7b4:	d0d0      	beq.n	800c758 <SPI_EndRxTransaction+0x18>
 800c7b6:	e7df      	b.n	800c778 <SPI_EndRxTransaction+0x38>

0800c7b8 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c7b8:	2800      	cmp	r0, #0
 800c7ba:	d05c      	beq.n	800c876 <HAL_SPI_Init+0xbe>
{
 800c7bc:	b570      	push	{r4, r5, r6, lr}
 800c7be:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c7c0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c7c2:	2800      	cmp	r0, #0
 800c7c4:	d047      	beq.n	800c856 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c7c6:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c7c8:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7cc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c7d0:	2200      	movs	r2, #0
 800c7d2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7d4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c7d8:	2b00      	cmp	r3, #0
 800c7da:	d042      	beq.n	800c862 <HAL_SPI_Init+0xaa>
 800c7dc:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c7de:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7e0:	68a5      	ldr	r5, [r4, #8]
 800c7e2:	69a2      	ldr	r2, [r4, #24]
 800c7e4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c7e6:	2302      	movs	r3, #2
 800c7e8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c7ec:	680b      	ldr	r3, [r1, #0]
 800c7ee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c7f2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7f4:	6863      	ldr	r3, [r4, #4]
 800c7f6:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c7fa:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c7fe:	432b      	orrs	r3, r5
 800c800:	68e5      	ldr	r5, [r4, #12]
 800c802:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c806:	432b      	orrs	r3, r5
 800c808:	6925      	ldr	r5, [r4, #16]
 800c80a:	f005 0502 	and.w	r5, r5, #2
 800c80e:	432b      	orrs	r3, r5
 800c810:	6965      	ldr	r5, [r4, #20]
 800c812:	f005 0501 	and.w	r5, r5, #1
 800c816:	432b      	orrs	r3, r5
 800c818:	69e5      	ldr	r5, [r4, #28]
 800c81a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c81e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c822:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c826:	4333      	orrs	r3, r6
 800c828:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c82a:	0c12      	lsrs	r2, r2, #16
 800c82c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c830:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c834:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c838:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c83c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c83e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c840:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c842:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c844:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c846:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c84a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c84c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c84e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c850:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c854:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c856:	6863      	ldr	r3, [r4, #4]
 800c858:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c85c:	d0b6      	beq.n	800c7cc <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c85e:	61e0      	str	r0, [r4, #28]
 800c860:	e7b4      	b.n	800c7cc <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c862:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c864:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c868:	f7f4 ff76 	bl	8001758 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c86c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c870:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c874:	e7b3      	b.n	800c7de <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c876:	2001      	movs	r0, #1
}
 800c878:	4770      	bx	lr
 800c87a:	bf00      	nop

0800c87c <HAL_SPI_Transmit>:
{
 800c87c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c880:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c882:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c886:	2801      	cmp	r0, #1
{
 800c888:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c88a:	f000 8085 	beq.w	800c998 <HAL_SPI_Transmit+0x11c>
 800c88e:	461d      	mov	r5, r3
 800c890:	2301      	movs	r3, #1
 800c892:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c896:	4688      	mov	r8, r1
 800c898:	4617      	mov	r7, r2
 800c89a:	f7fd f86d 	bl	8009978 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c89e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c8a2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c8a4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c8a6:	b2d8      	uxtb	r0, r3
 800c8a8:	d009      	beq.n	800c8be <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c8aa:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c8ac:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c8ae:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c8b0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c8b4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c8b8:	b002      	add	sp, #8
 800c8ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c8be:	f1b8 0f00 	cmp.w	r8, #0
 800c8c2:	d0f3      	beq.n	800c8ac <HAL_SPI_Transmit+0x30>
 800c8c4:	2f00      	cmp	r7, #0
 800c8c6:	d0f1      	beq.n	800c8ac <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8c8:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c8ca:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c8cc:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8d0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8d2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8d4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8d8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c8dc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8e0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c8e2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c8e4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c8e6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c8e8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c8ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8ec:	f000 8085 	beq.w	800c9fa <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8f0:	6803      	ldr	r3, [r0, #0]
 800c8f2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c8f4:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8f6:	d403      	bmi.n	800c900 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c8f8:	6803      	ldr	r3, [r0, #0]
 800c8fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c8fe:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c900:	68e3      	ldr	r3, [r4, #12]
 800c902:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c906:	d04b      	beq.n	800c9a0 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c908:	6863      	ldr	r3, [r4, #4]
 800c90a:	2b00      	cmp	r3, #0
 800c90c:	f000 8097 	beq.w	800ca3e <HAL_SPI_Transmit+0x1c2>
 800c910:	2f01      	cmp	r7, #1
 800c912:	f000 8094 	beq.w	800ca3e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c916:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c918:	b29b      	uxth	r3, r3
 800c91a:	b1ab      	cbz	r3, 800c948 <HAL_SPI_Transmit+0xcc>
 800c91c:	1c68      	adds	r0, r5, #1
 800c91e:	f040 8083 	bne.w	800ca28 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c922:	6823      	ldr	r3, [r4, #0]
 800c924:	689a      	ldr	r2, [r3, #8]
 800c926:	0791      	lsls	r1, r2, #30
 800c928:	f140 8094 	bpl.w	800ca54 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c92c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c92e:	7812      	ldrb	r2, [r2, #0]
 800c930:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c932:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c934:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c936:	3901      	subs	r1, #1
 800c938:	b289      	uxth	r1, r1
 800c93a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c93c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c93e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c940:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c942:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c944:	2900      	cmp	r1, #0
 800c946:	d1ec      	bne.n	800c922 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c948:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c94a:	4b5b      	ldr	r3, [pc, #364]	; (800cab8 <HAL_SPI_Transmit+0x23c>)
 800c94c:	4a5b      	ldr	r2, [pc, #364]	; (800cabc <HAL_SPI_Transmit+0x240>)
 800c94e:	681b      	ldr	r3, [r3, #0]
 800c950:	fba2 2303 	umull	r2, r3, r2, r3
 800c954:	0d5b      	lsrs	r3, r3, #21
 800c956:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c95a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c95e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c962:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c964:	d107      	bne.n	800c976 <HAL_SPI_Transmit+0xfa>
 800c966:	e098      	b.n	800ca9a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c968:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c96a:	6822      	ldr	r2, [r4, #0]
      count--;
 800c96c:	3b01      	subs	r3, #1
 800c96e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c970:	6893      	ldr	r3, [r2, #8]
 800c972:	061b      	lsls	r3, r3, #24
 800c974:	d502      	bpl.n	800c97c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c976:	9b01      	ldr	r3, [sp, #4]
 800c978:	2b00      	cmp	r3, #0
 800c97a:	d1f5      	bne.n	800c968 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c97c:	68a3      	ldr	r3, [r4, #8]
 800c97e:	b933      	cbnz	r3, 800c98e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c980:	6822      	ldr	r2, [r4, #0]
 800c982:	9300      	str	r3, [sp, #0]
 800c984:	68d3      	ldr	r3, [r2, #12]
 800c986:	9300      	str	r3, [sp, #0]
 800c988:	6893      	ldr	r3, [r2, #8]
 800c98a:	9300      	str	r3, [sp, #0]
 800c98c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c98e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c990:	3800      	subs	r0, #0
 800c992:	bf18      	it	ne
 800c994:	2001      	movne	r0, #1
error:
 800c996:	e789      	b.n	800c8ac <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c998:	2002      	movs	r0, #2
}
 800c99a:	b002      	add	sp, #8
 800c99c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c9a0:	6861      	ldr	r1, [r4, #4]
 800c9a2:	2900      	cmp	r1, #0
 800c9a4:	d176      	bne.n	800ca94 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9a6:	4643      	mov	r3, r8
 800c9a8:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c9ac:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9ae:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9b2:	3b01      	subs	r3, #1
 800c9b4:	b29b      	uxth	r3, r3
 800c9b6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9ba:	b29b      	uxth	r3, r3
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	d0c4      	beq.n	800c94a <HAL_SPI_Transmit+0xce>
 800c9c0:	1c6b      	adds	r3, r5, #1
 800c9c2:	d15e      	bne.n	800ca82 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9c4:	6883      	ldr	r3, [r0, #8]
 800c9c6:	079f      	lsls	r7, r3, #30
 800c9c8:	d50f      	bpl.n	800c9ea <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9ca:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9cc:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c9d0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c9d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9d4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9d6:	3b01      	subs	r3, #1
 800c9d8:	b29b      	uxth	r3, r3
 800c9da:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9de:	b29b      	uxth	r3, r3
 800c9e0:	2b00      	cmp	r3, #0
 800c9e2:	d0b1      	beq.n	800c948 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9e4:	6883      	ldr	r3, [r0, #8]
 800c9e6:	079f      	lsls	r7, r3, #30
 800c9e8:	d4ef      	bmi.n	800c9ca <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c9ea:	f7fc ffc5 	bl	8009978 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c9ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9f0:	b29b      	uxth	r3, r3
 800c9f2:	2b00      	cmp	r3, #0
 800c9f4:	d0a8      	beq.n	800c948 <HAL_SPI_Transmit+0xcc>
 800c9f6:	6820      	ldr	r0, [r4, #0]
 800c9f8:	e7e4      	b.n	800c9c4 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c9fa:	6803      	ldr	r3, [r0, #0]
 800c9fc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ca00:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800ca02:	6803      	ldr	r3, [r0, #0]
 800ca04:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800ca08:	6003      	str	r3, [r0, #0]
 800ca0a:	e771      	b.n	800c8f0 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ca0e:	7812      	ldrb	r2, [r2, #0]
 800ca10:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ca12:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca14:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca16:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca18:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ca1a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca1c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca1e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca22:	b29b      	uxth	r3, r3
 800ca24:	2b00      	cmp	r3, #0
 800ca26:	d08f      	beq.n	800c948 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca28:	6823      	ldr	r3, [r4, #0]
 800ca2a:	689a      	ldr	r2, [r3, #8]
 800ca2c:	0792      	lsls	r2, r2, #30
 800ca2e:	d4ed      	bmi.n	800ca0c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca30:	f7fc ffa2 	bl	8009978 <HAL_GetTick>
 800ca34:	1b80      	subs	r0, r0, r6
 800ca36:	42a8      	cmp	r0, r5
 800ca38:	d3f2      	bcc.n	800ca20 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ca3a:	2003      	movs	r0, #3
 800ca3c:	e736      	b.n	800c8ac <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca3e:	f898 3000 	ldrb.w	r3, [r8]
 800ca42:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ca44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca46:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca48:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca4a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ca4c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca4e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca50:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ca52:	e760      	b.n	800c916 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca54:	f7fc ff90 	bl	8009978 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ca58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca5a:	b29b      	uxth	r3, r3
 800ca5c:	2b00      	cmp	r3, #0
 800ca5e:	f47f af60 	bne.w	800c922 <HAL_SPI_Transmit+0xa6>
 800ca62:	e771      	b.n	800c948 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca64:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca66:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ca6a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ca6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca6e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca70:	3b01      	subs	r3, #1
 800ca72:	b29b      	uxth	r3, r3
 800ca74:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca76:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca78:	b29b      	uxth	r3, r3
 800ca7a:	2b00      	cmp	r3, #0
 800ca7c:	f43f af64 	beq.w	800c948 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca80:	6822      	ldr	r2, [r4, #0]
 800ca82:	6893      	ldr	r3, [r2, #8]
 800ca84:	0799      	lsls	r1, r3, #30
 800ca86:	d4ed      	bmi.n	800ca64 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca88:	f7fc ff76 	bl	8009978 <HAL_GetTick>
 800ca8c:	1b80      	subs	r0, r0, r6
 800ca8e:	42a8      	cmp	r0, r5
 800ca90:	d3f1      	bcc.n	800ca76 <HAL_SPI_Transmit+0x1fa>
 800ca92:	e7d2      	b.n	800ca3a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca94:	2f01      	cmp	r7, #1
 800ca96:	d18f      	bne.n	800c9b8 <HAL_SPI_Transmit+0x13c>
 800ca98:	e785      	b.n	800c9a6 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ca9a:	4633      	mov	r3, r6
 800ca9c:	462a      	mov	r2, r5
 800ca9e:	2180      	movs	r1, #128	; 0x80
 800caa0:	4620      	mov	r0, r4
 800caa2:	f7ff fdef 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800caa6:	2800      	cmp	r0, #0
 800caa8:	f43f af68 	beq.w	800c97c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800caac:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800caae:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cab0:	4313      	orrs	r3, r2
 800cab2:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cab4:	6562      	str	r2, [r4, #84]	; 0x54
 800cab6:	e761      	b.n	800c97c <HAL_SPI_Transmit+0x100>
 800cab8:	20000090 	.word	0x20000090
 800cabc:	165e9f81 	.word	0x165e9f81

0800cac0 <HAL_SPI_TransmitReceive>:
{
 800cac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cac4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cac6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800caca:	2801      	cmp	r0, #1
{
 800cacc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cace:	f000 80ac 	beq.w	800cc2a <HAL_SPI_TransmitReceive+0x16a>
 800cad2:	461e      	mov	r6, r3
 800cad4:	2301      	movs	r3, #1
 800cad6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cada:	4690      	mov	r8, r2
 800cadc:	460f      	mov	r7, r1
 800cade:	f7fc ff4b 	bl	8009978 <HAL_GetTick>
 800cae2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cae4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cae8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800caea:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800caec:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800caee:	d011      	beq.n	800cb14 <HAL_SPI_TransmitReceive+0x54>
 800caf0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800caf4:	d009      	beq.n	800cb0a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800caf6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800caf8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cafa:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cafc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cb00:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cb04:	b002      	add	sp, #8
 800cb06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cb0a:	68a1      	ldr	r1, [r4, #8]
 800cb0c:	2900      	cmp	r1, #0
 800cb0e:	d1f2      	bne.n	800caf6 <HAL_SPI_TransmitReceive+0x36>
 800cb10:	2a04      	cmp	r2, #4
 800cb12:	d1f0      	bne.n	800caf6 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cb14:	2f00      	cmp	r7, #0
 800cb16:	f000 808c 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x172>
 800cb1a:	f1b8 0f00 	cmp.w	r8, #0
 800cb1e:	f000 8088 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x172>
 800cb22:	2e00      	cmp	r6, #0
 800cb24:	f000 8085 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb28:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cb2c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb30:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cb32:	bf1c      	itt	ne
 800cb34:	2205      	movne	r2, #5
 800cb36:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb3a:	2200      	movs	r2, #0
 800cb3c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cb3e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb42:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cb44:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cb46:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb48:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cb4a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb4c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cb4e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cb50:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb52:	d403      	bmi.n	800cb5c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cb54:	6811      	ldr	r1, [r2, #0]
 800cb56:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cb5a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cb5c:	68e1      	ldr	r1, [r4, #12]
 800cb5e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cb62:	f000 809e 	beq.w	800cca2 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb66:	2b00      	cmp	r3, #0
 800cb68:	f000 8091 	beq.w	800cc8e <HAL_SPI_TransmitReceive+0x1ce>
 800cb6c:	2e01      	cmp	r6, #1
 800cb6e:	f000 808e 	beq.w	800cc8e <HAL_SPI_TransmitReceive+0x1ce>
 800cb72:	9b08      	ldr	r3, [sp, #32]
 800cb74:	3301      	adds	r3, #1
        txallowed = 1U;
 800cb76:	f04f 0601 	mov.w	r6, #1
 800cb7a:	d028      	beq.n	800cbce <HAL_SPI_TransmitReceive+0x10e>
 800cb7c:	e05b      	b.n	800cc36 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cb7e:	6821      	ldr	r1, [r4, #0]
 800cb80:	688b      	ldr	r3, [r1, #8]
 800cb82:	0798      	lsls	r0, r3, #30
 800cb84:	d50f      	bpl.n	800cba6 <HAL_SPI_TransmitReceive+0xe6>
 800cb86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb88:	b29b      	uxth	r3, r3
 800cb8a:	b163      	cbz	r3, 800cba6 <HAL_SPI_TransmitReceive+0xe6>
 800cb8c:	b15e      	cbz	r6, 800cba6 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cb8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb90:	781b      	ldrb	r3, [r3, #0]
 800cb92:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cb94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb96:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb98:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cb9a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cb9c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cb9e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cba0:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cba2:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cba4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cba6:	688a      	ldr	r2, [r1, #8]
 800cba8:	f012 0201 	ands.w	r2, r2, #1
 800cbac:	d00d      	beq.n	800cbca <HAL_SPI_TransmitReceive+0x10a>
 800cbae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbb0:	b29b      	uxth	r3, r3
 800cbb2:	b153      	cbz	r3, 800cbca <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cbb4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cbb6:	68c9      	ldr	r1, [r1, #12]
 800cbb8:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cbba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cbbc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbbe:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cbc0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cbc2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cbc4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbc6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cbc8:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cbca:	f7fc fed5 	bl	8009978 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cbce:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cbd0:	b292      	uxth	r2, r2
 800cbd2:	2a00      	cmp	r2, #0
 800cbd4:	d1d3      	bne.n	800cb7e <HAL_SPI_TransmitReceive+0xbe>
 800cbd6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbd8:	b29b      	uxth	r3, r3
 800cbda:	2b00      	cmp	r3, #0
 800cbdc:	d1cf      	bne.n	800cb7e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbde:	4b79      	ldr	r3, [pc, #484]	; (800cdc4 <HAL_SPI_TransmitReceive+0x304>)
 800cbe0:	4a79      	ldr	r2, [pc, #484]	; (800cdc8 <HAL_SPI_TransmitReceive+0x308>)
 800cbe2:	681b      	ldr	r3, [r3, #0]
 800cbe4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbe8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbea:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cbee:	0d5b      	lsrs	r3, r3, #21
 800cbf0:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbf4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbf8:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbfa:	d107      	bne.n	800cc0c <HAL_SPI_TransmitReceive+0x14c>
 800cbfc:	e0d2      	b.n	800cda4 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cbfe:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc00:	6822      	ldr	r2, [r4, #0]
      count--;
 800cc02:	3b01      	subs	r3, #1
 800cc04:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc06:	6893      	ldr	r3, [r2, #8]
 800cc08:	061b      	lsls	r3, r3, #24
 800cc0a:	d502      	bpl.n	800cc12 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cc0c:	9b01      	ldr	r3, [sp, #4]
 800cc0e:	2b00      	cmp	r3, #0
 800cc10:	d1f5      	bne.n	800cbfe <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cc12:	68a0      	ldr	r0, [r4, #8]
 800cc14:	2800      	cmp	r0, #0
 800cc16:	f040 8082 	bne.w	800cd1e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cc1a:	6823      	ldr	r3, [r4, #0]
 800cc1c:	9000      	str	r0, [sp, #0]
 800cc1e:	68da      	ldr	r2, [r3, #12]
 800cc20:	9200      	str	r2, [sp, #0]
 800cc22:	689b      	ldr	r3, [r3, #8]
 800cc24:	9300      	str	r3, [sp, #0]
 800cc26:	9b00      	ldr	r3, [sp, #0]
 800cc28:	e766      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cc2a:	2002      	movs	r0, #2
}
 800cc2c:	b002      	add	sp, #8
 800cc2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cc32:	2001      	movs	r0, #1
 800cc34:	e760      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc36:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc38:	b29b      	uxth	r3, r3
 800cc3a:	b91b      	cbnz	r3, 800cc44 <HAL_SPI_TransmitReceive+0x184>
 800cc3c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc3e:	b29b      	uxth	r3, r3
 800cc40:	2b00      	cmp	r3, #0
 800cc42:	d0cc      	beq.n	800cbde <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc44:	6822      	ldr	r2, [r4, #0]
 800cc46:	6893      	ldr	r3, [r2, #8]
 800cc48:	0799      	lsls	r1, r3, #30
 800cc4a:	d50f      	bpl.n	800cc6c <HAL_SPI_TransmitReceive+0x1ac>
 800cc4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc4e:	b29b      	uxth	r3, r3
 800cc50:	b163      	cbz	r3, 800cc6c <HAL_SPI_TransmitReceive+0x1ac>
 800cc52:	b15e      	cbz	r6, 800cc6c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cc54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc56:	781b      	ldrb	r3, [r3, #0]
 800cc58:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc5c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc5e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cc60:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc62:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cc64:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc66:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cc68:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cc6a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc6c:	6893      	ldr	r3, [r2, #8]
 800cc6e:	f013 0301 	ands.w	r3, r3, #1
 800cc72:	d004      	beq.n	800cc7e <HAL_SPI_TransmitReceive+0x1be>
 800cc74:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc76:	b289      	uxth	r1, r1
 800cc78:	2900      	cmp	r1, #0
 800cc7a:	f040 8087 	bne.w	800cd8c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cc7e:	f7fc fe7b 	bl	8009978 <HAL_GetTick>
 800cc82:	9b08      	ldr	r3, [sp, #32]
 800cc84:	1b40      	subs	r0, r0, r5
 800cc86:	4298      	cmp	r0, r3
 800cc88:	d3d5      	bcc.n	800cc36 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cc8a:	2003      	movs	r0, #3
 800cc8c:	e734      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc8e:	783b      	ldrb	r3, [r7, #0]
 800cc90:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc92:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc94:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc96:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc98:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cc9a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc9c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc9e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cca0:	e767      	b.n	800cb72 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cca2:	2b00      	cmp	r3, #0
 800cca4:	d13d      	bne.n	800cd22 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cca6:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ccaa:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ccac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccae:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ccb0:	3b01      	subs	r3, #1
 800ccb2:	b29b      	uxth	r3, r3
 800ccb4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ccb6:	9b08      	ldr	r3, [sp, #32]
 800ccb8:	3301      	adds	r3, #1
{
 800ccba:	f04f 0601 	mov.w	r6, #1
 800ccbe:	d025      	beq.n	800cd0c <HAL_SPI_TransmitReceive+0x24c>
 800ccc0:	e032      	b.n	800cd28 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ccc2:	6823      	ldr	r3, [r4, #0]
 800ccc4:	689a      	ldr	r2, [r3, #8]
 800ccc6:	0792      	lsls	r2, r2, #30
 800ccc8:	d50d      	bpl.n	800cce6 <HAL_SPI_TransmitReceive+0x226>
 800ccca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cccc:	b292      	uxth	r2, r2
 800ccce:	b152      	cbz	r2, 800cce6 <HAL_SPI_TransmitReceive+0x226>
 800ccd0:	b14e      	cbz	r6, 800cce6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccd2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ccd4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ccd8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ccda:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccdc:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ccde:	3a01      	subs	r2, #1
 800cce0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800cce2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cce4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cce6:	689a      	ldr	r2, [r3, #8]
 800cce8:	f012 0201 	ands.w	r2, r2, #1
 800ccec:	d00c      	beq.n	800cd08 <HAL_SPI_TransmitReceive+0x248>
 800ccee:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ccf0:	b289      	uxth	r1, r1
 800ccf2:	b149      	cbz	r1, 800cd08 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ccf4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ccf6:	68db      	ldr	r3, [r3, #12]
 800ccf8:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ccfc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ccfe:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd00:	3b01      	subs	r3, #1
 800cd02:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cd04:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cd06:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd08:	f7fc fe36 	bl	8009978 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd0e:	b29b      	uxth	r3, r3
 800cd10:	2b00      	cmp	r3, #0
 800cd12:	d1d6      	bne.n	800ccc2 <HAL_SPI_TransmitReceive+0x202>
 800cd14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd16:	b29b      	uxth	r3, r3
 800cd18:	2b00      	cmp	r3, #0
 800cd1a:	d1d2      	bne.n	800ccc2 <HAL_SPI_TransmitReceive+0x202>
 800cd1c:	e75f      	b.n	800cbde <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cd1e:	2000      	movs	r0, #0
 800cd20:	e6ea      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd22:	2e01      	cmp	r6, #1
 800cd24:	d1c7      	bne.n	800ccb6 <HAL_SPI_TransmitReceive+0x1f6>
 800cd26:	e7be      	b.n	800cca6 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd2a:	b29b      	uxth	r3, r3
 800cd2c:	b923      	cbnz	r3, 800cd38 <HAL_SPI_TransmitReceive+0x278>
 800cd2e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd30:	b29b      	uxth	r3, r3
 800cd32:	2b00      	cmp	r3, #0
 800cd34:	f43f af53 	beq.w	800cbde <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd38:	6822      	ldr	r2, [r4, #0]
 800cd3a:	6893      	ldr	r3, [r2, #8]
 800cd3c:	079f      	lsls	r7, r3, #30
 800cd3e:	d50d      	bpl.n	800cd5c <HAL_SPI_TransmitReceive+0x29c>
 800cd40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd42:	b29b      	uxth	r3, r3
 800cd44:	b153      	cbz	r3, 800cd5c <HAL_SPI_TransmitReceive+0x29c>
 800cd46:	b14e      	cbz	r6, 800cd5c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd48:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd4a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cd4e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd52:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd54:	3b01      	subs	r3, #1
 800cd56:	b29b      	uxth	r3, r3
 800cd58:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cd5a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd5c:	6893      	ldr	r3, [r2, #8]
 800cd5e:	f013 0301 	ands.w	r3, r3, #1
 800cd62:	d00c      	beq.n	800cd7e <HAL_SPI_TransmitReceive+0x2be>
 800cd64:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cd66:	b289      	uxth	r1, r1
 800cd68:	b149      	cbz	r1, 800cd7e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cd6a:	68d1      	ldr	r1, [r2, #12]
 800cd6c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cd6e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cd72:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cd74:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cd76:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd78:	3b01      	subs	r3, #1
 800cd7a:	b29b      	uxth	r3, r3
 800cd7c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd7e:	f7fc fdfb 	bl	8009978 <HAL_GetTick>
 800cd82:	9b08      	ldr	r3, [sp, #32]
 800cd84:	1b40      	subs	r0, r0, r5
 800cd86:	4298      	cmp	r0, r3
 800cd88:	d3ce      	bcc.n	800cd28 <HAL_SPI_TransmitReceive+0x268>
 800cd8a:	e77e      	b.n	800cc8a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cd8c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cd8e:	68d2      	ldr	r2, [r2, #12]
 800cd90:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cd92:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cd94:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd96:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cd98:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cd9a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cd9c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd9e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cda0:	461e      	mov	r6, r3
 800cda2:	e76c      	b.n	800cc7e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cda4:	9a08      	ldr	r2, [sp, #32]
 800cda6:	462b      	mov	r3, r5
 800cda8:	2180      	movs	r1, #128	; 0x80
 800cdaa:	4620      	mov	r0, r4
 800cdac:	f7ff fc6a 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cdb0:	2800      	cmp	r0, #0
 800cdb2:	f43f af2e 	beq.w	800cc12 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdb6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdb8:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdba:	4313      	orrs	r3, r2
 800cdbc:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800cdbe:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdc0:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800cdc2:	e699      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
 800cdc4:	20000090 	.word	0x20000090
 800cdc8:	165e9f81 	.word	0x165e9f81

0800cdcc <HAL_SPI_Receive>:
{
 800cdcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdd0:	6846      	ldr	r6, [r0, #4]
 800cdd2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cdd6:	b082      	sub	sp, #8
 800cdd8:	4604      	mov	r4, r0
 800cdda:	4690      	mov	r8, r2
 800cddc:	461d      	mov	r5, r3
 800cdde:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cde0:	d06e      	beq.n	800cec0 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cde2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cde6:	2b01      	cmp	r3, #1
 800cde8:	d076      	beq.n	800ced8 <HAL_SPI_Receive+0x10c>
 800cdea:	2301      	movs	r3, #1
 800cdec:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cdf0:	f7fc fdc2 	bl	8009978 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdf4:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cdf8:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cdfc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdfe:	fa5f f08c 	uxtb.w	r0, ip
 800ce02:	d009      	beq.n	800ce18 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ce04:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ce06:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ce08:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ce0a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ce0e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ce12:	b002      	add	sp, #8
 800ce14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ce18:	2f00      	cmp	r7, #0
 800ce1a:	d0f4      	beq.n	800ce06 <HAL_SPI_Receive+0x3a>
 800ce1c:	f1b8 0f00 	cmp.w	r8, #0
 800ce20:	d0f1      	beq.n	800ce06 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce22:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ce24:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce26:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ce2a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ce2c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce30:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ce34:	f04f 0104 	mov.w	r1, #4
 800ce38:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ce3c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce40:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ce42:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ce44:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ce46:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ce4a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ce4c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce4e:	d107      	bne.n	800ce60 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ce50:	6811      	ldr	r1, [r2, #0]
 800ce52:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ce56:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ce58:	6811      	ldr	r1, [r2, #0]
 800ce5a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ce5e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce60:	6811      	ldr	r1, [r2, #0]
 800ce62:	0648      	lsls	r0, r1, #25
 800ce64:	d403      	bmi.n	800ce6e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ce66:	6811      	ldr	r1, [r2, #0]
 800ce68:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ce6c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ce6e:	68e1      	ldr	r1, [r4, #12]
 800ce70:	2900      	cmp	r1, #0
 800ce72:	d054      	beq.n	800cf1e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ce74:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce76:	b289      	uxth	r1, r1
 800ce78:	b1a9      	cbz	r1, 800cea6 <HAL_SPI_Receive+0xda>
 800ce7a:	1c69      	adds	r1, r5, #1
 800ce7c:	d13e      	bne.n	800cefc <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce7e:	6893      	ldr	r3, [r2, #8]
 800ce80:	07db      	lsls	r3, r3, #31
 800ce82:	d544      	bpl.n	800cf0e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce84:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce86:	68d1      	ldr	r1, [r2, #12]
 800ce88:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ce8c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce90:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce92:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ce96:	fa1f fc8c 	uxth.w	ip, ip
 800ce9a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ce9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cea0:	b29b      	uxth	r3, r3
 800cea2:	2b00      	cmp	r3, #0
 800cea4:	d1eb      	bne.n	800ce7e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800cea6:	4632      	mov	r2, r6
 800cea8:	4629      	mov	r1, r5
 800ceaa:	4620      	mov	r0, r4
 800ceac:	f7ff fc48 	bl	800c740 <SPI_EndRxTransaction>
 800ceb0:	b108      	cbz	r0, 800ceb6 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ceb2:	2320      	movs	r3, #32
 800ceb4:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ceb6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ceb8:	3800      	subs	r0, #0
 800ceba:	bf18      	it	ne
 800cebc:	2001      	movne	r0, #1
error :
 800cebe:	e7a2      	b.n	800ce06 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cec0:	6883      	ldr	r3, [r0, #8]
 800cec2:	2b00      	cmp	r3, #0
 800cec4:	d18d      	bne.n	800cde2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cec6:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cec8:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ceca:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cecc:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ced0:	460a      	mov	r2, r1
 800ced2:	f7ff fdf5 	bl	800cac0 <HAL_SPI_TransmitReceive>
 800ced6:	e79c      	b.n	800ce12 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ced8:	2002      	movs	r0, #2
}
 800ceda:	b002      	add	sp, #8
 800cedc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cee0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cee2:	68db      	ldr	r3, [r3, #12]
 800cee4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800cee8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ceea:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ceec:	3b01      	subs	r3, #1
 800ceee:	b29b      	uxth	r3, r3
 800cef0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cef2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cef4:	b29b      	uxth	r3, r3
 800cef6:	2b00      	cmp	r3, #0
 800cef8:	d0d5      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cefa:	6823      	ldr	r3, [r4, #0]
 800cefc:	689a      	ldr	r2, [r3, #8]
 800cefe:	07d2      	lsls	r2, r2, #31
 800cf00:	d4ee      	bmi.n	800cee0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf02:	f7fc fd39 	bl	8009978 <HAL_GetTick>
 800cf06:	1b80      	subs	r0, r0, r6
 800cf08:	42a8      	cmp	r0, r5
 800cf0a:	d243      	bcs.n	800cf94 <HAL_SPI_Receive+0x1c8>
 800cf0c:	e7f1      	b.n	800cef2 <HAL_SPI_Receive+0x126>
 800cf0e:	f7fc fd33 	bl	8009978 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf14:	b29b      	uxth	r3, r3
 800cf16:	2b00      	cmp	r3, #0
 800cf18:	d0c5      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
 800cf1a:	6822      	ldr	r2, [r4, #0]
 800cf1c:	e7af      	b.n	800ce7e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cf1e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cf20:	b292      	uxth	r2, r2
 800cf22:	2a00      	cmp	r2, #0
 800cf24:	d0bf      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
 800cf26:	1c6f      	adds	r7, r5, #1
 800cf28:	d013      	beq.n	800cf52 <HAL_SPI_Receive+0x186>
 800cf2a:	e02b      	b.n	800cf84 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf2c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf2e:	7b1b      	ldrb	r3, [r3, #12]
 800cf30:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf32:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf36:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf38:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cf3c:	fa1f fc8c 	uxth.w	ip, ip
 800cf40:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf46:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cf48:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf4a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cf4c:	2b00      	cmp	r3, #0
 800cf4e:	d0aa      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf50:	6823      	ldr	r3, [r4, #0]
 800cf52:	689a      	ldr	r2, [r3, #8]
 800cf54:	07d0      	lsls	r0, r2, #31
 800cf56:	d4e9      	bmi.n	800cf2c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf58:	f7fc fd0e 	bl	8009978 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf5c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf5e:	b29b      	uxth	r3, r3
 800cf60:	2b00      	cmp	r3, #0
 800cf62:	d1f5      	bne.n	800cf50 <HAL_SPI_Receive+0x184>
 800cf64:	e79f      	b.n	800cea6 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf66:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf68:	7b1b      	ldrb	r3, [r3, #12]
 800cf6a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf6c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf6e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf70:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf72:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cf74:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf76:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf78:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf7a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf7c:	b29b      	uxth	r3, r3
 800cf7e:	2b00      	cmp	r3, #0
 800cf80:	d091      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf82:	6823      	ldr	r3, [r4, #0]
 800cf84:	689a      	ldr	r2, [r3, #8]
 800cf86:	07d1      	lsls	r1, r2, #31
 800cf88:	d4ed      	bmi.n	800cf66 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf8a:	f7fc fcf5 	bl	8009978 <HAL_GetTick>
 800cf8e:	1b80      	subs	r0, r0, r6
 800cf90:	42a8      	cmp	r0, r5
 800cf92:	d3f2      	bcc.n	800cf7a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cf94:	2003      	movs	r0, #3
 800cf96:	e736      	b.n	800ce06 <HAL_SPI_Receive+0x3a>

0800cf98 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cf98:	2800      	cmp	r0, #0
 800cf9a:	f000 8087 	beq.w	800d0ac <HAL_TIM_Base_Init+0x114>
{
 800cf9e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cfa0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cfa4:	4604      	mov	r4, r0
 800cfa6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cfaa:	2b00      	cmp	r3, #0
 800cfac:	d079      	beq.n	800d0a2 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cfae:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfb0:	493f      	ldr	r1, [pc, #252]	; (800d0b0 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cfb2:	2302      	movs	r3, #2
 800cfb4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfb8:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cfba:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfbc:	d05d      	beq.n	800d07a <HAL_TIM_Base_Init+0xe2>
 800cfbe:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800cfc2:	d031      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfc4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cfc8:	428a      	cmp	r2, r1
 800cfca:	d02d      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfcc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfd0:	428a      	cmp	r2, r1
 800cfd2:	d029      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfd4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfd8:	428a      	cmp	r2, r1
 800cfda:	d025      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfdc:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cfe0:	428a      	cmp	r2, r1
 800cfe2:	d04a      	beq.n	800d07a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cfe4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cfe8:	428a      	cmp	r2, r1
 800cfea:	d021      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800cfec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cff0:	428a      	cmp	r2, r1
 800cff2:	d01d      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800cff4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cff8:	428a      	cmp	r2, r1
 800cffa:	d019      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800cffc:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d000:	428a      	cmp	r2, r1
 800d002:	d015      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800d004:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d008:	428a      	cmp	r2, r1
 800d00a:	d011      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800d00c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d010:	428a      	cmp	r2, r1
 800d012:	d00d      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d014:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d016:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d018:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d01c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d01e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d020:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d022:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d024:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d026:	e010      	b.n	800d04a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d028:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d02a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d02e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d030:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d032:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d034:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d038:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d03a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d03e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d040:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d042:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d044:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d046:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d048:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d04a:	2301      	movs	r3, #1
 800d04c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d04e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d052:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d056:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d05a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d05e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d062:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d066:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d06a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d06e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d072:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d076:	2000      	movs	r0, #0
}
 800d078:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d07a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d07c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d07e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d082:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d084:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d088:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d08a:	69a1      	ldr	r1, [r4, #24]
 800d08c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d090:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d092:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d094:	68e3      	ldr	r3, [r4, #12]
 800d096:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d098:	6863      	ldr	r3, [r4, #4]
 800d09a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d09c:	6963      	ldr	r3, [r4, #20]
 800d09e:	6313      	str	r3, [r2, #48]	; 0x30
 800d0a0:	e7d3      	b.n	800d04a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d0a2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d0a6:	f7f4 fb93 	bl	80017d0 <HAL_TIM_Base_MspInit>
 800d0aa:	e780      	b.n	800cfae <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d0ac:	2001      	movs	r0, #1
}
 800d0ae:	4770      	bx	lr
 800d0b0:	40010000 	.word	0x40010000

0800d0b4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d0b4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0b8:	2b01      	cmp	r3, #1
 800d0ba:	d12f      	bne.n	800d11c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0bc:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0be:	4919      	ldr	r1, [pc, #100]	; (800d124 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d0c0:	2202      	movs	r2, #2
 800d0c2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0c6:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0c8:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0ca:	f042 0201 	orr.w	r2, r2, #1
 800d0ce:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0d0:	d019      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0d2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d0d6:	d016      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0d8:	4a13      	ldr	r2, [pc, #76]	; (800d128 <HAL_TIM_Base_Start_IT+0x74>)
 800d0da:	4293      	cmp	r3, r2
 800d0dc:	d013      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0e2:	4293      	cmp	r3, r2
 800d0e4:	d00f      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0ea:	4293      	cmp	r3, r2
 800d0ec:	d00b      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0ee:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d0f2:	4293      	cmp	r3, r2
 800d0f4:	d007      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0f6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d0fa:	4293      	cmp	r3, r2
 800d0fc:	d003      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0fe:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d102:	4293      	cmp	r3, r2
 800d104:	d104      	bne.n	800d110 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d106:	689a      	ldr	r2, [r3, #8]
 800d108:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d10c:	2a06      	cmp	r2, #6
 800d10e:	d007      	beq.n	800d120 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d110:	681a      	ldr	r2, [r3, #0]
 800d112:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d116:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d118:	601a      	str	r2, [r3, #0]
 800d11a:	4770      	bx	lr
    return HAL_ERROR;
 800d11c:	2001      	movs	r0, #1
 800d11e:	4770      	bx	lr
  return HAL_OK;
 800d120:	2000      	movs	r0, #0
}
 800d122:	4770      	bx	lr
 800d124:	40010000 	.word	0x40010000
 800d128:	40000400 	.word	0x40000400

0800d12c <HAL_TIM_OC_DelayElapsedCallback>:
 800d12c:	4770      	bx	lr
 800d12e:	bf00      	nop

0800d130 <HAL_TIM_IC_CaptureCallback>:
 800d130:	4770      	bx	lr
 800d132:	bf00      	nop

0800d134 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d134:	4770      	bx	lr
 800d136:	bf00      	nop

0800d138 <HAL_TIM_TriggerCallback>:
 800d138:	4770      	bx	lr
 800d13a:	bf00      	nop

0800d13c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d13c:	6803      	ldr	r3, [r0, #0]
 800d13e:	691a      	ldr	r2, [r3, #16]
 800d140:	0791      	lsls	r1, r2, #30
{
 800d142:	b510      	push	{r4, lr}
 800d144:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d146:	d502      	bpl.n	800d14e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d148:	68da      	ldr	r2, [r3, #12]
 800d14a:	0792      	lsls	r2, r2, #30
 800d14c:	d45f      	bmi.n	800d20e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d14e:	691a      	ldr	r2, [r3, #16]
 800d150:	0750      	lsls	r0, r2, #29
 800d152:	d502      	bpl.n	800d15a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d154:	68da      	ldr	r2, [r3, #12]
 800d156:	0751      	lsls	r1, r2, #29
 800d158:	d446      	bmi.n	800d1e8 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d15a:	691a      	ldr	r2, [r3, #16]
 800d15c:	0712      	lsls	r2, r2, #28
 800d15e:	d502      	bpl.n	800d166 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d160:	68da      	ldr	r2, [r3, #12]
 800d162:	0710      	lsls	r0, r2, #28
 800d164:	d42e      	bmi.n	800d1c4 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d166:	691a      	ldr	r2, [r3, #16]
 800d168:	06d2      	lsls	r2, r2, #27
 800d16a:	d502      	bpl.n	800d172 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d16c:	68da      	ldr	r2, [r3, #12]
 800d16e:	06d0      	lsls	r0, r2, #27
 800d170:	d418      	bmi.n	800d1a4 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d172:	691a      	ldr	r2, [r3, #16]
 800d174:	07d1      	lsls	r1, r2, #31
 800d176:	d502      	bpl.n	800d17e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d178:	68da      	ldr	r2, [r3, #12]
 800d17a:	07d2      	lsls	r2, r2, #31
 800d17c:	d45d      	bmi.n	800d23a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d17e:	691a      	ldr	r2, [r3, #16]
 800d180:	0610      	lsls	r0, r2, #24
 800d182:	d502      	bpl.n	800d18a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d184:	68da      	ldr	r2, [r3, #12]
 800d186:	0611      	lsls	r1, r2, #24
 800d188:	d45f      	bmi.n	800d24a <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d18a:	691a      	ldr	r2, [r3, #16]
 800d18c:	0652      	lsls	r2, r2, #25
 800d18e:	d502      	bpl.n	800d196 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d190:	68da      	ldr	r2, [r3, #12]
 800d192:	0650      	lsls	r0, r2, #25
 800d194:	d461      	bmi.n	800d25a <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d196:	691a      	ldr	r2, [r3, #16]
 800d198:	0691      	lsls	r1, r2, #26
 800d19a:	d502      	bpl.n	800d1a2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d19c:	68da      	ldr	r2, [r3, #12]
 800d19e:	0692      	lsls	r2, r2, #26
 800d1a0:	d443      	bmi.n	800d22a <HAL_TIM_IRQHandler+0xee>
}
 800d1a2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d1a4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d1a8:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d1aa:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d1ac:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d1ae:	69db      	ldr	r3, [r3, #28]
 800d1b0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d1b4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d1b6:	d064      	beq.n	800d282 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d1b8:	f7ff ffba 	bl	800d130 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1bc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d1be:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1c0:	7722      	strb	r2, [r4, #28]
 800d1c2:	e7d6      	b.n	800d172 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d1c4:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d1c8:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d1ca:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d1cc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d1ce:	69db      	ldr	r3, [r3, #28]
 800d1d0:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d1d2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d1d4:	d152      	bne.n	800d27c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d1d6:	f7ff ffa9 	bl	800d12c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d1da:	4620      	mov	r0, r4
 800d1dc:	f7ff ffaa 	bl	800d134 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1e0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d1e2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1e4:	7722      	strb	r2, [r4, #28]
 800d1e6:	e7be      	b.n	800d166 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d1e8:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d1ec:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d1ee:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d1f0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d1f2:	699b      	ldr	r3, [r3, #24]
 800d1f4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d1f8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d1fa:	d13c      	bne.n	800d276 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d1fc:	f7ff ff96 	bl	800d12c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d200:	4620      	mov	r0, r4
 800d202:	f7ff ff97 	bl	800d134 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d206:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d208:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d20a:	7722      	strb	r2, [r4, #28]
 800d20c:	e7a5      	b.n	800d15a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d20e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d212:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d214:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d216:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d218:	699b      	ldr	r3, [r3, #24]
 800d21a:	079b      	lsls	r3, r3, #30
 800d21c:	d025      	beq.n	800d26a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d21e:	f7ff ff87 	bl	800d130 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d222:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d224:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d226:	7722      	strb	r2, [r4, #28]
 800d228:	e791      	b.n	800d14e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d22a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d22e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d230:	611a      	str	r2, [r3, #16]
}
 800d232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d236:	f000 b82b 	b.w	800d290 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d23a:	f06f 0201 	mvn.w	r2, #1
 800d23e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d240:	4620      	mov	r0, r4
 800d242:	f7f3 ffa5 	bl	8001190 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d246:	6823      	ldr	r3, [r4, #0]
 800d248:	e799      	b.n	800d17e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d24a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d24e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d250:	4620      	mov	r0, r4
 800d252:	f000 f81f 	bl	800d294 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d256:	6823      	ldr	r3, [r4, #0]
 800d258:	e797      	b.n	800d18a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d25a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d25e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d260:	4620      	mov	r0, r4
 800d262:	f7ff ff69 	bl	800d138 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d266:	6823      	ldr	r3, [r4, #0]
 800d268:	e795      	b.n	800d196 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d26a:	f7ff ff5f 	bl	800d12c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d26e:	4620      	mov	r0, r4
 800d270:	f7ff ff60 	bl	800d134 <HAL_TIM_PWM_PulseFinishedCallback>
 800d274:	e7d5      	b.n	800d222 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d276:	f7ff ff5b 	bl	800d130 <HAL_TIM_IC_CaptureCallback>
 800d27a:	e7c4      	b.n	800d206 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d27c:	f7ff ff58 	bl	800d130 <HAL_TIM_IC_CaptureCallback>
 800d280:	e7ae      	b.n	800d1e0 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d282:	f7ff ff53 	bl	800d12c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d286:	4620      	mov	r0, r4
 800d288:	f7ff ff54 	bl	800d134 <HAL_TIM_PWM_PulseFinishedCallback>
 800d28c:	e796      	b.n	800d1bc <HAL_TIM_IRQHandler+0x80>
 800d28e:	bf00      	nop

0800d290 <HAL_TIMEx_CommutCallback>:
 800d290:	4770      	bx	lr
 800d292:	bf00      	nop

0800d294 <HAL_TIMEx_BreakCallback>:
 800d294:	4770      	bx	lr
 800d296:	bf00      	nop

0800d298 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d298:	680b      	ldr	r3, [r1, #0]
{
 800d29a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d29c:	b9d3      	cbnz	r3, 800d2d4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d29e:	6803      	ldr	r3, [r0, #0]
 800d2a0:	684c      	ldr	r4, [r1, #4]
 800d2a2:	688a      	ldr	r2, [r1, #8]
 800d2a4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d2a8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d2ac:	4323      	orrs	r3, r4
 800d2ae:	4313      	orrs	r3, r2
 800d2b0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d2b4:	4323      	orrs	r3, r4
 800d2b6:	4313      	orrs	r3, r2
 800d2b8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d2bc:	4323      	orrs	r3, r4
 800d2be:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d2c2:	4313      	orrs	r3, r2
 800d2c4:	432b      	orrs	r3, r5
 800d2c6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d2c8:	4323      	orrs	r3, r4
 800d2ca:	4313      	orrs	r3, r2
 800d2cc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d2ce:	bc30      	pop	{r4, r5}
 800d2d0:	2000      	movs	r0, #0
 800d2d2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d2d4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d2d8:	6803      	ldr	r3, [r0, #0]
 800d2da:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d2de:	4323      	orrs	r3, r4
 800d2e0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d2e2:	4313      	orrs	r3, r2
 800d2e4:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d2e6:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d2e8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d2ea:	6843      	ldr	r3, [r0, #4]
 800d2ec:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d2f0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d2f4:	4313      	orrs	r3, r2
 800d2f6:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d2fa:	4323      	orrs	r3, r4
 800d2fc:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d300:	4313      	orrs	r3, r2
 800d302:	432b      	orrs	r3, r5
 800d304:	698a      	ldr	r2, [r1, #24]
 800d306:	4323      	orrs	r3, r4
 800d308:	4313      	orrs	r3, r2
 800d30a:	6043      	str	r3, [r0, #4]
}
 800d30c:	bc30      	pop	{r4, r5}
 800d30e:	2000      	movs	r0, #0
 800d310:	4770      	bx	lr
 800d312:	bf00      	nop

0800d314 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d314:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d316:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d318:	bb02      	cbnz	r2, 800d35c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d31a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d31e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d322:	3c01      	subs	r4, #1
 800d324:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d328:	3a01      	subs	r2, #1
 800d32a:	4313      	orrs	r3, r2
 800d32c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d330:	3c01      	subs	r4, #1
 800d332:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d336:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d33a:	3a01      	subs	r2, #1
 800d33c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d340:	698a      	ldr	r2, [r1, #24]
 800d342:	1e69      	subs	r1, r5, #1
 800d344:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d348:	1e61      	subs	r1, r4, #1
 800d34a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d34e:	3a01      	subs	r2, #1
 800d350:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d354:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d356:	bc30      	pop	{r4, r5}
 800d358:	2000      	movs	r0, #0
 800d35a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d35c:	68cc      	ldr	r4, [r1, #12]
 800d35e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d360:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d362:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d366:	3c01      	subs	r4, #1
 800d368:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d36c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d370:	3a01      	subs	r2, #1
 800d372:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d376:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d378:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d37c:	68c3      	ldr	r3, [r0, #12]
 800d37e:	3c01      	subs	r4, #1
 800d380:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d384:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d388:	3a01      	subs	r2, #1
 800d38a:	690c      	ldr	r4, [r1, #16]
 800d38c:	4313      	orrs	r3, r2
 800d38e:	698a      	ldr	r2, [r1, #24]
 800d390:	1e69      	subs	r1, r5, #1
 800d392:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d396:	1e61      	subs	r1, r4, #1
 800d398:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d39c:	3a01      	subs	r2, #1
 800d39e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d3a2:	60c3      	str	r3, [r0, #12]
}
 800d3a4:	bc30      	pop	{r4, r5}
 800d3a6:	2000      	movs	r0, #0
 800d3a8:	4770      	bx	lr
 800d3aa:	bf00      	nop

0800d3ac <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d3ac:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d3ae:	680b      	ldr	r3, [r1, #0]
{
 800d3b0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d3b2:	684a      	ldr	r2, [r1, #4]
{
 800d3b4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d3b6:	4313      	orrs	r3, r2
 800d3b8:	6900      	ldr	r0, [r0, #16]
 800d3ba:	68ca      	ldr	r2, [r1, #12]
 800d3bc:	0d80      	lsrs	r0, r0, #22
 800d3be:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d3c2:	688a      	ldr	r2, [r1, #8]
 800d3c4:	0580      	lsls	r0, r0, #22
 800d3c6:	4303      	orrs	r3, r0
 800d3c8:	3a01      	subs	r2, #1
 800d3ca:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d3ce:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d3d0:	f7fc fad2 	bl	8009978 <HAL_GetTick>
 800d3d4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d3d6:	1c6b      	adds	r3, r5, #1
 800d3d8:	d105      	bne.n	800d3e6 <FMC_SDRAM_SendCommand+0x3a>
 800d3da:	69a3      	ldr	r3, [r4, #24]
 800d3dc:	f013 0320 	ands.w	r3, r3, #32
 800d3e0:	d1fb      	bne.n	800d3da <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d3e2:	4618      	mov	r0, r3
}
 800d3e4:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d3e6:	69a3      	ldr	r3, [r4, #24]
 800d3e8:	f013 0320 	ands.w	r3, r3, #32
 800d3ec:	d0f9      	beq.n	800d3e2 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d3ee:	b125      	cbz	r5, 800d3fa <FMC_SDRAM_SendCommand+0x4e>
 800d3f0:	f7fc fac2 	bl	8009978 <HAL_GetTick>
 800d3f4:	1b80      	subs	r0, r0, r6
 800d3f6:	42a8      	cmp	r0, r5
 800d3f8:	d9ed      	bls.n	800d3d6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d3fa:	2003      	movs	r0, #3
}
 800d3fc:	bd70      	pop	{r4, r5, r6, pc}
 800d3fe:	bf00      	nop

0800d400 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d400:	6943      	ldr	r3, [r0, #20]
 800d402:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d406:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d408:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d40c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d410:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d412:	6151      	str	r1, [r2, #20]
}
 800d414:	4770      	bx	lr
 800d416:	bf00      	nop

0800d418 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d418:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d41a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d41e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d420:	f002 fb00 	bl	800fa24 <xTaskGetSchedulerState>
 800d424:	2801      	cmp	r0, #1
 800d426:	d100      	bne.n	800d42a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d428:	bd08      	pop	{r3, pc}
 800d42a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d42e:	f000 bc41 	b.w	800dcb4 <xPortSysTickHandler>
 800d432:	bf00      	nop

0800d434 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d434:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d438:	b92b      	cbnz	r3, 800d446 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d43a:	4b06      	ldr	r3, [pc, #24]	; (800d454 <osKernelInitialize+0x20>)
 800d43c:	6818      	ldr	r0, [r3, #0]
 800d43e:	b928      	cbnz	r0, 800d44c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d440:	2201      	movs	r2, #1
 800d442:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d444:	4770      	bx	lr
    stat = osErrorISR;
 800d446:	f06f 0005 	mvn.w	r0, #5
 800d44a:	4770      	bx	lr
    } else {
      stat = osError;
 800d44c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d450:	4770      	bx	lr
 800d452:	bf00      	nop
 800d454:	20002d64 	.word	0x20002d64

0800d458 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d458:	b510      	push	{r4, lr}
 800d45a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d45e:	b974      	cbnz	r4, 800d47e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d460:	4b08      	ldr	r3, [pc, #32]	; (800d484 <osKernelStart+0x2c>)
 800d462:	681a      	ldr	r2, [r3, #0]
 800d464:	2a01      	cmp	r2, #1
 800d466:	d107      	bne.n	800d478 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d468:	4907      	ldr	r1, [pc, #28]	; (800d488 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d46a:	2202      	movs	r2, #2
 800d46c:	77cc      	strb	r4, [r1, #31]
 800d46e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d470:	f002 f8b2 	bl	800f5d8 <vTaskStartScheduler>
      stat = osOK;
 800d474:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d476:	bd10      	pop	{r4, pc}
      stat = osError;
 800d478:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d47c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d47e:	f06f 0005 	mvn.w	r0, #5
}
 800d482:	bd10      	pop	{r4, pc}
 800d484:	20002d64 	.word	0x20002d64
 800d488:	e000ed00 	.word	0xe000ed00

0800d48c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d48c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d48e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d490:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d492:	4615      	mov	r5, r2
  hTask = NULL;
 800d494:	9405      	str	r4, [sp, #20]
 800d496:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d49a:	b9ea      	cbnz	r2, 800d4d8 <osThreadNew+0x4c>
 800d49c:	b350      	cbz	r0, 800d4f4 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d49e:	b1f5      	cbz	r5, 800d4de <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d4a0:	69ab      	ldr	r3, [r5, #24]
 800d4a2:	bb5b      	cbnz	r3, 800d4fc <osThreadNew+0x70>
 800d4a4:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d4a6:	686a      	ldr	r2, [r5, #4]
 800d4a8:	07d2      	lsls	r2, r2, #31
 800d4aa:	d423      	bmi.n	800d4f4 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d4ac:	696e      	ldr	r6, [r5, #20]
 800d4ae:	b34e      	cbz	r6, 800d504 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d4b0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d4b4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d4b6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d4b8:	b34c      	cbz	r4, 800d50e <osThreadNew+0x82>
 800d4ba:	68ea      	ldr	r2, [r5, #12]
 800d4bc:	2aab      	cmp	r2, #171	; 0xab
 800d4be:	d919      	bls.n	800d4f4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d4c0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d4c2:	b1bd      	cbz	r5, 800d4f4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d4c4:	b1b6      	cbz	r6, 800d4f4 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d4c6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d4ca:	9300      	str	r3, [sp, #0]
 800d4cc:	4662      	mov	r2, ip
 800d4ce:	460b      	mov	r3, r1
 800d4d0:	4639      	mov	r1, r7
 800d4d2:	f001 ffbf 	bl	800f454 <xTaskCreateStatic>
 800d4d6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d4d8:	4620      	mov	r0, r4
 800d4da:	b007      	add	sp, #28
 800d4dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d4de:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d4e0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d4e2:	ac05      	add	r4, sp, #20
 800d4e4:	9300      	str	r3, [sp, #0]
 800d4e6:	9401      	str	r4, [sp, #4]
 800d4e8:	460b      	mov	r3, r1
 800d4ea:	4629      	mov	r1, r5
 800d4ec:	f001 ffec 	bl	800f4c8 <xTaskCreate>
 800d4f0:	2801      	cmp	r0, #1
 800d4f2:	d00a      	beq.n	800d50a <osThreadNew+0x7e>
        return (NULL);
 800d4f4:	2400      	movs	r4, #0
}
 800d4f6:	4620      	mov	r0, r4
 800d4f8:	b007      	add	sp, #28
 800d4fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d4fc:	1e5c      	subs	r4, r3, #1
 800d4fe:	2c37      	cmp	r4, #55	; 0x37
 800d500:	d9d1      	bls.n	800d4a6 <osThreadNew+0x1a>
 800d502:	e7f7      	b.n	800d4f4 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d504:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d508:	e7d4      	b.n	800d4b4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d50a:	9c05      	ldr	r4, [sp, #20]
 800d50c:	e7e4      	b.n	800d4d8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d50e:	68ee      	ldr	r6, [r5, #12]
 800d510:	2e00      	cmp	r6, #0
 800d512:	d1e1      	bne.n	800d4d8 <osThreadNew+0x4c>
 800d514:	692d      	ldr	r5, [r5, #16]
 800d516:	2d00      	cmp	r5, #0
 800d518:	d1de      	bne.n	800d4d8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d51a:	fa1f f28c 	uxth.w	r2, ip
 800d51e:	463d      	mov	r5, r7
 800d520:	e7df      	b.n	800d4e2 <osThreadNew+0x56>
 800d522:	bf00      	nop

0800d524 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d524:	b510      	push	{r4, lr}
 800d526:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d52a:	b92c      	cbnz	r4, 800d538 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d52c:	b900      	cbnz	r0, 800d530 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d52e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d530:	f001 fffc 	bl	800f52c <vTaskDelay>
    stat = osOK;
 800d534:	4620      	mov	r0, r4
}
 800d536:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d538:	f06f 0005 	mvn.w	r0, #5
}
 800d53c:	bd10      	pop	{r4, pc}
 800d53e:	bf00      	nop

0800d540 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d540:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d542:	b083      	sub	sp, #12
 800d544:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d548:	b9fe      	cbnz	r6, 800d58a <osSemaphoreNew+0x4a>
 800d54a:	b1f0      	cbz	r0, 800d58a <osSemaphoreNew+0x4a>
 800d54c:	4288      	cmp	r0, r1
 800d54e:	460f      	mov	r7, r1
 800d550:	d31b      	bcc.n	800d58a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d552:	4615      	mov	r5, r2
 800d554:	b192      	cbz	r2, 800d57c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d556:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d55a:	b1d2      	cbz	r2, 800d592 <osSemaphoreNew+0x52>
 800d55c:	2b4f      	cmp	r3, #79	; 0x4f
 800d55e:	d914      	bls.n	800d58a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d560:	2801      	cmp	r0, #1
 800d562:	d038      	beq.n	800d5d6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d564:	f000 fd8c 	bl	800e080 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d568:	4604      	mov	r4, r0
 800d56a:	b170      	cbz	r0, 800d58a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d56c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d56e:	4620      	mov	r0, r4
 800d570:	4629      	mov	r1, r5
 800d572:	f001 fc37 	bl	800ede4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d576:	4620      	mov	r0, r4
 800d578:	b003      	add	sp, #12
 800d57a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d57c:	2801      	cmp	r0, #1
 800d57e:	d012      	beq.n	800d5a6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d580:	f000 fdde 	bl	800e140 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d584:	4604      	mov	r4, r0
 800d586:	2800      	cmp	r0, #0
 800d588:	d1f1      	bne.n	800d56e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d58a:	2400      	movs	r4, #0
}
 800d58c:	4620      	mov	r0, r4
 800d58e:	b003      	add	sp, #12
 800d590:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d592:	2b00      	cmp	r3, #0
 800d594:	d1f9      	bne.n	800d58a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d596:	2801      	cmp	r0, #1
 800d598:	d005      	beq.n	800d5a6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d59a:	f000 fdd1 	bl	800e140 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d59e:	4604      	mov	r4, r0
 800d5a0:	2800      	cmp	r0, #0
 800d5a2:	d1e3      	bne.n	800d56c <osSemaphoreNew+0x2c>
 800d5a4:	e7f1      	b.n	800d58a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d5a6:	2203      	movs	r2, #3
 800d5a8:	2100      	movs	r1, #0
 800d5aa:	2001      	movs	r0, #1
 800d5ac:	f000 fd26 	bl	800dffc <xQueueGenericCreate>
 800d5b0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d5b2:	2c00      	cmp	r4, #0
 800d5b4:	d0e9      	beq.n	800d58a <osSemaphoreNew+0x4a>
 800d5b6:	b917      	cbnz	r7, 800d5be <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d5b8:	2d00      	cmp	r5, #0
 800d5ba:	d1d7      	bne.n	800d56c <osSemaphoreNew+0x2c>
 800d5bc:	e7d7      	b.n	800d56e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d5be:	2300      	movs	r3, #0
 800d5c0:	461a      	mov	r2, r3
 800d5c2:	4619      	mov	r1, r3
 800d5c4:	4620      	mov	r0, r4
 800d5c6:	f000 fe01 	bl	800e1cc <xQueueGenericSend>
 800d5ca:	2801      	cmp	r0, #1
 800d5cc:	d0f4      	beq.n	800d5b8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d5ce:	4620      	mov	r0, r4
 800d5d0:	f001 fbc2 	bl	800ed58 <vQueueDelete>
 800d5d4:	e7d9      	b.n	800d58a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d5d6:	4613      	mov	r3, r2
 800d5d8:	2203      	movs	r2, #3
 800d5da:	9200      	str	r2, [sp, #0]
 800d5dc:	4631      	mov	r1, r6
 800d5de:	4632      	mov	r2, r6
 800d5e0:	f000 fc9e 	bl	800df20 <xQueueGenericCreateStatic>
 800d5e4:	4604      	mov	r4, r0
 800d5e6:	e7e4      	b.n	800d5b2 <osSemaphoreNew+0x72>

0800d5e8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d5e8:	b370      	cbz	r0, 800d648 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d5ea:	b510      	push	{r4, lr}
 800d5ec:	460c      	mov	r4, r1
 800d5ee:	b082      	sub	sp, #8
 800d5f0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d5f4:	b1c3      	cbz	r3, 800d628 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d5f6:	bb21      	cbnz	r1, 800d642 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d5f8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d5fa:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d5fc:	f001 fb2a 	bl	800ec54 <xQueueReceiveFromISR>
 800d600:	2801      	cmp	r0, #1
 800d602:	d11a      	bne.n	800d63a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d604:	9b01      	ldr	r3, [sp, #4]
 800d606:	b913      	cbnz	r3, 800d60e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d608:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d60a:	b002      	add	sp, #8
 800d60c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d60e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d612:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d616:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d61a:	f3bf 8f4f 	dsb	sy
 800d61e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d622:	4620      	mov	r0, r4
}
 800d624:	b002      	add	sp, #8
 800d626:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d628:	f001 f98a 	bl	800e940 <xQueueSemaphoreTake>
 800d62c:	2801      	cmp	r0, #1
 800d62e:	d0eb      	beq.n	800d608 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d630:	b11c      	cbz	r4, 800d63a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d632:	f06f 0001 	mvn.w	r0, #1
}
 800d636:	b002      	add	sp, #8
 800d638:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d63a:	f06f 0002 	mvn.w	r0, #2
}
 800d63e:	b002      	add	sp, #8
 800d640:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d642:	f06f 0003 	mvn.w	r0, #3
 800d646:	e7e0      	b.n	800d60a <osSemaphoreAcquire+0x22>
 800d648:	f06f 0003 	mvn.w	r0, #3
}
 800d64c:	4770      	bx	lr
 800d64e:	bf00      	nop

0800d650 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d650:	b330      	cbz	r0, 800d6a0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d652:	b510      	push	{r4, lr}
 800d654:	b082      	sub	sp, #8
 800d656:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d65a:	b1ab      	cbz	r3, 800d688 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d65c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d65e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d660:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d662:	f000 ff97 	bl	800e594 <xQueueGiveFromISR>
 800d666:	2801      	cmp	r0, #1
 800d668:	d117      	bne.n	800d69a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d66a:	9b01      	ldr	r3, [sp, #4]
 800d66c:	b193      	cbz	r3, 800d694 <osSemaphoreRelease+0x44>
 800d66e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d672:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d676:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d67a:	f3bf 8f4f 	dsb	sy
 800d67e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d682:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d684:	b002      	add	sp, #8
 800d686:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d688:	461a      	mov	r2, r3
 800d68a:	4619      	mov	r1, r3
 800d68c:	f000 fd9e 	bl	800e1cc <xQueueGenericSend>
 800d690:	2801      	cmp	r0, #1
 800d692:	d102      	bne.n	800d69a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d694:	2000      	movs	r0, #0
}
 800d696:	b002      	add	sp, #8
 800d698:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d69a:	f06f 0002 	mvn.w	r0, #2
 800d69e:	e7fa      	b.n	800d696 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d6a0:	f06f 0003 	mvn.w	r0, #3
}
 800d6a4:	4770      	bx	lr
 800d6a6:	bf00      	nop

0800d6a8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d6a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6aa:	b085      	sub	sp, #20
 800d6ac:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d6b0:	b987      	cbnz	r7, 800d6d4 <osMessageQueueNew+0x2c>
 800d6b2:	4605      	mov	r5, r0
 800d6b4:	b170      	cbz	r0, 800d6d4 <osMessageQueueNew+0x2c>
 800d6b6:	b169      	cbz	r1, 800d6d4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d6b8:	4614      	mov	r4, r2
 800d6ba:	b1ea      	cbz	r2, 800d6f8 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d6bc:	6893      	ldr	r3, [r2, #8]
 800d6be:	b163      	cbz	r3, 800d6da <osMessageQueueNew+0x32>
 800d6c0:	68d2      	ldr	r2, [r2, #12]
 800d6c2:	2a4f      	cmp	r2, #79	; 0x4f
 800d6c4:	d906      	bls.n	800d6d4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d6c6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d6c8:	b122      	cbz	r2, 800d6d4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d6ca:	6966      	ldr	r6, [r4, #20]
 800d6cc:	fb01 f505 	mul.w	r5, r1, r5
 800d6d0:	42ae      	cmp	r6, r5
 800d6d2:	d21c      	bcs.n	800d70e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d6d4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d6d6:	b005      	add	sp, #20
 800d6d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d6da:	68d3      	ldr	r3, [r2, #12]
 800d6dc:	2b00      	cmp	r3, #0
 800d6de:	d1f9      	bne.n	800d6d4 <osMessageQueueNew+0x2c>
 800d6e0:	6913      	ldr	r3, [r2, #16]
 800d6e2:	2b00      	cmp	r3, #0
 800d6e4:	d1f6      	bne.n	800d6d4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d6e6:	6952      	ldr	r2, [r2, #20]
 800d6e8:	2a00      	cmp	r2, #0
 800d6ea:	d1f3      	bne.n	800d6d4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d6ec:	f000 fc86 	bl	800dffc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d6f0:	2800      	cmp	r0, #0
 800d6f2:	d0ef      	beq.n	800d6d4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d6f4:	6824      	ldr	r4, [r4, #0]
 800d6f6:	e003      	b.n	800d700 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d6f8:	f000 fc80 	bl	800dffc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d6fc:	2800      	cmp	r0, #0
 800d6fe:	d0e9      	beq.n	800d6d4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d700:	4621      	mov	r1, r4
 800d702:	9003      	str	r0, [sp, #12]
 800d704:	f001 fb6e 	bl	800ede4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d708:	9803      	ldr	r0, [sp, #12]
}
 800d70a:	b005      	add	sp, #20
 800d70c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d70e:	9700      	str	r7, [sp, #0]
 800d710:	f000 fc06 	bl	800df20 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d714:	2800      	cmp	r0, #0
 800d716:	d1ed      	bne.n	800d6f4 <osMessageQueueNew+0x4c>
 800d718:	e7dc      	b.n	800d6d4 <osMessageQueueNew+0x2c>
 800d71a:	bf00      	nop

0800d71c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d71c:	b570      	push	{r4, r5, r6, lr}
 800d71e:	461c      	mov	r4, r3
 800d720:	b082      	sub	sp, #8
 800d722:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d726:	b1be      	cbz	r6, 800d758 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d728:	b350      	cbz	r0, 800d780 <osMessageQueuePut+0x64>
 800d72a:	b349      	cbz	r1, 800d780 <osMessageQueuePut+0x64>
 800d72c:	bb43      	cbnz	r3, 800d780 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d72e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d730:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d732:	f000 fec9 	bl	800e4c8 <xQueueGenericSendFromISR>
 800d736:	2801      	cmp	r0, #1
 800d738:	d11e      	bne.n	800d778 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d73a:	9b01      	ldr	r3, [sp, #4]
 800d73c:	b1cb      	cbz	r3, 800d772 <osMessageQueuePut+0x56>
 800d73e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d742:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d746:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d74a:	f3bf 8f4f 	dsb	sy
 800d74e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d752:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d754:	b002      	add	sp, #8
 800d756:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d758:	b190      	cbz	r0, 800d780 <osMessageQueuePut+0x64>
 800d75a:	b189      	cbz	r1, 800d780 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d75c:	4633      	mov	r3, r6
 800d75e:	4622      	mov	r2, r4
 800d760:	f000 fd34 	bl	800e1cc <xQueueGenericSend>
 800d764:	2801      	cmp	r0, #1
 800d766:	d004      	beq.n	800d772 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d768:	b134      	cbz	r4, 800d778 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d76a:	f06f 0001 	mvn.w	r0, #1
}
 800d76e:	b002      	add	sp, #8
 800d770:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d772:	2000      	movs	r0, #0
}
 800d774:	b002      	add	sp, #8
 800d776:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d778:	f06f 0002 	mvn.w	r0, #2
}
 800d77c:	b002      	add	sp, #8
 800d77e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d780:	f06f 0003 	mvn.w	r0, #3
 800d784:	e7e6      	b.n	800d754 <osMessageQueuePut+0x38>
 800d786:	bf00      	nop

0800d788 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d788:	b530      	push	{r4, r5, lr}
 800d78a:	461c      	mov	r4, r3
 800d78c:	b083      	sub	sp, #12
 800d78e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d792:	b1bb      	cbz	r3, 800d7c4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d794:	b348      	cbz	r0, 800d7ea <osMessageQueueGet+0x62>
 800d796:	b341      	cbz	r1, 800d7ea <osMessageQueueGet+0x62>
 800d798:	bb3c      	cbnz	r4, 800d7ea <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d79a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d79c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d79e:	f001 fa59 	bl	800ec54 <xQueueReceiveFromISR>
 800d7a2:	2801      	cmp	r0, #1
 800d7a4:	d11d      	bne.n	800d7e2 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d7a6:	9b01      	ldr	r3, [sp, #4]
 800d7a8:	b1c3      	cbz	r3, 800d7dc <osMessageQueueGet+0x54>
 800d7aa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d7ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d7b2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d7b6:	f3bf 8f4f 	dsb	sy
 800d7ba:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d7be:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d7c0:	b003      	add	sp, #12
 800d7c2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d7c4:	b188      	cbz	r0, 800d7ea <osMessageQueueGet+0x62>
 800d7c6:	b181      	cbz	r1, 800d7ea <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d7c8:	4622      	mov	r2, r4
 800d7ca:	f000 ff3b 	bl	800e644 <xQueueReceive>
 800d7ce:	2801      	cmp	r0, #1
 800d7d0:	d004      	beq.n	800d7dc <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d7d2:	b134      	cbz	r4, 800d7e2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d7d4:	f06f 0001 	mvn.w	r0, #1
}
 800d7d8:	b003      	add	sp, #12
 800d7da:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d7dc:	2000      	movs	r0, #0
}
 800d7de:	b003      	add	sp, #12
 800d7e0:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d7e2:	f06f 0002 	mvn.w	r0, #2
}
 800d7e6:	b003      	add	sp, #12
 800d7e8:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d7ea:	f06f 0003 	mvn.w	r0, #3
 800d7ee:	e7e7      	b.n	800d7c0 <osMessageQueueGet+0x38>

0800d7f0 <osMessageQueueGetCount>:
 800d7f0:	b130      	cbz	r0, 800d800 <osMessageQueueGetCount+0x10>
 800d7f2:	f3ef 8305 	mrs	r3, IPSR
 800d7f6:	b10b      	cbz	r3, 800d7fc <osMessageQueueGetCount+0xc>
 800d7f8:	f001 baa0 	b.w	800ed3c <uxQueueMessagesWaitingFromISR>
 800d7fc:	f001 ba88 	b.w	800ed10 <uxQueueMessagesWaiting>
 800d800:	4770      	bx	lr
 800d802:	bf00      	nop

0800d804 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d804:	4b04      	ldr	r3, [pc, #16]	; (800d818 <vApplicationGetIdleTaskMemory+0x14>)
 800d806:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d808:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d80a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d80c:	4c03      	ldr	r4, [pc, #12]	; (800d81c <vApplicationGetIdleTaskMemory+0x18>)
 800d80e:	600c      	str	r4, [r1, #0]
}
 800d810:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d814:	6013      	str	r3, [r2, #0]
}
 800d816:	4770      	bx	lr
 800d818:	20002cb8 	.word	0x20002cb8
 800d81c:	20002ab8 	.word	0x20002ab8

0800d820 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d820:	4b05      	ldr	r3, [pc, #20]	; (800d838 <vApplicationGetTimerTaskMemory+0x18>)
 800d822:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d824:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d826:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d82a:	4c04      	ldr	r4, [pc, #16]	; (800d83c <vApplicationGetTimerTaskMemory+0x1c>)
 800d82c:	600c      	str	r4, [r1, #0]
}
 800d82e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d832:	6013      	str	r3, [r2, #0]
}
 800d834:	4770      	bx	lr
 800d836:	bf00      	nop
 800d838:	20003168 	.word	0x20003168
 800d83c:	20002d68 	.word	0x20002d68

0800d840 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d844:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d846:	f001 ff43 	bl	800f6d0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d84a:	4a54      	ldr	r2, [pc, #336]	; (800d99c <pvPortMalloc+0x15c>)
 800d84c:	6816      	ldr	r6, [r2, #0]
 800d84e:	2e00      	cmp	r6, #0
 800d850:	d06e      	beq.n	800d930 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d852:	4b53      	ldr	r3, [pc, #332]	; (800d9a0 <pvPortMalloc+0x160>)
 800d854:	681f      	ldr	r7, [r3, #0]
 800d856:	423d      	tst	r5, r7
 800d858:	d12e      	bne.n	800d8b8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d85a:	b36d      	cbz	r5, 800d8b8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d85c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d860:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d862:	bf1c      	itt	ne
 800d864:	f024 0407 	bicne.w	r4, r4, #7
 800d868:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d86a:	b32c      	cbz	r4, 800d8b8 <pvPortMalloc+0x78>
 800d86c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d9b4 <pvPortMalloc+0x174>
 800d870:	f8dc 5000 	ldr.w	r5, [ip]
 800d874:	42a5      	cmp	r5, r4
 800d876:	d31f      	bcc.n	800d8b8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d878:	484a      	ldr	r0, [pc, #296]	; (800d9a4 <pvPortMalloc+0x164>)
 800d87a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d87c:	e003      	b.n	800d886 <pvPortMalloc+0x46>
 800d87e:	681a      	ldr	r2, [r3, #0]
 800d880:	b122      	cbz	r2, 800d88c <pvPortMalloc+0x4c>
 800d882:	4618      	mov	r0, r3
 800d884:	4613      	mov	r3, r2
 800d886:	6859      	ldr	r1, [r3, #4]
 800d888:	42a1      	cmp	r1, r4
 800d88a:	d3f8      	bcc.n	800d87e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d88c:	42b3      	cmp	r3, r6
 800d88e:	d013      	beq.n	800d8b8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d890:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d892:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d894:	f858 eb08 	ldr.w	lr, [r8], #8
 800d898:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d89c:	2a10      	cmp	r2, #16
 800d89e:	d929      	bls.n	800d8f4 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d8a0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d8a2:	0748      	lsls	r0, r1, #29
 800d8a4:	d00f      	beq.n	800d8c6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d8a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8aa:	f383 8811 	msr	BASEPRI, r3
 800d8ae:	f3bf 8f6f 	isb	sy
 800d8b2:	f3bf 8f4f 	dsb	sy
 800d8b6:	e7fe      	b.n	800d8b6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d8b8:	f001 ff12 	bl	800f6e0 <xTaskResumeAll>
 800d8bc:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d8c0:	4640      	mov	r0, r8
 800d8c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d8c6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d8c8:	4a36      	ldr	r2, [pc, #216]	; (800d9a4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d8ca:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d8cc:	4614      	mov	r4, r2
 800d8ce:	6812      	ldr	r2, [r2, #0]
 800d8d0:	4291      	cmp	r1, r2
 800d8d2:	d8fb      	bhi.n	800d8cc <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d8d4:	6860      	ldr	r0, [r4, #4]
 800d8d6:	eb04 0e00 	add.w	lr, r4, r0
 800d8da:	4571      	cmp	r1, lr
 800d8dc:	d04b      	beq.n	800d976 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d8de:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d8e2:	eb01 000e 	add.w	r0, r1, lr
 800d8e6:	4282      	cmp	r2, r0
 800d8e8:	d051      	beq.n	800d98e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d8ea:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d8ec:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d8ee:	bf18      	it	ne
 800d8f0:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d8f2:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d8f4:	4a2c      	ldr	r2, [pc, #176]	; (800d9a8 <pvPortMalloc+0x168>)
 800d8f6:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d8f8:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d8fa:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d8fc:	bf38      	it	cc
 800d8fe:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d900:	4a2a      	ldr	r2, [pc, #168]	; (800d9ac <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d902:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d906:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d908:	2000      	movs	r0, #0
 800d90a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d90e:	6813      	ldr	r3, [r2, #0]
 800d910:	3301      	adds	r3, #1
 800d912:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d914:	f001 fee4 	bl	800f6e0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d918:	f018 0f07 	tst.w	r8, #7
 800d91c:	d0d0      	beq.n	800d8c0 <pvPortMalloc+0x80>
 800d91e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d922:	f383 8811 	msr	BASEPRI, r3
 800d926:	f3bf 8f6f 	isb	sy
 800d92a:	f3bf 8f4f 	dsb	sy
 800d92e:	e7fe      	b.n	800d92e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d930:	4b1f      	ldr	r3, [pc, #124]	; (800d9b0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d932:	075e      	lsls	r6, r3, #29
 800d934:	d118      	bne.n	800d968 <pvPortMalloc+0x128>
 800d936:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d93a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d93c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d93e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d942:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d944:	4a18      	ldr	r2, [pc, #96]	; (800d9a8 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d946:	4817      	ldr	r0, [pc, #92]	; (800d9a4 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d948:	4c15      	ldr	r4, [pc, #84]	; (800d9a0 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d94a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d94c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d94e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d950:	4a18      	ldr	r2, [pc, #96]	; (800d9b4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d952:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d956:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d958:	2200      	movs	r2, #0
 800d95a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d95c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d95e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d962:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d966:	e776      	b.n	800d856 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d968:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d96a:	f021 0107 	bic.w	r1, r1, #7
 800d96e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d972:	460b      	mov	r3, r1
 800d974:	e7e2      	b.n	800d93c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d976:	6849      	ldr	r1, [r1, #4]
 800d978:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d97c:	eb04 010e 	add.w	r1, r4, lr
 800d980:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d982:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d986:	d001      	beq.n	800d98c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d988:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d98a:	e7b2      	b.n	800d8f2 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d98c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d98e:	42b2      	cmp	r2, r6
 800d990:	d0ab      	beq.n	800d8ea <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d992:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d994:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d996:	4470      	add	r0, lr
 800d998:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d99a:	e7a6      	b.n	800d8ea <pvPortMalloc+0xaa>
 800d99c:	20003214 	.word	0x20003214
 800d9a0:	20013218 	.word	0x20013218
 800d9a4:	2001322c 	.word	0x2001322c
 800d9a8:	20013220 	.word	0x20013220
 800d9ac:	20013224 	.word	0x20013224
 800d9b0:	20003218 	.word	0x20003218
 800d9b4:	2001321c 	.word	0x2001321c

0800d9b8 <vPortFree>:
	if( pv != NULL )
 800d9b8:	b1d0      	cbz	r0, 800d9f0 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d9ba:	4a2c      	ldr	r2, [pc, #176]	; (800da6c <vPortFree+0xb4>)
 800d9bc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d9c0:	6812      	ldr	r2, [r2, #0]
 800d9c2:	4213      	tst	r3, r2
 800d9c4:	d00b      	beq.n	800d9de <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d9c6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d9ca:	b191      	cbz	r1, 800d9f2 <vPortFree+0x3a>
 800d9cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9d0:	f383 8811 	msr	BASEPRI, r3
 800d9d4:	f3bf 8f6f 	isb	sy
 800d9d8:	f3bf 8f4f 	dsb	sy
 800d9dc:	e7fe      	b.n	800d9dc <vPortFree+0x24>
 800d9de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9e2:	f383 8811 	msr	BASEPRI, r3
 800d9e6:	f3bf 8f6f 	isb	sy
 800d9ea:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d9ee:	e7fe      	b.n	800d9ee <vPortFree+0x36>
 800d9f0:	4770      	bx	lr
{
 800d9f2:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d9f4:	ea23 0302 	bic.w	r3, r3, r2
{
 800d9f8:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d9fa:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d9fe:	4c1c      	ldr	r4, [pc, #112]	; (800da70 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800da00:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800da02:	f001 fe65 	bl	800f6d0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da06:	9801      	ldr	r0, [sp, #4]
 800da08:	6822      	ldr	r2, [r4, #0]
 800da0a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800da0e:	4b19      	ldr	r3, [pc, #100]	; (800da74 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da10:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800da12:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da14:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800da16:	461a      	mov	r2, r3
 800da18:	681b      	ldr	r3, [r3, #0]
 800da1a:	4298      	cmp	r0, r3
 800da1c:	d8fb      	bhi.n	800da16 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800da1e:	6854      	ldr	r4, [r2, #4]
 800da20:	eb02 0e04 	add.w	lr, r2, r4
 800da24:	4570      	cmp	r0, lr
 800da26:	d010      	beq.n	800da4a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da28:	eb00 0c01 	add.w	ip, r0, r1
 800da2c:	4563      	cmp	r3, ip
 800da2e:	d014      	beq.n	800da5a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800da30:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da32:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800da34:	bf18      	it	ne
 800da36:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800da38:	4a0f      	ldr	r2, [pc, #60]	; (800da78 <vPortFree+0xc0>)
 800da3a:	6813      	ldr	r3, [r2, #0]
 800da3c:	3301      	adds	r3, #1
 800da3e:	6013      	str	r3, [r2, #0]
}
 800da40:	b002      	add	sp, #8
 800da42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800da46:	f001 be4b 	b.w	800f6e0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800da4a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da4c:	1850      	adds	r0, r2, r1
 800da4e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800da50:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da52:	d001      	beq.n	800da58 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da54:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800da56:	e7ef      	b.n	800da38 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da58:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800da5a:	4c08      	ldr	r4, [pc, #32]	; (800da7c <vPortFree+0xc4>)
 800da5c:	6824      	ldr	r4, [r4, #0]
 800da5e:	42a3      	cmp	r3, r4
 800da60:	d0e6      	beq.n	800da30 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da62:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800da66:	4421      	add	r1, r4
 800da68:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da6a:	e7e1      	b.n	800da30 <vPortFree+0x78>
 800da6c:	20013218 	.word	0x20013218
 800da70:	2001321c 	.word	0x2001321c
 800da74:	2001322c 	.word	0x2001322c
 800da78:	20013228 	.word	0x20013228
 800da7c:	20003214 	.word	0x20003214

0800da80 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800da80:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800da84:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800da88:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800da8a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800da8e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800da92:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800da94:	4770      	bx	lr
 800da96:	bf00      	nop

0800da98 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800da98:	2300      	movs	r3, #0
 800da9a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800da9c:	4770      	bx	lr
 800da9e:	bf00      	nop

0800daa0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800daa0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800daa2:	689a      	ldr	r2, [r3, #8]
 800daa4:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800daa6:	6802      	ldr	r2, [r0, #0]
{
 800daa8:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800daaa:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800daac:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800daae:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dab0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800dab2:	6099      	str	r1, [r3, #8]
}
 800dab4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800dab8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800daba:	6002      	str	r2, [r0, #0]
}
 800dabc:	4770      	bx	lr
 800dabe:	bf00      	nop

0800dac0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dac0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dac2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dac4:	1c6b      	adds	r3, r5, #1
 800dac6:	d010      	beq.n	800daea <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800dac8:	f100 0308 	add.w	r3, r0, #8
 800dacc:	461c      	mov	r4, r3
 800dace:	685b      	ldr	r3, [r3, #4]
 800dad0:	681a      	ldr	r2, [r3, #0]
 800dad2:	42aa      	cmp	r2, r5
 800dad4:	d9fa      	bls.n	800dacc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dad6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dad8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dada:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dadc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800dade:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dae0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dae2:	6108      	str	r0, [r1, #16]
}
 800dae4:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800dae6:	6002      	str	r2, [r0, #0]
}
 800dae8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800daea:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800daec:	6863      	ldr	r3, [r4, #4]
 800daee:	e7f2      	b.n	800dad6 <vListInsert+0x16>

0800daf0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800daf0:	6903      	ldr	r3, [r0, #16]
{
 800daf2:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800daf4:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800daf8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dafa:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800dafc:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800dafe:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800db00:	bf08      	it	eq
 800db02:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800db04:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800db06:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800db0a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800db0c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800db0e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800db10:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800db12:	6818      	ldr	r0, [r3, #0]
}
 800db14:	4770      	bx	lr
 800db16:	bf00      	nop

0800db18 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800db18:	4808      	ldr	r0, [pc, #32]	; (800db3c <prvPortStartFirstTask+0x24>)
 800db1a:	6800      	ldr	r0, [r0, #0]
 800db1c:	6800      	ldr	r0, [r0, #0]
 800db1e:	f380 8808 	msr	MSP, r0
 800db22:	f04f 0000 	mov.w	r0, #0
 800db26:	f380 8814 	msr	CONTROL, r0
 800db2a:	b662      	cpsie	i
 800db2c:	b661      	cpsie	f
 800db2e:	f3bf 8f4f 	dsb	sy
 800db32:	f3bf 8f6f 	isb	sy
 800db36:	df00      	svc	0
 800db38:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800db3a:	0000      	.short	0x0000
 800db3c:	e000ed08 	.word	0xe000ed08

0800db40 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800db40:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800db50 <vPortEnableVFP+0x10>
 800db44:	6801      	ldr	r1, [r0, #0]
 800db46:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800db4a:	6001      	str	r1, [r0, #0]
 800db4c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800db4e:	0000      	.short	0x0000
 800db50:	e000ed88 	.word	0xe000ed88

0800db54 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800db54:	4b0e      	ldr	r3, [pc, #56]	; (800db90 <prvTaskExitError+0x3c>)
 800db56:	681b      	ldr	r3, [r3, #0]
{
 800db58:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800db5a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800db5c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800db5e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800db60:	d008      	beq.n	800db74 <prvTaskExitError+0x20>
 800db62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db66:	f383 8811 	msr	BASEPRI, r3
 800db6a:	f3bf 8f6f 	isb	sy
 800db6e:	f3bf 8f4f 	dsb	sy
 800db72:	e7fe      	b.n	800db72 <prvTaskExitError+0x1e>
 800db74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db78:	f383 8811 	msr	BASEPRI, r3
 800db7c:	f3bf 8f6f 	isb	sy
 800db80:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800db84:	9b01      	ldr	r3, [sp, #4]
 800db86:	2b00      	cmp	r3, #0
 800db88:	d0fc      	beq.n	800db84 <prvTaskExitError+0x30>
}
 800db8a:	b002      	add	sp, #8
 800db8c:	4770      	bx	lr
 800db8e:	bf00      	nop
 800db90:	2000009c 	.word	0x2000009c

0800db94 <pxPortInitialiseStack>:
{
 800db94:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800db96:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800db9a:	4c07      	ldr	r4, [pc, #28]	; (800dbb8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800db9c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800dba0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dba4:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dba8:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dbac:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800dbb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dbb4:	3844      	subs	r0, #68	; 0x44
 800dbb6:	4770      	bx	lr
 800dbb8:	0800db55 	.word	0x0800db55
 800dbbc:	00000000 	.word	0x00000000

0800dbc0 <SVC_Handler>:
	__asm volatile (
 800dbc0:	4b07      	ldr	r3, [pc, #28]	; (800dbe0 <pxCurrentTCBConst2>)
 800dbc2:	6819      	ldr	r1, [r3, #0]
 800dbc4:	6808      	ldr	r0, [r1, #0]
 800dbc6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbca:	f380 8809 	msr	PSP, r0
 800dbce:	f3bf 8f6f 	isb	sy
 800dbd2:	f04f 0000 	mov.w	r0, #0
 800dbd6:	f380 8811 	msr	BASEPRI, r0
 800dbda:	4770      	bx	lr
 800dbdc:	f3af 8000 	nop.w

0800dbe0 <pxCurrentTCBConst2>:
 800dbe0:	20013280 	.word	0x20013280

0800dbe4 <vPortEnterCritical>:
 800dbe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe8:	f383 8811 	msr	BASEPRI, r3
 800dbec:	f3bf 8f6f 	isb	sy
 800dbf0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800dbf4:	4a0b      	ldr	r2, [pc, #44]	; (800dc24 <vPortEnterCritical+0x40>)
 800dbf6:	6813      	ldr	r3, [r2, #0]
 800dbf8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800dbfa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800dbfc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800dbfe:	d000      	beq.n	800dc02 <vPortEnterCritical+0x1e>
}
 800dc00:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800dc02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc06:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800dc0a:	b2db      	uxtb	r3, r3
 800dc0c:	2b00      	cmp	r3, #0
 800dc0e:	d0f7      	beq.n	800dc00 <vPortEnterCritical+0x1c>
 800dc10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc14:	f383 8811 	msr	BASEPRI, r3
 800dc18:	f3bf 8f6f 	isb	sy
 800dc1c:	f3bf 8f4f 	dsb	sy
 800dc20:	e7fe      	b.n	800dc20 <vPortEnterCritical+0x3c>
 800dc22:	bf00      	nop
 800dc24:	2000009c 	.word	0x2000009c

0800dc28 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800dc28:	4a08      	ldr	r2, [pc, #32]	; (800dc4c <vPortExitCritical+0x24>)
 800dc2a:	6813      	ldr	r3, [r2, #0]
 800dc2c:	b943      	cbnz	r3, 800dc40 <vPortExitCritical+0x18>
 800dc2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc32:	f383 8811 	msr	BASEPRI, r3
 800dc36:	f3bf 8f6f 	isb	sy
 800dc3a:	f3bf 8f4f 	dsb	sy
 800dc3e:	e7fe      	b.n	800dc3e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800dc40:	3b01      	subs	r3, #1
 800dc42:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800dc44:	b90b      	cbnz	r3, 800dc4a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800dc46:	f383 8811 	msr	BASEPRI, r3
}
 800dc4a:	4770      	bx	lr
 800dc4c:	2000009c 	.word	0x2000009c

0800dc50 <PendSV_Handler>:
	__asm volatile
 800dc50:	f3ef 8009 	mrs	r0, PSP
 800dc54:	f3bf 8f6f 	isb	sy
 800dc58:	4b15      	ldr	r3, [pc, #84]	; (800dcb0 <pxCurrentTCBConst>)
 800dc5a:	681a      	ldr	r2, [r3, #0]
 800dc5c:	f01e 0f10 	tst.w	lr, #16
 800dc60:	bf08      	it	eq
 800dc62:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800dc66:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc6a:	6010      	str	r0, [r2, #0]
 800dc6c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800dc70:	f04f 0050 	mov.w	r0, #80	; 0x50
 800dc74:	f380 8811 	msr	BASEPRI, r0
 800dc78:	f3bf 8f4f 	dsb	sy
 800dc7c:	f3bf 8f6f 	isb	sy
 800dc80:	f001 fd54 	bl	800f72c <vTaskSwitchContext>
 800dc84:	f04f 0000 	mov.w	r0, #0
 800dc88:	f380 8811 	msr	BASEPRI, r0
 800dc8c:	bc09      	pop	{r0, r3}
 800dc8e:	6819      	ldr	r1, [r3, #0]
 800dc90:	6808      	ldr	r0, [r1, #0]
 800dc92:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc96:	f01e 0f10 	tst.w	lr, #16
 800dc9a:	bf08      	it	eq
 800dc9c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800dca0:	f380 8809 	msr	PSP, r0
 800dca4:	f3bf 8f6f 	isb	sy
 800dca8:	4770      	bx	lr
 800dcaa:	bf00      	nop
 800dcac:	f3af 8000 	nop.w

0800dcb0 <pxCurrentTCBConst>:
 800dcb0:	20013280 	.word	0x20013280

0800dcb4 <xPortSysTickHandler>:
{
 800dcb4:	b508      	push	{r3, lr}
	__asm volatile
 800dcb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcba:	f383 8811 	msr	BASEPRI, r3
 800dcbe:	f3bf 8f6f 	isb	sy
 800dcc2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800dcc6:	f001 fd21 	bl	800f70c <xTaskIncrementTick>
 800dcca:	b128      	cbz	r0, 800dcd8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800dccc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dcd0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcd4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800dcd8:	2300      	movs	r3, #0
 800dcda:	f383 8811 	msr	BASEPRI, r3
}
 800dcde:	bd08      	pop	{r3, pc}

0800dce0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dce0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800dce4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dce6:	4906      	ldr	r1, [pc, #24]	; (800dd00 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dce8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800dcea:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dcec:	680b      	ldr	r3, [r1, #0]
 800dcee:	4905      	ldr	r1, [pc, #20]	; (800dd04 <vPortSetupTimerInterrupt+0x24>)
 800dcf0:	fba1 1303 	umull	r1, r3, r1, r3
 800dcf4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dcf6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dcf8:	3b01      	subs	r3, #1
 800dcfa:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dcfc:	6110      	str	r0, [r2, #16]
}
 800dcfe:	4770      	bx	lr
 800dd00:	20000090 	.word	0x20000090
 800dd04:	10624dd3 	.word	0x10624dd3

0800dd08 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dd08:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd0c:	4a49      	ldr	r2, [pc, #292]	; (800de34 <xPortStartScheduler+0x12c>)
 800dd0e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800dd12:	4291      	cmp	r1, r2
 800dd14:	d043      	beq.n	800dd9e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dd16:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800dd1a:	4b47      	ldr	r3, [pc, #284]	; (800de38 <xPortStartScheduler+0x130>)
 800dd1c:	429a      	cmp	r2, r3
 800dd1e:	d035      	beq.n	800dd8c <xPortStartScheduler+0x84>
{
 800dd20:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dd22:	4b46      	ldr	r3, [pc, #280]	; (800de3c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd24:	4846      	ldr	r0, [pc, #280]	; (800de40 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dd26:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dd28:	4c46      	ldr	r4, [pc, #280]	; (800de44 <xPortStartScheduler+0x13c>)
{
 800dd2a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dd2c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dd2e:	b2d2      	uxtb	r2, r2
 800dd30:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dd32:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800dd34:	781b      	ldrb	r3, [r3, #0]
 800dd36:	b2db      	uxtb	r3, r3
 800dd38:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd3c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd40:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd44:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dd48:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd4a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd4c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dd4e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd50:	bf48      	it	mi
 800dd52:	2206      	movmi	r2, #6
 800dd54:	d511      	bpl.n	800dd7a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800dd56:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800dd5a:	005b      	lsls	r3, r3, #1
 800dd5c:	b2db      	uxtb	r3, r3
 800dd5e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd62:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800dd66:	0609      	lsls	r1, r1, #24
 800dd68:	4610      	mov	r0, r2
 800dd6a:	f102 32ff 	add.w	r2, r2, #4294967295
 800dd6e:	d4f2      	bmi.n	800dd56 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800dd70:	2803      	cmp	r0, #3
 800dd72:	6020      	str	r0, [r4, #0]
 800dd74:	f88d 3007 	strb.w	r3, [sp, #7]
 800dd78:	d01a      	beq.n	800ddb0 <xPortStartScheduler+0xa8>
	__asm volatile
 800dd7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd7e:	f383 8811 	msr	BASEPRI, r3
 800dd82:	f3bf 8f6f 	isb	sy
 800dd86:	f3bf 8f4f 	dsb	sy
 800dd8a:	e7fe      	b.n	800dd8a <xPortStartScheduler+0x82>
 800dd8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd90:	f383 8811 	msr	BASEPRI, r3
 800dd94:	f3bf 8f6f 	isb	sy
 800dd98:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dd9c:	e7fe      	b.n	800dd9c <xPortStartScheduler+0x94>
 800dd9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dda2:	f383 8811 	msr	BASEPRI, r3
 800dda6:	f3bf 8f6f 	isb	sy
 800ddaa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ddae:	e7fe      	b.n	800ddae <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800ddb0:	9b02      	ldr	r3, [sp, #8]
 800ddb2:	4a22      	ldr	r2, [pc, #136]	; (800de3c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800ddb4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800ddb8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800ddbc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800ddbe:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800ddc0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800ddc2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800ddc6:	4c20      	ldr	r4, [pc, #128]	; (800de48 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800ddc8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800ddcc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800ddd0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800ddd4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800ddd8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dddc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800ddde:	f7ff ff7f 	bl	800dce0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800dde2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800dde4:	f7ff feac 	bl	800db40 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800dde8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800ddec:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ddf0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800ddf4:	f7ff fe90 	bl	800db18 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800ddf8:	f001 fc98 	bl	800f72c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800ddfc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800ddfe:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800de00:	3301      	adds	r3, #1
 800de02:	d008      	beq.n	800de16 <xPortStartScheduler+0x10e>
 800de04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de08:	f383 8811 	msr	BASEPRI, r3
 800de0c:	f3bf 8f6f 	isb	sy
 800de10:	f3bf 8f4f 	dsb	sy
 800de14:	e7fe      	b.n	800de14 <xPortStartScheduler+0x10c>
 800de16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de1a:	f383 8811 	msr	BASEPRI, r3
 800de1e:	f3bf 8f6f 	isb	sy
 800de22:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800de26:	9b03      	ldr	r3, [sp, #12]
 800de28:	2b00      	cmp	r3, #0
 800de2a:	d0fc      	beq.n	800de26 <xPortStartScheduler+0x11e>
}
 800de2c:	2000      	movs	r0, #0
 800de2e:	b004      	add	sp, #16
 800de30:	bd70      	pop	{r4, r5, r6, pc}
 800de32:	bf00      	nop
 800de34:	410fc271 	.word	0x410fc271
 800de38:	410fc270 	.word	0x410fc270
 800de3c:	e000e400 	.word	0xe000e400
 800de40:	20013234 	.word	0x20013234
 800de44:	20013238 	.word	0x20013238
 800de48:	2000009c 	.word	0x2000009c

0800de4c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800de4c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800de50:	2b0f      	cmp	r3, #15
 800de52:	d90e      	bls.n	800de72 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800de54:	4911      	ldr	r1, [pc, #68]	; (800de9c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800de56:	4a12      	ldr	r2, [pc, #72]	; (800dea0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800de58:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800de5a:	7812      	ldrb	r2, [r2, #0]
 800de5c:	429a      	cmp	r2, r3
 800de5e:	d908      	bls.n	800de72 <vPortValidateInterruptPriority+0x26>
 800de60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de64:	f383 8811 	msr	BASEPRI, r3
 800de68:	f3bf 8f6f 	isb	sy
 800de6c:	f3bf 8f4f 	dsb	sy
 800de70:	e7fe      	b.n	800de70 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800de72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de76:	4a0b      	ldr	r2, [pc, #44]	; (800dea4 <vPortValidateInterruptPriority+0x58>)
 800de78:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800de7c:	6812      	ldr	r2, [r2, #0]
 800de7e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800de82:	4293      	cmp	r3, r2
 800de84:	d908      	bls.n	800de98 <vPortValidateInterruptPriority+0x4c>
 800de86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de8a:	f383 8811 	msr	BASEPRI, r3
 800de8e:	f3bf 8f6f 	isb	sy
 800de92:	f3bf 8f4f 	dsb	sy
 800de96:	e7fe      	b.n	800de96 <vPortValidateInterruptPriority+0x4a>
	}
 800de98:	4770      	bx	lr
 800de9a:	bf00      	nop
 800de9c:	e000e3f0 	.word	0xe000e3f0
 800dea0:	20013234 	.word	0x20013234
 800dea4:	20013238 	.word	0x20013238

0800dea8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800dea8:	b570      	push	{r4, r5, r6, lr}
 800deaa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800deac:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800deae:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800deb0:	b920      	cbnz	r0, 800debc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800deb2:	6825      	ldr	r5, [r4, #0]
 800deb4:	b34d      	cbz	r5, 800df0a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800deb6:	3601      	adds	r6, #1
 800deb8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800deba:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800debc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800debe:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800dec0:	b97d      	cbnz	r5, 800dee2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dec2:	6860      	ldr	r0, [r4, #4]
 800dec4:	f01d fe13 	bl	802baee <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dec8:	6863      	ldr	r3, [r4, #4]
 800deca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800decc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800dece:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ded0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ded2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800ded4:	bf24      	itt	cs
 800ded6:	6823      	ldrcs	r3, [r4, #0]
 800ded8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800deda:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800dedc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dede:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800dee0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800dee2:	68e0      	ldr	r0, [r4, #12]
 800dee4:	f01d fe03 	bl	802baee <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800dee8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800deea:	68e3      	ldr	r3, [r4, #12]
 800deec:	4251      	negs	r1, r2
 800deee:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800def0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800def2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800def4:	4293      	cmp	r3, r2
 800def6:	d202      	bcs.n	800defe <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800def8:	68a3      	ldr	r3, [r4, #8]
 800defa:	440b      	add	r3, r1
 800defc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800defe:	2d02      	cmp	r5, #2
 800df00:	d008      	beq.n	800df14 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800df02:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800df04:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800df06:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800df08:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800df0a:	68a0      	ldr	r0, [r4, #8]
 800df0c:	f001 fde0 	bl	800fad0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800df10:	60a5      	str	r5, [r4, #8]
 800df12:	e7d0      	b.n	800deb6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df14:	2e01      	cmp	r6, #1
 800df16:	bf38      	it	cc
 800df18:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800df1a:	2000      	movs	r0, #0
 800df1c:	e7cc      	b.n	800deb8 <prvCopyDataToQueue+0x10>
 800df1e:	bf00      	nop

0800df20 <xQueueGenericCreateStatic>:
	{
 800df20:	b530      	push	{r4, r5, lr}
 800df22:	b083      	sub	sp, #12
 800df24:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800df28:	b940      	cbnz	r0, 800df3c <xQueueGenericCreateStatic+0x1c>
 800df2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df2e:	f383 8811 	msr	BASEPRI, r3
 800df32:	f3bf 8f6f 	isb	sy
 800df36:	f3bf 8f4f 	dsb	sy
 800df3a:	e7fe      	b.n	800df3a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800df3c:	461d      	mov	r5, r3
 800df3e:	b17b      	cbz	r3, 800df60 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800df40:	b302      	cbz	r2, 800df84 <xQueueGenericCreateStatic+0x64>
 800df42:	b1b1      	cbz	r1, 800df72 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800df44:	2350      	movs	r3, #80	; 0x50
 800df46:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800df48:	9b01      	ldr	r3, [sp, #4]
 800df4a:	2b50      	cmp	r3, #80	; 0x50
 800df4c:	d023      	beq.n	800df96 <xQueueGenericCreateStatic+0x76>
 800df4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df52:	f383 8811 	msr	BASEPRI, r3
 800df56:	f3bf 8f6f 	isb	sy
 800df5a:	f3bf 8f4f 	dsb	sy
 800df5e:	e7fe      	b.n	800df5e <xQueueGenericCreateStatic+0x3e>
 800df60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df64:	f383 8811 	msr	BASEPRI, r3
 800df68:	f3bf 8f6f 	isb	sy
 800df6c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800df70:	e7fe      	b.n	800df70 <xQueueGenericCreateStatic+0x50>
 800df72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df76:	f383 8811 	msr	BASEPRI, r3
 800df7a:	f3bf 8f6f 	isb	sy
 800df7e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800df82:	e7fe      	b.n	800df82 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800df84:	bb89      	cbnz	r1, 800dfea <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800df86:	2250      	movs	r2, #80	; 0x50
 800df88:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800df8a:	9a01      	ldr	r2, [sp, #4]
 800df8c:	2a50      	cmp	r2, #80	; 0x50
 800df8e:	d1de      	bne.n	800df4e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800df90:	9a01      	ldr	r2, [sp, #4]
 800df92:	462a      	mov	r2, r5
 800df94:	e000      	b.n	800df98 <xQueueGenericCreateStatic+0x78>
 800df96:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800df98:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800df9a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800df9c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dfa0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800dfa4:	f7ff fe1e 	bl	800dbe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfa8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800dfac:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dfae:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfb0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfb4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfb6:	4401      	add	r1, r0
 800dfb8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dfba:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfbc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dfbe:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800dfc0:	21ff      	movs	r1, #255	; 0xff
 800dfc2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfc6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800dfc8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dfcc:	f105 0010 	add.w	r0, r5, #16
 800dfd0:	f7ff fd56 	bl	800da80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dfd4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dfd8:	f7ff fd52 	bl	800da80 <vListInitialise>
	taskEXIT_CRITICAL();
 800dfdc:	f7ff fe24 	bl	800dc28 <vPortExitCritical>
	}
 800dfe0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800dfe2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800dfe6:	b003      	add	sp, #12
 800dfe8:	bd30      	pop	{r4, r5, pc}
 800dfea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfee:	f383 8811 	msr	BASEPRI, r3
 800dff2:	f3bf 8f6f 	isb	sy
 800dff6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800dffa:	e7fe      	b.n	800dffa <xQueueGenericCreateStatic+0xda>

0800dffc <xQueueGenericCreate>:
	{
 800dffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800dffe:	b940      	cbnz	r0, 800e012 <xQueueGenericCreate+0x16>
 800e000:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e004:	f383 8811 	msr	BASEPRI, r3
 800e008:	f3bf 8f6f 	isb	sy
 800e00c:	f3bf 8f4f 	dsb	sy
 800e010:	e7fe      	b.n	800e010 <xQueueGenericCreate+0x14>
 800e012:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e014:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e018:	3050      	adds	r0, #80	; 0x50
 800e01a:	460e      	mov	r6, r1
 800e01c:	4617      	mov	r7, r2
 800e01e:	f7ff fc0f 	bl	800d840 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e022:	4604      	mov	r4, r0
 800e024:	b340      	cbz	r0, 800e078 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e026:	2300      	movs	r3, #0
 800e028:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e02c:	b336      	cbz	r6, 800e07c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e02e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e032:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e034:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e038:	f7ff fdd4 	bl	800dbe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e03c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e040:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e042:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e044:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e048:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e04a:	440a      	add	r2, r1
 800e04c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e04e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e050:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e052:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e054:	22ff      	movs	r2, #255	; 0xff
 800e056:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e05a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e05c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e060:	f104 0010 	add.w	r0, r4, #16
 800e064:	f7ff fd0c 	bl	800da80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e068:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e06c:	f7ff fd08 	bl	800da80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e070:	f7ff fdda 	bl	800dc28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e074:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e078:	4620      	mov	r0, r4
 800e07a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e07c:	4603      	mov	r3, r0
 800e07e:	e7d8      	b.n	800e032 <xQueueGenericCreate+0x36>

0800e080 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e080:	b940      	cbnz	r0, 800e094 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e082:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e086:	f383 8811 	msr	BASEPRI, r3
 800e08a:	f3bf 8f6f 	isb	sy
 800e08e:	f3bf 8f4f 	dsb	sy
 800e092:	e7fe      	b.n	800e092 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e094:	4288      	cmp	r0, r1
 800e096:	d208      	bcs.n	800e0aa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e098:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e09c:	f383 8811 	msr	BASEPRI, r3
 800e0a0:	f3bf 8f6f 	isb	sy
 800e0a4:	f3bf 8f4f 	dsb	sy
 800e0a8:	e7fe      	b.n	800e0a8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e0aa:	b530      	push	{r4, r5, lr}
 800e0ac:	4615      	mov	r5, r2
 800e0ae:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e0b0:	2a00      	cmp	r2, #0
 800e0b2:	d03c      	beq.n	800e12e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e0b4:	2350      	movs	r3, #80	; 0x50
 800e0b6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e0b8:	9b03      	ldr	r3, [sp, #12]
 800e0ba:	2b50      	cmp	r3, #80	; 0x50
 800e0bc:	d008      	beq.n	800e0d0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e0be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0c2:	f383 8811 	msr	BASEPRI, r3
 800e0c6:	f3bf 8f6f 	isb	sy
 800e0ca:	f3bf 8f4f 	dsb	sy
 800e0ce:	e7fe      	b.n	800e0ce <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e0d0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e0d2:	2301      	movs	r3, #1
 800e0d4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e0d8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e0da:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e0de:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e0e0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e0e2:	f7ff fd7f 	bl	800dbe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e0e6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e0ea:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e0ec:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e0ee:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e0f2:	1ac3      	subs	r3, r0, r3
 800e0f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e0f6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e0f8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e0fc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e100:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e102:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e104:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e108:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e10a:	f105 0010 	add.w	r0, r5, #16
 800e10e:	f7ff fcb7 	bl	800da80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e112:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e116:	f7ff fcb3 	bl	800da80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e11a:	f7ff fd85 	bl	800dc28 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e11e:	9901      	ldr	r1, [sp, #4]
 800e120:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e122:	2302      	movs	r3, #2
	}
 800e124:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e126:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e12a:	b005      	add	sp, #20
 800e12c:	bd30      	pop	{r4, r5, pc}
 800e12e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e132:	f383 8811 	msr	BASEPRI, r3
 800e136:	f3bf 8f6f 	isb	sy
 800e13a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e13e:	e7fe      	b.n	800e13e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e140 <xQueueCreateCountingSemaphore>:
	{
 800e140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e142:	b940      	cbnz	r0, 800e156 <xQueueCreateCountingSemaphore+0x16>
 800e144:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e148:	f383 8811 	msr	BASEPRI, r3
 800e14c:	f3bf 8f6f 	isb	sy
 800e150:	f3bf 8f4f 	dsb	sy
 800e154:	e7fe      	b.n	800e154 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e156:	4288      	cmp	r0, r1
 800e158:	460e      	mov	r6, r1
 800e15a:	4604      	mov	r4, r0
 800e15c:	d208      	bcs.n	800e170 <xQueueCreateCountingSemaphore+0x30>
 800e15e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e162:	f383 8811 	msr	BASEPRI, r3
 800e166:	f3bf 8f6f 	isb	sy
 800e16a:	f3bf 8f4f 	dsb	sy
 800e16e:	e7fe      	b.n	800e16e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e170:	2050      	movs	r0, #80	; 0x50
 800e172:	f7ff fb65 	bl	800d840 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e176:	4605      	mov	r5, r0
 800e178:	b330      	cbz	r0, 800e1c8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e17a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e17c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e180:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e184:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e186:	f7ff fd2d 	bl	800dbe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e18a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e18e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e190:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e192:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e196:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e198:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e19a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e19c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e19e:	22ff      	movs	r2, #255	; 0xff
 800e1a0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1a4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e1a6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e1a8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e1ac:	f105 0010 	add.w	r0, r5, #16
 800e1b0:	f7ff fc66 	bl	800da80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e1b4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e1b8:	f7ff fc62 	bl	800da80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e1bc:	f7ff fd34 	bl	800dc28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e1c0:	2302      	movs	r3, #2
 800e1c2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e1c6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e1c8:	4628      	mov	r0, r5
 800e1ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e1cc <xQueueGenericSend>:
{
 800e1cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e1d0:	b085      	sub	sp, #20
 800e1d2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e1d4:	2800      	cmp	r0, #0
 800e1d6:	f000 80a4 	beq.w	800e322 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1da:	4688      	mov	r8, r1
 800e1dc:	461f      	mov	r7, r3
 800e1de:	4604      	mov	r4, r0
 800e1e0:	2900      	cmp	r1, #0
 800e1e2:	f000 8091 	beq.w	800e308 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e1e6:	2f02      	cmp	r7, #2
 800e1e8:	d10b      	bne.n	800e202 <xQueueGenericSend+0x36>
 800e1ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e1ec:	2b01      	cmp	r3, #1
 800e1ee:	d008      	beq.n	800e202 <xQueueGenericSend+0x36>
 800e1f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1f4:	f383 8811 	msr	BASEPRI, r3
 800e1f8:	f3bf 8f6f 	isb	sy
 800e1fc:	f3bf 8f4f 	dsb	sy
 800e200:	e7fe      	b.n	800e200 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e202:	f001 fc0f 	bl	800fa24 <xTaskGetSchedulerState>
 800e206:	4605      	mov	r5, r0
 800e208:	2800      	cmp	r0, #0
 800e20a:	f000 8093 	beq.w	800e334 <xQueueGenericSend+0x168>
 800e20e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e210:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e214:	f7ff fce6 	bl	800dbe4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e218:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e21a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e21c:	429a      	cmp	r2, r3
 800e21e:	f0c0 80ef 	bcc.w	800e400 <xQueueGenericSend+0x234>
 800e222:	2f02      	cmp	r7, #2
 800e224:	f000 80ec 	beq.w	800e400 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e228:	9801      	ldr	r0, [sp, #4]
 800e22a:	2800      	cmp	r0, #0
 800e22c:	f000 8101 	beq.w	800e432 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e230:	2d00      	cmp	r5, #0
 800e232:	f000 80e1 	beq.w	800e3f8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e236:	f7ff fcf7 	bl	800dc28 <vPortExitCritical>
		vTaskSuspendAll();
 800e23a:	f001 fa49 	bl	800f6d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e23e:	f7ff fcd1 	bl	800dbe4 <vPortEnterCritical>
 800e242:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e246:	2bff      	cmp	r3, #255	; 0xff
 800e248:	bf04      	itt	eq
 800e24a:	2300      	moveq	r3, #0
 800e24c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e250:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e254:	2bff      	cmp	r3, #255	; 0xff
 800e256:	bf04      	itt	eq
 800e258:	2300      	moveq	r3, #0
 800e25a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e25e:	f7ff fce3 	bl	800dc28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e262:	a901      	add	r1, sp, #4
 800e264:	a802      	add	r0, sp, #8
 800e266:	f001 fb8f 	bl	800f988 <xTaskCheckForTimeOut>
 800e26a:	2800      	cmp	r0, #0
 800e26c:	f040 80e6 	bne.w	800e43c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e270:	f7ff fcb8 	bl	800dbe4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e274:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e276:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e278:	429a      	cmp	r2, r3
 800e27a:	d068      	beq.n	800e34e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e27c:	f7ff fcd4 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e280:	f7ff fcb0 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e284:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e288:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e28a:	2d00      	cmp	r5, #0
 800e28c:	dc04      	bgt.n	800e298 <xQueueGenericSend+0xcc>
 800e28e:	e011      	b.n	800e2b4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e290:	1e6a      	subs	r2, r5, #1
 800e292:	b2d3      	uxtb	r3, r2
 800e294:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e296:	b16b      	cbz	r3, 800e2b4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e298:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e29a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e29c:	b153      	cbz	r3, 800e2b4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e29e:	f001 fb1f 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e2a2:	2800      	cmp	r0, #0
 800e2a4:	d0f4      	beq.n	800e290 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e2a6:	f001 fbb7 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800e2aa:	1e6a      	subs	r2, r5, #1
 800e2ac:	b2d3      	uxtb	r3, r2
 800e2ae:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2b0:	2b00      	cmp	r3, #0
 800e2b2:	d1f1      	bne.n	800e298 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e2b4:	23ff      	movs	r3, #255	; 0xff
 800e2b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e2ba:	f7ff fcb5 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e2be:	f7ff fc91 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e2c2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e2c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2c8:	2d00      	cmp	r5, #0
 800e2ca:	dd14      	ble.n	800e2f6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2cc:	f104 0910 	add.w	r9, r4, #16
 800e2d0:	e003      	b.n	800e2da <xQueueGenericSend+0x10e>
				--cRxLock;
 800e2d2:	1e6a      	subs	r2, r5, #1
 800e2d4:	b2d3      	uxtb	r3, r2
 800e2d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2d8:	b16b      	cbz	r3, 800e2f6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2de:	b153      	cbz	r3, 800e2f6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2e0:	f001 fafe 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e2e4:	2800      	cmp	r0, #0
 800e2e6:	d0f4      	beq.n	800e2d2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e2e8:	f001 fb96 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800e2ec:	1e6a      	subs	r2, r5, #1
 800e2ee:	b2d3      	uxtb	r3, r2
 800e2f0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2f2:	2b00      	cmp	r3, #0
 800e2f4:	d1f1      	bne.n	800e2da <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e2f6:	23ff      	movs	r3, #255	; 0xff
 800e2f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e2fc:	f7ff fc94 	bl	800dc28 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e300:	f001 f9ee 	bl	800f6e0 <xTaskResumeAll>
 800e304:	2501      	movs	r5, #1
 800e306:	e785      	b.n	800e214 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e308:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e30a:	2b00      	cmp	r3, #0
 800e30c:	f43f af6b 	beq.w	800e1e6 <xQueueGenericSend+0x1a>
 800e310:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e314:	f383 8811 	msr	BASEPRI, r3
 800e318:	f3bf 8f6f 	isb	sy
 800e31c:	f3bf 8f4f 	dsb	sy
 800e320:	e7fe      	b.n	800e320 <xQueueGenericSend+0x154>
 800e322:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e326:	f383 8811 	msr	BASEPRI, r3
 800e32a:	f3bf 8f6f 	isb	sy
 800e32e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e332:	e7fe      	b.n	800e332 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e334:	9b01      	ldr	r3, [sp, #4]
 800e336:	2b00      	cmp	r3, #0
 800e338:	f43f af6a 	beq.w	800e210 <xQueueGenericSend+0x44>
 800e33c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e340:	f383 8811 	msr	BASEPRI, r3
 800e344:	f3bf 8f6f 	isb	sy
 800e348:	f3bf 8f4f 	dsb	sy
 800e34c:	e7fe      	b.n	800e34c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e34e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e352:	f7ff fc69 	bl	800dc28 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e356:	9901      	ldr	r1, [sp, #4]
 800e358:	4648      	mov	r0, r9
 800e35a:	f001 fa33 	bl	800f7c4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e35e:	f7ff fc41 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e362:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e366:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e368:	2d00      	cmp	r5, #0
 800e36a:	dc04      	bgt.n	800e376 <xQueueGenericSend+0x1aa>
 800e36c:	e011      	b.n	800e392 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e36e:	1e6b      	subs	r3, r5, #1
 800e370:	b2da      	uxtb	r2, r3
 800e372:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e374:	b16a      	cbz	r2, 800e392 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e376:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e378:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e37a:	b153      	cbz	r3, 800e392 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e37c:	f001 fab0 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e380:	2800      	cmp	r0, #0
 800e382:	d0f4      	beq.n	800e36e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e384:	f001 fb48 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800e388:	1e6b      	subs	r3, r5, #1
 800e38a:	b2da      	uxtb	r2, r3
 800e38c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e38e:	2a00      	cmp	r2, #0
 800e390:	d1f1      	bne.n	800e376 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e392:	23ff      	movs	r3, #255	; 0xff
 800e394:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e398:	f7ff fc46 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e39c:	f7ff fc22 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e3a0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3a4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3a6:	2d00      	cmp	r5, #0
 800e3a8:	dc04      	bgt.n	800e3b4 <xQueueGenericSend+0x1e8>
 800e3aa:	e011      	b.n	800e3d0 <xQueueGenericSend+0x204>
				--cRxLock;
 800e3ac:	1e6b      	subs	r3, r5, #1
 800e3ae:	b2da      	uxtb	r2, r3
 800e3b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3b2:	b16a      	cbz	r2, 800e3d0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3b6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3b8:	b153      	cbz	r3, 800e3d0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3ba:	f001 fa91 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e3be:	2800      	cmp	r0, #0
 800e3c0:	d0f4      	beq.n	800e3ac <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e3c2:	f001 fb29 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800e3c6:	1e6b      	subs	r3, r5, #1
 800e3c8:	b2da      	uxtb	r2, r3
 800e3ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3cc:	2a00      	cmp	r2, #0
 800e3ce:	d1f1      	bne.n	800e3b4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e3d0:	23ff      	movs	r3, #255	; 0xff
 800e3d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e3d6:	f7ff fc27 	bl	800dc28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e3da:	f001 f981 	bl	800f6e0 <xTaskResumeAll>
 800e3de:	2800      	cmp	r0, #0
 800e3e0:	d190      	bne.n	800e304 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e3e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e3ee:	f3bf 8f4f 	dsb	sy
 800e3f2:	f3bf 8f6f 	isb	sy
 800e3f6:	e785      	b.n	800e304 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e3f8:	a802      	add	r0, sp, #8
 800e3fa:	f001 fab9 	bl	800f970 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e3fe:	e71a      	b.n	800e236 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e400:	463a      	mov	r2, r7
 800e402:	4641      	mov	r1, r8
 800e404:	4620      	mov	r0, r4
 800e406:	f7ff fd4f 	bl	800dea8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e40a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e40c:	2b00      	cmp	r3, #0
 800e40e:	d153      	bne.n	800e4b8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e410:	b148      	cbz	r0, 800e426 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e412:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e416:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e41a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e41e:	f3bf 8f4f 	dsb	sy
 800e422:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e426:	f7ff fbff 	bl	800dc28 <vPortExitCritical>
				return pdPASS;
 800e42a:	2001      	movs	r0, #1
}
 800e42c:	b005      	add	sp, #20
 800e42e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e432:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e434:	f7ff fbf8 	bl	800dc28 <vPortExitCritical>
					return errQUEUE_FULL;
 800e438:	9800      	ldr	r0, [sp, #0]
 800e43a:	e7f7      	b.n	800e42c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e43c:	f7ff fbd2 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e440:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e444:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e446:	2d00      	cmp	r5, #0
 800e448:	dd10      	ble.n	800e46c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e44a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e44e:	e003      	b.n	800e458 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e450:	1e6b      	subs	r3, r5, #1
 800e452:	b2da      	uxtb	r2, r3
 800e454:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e456:	b14a      	cbz	r2, 800e46c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e458:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e45a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e45c:	b133      	cbz	r3, 800e46c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e45e:	f001 fa3f 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e462:	2800      	cmp	r0, #0
 800e464:	d0f4      	beq.n	800e450 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e466:	f001 fad7 	bl	800fa18 <vTaskMissedYield>
 800e46a:	e7f1      	b.n	800e450 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e46c:	23ff      	movs	r3, #255	; 0xff
 800e46e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e472:	f7ff fbd9 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e476:	f7ff fbb5 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e47a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e47e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e480:	2d00      	cmp	r5, #0
 800e482:	dd10      	ble.n	800e4a6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e484:	f104 0610 	add.w	r6, r4, #16
 800e488:	e003      	b.n	800e492 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e48a:	1e6b      	subs	r3, r5, #1
 800e48c:	b2da      	uxtb	r2, r3
 800e48e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e490:	b14a      	cbz	r2, 800e4a6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e492:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e494:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e496:	b133      	cbz	r3, 800e4a6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e498:	f001 fa22 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e49c:	2800      	cmp	r0, #0
 800e49e:	d0f4      	beq.n	800e48a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e4a0:	f001 faba 	bl	800fa18 <vTaskMissedYield>
 800e4a4:	e7f1      	b.n	800e48a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e4a6:	23ff      	movs	r3, #255	; 0xff
 800e4a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e4ac:	f7ff fbbc 	bl	800dc28 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e4b0:	f001 f916 	bl	800f6e0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e4b4:	2000      	movs	r0, #0
 800e4b6:	e7b9      	b.n	800e42c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e4bc:	f001 fa10 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e4c0:	2800      	cmp	r0, #0
 800e4c2:	d0b0      	beq.n	800e426 <xQueueGenericSend+0x25a>
 800e4c4:	e7a5      	b.n	800e412 <xQueueGenericSend+0x246>
 800e4c6:	bf00      	nop

0800e4c8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e4c8:	2800      	cmp	r0, #0
 800e4ca:	d04b      	beq.n	800e564 <xQueueGenericSendFromISR+0x9c>
{
 800e4cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4d0:	460e      	mov	r6, r1
 800e4d2:	4617      	mov	r7, r2
 800e4d4:	461d      	mov	r5, r3
 800e4d6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4d8:	b321      	cbz	r1, 800e524 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e4da:	2d02      	cmp	r5, #2
 800e4dc:	d10b      	bne.n	800e4f6 <xQueueGenericSendFromISR+0x2e>
 800e4de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e4e0:	2b01      	cmp	r3, #1
 800e4e2:	d008      	beq.n	800e4f6 <xQueueGenericSendFromISR+0x2e>
 800e4e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4e8:	f383 8811 	msr	BASEPRI, r3
 800e4ec:	f3bf 8f6f 	isb	sy
 800e4f0:	f3bf 8f4f 	dsb	sy
 800e4f4:	e7fe      	b.n	800e4f4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e4f6:	f7ff fca9 	bl	800de4c <vPortValidateInterruptPriority>
	__asm volatile
 800e4fa:	f3ef 8811 	mrs	r8, BASEPRI
 800e4fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e502:	f383 8811 	msr	BASEPRI, r3
 800e506:	f3bf 8f6f 	isb	sy
 800e50a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e50e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e510:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e512:	429a      	cmp	r2, r3
 800e514:	d312      	bcc.n	800e53c <xQueueGenericSendFromISR+0x74>
 800e516:	2d02      	cmp	r5, #2
 800e518:	d010      	beq.n	800e53c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e51a:	2000      	movs	r0, #0
	__asm volatile
 800e51c:	f388 8811 	msr	BASEPRI, r8
}
 800e520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e524:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e526:	2b00      	cmp	r3, #0
 800e528:	d0d7      	beq.n	800e4da <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e52a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e52e:	f383 8811 	msr	BASEPRI, r3
 800e532:	f3bf 8f6f 	isb	sy
 800e536:	f3bf 8f4f 	dsb	sy
 800e53a:	e7fe      	b.n	800e53a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e53c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e53e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e542:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e544:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e546:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e548:	4620      	mov	r0, r4
 800e54a:	f7ff fcad 	bl	800dea8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e54e:	1c6b      	adds	r3, r5, #1
 800e550:	d011      	beq.n	800e576 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e552:	1c6b      	adds	r3, r5, #1
 800e554:	b25b      	sxtb	r3, r3
 800e556:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e55a:	2001      	movs	r0, #1
	__asm volatile
 800e55c:	f388 8811 	msr	BASEPRI, r8
}
 800e560:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e564:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e568:	f383 8811 	msr	BASEPRI, r3
 800e56c:	f3bf 8f6f 	isb	sy
 800e570:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e574:	e7fe      	b.n	800e574 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e576:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e578:	2b00      	cmp	r3, #0
 800e57a:	d0ee      	beq.n	800e55a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e57c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e580:	f001 f9ae 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e584:	2800      	cmp	r0, #0
 800e586:	d0e8      	beq.n	800e55a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e588:	2f00      	cmp	r7, #0
 800e58a:	d0e6      	beq.n	800e55a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e58c:	2001      	movs	r0, #1
 800e58e:	6038      	str	r0, [r7, #0]
 800e590:	e7c4      	b.n	800e51c <xQueueGenericSendFromISR+0x54>
 800e592:	bf00      	nop

0800e594 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e594:	b370      	cbz	r0, 800e5f4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e596:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e598:	b570      	push	{r4, r5, r6, lr}
 800e59a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e59c:	b143      	cbz	r3, 800e5b0 <xQueueGiveFromISR+0x1c>
 800e59e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5a2:	f383 8811 	msr	BASEPRI, r3
 800e5a6:	f3bf 8f6f 	isb	sy
 800e5aa:	f3bf 8f4f 	dsb	sy
 800e5ae:	e7fe      	b.n	800e5ae <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e5b0:	6803      	ldr	r3, [r0, #0]
 800e5b2:	460c      	mov	r4, r1
 800e5b4:	b33b      	cbz	r3, 800e606 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e5b6:	f7ff fc49 	bl	800de4c <vPortValidateInterruptPriority>
	__asm volatile
 800e5ba:	f3ef 8511 	mrs	r5, BASEPRI
 800e5be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5c2:	f383 8811 	msr	BASEPRI, r3
 800e5c6:	f3bf 8f6f 	isb	sy
 800e5ca:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e5ce:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e5d0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e5d2:	429a      	cmp	r2, r3
 800e5d4:	d923      	bls.n	800e61e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e5d6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5da:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e5dc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5de:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e5e0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e5e2:	d020      	beq.n	800e626 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e5e4:	3301      	adds	r3, #1
 800e5e6:	b25b      	sxtb	r3, r3
 800e5e8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e5ec:	2001      	movs	r0, #1
	__asm volatile
 800e5ee:	f385 8811 	msr	BASEPRI, r5
}
 800e5f2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e5f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5f8:	f383 8811 	msr	BASEPRI, r3
 800e5fc:	f3bf 8f6f 	isb	sy
 800e600:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e604:	e7fe      	b.n	800e604 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e606:	6883      	ldr	r3, [r0, #8]
 800e608:	2b00      	cmp	r3, #0
 800e60a:	d0d4      	beq.n	800e5b6 <xQueueGiveFromISR+0x22>
 800e60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e610:	f383 8811 	msr	BASEPRI, r3
 800e614:	f3bf 8f6f 	isb	sy
 800e618:	f3bf 8f4f 	dsb	sy
 800e61c:	e7fe      	b.n	800e61c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e61e:	2000      	movs	r0, #0
	__asm volatile
 800e620:	f385 8811 	msr	BASEPRI, r5
}
 800e624:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e626:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e628:	2b00      	cmp	r3, #0
 800e62a:	d0df      	beq.n	800e5ec <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e62c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e630:	f001 f956 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e634:	2800      	cmp	r0, #0
 800e636:	d0d9      	beq.n	800e5ec <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e638:	2c00      	cmp	r4, #0
 800e63a:	d0d7      	beq.n	800e5ec <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e63c:	2001      	movs	r0, #1
 800e63e:	6020      	str	r0, [r4, #0]
 800e640:	e7ee      	b.n	800e620 <xQueueGiveFromISR+0x8c>
 800e642:	bf00      	nop

0800e644 <xQueueReceive>:
{
 800e644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e648:	b085      	sub	sp, #20
 800e64a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e64c:	2800      	cmp	r0, #0
 800e64e:	f000 815c 	beq.w	800e90a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e652:	460f      	mov	r7, r1
 800e654:	4604      	mov	r4, r0
 800e656:	2900      	cmp	r1, #0
 800e658:	d079      	beq.n	800e74e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e65a:	f001 f9e3 	bl	800fa24 <xTaskGetSchedulerState>
 800e65e:	2800      	cmp	r0, #0
 800e660:	f000 8081 	beq.w	800e766 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e664:	f7ff fabe 	bl	800dbe4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e668:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e66a:	2d00      	cmp	r5, #0
 800e66c:	f040 8138 	bne.w	800e8e0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e670:	9b01      	ldr	r3, [sp, #4]
 800e672:	2b00      	cmp	r3, #0
 800e674:	f000 80d5 	beq.w	800e822 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e678:	a802      	add	r0, sp, #8
 800e67a:	f001 f979 	bl	800f970 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e67e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e680:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e684:	f7ff fad0 	bl	800dc28 <vPortExitCritical>
		vTaskSuspendAll();
 800e688:	f001 f822 	bl	800f6d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e68c:	f7ff faaa 	bl	800dbe4 <vPortEnterCritical>
 800e690:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e694:	2bff      	cmp	r3, #255	; 0xff
 800e696:	bf08      	it	eq
 800e698:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e69c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6a0:	2bff      	cmp	r3, #255	; 0xff
 800e6a2:	bf08      	it	eq
 800e6a4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e6a8:	f7ff fabe 	bl	800dc28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e6ac:	a901      	add	r1, sp, #4
 800e6ae:	a802      	add	r0, sp, #8
 800e6b0:	f001 f96a 	bl	800f988 <xTaskCheckForTimeOut>
 800e6b4:	2800      	cmp	r0, #0
 800e6b6:	d163      	bne.n	800e780 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e6b8:	f7ff fa94 	bl	800dbe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e6bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e6be:	2b00      	cmp	r3, #0
 800e6c0:	f000 80b5 	beq.w	800e82e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e6c4:	f7ff fab0 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6c8:	f7ff fa8c 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6cc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6d2:	2d00      	cmp	r5, #0
 800e6d4:	dc04      	bgt.n	800e6e0 <xQueueReceive+0x9c>
 800e6d6:	e011      	b.n	800e6fc <xQueueReceive+0xb8>
			--cTxLock;
 800e6d8:	1e6b      	subs	r3, r5, #1
 800e6da:	b2da      	uxtb	r2, r3
 800e6dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6de:	b16a      	cbz	r2, 800e6fc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6e2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6e4:	b153      	cbz	r3, 800e6fc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6e6:	f001 f8fb 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e6ea:	2800      	cmp	r0, #0
 800e6ec:	d0f4      	beq.n	800e6d8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e6ee:	f001 f993 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800e6f2:	1e6b      	subs	r3, r5, #1
 800e6f4:	b2da      	uxtb	r2, r3
 800e6f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6f8:	2a00      	cmp	r2, #0
 800e6fa:	d1f1      	bne.n	800e6e0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e6fc:	23ff      	movs	r3, #255	; 0xff
 800e6fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e702:	f7ff fa91 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e706:	f7ff fa6d 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e70a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e70e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e710:	2d00      	cmp	r5, #0
 800e712:	dd14      	ble.n	800e73e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e714:	f104 0910 	add.w	r9, r4, #16
 800e718:	e003      	b.n	800e722 <xQueueReceive+0xde>
				--cRxLock;
 800e71a:	1e6b      	subs	r3, r5, #1
 800e71c:	b2da      	uxtb	r2, r3
 800e71e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e720:	b16a      	cbz	r2, 800e73e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e722:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e724:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e726:	b153      	cbz	r3, 800e73e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e728:	f001 f8da 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e72c:	2800      	cmp	r0, #0
 800e72e:	d0f4      	beq.n	800e71a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e730:	f001 f972 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800e734:	1e6b      	subs	r3, r5, #1
 800e736:	b2da      	uxtb	r2, r3
 800e738:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e73a:	2a00      	cmp	r2, #0
 800e73c:	d1f1      	bne.n	800e722 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e73e:	23ff      	movs	r3, #255	; 0xff
 800e740:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e744:	f7ff fa70 	bl	800dc28 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e748:	f000 ffca 	bl	800f6e0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e74c:	e060      	b.n	800e810 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e74e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e750:	2b00      	cmp	r3, #0
 800e752:	d082      	beq.n	800e65a <xQueueReceive+0x16>
	__asm volatile
 800e754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e758:	f383 8811 	msr	BASEPRI, r3
 800e75c:	f3bf 8f6f 	isb	sy
 800e760:	f3bf 8f4f 	dsb	sy
 800e764:	e7fe      	b.n	800e764 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e766:	9b01      	ldr	r3, [sp, #4]
 800e768:	2b00      	cmp	r3, #0
 800e76a:	f43f af7b 	beq.w	800e664 <xQueueReceive+0x20>
 800e76e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e772:	f383 8811 	msr	BASEPRI, r3
 800e776:	f3bf 8f6f 	isb	sy
 800e77a:	f3bf 8f4f 	dsb	sy
 800e77e:	e7fe      	b.n	800e77e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e780:	f7ff fa30 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e784:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e788:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e78a:	2d00      	cmp	r5, #0
 800e78c:	dc04      	bgt.n	800e798 <xQueueReceive+0x154>
 800e78e:	e011      	b.n	800e7b4 <xQueueReceive+0x170>
			--cTxLock;
 800e790:	1e6b      	subs	r3, r5, #1
 800e792:	b2da      	uxtb	r2, r3
 800e794:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e796:	b16a      	cbz	r2, 800e7b4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e798:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e79a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e79c:	b153      	cbz	r3, 800e7b4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e79e:	f001 f89f 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e7a2:	2800      	cmp	r0, #0
 800e7a4:	d0f4      	beq.n	800e790 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e7a6:	f001 f937 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800e7aa:	1e6b      	subs	r3, r5, #1
 800e7ac:	b2da      	uxtb	r2, r3
 800e7ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7b0:	2a00      	cmp	r2, #0
 800e7b2:	d1f1      	bne.n	800e798 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e7b4:	23ff      	movs	r3, #255	; 0xff
 800e7b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e7ba:	f7ff fa35 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e7be:	f7ff fa11 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e7c2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e7c6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7c8:	2d00      	cmp	r5, #0
 800e7ca:	dd14      	ble.n	800e7f6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7cc:	f104 0910 	add.w	r9, r4, #16
 800e7d0:	e003      	b.n	800e7da <xQueueReceive+0x196>
				--cRxLock;
 800e7d2:	1e6b      	subs	r3, r5, #1
 800e7d4:	b2da      	uxtb	r2, r3
 800e7d6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7d8:	b16a      	cbz	r2, 800e7f6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7de:	b153      	cbz	r3, 800e7f6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7e0:	f001 f87e 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e7e4:	2800      	cmp	r0, #0
 800e7e6:	d0f4      	beq.n	800e7d2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e7e8:	f001 f916 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800e7ec:	1e6b      	subs	r3, r5, #1
 800e7ee:	b2da      	uxtb	r2, r3
 800e7f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7f2:	2a00      	cmp	r2, #0
 800e7f4:	d1f1      	bne.n	800e7da <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e7f6:	23ff      	movs	r3, #255	; 0xff
 800e7f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e7fc:	f7ff fa14 	bl	800dc28 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e800:	f000 ff6e 	bl	800f6e0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e804:	f7ff f9ee 	bl	800dbe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e808:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e80a:	b153      	cbz	r3, 800e822 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e80c:	f7ff fa0c 	bl	800dc28 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e810:	f7ff f9e8 	bl	800dbe4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e814:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e816:	2d00      	cmp	r5, #0
 800e818:	d162      	bne.n	800e8e0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e81a:	9b01      	ldr	r3, [sp, #4]
 800e81c:	2b00      	cmp	r3, #0
 800e81e:	f47f af31 	bne.w	800e684 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e822:	f7ff fa01 	bl	800dc28 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e826:	2000      	movs	r0, #0
}
 800e828:	b005      	add	sp, #20
 800e82a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e82e:	f7ff f9fb 	bl	800dc28 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e832:	9901      	ldr	r1, [sp, #4]
 800e834:	4630      	mov	r0, r6
 800e836:	f000 ffc5 	bl	800f7c4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e83a:	f7ff f9d3 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e83e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e842:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e844:	2d00      	cmp	r5, #0
 800e846:	dc04      	bgt.n	800e852 <xQueueReceive+0x20e>
 800e848:	e011      	b.n	800e86e <xQueueReceive+0x22a>
			--cTxLock;
 800e84a:	1e6b      	subs	r3, r5, #1
 800e84c:	b2da      	uxtb	r2, r3
 800e84e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e850:	b16a      	cbz	r2, 800e86e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e852:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e854:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e856:	b153      	cbz	r3, 800e86e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e858:	f001 f842 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e85c:	2800      	cmp	r0, #0
 800e85e:	d0f4      	beq.n	800e84a <xQueueReceive+0x206>
						vTaskMissedYield();
 800e860:	f001 f8da 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800e864:	1e6b      	subs	r3, r5, #1
 800e866:	b2da      	uxtb	r2, r3
 800e868:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e86a:	2a00      	cmp	r2, #0
 800e86c:	d1f1      	bne.n	800e852 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e86e:	23ff      	movs	r3, #255	; 0xff
 800e870:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e874:	f7ff f9d8 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e878:	f7ff f9b4 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e87c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e880:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e882:	2d00      	cmp	r5, #0
 800e884:	dd14      	ble.n	800e8b0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e886:	f104 0910 	add.w	r9, r4, #16
 800e88a:	e003      	b.n	800e894 <xQueueReceive+0x250>
				--cRxLock;
 800e88c:	1e6b      	subs	r3, r5, #1
 800e88e:	b2da      	uxtb	r2, r3
 800e890:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e892:	b16a      	cbz	r2, 800e8b0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e894:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e896:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e898:	b153      	cbz	r3, 800e8b0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e89a:	f001 f821 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e89e:	2800      	cmp	r0, #0
 800e8a0:	d0f4      	beq.n	800e88c <xQueueReceive+0x248>
					vTaskMissedYield();
 800e8a2:	f001 f8b9 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800e8a6:	1e6b      	subs	r3, r5, #1
 800e8a8:	b2da      	uxtb	r2, r3
 800e8aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8ac:	2a00      	cmp	r2, #0
 800e8ae:	d1f1      	bne.n	800e894 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e8b0:	23ff      	movs	r3, #255	; 0xff
 800e8b2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e8b6:	f7ff f9b7 	bl	800dc28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e8ba:	f000 ff11 	bl	800f6e0 <xTaskResumeAll>
 800e8be:	2800      	cmp	r0, #0
 800e8c0:	d1a6      	bne.n	800e810 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e8c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e8c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e8ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e8ce:	f3bf 8f4f 	dsb	sy
 800e8d2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e8d6:	f7ff f985 	bl	800dbe4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e8da:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e8dc:	2d00      	cmp	r5, #0
 800e8de:	d09c      	beq.n	800e81a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e8e0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e8e2:	b152      	cbz	r2, 800e8fa <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e8e4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e8e6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e8e8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e8ea:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e8ec:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e8ee:	bf24      	itt	cs
 800e8f0:	6821      	ldrcs	r1, [r4, #0]
 800e8f2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e8f4:	4638      	mov	r0, r7
 800e8f6:	f01d f8fa 	bl	802baee <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e8fa:	3d01      	subs	r5, #1
 800e8fc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e8fe:	6923      	ldr	r3, [r4, #16]
 800e900:	b963      	cbnz	r3, 800e91c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e902:	f7ff f991 	bl	800dc28 <vPortExitCritical>
				return pdPASS;
 800e906:	2001      	movs	r0, #1
 800e908:	e78e      	b.n	800e828 <xQueueReceive+0x1e4>
 800e90a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e90e:	f383 8811 	msr	BASEPRI, r3
 800e912:	f3bf 8f6f 	isb	sy
 800e916:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e91a:	e7fe      	b.n	800e91a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e91c:	f104 0010 	add.w	r0, r4, #16
 800e920:	f000 ffde 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e924:	2800      	cmp	r0, #0
 800e926:	d0ec      	beq.n	800e902 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e928:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e92c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e930:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e934:	f3bf 8f4f 	dsb	sy
 800e938:	f3bf 8f6f 	isb	sy
 800e93c:	e7e1      	b.n	800e902 <xQueueReceive+0x2be>
 800e93e:	bf00      	nop

0800e940 <xQueueSemaphoreTake>:
{
 800e940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e944:	b084      	sub	sp, #16
 800e946:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e948:	2800      	cmp	r0, #0
 800e94a:	d05c      	beq.n	800ea06 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e94c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e94e:	4604      	mov	r4, r0
 800e950:	b147      	cbz	r7, 800e964 <xQueueSemaphoreTake+0x24>
 800e952:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e956:	f383 8811 	msr	BASEPRI, r3
 800e95a:	f3bf 8f6f 	isb	sy
 800e95e:	f3bf 8f4f 	dsb	sy
 800e962:	e7fe      	b.n	800e962 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e964:	f001 f85e 	bl	800fa24 <xTaskGetSchedulerState>
 800e968:	4605      	mov	r5, r0
 800e96a:	2800      	cmp	r0, #0
 800e96c:	d054      	beq.n	800ea18 <xQueueSemaphoreTake+0xd8>
 800e96e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e970:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e974:	f7ff f936 	bl	800dbe4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e978:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e97a:	2b00      	cmp	r3, #0
 800e97c:	f040 8148 	bne.w	800ec10 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e980:	9b01      	ldr	r3, [sp, #4]
 800e982:	2b00      	cmp	r3, #0
 800e984:	f000 813a 	beq.w	800ebfc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e988:	2d00      	cmp	r5, #0
 800e98a:	f000 809d 	beq.w	800eac8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e98e:	f7ff f94b 	bl	800dc28 <vPortExitCritical>
		vTaskSuspendAll();
 800e992:	f000 fe9d 	bl	800f6d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e996:	f7ff f925 	bl	800dbe4 <vPortEnterCritical>
 800e99a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e99e:	2bff      	cmp	r3, #255	; 0xff
 800e9a0:	bf04      	itt	eq
 800e9a2:	2300      	moveq	r3, #0
 800e9a4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e9a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9ac:	2bff      	cmp	r3, #255	; 0xff
 800e9ae:	bf04      	itt	eq
 800e9b0:	2300      	moveq	r3, #0
 800e9b2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e9b6:	f7ff f937 	bl	800dc28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e9ba:	a901      	add	r1, sp, #4
 800e9bc:	a802      	add	r0, sp, #8
 800e9be:	f000 ffe3 	bl	800f988 <xTaskCheckForTimeOut>
 800e9c2:	2800      	cmp	r0, #0
 800e9c4:	d135      	bne.n	800ea32 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e9c6:	f7ff f90d 	bl	800dbe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e9ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e9cc:	2b00      	cmp	r3, #0
 800e9ce:	f000 80a4 	beq.w	800eb1a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e9d2:	f7ff f929 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9d6:	f7ff f905 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9da:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9de:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9e0:	2d00      	cmp	r5, #0
 800e9e2:	dc05      	bgt.n	800e9f0 <xQueueSemaphoreTake+0xb0>
 800e9e4:	e074      	b.n	800ead0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e9e6:	1e6b      	subs	r3, r5, #1
 800e9e8:	b2da      	uxtb	r2, r3
 800e9ea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9ec:	2a00      	cmp	r2, #0
 800e9ee:	d06f      	beq.n	800ead0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9f2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9f4:	2b00      	cmp	r3, #0
 800e9f6:	d06b      	beq.n	800ead0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9f8:	f000 ff72 	bl	800f8e0 <xTaskRemoveFromEventList>
 800e9fc:	2800      	cmp	r0, #0
 800e9fe:	d0f2      	beq.n	800e9e6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ea00:	f001 f80a 	bl	800fa18 <vTaskMissedYield>
 800ea04:	e7ef      	b.n	800e9e6 <xQueueSemaphoreTake+0xa6>
 800ea06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea0a:	f383 8811 	msr	BASEPRI, r3
 800ea0e:	f3bf 8f6f 	isb	sy
 800ea12:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ea16:	e7fe      	b.n	800ea16 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea18:	9b01      	ldr	r3, [sp, #4]
 800ea1a:	2b00      	cmp	r3, #0
 800ea1c:	f000 80d4 	beq.w	800ebc8 <xQueueSemaphoreTake+0x288>
 800ea20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea24:	f383 8811 	msr	BASEPRI, r3
 800ea28:	f3bf 8f6f 	isb	sy
 800ea2c:	f3bf 8f4f 	dsb	sy
 800ea30:	e7fe      	b.n	800ea30 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ea32:	f7ff f8d7 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea36:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea3c:	2d00      	cmp	r5, #0
 800ea3e:	dc04      	bgt.n	800ea4a <xQueueSemaphoreTake+0x10a>
 800ea40:	e011      	b.n	800ea66 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ea42:	1e6b      	subs	r3, r5, #1
 800ea44:	b2da      	uxtb	r2, r3
 800ea46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea48:	b16a      	cbz	r2, 800ea66 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea4c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea4e:	b153      	cbz	r3, 800ea66 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea50:	f000 ff46 	bl	800f8e0 <xTaskRemoveFromEventList>
 800ea54:	2800      	cmp	r0, #0
 800ea56:	d0f4      	beq.n	800ea42 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ea58:	f000 ffde 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800ea5c:	1e6b      	subs	r3, r5, #1
 800ea5e:	b2da      	uxtb	r2, r3
 800ea60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea62:	2a00      	cmp	r2, #0
 800ea64:	d1f1      	bne.n	800ea4a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea66:	23ff      	movs	r3, #255	; 0xff
 800ea68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea6c:	f7ff f8dc 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea70:	f7ff f8b8 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea74:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea7a:	2d00      	cmp	r5, #0
 800ea7c:	dd14      	ble.n	800eaa8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea7e:	f104 0810 	add.w	r8, r4, #16
 800ea82:	e003      	b.n	800ea8c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ea84:	1e6b      	subs	r3, r5, #1
 800ea86:	b2da      	uxtb	r2, r3
 800ea88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea8a:	b16a      	cbz	r2, 800eaa8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea8c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea8e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea90:	b153      	cbz	r3, 800eaa8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea92:	f000 ff25 	bl	800f8e0 <xTaskRemoveFromEventList>
 800ea96:	2800      	cmp	r0, #0
 800ea98:	d0f4      	beq.n	800ea84 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ea9a:	f000 ffbd 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800ea9e:	1e6b      	subs	r3, r5, #1
 800eaa0:	b2da      	uxtb	r2, r3
 800eaa2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaa4:	2a00      	cmp	r2, #0
 800eaa6:	d1f1      	bne.n	800ea8c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800eaa8:	23ff      	movs	r3, #255	; 0xff
 800eaaa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eaae:	f7ff f8bb 	bl	800dc28 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eab2:	f000 fe15 	bl	800f6e0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800eab6:	f7ff f895 	bl	800dbe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eaba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eabc:	2b00      	cmp	r3, #0
 800eabe:	d07c      	beq.n	800ebba <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800eac0:	f7ff f8b2 	bl	800dc28 <vPortExitCritical>
	return xReturn;
 800eac4:	2501      	movs	r5, #1
 800eac6:	e755      	b.n	800e974 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eac8:	a802      	add	r0, sp, #8
 800eaca:	f000 ff51 	bl	800f970 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800eace:	e75e      	b.n	800e98e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ead0:	23ff      	movs	r3, #255	; 0xff
 800ead2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ead6:	f7ff f8a7 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eada:	f7ff f883 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eade:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eae2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eae4:	2d00      	cmp	r5, #0
 800eae6:	dd10      	ble.n	800eb0a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eae8:	f104 0810 	add.w	r8, r4, #16
 800eaec:	e003      	b.n	800eaf6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800eaee:	1e6b      	subs	r3, r5, #1
 800eaf0:	b2da      	uxtb	r2, r3
 800eaf2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaf4:	b14a      	cbz	r2, 800eb0a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eaf6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaf8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eafa:	b133      	cbz	r3, 800eb0a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eafc:	f000 fef0 	bl	800f8e0 <xTaskRemoveFromEventList>
 800eb00:	2800      	cmp	r0, #0
 800eb02:	d0f4      	beq.n	800eaee <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800eb04:	f000 ff88 	bl	800fa18 <vTaskMissedYield>
 800eb08:	e7f1      	b.n	800eaee <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb0a:	23ff      	movs	r3, #255	; 0xff
 800eb0c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb10:	f7ff f88a 	bl	800dc28 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800eb14:	f000 fde4 	bl	800f6e0 <xTaskResumeAll>
 800eb18:	e7d4      	b.n	800eac4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800eb1a:	f7ff f885 	bl	800dc28 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eb1e:	6823      	ldr	r3, [r4, #0]
 800eb20:	2b00      	cmp	r3, #0
 800eb22:	d062      	beq.n	800ebea <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eb24:	9901      	ldr	r1, [sp, #4]
 800eb26:	4630      	mov	r0, r6
 800eb28:	f000 fe4c 	bl	800f7c4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800eb2c:	f7ff f85a 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb30:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb36:	2d00      	cmp	r5, #0
 800eb38:	dc04      	bgt.n	800eb44 <xQueueSemaphoreTake+0x204>
 800eb3a:	e00d      	b.n	800eb58 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800eb3c:	1e6b      	subs	r3, r5, #1
 800eb3e:	b2da      	uxtb	r2, r3
 800eb40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb42:	b14a      	cbz	r2, 800eb58 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb44:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb46:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb48:	b133      	cbz	r3, 800eb58 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb4a:	f000 fec9 	bl	800f8e0 <xTaskRemoveFromEventList>
 800eb4e:	2800      	cmp	r0, #0
 800eb50:	d0f4      	beq.n	800eb3c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800eb52:	f000 ff61 	bl	800fa18 <vTaskMissedYield>
 800eb56:	e7f1      	b.n	800eb3c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb58:	23ff      	movs	r3, #255	; 0xff
 800eb5a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb5e:	f7ff f863 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb62:	f7ff f83f 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb66:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb6c:	2d00      	cmp	r5, #0
 800eb6e:	dd10      	ble.n	800eb92 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb70:	f104 0810 	add.w	r8, r4, #16
 800eb74:	e003      	b.n	800eb7e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800eb76:	1e6b      	subs	r3, r5, #1
 800eb78:	b2da      	uxtb	r2, r3
 800eb7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb7c:	b14a      	cbz	r2, 800eb92 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb7e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb80:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb82:	b133      	cbz	r3, 800eb92 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb84:	f000 feac 	bl	800f8e0 <xTaskRemoveFromEventList>
 800eb88:	2800      	cmp	r0, #0
 800eb8a:	d0f4      	beq.n	800eb76 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800eb8c:	f000 ff44 	bl	800fa18 <vTaskMissedYield>
 800eb90:	e7f1      	b.n	800eb76 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb92:	23ff      	movs	r3, #255	; 0xff
 800eb94:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb98:	f7ff f846 	bl	800dc28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eb9c:	f000 fda0 	bl	800f6e0 <xTaskResumeAll>
 800eba0:	2800      	cmp	r0, #0
 800eba2:	d18f      	bne.n	800eac4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800eba4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eba8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ebac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ebb0:	f3bf 8f4f 	dsb	sy
 800ebb4:	f3bf 8f6f 	isb	sy
 800ebb8:	e784      	b.n	800eac4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ebba:	f7ff f835 	bl	800dc28 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ebbe:	b92f      	cbnz	r7, 800ebcc <xQueueSemaphoreTake+0x28c>
}
 800ebc0:	4638      	mov	r0, r7
 800ebc2:	b004      	add	sp, #16
 800ebc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebc8:	4607      	mov	r7, r0
 800ebca:	e6d1      	b.n	800e970 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800ebcc:	f7ff f80a 	bl	800dbe4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ebd0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ebd2:	b119      	cbz	r1, 800ebdc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ebd4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ebd6:	6819      	ldr	r1, [r3, #0]
 800ebd8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ebdc:	68a0      	ldr	r0, [r4, #8]
 800ebde:	f000 ffbd 	bl	800fb5c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800ebe2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800ebe4:	f7ff f820 	bl	800dc28 <vPortExitCritical>
 800ebe8:	e7ea      	b.n	800ebc0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800ebea:	f7fe fffb 	bl	800dbe4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ebee:	68a0      	ldr	r0, [r4, #8]
 800ebf0:	f000 ff28 	bl	800fa44 <xTaskPriorityInherit>
 800ebf4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800ebf6:	f7ff f817 	bl	800dc28 <vPortExitCritical>
 800ebfa:	e793      	b.n	800eb24 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ebfc:	b197      	cbz	r7, 800ec24 <xQueueSemaphoreTake+0x2e4>
 800ebfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec02:	f383 8811 	msr	BASEPRI, r3
 800ec06:	f3bf 8f6f 	isb	sy
 800ec0a:	f3bf 8f4f 	dsb	sy
 800ec0e:	e7fe      	b.n	800ec0e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ec10:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ec12:	3b01      	subs	r3, #1
 800ec14:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ec16:	b1ca      	cbz	r2, 800ec4c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec18:	6923      	ldr	r3, [r4, #16]
 800ec1a:	b933      	cbnz	r3, 800ec2a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ec1c:	f7ff f804 	bl	800dc28 <vPortExitCritical>
				return pdPASS;
 800ec20:	2701      	movs	r7, #1
 800ec22:	e7cd      	b.n	800ebc0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ec24:	f7ff f800 	bl	800dc28 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ec28:	e7ca      	b.n	800ebc0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec2a:	f104 0010 	add.w	r0, r4, #16
 800ec2e:	f000 fe57 	bl	800f8e0 <xTaskRemoveFromEventList>
 800ec32:	2800      	cmp	r0, #0
 800ec34:	d0f2      	beq.n	800ec1c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ec36:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec3a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec42:	f3bf 8f4f 	dsb	sy
 800ec46:	f3bf 8f6f 	isb	sy
 800ec4a:	e7e7      	b.n	800ec1c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ec4c:	f000 ffda 	bl	800fc04 <pvTaskIncrementMutexHeldCount>
 800ec50:	60a0      	str	r0, [r4, #8]
 800ec52:	e7e1      	b.n	800ec18 <xQueueSemaphoreTake+0x2d8>

0800ec54 <xQueueReceiveFromISR>:
{
 800ec54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ec58:	b310      	cbz	r0, 800eca0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec5a:	460e      	mov	r6, r1
 800ec5c:	4617      	mov	r7, r2
 800ec5e:	4604      	mov	r4, r0
 800ec60:	b191      	cbz	r1, 800ec88 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ec62:	f7ff f8f3 	bl	800de4c <vPortValidateInterruptPriority>
	__asm volatile
 800ec66:	f3ef 8911 	mrs	r9, BASEPRI
 800ec6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec6e:	f383 8811 	msr	BASEPRI, r3
 800ec72:	f3bf 8f6f 	isb	sy
 800ec76:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec7a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ec7c:	b9cd      	cbnz	r5, 800ecb2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ec7e:	4628      	mov	r0, r5
	__asm volatile
 800ec80:	f389 8811 	msr	BASEPRI, r9
}
 800ec84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec88:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ec8a:	2b00      	cmp	r3, #0
 800ec8c:	d0e9      	beq.n	800ec62 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800ec8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec92:	f383 8811 	msr	BASEPRI, r3
 800ec96:	f3bf 8f6f 	isb	sy
 800ec9a:	f3bf 8f4f 	dsb	sy
 800ec9e:	e7fe      	b.n	800ec9e <xQueueReceiveFromISR+0x4a>
 800eca0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eca4:	f383 8811 	msr	BASEPRI, r3
 800eca8:	f3bf 8f6f 	isb	sy
 800ecac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ecb0:	e7fe      	b.n	800ecb0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ecb2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ecb6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800ecb8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ecbc:	b152      	cbz	r2, 800ecd4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ecbe:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ecc0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ecc2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ecc4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ecc6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ecc8:	bf24      	itt	cs
 800ecca:	6821      	ldrcs	r1, [r4, #0]
 800eccc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ecce:	4630      	mov	r0, r6
 800ecd0:	f01c ff0d 	bl	802baee <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ecd4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800ecd6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ecda:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800ecdc:	d009      	beq.n	800ecf2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ecde:	f108 0301 	add.w	r3, r8, #1
 800ece2:	b25b      	sxtb	r3, r3
 800ece4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800ece8:	2001      	movs	r0, #1
	__asm volatile
 800ecea:	f389 8811 	msr	BASEPRI, r9
}
 800ecee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ecf2:	6923      	ldr	r3, [r4, #16]
 800ecf4:	2b00      	cmp	r3, #0
 800ecf6:	d0f7      	beq.n	800ece8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecf8:	f104 0010 	add.w	r0, r4, #16
 800ecfc:	f000 fdf0 	bl	800f8e0 <xTaskRemoveFromEventList>
 800ed00:	2800      	cmp	r0, #0
 800ed02:	d0f1      	beq.n	800ece8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800ed04:	2f00      	cmp	r7, #0
 800ed06:	d0ef      	beq.n	800ece8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ed08:	2001      	movs	r0, #1
 800ed0a:	6038      	str	r0, [r7, #0]
 800ed0c:	e7b8      	b.n	800ec80 <xQueueReceiveFromISR+0x2c>
 800ed0e:	bf00      	nop

0800ed10 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800ed10:	b158      	cbz	r0, 800ed2a <uxQueueMessagesWaiting+0x1a>
{
 800ed12:	b510      	push	{r4, lr}
 800ed14:	4604      	mov	r4, r0
 800ed16:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800ed18:	f7fe ff64 	bl	800dbe4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ed1c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ed1e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ed20:	f7fe ff82 	bl	800dc28 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ed24:	9801      	ldr	r0, [sp, #4]
 800ed26:	b002      	add	sp, #8
 800ed28:	bd10      	pop	{r4, pc}
	__asm volatile
 800ed2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed2e:	f383 8811 	msr	BASEPRI, r3
 800ed32:	f3bf 8f6f 	isb	sy
 800ed36:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800ed3a:	e7fe      	b.n	800ed3a <uxQueueMessagesWaiting+0x2a>

0800ed3c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ed3c:	b108      	cbz	r0, 800ed42 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ed3e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ed40:	4770      	bx	lr
 800ed42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed46:	f383 8811 	msr	BASEPRI, r3
 800ed4a:	f3bf 8f6f 	isb	sy
 800ed4e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ed52:	e7fe      	b.n	800ed52 <uxQueueMessagesWaitingFromISR+0x16>
 800ed54:	0000      	movs	r0, r0
	...

0800ed58 <vQueueDelete>:
	configASSERT( pxQueue );
 800ed58:	b1f0      	cbz	r0, 800ed98 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ed5a:	4b21      	ldr	r3, [pc, #132]	; (800ede0 <vQueueDelete+0x88>)
 800ed5c:	685a      	ldr	r2, [r3, #4]
 800ed5e:	4290      	cmp	r0, r2
 800ed60:	d025      	beq.n	800edae <vQueueDelete+0x56>
 800ed62:	68da      	ldr	r2, [r3, #12]
 800ed64:	4290      	cmp	r0, r2
 800ed66:	d02c      	beq.n	800edc2 <vQueueDelete+0x6a>
 800ed68:	695a      	ldr	r2, [r3, #20]
 800ed6a:	4290      	cmp	r0, r2
 800ed6c:	d02b      	beq.n	800edc6 <vQueueDelete+0x6e>
 800ed6e:	69da      	ldr	r2, [r3, #28]
 800ed70:	4290      	cmp	r0, r2
 800ed72:	d02a      	beq.n	800edca <vQueueDelete+0x72>
 800ed74:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800ed76:	4290      	cmp	r0, r2
 800ed78:	d029      	beq.n	800edce <vQueueDelete+0x76>
 800ed7a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ed7c:	4290      	cmp	r0, r2
 800ed7e:	d01e      	beq.n	800edbe <vQueueDelete+0x66>
 800ed80:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ed82:	4290      	cmp	r0, r2
 800ed84:	d025      	beq.n	800edd2 <vQueueDelete+0x7a>
 800ed86:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ed88:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ed8a:	bf08      	it	eq
 800ed8c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ed8e:	d00f      	beq.n	800edb0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ed90:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800ed94:	b14b      	cbz	r3, 800edaa <vQueueDelete+0x52>
}
 800ed96:	4770      	bx	lr
 800ed98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed9c:	f383 8811 	msr	BASEPRI, r3
 800eda0:	f3bf 8f6f 	isb	sy
 800eda4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800eda8:	e7fe      	b.n	800eda8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800edaa:	f7fe be05 	b.w	800d9b8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800edae:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800edb0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800edd8 <vQueueDelete+0x80>
 800edb4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800edb8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800edbc:	e7e8      	b.n	800ed90 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800edbe:	2205      	movs	r2, #5
 800edc0:	e7f6      	b.n	800edb0 <vQueueDelete+0x58>
 800edc2:	2201      	movs	r2, #1
 800edc4:	e7f4      	b.n	800edb0 <vQueueDelete+0x58>
 800edc6:	2202      	movs	r2, #2
 800edc8:	e7f2      	b.n	800edb0 <vQueueDelete+0x58>
 800edca:	2203      	movs	r2, #3
 800edcc:	e7f0      	b.n	800edb0 <vQueueDelete+0x58>
 800edce:	2204      	movs	r2, #4
 800edd0:	e7ee      	b.n	800edb0 <vQueueDelete+0x58>
 800edd2:	2206      	movs	r2, #6
 800edd4:	e7ec      	b.n	800edb0 <vQueueDelete+0x58>
 800edd6:	bf00      	nop
	...
 800ede0:	20013240 	.word	0x20013240

0800ede4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ede4:	4b12      	ldr	r3, [pc, #72]	; (800ee30 <vQueueAddToRegistry+0x4c>)
 800ede6:	681a      	ldr	r2, [r3, #0]
 800ede8:	b17a      	cbz	r2, 800ee0a <vQueueAddToRegistry+0x26>
 800edea:	689a      	ldr	r2, [r3, #8]
 800edec:	b162      	cbz	r2, 800ee08 <vQueueAddToRegistry+0x24>
 800edee:	691a      	ldr	r2, [r3, #16]
 800edf0:	b192      	cbz	r2, 800ee18 <vQueueAddToRegistry+0x34>
 800edf2:	699a      	ldr	r2, [r3, #24]
 800edf4:	b192      	cbz	r2, 800ee1c <vQueueAddToRegistry+0x38>
 800edf6:	6a1a      	ldr	r2, [r3, #32]
 800edf8:	b192      	cbz	r2, 800ee20 <vQueueAddToRegistry+0x3c>
 800edfa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800edfc:	b192      	cbz	r2, 800ee24 <vQueueAddToRegistry+0x40>
 800edfe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ee00:	b192      	cbz	r2, 800ee28 <vQueueAddToRegistry+0x44>
 800ee02:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ee04:	b192      	cbz	r2, 800ee2c <vQueueAddToRegistry+0x48>
	}
 800ee06:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ee08:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ee0a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800ee0e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ee12:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800ee16:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ee18:	2202      	movs	r2, #2
 800ee1a:	e7f6      	b.n	800ee0a <vQueueAddToRegistry+0x26>
 800ee1c:	2203      	movs	r2, #3
 800ee1e:	e7f4      	b.n	800ee0a <vQueueAddToRegistry+0x26>
 800ee20:	2204      	movs	r2, #4
 800ee22:	e7f2      	b.n	800ee0a <vQueueAddToRegistry+0x26>
 800ee24:	2205      	movs	r2, #5
 800ee26:	e7f0      	b.n	800ee0a <vQueueAddToRegistry+0x26>
 800ee28:	2206      	movs	r2, #6
 800ee2a:	e7ee      	b.n	800ee0a <vQueueAddToRegistry+0x26>
 800ee2c:	2207      	movs	r2, #7
 800ee2e:	e7ec      	b.n	800ee0a <vQueueAddToRegistry+0x26>
 800ee30:	20013240 	.word	0x20013240

0800ee34 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ee34:	b570      	push	{r4, r5, r6, lr}
 800ee36:	4605      	mov	r5, r0
 800ee38:	460e      	mov	r6, r1
 800ee3a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800ee3c:	f7fe fed2 	bl	800dbe4 <vPortEnterCritical>
 800ee40:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800ee44:	2bff      	cmp	r3, #255	; 0xff
 800ee46:	bf04      	itt	eq
 800ee48:	2300      	moveq	r3, #0
 800ee4a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800ee4e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800ee52:	2bff      	cmp	r3, #255	; 0xff
 800ee54:	bf04      	itt	eq
 800ee56:	2300      	moveq	r3, #0
 800ee58:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800ee5c:	f7fe fee4 	bl	800dc28 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800ee60:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800ee62:	2b00      	cmp	r3, #0
 800ee64:	d043      	beq.n	800eeee <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800ee66:	f7fe febd 	bl	800dbe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee6a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800ee6e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee70:	2c00      	cmp	r4, #0
 800ee72:	dd14      	ble.n	800ee9e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee74:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800ee78:	e003      	b.n	800ee82 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800ee7a:	1e63      	subs	r3, r4, #1
 800ee7c:	b2da      	uxtb	r2, r3
 800ee7e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee80:	b16a      	cbz	r2, 800ee9e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee82:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee84:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee86:	b153      	cbz	r3, 800ee9e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee88:	f000 fd2a 	bl	800f8e0 <xTaskRemoveFromEventList>
 800ee8c:	2800      	cmp	r0, #0
 800ee8e:	d0f4      	beq.n	800ee7a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800ee90:	f000 fdc2 	bl	800fa18 <vTaskMissedYield>
			--cTxLock;
 800ee94:	1e63      	subs	r3, r4, #1
 800ee96:	b2da      	uxtb	r2, r3
 800ee98:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee9a:	2a00      	cmp	r2, #0
 800ee9c:	d1f1      	bne.n	800ee82 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee9e:	23ff      	movs	r3, #255	; 0xff
 800eea0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eea4:	f7fe fec0 	bl	800dc28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eea8:	f7fe fe9c 	bl	800dbe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eeac:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800eeb0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eeb2:	2c00      	cmp	r4, #0
 800eeb4:	dd14      	ble.n	800eee0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeb6:	f105 0610 	add.w	r6, r5, #16
 800eeba:	e003      	b.n	800eec4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800eebc:	1e63      	subs	r3, r4, #1
 800eebe:	b2da      	uxtb	r2, r3
 800eec0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eec2:	b16a      	cbz	r2, 800eee0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eec4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eec6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eec8:	b153      	cbz	r3, 800eee0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeca:	f000 fd09 	bl	800f8e0 <xTaskRemoveFromEventList>
 800eece:	2800      	cmp	r0, #0
 800eed0:	d0f4      	beq.n	800eebc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800eed2:	f000 fda1 	bl	800fa18 <vTaskMissedYield>
				--cRxLock;
 800eed6:	1e63      	subs	r3, r4, #1
 800eed8:	b2da      	uxtb	r2, r3
 800eeda:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eedc:	2a00      	cmp	r2, #0
 800eede:	d1f1      	bne.n	800eec4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800eee0:	23ff      	movs	r3, #255	; 0xff
 800eee2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800eee6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800eeea:	f7fe be9d 	b.w	800dc28 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800eeee:	4622      	mov	r2, r4
 800eef0:	4631      	mov	r1, r6
 800eef2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800eef6:	f000 fca9 	bl	800f84c <vTaskPlaceOnEventListRestricted>
 800eefa:	e7b4      	b.n	800ee66 <vQueueWaitForMessageRestricted+0x32>

0800eefc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800eefc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ef00:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ef02:	f7fe fe6f 	bl	800dbe4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ef06:	4a34      	ldr	r2, [pc, #208]	; (800efd8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800ef08:	4e34      	ldr	r6, [pc, #208]	; (800efdc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800ef0a:	6813      	ldr	r3, [r2, #0]
 800ef0c:	3301      	adds	r3, #1
 800ef0e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800ef10:	6833      	ldr	r3, [r6, #0]
 800ef12:	2b00      	cmp	r3, #0
 800ef14:	d032      	beq.n	800ef7c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800ef16:	4c32      	ldr	r4, [pc, #200]	; (800efe0 <prvAddNewTaskToReadyList+0xe4>)
 800ef18:	6823      	ldr	r3, [r4, #0]
 800ef1a:	b33b      	cbz	r3, 800ef6c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ef1c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ef1e:	4f31      	ldr	r7, [pc, #196]	; (800efe4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800ef20:	4a31      	ldr	r2, [pc, #196]	; (800efe8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800ef22:	4932      	ldr	r1, [pc, #200]	; (800efec <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800ef24:	6813      	ldr	r3, [r2, #0]
 800ef26:	3301      	adds	r3, #1
 800ef28:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ef2a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ef2c:	680b      	ldr	r3, [r1, #0]
 800ef2e:	4283      	cmp	r3, r0
 800ef30:	bf38      	it	cc
 800ef32:	6008      	strcc	r0, [r1, #0]
 800ef34:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ef38:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800ef3c:	1d29      	adds	r1, r5, #4
 800ef3e:	f7fe fdaf 	bl	800daa0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800ef42:	f7fe fe71 	bl	800dc28 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800ef46:	6823      	ldr	r3, [r4, #0]
 800ef48:	b173      	cbz	r3, 800ef68 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800ef4a:	6832      	ldr	r2, [r6, #0]
 800ef4c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ef4e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ef50:	429a      	cmp	r2, r3
 800ef52:	d209      	bcs.n	800ef68 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800ef54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef60:	f3bf 8f4f 	dsb	sy
 800ef64:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800ef68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ef6c:	6833      	ldr	r3, [r6, #0]
 800ef6e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ef70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef72:	4f1c      	ldr	r7, [pc, #112]	; (800efe4 <prvAddNewTaskToReadyList+0xe8>)
 800ef74:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800ef76:	bf98      	it	ls
 800ef78:	6035      	strls	r5, [r6, #0]
 800ef7a:	e7d1      	b.n	800ef20 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800ef7c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ef7e:	6813      	ldr	r3, [r2, #0]
 800ef80:	2b01      	cmp	r3, #1
 800ef82:	d003      	beq.n	800ef8c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ef84:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ef86:	4f17      	ldr	r7, [pc, #92]	; (800efe4 <prvAddNewTaskToReadyList+0xe8>)
 800ef88:	4c15      	ldr	r4, [pc, #84]	; (800efe0 <prvAddNewTaskToReadyList+0xe4>)
 800ef8a:	e7c9      	b.n	800ef20 <prvAddNewTaskToReadyList+0x24>
 800ef8c:	4f15      	ldr	r7, [pc, #84]	; (800efe4 <prvAddNewTaskToReadyList+0xe8>)
 800ef8e:	463c      	mov	r4, r7
 800ef90:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ef94:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ef96:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ef98:	f7fe fd72 	bl	800da80 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ef9c:	45a0      	cmp	r8, r4
 800ef9e:	d1f9      	bne.n	800ef94 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800efa0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f004 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800efa4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f008 <prvAddNewTaskToReadyList+0x10c>
 800efa8:	4c0d      	ldr	r4, [pc, #52]	; (800efe0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800efaa:	4648      	mov	r0, r9
 800efac:	f7fe fd68 	bl	800da80 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800efb0:	4640      	mov	r0, r8
 800efb2:	f7fe fd65 	bl	800da80 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800efb6:	480e      	ldr	r0, [pc, #56]	; (800eff0 <prvAddNewTaskToReadyList+0xf4>)
 800efb8:	f7fe fd62 	bl	800da80 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800efbc:	480d      	ldr	r0, [pc, #52]	; (800eff4 <prvAddNewTaskToReadyList+0xf8>)
 800efbe:	f7fe fd5f 	bl	800da80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800efc2:	480d      	ldr	r0, [pc, #52]	; (800eff8 <prvAddNewTaskToReadyList+0xfc>)
 800efc4:	f7fe fd5c 	bl	800da80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800efc8:	4b0c      	ldr	r3, [pc, #48]	; (800effc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800efca:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800efcc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800efd0:	4b0b      	ldr	r3, [pc, #44]	; (800f000 <prvAddNewTaskToReadyList+0x104>)
 800efd2:	f8c3 8000 	str.w	r8, [r3]
}
 800efd6:	e7a3      	b.n	800ef20 <prvAddNewTaskToReadyList+0x24>
 800efd8:	200136ec 	.word	0x200136ec
 800efdc:	20013280 	.word	0x20013280
 800efe0:	20013748 	.word	0x20013748
 800efe4:	2001328c 	.word	0x2001328c
 800efe8:	200136f8 	.word	0x200136f8
 800efec:	200136fc 	.word	0x200136fc
 800eff0:	20013734 	.word	0x20013734
 800eff4:	20013760 	.word	0x20013760
 800eff8:	2001374c 	.word	0x2001374c
 800effc:	20013284 	.word	0x20013284
 800f000:	20013288 	.word	0x20013288
 800f004:	20013700 	.word	0x20013700
 800f008:	20013714 	.word	0x20013714

0800f00c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f00c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f010:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f012:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f016:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f01a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f01c:	4606      	mov	r6, r0
 800f01e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f020:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f022:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f024:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f026:	f01c fc3c 	bl	802b8a2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f02a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f02c:	f1a9 0904 	sub.w	r9, r9, #4
 800f030:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f032:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f036:	2d00      	cmp	r5, #0
 800f038:	d079      	beq.n	800f12e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f03a:	782b      	ldrb	r3, [r5, #0]
 800f03c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f040:	2b00      	cmp	r3, #0
 800f042:	d03b      	beq.n	800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f044:	786b      	ldrb	r3, [r5, #1]
 800f046:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f04a:	2b00      	cmp	r3, #0
 800f04c:	d036      	beq.n	800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f04e:	78ab      	ldrb	r3, [r5, #2]
 800f050:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f054:	b393      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f056:	78eb      	ldrb	r3, [r5, #3]
 800f058:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f05c:	b373      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f05e:	792b      	ldrb	r3, [r5, #4]
 800f060:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f064:	b353      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f066:	796b      	ldrb	r3, [r5, #5]
 800f068:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f06c:	b333      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f06e:	79ab      	ldrb	r3, [r5, #6]
 800f070:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f074:	b313      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f076:	79eb      	ldrb	r3, [r5, #7]
 800f078:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f07c:	b1f3      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f07e:	7a2b      	ldrb	r3, [r5, #8]
 800f080:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f084:	b1d3      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f086:	7a6b      	ldrb	r3, [r5, #9]
 800f088:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f08c:	b1b3      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f08e:	7aab      	ldrb	r3, [r5, #10]
 800f090:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f094:	b193      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f096:	7aeb      	ldrb	r3, [r5, #11]
 800f098:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f09c:	b173      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f09e:	7b2b      	ldrb	r3, [r5, #12]
 800f0a0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f0a4:	b153      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0a6:	7b6b      	ldrb	r3, [r5, #13]
 800f0a8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f0ac:	b133      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0ae:	7bab      	ldrb	r3, [r5, #14]
 800f0b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f0b4:	b113      	cbz	r3, 800f0bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0b6:	7beb      	ldrb	r3, [r5, #15]
 800f0b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f0bc:	2300      	movs	r3, #0
 800f0be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f0c2:	9d08      	ldr	r5, [sp, #32]
 800f0c4:	2d37      	cmp	r5, #55	; 0x37
 800f0c6:	bf28      	it	cs
 800f0c8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f0ca:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f0ce:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f0d0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f0d2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f0d4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f0d8:	f7fe fcde 	bl	800da98 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f0dc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f0e0:	f104 0018 	add.w	r0, r4, #24
 800f0e4:	f7fe fcd8 	bl	800da98 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f0e8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f0ea:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f0ee:	4651      	mov	r1, sl
 800f0f0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f0f2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f0f4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f0f6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f0fa:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f0fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f102:	f01c fbce 	bl	802b8a2 <memset>
 800f106:	4b0b      	ldr	r3, [pc, #44]	; (800f134 <prvInitialiseNewTask.constprop.0+0x128>)
 800f108:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f10a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f10e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f110:	463a      	mov	r2, r7
 800f112:	4631      	mov	r1, r6
 800f114:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f116:	6625      	str	r5, [r4, #96]	; 0x60
 800f118:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f11a:	f7fe fd3b 	bl	800db94 <pxPortInitialiseStack>
 800f11e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f120:	f1b8 0f00 	cmp.w	r8, #0
 800f124:	d001      	beq.n	800f12a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f126:	f8c8 4000 	str.w	r4, [r8]
}
 800f12a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f12e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f132:	e7c6      	b.n	800f0c2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f134:	20014210 	.word	0x20014210

0800f138 <prvIdleTask>:
{
 800f138:	b580      	push	{r7, lr}
 800f13a:	4d23      	ldr	r5, [pc, #140]	; (800f1c8 <prvIdleTask+0x90>)
 800f13c:	4f23      	ldr	r7, [pc, #140]	; (800f1cc <prvIdleTask+0x94>)
 800f13e:	4e24      	ldr	r6, [pc, #144]	; (800f1d0 <prvIdleTask+0x98>)
 800f140:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f1d4 <prvIdleTask+0x9c>
				taskYIELD();
 800f144:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f148:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f14c:	682b      	ldr	r3, [r5, #0]
 800f14e:	b35b      	cbz	r3, 800f1a8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f150:	f7fe fd48 	bl	800dbe4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f154:	68fb      	ldr	r3, [r7, #12]
 800f156:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f158:	1d20      	adds	r0, r4, #4
 800f15a:	f7fe fcc9 	bl	800daf0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f15e:	6833      	ldr	r3, [r6, #0]
 800f160:	3b01      	subs	r3, #1
 800f162:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f164:	682b      	ldr	r3, [r5, #0]
 800f166:	3b01      	subs	r3, #1
 800f168:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f16a:	f7fe fd5d 	bl	800dc28 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f16e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f172:	f01c fbdf 	bl	802b934 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f176:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f17a:	b163      	cbz	r3, 800f196 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f17c:	2b01      	cmp	r3, #1
 800f17e:	d01e      	beq.n	800f1be <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f180:	2b02      	cmp	r3, #2
 800f182:	d0e3      	beq.n	800f14c <prvIdleTask+0x14>
 800f184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f188:	f383 8811 	msr	BASEPRI, r3
 800f18c:	f3bf 8f6f 	isb	sy
 800f190:	f3bf 8f4f 	dsb	sy
 800f194:	e7fe      	b.n	800f194 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f196:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f198:	f7fe fc0e 	bl	800d9b8 <vPortFree>
				vPortFree( pxTCB );
 800f19c:	4620      	mov	r0, r4
 800f19e:	f7fe fc0b 	bl	800d9b8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f1a2:	682b      	ldr	r3, [r5, #0]
 800f1a4:	2b00      	cmp	r3, #0
 800f1a6:	d1d3      	bne.n	800f150 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f1a8:	f8d8 3000 	ldr.w	r3, [r8]
 800f1ac:	2b01      	cmp	r3, #1
 800f1ae:	d9cd      	bls.n	800f14c <prvIdleTask+0x14>
				taskYIELD();
 800f1b0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f1b4:	f3bf 8f4f 	dsb	sy
 800f1b8:	f3bf 8f6f 	isb	sy
 800f1bc:	e7c6      	b.n	800f14c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f1be:	4620      	mov	r0, r4
 800f1c0:	f7fe fbfa 	bl	800d9b8 <vPortFree>
 800f1c4:	e7c2      	b.n	800f14c <prvIdleTask+0x14>
 800f1c6:	bf00      	nop
 800f1c8:	200136f0 	.word	0x200136f0
 800f1cc:	20013760 	.word	0x20013760
 800f1d0:	200136ec 	.word	0x200136ec
 800f1d4:	2001328c 	.word	0x2001328c

0800f1d8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f1dc:	4b47      	ldr	r3, [pc, #284]	; (800f2fc <xTaskIncrementTick.part.0+0x124>)
 800f1de:	681e      	ldr	r6, [r3, #0]
 800f1e0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f1e2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f1e4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f1e6:	2e00      	cmp	r6, #0
 800f1e8:	d040      	beq.n	800f26c <xTaskIncrementTick.part.0+0x94>
 800f1ea:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f310 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f1ee:	f8db 3000 	ldr.w	r3, [fp]
 800f1f2:	429e      	cmp	r6, r3
 800f1f4:	d347      	bcc.n	800f286 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f1f6:	4f42      	ldr	r7, [pc, #264]	; (800f300 <xTaskIncrementTick.part.0+0x128>)
 800f1f8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f314 <xTaskIncrementTick.part.0+0x13c>
 800f1fc:	683b      	ldr	r3, [r7, #0]
 800f1fe:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f318 <xTaskIncrementTick.part.0+0x140>
 800f202:	681d      	ldr	r5, [r3, #0]
 800f204:	2d00      	cmp	r5, #0
 800f206:	d073      	beq.n	800f2f0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f208:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f31c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f20c:	2500      	movs	r5, #0
 800f20e:	e022      	b.n	800f256 <xTaskIncrementTick.part.0+0x7e>
 800f210:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f212:	f7fe fc6d 	bl	800daf0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f216:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f218:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f21a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f21e:	b113      	cbz	r3, 800f226 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f220:	f7fe fc66 	bl	800daf0 <uxListRemove>
 800f224:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f226:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f228:	f8d8 2000 	ldr.w	r2, [r8]
 800f22c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f230:	4293      	cmp	r3, r2
 800f232:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f236:	bf88      	it	hi
 800f238:	f8c8 3000 	strhi.w	r3, [r8]
 800f23c:	f7fe fc30 	bl	800daa0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f240:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f244:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f246:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f248:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f24a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f24c:	4291      	cmp	r1, r2
 800f24e:	bf28      	it	cs
 800f250:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f252:	2b00      	cmp	r3, #0
 800f254:	d04c      	beq.n	800f2f0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f256:	683b      	ldr	r3, [r7, #0]
 800f258:	68db      	ldr	r3, [r3, #12]
 800f25a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f25c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f25e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f260:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f262:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f264:	d2d4      	bcs.n	800f210 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f266:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f26a:	e011      	b.n	800f290 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f26c:	4b24      	ldr	r3, [pc, #144]	; (800f300 <xTaskIncrementTick.part.0+0x128>)
 800f26e:	681a      	ldr	r2, [r3, #0]
 800f270:	6812      	ldr	r2, [r2, #0]
 800f272:	b30a      	cbz	r2, 800f2b8 <xTaskIncrementTick.part.0+0xe0>
 800f274:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f278:	f383 8811 	msr	BASEPRI, r3
 800f27c:	f3bf 8f6f 	isb	sy
 800f280:	f3bf 8f4f 	dsb	sy
 800f284:	e7fe      	b.n	800f284 <xTaskIncrementTick.part.0+0xac>
 800f286:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f314 <xTaskIncrementTick.part.0+0x13c>
 800f28a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f318 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f28e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f290:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f294:	491b      	ldr	r1, [pc, #108]	; (800f304 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f296:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f298:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f29c:	009b      	lsls	r3, r3, #2
 800f29e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f2a2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f2a4:	2a02      	cmp	r2, #2
 800f2a6:	bf28      	it	cs
 800f2a8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f2aa:	2b00      	cmp	r3, #0
}
 800f2ac:	bf0c      	ite	eq
 800f2ae:	4628      	moveq	r0, r5
 800f2b0:	2001      	movne	r0, #1
 800f2b2:	b003      	add	sp, #12
 800f2b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f2b8:	4a13      	ldr	r2, [pc, #76]	; (800f308 <xTaskIncrementTick.part.0+0x130>)
 800f2ba:	6818      	ldr	r0, [r3, #0]
 800f2bc:	6811      	ldr	r1, [r2, #0]
 800f2be:	6019      	str	r1, [r3, #0]
 800f2c0:	4912      	ldr	r1, [pc, #72]	; (800f30c <xTaskIncrementTick.part.0+0x134>)
 800f2c2:	6010      	str	r0, [r2, #0]
 800f2c4:	680a      	ldr	r2, [r1, #0]
 800f2c6:	3201      	adds	r2, #1
 800f2c8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f2ca:	681a      	ldr	r2, [r3, #0]
 800f2cc:	6812      	ldr	r2, [r2, #0]
 800f2ce:	b932      	cbnz	r2, 800f2de <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f2d0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f310 <xTaskIncrementTick.part.0+0x138>
 800f2d4:	f04f 33ff 	mov.w	r3, #4294967295
 800f2d8:	f8cb 3000 	str.w	r3, [fp]
 800f2dc:	e787      	b.n	800f1ee <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f2de:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f2e0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f310 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f2e4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f2e6:	68db      	ldr	r3, [r3, #12]
 800f2e8:	685b      	ldr	r3, [r3, #4]
 800f2ea:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f2ee:	e77e      	b.n	800f1ee <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2f0:	f04f 33ff 	mov.w	r3, #4294967295
 800f2f4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f2f8:	e7ca      	b.n	800f290 <xTaskIncrementTick.part.0+0xb8>
 800f2fa:	bf00      	nop
 800f2fc:	20013774 	.word	0x20013774
 800f300:	20013284 	.word	0x20013284
 800f304:	20013778 	.word	0x20013778
 800f308:	20013288 	.word	0x20013288
 800f30c:	2001372c 	.word	0x2001372c
 800f310:	20013728 	.word	0x20013728
 800f314:	2001328c 	.word	0x2001328c
 800f318:	20013280 	.word	0x20013280
 800f31c:	200136fc 	.word	0x200136fc

0800f320 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f324:	4d41      	ldr	r5, [pc, #260]	; (800f42c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f326:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f328:	f7fe fc5c 	bl	800dbe4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f32c:	682b      	ldr	r3, [r5, #0]
 800f32e:	3b01      	subs	r3, #1
 800f330:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f332:	682b      	ldr	r3, [r5, #0]
 800f334:	2b00      	cmp	r3, #0
 800f336:	d161      	bne.n	800f3fc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f338:	4b3d      	ldr	r3, [pc, #244]	; (800f430 <xTaskResumeAll.part.0+0x110>)
 800f33a:	681b      	ldr	r3, [r3, #0]
 800f33c:	2b00      	cmp	r3, #0
 800f33e:	d05d      	beq.n	800f3fc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f340:	4e3c      	ldr	r6, [pc, #240]	; (800f434 <xTaskResumeAll.part.0+0x114>)
 800f342:	6833      	ldr	r3, [r6, #0]
 800f344:	2b00      	cmp	r3, #0
 800f346:	d06e      	beq.n	800f426 <xTaskResumeAll.part.0+0x106>
 800f348:	4f3b      	ldr	r7, [pc, #236]	; (800f438 <xTaskResumeAll.part.0+0x118>)
 800f34a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f448 <xTaskResumeAll.part.0+0x128>
 800f34e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f44c <xTaskResumeAll.part.0+0x12c>
 800f352:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f450 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f356:	68f3      	ldr	r3, [r6, #12]
 800f358:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f35a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f35e:	f104 0018 	add.w	r0, r4, #24
 800f362:	f7fe fbc5 	bl	800daf0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f366:	4658      	mov	r0, fp
 800f368:	f7fe fbc2 	bl	800daf0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f36c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f36e:	683a      	ldr	r2, [r7, #0]
 800f370:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f374:	4293      	cmp	r3, r2
 800f376:	4659      	mov	r1, fp
 800f378:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f37c:	bf88      	it	hi
 800f37e:	603b      	strhi	r3, [r7, #0]
 800f380:	f7fe fb8e 	bl	800daa0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f384:	f8d8 3000 	ldr.w	r3, [r8]
 800f388:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f38a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f38c:	429a      	cmp	r2, r3
 800f38e:	d33d      	bcc.n	800f40c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f390:	2301      	movs	r3, #1
 800f392:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f396:	6833      	ldr	r3, [r6, #0]
 800f398:	2b00      	cmp	r3, #0
 800f39a:	d1dc      	bne.n	800f356 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f39c:	4b27      	ldr	r3, [pc, #156]	; (800f43c <xTaskResumeAll.part.0+0x11c>)
 800f39e:	681a      	ldr	r2, [r3, #0]
 800f3a0:	6812      	ldr	r2, [r2, #0]
 800f3a2:	2a00      	cmp	r2, #0
 800f3a4:	d03a      	beq.n	800f41c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3a6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f3a8:	4b25      	ldr	r3, [pc, #148]	; (800f440 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3aa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f3ac:	68d2      	ldr	r2, [r2, #12]
 800f3ae:	6852      	ldr	r2, [r2, #4]
 800f3b0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f3b2:	4e24      	ldr	r6, [pc, #144]	; (800f444 <xTaskResumeAll.part.0+0x124>)
 800f3b4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f3b6:	b194      	cbz	r4, 800f3de <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f3b8:	2701      	movs	r7, #1
 800f3ba:	e006      	b.n	800f3ca <xTaskResumeAll.part.0+0xaa>
 800f3bc:	f7ff ff0c 	bl	800f1d8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f3c0:	b108      	cbz	r0, 800f3c6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f3c2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f3c6:	3c01      	subs	r4, #1
 800f3c8:	d008      	beq.n	800f3dc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f3ca:	682b      	ldr	r3, [r5, #0]
 800f3cc:	2b00      	cmp	r3, #0
 800f3ce:	d0f5      	beq.n	800f3bc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f3d0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f3d2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f3d4:	f103 0301 	add.w	r3, r3, #1
 800f3d8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f3da:	d1f6      	bne.n	800f3ca <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f3dc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f3de:	f8da 3000 	ldr.w	r3, [sl]
 800f3e2:	b15b      	cbz	r3, 800f3fc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f3e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f3e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f3ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f3f0:	f3bf 8f4f 	dsb	sy
 800f3f4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f3f8:	2001      	movs	r0, #1
 800f3fa:	e000      	b.n	800f3fe <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f3fc:	2000      	movs	r0, #0
 800f3fe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f400:	f7fe fc12 	bl	800dc28 <vPortExitCritical>
}
 800f404:	9801      	ldr	r0, [sp, #4]
 800f406:	b003      	add	sp, #12
 800f408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f40c:	6833      	ldr	r3, [r6, #0]
 800f40e:	2b00      	cmp	r3, #0
 800f410:	d1a1      	bne.n	800f356 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f412:	4b0a      	ldr	r3, [pc, #40]	; (800f43c <xTaskResumeAll.part.0+0x11c>)
 800f414:	681a      	ldr	r2, [r3, #0]
 800f416:	6812      	ldr	r2, [r2, #0]
 800f418:	2a00      	cmp	r2, #0
 800f41a:	d1c4      	bne.n	800f3a6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f41c:	4b08      	ldr	r3, [pc, #32]	; (800f440 <xTaskResumeAll.part.0+0x120>)
 800f41e:	f04f 32ff 	mov.w	r2, #4294967295
 800f422:	601a      	str	r2, [r3, #0]
 800f424:	e7c5      	b.n	800f3b2 <xTaskResumeAll.part.0+0x92>
 800f426:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f450 <xTaskResumeAll.part.0+0x130>
 800f42a:	e7c2      	b.n	800f3b2 <xTaskResumeAll.part.0+0x92>
 800f42c:	200136f4 	.word	0x200136f4
 800f430:	200136ec 	.word	0x200136ec
 800f434:	20013734 	.word	0x20013734
 800f438:	200136fc 	.word	0x200136fc
 800f43c:	20013284 	.word	0x20013284
 800f440:	20013728 	.word	0x20013728
 800f444:	20013730 	.word	0x20013730
 800f448:	2001328c 	.word	0x2001328c
 800f44c:	20013280 	.word	0x20013280
 800f450:	20013778 	.word	0x20013778

0800f454 <xTaskCreateStatic>:
	{
 800f454:	b530      	push	{r4, r5, lr}
 800f456:	b087      	sub	sp, #28
 800f458:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f45a:	b1c4      	cbz	r4, 800f48e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f45c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f45e:	b16d      	cbz	r5, 800f47c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f460:	25ac      	movs	r5, #172	; 0xac
 800f462:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f464:	9d05      	ldr	r5, [sp, #20]
 800f466:	2dac      	cmp	r5, #172	; 0xac
 800f468:	d01a      	beq.n	800f4a0 <xTaskCreateStatic+0x4c>
 800f46a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f46e:	f383 8811 	msr	BASEPRI, r3
 800f472:	f3bf 8f6f 	isb	sy
 800f476:	f3bf 8f4f 	dsb	sy
 800f47a:	e7fe      	b.n	800f47a <xTaskCreateStatic+0x26>
 800f47c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f480:	f383 8811 	msr	BASEPRI, r3
 800f484:	f3bf 8f6f 	isb	sy
 800f488:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f48c:	e7fe      	b.n	800f48c <xTaskCreateStatic+0x38>
 800f48e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f492:	f383 8811 	msr	BASEPRI, r3
 800f496:	f3bf 8f6f 	isb	sy
 800f49a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f49e:	e7fe      	b.n	800f49e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f4a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f4a2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f4a4:	2402      	movs	r4, #2
 800f4a6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4aa:	ac04      	add	r4, sp, #16
 800f4ac:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f4b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f4b2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f4b4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4b6:	f7ff fda9 	bl	800f00c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f4ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f4bc:	f7ff fd1e 	bl	800eefc <prvAddNewTaskToReadyList>
	}
 800f4c0:	9804      	ldr	r0, [sp, #16]
 800f4c2:	b007      	add	sp, #28
 800f4c4:	bd30      	pop	{r4, r5, pc}
 800f4c6:	bf00      	nop

0800f4c8 <xTaskCreate>:
	{
 800f4c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f4cc:	4607      	mov	r7, r0
 800f4ce:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f4d0:	0090      	lsls	r0, r2, #2
	{
 800f4d2:	4615      	mov	r5, r2
 800f4d4:	4688      	mov	r8, r1
 800f4d6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f4d8:	f7fe f9b2 	bl	800d840 <pvPortMalloc>
			if( pxStack != NULL )
 800f4dc:	b1d8      	cbz	r0, 800f516 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f4de:	4604      	mov	r4, r0
 800f4e0:	20ac      	movs	r0, #172	; 0xac
 800f4e2:	f7fe f9ad 	bl	800d840 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f4e6:	4606      	mov	r6, r0
 800f4e8:	b1d0      	cbz	r0, 800f520 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f4ea:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f4ec:	2400      	movs	r4, #0
 800f4ee:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f4f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f4f4:	9401      	str	r4, [sp, #4]
 800f4f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f4f8:	9602      	str	r6, [sp, #8]
 800f4fa:	464b      	mov	r3, r9
 800f4fc:	462a      	mov	r2, r5
 800f4fe:	4641      	mov	r1, r8
 800f500:	4638      	mov	r0, r7
 800f502:	9400      	str	r4, [sp, #0]
 800f504:	f7ff fd82 	bl	800f00c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f508:	4630      	mov	r0, r6
 800f50a:	f7ff fcf7 	bl	800eefc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f50e:	2001      	movs	r0, #1
	}
 800f510:	b005      	add	sp, #20
 800f512:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f516:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f51a:	b005      	add	sp, #20
 800f51c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f520:	4620      	mov	r0, r4
 800f522:	f7fe fa49 	bl	800d9b8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f526:	f04f 30ff 	mov.w	r0, #4294967295
 800f52a:	e7f1      	b.n	800f510 <xTaskCreate+0x48>

0800f52c <vTaskDelay>:
	{
 800f52c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f52e:	b950      	cbnz	r0, 800f546 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f530:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f534:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f538:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f53c:	f3bf 8f4f 	dsb	sy
 800f540:	f3bf 8f6f 	isb	sy
	}
 800f544:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f546:	4d1e      	ldr	r5, [pc, #120]	; (800f5c0 <vTaskDelay+0x94>)
 800f548:	682b      	ldr	r3, [r5, #0]
 800f54a:	b143      	cbz	r3, 800f55e <vTaskDelay+0x32>
 800f54c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f550:	f383 8811 	msr	BASEPRI, r3
 800f554:	f3bf 8f6f 	isb	sy
 800f558:	f3bf 8f4f 	dsb	sy
 800f55c:	e7fe      	b.n	800f55c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f55e:	682b      	ldr	r3, [r5, #0]
 800f560:	3301      	adds	r3, #1
 800f562:	4604      	mov	r4, r0
 800f564:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f566:	4b17      	ldr	r3, [pc, #92]	; (800f5c4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f568:	4e17      	ldr	r6, [pc, #92]	; (800f5c8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f56a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f56c:	6830      	ldr	r0, [r6, #0]
 800f56e:	3004      	adds	r0, #4
 800f570:	f7fe fabe 	bl	800daf0 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f574:	6833      	ldr	r3, [r6, #0]
 800f576:	19e4      	adds	r4, r4, r7
 800f578:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f57a:	d310      	bcc.n	800f59e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f57c:	4b13      	ldr	r3, [pc, #76]	; (800f5cc <vTaskDelay+0xa0>)
 800f57e:	6818      	ldr	r0, [r3, #0]
 800f580:	6831      	ldr	r1, [r6, #0]
 800f582:	3104      	adds	r1, #4
 800f584:	f7fe fa9c 	bl	800dac0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f588:	682b      	ldr	r3, [r5, #0]
 800f58a:	b9a3      	cbnz	r3, 800f5b6 <vTaskDelay+0x8a>
 800f58c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f590:	f383 8811 	msr	BASEPRI, r3
 800f594:	f3bf 8f6f 	isb	sy
 800f598:	f3bf 8f4f 	dsb	sy
 800f59c:	e7fe      	b.n	800f59c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f59e:	4b0c      	ldr	r3, [pc, #48]	; (800f5d0 <vTaskDelay+0xa4>)
 800f5a0:	6818      	ldr	r0, [r3, #0]
 800f5a2:	6831      	ldr	r1, [r6, #0]
 800f5a4:	3104      	adds	r1, #4
 800f5a6:	f7fe fa8b 	bl	800dac0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f5aa:	4b0a      	ldr	r3, [pc, #40]	; (800f5d4 <vTaskDelay+0xa8>)
 800f5ac:	681a      	ldr	r2, [r3, #0]
 800f5ae:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f5b0:	bf38      	it	cc
 800f5b2:	601c      	strcc	r4, [r3, #0]
 800f5b4:	e7e8      	b.n	800f588 <vTaskDelay+0x5c>
 800f5b6:	f7ff feb3 	bl	800f320 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f5ba:	2800      	cmp	r0, #0
 800f5bc:	d0b8      	beq.n	800f530 <vTaskDelay+0x4>
	}
 800f5be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f5c0:	200136f4 	.word	0x200136f4
 800f5c4:	20013774 	.word	0x20013774
 800f5c8:	20013280 	.word	0x20013280
 800f5cc:	20013288 	.word	0x20013288
 800f5d0:	20013284 	.word	0x20013284
 800f5d4:	20013728 	.word	0x20013728

0800f5d8 <vTaskStartScheduler>:
{
 800f5d8:	b530      	push	{r4, r5, lr}
 800f5da:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f5dc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f5de:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f5e0:	a906      	add	r1, sp, #24
 800f5e2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f5e4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f5e8:	f7fe f90c 	bl	800d804 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f5ec:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f5f0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f5f2:	b1bb      	cbz	r3, 800f624 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f5f4:	b16d      	cbz	r5, 800f612 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f5f6:	21ac      	movs	r1, #172	; 0xac
 800f5f8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f5fa:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f5fc:	29ac      	cmp	r1, #172	; 0xac
 800f5fe:	d01a      	beq.n	800f636 <vTaskStartScheduler+0x5e>
 800f600:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f604:	f383 8811 	msr	BASEPRI, r3
 800f608:	f3bf 8f6f 	isb	sy
 800f60c:	f3bf 8f4f 	dsb	sy
 800f610:	e7fe      	b.n	800f610 <vTaskStartScheduler+0x38>
 800f612:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f616:	f383 8811 	msr	BASEPRI, r3
 800f61a:	f3bf 8f6f 	isb	sy
 800f61e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f622:	e7fe      	b.n	800f622 <vTaskStartScheduler+0x4a>
 800f624:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f628:	f383 8811 	msr	BASEPRI, r3
 800f62c:	f3bf 8f6f 	isb	sy
 800f630:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f634:	e7fe      	b.n	800f634 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f636:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f638:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f63a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f63c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f640:	4623      	mov	r3, r4
 800f642:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f646:	491b      	ldr	r1, [pc, #108]	; (800f6b4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f648:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f64a:	9400      	str	r4, [sp, #0]
 800f64c:	481a      	ldr	r0, [pc, #104]	; (800f6b8 <vTaskStartScheduler+0xe0>)
 800f64e:	f7ff fcdd 	bl	800f00c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f652:	4628      	mov	r0, r5
 800f654:	f7ff fc52 	bl	800eefc <prvAddNewTaskToReadyList>
		return xReturn;
 800f658:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f65a:	b1eb      	cbz	r3, 800f698 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f65c:	f000 fc6e 	bl	800ff3c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f660:	2801      	cmp	r0, #1
 800f662:	d11b      	bne.n	800f69c <vTaskStartScheduler+0xc4>
 800f664:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f668:	f383 8811 	msr	BASEPRI, r3
 800f66c:	f3bf 8f6f 	isb	sy
 800f670:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f674:	4b11      	ldr	r3, [pc, #68]	; (800f6bc <vTaskStartScheduler+0xe4>)
 800f676:	4a12      	ldr	r2, [pc, #72]	; (800f6c0 <vTaskStartScheduler+0xe8>)
 800f678:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f67a:	4912      	ldr	r1, [pc, #72]	; (800f6c4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f67c:	3358      	adds	r3, #88	; 0x58
 800f67e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f680:	4a11      	ldr	r2, [pc, #68]	; (800f6c8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f682:	4b12      	ldr	r3, [pc, #72]	; (800f6cc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f684:	f04f 35ff 	mov.w	r5, #4294967295
 800f688:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f68a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f68c:	601c      	str	r4, [r3, #0]
}
 800f68e:	b00b      	add	sp, #44	; 0x2c
 800f690:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f694:	f7fe bb38 	b.w	800dd08 <xPortStartScheduler>
}
 800f698:	b00b      	add	sp, #44	; 0x2c
 800f69a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f69c:	3001      	adds	r0, #1
 800f69e:	d1fb      	bne.n	800f698 <vTaskStartScheduler+0xc0>
 800f6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6a4:	f383 8811 	msr	BASEPRI, r3
 800f6a8:	f3bf 8f6f 	isb	sy
 800f6ac:	f3bf 8f4f 	dsb	sy
 800f6b0:	e7fe      	b.n	800f6b0 <vTaskStartScheduler+0xd8>
 800f6b2:	bf00      	nop
 800f6b4:	0802f66c 	.word	0x0802f66c
 800f6b8:	0800f139 	.word	0x0800f139
 800f6bc:	20013280 	.word	0x20013280
 800f6c0:	20000178 	.word	0x20000178
 800f6c4:	20013728 	.word	0x20013728
 800f6c8:	20013748 	.word	0x20013748
 800f6cc:	20013774 	.word	0x20013774

0800f6d0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f6d0:	4a02      	ldr	r2, [pc, #8]	; (800f6dc <vTaskSuspendAll+0xc>)
 800f6d2:	6813      	ldr	r3, [r2, #0]
 800f6d4:	3301      	adds	r3, #1
 800f6d6:	6013      	str	r3, [r2, #0]
}
 800f6d8:	4770      	bx	lr
 800f6da:	bf00      	nop
 800f6dc:	200136f4 	.word	0x200136f4

0800f6e0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f6e0:	4b06      	ldr	r3, [pc, #24]	; (800f6fc <xTaskResumeAll+0x1c>)
 800f6e2:	681b      	ldr	r3, [r3, #0]
 800f6e4:	b943      	cbnz	r3, 800f6f8 <xTaskResumeAll+0x18>
 800f6e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6ea:	f383 8811 	msr	BASEPRI, r3
 800f6ee:	f3bf 8f6f 	isb	sy
 800f6f2:	f3bf 8f4f 	dsb	sy
 800f6f6:	e7fe      	b.n	800f6f6 <xTaskResumeAll+0x16>
 800f6f8:	f7ff be12 	b.w	800f320 <xTaskResumeAll.part.0>
 800f6fc:	200136f4 	.word	0x200136f4

0800f700 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f700:	4b01      	ldr	r3, [pc, #4]	; (800f708 <xTaskGetTickCount+0x8>)
 800f702:	6818      	ldr	r0, [r3, #0]
}
 800f704:	4770      	bx	lr
 800f706:	bf00      	nop
 800f708:	20013774 	.word	0x20013774

0800f70c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f70c:	4b05      	ldr	r3, [pc, #20]	; (800f724 <xTaskIncrementTick+0x18>)
 800f70e:	681b      	ldr	r3, [r3, #0]
 800f710:	b90b      	cbnz	r3, 800f716 <xTaskIncrementTick+0xa>
 800f712:	f7ff bd61 	b.w	800f1d8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f716:	4a04      	ldr	r2, [pc, #16]	; (800f728 <xTaskIncrementTick+0x1c>)
 800f718:	6813      	ldr	r3, [r2, #0]
 800f71a:	3301      	adds	r3, #1
}
 800f71c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f71e:	6013      	str	r3, [r2, #0]
}
 800f720:	4770      	bx	lr
 800f722:	bf00      	nop
 800f724:	200136f4 	.word	0x200136f4
 800f728:	20013730 	.word	0x20013730

0800f72c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f72c:	4b1f      	ldr	r3, [pc, #124]	; (800f7ac <vTaskSwitchContext+0x80>)
 800f72e:	681b      	ldr	r3, [r3, #0]
 800f730:	b11b      	cbz	r3, 800f73a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f732:	4b1f      	ldr	r3, [pc, #124]	; (800f7b0 <vTaskSwitchContext+0x84>)
 800f734:	2201      	movs	r2, #1
 800f736:	601a      	str	r2, [r3, #0]
 800f738:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f73a:	4a1d      	ldr	r2, [pc, #116]	; (800f7b0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f73c:	491d      	ldr	r1, [pc, #116]	; (800f7b4 <vTaskSwitchContext+0x88>)
{
 800f73e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f740:	4c1d      	ldr	r4, [pc, #116]	; (800f7b8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f742:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f744:	6823      	ldr	r3, [r4, #0]
 800f746:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f74a:	0092      	lsls	r2, r2, #2
 800f74c:	0098      	lsls	r0, r3, #2
 800f74e:	588a      	ldr	r2, [r1, r2]
 800f750:	b942      	cbnz	r2, 800f764 <vTaskSwitchContext+0x38>
 800f752:	b313      	cbz	r3, 800f79a <vTaskSwitchContext+0x6e>
 800f754:	3b01      	subs	r3, #1
 800f756:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f75a:	0098      	lsls	r0, r3, #2
 800f75c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f760:	2a00      	cmp	r2, #0
 800f762:	d0f6      	beq.n	800f752 <vTaskSwitchContext+0x26>
 800f764:	4418      	add	r0, r3
 800f766:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f76a:	4662      	mov	r2, ip
 800f76c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f770:	6849      	ldr	r1, [r1, #4]
 800f772:	f8cc 1004 	str.w	r1, [ip, #4]
 800f776:	3208      	adds	r2, #8
 800f778:	4291      	cmp	r1, r2
 800f77a:	bf08      	it	eq
 800f77c:	6849      	ldreq	r1, [r1, #4]
 800f77e:	4a0f      	ldr	r2, [pc, #60]	; (800f7bc <vTaskSwitchContext+0x90>)
 800f780:	bf08      	it	eq
 800f782:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f786:	68c9      	ldr	r1, [r1, #12]
 800f788:	6011      	str	r1, [r2, #0]
 800f78a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f78c:	6813      	ldr	r3, [r2, #0]
 800f78e:	4a0c      	ldr	r2, [pc, #48]	; (800f7c0 <vTaskSwitchContext+0x94>)
}
 800f790:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f794:	3358      	adds	r3, #88	; 0x58
 800f796:	6013      	str	r3, [r2, #0]
}
 800f798:	4770      	bx	lr
 800f79a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f79e:	f383 8811 	msr	BASEPRI, r3
 800f7a2:	f3bf 8f6f 	isb	sy
 800f7a6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f7aa:	e7fe      	b.n	800f7aa <vTaskSwitchContext+0x7e>
 800f7ac:	200136f4 	.word	0x200136f4
 800f7b0:	20013778 	.word	0x20013778
 800f7b4:	2001328c 	.word	0x2001328c
 800f7b8:	200136fc 	.word	0x200136fc
 800f7bc:	20013280 	.word	0x20013280
 800f7c0:	20000178 	.word	0x20000178

0800f7c4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f7c4:	b1d0      	cbz	r0, 800f7fc <vTaskPlaceOnEventList+0x38>
{
 800f7c6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f7c8:	4d1a      	ldr	r5, [pc, #104]	; (800f834 <vTaskPlaceOnEventList+0x70>)
 800f7ca:	460c      	mov	r4, r1
 800f7cc:	6829      	ldr	r1, [r5, #0]
 800f7ce:	3118      	adds	r1, #24
 800f7d0:	f7fe f976 	bl	800dac0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f7d4:	4b18      	ldr	r3, [pc, #96]	; (800f838 <vTaskPlaceOnEventList+0x74>)
 800f7d6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f7d8:	6828      	ldr	r0, [r5, #0]
 800f7da:	3004      	adds	r0, #4
 800f7dc:	f7fe f988 	bl	800daf0 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f7e0:	1c63      	adds	r3, r4, #1
 800f7e2:	d014      	beq.n	800f80e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f7e4:	682b      	ldr	r3, [r5, #0]
 800f7e6:	19a4      	adds	r4, r4, r6
 800f7e8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f7ea:	d317      	bcc.n	800f81c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f7ec:	4b13      	ldr	r3, [pc, #76]	; (800f83c <vTaskPlaceOnEventList+0x78>)
 800f7ee:	6818      	ldr	r0, [r3, #0]
 800f7f0:	6829      	ldr	r1, [r5, #0]
}
 800f7f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f7f6:	3104      	adds	r1, #4
 800f7f8:	f7fe b962 	b.w	800dac0 <vListInsert>
 800f7fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f800:	f383 8811 	msr	BASEPRI, r3
 800f804:	f3bf 8f6f 	isb	sy
 800f808:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f80c:	e7fe      	b.n	800f80c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f80e:	6829      	ldr	r1, [r5, #0]
 800f810:	480b      	ldr	r0, [pc, #44]	; (800f840 <vTaskPlaceOnEventList+0x7c>)
}
 800f812:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f816:	3104      	adds	r1, #4
 800f818:	f7fe b942 	b.w	800daa0 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f81c:	4b09      	ldr	r3, [pc, #36]	; (800f844 <vTaskPlaceOnEventList+0x80>)
 800f81e:	6818      	ldr	r0, [r3, #0]
 800f820:	6829      	ldr	r1, [r5, #0]
 800f822:	3104      	adds	r1, #4
 800f824:	f7fe f94c 	bl	800dac0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f828:	4b07      	ldr	r3, [pc, #28]	; (800f848 <vTaskPlaceOnEventList+0x84>)
 800f82a:	681a      	ldr	r2, [r3, #0]
 800f82c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f82e:	bf38      	it	cc
 800f830:	601c      	strcc	r4, [r3, #0]
}
 800f832:	bd70      	pop	{r4, r5, r6, pc}
 800f834:	20013280 	.word	0x20013280
 800f838:	20013774 	.word	0x20013774
 800f83c:	20013288 	.word	0x20013288
 800f840:	2001374c 	.word	0x2001374c
 800f844:	20013284 	.word	0x20013284
 800f848:	20013728 	.word	0x20013728

0800f84c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f84c:	b330      	cbz	r0, 800f89c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f84e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f850:	4e1d      	ldr	r6, [pc, #116]	; (800f8c8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f852:	460c      	mov	r4, r1
 800f854:	6831      	ldr	r1, [r6, #0]
 800f856:	4615      	mov	r5, r2
 800f858:	3118      	adds	r1, #24
 800f85a:	f7fe f921 	bl	800daa0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f85e:	4b1b      	ldr	r3, [pc, #108]	; (800f8cc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f860:	b985      	cbnz	r5, 800f884 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f862:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f864:	6830      	ldr	r0, [r6, #0]
 800f866:	3004      	adds	r0, #4
 800f868:	f7fe f942 	bl	800daf0 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f86c:	6833      	ldr	r3, [r6, #0]
 800f86e:	1964      	adds	r4, r4, r5
 800f870:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f872:	d31c      	bcc.n	800f8ae <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f874:	4b16      	ldr	r3, [pc, #88]	; (800f8d0 <vTaskPlaceOnEventListRestricted+0x84>)
 800f876:	6818      	ldr	r0, [r3, #0]
 800f878:	6831      	ldr	r1, [r6, #0]
	}
 800f87a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f87e:	3104      	adds	r1, #4
 800f880:	f7fe b91e 	b.w	800dac0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f884:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f886:	6830      	ldr	r0, [r6, #0]
 800f888:	3004      	adds	r0, #4
 800f88a:	f7fe f931 	bl	800daf0 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f88e:	6831      	ldr	r1, [r6, #0]
 800f890:	4810      	ldr	r0, [pc, #64]	; (800f8d4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f892:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f896:	3104      	adds	r1, #4
 800f898:	f7fe b902 	b.w	800daa0 <vListInsertEnd>
 800f89c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8a0:	f383 8811 	msr	BASEPRI, r3
 800f8a4:	f3bf 8f6f 	isb	sy
 800f8a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f8ac:	e7fe      	b.n	800f8ac <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f8ae:	4b0a      	ldr	r3, [pc, #40]	; (800f8d8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f8b0:	6818      	ldr	r0, [r3, #0]
 800f8b2:	6831      	ldr	r1, [r6, #0]
 800f8b4:	3104      	adds	r1, #4
 800f8b6:	f7fe f903 	bl	800dac0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f8ba:	4b08      	ldr	r3, [pc, #32]	; (800f8dc <vTaskPlaceOnEventListRestricted+0x90>)
 800f8bc:	681a      	ldr	r2, [r3, #0]
 800f8be:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f8c0:	bf38      	it	cc
 800f8c2:	601c      	strcc	r4, [r3, #0]
	}
 800f8c4:	bd70      	pop	{r4, r5, r6, pc}
 800f8c6:	bf00      	nop
 800f8c8:	20013280 	.word	0x20013280
 800f8cc:	20013774 	.word	0x20013774
 800f8d0:	20013288 	.word	0x20013288
 800f8d4:	2001374c 	.word	0x2001374c
 800f8d8:	20013284 	.word	0x20013284
 800f8dc:	20013728 	.word	0x20013728

0800f8e0 <xTaskRemoveFromEventList>:
{
 800f8e0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f8e2:	68c3      	ldr	r3, [r0, #12]
 800f8e4:	68dc      	ldr	r4, [r3, #12]
{
 800f8e6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f8e8:	2c00      	cmp	r4, #0
 800f8ea:	d02b      	beq.n	800f944 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f8ec:	f104 0518 	add.w	r5, r4, #24
 800f8f0:	4628      	mov	r0, r5
 800f8f2:	f7fe f8fd 	bl	800daf0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f8f6:	4b18      	ldr	r3, [pc, #96]	; (800f958 <xTaskRemoveFromEventList+0x78>)
 800f8f8:	681b      	ldr	r3, [r3, #0]
 800f8fa:	b17b      	cbz	r3, 800f91c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f8fc:	4817      	ldr	r0, [pc, #92]	; (800f95c <xTaskRemoveFromEventList+0x7c>)
 800f8fe:	4629      	mov	r1, r5
 800f900:	f7fe f8ce 	bl	800daa0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f904:	4b16      	ldr	r3, [pc, #88]	; (800f960 <xTaskRemoveFromEventList+0x80>)
 800f906:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f908:	681b      	ldr	r3, [r3, #0]
 800f90a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f90c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f90e:	bf85      	ittet	hi
 800f910:	4b14      	ldrhi	r3, [pc, #80]	; (800f964 <xTaskRemoveFromEventList+0x84>)
 800f912:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f914:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f916:	6018      	strhi	r0, [r3, #0]
}
 800f918:	b003      	add	sp, #12
 800f91a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f91c:	1d21      	adds	r1, r4, #4
 800f91e:	4608      	mov	r0, r1
 800f920:	9101      	str	r1, [sp, #4]
 800f922:	f7fe f8e5 	bl	800daf0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f926:	4a10      	ldr	r2, [pc, #64]	; (800f968 <xTaskRemoveFromEventList+0x88>)
 800f928:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f92a:	6810      	ldr	r0, [r2, #0]
 800f92c:	9901      	ldr	r1, [sp, #4]
 800f92e:	4283      	cmp	r3, r0
 800f930:	480e      	ldr	r0, [pc, #56]	; (800f96c <xTaskRemoveFromEventList+0x8c>)
 800f932:	bf88      	it	hi
 800f934:	6013      	strhi	r3, [r2, #0]
 800f936:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f93a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f93e:	f7fe f8af 	bl	800daa0 <vListInsertEnd>
 800f942:	e7df      	b.n	800f904 <xTaskRemoveFromEventList+0x24>
 800f944:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f948:	f383 8811 	msr	BASEPRI, r3
 800f94c:	f3bf 8f6f 	isb	sy
 800f950:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f954:	e7fe      	b.n	800f954 <xTaskRemoveFromEventList+0x74>
 800f956:	bf00      	nop
 800f958:	200136f4 	.word	0x200136f4
 800f95c:	20013734 	.word	0x20013734
 800f960:	20013280 	.word	0x20013280
 800f964:	20013778 	.word	0x20013778
 800f968:	200136fc 	.word	0x200136fc
 800f96c:	2001328c 	.word	0x2001328c

0800f970 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f970:	4a03      	ldr	r2, [pc, #12]	; (800f980 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f972:	4b04      	ldr	r3, [pc, #16]	; (800f984 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f974:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f976:	681b      	ldr	r3, [r3, #0]
 800f978:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f97c:	4770      	bx	lr
 800f97e:	bf00      	nop
 800f980:	2001372c 	.word	0x2001372c
 800f984:	20013774 	.word	0x20013774

0800f988 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f988:	b328      	cbz	r0, 800f9d6 <xTaskCheckForTimeOut+0x4e>
{
 800f98a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f98c:	460d      	mov	r5, r1
 800f98e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f990:	b1c1      	cbz	r1, 800f9c4 <xTaskCheckForTimeOut+0x3c>
 800f992:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f994:	f7fe f926 	bl	800dbe4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f998:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f99a:	4a1d      	ldr	r2, [pc, #116]	; (800fa10 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f99c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f99e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f9a0:	d030      	beq.n	800fa04 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f9a2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fa14 <xTaskCheckForTimeOut+0x8c>
 800f9a6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f9aa:	f8dc 7000 	ldr.w	r7, [ip]
 800f9ae:	42be      	cmp	r6, r7
 800f9b0:	d01a      	beq.n	800f9e8 <xTaskCheckForTimeOut+0x60>
 800f9b2:	4288      	cmp	r0, r1
 800f9b4:	d818      	bhi.n	800f9e8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f9b6:	2001      	movs	r0, #1
 800f9b8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f9ba:	f7fe f935 	bl	800dc28 <vPortExitCritical>
}
 800f9be:	9801      	ldr	r0, [sp, #4]
 800f9c0:	b003      	add	sp, #12
 800f9c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9c8:	f383 8811 	msr	BASEPRI, r3
 800f9cc:	f3bf 8f6f 	isb	sy
 800f9d0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f9d4:	e7fe      	b.n	800f9d4 <xTaskCheckForTimeOut+0x4c>
 800f9d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9da:	f383 8811 	msr	BASEPRI, r3
 800f9de:	f3bf 8f6f 	isb	sy
 800f9e2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f9e6:	e7fe      	b.n	800f9e6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f9e8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f9ec:	4573      	cmp	r3, lr
 800f9ee:	d90b      	bls.n	800fa08 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f9f0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f9f2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f9f6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f9f8:	4403      	add	r3, r0
 800f9fa:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f9fc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f9fe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fa02:	e7d9      	b.n	800f9b8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fa04:	2000      	movs	r0, #0
 800fa06:	e7d7      	b.n	800f9b8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fa08:	2300      	movs	r3, #0
 800fa0a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fa0c:	2001      	movs	r0, #1
 800fa0e:	e7d3      	b.n	800f9b8 <xTaskCheckForTimeOut+0x30>
 800fa10:	20013774 	.word	0x20013774
 800fa14:	2001372c 	.word	0x2001372c

0800fa18 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fa18:	4b01      	ldr	r3, [pc, #4]	; (800fa20 <vTaskMissedYield+0x8>)
 800fa1a:	2201      	movs	r2, #1
 800fa1c:	601a      	str	r2, [r3, #0]
}
 800fa1e:	4770      	bx	lr
 800fa20:	20013778 	.word	0x20013778

0800fa24 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fa24:	4b05      	ldr	r3, [pc, #20]	; (800fa3c <xTaskGetSchedulerState+0x18>)
 800fa26:	681b      	ldr	r3, [r3, #0]
 800fa28:	b133      	cbz	r3, 800fa38 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa2a:	4b05      	ldr	r3, [pc, #20]	; (800fa40 <xTaskGetSchedulerState+0x1c>)
 800fa2c:	6818      	ldr	r0, [r3, #0]
 800fa2e:	fab0 f080 	clz	r0, r0
 800fa32:	0940      	lsrs	r0, r0, #5
 800fa34:	0040      	lsls	r0, r0, #1
 800fa36:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fa38:	2001      	movs	r0, #1
	}
 800fa3a:	4770      	bx	lr
 800fa3c:	20013748 	.word	0x20013748
 800fa40:	200136f4 	.word	0x200136f4

0800fa44 <xTaskPriorityInherit>:
	{
 800fa44:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fa46:	4604      	mov	r4, r0
	{
 800fa48:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fa4a:	b1c8      	cbz	r0, 800fa80 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fa4c:	4d1d      	ldr	r5, [pc, #116]	; (800fac4 <xTaskPriorityInherit+0x80>)
 800fa4e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fa50:	682a      	ldr	r2, [r5, #0]
 800fa52:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fa54:	4293      	cmp	r3, r2
 800fa56:	d215      	bcs.n	800fa84 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fa58:	6982      	ldr	r2, [r0, #24]
 800fa5a:	2a00      	cmp	r2, #0
 800fa5c:	db04      	blt.n	800fa68 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa5e:	682a      	ldr	r2, [r5, #0]
 800fa60:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fa62:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fa66:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fa68:	4e17      	ldr	r6, [pc, #92]	; (800fac8 <xTaskPriorityInherit+0x84>)
 800fa6a:	6962      	ldr	r2, [r4, #20]
 800fa6c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fa70:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fa74:	429a      	cmp	r2, r3
 800fa76:	d00e      	beq.n	800fa96 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fa78:	682b      	ldr	r3, [r5, #0]
 800fa7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa7c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fa7e:	2001      	movs	r0, #1
	}
 800fa80:	b002      	add	sp, #8
 800fa82:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fa84:	682b      	ldr	r3, [r5, #0]
 800fa86:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fa88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa8a:	4298      	cmp	r0, r3
 800fa8c:	bf2c      	ite	cs
 800fa8e:	2000      	movcs	r0, #0
 800fa90:	2001      	movcc	r0, #1
	}
 800fa92:	b002      	add	sp, #8
 800fa94:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa96:	1d21      	adds	r1, r4, #4
 800fa98:	4608      	mov	r0, r1
 800fa9a:	9101      	str	r1, [sp, #4]
 800fa9c:	f7fe f828 	bl	800daf0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800faa0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800faa2:	4b0a      	ldr	r3, [pc, #40]	; (800facc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800faa4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800faa6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800faa8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800faaa:	4290      	cmp	r0, r2
 800faac:	bf88      	it	hi
 800faae:	6018      	strhi	r0, [r3, #0]
 800fab0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fab4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fab8:	9901      	ldr	r1, [sp, #4]
 800faba:	f7fd fff1 	bl	800daa0 <vListInsertEnd>
				xReturn = pdTRUE;
 800fabe:	2001      	movs	r0, #1
 800fac0:	e7de      	b.n	800fa80 <xTaskPriorityInherit+0x3c>
 800fac2:	bf00      	nop
 800fac4:	20013280 	.word	0x20013280
 800fac8:	2001328c 	.word	0x2001328c
 800facc:	200136fc 	.word	0x200136fc

0800fad0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fad0:	b318      	cbz	r0, 800fb1a <xTaskPriorityDisinherit+0x4a>
	{
 800fad2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fad4:	4b1e      	ldr	r3, [pc, #120]	; (800fb50 <xTaskPriorityDisinherit+0x80>)
 800fad6:	681c      	ldr	r4, [r3, #0]
 800fad8:	4284      	cmp	r4, r0
	{
 800fada:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fadc:	d008      	beq.n	800faf0 <xTaskPriorityDisinherit+0x20>
 800fade:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fae2:	f383 8811 	msr	BASEPRI, r3
 800fae6:	f3bf 8f6f 	isb	sy
 800faea:	f3bf 8f4f 	dsb	sy
 800faee:	e7fe      	b.n	800faee <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800faf0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800faf2:	b14b      	cbz	r3, 800fb08 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800faf4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800faf6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800faf8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fafa:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fafc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fafe:	d000      	beq.n	800fb02 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fb00:	b16b      	cbz	r3, 800fb1e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fb02:	2000      	movs	r0, #0
	}
 800fb04:	b002      	add	sp, #8
 800fb06:	bd10      	pop	{r4, pc}
 800fb08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb0c:	f383 8811 	msr	BASEPRI, r3
 800fb10:	f3bf 8f6f 	isb	sy
 800fb14:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fb18:	e7fe      	b.n	800fb18 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fb1a:	2000      	movs	r0, #0
	}
 800fb1c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb1e:	1d21      	adds	r1, r4, #4
 800fb20:	4608      	mov	r0, r1
 800fb22:	9101      	str	r1, [sp, #4]
 800fb24:	f7fd ffe4 	bl	800daf0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fb28:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fb2a:	4a0a      	ldr	r2, [pc, #40]	; (800fb54 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fb2c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fb2e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fb32:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fb34:	6810      	ldr	r0, [r2, #0]
 800fb36:	9901      	ldr	r1, [sp, #4]
 800fb38:	4283      	cmp	r3, r0
 800fb3a:	4807      	ldr	r0, [pc, #28]	; (800fb58 <xTaskPriorityDisinherit+0x88>)
 800fb3c:	bf88      	it	hi
 800fb3e:	6013      	strhi	r3, [r2, #0]
 800fb40:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fb44:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fb48:	f7fd ffaa 	bl	800daa0 <vListInsertEnd>
					xReturn = pdTRUE;
 800fb4c:	2001      	movs	r0, #1
		return xReturn;
 800fb4e:	e7d9      	b.n	800fb04 <xTaskPriorityDisinherit+0x34>
 800fb50:	20013280 	.word	0x20013280
 800fb54:	200136fc 	.word	0x200136fc
 800fb58:	2001328c 	.word	0x2001328c

0800fb5c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fb5c:	2800      	cmp	r0, #0
 800fb5e:	d041      	beq.n	800fbe4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fb60:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fb62:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fb64:	b083      	sub	sp, #12
 800fb66:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fb68:	b153      	cbz	r3, 800fb80 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fb6a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fb6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fb6e:	4281      	cmp	r1, r0
 800fb70:	bf38      	it	cc
 800fb72:	4601      	movcc	r1, r0
 800fb74:	428a      	cmp	r2, r1
 800fb76:	d001      	beq.n	800fb7c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fb78:	2b01      	cmp	r3, #1
 800fb7a:	d00a      	beq.n	800fb92 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fb7c:	b003      	add	sp, #12
 800fb7e:	bd30      	pop	{r4, r5, pc}
 800fb80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb84:	f383 8811 	msr	BASEPRI, r3
 800fb88:	f3bf 8f6f 	isb	sy
 800fb8c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fb90:	e7fe      	b.n	800fb90 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fb92:	4b19      	ldr	r3, [pc, #100]	; (800fbf8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fb94:	681b      	ldr	r3, [r3, #0]
 800fb96:	42a3      	cmp	r3, r4
 800fb98:	d025      	beq.n	800fbe6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fb9a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fb9c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fb9e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fba0:	bfa8      	it	ge
 800fba2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fba6:	4d15      	ldr	r5, [pc, #84]	; (800fbfc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fba8:	bfa8      	it	ge
 800fbaa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fbac:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fbb0:	6961      	ldr	r1, [r4, #20]
 800fbb2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fbb6:	4299      	cmp	r1, r3
 800fbb8:	d1e0      	bne.n	800fb7c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fbba:	1d21      	adds	r1, r4, #4
 800fbbc:	4608      	mov	r0, r1
 800fbbe:	9101      	str	r1, [sp, #4]
 800fbc0:	f7fd ff96 	bl	800daf0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fbc4:	4b0e      	ldr	r3, [pc, #56]	; (800fc00 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fbc6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fbc8:	681a      	ldr	r2, [r3, #0]
 800fbca:	9901      	ldr	r1, [sp, #4]
 800fbcc:	4290      	cmp	r0, r2
 800fbce:	bf88      	it	hi
 800fbd0:	6018      	strhi	r0, [r3, #0]
 800fbd2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fbd6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fbda:	b003      	add	sp, #12
 800fbdc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fbe0:	f7fd bf5e 	b.w	800daa0 <vListInsertEnd>
 800fbe4:	4770      	bx	lr
 800fbe6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbea:	f383 8811 	msr	BASEPRI, r3
 800fbee:	f3bf 8f6f 	isb	sy
 800fbf2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800fbf6:	e7fe      	b.n	800fbf6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800fbf8:	20013280 	.word	0x20013280
 800fbfc:	2001328c 	.word	0x2001328c
 800fc00:	200136fc 	.word	0x200136fc

0800fc04 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fc04:	4b04      	ldr	r3, [pc, #16]	; (800fc18 <pvTaskIncrementMutexHeldCount+0x14>)
 800fc06:	681a      	ldr	r2, [r3, #0]
 800fc08:	b11a      	cbz	r2, 800fc12 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fc0a:	6819      	ldr	r1, [r3, #0]
 800fc0c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fc0e:	3201      	adds	r2, #1
 800fc10:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fc12:	6818      	ldr	r0, [r3, #0]
	}
 800fc14:	4770      	bx	lr
 800fc16:	bf00      	nop
 800fc18:	20013280 	.word	0x20013280

0800fc1c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fc1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc20:	4e22      	ldr	r6, [pc, #136]	; (800fcac <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fc22:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800fcb4 <prvSwitchTimerLists+0x98>
{
 800fc26:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fc28:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fc2c:	e00d      	b.n	800fc4a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fc2e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fc30:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fc32:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fc34:	1d25      	adds	r5, r4, #4
 800fc36:	4628      	mov	r0, r5
 800fc38:	f7fd ff5a 	bl	800daf0 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fc3c:	6a23      	ldr	r3, [r4, #32]
 800fc3e:	4620      	mov	r0, r4
 800fc40:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fc42:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800fc46:	075b      	lsls	r3, r3, #29
 800fc48:	d40a      	bmi.n	800fc60 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fc4a:	6833      	ldr	r3, [r6, #0]
 800fc4c:	681a      	ldr	r2, [r3, #0]
 800fc4e:	2a00      	cmp	r2, #0
 800fc50:	d1ed      	bne.n	800fc2e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800fc52:	4a17      	ldr	r2, [pc, #92]	; (800fcb0 <prvSwitchTimerLists+0x94>)
 800fc54:	6811      	ldr	r1, [r2, #0]
 800fc56:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800fc58:	6013      	str	r3, [r2, #0]
}
 800fc5a:	b005      	add	sp, #20
 800fc5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800fc60:	69a3      	ldr	r3, [r4, #24]
 800fc62:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800fc64:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fc66:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800fc68:	d205      	bcs.n	800fc76 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fc6a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800fc6c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fc6e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fc70:	f7fd ff26 	bl	800dac0 <vListInsert>
 800fc74:	e7e9      	b.n	800fc4a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800fc76:	f8d9 3000 	ldr.w	r3, [r9]
 800fc7a:	b16b      	cbz	r3, 800fc98 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fc7c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fc80:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fc82:	f7ff fecf 	bl	800fa24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fc86:	2300      	movs	r3, #0
 800fc88:	f8d9 0000 	ldr.w	r0, [r9]
 800fc8c:	461a      	mov	r2, r3
 800fc8e:	4669      	mov	r1, sp
 800fc90:	f7fe fa9c 	bl	800e1cc <xQueueGenericSend>
				configASSERT( xResult );
 800fc94:	2800      	cmp	r0, #0
 800fc96:	d1d8      	bne.n	800fc4a <prvSwitchTimerLists+0x2e>
 800fc98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc9c:	f383 8811 	msr	BASEPRI, r3
 800fca0:	f3bf 8f6f 	isb	sy
 800fca4:	f3bf 8f4f 	dsb	sy
 800fca8:	e7fe      	b.n	800fca8 <prvSwitchTimerLists+0x8c>
 800fcaa:	bf00      	nop
 800fcac:	2001377c 	.word	0x2001377c
 800fcb0:	20013780 	.word	0x20013780
 800fcb4:	200138a0 	.word	0x200138a0

0800fcb8 <prvTimerTask>:
{
 800fcb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcbc:	4e9b      	ldr	r6, [pc, #620]	; (800ff2c <prvTimerTask+0x274>)
 800fcbe:	4d9c      	ldr	r5, [pc, #624]	; (800ff30 <prvTimerTask+0x278>)
 800fcc0:	4c9c      	ldr	r4, [pc, #624]	; (800ff34 <prvTimerTask+0x27c>)
 800fcc2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800fcc4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800fcc8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800fccc:	6833      	ldr	r3, [r6, #0]
 800fcce:	681f      	ldr	r7, [r3, #0]
 800fcd0:	2f00      	cmp	r7, #0
 800fcd2:	f000 80a8 	beq.w	800fe26 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fcd6:	68db      	ldr	r3, [r3, #12]
 800fcd8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800fcda:	f7ff fcf9 	bl	800f6d0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fcde:	f7ff fd0f 	bl	800f700 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fce2:	682a      	ldr	r2, [r5, #0]
 800fce4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800fce6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fce8:	f0c0 80ae 	bcc.w	800fe48 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fcec:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800fcee:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fcf0:	f240 80b4 	bls.w	800fe5c <prvTimerTask+0x1a4>
 800fcf4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800fcf6:	6820      	ldr	r0, [r4, #0]
 800fcf8:	eba7 010a 	sub.w	r1, r7, sl
 800fcfc:	f7ff f89a 	bl	800ee34 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800fd00:	f7ff fcee 	bl	800f6e0 <xTaskResumeAll>
 800fd04:	b928      	cbnz	r0, 800fd12 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800fd06:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800fd0a:	f3bf 8f4f 	dsb	sy
 800fd0e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800fd12:	6820      	ldr	r0, [r4, #0]
 800fd14:	2200      	movs	r2, #0
 800fd16:	a902      	add	r1, sp, #8
 800fd18:	f7fe fc94 	bl	800e644 <xQueueReceive>
 800fd1c:	2800      	cmp	r0, #0
 800fd1e:	d0d5      	beq.n	800fccc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800fd20:	9b02      	ldr	r3, [sp, #8]
 800fd22:	2b00      	cmp	r3, #0
 800fd24:	db76      	blt.n	800fe14 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800fd26:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800fd28:	697b      	ldr	r3, [r7, #20]
 800fd2a:	b113      	cbz	r3, 800fd32 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fd2c:	1d38      	adds	r0, r7, #4
 800fd2e:	f7fd fedf 	bl	800daf0 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800fd32:	f7ff fce5 	bl	800f700 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fd36:	682b      	ldr	r3, [r5, #0]
 800fd38:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800fd3a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fd3c:	f0c0 808b 	bcc.w	800fe56 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800fd40:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800fd42:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800fd46:	2b09      	cmp	r3, #9
 800fd48:	d8e3      	bhi.n	800fd12 <prvTimerTask+0x5a>
 800fd4a:	e8df f003 	tbb	[pc, r3]
 800fd4e:	0505      	.short	0x0505
 800fd50:	5a3d5305 	.word	0x5a3d5305
 800fd54:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fd58:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800fd5c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fd5e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fd60:	f043 0301 	orr.w	r3, r3, #1
 800fd64:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800fd68:	9b03      	ldr	r3, [sp, #12]
 800fd6a:	1899      	adds	r1, r3, r2
 800fd6c:	bf2c      	ite	cs
 800fd6e:	2001      	movcs	r0, #1
 800fd70:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800fd72:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fd74:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fd76:	f200 808c 	bhi.w	800fe92 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd7a:	ebaa 0303 	sub.w	r3, sl, r3
 800fd7e:	429a      	cmp	r2, r3
 800fd80:	d832      	bhi.n	800fde8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fd82:	6a3b      	ldr	r3, [r7, #32]
 800fd84:	4638      	mov	r0, r7
 800fd86:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fd88:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fd8c:	075b      	lsls	r3, r3, #29
 800fd8e:	d5c0      	bpl.n	800fd12 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800fd90:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800fd92:	9903      	ldr	r1, [sp, #12]
 800fd94:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800fd96:	b172      	cbz	r2, 800fdb6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800fd98:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fd9a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800fd9e:	2300      	movs	r3, #0
 800fda0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fda2:	f7ff fe3f 	bl	800fa24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fda6:	2300      	movs	r3, #0
 800fda8:	6820      	ldr	r0, [r4, #0]
 800fdaa:	461a      	mov	r2, r3
 800fdac:	a906      	add	r1, sp, #24
 800fdae:	f7fe fa0d 	bl	800e1cc <xQueueGenericSend>
							configASSERT( xResult );
 800fdb2:	2800      	cmp	r0, #0
 800fdb4:	d1ad      	bne.n	800fd12 <prvTimerTask+0x5a>
 800fdb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdba:	f383 8811 	msr	BASEPRI, r3
 800fdbe:	f3bf 8f6f 	isb	sy
 800fdc2:	f3bf 8f4f 	dsb	sy
 800fdc6:	e7fe      	b.n	800fdc6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fdc8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fdcc:	f043 0301 	orr.w	r3, r3, #1
 800fdd0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800fdd4:	9b03      	ldr	r3, [sp, #12]
 800fdd6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800fdd8:	2b00      	cmp	r3, #0
 800fdda:	f000 809d 	beq.w	800ff18 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800fdde:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800fde0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fde2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fde4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800fde6:	d85e      	bhi.n	800fea6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fde8:	4b53      	ldr	r3, [pc, #332]	; (800ff38 <prvTimerTask+0x280>)
 800fdea:	1d39      	adds	r1, r7, #4
 800fdec:	6818      	ldr	r0, [r3, #0]
 800fdee:	f7fd fe67 	bl	800dac0 <vListInsert>
	return xProcessTimerNow;
 800fdf2:	e78e      	b.n	800fd12 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fdf4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fdf8:	f023 0301 	bic.w	r3, r3, #1
 800fdfc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800fe00:	e787      	b.n	800fd12 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800fe02:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fe06:	079a      	lsls	r2, r3, #30
 800fe08:	d552      	bpl.n	800feb0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fe0a:	f023 0301 	bic.w	r3, r3, #1
 800fe0e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800fe12:	e77e      	b.n	800fd12 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800fe14:	9b03      	ldr	r3, [sp, #12]
 800fe16:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800fe1a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800fe1c:	9b02      	ldr	r3, [sp, #8]
 800fe1e:	2b00      	cmp	r3, #0
 800fe20:	f6ff af77 	blt.w	800fd12 <prvTimerTask+0x5a>
 800fe24:	e77f      	b.n	800fd26 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800fe26:	f7ff fc53 	bl	800f6d0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fe2a:	f7ff fc69 	bl	800f700 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fe2e:	682a      	ldr	r2, [r5, #0]
 800fe30:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800fe32:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fe34:	d808      	bhi.n	800fe48 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800fe36:	4b40      	ldr	r3, [pc, #256]	; (800ff38 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800fe38:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800fe3c:	681a      	ldr	r2, [r3, #0]
 800fe3e:	6812      	ldr	r2, [r2, #0]
 800fe40:	fab2 f282 	clz	r2, r2
 800fe44:	0952      	lsrs	r2, r2, #5
 800fe46:	e756      	b.n	800fcf6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800fe48:	f7ff fee8 	bl	800fc1c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800fe4c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800fe50:	f7ff fc46 	bl	800f6e0 <xTaskResumeAll>
 800fe54:	e75d      	b.n	800fd12 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800fe56:	f7ff fee1 	bl	800fc1c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800fe5a:	e771      	b.n	800fd40 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800fe5c:	f7ff fc40 	bl	800f6e0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe60:	6832      	ldr	r2, [r6, #0]
 800fe62:	68d2      	ldr	r2, [r2, #12]
 800fe64:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fe68:	f10b 0104 	add.w	r1, fp, #4
 800fe6c:	4608      	mov	r0, r1
 800fe6e:	9101      	str	r1, [sp, #4]
 800fe70:	f7fd fe3e 	bl	800daf0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fe74:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800fe78:	9901      	ldr	r1, [sp, #4]
 800fe7a:	f010 0f04 	tst.w	r0, #4
 800fe7e:	d11b      	bne.n	800feb8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fe80:	f020 0001 	bic.w	r0, r0, #1
 800fe84:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fe88:	f8db 3020 	ldr.w	r3, [fp, #32]
 800fe8c:	4658      	mov	r0, fp
 800fe8e:	4798      	blx	r3
}
 800fe90:	e73f      	b.n	800fd12 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800fe92:	4553      	cmp	r3, sl
 800fe94:	d902      	bls.n	800fe9c <prvTimerTask+0x1e4>
 800fe96:	2800      	cmp	r0, #0
 800fe98:	f43f af73 	beq.w	800fd82 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe9c:	6830      	ldr	r0, [r6, #0]
 800fe9e:	1d39      	adds	r1, r7, #4
 800fea0:	f7fd fe0e 	bl	800dac0 <vListInsert>
	return xProcessTimerNow;
 800fea4:	e735      	b.n	800fd12 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fea6:	6830      	ldr	r0, [r6, #0]
 800fea8:	1d39      	adds	r1, r7, #4
 800feaa:	f7fd fe09 	bl	800dac0 <vListInsert>
 800feae:	e730      	b.n	800fd12 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800feb0:	4638      	mov	r0, r7
 800feb2:	f7fd fd81 	bl	800d9b8 <vPortFree>
 800feb6:	e72c      	b.n	800fd12 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800feb8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800febc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fec0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800fec2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fec4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fec8:	d903      	bls.n	800fed2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800feca:	6830      	ldr	r0, [r6, #0]
 800fecc:	f7fd fdf8 	bl	800dac0 <vListInsert>
	return xProcessTimerNow;
 800fed0:	e7da      	b.n	800fe88 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fed2:	ebaa 0307 	sub.w	r3, sl, r7
 800fed6:	429a      	cmp	r2, r3
 800fed8:	d819      	bhi.n	800ff0e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800feda:	6823      	ldr	r3, [r4, #0]
 800fedc:	b173      	cbz	r3, 800fefc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800fede:	2300      	movs	r3, #0
 800fee0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fee2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fee4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fee8:	f7ff fd9c 	bl	800fa24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800feec:	2300      	movs	r3, #0
 800feee:	6820      	ldr	r0, [r4, #0]
 800fef0:	461a      	mov	r2, r3
 800fef2:	a906      	add	r1, sp, #24
 800fef4:	f7fe f96a 	bl	800e1cc <xQueueGenericSend>
			configASSERT( xResult );
 800fef8:	2800      	cmp	r0, #0
 800fefa:	d1c5      	bne.n	800fe88 <prvTimerTask+0x1d0>
 800fefc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff00:	f383 8811 	msr	BASEPRI, r3
 800ff04:	f3bf 8f6f 	isb	sy
 800ff08:	f3bf 8f4f 	dsb	sy
 800ff0c:	e7fe      	b.n	800ff0c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ff0e:	4b0a      	ldr	r3, [pc, #40]	; (800ff38 <prvTimerTask+0x280>)
 800ff10:	6818      	ldr	r0, [r3, #0]
 800ff12:	f7fd fdd5 	bl	800dac0 <vListInsert>
	return xProcessTimerNow;
 800ff16:	e7b7      	b.n	800fe88 <prvTimerTask+0x1d0>
 800ff18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff1c:	f383 8811 	msr	BASEPRI, r3
 800ff20:	f3bf 8f6f 	isb	sy
 800ff24:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ff28:	e7fe      	b.n	800ff28 <prvTimerTask+0x270>
 800ff2a:	bf00      	nop
 800ff2c:	2001377c 	.word	0x2001377c
 800ff30:	2001384c 	.word	0x2001384c
 800ff34:	200138a0 	.word	0x200138a0
 800ff38:	20013780 	.word	0x20013780

0800ff3c <xTimerCreateTimerTask>:
{
 800ff3c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800ff3e:	4c23      	ldr	r4, [pc, #140]	; (800ffcc <xTimerCreateTimerTask+0x90>)
{
 800ff40:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800ff42:	f7fd fe4f 	bl	800dbe4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800ff46:	6825      	ldr	r5, [r4, #0]
 800ff48:	b335      	cbz	r5, 800ff98 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800ff4a:	f7fd fe6d 	bl	800dc28 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800ff4e:	6823      	ldr	r3, [r4, #0]
 800ff50:	b1cb      	cbz	r3, 800ff86 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800ff52:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ff54:	aa07      	add	r2, sp, #28
 800ff56:	a906      	add	r1, sp, #24
 800ff58:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800ff5a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ff5e:	f7fd fc5f 	bl	800d820 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800ff62:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800ff66:	2302      	movs	r3, #2
 800ff68:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800ff6c:	9300      	str	r3, [sp, #0]
 800ff6e:	9a07      	ldr	r2, [sp, #28]
 800ff70:	4917      	ldr	r1, [pc, #92]	; (800ffd0 <xTimerCreateTimerTask+0x94>)
 800ff72:	4818      	ldr	r0, [pc, #96]	; (800ffd4 <xTimerCreateTimerTask+0x98>)
 800ff74:	4623      	mov	r3, r4
 800ff76:	f7ff fa6d 	bl	800f454 <xTaskCreateStatic>
 800ff7a:	4b17      	ldr	r3, [pc, #92]	; (800ffd8 <xTimerCreateTimerTask+0x9c>)
 800ff7c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ff7e:	b110      	cbz	r0, 800ff86 <xTimerCreateTimerTask+0x4a>
}
 800ff80:	2001      	movs	r0, #1
 800ff82:	b009      	add	sp, #36	; 0x24
 800ff84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff8a:	f383 8811 	msr	BASEPRI, r3
 800ff8e:	f3bf 8f6f 	isb	sy
 800ff92:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ff96:	e7fe      	b.n	800ff96 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800ff98:	4f10      	ldr	r7, [pc, #64]	; (800ffdc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800ff9a:	4e11      	ldr	r6, [pc, #68]	; (800ffe0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800ff9c:	4638      	mov	r0, r7
 800ff9e:	f7fd fd6f 	bl	800da80 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800ffa2:	4630      	mov	r0, r6
 800ffa4:	f7fd fd6c 	bl	800da80 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800ffa8:	4a0e      	ldr	r2, [pc, #56]	; (800ffe4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ffaa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800ffac:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800ffae:	4a0e      	ldr	r2, [pc, #56]	; (800ffe8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ffb0:	4b0e      	ldr	r3, [pc, #56]	; (800ffec <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800ffb2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ffb4:	2110      	movs	r1, #16
 800ffb6:	4a0e      	ldr	r2, [pc, #56]	; (800fff0 <xTimerCreateTimerTask+0xb4>)
 800ffb8:	200a      	movs	r0, #10
 800ffba:	f7fd ffb1 	bl	800df20 <xQueueGenericCreateStatic>
 800ffbe:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800ffc0:	2800      	cmp	r0, #0
 800ffc2:	d0c2      	beq.n	800ff4a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800ffc4:	490b      	ldr	r1, [pc, #44]	; (800fff4 <xTimerCreateTimerTask+0xb8>)
 800ffc6:	f7fe ff0d 	bl	800ede4 <vQueueAddToRegistry>
 800ffca:	e7be      	b.n	800ff4a <xTimerCreateTimerTask+0xe>
 800ffcc:	200138a0 	.word	0x200138a0
 800ffd0:	0802f67c 	.word	0x0802f67c
 800ffd4:	0800fcb9 	.word	0x0800fcb9
 800ffd8:	200138a4 	.word	0x200138a4
 800ffdc:	20013824 	.word	0x20013824
 800ffe0:	20013838 	.word	0x20013838
 800ffe4:	2001377c 	.word	0x2001377c
 800ffe8:	20013780 	.word	0x20013780
 800ffec:	20013850 	.word	0x20013850
 800fff0:	20013784 	.word	0x20013784
 800fff4:	0802f674 	.word	0x0802f674

0800fff8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800fff8:	8880      	ldrh	r0, [r0, #4]
 800fffa:	4770      	bx	lr

0800fffc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800fffc:	b570      	push	{r4, r5, r6, lr}
 800fffe:	6803      	ldr	r3, [r0, #0]
 8010000:	4605      	mov	r5, r0
 8010002:	460c      	mov	r4, r1
 8010004:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010006:	2100      	movs	r1, #0
 8010008:	4798      	blx	r3
 801000a:	682b      	ldr	r3, [r5, #0]
 801000c:	4606      	mov	r6, r0
 801000e:	6a1b      	ldr	r3, [r3, #32]
 8010010:	4628      	mov	r0, r5
 8010012:	4798      	blx	r3
 8010014:	1ba4      	subs	r4, r4, r6
 8010016:	b2a4      	uxth	r4, r4
 8010018:	fbb4 f0f0 	udiv	r0, r4, r0
 801001c:	bd70      	pop	{r4, r5, r6, pc}

0801001e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801001e:	2300      	movs	r3, #0
 8010020:	8083      	strh	r3, [r0, #4]
 8010022:	4770      	bx	lr

08010024 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010024:	b510      	push	{r4, lr}
 8010026:	6803      	ldr	r3, [r0, #0]
 8010028:	8881      	ldrh	r1, [r0, #4]
 801002a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801002c:	4604      	mov	r4, r0
 801002e:	4798      	blx	r3
 8010030:	88a3      	ldrh	r3, [r4, #4]
 8010032:	3301      	adds	r3, #1
 8010034:	80a3      	strh	r3, [r4, #4]
 8010036:	bd10      	pop	{r4, pc}

08010038 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010038:	6803      	ldr	r3, [r0, #0]
 801003a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801003c:	4718      	bx	r3

0801003e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801003e:	4770      	bx	lr

08010040 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010040:	4a02      	ldr	r2, [pc, #8]	; (801004c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010042:	6002      	str	r2, [r0, #0]
 8010044:	2200      	movs	r2, #0
 8010046:	8082      	strh	r2, [r0, #4]
 8010048:	4770      	bx	lr
 801004a:	bf00      	nop
 801004c:	0802f68c 	.word	0x0802f68c

08010050 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010050:	b510      	push	{r4, lr}
 8010052:	6803      	ldr	r3, [r0, #0]
 8010054:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010058:	4604      	mov	r4, r0
 801005a:	4798      	blx	r3
 801005c:	b110      	cbz	r0, 8010064 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801005e:	4620      	mov	r0, r4
 8010060:	f7f2 f9fe 	bl	8002460 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010064:	bd10      	pop	{r4, pc}

08010066 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010066:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801006a:	4770      	bx	lr

0801006c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801006c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010070:	4770      	bx	lr

08010072 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010072:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010076:	4770      	bx	lr

08010078 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010078:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801007c:	4770      	bx	lr

0801007e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801007e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010080:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010084:	461e      	mov	r6, r3
 8010086:	6803      	ldr	r3, [r0, #0]
 8010088:	460f      	mov	r7, r1
 801008a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801008e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010092:	4604      	mov	r4, r0
 8010094:	4615      	mov	r5, r2
 8010096:	4798      	blx	r3
 8010098:	b93e      	cbnz	r6, 80100aa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801009a:	1bed      	subs	r5, r5, r7
 801009c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80100a0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80100a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80100a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80100aa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80100ae:	e7f7      	b.n	80100a0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080100b0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80100b0:	b510      	push	{r4, lr}
 80100b2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80100b6:	600c      	str	r4, [r1, #0]
 80100b8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80100bc:	6011      	str	r1, [r2, #0]
 80100be:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80100c2:	801a      	strh	r2, [r3, #0]
 80100c4:	9b02      	ldr	r3, [sp, #8]
 80100c6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80100ca:	801a      	strh	r2, [r3, #0]
 80100cc:	bd10      	pop	{r4, pc}

080100ce <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80100ce:	b510      	push	{r4, lr}
 80100d0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80100d4:	600c      	str	r4, [r1, #0]
 80100d6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80100da:	6011      	str	r1, [r2, #0]
 80100dc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80100e0:	801a      	strh	r2, [r3, #0]
 80100e2:	bd10      	pop	{r4, pc}

080100e4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80100e4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80100e8:	600b      	str	r3, [r1, #0]
 80100ea:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80100ee:	6013      	str	r3, [r2, #0]
 80100f0:	4770      	bx	lr

080100f2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80100f2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80100f6:	4770      	bx	lr

080100f8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80100f8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80100fc:	4770      	bx	lr

080100fe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80100fe:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010102:	4770      	bx	lr

08010104 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010104:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010108:	4770      	bx	lr

0801010a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801010a:	4770      	bx	lr

0801010c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801010c:	b510      	push	{r4, lr}
 801010e:	21b4      	movs	r1, #180	; 0xb4
 8010110:	4604      	mov	r4, r0
 8010112:	f01a fbae 	bl	802a872 <_ZdlPvj>
 8010116:	4620      	mov	r0, r4
 8010118:	bd10      	pop	{r4, pc}

0801011a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801011a:	b570      	push	{r4, r5, r6, lr}
 801011c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010120:	428d      	cmp	r5, r1
 8010122:	bfb8      	it	lt
 8010124:	460d      	movlt	r5, r1
 8010126:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801012a:	428d      	cmp	r5, r1
 801012c:	4604      	mov	r4, r0
 801012e:	bfa8      	it	ge
 8010130:	460d      	movge	r5, r1
 8010132:	4616      	mov	r6, r2
 8010134:	b99a      	cbnz	r2, 801015e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010136:	6803      	ldr	r3, [r0, #0]
 8010138:	4629      	mov	r1, r5
 801013a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801013e:	4798      	blx	r3
 8010140:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010144:	b368      	cbz	r0, 80101a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010146:	6803      	ldr	r3, [r0, #0]
 8010148:	68db      	ldr	r3, [r3, #12]
 801014a:	4798      	blx	r3
 801014c:	b348      	cbz	r0, 80101a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801014e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010152:	6803      	ldr	r3, [r0, #0]
 8010154:	4621      	mov	r1, r4
 8010156:	689b      	ldr	r3, [r3, #8]
 8010158:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801015c:	4718      	bx	r3
 801015e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010162:	2b00      	cmp	r3, #0
 8010164:	dd08      	ble.n	8010178 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010166:	f006 facf 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 801016a:	4621      	mov	r1, r4
 801016c:	3004      	adds	r0, #4
 801016e:	f006 fb18 	bl	80167a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010172:	2300      	movs	r3, #0
 8010174:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010178:	6823      	ldr	r3, [r4, #0]
 801017a:	4620      	mov	r0, r4
 801017c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010180:	4798      	blx	r3
 8010182:	2300      	movs	r3, #0
 8010184:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010188:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801018c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010190:	f006 faba 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8010194:	4621      	mov	r1, r4
 8010196:	3004      	adds	r0, #4
 8010198:	f006 fbac 	bl	80168f4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801019c:	2301      	movs	r3, #1
 801019e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80101a2:	bd70      	pop	{r4, r5, r6, pc}

080101a4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80101a4:	b510      	push	{r4, lr}
 80101a6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80101aa:	4299      	cmp	r1, r3
 80101ac:	bfb8      	it	lt
 80101ae:	4619      	movlt	r1, r3
 80101b0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80101b4:	4299      	cmp	r1, r3
 80101b6:	bfa8      	it	ge
 80101b8:	4619      	movge	r1, r3
 80101ba:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80101be:	428b      	cmp	r3, r1
 80101c0:	4604      	mov	r4, r0
 80101c2:	d010      	beq.n	80101e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101c4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80101c8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80101cc:	b158      	cbz	r0, 80101e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101ce:	6803      	ldr	r3, [r0, #0]
 80101d0:	68db      	ldr	r3, [r3, #12]
 80101d2:	4798      	blx	r3
 80101d4:	b138      	cbz	r0, 80101e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101d6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80101da:	6803      	ldr	r3, [r0, #0]
 80101dc:	4621      	mov	r1, r4
 80101de:	689b      	ldr	r3, [r3, #8]
 80101e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101e4:	4718      	bx	r3
 80101e6:	bd10      	pop	{r4, pc}

080101e8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80101e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80101ea:	4604      	mov	r4, r0
 80101ec:	460d      	mov	r5, r1
 80101ee:	b1a9      	cbz	r1, 801021c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80101f0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80101f4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80101f8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80101fc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010200:	ab01      	add	r3, sp, #4
 8010202:	1a12      	subs	r2, r2, r0
 8010204:	1b89      	subs	r1, r1, r6
 8010206:	1a38      	subs	r0, r7, r0
 8010208:	f007 fd34 	bl	8017c74 <_ZN8touchgfx6muldivElllRl>
 801020c:	4629      	mov	r1, r5
 801020e:	ab01      	add	r3, sp, #4
 8010210:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010214:	4430      	add	r0, r6
 8010216:	f007 fd2d 	bl	8017c74 <_ZN8touchgfx6muldivElllRl>
 801021a:	b285      	uxth	r5, r0
 801021c:	4628      	mov	r0, r5
 801021e:	b003      	add	sp, #12
 8010220:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010222 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010222:	b570      	push	{r4, r5, r6, lr}
 8010224:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010228:	4604      	mov	r4, r0
 801022a:	2b00      	cmp	r3, #0
 801022c:	d035      	beq.n	801029a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801022e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010232:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010236:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801023a:	3001      	adds	r0, #1
 801023c:	1ad2      	subs	r2, r2, r3
 801023e:	b212      	sxth	r2, r2
 8010240:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010244:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010248:	2100      	movs	r1, #0
 801024a:	b280      	uxth	r0, r0
 801024c:	47a8      	blx	r5
 801024e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010252:	6823      	ldr	r3, [r4, #0]
 8010254:	4401      	add	r1, r0
 8010256:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801025a:	4620      	mov	r0, r4
 801025c:	4798      	blx	r3
 801025e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010262:	429a      	cmp	r2, r3
 8010264:	db19      	blt.n	801029a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010266:	2500      	movs	r5, #0
 8010268:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801026c:	f006 fa4c 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8010270:	4621      	mov	r1, r4
 8010272:	3004      	adds	r0, #4
 8010274:	f006 fa95 	bl	80167a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010278:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801027c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010280:	b158      	cbz	r0, 801029a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010282:	6803      	ldr	r3, [r0, #0]
 8010284:	68db      	ldr	r3, [r3, #12]
 8010286:	4798      	blx	r3
 8010288:	b138      	cbz	r0, 801029a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801028a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801028e:	6803      	ldr	r3, [r0, #0]
 8010290:	4621      	mov	r1, r4
 8010292:	689b      	ldr	r3, [r3, #8]
 8010294:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010298:	4718      	bx	r3
 801029a:	bd70      	pop	{r4, r5, r6, pc}

0801029c <_ZN8touchgfx8DrawableC1Ev>:
 801029c:	4a0a      	ldr	r2, [pc, #40]	; (80102c8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801029e:	6002      	str	r2, [r0, #0]
 80102a0:	2200      	movs	r2, #0
 80102a2:	8082      	strh	r2, [r0, #4]
 80102a4:	80c2      	strh	r2, [r0, #6]
 80102a6:	8102      	strh	r2, [r0, #8]
 80102a8:	8142      	strh	r2, [r0, #10]
 80102aa:	8182      	strh	r2, [r0, #12]
 80102ac:	81c2      	strh	r2, [r0, #14]
 80102ae:	8202      	strh	r2, [r0, #16]
 80102b0:	8242      	strh	r2, [r0, #18]
 80102b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80102b6:	61c2      	str	r2, [r0, #28]
 80102b8:	8402      	strh	r2, [r0, #32]
 80102ba:	8442      	strh	r2, [r0, #34]	; 0x22
 80102bc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80102c0:	2201      	movs	r2, #1
 80102c2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80102c6:	4770      	bx	lr
 80102c8:	08030090 	.word	0x08030090

080102cc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80102cc:	b570      	push	{r4, r5, r6, lr}
 80102ce:	6803      	ldr	r3, [r0, #0]
 80102d0:	4604      	mov	r4, r0
 80102d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80102d4:	4615      	mov	r5, r2
 80102d6:	4798      	blx	r3
 80102d8:	6823      	ldr	r3, [r4, #0]
 80102da:	4629      	mov	r1, r5
 80102dc:	4620      	mov	r0, r4
 80102de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80102e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102e4:	4718      	bx	r3

080102e6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80102e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102ea:	4604      	mov	r4, r0
 80102ec:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80102f0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80102f4:	460e      	mov	r6, r1
 80102f6:	4615      	mov	r5, r2
 80102f8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80102fc:	4619      	mov	r1, r3
 80102fe:	463a      	mov	r2, r7
 8010300:	3058      	adds	r0, #88	; 0x58
 8010302:	4698      	mov	r8, r3
 8010304:	f7ff ffe2 	bl	80102cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010308:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801030c:	4446      	add	r6, r8
 801030e:	42b3      	cmp	r3, r6
 8010310:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010314:	bfb8      	it	lt
 8010316:	8126      	strhlt	r6, [r4, #8]
 8010318:	443d      	add	r5, r7
 801031a:	42ab      	cmp	r3, r5
 801031c:	bfb8      	it	lt
 801031e:	8165      	strhlt	r5, [r4, #10]
 8010320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010324 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010324:	b510      	push	{r4, lr}
 8010326:	4604      	mov	r4, r0
 8010328:	302c      	adds	r0, #44	; 0x2c
 801032a:	f003 fce4 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801032e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010332:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010336:	4620      	mov	r0, r4
 8010338:	f7ff ffc8 	bl	80102cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801033c:	bd10      	pop	{r4, pc}
	...

08010340 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010340:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010342:	4604      	mov	r4, r0
 8010344:	4626      	mov	r6, r4
 8010346:	2500      	movs	r5, #0
 8010348:	f7ff ffa8 	bl	801029c <_ZN8touchgfx8DrawableC1Ev>
 801034c:	4b23      	ldr	r3, [pc, #140]	; (80103dc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801034e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010350:	f846 3b2c 	str.w	r3, [r6], #44
 8010354:	2226      	movs	r2, #38	; 0x26
 8010356:	4629      	mov	r1, r5
 8010358:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801035c:	4630      	mov	r0, r6
 801035e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010362:	f01b fa9e 	bl	802b8a2 <memset>
 8010366:	4630      	mov	r0, r6
 8010368:	f7ff ff98 	bl	801029c <_ZN8touchgfx8DrawableC1Ev>
 801036c:	a902      	add	r1, sp, #8
 801036e:	4b1c      	ldr	r3, [pc, #112]	; (80103e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010370:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010372:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010376:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801037a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801037e:	4630      	mov	r0, r6
 8010380:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010384:	f003 fcb7 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010388:	4638      	mov	r0, r7
 801038a:	f7ff ff87 	bl	801029c <_ZN8touchgfx8DrawableC1Ev>
 801038e:	4b15      	ldr	r3, [pc, #84]	; (80103e4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010390:	65a3      	str	r3, [r4, #88]	; 0x58
 8010392:	2364      	movs	r3, #100	; 0x64
 8010394:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010398:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801039c:	4b12      	ldr	r3, [pc, #72]	; (80103e8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801039e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80103a2:	4629      	mov	r1, r5
 80103a4:	4630      	mov	r0, r6
 80103a6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80103aa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80103ae:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80103b2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80103b6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80103ba:	f7f1 ffad 	bl	8002318 <_ZN8touchgfx8Drawable4setXEs>
 80103be:	4629      	mov	r1, r5
 80103c0:	4630      	mov	r0, r6
 80103c2:	f7f1 ffab 	bl	800231c <_ZN8touchgfx8Drawable4setYEs>
 80103c6:	4631      	mov	r1, r6
 80103c8:	4620      	mov	r0, r4
 80103ca:	f000 ff04 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103ce:	4620      	mov	r0, r4
 80103d0:	4639      	mov	r1, r7
 80103d2:	f000 ff00 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103d6:	4620      	mov	r0, r4
 80103d8:	b003      	add	sp, #12
 80103da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103dc:	0802f6c0 	.word	0x0802f6c0
 80103e0:	0802ff4c 	.word	0x0802ff4c
 80103e4:	0802f9f8 	.word	0x0802f9f8
 80103e8:	0801844f 	.word	0x0801844f

080103ec <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 80103ec:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80103f0:	4770      	bx	lr

080103f2 <_ZNK8touchgfx12DrawableList11getCircularEv>:
 80103f2:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80103f6:	4770      	bx	lr

080103f8 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 80103f8:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 80103fc:	4770      	bx	lr

080103fe <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 80103fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010400:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 8010402:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 8010406:	b200      	sxth	r0, r0
 8010408:	4770      	bx	lr

0801040a <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 801040a:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 801040e:	4770      	bx	lr

08010410 <_ZN8touchgfx12DrawableListD1Ev>:
 8010410:	4770      	bx	lr

08010412 <_ZN8touchgfx12DrawableListD0Ev>:
 8010412:	b510      	push	{r4, lr}
 8010414:	214c      	movs	r1, #76	; 0x4c
 8010416:	4604      	mov	r4, r0
 8010418:	f01a fa2b 	bl	802a872 <_ZdlPvj>
 801041c:	4620      	mov	r0, r4
 801041e:	bd10      	pop	{r4, pc}

08010420 <_ZN8touchgfx12DrawableListC1Ev>:
 8010420:	2101      	movs	r1, #1
 8010422:	2200      	movs	r2, #0
 8010424:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010428:	4910      	ldr	r1, [pc, #64]	; (801046c <_ZN8touchgfx12DrawableListC1Ev+0x4c>)
 801042a:	8082      	strh	r2, [r0, #4]
 801042c:	80c2      	strh	r2, [r0, #6]
 801042e:	8102      	strh	r2, [r0, #8]
 8010430:	8142      	strh	r2, [r0, #10]
 8010432:	8182      	strh	r2, [r0, #12]
 8010434:	81c2      	strh	r2, [r0, #14]
 8010436:	8202      	strh	r2, [r0, #16]
 8010438:	8242      	strh	r2, [r0, #18]
 801043a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801043e:	61c2      	str	r2, [r0, #28]
 8010440:	8402      	strh	r2, [r0, #32]
 8010442:	8442      	strh	r2, [r0, #34]	; 0x22
 8010444:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010448:	6282      	str	r2, [r0, #40]	; 0x28
 801044a:	6001      	str	r1, [r0, #0]
 801044c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8010450:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 8010454:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8010458:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801045c:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 8010460:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8010464:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 8010468:	4770      	bx	lr
 801046a:	bf00      	nop
 801046c:	0802f794 	.word	0x0802f794

08010470 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 8010470:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 8010474:	8681      	strh	r1, [r0, #52]	; 0x34
 8010476:	86c2      	strh	r2, [r0, #54]	; 0x36
 8010478:	4770      	bx	lr

0801047a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 801047a:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 801047e:	4770      	bx	lr

08010480 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 8010480:	b538      	push	{r3, r4, r5, lr}
 8010482:	4605      	mov	r5, r0
 8010484:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010486:	b308      	cbz	r0, 80104cc <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 8010488:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 801048c:	2a00      	cmp	r2, #0
 801048e:	dd21      	ble.n	80104d4 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 8010490:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8010494:	b1db      	cbz	r3, 80104ce <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 8010496:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 801049a:	1e63      	subs	r3, r4, #1
 801049c:	1e54      	subs	r4, r2, #1
 801049e:	441c      	add	r4, r3
 80104a0:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 80104a4:	fb94 f4f2 	sdiv	r4, r4, r2
 80104a8:	3401      	adds	r4, #1
 80104aa:	b224      	sxth	r4, r4
 80104ac:	b923      	cbnz	r3, 80104b8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 80104ae:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 80104b2:	429c      	cmp	r4, r3
 80104b4:	bfa8      	it	ge
 80104b6:	461c      	movge	r4, r3
 80104b8:	6803      	ldr	r3, [r0, #0]
 80104ba:	68db      	ldr	r3, [r3, #12]
 80104bc:	4798      	blx	r3
 80104be:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 80104c2:	1ac0      	subs	r0, r0, r3
 80104c4:	42a0      	cmp	r0, r4
 80104c6:	bfa8      	it	ge
 80104c8:	4620      	movge	r0, r4
 80104ca:	b200      	sxth	r0, r0
 80104cc:	bd38      	pop	{r3, r4, r5, pc}
 80104ce:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 80104d2:	e7e2      	b.n	801049a <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 80104d4:	2000      	movs	r0, #0
 80104d6:	e7f9      	b.n	80104cc <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

080104d8 <_ZN8touchgfx12DrawableList9setOffsetEl>:
 80104d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104dc:	4604      	mov	r4, r0
 80104de:	460d      	mov	r5, r1
 80104e0:	6321      	str	r1, [r4, #48]	; 0x30
 80104e2:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 80104e6:	2b00      	cmp	r3, #0
 80104e8:	f000 80e8 	beq.w	80106bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 80104ec:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 80104f0:	2b00      	cmp	r3, #0
 80104f2:	f000 80e3 	beq.w	80106bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 80104f6:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 80104fa:	2b00      	cmp	r3, #0
 80104fc:	f000 80de 	beq.w	80106bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 8010500:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010502:	2800      	cmp	r0, #0
 8010504:	f000 80da 	beq.w	80106bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 8010508:	6803      	ldr	r3, [r0, #0]
 801050a:	68db      	ldr	r3, [r3, #12]
 801050c:	4798      	blx	r3
 801050e:	2800      	cmp	r0, #0
 8010510:	f000 80d4 	beq.w	80106bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 8010514:	2d00      	cmp	r5, #0
 8010516:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 801051a:	bfc1      	itttt	gt
 801051c:	fb95 f2f1 	sdivgt	r2, r5, r1
 8010520:	3201      	addgt	r2, #1
 8010522:	4253      	neggt	r3, r2
 8010524:	fb01 5512 	mlsgt	r5, r1, r2, r5
 8010528:	f1c1 0200 	rsb	r2, r1, #0
 801052c:	bfcc      	ite	gt
 801052e:	b21b      	sxthgt	r3, r3
 8010530:	2300      	movle	r3, #0
 8010532:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 8010536:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 801053a:	42aa      	cmp	r2, r5
 801053c:	bfa1      	itttt	ge
 801053e:	fb95 f2f1 	sdivge	r2, r5, r1
 8010542:	1a9b      	subge	r3, r3, r2
 8010544:	b21b      	sxthge	r3, r3
 8010546:	fb01 5512 	mlsge	r5, r1, r2, r5
 801054a:	b14f      	cbz	r7, 8010560 <_ZN8touchgfx12DrawableList9setOffsetEl+0x88>
 801054c:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8010550:	fb93 f1f2 	sdiv	r1, r3, r2
 8010554:	fb02 3311 	mls	r3, r2, r1, r3
 8010558:	2b00      	cmp	r3, #0
 801055a:	db70      	blt.n	801063e <_ZN8touchgfx12DrawableList9setOffsetEl+0x166>
 801055c:	b21b      	sxth	r3, r3
 801055e:	e004      	b.n	801056a <_ZN8touchgfx12DrawableList9setOffsetEl+0x92>
 8010560:	2b00      	cmp	r3, #0
 8010562:	da64      	bge.n	801062e <_ZN8touchgfx12DrawableList9setOffsetEl+0x156>
 8010564:	fb01 5513 	mls	r5, r1, r3, r5
 8010568:	463b      	mov	r3, r7
 801056a:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 801056e:	b1be      	cbz	r6, 80105a0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 8010570:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 8010574:	459e      	cmp	lr, r3
 8010576:	d068      	beq.n	801064a <_ZN8touchgfx12DrawableList9setOffsetEl+0x172>
 8010578:	2601      	movs	r6, #1
 801057a:	4286      	cmp	r6, r0
 801057c:	da67      	bge.n	801064e <_ZN8touchgfx12DrawableList9setOffsetEl+0x176>
 801057e:	eb0e 0106 	add.w	r1, lr, r6
 8010582:	199a      	adds	r2, r3, r6
 8010584:	b14f      	cbz	r7, 801059a <_ZN8touchgfx12DrawableList9setOffsetEl+0xc2>
 8010586:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 801058a:	fb91 f8fc 	sdiv	r8, r1, ip
 801058e:	fb0c 1118 	mls	r1, ip, r8, r1
 8010592:	fb92 f8fc 	sdiv	r8, r2, ip
 8010596:	fb0c 2218 	mls	r2, ip, r8, r2
 801059a:	428b      	cmp	r3, r1
 801059c:	d151      	bne.n	8010642 <_ZN8touchgfx12DrawableList9setOffsetEl+0x16a>
 801059e:	4276      	negs	r6, r6
 80105a0:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 80105a4:	87a3      	strh	r3, [r4, #60]	; 0x3c
 80105a6:	1b92      	subs	r2, r2, r6
 80105a8:	4402      	add	r2, r0
 80105aa:	2700      	movs	r7, #0
 80105ac:	fb92 f1f0 	sdiv	r1, r2, r0
 80105b0:	fb00 2011 	mls	r0, r0, r1, r2
 80105b4:	87e0      	strh	r0, [r4, #62]	; 0x3e
 80105b6:	b2ad      	uxth	r5, r5
 80105b8:	46ba      	mov	sl, r7
 80105ba:	f04f 0b01 	mov.w	fp, #1
 80105be:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 80105c2:	42ba      	cmp	r2, r7
 80105c4:	dd77      	ble.n	80106b6 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1de>
 80105c6:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 80105ca:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80105cc:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 80105d0:	443b      	add	r3, r7
 80105d2:	fb93 f8f2 	sdiv	r8, r3, r2
 80105d6:	fb02 3818 	mls	r8, r2, r8, r3
 80105da:	fa1f f888 	uxth.w	r8, r8
 80105de:	6803      	ldr	r3, [r0, #0]
 80105e0:	4441      	add	r1, r8
 80105e2:	689b      	ldr	r3, [r3, #8]
 80105e4:	b209      	sxth	r1, r1
 80105e6:	4798      	blx	r3
 80105e8:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 80105ec:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 80105f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80105f2:	6802      	ldr	r2, [r0, #0]
 80105f4:	4681      	mov	r9, r0
 80105f6:	fa1f fe87 	uxth.w	lr, r7
 80105fa:	b351      	cbz	r1, 8010652 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17a>
 80105fc:	18e9      	adds	r1, r5, r3
 80105fe:	fb1c 110e 	smlabb	r1, ip, lr, r1
 8010602:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8010604:	b209      	sxth	r1, r1
 8010606:	2200      	movs	r2, #0
 8010608:	4798      	blx	r3
 801060a:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 801060e:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 8010612:	443b      	add	r3, r7
 8010614:	b322      	cbz	r2, 8010660 <_ZN8touchgfx12DrawableList9setOffsetEl+0x188>
 8010616:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 801061a:	fb93 f1f2 	sdiv	r1, r3, r2
 801061e:	fb02 3311 	mls	r3, r2, r1, r3
 8010622:	2b00      	cmp	r3, #0
 8010624:	da22      	bge.n	801066c <_ZN8touchgfx12DrawableList9setOffsetEl+0x194>
 8010626:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 801062a:	3701      	adds	r7, #1
 801062c:	e7c7      	b.n	80105be <_ZN8touchgfx12DrawableList9setOffsetEl+0xe6>
 801062e:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8010632:	18c6      	adds	r6, r0, r3
 8010634:	4296      	cmp	r6, r2
 8010636:	dd98      	ble.n	801056a <_ZN8touchgfx12DrawableList9setOffsetEl+0x92>
 8010638:	1b92      	subs	r2, r2, r6
 801063a:	fb01 5502 	mla	r5, r1, r2, r5
 801063e:	4413      	add	r3, r2
 8010640:	e78c      	b.n	801055c <_ZN8touchgfx12DrawableList9setOffsetEl+0x84>
 8010642:	4596      	cmp	lr, r2
 8010644:	d0ac      	beq.n	80105a0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 8010646:	3601      	adds	r6, #1
 8010648:	e797      	b.n	801057a <_ZN8touchgfx12DrawableList9setOffsetEl+0xa2>
 801064a:	2600      	movs	r6, #0
 801064c:	e7a8      	b.n	80105a0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 801064e:	4606      	mov	r6, r0
 8010650:	e7a6      	b.n	80105a0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 8010652:	442b      	add	r3, r5
 8010654:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 8010658:	6d93      	ldr	r3, [r2, #88]	; 0x58
 801065a:	fa0f f28c 	sxth.w	r2, ip
 801065e:	e7d3      	b.n	8010608 <_ZN8touchgfx12DrawableList9setOffsetEl+0x130>
 8010660:	2b00      	cmp	r3, #0
 8010662:	dbe0      	blt.n	8010626 <_ZN8touchgfx12DrawableList9setOffsetEl+0x14e>
 8010664:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8010668:	4293      	cmp	r3, r2
 801066a:	dadc      	bge.n	8010626 <_ZN8touchgfx12DrawableList9setOffsetEl+0x14e>
 801066c:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 8010670:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8010674:	b132      	cbz	r2, 8010684 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ac>
 8010676:	42be      	cmp	r6, r7
 8010678:	dc04      	bgt.n	8010684 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ac>
 801067a:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 801067e:	4432      	add	r2, r6
 8010680:	4297      	cmp	r7, r2
 8010682:	dbd2      	blt.n	801062a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 8010684:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010686:	9301      	str	r3, [sp, #4]
 8010688:	6802      	ldr	r2, [r0, #0]
 801068a:	68d2      	ldr	r2, [r2, #12]
 801068c:	4790      	blx	r2
 801068e:	2800      	cmp	r0, #0
 8010690:	d0cb      	beq.n	801062a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 8010692:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010694:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8010698:	6801      	ldr	r1, [r0, #0]
 801069a:	9b01      	ldr	r3, [sp, #4]
 801069c:	4442      	add	r2, r8
 801069e:	b21b      	sxth	r3, r3
 80106a0:	f8d1 8008 	ldr.w	r8, [r1, #8]
 80106a4:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80106a6:	b212      	sxth	r2, r2
 80106a8:	47c0      	blx	r8
 80106aa:	f8d9 3000 	ldr.w	r3, [r9]
 80106ae:	4648      	mov	r0, r9
 80106b0:	699b      	ldr	r3, [r3, #24]
 80106b2:	4798      	blx	r3
 80106b4:	e7b9      	b.n	801062a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 80106b6:	2301      	movs	r3, #1
 80106b8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80106bc:	b003      	add	sp, #12
 80106be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080106c2 <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 80106c2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80106c4:	4770      	bx	lr

080106c6 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 80106c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106c8:	1c54      	adds	r4, r2, #1
 80106ca:	db2f      	blt.n	801072c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80106cc:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 80106d0:	4294      	cmp	r4, r2
 80106d2:	dd2b      	ble.n	801072c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80106d4:	b354      	cbz	r4, 801072c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80106d6:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 80106da:	b33e      	cbz	r6, 801072c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80106dc:	1c53      	adds	r3, r2, #1
 80106de:	d008      	beq.n	80106f2 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 80106e0:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 80106e4:	1ad2      	subs	r2, r2, r3
 80106e6:	4422      	add	r2, r4
 80106e8:	fb92 f3f4 	sdiv	r3, r2, r4
 80106ec:	fb04 2213 	mls	r2, r4, r3, r2
 80106f0:	b212      	sxth	r2, r2
 80106f2:	3201      	adds	r2, #1
 80106f4:	b212      	sxth	r2, r2
 80106f6:	4294      	cmp	r4, r2
 80106f8:	dd18      	ble.n	801072c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80106fa:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80106fc:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 8010700:	b295      	uxth	r5, r2
 8010702:	442b      	add	r3, r5
 8010704:	b21b      	sxth	r3, r3
 8010706:	b127      	cbz	r7, 8010712 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 8010708:	fb93 f7f6 	sdiv	r7, r3, r6
 801070c:	fb06 3317 	mls	r3, r6, r7, r3
 8010710:	b21b      	sxth	r3, r3
 8010712:	428b      	cmp	r3, r1
 8010714:	d108      	bne.n	8010728 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 8010716:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 801071a:	4402      	add	r2, r0
 801071c:	fb92 f0f4 	sdiv	r0, r2, r4
 8010720:	fb04 2010 	mls	r0, r4, r0, r2
 8010724:	b200      	sxth	r0, r0
 8010726:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010728:	1c6a      	adds	r2, r5, #1
 801072a:	e7e3      	b.n	80106f4 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 801072c:	f04f 30ff 	mov.w	r0, #4294967295
 8010730:	e7f9      	b.n	8010726 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

08010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 8010732:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010736:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8010738:	4604      	mov	r4, r0
 801073a:	b913      	cbnz	r3, 8010742 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x10>
 801073c:	8743      	strh	r3, [r0, #58]	; 0x3a
 801073e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010742:	f7ff fe9d 	bl	8010480 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 8010746:	8760      	strh	r0, [r4, #58]	; 0x3a
 8010748:	4620      	mov	r0, r4
 801074a:	f000 fd51 	bl	80111f0 <_ZN8touchgfx9Container9removeAllEv>
 801074e:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8010752:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8010754:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 8010756:	2a00      	cmp	r2, #0
 8010758:	d032      	beq.n	80107c0 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x8e>
 801075a:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 801075e:	fa0f f886 	sxth.w	r8, r6
 8010762:	f9b4 600a 	ldrsh.w	r6, [r4, #10]
 8010766:	2700      	movs	r7, #0
 8010768:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 801076c:	42bb      	cmp	r3, r7
 801076e:	dd2d      	ble.n	80107cc <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x9a>
 8010770:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010772:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 8010776:	6803      	ldr	r3, [r0, #0]
 8010778:	4439      	add	r1, r7
 801077a:	689b      	ldr	r3, [r3, #8]
 801077c:	b209      	sxth	r1, r1
 801077e:	4798      	blx	r3
 8010780:	6803      	ldr	r3, [r0, #0]
 8010782:	4605      	mov	r5, r0
 8010784:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010786:	2100      	movs	r1, #0
 8010788:	4798      	blx	r3
 801078a:	682b      	ldr	r3, [r5, #0]
 801078c:	2100      	movs	r1, #0
 801078e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010790:	4628      	mov	r0, r5
 8010792:	4798      	blx	r3
 8010794:	682b      	ldr	r3, [r5, #0]
 8010796:	4641      	mov	r1, r8
 8010798:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801079a:	4628      	mov	r0, r5
 801079c:	4798      	blx	r3
 801079e:	682b      	ldr	r3, [r5, #0]
 80107a0:	4628      	mov	r0, r5
 80107a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80107a4:	4631      	mov	r1, r6
 80107a6:	4798      	blx	r3
 80107a8:	6968      	ldr	r0, [r5, #20]
 80107aa:	b118      	cbz	r0, 80107b4 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x82>
 80107ac:	6803      	ldr	r3, [r0, #0]
 80107ae:	4629      	mov	r1, r5
 80107b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80107b2:	4798      	blx	r3
 80107b4:	4629      	mov	r1, r5
 80107b6:	4620      	mov	r0, r4
 80107b8:	f000 fd0d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80107bc:	3701      	adds	r7, #1
 80107be:	e7d3      	b.n	8010768 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x36>
 80107c0:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 80107c4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80107c8:	b236      	sxth	r6, r6
 80107ca:	e7cc      	b.n	8010766 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x34>
 80107cc:	2300      	movs	r3, #0
 80107ce:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80107d2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80107d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80107d6:	4620      	mov	r0, r4
 80107d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80107dc:	f7ff be7c 	b.w	80104d8 <_ZN8touchgfx12DrawableList9setOffsetEl>

080107e0 <_ZN8touchgfx12DrawableList8setWidthEs>:
 80107e0:	8101      	strh	r1, [r0, #8]
 80107e2:	f7ff bfa6 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080107e6 <_ZN8touchgfx12DrawableList9setHeightEs>:
 80107e6:	8141      	strh	r1, [r0, #10]
 80107e8:	f7ff bfa3 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080107ec <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 80107ec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80107f0:	b121      	cbz	r1, 80107fc <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 80107f2:	b92b      	cbnz	r3, 8010800 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 80107f4:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80107f8:	f7ff bf9b 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 80107fc:	2b00      	cmp	r3, #0
 80107fe:	d1f9      	bne.n	80107f4 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 8010800:	4770      	bx	lr

08010802 <_ZN8touchgfx12DrawableList11setCircularEb>:
 8010802:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8010806:	b121      	cbz	r1, 8010812 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 8010808:	b92b      	cbnz	r3, 8010816 <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 801080a:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 801080e:	f7ff bf90 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 8010812:	2b00      	cmp	r3, #0
 8010814:	d1f9      	bne.n	801080a <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 8010816:	4770      	bx	lr

08010818 <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 8010818:	b410      	push	{r4}
 801081a:	6441      	str	r1, [r0, #68]	; 0x44
 801081c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8010820:	6483      	str	r3, [r0, #72]	; 0x48
 8010822:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010826:	f7ff bf84 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0801082a <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 801082a:	8701      	strh	r1, [r0, #56]	; 0x38
 801082c:	f7ff bf81 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010830 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 8010830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010832:	4604      	mov	r4, r0
 8010834:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010836:	460e      	mov	r6, r1
 8010838:	b1c0      	cbz	r0, 801086c <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 801083a:	6803      	ldr	r3, [r0, #0]
 801083c:	68db      	ldr	r3, [r3, #12]
 801083e:	4798      	blx	r3
 8010840:	b1a0      	cbz	r0, 801086c <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 8010842:	f04f 35ff 	mov.w	r5, #4294967295
 8010846:	462a      	mov	r2, r5
 8010848:	4631      	mov	r1, r6
 801084a:	4620      	mov	r0, r4
 801084c:	f7ff ff3b 	bl	80106c6 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 8010850:	1c43      	adds	r3, r0, #1
 8010852:	4605      	mov	r5, r0
 8010854:	d00a      	beq.n	801086c <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 8010856:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010858:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 801085c:	6803      	ldr	r3, [r0, #0]
 801085e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010860:	689f      	ldr	r7, [r3, #8]
 8010862:	442a      	add	r2, r5
 8010864:	4633      	mov	r3, r6
 8010866:	b212      	sxth	r2, r2
 8010868:	47b8      	blx	r7
 801086a:	e7ec      	b.n	8010846 <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 801086c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801086e <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 801086e:	b570      	push	{r4, r5, r6, lr}
 8010870:	790b      	ldrb	r3, [r1, #4]
 8010872:	4604      	mov	r4, r0
 8010874:	2b00      	cmp	r3, #0
 8010876:	d158      	bne.n	801092a <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 8010878:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801087c:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 8010880:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 8010884:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 8010888:	6803      	ldr	r3, [r0, #0]
 801088a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801088e:	4798      	blx	r3
 8010890:	6823      	ldr	r3, [r4, #0]
 8010892:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8010896:	4601      	mov	r1, r0
 8010898:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801089c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80108a0:	4620      	mov	r0, r4
 80108a2:	4798      	blx	r3
 80108a4:	4601      	mov	r1, r0
 80108a6:	4620      	mov	r0, r4
 80108a8:	47a8      	blx	r5
 80108aa:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 80108ae:	2800      	cmp	r0, #0
 80108b0:	f000 809f 	beq.w	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80108b4:	6803      	ldr	r3, [r0, #0]
 80108b6:	68db      	ldr	r3, [r3, #12]
 80108b8:	4798      	blx	r3
 80108ba:	2800      	cmp	r0, #0
 80108bc:	f000 8099 	beq.w	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80108c0:	6823      	ldr	r3, [r4, #0]
 80108c2:	4620      	mov	r0, r4
 80108c4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80108c8:	4798      	blx	r3
 80108ca:	b358      	cbz	r0, 8010924 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 80108cc:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 80108d0:	6823      	ldr	r3, [r4, #0]
 80108d2:	4620      	mov	r0, r4
 80108d4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80108d8:	4798      	blx	r3
 80108da:	6823      	ldr	r3, [r4, #0]
 80108dc:	1a2d      	subs	r5, r5, r0
 80108de:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80108e2:	4620      	mov	r0, r4
 80108e4:	4798      	blx	r3
 80108e6:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 80108ea:	6823      	ldr	r3, [r4, #0]
 80108ec:	fb16 f600 	smulbb	r6, r6, r0
 80108f0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80108f4:	4620      	mov	r0, r4
 80108f6:	4798      	blx	r3
 80108f8:	b120      	cbz	r0, 8010904 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 80108fa:	4435      	add	r5, r6
 80108fc:	fb95 f1f6 	sdiv	r1, r5, r6
 8010900:	fb06 5511 	mls	r5, r6, r1, r5
 8010904:	2d00      	cmp	r5, #0
 8010906:	db74      	blt.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010908:	42b5      	cmp	r5, r6
 801090a:	da72      	bge.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801090c:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8010910:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8010914:	fb95 f1f1 	sdiv	r1, r5, r1
 8010918:	6803      	ldr	r3, [r0, #0]
 801091a:	b209      	sxth	r1, r1
 801091c:	689b      	ldr	r3, [r3, #8]
 801091e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010922:	4718      	bx	r3
 8010924:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8010928:	e7d2      	b.n	80108d0 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 801092a:	2b01      	cmp	r3, #1
 801092c:	d161      	bne.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801092e:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8010932:	2b00      	cmp	r3, #0
 8010934:	d14a      	bne.n	80109cc <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 8010936:	6803      	ldr	r3, [r0, #0]
 8010938:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801093c:	f8d3 60c8 	ldr.w	r6, [r3, #200]	; 0xc8
 8010940:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010944:	4798      	blx	r3
 8010946:	4601      	mov	r1, r0
 8010948:	4620      	mov	r0, r4
 801094a:	47b0      	blx	r6
 801094c:	4601      	mov	r1, r0
 801094e:	4620      	mov	r0, r4
 8010950:	47a8      	blx	r5
 8010952:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8010956:	2800      	cmp	r0, #0
 8010958:	d04b      	beq.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801095a:	6803      	ldr	r3, [r0, #0]
 801095c:	68db      	ldr	r3, [r3, #12]
 801095e:	4798      	blx	r3
 8010960:	2800      	cmp	r0, #0
 8010962:	d046      	beq.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010964:	6823      	ldr	r3, [r4, #0]
 8010966:	4620      	mov	r0, r4
 8010968:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801096c:	4798      	blx	r3
 801096e:	b330      	cbz	r0, 80109be <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 8010970:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 8010974:	6823      	ldr	r3, [r4, #0]
 8010976:	4620      	mov	r0, r4
 8010978:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801097c:	4798      	blx	r3
 801097e:	6823      	ldr	r3, [r4, #0]
 8010980:	1a2d      	subs	r5, r5, r0
 8010982:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010986:	4620      	mov	r0, r4
 8010988:	4798      	blx	r3
 801098a:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 801098e:	6823      	ldr	r3, [r4, #0]
 8010990:	fb16 f600 	smulbb	r6, r6, r0
 8010994:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010998:	4620      	mov	r0, r4
 801099a:	4798      	blx	r3
 801099c:	b190      	cbz	r0, 80109c4 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 801099e:	19a9      	adds	r1, r5, r6
 80109a0:	fb91 f3f6 	sdiv	r3, r1, r6
 80109a4:	fb06 1113 	mls	r1, r6, r3, r1
 80109a8:	2900      	cmp	r1, #0
 80109aa:	db22      	blt.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80109ac:	42b1      	cmp	r1, r6
 80109ae:	da20      	bge.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80109b0:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 80109b4:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 80109b8:	fb91 f1f3 	sdiv	r1, r1, r3
 80109bc:	e7ac      	b.n	8010918 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 80109be:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 80109c2:	e7d7      	b.n	8010974 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 80109c4:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 80109c8:	1a69      	subs	r1, r5, r1
 80109ca:	e7ed      	b.n	80109a8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 80109cc:	2b02      	cmp	r3, #2
 80109ce:	d110      	bne.n	80109f2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80109d0:	6803      	ldr	r3, [r0, #0]
 80109d2:	e9d3 6532 	ldrd	r6, r5, [r3, #200]	; 0xc8
 80109d6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80109da:	4798      	blx	r3
 80109dc:	4601      	mov	r1, r0
 80109de:	4620      	mov	r0, r4
 80109e0:	47b0      	blx	r6
 80109e2:	462b      	mov	r3, r5
 80109e4:	4601      	mov	r1, r0
 80109e6:	f04f 32ff 	mov.w	r2, #4294967295
 80109ea:	4620      	mov	r0, r4
 80109ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109f0:	4718      	bx	r3
 80109f2:	bd70      	pop	{r4, r5, r6, pc}

080109f4 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 80109f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109f8:	6803      	ldr	r3, [r0, #0]
 80109fa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80109fe:	4605      	mov	r5, r0
 8010a00:	460e      	mov	r6, r1
 8010a02:	4617      	mov	r7, r2
 8010a04:	4798      	blx	r3
 8010a06:	4604      	mov	r4, r0
 8010a08:	b9d8      	cbnz	r0, 8010a42 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 8010a0a:	682b      	ldr	r3, [r5, #0]
 8010a0c:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 8010a10:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010a14:	42be      	cmp	r6, r7
 8010a16:	4628      	mov	r0, r5
 8010a18:	bfa8      	it	ge
 8010a1a:	463e      	movge	r6, r7
 8010a1c:	4798      	blx	r3
 8010a1e:	4580      	cmp	r8, r0
 8010a20:	da07      	bge.n	8010a32 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 8010a22:	682b      	ldr	r3, [r5, #0]
 8010a24:	4628      	mov	r0, r5
 8010a26:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010a2a:	4798      	blx	r3
 8010a2c:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 8010a30:	1b04      	subs	r4, r0, r4
 8010a32:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 8010a36:	434c      	muls	r4, r1
 8010a38:	4264      	negs	r4, r4
 8010a3a:	1be1      	subs	r1, r4, r7
 8010a3c:	428e      	cmp	r6, r1
 8010a3e:	bfb8      	it	lt
 8010a40:	460e      	movlt	r6, r1
 8010a42:	4630      	mov	r0, r6
 8010a44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a48 <_ZN8touchgfx10ScrollListD1Ev>:
 8010a48:	4770      	bx	lr

08010a4a <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 8010a4a:	b570      	push	{r4, r5, r6, lr}
 8010a4c:	460d      	mov	r5, r1
 8010a4e:	4604      	mov	r4, r0
 8010a50:	4616      	mov	r6, r2
 8010a52:	f000 fa8d 	bl	8010f70 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 8010a56:	682b      	ldr	r3, [r5, #0]
 8010a58:	4628      	mov	r0, r5
 8010a5a:	68db      	ldr	r3, [r3, #12]
 8010a5c:	4798      	blx	r3
 8010a5e:	4633      	mov	r3, r6
 8010a60:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 8010a64:	4629      	mov	r1, r5
 8010a66:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010a6a:	2200      	movs	r2, #0
 8010a6c:	f7ff fed4 	bl	8010818 <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 8010a70:	6823      	ldr	r3, [r4, #0]
 8010a72:	4620      	mov	r0, r4
 8010a74:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010a78:	2100      	movs	r1, #0
 8010a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a7e:	4718      	bx	r3

08010a80 <_ZN8touchgfx10ScrollBase10initializeEv>:
 8010a80:	302c      	adds	r0, #44	; 0x2c
 8010a82:	f7ff be56 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010a86 <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 8010a86:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010a8a:	6803      	ldr	r3, [r0, #0]
 8010a8c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010a90:	4688      	mov	r8, r1
 8010a92:	4604      	mov	r4, r0
 8010a94:	4798      	blx	r3
 8010a96:	4601      	mov	r1, r0
 8010a98:	4620      	mov	r0, r4
 8010a9a:	f000 fab9 	bl	8011010 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010a9e:	f1b8 0f00 	cmp.w	r8, #0
 8010aa2:	4605      	mov	r5, r0
 8010aa4:	db6d      	blt.n	8010b82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010aa6:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 8010aaa:	4648      	mov	r0, r9
 8010aac:	f7ff fce5 	bl	801047a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8010ab0:	4540      	cmp	r0, r8
 8010ab2:	dd66      	ble.n	8010b82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010ab4:	f9b4 607c 	ldrsh.w	r6, [r4, #124]	; 0x7c
 8010ab8:	2e00      	cmp	r6, #0
 8010aba:	d062      	beq.n	8010b82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010abc:	6823      	ldr	r3, [r4, #0]
 8010abe:	f1c8 0100 	rsb	r1, r8, #0
 8010ac2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010ac6:	4620      	mov	r0, r4
 8010ac8:	434e      	muls	r6, r1
 8010aca:	4798      	blx	r3
 8010acc:	2800      	cmp	r0, #0
 8010ace:	d05b      	beq.n	8010b88 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 8010ad0:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 8010ad4:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 8010ad8:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 8010adc:	4419      	add	r1, r3
 8010ade:	1a7f      	subs	r7, r7, r1
 8010ae0:	4648      	mov	r0, r9
 8010ae2:	b23f      	sxth	r7, r7
 8010ae4:	f7ff fc85 	bl	80103f2 <_ZNK8touchgfx12DrawableList11getCircularEv>
 8010ae8:	2800      	cmp	r0, #0
 8010aea:	d050      	beq.n	8010b8e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x108>
 8010aec:	46aa      	mov	sl, r5
 8010aee:	4651      	mov	r1, sl
 8010af0:	4620      	mov	r0, r4
 8010af2:	f000 fa8d 	bl	8011010 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010af6:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 8010afa:	4240      	negs	r0, r0
 8010afc:	fb90 f0f3 	sdiv	r0, r0, r3
 8010b00:	b200      	sxth	r0, r0
 8010b02:	4580      	cmp	r8, r0
 8010b04:	d03d      	beq.n	8010b82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010b06:	ebaa 0a03 	sub.w	sl, sl, r3
 8010b0a:	1afb      	subs	r3, r7, r3
 8010b0c:	1aeb      	subs	r3, r5, r3
 8010b0e:	4553      	cmp	r3, sl
 8010b10:	dded      	ble.n	8010aee <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 8010b12:	4648      	mov	r0, r9
 8010b14:	f7ff fcb1 	bl	801047a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8010b18:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8010b1c:	fb00 fa01 	mul.w	sl, r0, r1
 8010b20:	1a79      	subs	r1, r7, r1
 8010b22:	1a69      	subs	r1, r5, r1
 8010b24:	4620      	mov	r0, r4
 8010b26:	f000 fa73 	bl	8011010 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010b2a:	eb06 090a 	add.w	r9, r6, sl
 8010b2e:	eba6 0805 	sub.w	r8, r6, r5
 8010b32:	eba9 0905 	sub.w	r9, r9, r5
 8010b36:	1b83      	subs	r3, r0, r6
 8010b38:	ea88 72e8 	eor.w	r2, r8, r8, asr #31
 8010b3c:	eba6 060a 	sub.w	r6, r6, sl
 8010b40:	ea89 71e9 	eor.w	r1, r9, r9, asr #31
 8010b44:	1b80      	subs	r0, r0, r6
 8010b46:	eba1 71e9 	sub.w	r1, r1, r9, asr #31
 8010b4a:	eba2 72e8 	sub.w	r2, r2, r8, asr #31
 8010b4e:	4291      	cmp	r1, r2
 8010b50:	bfb8      	it	lt
 8010b52:	46c8      	movlt	r8, r9
 8010b54:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8010b58:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 8010b5c:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 8010b60:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8010b64:	4291      	cmp	r1, r2
 8010b66:	bfb8      	it	lt
 8010b68:	4603      	movlt	r3, r0
 8010b6a:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8010b6e:	ea88 71e8 	eor.w	r1, r8, r8, asr #31
 8010b72:	eba1 71e8 	sub.w	r1, r1, r8, asr #31
 8010b76:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8010b7a:	4291      	cmp	r1, r2
 8010b7c:	bfcc      	ite	gt
 8010b7e:	1aed      	subgt	r5, r5, r3
 8010b80:	4445      	addle	r5, r8
 8010b82:	4628      	mov	r0, r5
 8010b84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b88:	f9b4 700a 	ldrsh.w	r7, [r4, #10]
 8010b8c:	e7a2      	b.n	8010ad4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4e>
 8010b8e:	42b5      	cmp	r5, r6
 8010b90:	db13      	blt.n	8010bba <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x134>
 8010b92:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 8010b96:	fb97 f3f2 	sdiv	r3, r7, r2
 8010b9a:	b21b      	sxth	r3, r3
 8010b9c:	2b00      	cmp	r3, #0
 8010b9e:	dd05      	ble.n	8010bac <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x126>
 8010ba0:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 8010ba4:	b131      	cbz	r1, 8010bb4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x12e>
 8010ba6:	3b01      	subs	r3, #1
 8010ba8:	fb02 6603 	mla	r6, r2, r3, r6
 8010bac:	42b5      	cmp	r5, r6
 8010bae:	bfa8      	it	ge
 8010bb0:	4635      	movge	r5, r6
 8010bb2:	e7e6      	b.n	8010b82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010bb4:	443e      	add	r6, r7
 8010bb6:	1ab6      	subs	r6, r6, r2
 8010bb8:	e7f8      	b.n	8010bac <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x126>
 8010bba:	4635      	mov	r5, r6
 8010bbc:	e7e1      	b.n	8010b82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>

08010bbe <_ZN8touchgfx10ScrollListD0Ev>:
 8010bbe:	b510      	push	{r4, lr}
 8010bc0:	21c4      	movs	r1, #196	; 0xc4
 8010bc2:	4604      	mov	r4, r0
 8010bc4:	f019 fe55 	bl	802a872 <_ZdlPvj>
 8010bc8:	4620      	mov	r0, r4
 8010bca:	bd10      	pop	{r4, pc}

08010bcc <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 8010bcc:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 8010bd0:	b10a      	cbz	r2, 8010bd6 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 8010bd2:	f000 b919 	b.w	8010e08 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 8010bd6:	6803      	ldr	r3, [r0, #0]
 8010bd8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010bdc:	4718      	bx	r3
	...

08010be0 <_ZN8touchgfx10ScrollListC1Ev>:
 8010be0:	b510      	push	{r4, lr}
 8010be2:	4604      	mov	r4, r0
 8010be4:	f000 fa84 	bl	80110f0 <_ZN8touchgfx10ScrollBaseC1Ev>
 8010be8:	4b05      	ldr	r3, [pc, #20]	; (8010c00 <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 8010bea:	6023      	str	r3, [r4, #0]
 8010bec:	2300      	movs	r3, #0
 8010bee:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8010bf2:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 8010bf6:	2301      	movs	r3, #1
 8010bf8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8010bfc:	4620      	mov	r0, r4
 8010bfe:	bd10      	pop	{r4, pc}
 8010c00:	0802f844 	.word	0x0802f844

08010c04 <_ZN8touchgfx10ScrollList13setWindowSizeEs>:
 8010c04:	b570      	push	{r4, r5, r6, lr}
 8010c06:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 8010c0a:	2b00      	cmp	r3, #0
 8010c0c:	4604      	mov	r4, r0
 8010c0e:	460d      	mov	r5, r1
 8010c10:	dd19      	ble.n	8010c46 <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x42>
 8010c12:	6803      	ldr	r3, [r0, #0]
 8010c14:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010c18:	4798      	blx	r3
 8010c1a:	b370      	cbz	r0, 8010c7a <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x76>
 8010c1c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010c20:	f8b4 207a 	ldrh.w	r2, [r4, #122]	; 0x7a
 8010c24:	f8b4 00ba 	ldrh.w	r0, [r4, #186]	; 0xba
 8010c28:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8010c2c:	4402      	add	r2, r0
 8010c2e:	1a9b      	subs	r3, r3, r2
 8010c30:	2202      	movs	r2, #2
 8010c32:	fb91 f2f2 	sdiv	r2, r1, r2
 8010c36:	fa02 f383 	sxtah	r3, r2, r3
 8010c3a:	fb93 f3f1 	sdiv	r3, r3, r1
 8010c3e:	b21b      	sxth	r3, r3
 8010c40:	429d      	cmp	r5, r3
 8010c42:	bfa8      	it	ge
 8010c44:	461d      	movge	r5, r3
 8010c46:	2d01      	cmp	r5, #1
 8010c48:	6823      	ldr	r3, [r4, #0]
 8010c4a:	bfb8      	it	lt
 8010c4c:	2501      	movlt	r5, #1
 8010c4e:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8010c52:	f8d3 50cc 	ldr.w	r5, [r3, #204]	; 0xcc
 8010c56:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 8010c5a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010c5e:	4620      	mov	r0, r4
 8010c60:	4798      	blx	r3
 8010c62:	2200      	movs	r2, #0
 8010c64:	4601      	mov	r1, r0
 8010c66:	4620      	mov	r0, r4
 8010c68:	47b0      	blx	r6
 8010c6a:	462b      	mov	r3, r5
 8010c6c:	4601      	mov	r1, r0
 8010c6e:	f04f 32ff 	mov.w	r2, #4294967295
 8010c72:	4620      	mov	r0, r4
 8010c74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c78:	4718      	bx	r3
 8010c7a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010c7e:	e7cf      	b.n	8010c20 <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x1c>

08010c80 <_ZN8touchgfx10ScrollList8setWidthEs>:
 8010c80:	b510      	push	{r4, lr}
 8010c82:	4604      	mov	r4, r0
 8010c84:	f000 fa89 	bl	801119a <_ZN8touchgfx10ScrollBase8setWidthEs>
 8010c88:	6823      	ldr	r3, [r4, #0]
 8010c8a:	4620      	mov	r0, r4
 8010c8c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010c90:	4798      	blx	r3
 8010c92:	b130      	cbz	r0, 8010ca2 <_ZN8touchgfx10ScrollList8setWidthEs+0x22>
 8010c94:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 8010c98:	4620      	mov	r0, r4
 8010c9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c9e:	f7ff bfb1 	b.w	8010c04 <_ZN8touchgfx10ScrollList13setWindowSizeEs>
 8010ca2:	bd10      	pop	{r4, pc}

08010ca4 <_ZN8touchgfx10ScrollList15setDrawableSizeEss>:
 8010ca4:	b510      	push	{r4, lr}
 8010ca6:	4604      	mov	r4, r0
 8010ca8:	f000 f858 	bl	8010d5c <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
 8010cac:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 8010cb0:	4620      	mov	r0, r4
 8010cb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cb6:	f7ff bfa5 	b.w	8010c04 <_ZN8touchgfx10ScrollList13setWindowSizeEs>

08010cba <_ZN8touchgfx10ScrollList9setHeightEs>:
 8010cba:	b510      	push	{r4, lr}
 8010cbc:	4604      	mov	r4, r0
 8010cbe:	f000 fa70 	bl	80111a2 <_ZN8touchgfx10ScrollBase9setHeightEs>
 8010cc2:	6823      	ldr	r3, [r4, #0]
 8010cc4:	4620      	mov	r0, r4
 8010cc6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010cca:	4798      	blx	r3
 8010ccc:	b930      	cbnz	r0, 8010cdc <_ZN8touchgfx10ScrollList9setHeightEs+0x22>
 8010cce:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 8010cd2:	4620      	mov	r0, r4
 8010cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cd8:	f7ff bf94 	b.w	8010c04 <_ZN8touchgfx10ScrollList13setWindowSizeEs>
 8010cdc:	bd10      	pop	{r4, pc}

08010cde <_ZN8touchgfx10ScrollList10setPaddingEss>:
 8010cde:	b570      	push	{r4, r5, r6, lr}
 8010ce0:	6803      	ldr	r3, [r0, #0]
 8010ce2:	4604      	mov	r4, r0
 8010ce4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010ce8:	460e      	mov	r6, r1
 8010cea:	4615      	mov	r5, r2
 8010cec:	4798      	blx	r3
 8010cee:	6823      	ldr	r3, [r4, #0]
 8010cf0:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 8010cf4:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 8010cf8:	4601      	mov	r1, r0
 8010cfa:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010cfe:	4620      	mov	r0, r4
 8010d00:	4798      	blx	r3
 8010d02:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010d06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d0a:	f7ff bd12 	b.w	8010732 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010d0e <_ZN8touchgfx10ScrollList11setSnappingEb>:
 8010d0e:	b570      	push	{r4, r5, r6, lr}
 8010d10:	4604      	mov	r4, r0
 8010d12:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 8010d16:	b181      	cbz	r1, 8010d3a <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 8010d18:	6803      	ldr	r3, [r0, #0]
 8010d1a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010d1e:	f8d3 60c8 	ldr.w	r6, [r3, #200]	; 0xc8
 8010d22:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010d26:	4798      	blx	r3
 8010d28:	4601      	mov	r1, r0
 8010d2a:	4620      	mov	r0, r4
 8010d2c:	47b0      	blx	r6
 8010d2e:	462b      	mov	r3, r5
 8010d30:	4601      	mov	r1, r0
 8010d32:	4620      	mov	r0, r4
 8010d34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d38:	4718      	bx	r3
 8010d3a:	bd70      	pop	{r4, r5, r6, pc}

08010d3c <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 8010d3c:	b570      	push	{r4, r5, r6, lr}
 8010d3e:	6803      	ldr	r3, [r0, #0]
 8010d40:	4604      	mov	r4, r0
 8010d42:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010d46:	4615      	mov	r5, r2
 8010d48:	4798      	blx	r3
 8010d4a:	6823      	ldr	r3, [r4, #0]
 8010d4c:	462a      	mov	r2, r5
 8010d4e:	4601      	mov	r1, r0
 8010d50:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010d54:	4620      	mov	r0, r4
 8010d56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d5a:	4718      	bx	r3

08010d5c <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 8010d5c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8010d60:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8010d64:	302c      	adds	r0, #44	; 0x2c
 8010d66:	f7ff bb83 	b.w	8010470 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

08010d6a <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 8010d6a:	302c      	adds	r0, #44	; 0x2c
 8010d6c:	f7ff bb85 	b.w	801047a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

08010d70 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 8010d70:	b209      	sxth	r1, r1
 8010d72:	302c      	adds	r0, #44	; 0x2c
 8010d74:	f7ff bd5c 	b.w	8010830 <_ZN8touchgfx12DrawableList11itemChangedEs>

08010d78 <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 8010d78:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 8010d7c:	302c      	adds	r0, #44	; 0x2c
 8010d7e:	4419      	add	r1, r3
 8010d80:	f7ff bbaa 	b.w	80104d8 <_ZN8touchgfx12DrawableList9setOffsetEl>

08010d84 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 8010d84:	b510      	push	{r4, lr}
 8010d86:	4604      	mov	r4, r0
 8010d88:	302c      	adds	r0, #44	; 0x2c
 8010d8a:	f7ff fc9a 	bl	80106c2 <_ZNK8touchgfx12DrawableList9getOffsetEv>
 8010d8e:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 8010d92:	1ac0      	subs	r0, r0, r3
 8010d94:	bd10      	pop	{r4, pc}

08010d96 <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 8010d96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d98:	6803      	ldr	r3, [r0, #0]
 8010d9a:	4604      	mov	r4, r0
 8010d9c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010da0:	4615      	mov	r5, r2
 8010da2:	460f      	mov	r7, r1
 8010da4:	4798      	blx	r3
 8010da6:	6823      	ldr	r3, [r4, #0]
 8010da8:	4606      	mov	r6, r0
 8010daa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010dae:	4639      	mov	r1, r7
 8010db0:	4620      	mov	r0, r4
 8010db2:	4798      	blx	r3
 8010db4:	2d00      	cmp	r5, #0
 8010db6:	eba0 0306 	sub.w	r3, r0, r6
 8010dba:	bfb8      	it	lt
 8010dbc:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 8010dc0:	2b00      	cmp	r3, #0
 8010dc2:	bfb8      	it	lt
 8010dc4:	425b      	neglt	r3, r3
 8010dc6:	42ab      	cmp	r3, r5
 8010dc8:	bfa8      	it	ge
 8010dca:	462b      	movge	r3, r5
 8010dcc:	b21a      	sxth	r2, r3
 8010dce:	2a00      	cmp	r2, #0
 8010dd0:	4601      	mov	r1, r0
 8010dd2:	dc08      	bgt.n	8010de6 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x50>
 8010dd4:	6823      	ldr	r3, [r4, #0]
 8010dd6:	4620      	mov	r0, r4
 8010dd8:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010ddc:	4798      	blx	r3
 8010dde:	2300      	movs	r3, #0
 8010de0:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8010de4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010de6:	2300      	movs	r3, #0
 8010de8:	e9c4 3228 	strd	r3, r2, [r4, #160]	; 0xa0
 8010dec:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8010df0:	2b01      	cmp	r3, #1
 8010df2:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 8010df6:	d0f5      	beq.n	8010de4 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 8010df8:	f005 fc86 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8010dfc:	4621      	mov	r1, r4
 8010dfe:	3004      	adds	r0, #4
 8010e00:	f005 fd78 	bl	80168f4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010e04:	2301      	movs	r3, #1
 8010e06:	e7eb      	b.n	8010de0 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4a>

08010e08 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 8010e08:	b538      	push	{r3, r4, r5, lr}
 8010e0a:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 8010e0e:	4605      	mov	r5, r0
 8010e10:	460c      	mov	r4, r1
 8010e12:	b193      	cbz	r3, 8010e3a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 8010e14:	6803      	ldr	r3, [r0, #0]
 8010e16:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010e1a:	4798      	blx	r3
 8010e1c:	4602      	mov	r2, r0
 8010e1e:	b170      	cbz	r0, 8010e3e <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 8010e20:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8010e24:	2c00      	cmp	r4, #0
 8010e26:	f04f 0102 	mov.w	r1, #2
 8010e2a:	fb93 f1f1 	sdiv	r1, r3, r1
 8010e2e:	bfb4      	ite	lt
 8010e30:	1a64      	sublt	r4, r4, r1
 8010e32:	1864      	addge	r4, r4, r1
 8010e34:	fb94 f4f3 	sdiv	r4, r4, r3
 8010e38:	435c      	muls	r4, r3
 8010e3a:	4620      	mov	r0, r4
 8010e3c:	bd38      	pop	{r3, r4, r5, pc}
 8010e3e:	682b      	ldr	r3, [r5, #0]
 8010e40:	4621      	mov	r1, r4
 8010e42:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010e46:	4628      	mov	r0, r5
 8010e48:	4798      	blx	r3
 8010e4a:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 8010e4e:	2302      	movs	r3, #2
 8010e50:	fb94 f3f3 	sdiv	r3, r4, r3
 8010e54:	1ac0      	subs	r0, r0, r3
 8010e56:	fb90 f0f4 	sdiv	r0, r0, r4
 8010e5a:	4344      	muls	r4, r0
 8010e5c:	e7ed      	b.n	8010e3a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

08010e5e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 8010e5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e62:	6803      	ldr	r3, [r0, #0]
 8010e64:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010e68:	460d      	mov	r5, r1
 8010e6a:	4604      	mov	r4, r0
 8010e6c:	4798      	blx	r3
 8010e6e:	42a8      	cmp	r0, r5
 8010e70:	d020      	beq.n	8010eb4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 8010e72:	4629      	mov	r1, r5
 8010e74:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010e78:	f7ff fcd7 	bl	801082a <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 8010e7c:	6823      	ldr	r3, [r4, #0]
 8010e7e:	4620      	mov	r0, r4
 8010e80:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010e84:	4798      	blx	r3
 8010e86:	4605      	mov	r5, r0
 8010e88:	b9a0      	cbnz	r0, 8010eb4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 8010e8a:	6823      	ldr	r3, [r4, #0]
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	f8d3 60cc 	ldr.w	r6, [r3, #204]	; 0xcc
 8010e92:	f8d3 70c4 	ldr.w	r7, [r3, #196]	; 0xc4
 8010e96:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010e9a:	4798      	blx	r3
 8010e9c:	462a      	mov	r2, r5
 8010e9e:	4601      	mov	r1, r0
 8010ea0:	4620      	mov	r0, r4
 8010ea2:	47b8      	blx	r7
 8010ea4:	4633      	mov	r3, r6
 8010ea6:	4601      	mov	r1, r0
 8010ea8:	f04f 32ff 	mov.w	r2, #4294967295
 8010eac:	4620      	mov	r0, r4
 8010eae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010eb2:	4718      	bx	r3
 8010eb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010eb8 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 8010eb8:	b570      	push	{r4, r5, r6, lr}
 8010eba:	6803      	ldr	r3, [r0, #0]
 8010ebc:	790e      	ldrb	r6, [r1, #4]
 8010ebe:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010ec2:	4605      	mov	r5, r0
 8010ec4:	460c      	mov	r4, r1
 8010ec6:	4798      	blx	r3
 8010ec8:	f080 0001 	eor.w	r0, r0, #1
 8010ecc:	b2c0      	uxtb	r0, r0
 8010ece:	42b0      	cmp	r0, r6
 8010ed0:	d144      	bne.n	8010f5c <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0xa4>
 8010ed2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010ed6:	ea83 74e3 	eor.w	r4, r3, r3, asr #31
 8010eda:	eba4 74e3 	sub.w	r4, r4, r3, asr #31
 8010ede:	b224      	sxth	r4, r4
 8010ee0:	2b00      	cmp	r3, #0
 8010ee2:	bfb4      	ite	lt
 8010ee4:	f04f 36ff 	movlt.w	r6, #4294967295
 8010ee8:	2601      	movge	r6, #1
 8010eea:	682b      	ldr	r3, [r5, #0]
 8010eec:	2c04      	cmp	r4, #4
 8010eee:	bfc4      	itt	gt
 8010ef0:	3c04      	subgt	r4, #4
 8010ef2:	ebc4 04c4 	rsbgt	r4, r4, r4, lsl #3
 8010ef6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010efa:	4628      	mov	r0, r5
 8010efc:	bfcc      	ite	gt
 8010efe:	b224      	sxthgt	r4, r4
 8010f00:	2407      	movle	r4, #7
 8010f02:	4798      	blx	r3
 8010f04:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 8010f08:	4366      	muls	r6, r4
 8010f0a:	230a      	movs	r3, #10
 8010f0c:	4371      	muls	r1, r6
 8010f0e:	fb91 f1f3 	sdiv	r1, r1, r3
 8010f12:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 8010f16:	4401      	add	r1, r0
 8010f18:	b163      	cbz	r3, 8010f34 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x7c>
 8010f1a:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 8010f1e:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 8010f22:	4343      	muls	r3, r0
 8010f24:	1898      	adds	r0, r3, r2
 8010f26:	4281      	cmp	r1, r0
 8010f28:	bfa8      	it	ge
 8010f2a:	4601      	movge	r1, r0
 8010f2c:	1ad0      	subs	r0, r2, r3
 8010f2e:	4281      	cmp	r1, r0
 8010f30:	bfb8      	it	lt
 8010f32:	4601      	movlt	r1, r0
 8010f34:	682b      	ldr	r3, [r5, #0]
 8010f36:	2200      	movs	r2, #0
 8010f38:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010f3c:	4628      	mov	r0, r5
 8010f3e:	4798      	blx	r3
 8010f40:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 8010f44:	682b      	ldr	r3, [r5, #0]
 8010f46:	42a2      	cmp	r2, r4
 8010f48:	bfa8      	it	ge
 8010f4a:	4622      	movge	r2, r4
 8010f4c:	4601      	mov	r1, r0
 8010f4e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010f52:	4628      	mov	r0, r5
 8010f54:	b212      	sxth	r2, r2
 8010f56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f5a:	4718      	bx	r3
 8010f5c:	bd70      	pop	{r4, r5, r6, pc}

08010f5e <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 8010f5e:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 8010f62:	4770      	bx	lr

08010f64 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 8010f64:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 8010f68:	4770      	bx	lr

08010f6a <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 8010f6a:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 8010f6e:	4770      	bx	lr

08010f70 <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 8010f70:	b510      	push	{r4, lr}
 8010f72:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8010f76:	2b01      	cmp	r3, #1
 8010f78:	4604      	mov	r4, r0
 8010f7a:	d10c      	bne.n	8010f96 <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x26>
 8010f7c:	f005 fbc4 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8010f80:	4621      	mov	r1, r4
 8010f82:	3004      	adds	r0, #4
 8010f84:	f005 fc0d 	bl	80167a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010f88:	6823      	ldr	r3, [r4, #0]
 8010f8a:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 8010f8e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010f92:	4620      	mov	r0, r4
 8010f94:	4798      	blx	r3
 8010f96:	2300      	movs	r3, #0
 8010f98:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8010f9c:	bd10      	pop	{r4, pc}

08010f9e <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 8010f9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fa2:	4605      	mov	r5, r0
 8010fa4:	460e      	mov	r6, r1
 8010fa6:	f7ff ffe3 	bl	8010f70 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 8010faa:	2302      	movs	r3, #2
 8010fac:	f885 309c 	strb.w	r3, [r5, #156]	; 0x9c
 8010fb0:	682b      	ldr	r3, [r5, #0]
 8010fb2:	4628      	mov	r0, r5
 8010fb4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010fb8:	4798      	blx	r3
 8010fba:	682b      	ldr	r3, [r5, #0]
 8010fbc:	4607      	mov	r7, r0
 8010fbe:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010fc2:	4628      	mov	r0, r5
 8010fc4:	4798      	blx	r3
 8010fc6:	b300      	cbz	r0, 801100a <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x6c>
 8010fc8:	8973      	ldrh	r3, [r6, #10]
 8010fca:	88f2      	ldrh	r2, [r6, #6]
 8010fcc:	f8b5 4080 	ldrh.w	r4, [r5, #128]	; 0x80
 8010fd0:	f895 108a 	ldrb.w	r1, [r5, #138]	; 0x8a
 8010fd4:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 8010fd8:	1a9b      	subs	r3, r3, r2
 8010fda:	b21b      	sxth	r3, r3
 8010fdc:	435c      	muls	r4, r3
 8010fde:	230a      	movs	r3, #10
 8010fe0:	fb94 f4f3 	sdiv	r4, r4, r3
 8010fe4:	682b      	ldr	r3, [r5, #0]
 8010fe6:	2264      	movs	r2, #100	; 0x64
 8010fe8:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 8010fec:	f006 fe61 	bl	8017cb2 <_ZN8touchgfx6muldivElll>
 8010ff0:	443c      	add	r4, r7
 8010ff2:	4621      	mov	r1, r4
 8010ff4:	b202      	sxth	r2, r0
 8010ff6:	4628      	mov	r0, r5
 8010ff8:	47b0      	blx	r6
 8010ffa:	682b      	ldr	r3, [r5, #0]
 8010ffc:	4601      	mov	r1, r0
 8010ffe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8011002:	4628      	mov	r0, r5
 8011004:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011008:	4718      	bx	r3
 801100a:	89b3      	ldrh	r3, [r6, #12]
 801100c:	8932      	ldrh	r2, [r6, #8]
 801100e:	e7dd      	b.n	8010fcc <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2e>

08011010 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 8011010:	b538      	push	{r3, r4, r5, lr}
 8011012:	6803      	ldr	r3, [r0, #0]
 8011014:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8011018:	4605      	mov	r5, r0
 801101a:	460c      	mov	r4, r1
 801101c:	4798      	blx	r3
 801101e:	b150      	cbz	r0, 8011036 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8011020:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8011024:	b13b      	cbz	r3, 8011036 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8011026:	4358      	muls	r0, r3
 8011028:	fb94 f3f0 	sdiv	r3, r4, r0
 801102c:	fb00 4413 	mls	r4, r0, r3, r4
 8011030:	2c00      	cmp	r4, #0
 8011032:	bfc8      	it	gt
 8011034:	1a24      	subgt	r4, r4, r0
 8011036:	4620      	mov	r0, r4
 8011038:	bd38      	pop	{r3, r4, r5, pc}

0801103a <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 801103a:	b570      	push	{r4, r5, r6, lr}
 801103c:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8011040:	2b01      	cmp	r3, #1
 8011042:	4604      	mov	r4, r0
 8011044:	d14a      	bne.n	80110dc <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 8011046:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 801104a:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 801104e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011052:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 8011056:	3001      	adds	r0, #1
 8011058:	1b92      	subs	r2, r2, r6
 801105a:	b212      	sxth	r2, r2
 801105c:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 8011060:	2100      	movs	r1, #0
 8011062:	b280      	uxth	r0, r0
 8011064:	47a8      	blx	r5
 8011066:	6823      	ldr	r3, [r4, #0]
 8011068:	1981      	adds	r1, r0, r6
 801106a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801106e:	4620      	mov	r0, r4
 8011070:	4798      	blx	r3
 8011072:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 8011076:	429a      	cmp	r2, r3
 8011078:	dd30      	ble.n	80110dc <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 801107a:	2300      	movs	r3, #0
 801107c:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8011080:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8011084:	f005 fb40 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8011088:	4621      	mov	r1, r4
 801108a:	3004      	adds	r0, #4
 801108c:	f005 fb89 	bl	80167a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011090:	6823      	ldr	r3, [r4, #0]
 8011092:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 8011096:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801109a:	4620      	mov	r0, r4
 801109c:	f7ff ffb8 	bl	8011010 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 80110a0:	4601      	mov	r1, r0
 80110a2:	4620      	mov	r0, r4
 80110a4:	47a8      	blx	r5
 80110a6:	6823      	ldr	r3, [r4, #0]
 80110a8:	4620      	mov	r0, r4
 80110aa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80110ae:	4798      	blx	r3
 80110b0:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80110b4:	1ac0      	subs	r0, r0, r3
 80110b6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80110ba:	4403      	add	r3, r0
 80110bc:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80110c0:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 80110c4:	b150      	cbz	r0, 80110dc <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 80110c6:	6803      	ldr	r3, [r0, #0]
 80110c8:	68db      	ldr	r3, [r3, #12]
 80110ca:	4798      	blx	r3
 80110cc:	b130      	cbz	r0, 80110dc <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 80110ce:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80110d2:	6803      	ldr	r3, [r0, #0]
 80110d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80110d8:	689b      	ldr	r3, [r3, #8]
 80110da:	4718      	bx	r3
 80110dc:	bd70      	pop	{r4, r5, r6, pc}

080110de <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 80110de:	f081 0301 	eor.w	r3, r1, #1
 80110e2:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 80110e6:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 80110ea:	302c      	adds	r0, #44	; 0x2c
 80110ec:	f7ff bb7e 	b.w	80107ec <_ZN8touchgfx12DrawableList13setHorizontalEb>

080110f0 <_ZN8touchgfx10ScrollBaseC1Ev>:
 80110f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80110f2:	4606      	mov	r6, r0
 80110f4:	2500      	movs	r5, #0
 80110f6:	2701      	movs	r7, #1
 80110f8:	4b24      	ldr	r3, [pc, #144]	; (801118c <_ZN8touchgfx10ScrollBaseC1Ev+0x9c>)
 80110fa:	8085      	strh	r5, [r0, #4]
 80110fc:	80c5      	strh	r5, [r0, #6]
 80110fe:	8105      	strh	r5, [r0, #8]
 8011100:	8145      	strh	r5, [r0, #10]
 8011102:	8185      	strh	r5, [r0, #12]
 8011104:	81c5      	strh	r5, [r0, #14]
 8011106:	8205      	strh	r5, [r0, #16]
 8011108:	8245      	strh	r5, [r0, #18]
 801110a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801110e:	61c5      	str	r5, [r0, #28]
 8011110:	8405      	strh	r5, [r0, #32]
 8011112:	8445      	strh	r5, [r0, #34]	; 0x22
 8011114:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8011118:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 801111c:	6285      	str	r5, [r0, #40]	; 0x28
 801111e:	f846 3b2c 	str.w	r3, [r6], #44
 8011122:	4604      	mov	r4, r0
 8011124:	4630      	mov	r0, r6
 8011126:	f7ff f97b 	bl	8010420 <_ZN8touchgfx12DrawableListC1Ev>
 801112a:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 801112e:	230a      	movs	r3, #10
 8011130:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 8011134:	4b16      	ldr	r3, [pc, #88]	; (8011190 <_ZN8touchgfx10ScrollBaseC1Ev+0xa0>)
 8011136:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801113a:	231e      	movs	r3, #30
 801113c:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 8011140:	234b      	movs	r3, #75	; 0x4b
 8011142:	f884 308a 	strb.w	r3, [r4, #138]	; 0x8a
 8011146:	4631      	mov	r1, r6
 8011148:	4620      	mov	r0, r4
 801114a:	67a5      	str	r5, [r4, #120]	; 0x78
 801114c:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 8011150:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8011154:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 8011158:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 801115c:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 8011160:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 8011164:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 8011168:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 801116c:	f000 f833 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011170:	4629      	mov	r1, r5
 8011172:	4630      	mov	r0, r6
 8011174:	6325      	str	r5, [r4, #48]	; 0x30
 8011176:	f7ff fb39 	bl	80107ec <_ZN8touchgfx12DrawableList13setHorizontalEb>
 801117a:	4630      	mov	r0, r6
 801117c:	4629      	mov	r1, r5
 801117e:	f7ff fb40 	bl	8010802 <_ZN8touchgfx12DrawableList11setCircularEb>
 8011182:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 8011186:	4620      	mov	r0, r4
 8011188:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801118a:	bf00      	nop
 801118c:	0802f920 	.word	0x0802f920
 8011190:	0801836d 	.word	0x0801836d

08011194 <_ZN8touchgfx10ScrollBase11setCircularEb>:
 8011194:	302c      	adds	r0, #44	; 0x2c
 8011196:	f7ff bb34 	b.w	8010802 <_ZN8touchgfx12DrawableList11setCircularEb>

0801119a <_ZN8touchgfx10ScrollBase8setWidthEs>:
 801119a:	8101      	strh	r1, [r0, #8]
 801119c:	302c      	adds	r0, #44	; 0x2c
 801119e:	f7ff bb1f 	b.w	80107e0 <_ZN8touchgfx12DrawableList8setWidthEs>

080111a2 <_ZN8touchgfx10ScrollBase9setHeightEs>:
 80111a2:	8141      	strh	r1, [r0, #10]
 80111a4:	302c      	adds	r0, #44	; 0x2c
 80111a6:	f7ff bb1e 	b.w	80107e6 <_ZN8touchgfx12DrawableList9setHeightEs>

080111aa <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 80111aa:	302c      	adds	r0, #44	; 0x2c
 80111ac:	f7ff b91e 	b.w	80103ec <_ZNK8touchgfx12DrawableList13getHorizontalEv>

080111b0 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 80111b0:	302c      	adds	r0, #44	; 0x2c
 80111b2:	f7ff b91e 	b.w	80103f2 <_ZNK8touchgfx12DrawableList11getCircularEv>

080111b6 <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 80111b6:	302c      	adds	r0, #44	; 0x2c
 80111b8:	f7ff b921 	b.w	80103fe <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

080111bc <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 80111bc:	302c      	adds	r0, #44	; 0x2c
 80111be:	f7ff b924 	b.w	801040a <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

080111c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80111c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80111c4:	2000      	movs	r0, #0
 80111c6:	b12b      	cbz	r3, 80111d4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80111c8:	b920      	cbnz	r0, 80111d4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80111ca:	1a5a      	subs	r2, r3, r1
 80111cc:	4250      	negs	r0, r2
 80111ce:	4150      	adcs	r0, r2
 80111d0:	699b      	ldr	r3, [r3, #24]
 80111d2:	e7f8      	b.n	80111c6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80111d4:	4770      	bx	lr

080111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80111d6:	2300      	movs	r3, #0
 80111d8:	6148      	str	r0, [r1, #20]
 80111da:	618b      	str	r3, [r1, #24]
 80111dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80111de:	b913      	cbnz	r3, 80111e6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80111e0:	6281      	str	r1, [r0, #40]	; 0x28
 80111e2:	4770      	bx	lr
 80111e4:	4613      	mov	r3, r2
 80111e6:	699a      	ldr	r2, [r3, #24]
 80111e8:	2a00      	cmp	r2, #0
 80111ea:	d1fb      	bne.n	80111e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80111ec:	6199      	str	r1, [r3, #24]
 80111ee:	4770      	bx	lr

080111f0 <_ZN8touchgfx9Container9removeAllEv>:
 80111f0:	2200      	movs	r2, #0
 80111f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80111f4:	b123      	cbz	r3, 8011200 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80111f6:	6999      	ldr	r1, [r3, #24]
 80111f8:	6281      	str	r1, [r0, #40]	; 0x28
 80111fa:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80111fe:	e7f8      	b.n	80111f2 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8011200:	4770      	bx	lr

08011202 <_ZN8touchgfx9Container6unlinkEv>:
 8011202:	2300      	movs	r3, #0
 8011204:	6283      	str	r3, [r0, #40]	; 0x28
 8011206:	4770      	bx	lr

08011208 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8011208:	2200      	movs	r2, #0
 801120a:	8002      	strh	r2, [r0, #0]
 801120c:	8042      	strh	r2, [r0, #2]
 801120e:	8082      	strh	r2, [r0, #4]
 8011210:	80c2      	strh	r2, [r0, #6]
 8011212:	4770      	bx	lr

08011214 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8011214:	b570      	push	{r4, r5, r6, lr}
 8011216:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011218:	460d      	mov	r5, r1
 801121a:	4616      	mov	r6, r2
 801121c:	b13c      	cbz	r4, 801122e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 801121e:	6823      	ldr	r3, [r4, #0]
 8011220:	4620      	mov	r0, r4
 8011222:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011224:	4632      	mov	r2, r6
 8011226:	4629      	mov	r1, r5
 8011228:	4798      	blx	r3
 801122a:	69a4      	ldr	r4, [r4, #24]
 801122c:	e7f6      	b.n	801121c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 801122e:	bd70      	pop	{r4, r5, r6, pc}

08011230 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8011230:	b538      	push	{r3, r4, r5, lr}
 8011232:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011234:	460d      	mov	r5, r1
 8011236:	b134      	cbz	r4, 8011246 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8011238:	682b      	ldr	r3, [r5, #0]
 801123a:	4621      	mov	r1, r4
 801123c:	689b      	ldr	r3, [r3, #8]
 801123e:	4628      	mov	r0, r5
 8011240:	4798      	blx	r3
 8011242:	69a4      	ldr	r4, [r4, #24]
 8011244:	e7f7      	b.n	8011236 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011246:	bd38      	pop	{r3, r4, r5, pc}

08011248 <_ZN8touchgfx9ContainerD1Ev>:
 8011248:	4770      	bx	lr

0801124a <_ZN8touchgfx9ContainerD0Ev>:
 801124a:	b510      	push	{r4, lr}
 801124c:	212c      	movs	r1, #44	; 0x2c
 801124e:	4604      	mov	r4, r0
 8011250:	f019 fb0f 	bl	802a872 <_ZdlPvj>
 8011254:	4620      	mov	r0, r4
 8011256:	bd10      	pop	{r4, pc}

08011258 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8011258:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801125a:	b19b      	cbz	r3, 8011284 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801125c:	428b      	cmp	r3, r1
 801125e:	d109      	bne.n	8011274 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8011260:	699a      	ldr	r2, [r3, #24]
 8011262:	2100      	movs	r1, #0
 8011264:	6159      	str	r1, [r3, #20]
 8011266:	6282      	str	r2, [r0, #40]	; 0x28
 8011268:	b902      	cbnz	r2, 801126c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801126a:	4770      	bx	lr
 801126c:	6199      	str	r1, [r3, #24]
 801126e:	4770      	bx	lr
 8011270:	4613      	mov	r3, r2
 8011272:	b13a      	cbz	r2, 8011284 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011274:	699a      	ldr	r2, [r3, #24]
 8011276:	428a      	cmp	r2, r1
 8011278:	d1fa      	bne.n	8011270 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801127a:	698a      	ldr	r2, [r1, #24]
 801127c:	619a      	str	r2, [r3, #24]
 801127e:	2300      	movs	r3, #0
 8011280:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8011284:	4770      	bx	lr

08011286 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8011286:	b410      	push	{r4}
 8011288:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801128a:	4604      	mov	r4, r0
 801128c:	b92b      	cbnz	r3, 801129a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 801128e:	6803      	ldr	r3, [r0, #0]
 8011290:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011294:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8011296:	4611      	mov	r1, r2
 8011298:	4718      	bx	r3
 801129a:	b941      	cbnz	r1, 80112ae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 801129c:	6193      	str	r3, [r2, #24]
 801129e:	6282      	str	r2, [r0, #40]	; 0x28
 80112a0:	6154      	str	r4, [r2, #20]
 80112a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80112a6:	4770      	bx	lr
 80112a8:	4603      	mov	r3, r0
 80112aa:	2800      	cmp	r0, #0
 80112ac:	d0f9      	beq.n	80112a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80112ae:	4299      	cmp	r1, r3
 80112b0:	6998      	ldr	r0, [r3, #24]
 80112b2:	d1f9      	bne.n	80112a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80112b4:	6190      	str	r0, [r2, #24]
 80112b6:	618a      	str	r2, [r1, #24]
 80112b8:	e7f2      	b.n	80112a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080112ba <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80112ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112be:	461f      	mov	r7, r3
 80112c0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80112c4:	460d      	mov	r5, r1
 80112c6:	4616      	mov	r6, r2
 80112c8:	b103      	cbz	r3, 80112cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80112ca:	6038      	str	r0, [r7, #0]
 80112cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80112ce:	b314      	cbz	r4, 8011316 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80112d0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80112d4:	b1eb      	cbz	r3, 8011312 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80112d6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80112da:	428d      	cmp	r5, r1
 80112dc:	db19      	blt.n	8011312 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80112de:	8923      	ldrh	r3, [r4, #8]
 80112e0:	b289      	uxth	r1, r1
 80112e2:	440b      	add	r3, r1
 80112e4:	b21b      	sxth	r3, r3
 80112e6:	429d      	cmp	r5, r3
 80112e8:	da13      	bge.n	8011312 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80112ea:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80112ee:	4296      	cmp	r6, r2
 80112f0:	db0f      	blt.n	8011312 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80112f2:	8963      	ldrh	r3, [r4, #10]
 80112f4:	b292      	uxth	r2, r2
 80112f6:	4413      	add	r3, r2
 80112f8:	b21b      	sxth	r3, r3
 80112fa:	429e      	cmp	r6, r3
 80112fc:	da09      	bge.n	8011312 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80112fe:	6823      	ldr	r3, [r4, #0]
 8011300:	1ab2      	subs	r2, r6, r2
 8011302:	1a69      	subs	r1, r5, r1
 8011304:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8011308:	b212      	sxth	r2, r2
 801130a:	463b      	mov	r3, r7
 801130c:	b209      	sxth	r1, r1
 801130e:	4620      	mov	r0, r4
 8011310:	47c0      	blx	r8
 8011312:	69a4      	ldr	r4, [r4, #24]
 8011314:	e7db      	b.n	80112ce <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8011316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801131c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 801131c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011320:	4c6e      	ldr	r4, [pc, #440]	; (80114dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8011322:	b0a1      	sub	sp, #132	; 0x84
 8011324:	6824      	ldr	r4, [r4, #0]
 8011326:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8011328:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 801132c:	9303      	str	r3, [sp, #12]
 801132e:	2400      	movs	r4, #0
 8011330:	802c      	strh	r4, [r5, #0]
 8011332:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8011334:	802c      	strh	r4, [r5, #0]
 8011336:	601c      	str	r4, [r3, #0]
 8011338:	4606      	mov	r6, r0
 801133a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801133e:	f7ff ffbc 	bl	80112ba <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011342:	f1b9 0f03 	cmp.w	r9, #3
 8011346:	f340 80c2 	ble.w	80114ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801134a:	4631      	mov	r1, r6
 801134c:	a80c      	add	r0, sp, #48	; 0x30
 801134e:	f006 fb5f 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011352:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8011356:	9306      	str	r3, [sp, #24]
 8011358:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801135c:	9307      	str	r3, [sp, #28]
 801135e:	9b03      	ldr	r3, [sp, #12]
 8011360:	f8d3 a000 	ldr.w	sl, [r3]
 8011364:	f1ba 0f00 	cmp.w	sl, #0
 8011368:	f000 80b4 	beq.w	80114d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 801136c:	4651      	mov	r1, sl
 801136e:	a810      	add	r0, sp, #64	; 0x40
 8011370:	f006 fb4e 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011374:	9b01      	ldr	r3, [sp, #4]
 8011376:	9a06      	ldr	r2, [sp, #24]
 8011378:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 801137c:	189d      	adds	r5, r3, r2
 801137e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8011382:	9a07      	ldr	r2, [sp, #28]
 8011384:	2002      	movs	r0, #2
 8011386:	fb91 f1f0 	sdiv	r1, r1, r0
 801138a:	4419      	add	r1, r3
 801138c:	1a6d      	subs	r5, r5, r1
 801138e:	9b02      	ldr	r3, [sp, #8]
 8011390:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011394:	4413      	add	r3, r2
 8011396:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 801139a:	fb92 f2f0 	sdiv	r2, r2, r0
 801139e:	440a      	add	r2, r1
 80113a0:	1a9b      	subs	r3, r3, r2
 80113a2:	435b      	muls	r3, r3
 80113a4:	fb05 3505 	mla	r5, r5, r5, r3
 80113a8:	4f4d      	ldr	r7, [pc, #308]	; (80114e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80113aa:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80113ac:	ac10      	add	r4, sp, #64	; 0x40
 80113ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80113b0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80113b2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80113b4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80113b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80113b8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80113bc:	f1b9 0f0c 	cmp.w	r9, #12
 80113c0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80113c4:	f04f 0303 	mov.w	r3, #3
 80113c8:	bfc8      	it	gt
 80113ca:	4698      	movgt	r8, r3
 80113cc:	f8cd 9000 	str.w	r9, [sp]
 80113d0:	f04f 0400 	mov.w	r4, #0
 80113d4:	bfdc      	itt	le
 80113d6:	f109 32ff 	addle.w	r2, r9, #4294967295
 80113da:	fb92 f8f3 	sdivle	r8, r2, r3
 80113de:	1c63      	adds	r3, r4, #1
 80113e0:	aa10      	add	r2, sp, #64	; 0x40
 80113e2:	f004 0401 	and.w	r4, r4, #1
 80113e6:	9308      	str	r3, [sp, #32]
 80113e8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80113ec:	9b00      	ldr	r3, [sp, #0]
 80113ee:	fb93 f3f8 	sdiv	r3, r3, r8
 80113f2:	b29b      	uxth	r3, r3
 80113f4:	3404      	adds	r4, #4
 80113f6:	f04f 0b00 	mov.w	fp, #0
 80113fa:	9304      	str	r3, [sp, #16]
 80113fc:	9a04      	ldr	r2, [sp, #16]
 80113fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8011402:	fb13 f302 	smulbb	r3, r3, r2
 8011406:	9a01      	ldr	r2, [sp, #4]
 8011408:	b29b      	uxth	r3, r3
 801140a:	1899      	adds	r1, r3, r2
 801140c:	9305      	str	r3, [sp, #20]
 801140e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011412:	b209      	sxth	r1, r1
 8011414:	4299      	cmp	r1, r3
 8011416:	db4d      	blt.n	80114b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011418:	8932      	ldrh	r2, [r6, #8]
 801141a:	4413      	add	r3, r2
 801141c:	b21b      	sxth	r3, r3
 801141e:	4299      	cmp	r1, r3
 8011420:	da48      	bge.n	80114b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011422:	9b04      	ldr	r3, [sp, #16]
 8011424:	6827      	ldr	r7, [r4, #0]
 8011426:	fb17 f703 	smulbb	r7, r7, r3
 801142a:	9b02      	ldr	r3, [sp, #8]
 801142c:	b2bf      	uxth	r7, r7
 801142e:	18fa      	adds	r2, r7, r3
 8011430:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011434:	b212      	sxth	r2, r2
 8011436:	429a      	cmp	r2, r3
 8011438:	db3c      	blt.n	80114b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801143a:	8970      	ldrh	r0, [r6, #10]
 801143c:	4403      	add	r3, r0
 801143e:	b21b      	sxth	r3, r3
 8011440:	429a      	cmp	r2, r3
 8011442:	da37      	bge.n	80114b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011444:	2300      	movs	r3, #0
 8011446:	930b      	str	r3, [sp, #44]	; 0x2c
 8011448:	4630      	mov	r0, r6
 801144a:	ab0b      	add	r3, sp, #44	; 0x2c
 801144c:	f7ff ff35 	bl	80112ba <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011450:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011452:	b37a      	cbz	r2, 80114b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011454:	4552      	cmp	r2, sl
 8011456:	d02d      	beq.n	80114b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011458:	4611      	mov	r1, r2
 801145a:	a80e      	add	r0, sp, #56	; 0x38
 801145c:	9209      	str	r2, [sp, #36]	; 0x24
 801145e:	f006 fad7 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011462:	9a06      	ldr	r2, [sp, #24]
 8011464:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8011468:	9b01      	ldr	r3, [sp, #4]
 801146a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 801146e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8011472:	4413      	add	r3, r2
 8011474:	f04f 0e02 	mov.w	lr, #2
 8011478:	fb91 f1fe 	sdiv	r1, r1, lr
 801147c:	4401      	add	r1, r0
 801147e:	1a58      	subs	r0, r3, r1
 8011480:	9a07      	ldr	r2, [sp, #28]
 8011482:	9b02      	ldr	r3, [sp, #8]
 8011484:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8011488:	fb9c fcfe 	sdiv	ip, ip, lr
 801148c:	4413      	add	r3, r2
 801148e:	448c      	add	ip, r1
 8011490:	eba3 030c 	sub.w	r3, r3, ip
 8011494:	435b      	muls	r3, r3
 8011496:	fb00 3300 	mla	r3, r0, r0, r3
 801149a:	42ab      	cmp	r3, r5
 801149c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801149e:	d208      	bcs.n	80114b2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80114a0:	9803      	ldr	r0, [sp, #12]
 80114a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80114a4:	6001      	str	r1, [r0, #0]
 80114a6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80114a8:	9805      	ldr	r0, [sp, #20]
 80114aa:	8008      	strh	r0, [r1, #0]
 80114ac:	992b      	ldr	r1, [sp, #172]	; 0xac
 80114ae:	461d      	mov	r5, r3
 80114b0:	800f      	strh	r7, [r1, #0]
 80114b2:	4692      	mov	sl, r2
 80114b4:	f10b 0b01 	add.w	fp, fp, #1
 80114b8:	f1bb 0f04 	cmp.w	fp, #4
 80114bc:	f104 0408 	add.w	r4, r4, #8
 80114c0:	d19c      	bne.n	80113fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80114c2:	9b00      	ldr	r3, [sp, #0]
 80114c4:	9c08      	ldr	r4, [sp, #32]
 80114c6:	444b      	add	r3, r9
 80114c8:	4544      	cmp	r4, r8
 80114ca:	9300      	str	r3, [sp, #0]
 80114cc:	d187      	bne.n	80113de <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80114ce:	b021      	add	sp, #132	; 0x84
 80114d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114d4:	f04f 35ff 	mov.w	r5, #4294967295
 80114d8:	e766      	b.n	80113a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80114da:	bf00      	nop
 80114dc:	200138b4 	.word	0x200138b4
 80114e0:	0802c5b0 	.word	0x0802c5b0

080114e4 <_ZN8touchgfx4RectaNERKS0_>:
 80114e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80114e8:	f9b1 7000 	ldrsh.w	r7, [r1]
 80114ec:	888c      	ldrh	r4, [r1, #4]
 80114ee:	f9b0 9000 	ldrsh.w	r9, [r0]
 80114f2:	443c      	add	r4, r7
 80114f4:	b2a4      	uxth	r4, r4
 80114f6:	fa0f f884 	sxth.w	r8, r4
 80114fa:	45c1      	cmp	r9, r8
 80114fc:	da2f      	bge.n	801155e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80114fe:	8882      	ldrh	r2, [r0, #4]
 8011500:	444a      	add	r2, r9
 8011502:	b292      	uxth	r2, r2
 8011504:	fa0f fe82 	sxth.w	lr, r2
 8011508:	4577      	cmp	r7, lr
 801150a:	da28      	bge.n	801155e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801150c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8011510:	88cb      	ldrh	r3, [r1, #6]
 8011512:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8011516:	442b      	add	r3, r5
 8011518:	b21b      	sxth	r3, r3
 801151a:	429e      	cmp	r6, r3
 801151c:	da1f      	bge.n	801155e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801151e:	88c3      	ldrh	r3, [r0, #6]
 8011520:	4433      	add	r3, r6
 8011522:	b29b      	uxth	r3, r3
 8011524:	fa0f fc83 	sxth.w	ip, r3
 8011528:	4565      	cmp	r5, ip
 801152a:	da18      	bge.n	801155e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801152c:	454f      	cmp	r7, r9
 801152e:	bfb8      	it	lt
 8011530:	464f      	movlt	r7, r9
 8011532:	42b5      	cmp	r5, r6
 8011534:	bfb8      	it	lt
 8011536:	4635      	movlt	r5, r6
 8011538:	45f0      	cmp	r8, lr
 801153a:	bfd8      	it	le
 801153c:	4622      	movle	r2, r4
 801153e:	1bd2      	subs	r2, r2, r7
 8011540:	8082      	strh	r2, [r0, #4]
 8011542:	884a      	ldrh	r2, [r1, #2]
 8011544:	88c9      	ldrh	r1, [r1, #6]
 8011546:	8007      	strh	r7, [r0, #0]
 8011548:	440a      	add	r2, r1
 801154a:	b292      	uxth	r2, r2
 801154c:	b211      	sxth	r1, r2
 801154e:	458c      	cmp	ip, r1
 8011550:	bfa8      	it	ge
 8011552:	4613      	movge	r3, r2
 8011554:	1b5b      	subs	r3, r3, r5
 8011556:	80c3      	strh	r3, [r0, #6]
 8011558:	8045      	strh	r5, [r0, #2]
 801155a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801155e:	2300      	movs	r3, #0
 8011560:	8003      	strh	r3, [r0, #0]
 8011562:	8043      	strh	r3, [r0, #2]
 8011564:	8083      	strh	r3, [r0, #4]
 8011566:	80c3      	strh	r3, [r0, #6]
 8011568:	e7f7      	b.n	801155a <_ZN8touchgfx4RectaNERKS0_+0x76>

0801156a <_ZNK8touchgfx4Rect7isEmptyEv>:
 801156a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801156e:	2b00      	cmp	r3, #0
 8011570:	dd06      	ble.n	8011580 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8011572:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8011576:	2800      	cmp	r0, #0
 8011578:	bfcc      	ite	gt
 801157a:	2000      	movgt	r0, #0
 801157c:	2001      	movle	r0, #1
 801157e:	4770      	bx	lr
 8011580:	2001      	movs	r0, #1
 8011582:	4770      	bx	lr

08011584 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8011584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011588:	2300      	movs	r3, #0
 801158a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801158c:	8003      	strh	r3, [r0, #0]
 801158e:	4604      	mov	r4, r0
 8011590:	8043      	strh	r3, [r0, #2]
 8011592:	8083      	strh	r3, [r0, #4]
 8011594:	80c3      	strh	r3, [r0, #6]
 8011596:	2d00      	cmp	r5, #0
 8011598:	d040      	beq.n	801161c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 801159a:	1d28      	adds	r0, r5, #4
 801159c:	f7ff ffe5 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 80115a0:	b988      	cbnz	r0, 80115c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80115a2:	4620      	mov	r0, r4
 80115a4:	f7ff ffe1 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 80115a8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80115ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80115b0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80115b4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80115b8:	b138      	cbz	r0, 80115ca <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80115ba:	8022      	strh	r2, [r4, #0]
 80115bc:	8063      	strh	r3, [r4, #2]
 80115be:	f8a4 e004 	strh.w	lr, [r4, #4]
 80115c2:	f8a4 c006 	strh.w	ip, [r4, #6]
 80115c6:	69ad      	ldr	r5, [r5, #24]
 80115c8:	e7e5      	b.n	8011596 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80115ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 80115ce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80115d2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80115d6:	4290      	cmp	r0, r2
 80115d8:	4607      	mov	r7, r0
 80115da:	bfa8      	it	ge
 80115dc:	4617      	movge	r7, r2
 80115de:	4472      	add	r2, lr
 80115e0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80115e4:	8027      	strh	r7, [r4, #0]
 80115e6:	4299      	cmp	r1, r3
 80115e8:	460e      	mov	r6, r1
 80115ea:	4440      	add	r0, r8
 80115ec:	bfa8      	it	ge
 80115ee:	461e      	movge	r6, r3
 80115f0:	4471      	add	r1, lr
 80115f2:	4463      	add	r3, ip
 80115f4:	b200      	sxth	r0, r0
 80115f6:	b212      	sxth	r2, r2
 80115f8:	b209      	sxth	r1, r1
 80115fa:	b21b      	sxth	r3, r3
 80115fc:	4290      	cmp	r0, r2
 80115fe:	bfac      	ite	ge
 8011600:	ebc7 0200 	rsbge	r2, r7, r0
 8011604:	ebc7 0202 	rsblt	r2, r7, r2
 8011608:	4299      	cmp	r1, r3
 801160a:	bfac      	ite	ge
 801160c:	ebc6 0301 	rsbge	r3, r6, r1
 8011610:	ebc6 0303 	rsblt	r3, r6, r3
 8011614:	8066      	strh	r6, [r4, #2]
 8011616:	80a2      	strh	r2, [r4, #4]
 8011618:	80e3      	strh	r3, [r4, #6]
 801161a:	e7d4      	b.n	80115c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801161c:	4620      	mov	r0, r4
 801161e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011622 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8011622:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011626:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801162a:	b383      	cbz	r3, 801168e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 801162c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801162e:	b374      	cbz	r4, 801168e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011630:	f9b1 5000 	ldrsh.w	r5, [r1]
 8011634:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8011638:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 801163c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8011640:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011644:	b303      	cbz	r3, 8011688 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011646:	4668      	mov	r0, sp
 8011648:	1d21      	adds	r1, r4, #4
 801164a:	f8ad 5000 	strh.w	r5, [sp]
 801164e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8011652:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011656:	f8ad 8006 	strh.w	r8, [sp, #6]
 801165a:	f7ff ff43 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801165e:	4668      	mov	r0, sp
 8011660:	f7ff ff83 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011664:	b980      	cbnz	r0, 8011688 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011666:	f8bd 3000 	ldrh.w	r3, [sp]
 801166a:	88a2      	ldrh	r2, [r4, #4]
 801166c:	1a9b      	subs	r3, r3, r2
 801166e:	f8ad 3000 	strh.w	r3, [sp]
 8011672:	88e2      	ldrh	r2, [r4, #6]
 8011674:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011678:	1a9b      	subs	r3, r3, r2
 801167a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801167e:	6823      	ldr	r3, [r4, #0]
 8011680:	4669      	mov	r1, sp
 8011682:	689b      	ldr	r3, [r3, #8]
 8011684:	4620      	mov	r0, r4
 8011686:	4798      	blx	r3
 8011688:	69a4      	ldr	r4, [r4, #24]
 801168a:	2c00      	cmp	r4, #0
 801168c:	d1d8      	bne.n	8011640 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801168e:	b002      	add	sp, #8
 8011690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011694 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8011694:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011696:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801169a:	460d      	mov	r5, r1
 801169c:	4616      	mov	r6, r2
 801169e:	b323      	cbz	r3, 80116ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80116a0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80116a2:	b314      	cbz	r4, 80116ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80116a4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80116a8:	b1eb      	cbz	r3, 80116e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80116aa:	6828      	ldr	r0, [r5, #0]
 80116ac:	6869      	ldr	r1, [r5, #4]
 80116ae:	466b      	mov	r3, sp
 80116b0:	c303      	stmia	r3!, {r0, r1}
 80116b2:	4668      	mov	r0, sp
 80116b4:	1d21      	adds	r1, r4, #4
 80116b6:	f7ff ff15 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 80116ba:	4668      	mov	r0, sp
 80116bc:	f7ff ff55 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 80116c0:	b988      	cbnz	r0, 80116e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80116c2:	f8bd 3000 	ldrh.w	r3, [sp]
 80116c6:	88a2      	ldrh	r2, [r4, #4]
 80116c8:	1a9b      	subs	r3, r3, r2
 80116ca:	f8ad 3000 	strh.w	r3, [sp]
 80116ce:	88e2      	ldrh	r2, [r4, #6]
 80116d0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80116d4:	1a9b      	subs	r3, r3, r2
 80116d6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80116da:	6823      	ldr	r3, [r4, #0]
 80116dc:	4632      	mov	r2, r6
 80116de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80116e0:	4669      	mov	r1, sp
 80116e2:	4620      	mov	r0, r4
 80116e4:	4798      	blx	r3
 80116e6:	69a4      	ldr	r4, [r4, #24]
 80116e8:	e7db      	b.n	80116a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80116ea:	b002      	add	sp, #8
 80116ec:	bd70      	pop	{r4, r5, r6, pc}

080116ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80116ee:	b513      	push	{r0, r1, r4, lr}
 80116f0:	6803      	ldr	r3, [r0, #0]
 80116f2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80116f6:	2300      	movs	r3, #0
 80116f8:	e9cd 3300 	strd	r3, r3, [sp]
 80116fc:	466b      	mov	r3, sp
 80116fe:	47a0      	blx	r4
 8011700:	b002      	add	sp, #8
 8011702:	bd10      	pop	{r4, pc}

08011704 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011704:	2301      	movs	r3, #1
 8011706:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801170a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801170e:	4770      	bx	lr

08011710 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8011710:	2301      	movs	r3, #1
 8011712:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011716:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801171a:	4770      	bx	lr

0801171c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801171c:	6843      	ldr	r3, [r0, #4]
 801171e:	2201      	movs	r2, #1
 8011720:	725a      	strb	r2, [r3, #9]
 8011722:	6840      	ldr	r0, [r0, #4]
 8011724:	6803      	ldr	r3, [r0, #0]
 8011726:	691b      	ldr	r3, [r3, #16]
 8011728:	4718      	bx	r3

0801172a <_ZN8touchgfx3HAL8flushDMAEv>:
 801172a:	6840      	ldr	r0, [r0, #4]
 801172c:	6803      	ldr	r3, [r0, #0]
 801172e:	689b      	ldr	r3, [r3, #8]
 8011730:	4718      	bx	r3

08011732 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011732:	b530      	push	{r4, r5, lr}
 8011734:	b08b      	sub	sp, #44	; 0x2c
 8011736:	6804      	ldr	r4, [r0, #0]
 8011738:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801173c:	9509      	str	r5, [sp, #36]	; 0x24
 801173e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011742:	9508      	str	r5, [sp, #32]
 8011744:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011748:	9507      	str	r5, [sp, #28]
 801174a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801174e:	9506      	str	r5, [sp, #24]
 8011750:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011754:	9505      	str	r5, [sp, #20]
 8011756:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801175a:	9504      	str	r5, [sp, #16]
 801175c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8011760:	9503      	str	r5, [sp, #12]
 8011762:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011766:	9502      	str	r5, [sp, #8]
 8011768:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801176c:	e9cd 3500 	strd	r3, r5, [sp]
 8011770:	4613      	mov	r3, r2
 8011772:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011774:	2200      	movs	r2, #0
 8011776:	47a0      	blx	r4
 8011778:	b00b      	add	sp, #44	; 0x2c
 801177a:	bd30      	pop	{r4, r5, pc}

0801177c <_ZN8touchgfx3HAL10beginFrameEv>:
 801177c:	4b04      	ldr	r3, [pc, #16]	; (8011790 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801177e:	781b      	ldrb	r3, [r3, #0]
 8011780:	b123      	cbz	r3, 801178c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011782:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8011786:	f080 0001 	eor.w	r0, r0, #1
 801178a:	4770      	bx	lr
 801178c:	2001      	movs	r0, #1
 801178e:	4770      	bx	lr
 8011790:	200138b2 	.word	0x200138b2

08011794 <_ZN8touchgfx3HAL8endFrameEv>:
 8011794:	b510      	push	{r4, lr}
 8011796:	4604      	mov	r4, r0
 8011798:	6840      	ldr	r0, [r0, #4]
 801179a:	6803      	ldr	r3, [r0, #0]
 801179c:	689b      	ldr	r3, [r3, #8]
 801179e:	4798      	blx	r3
 80117a0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80117a4:	b113      	cbz	r3, 80117ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80117a6:	2301      	movs	r3, #1
 80117a8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80117ac:	bd10      	pop	{r4, pc}

080117ae <_ZN8touchgfx3HAL10initializeEv>:
 80117ae:	b510      	push	{r4, lr}
 80117b0:	4604      	mov	r4, r0
 80117b2:	f7f0 fb9d 	bl	8001ef0 <_ZN8touchgfx10OSWrappers10initializeEv>
 80117b6:	f7f0 faa9 	bl	8001d0c <_ZN8touchgfx4GPIO4initEv>
 80117ba:	6860      	ldr	r0, [r4, #4]
 80117bc:	6803      	ldr	r3, [r0, #0]
 80117be:	68db      	ldr	r3, [r3, #12]
 80117c0:	4798      	blx	r3
 80117c2:	68e0      	ldr	r0, [r4, #12]
 80117c4:	6803      	ldr	r3, [r0, #0]
 80117c6:	689b      	ldr	r3, [r3, #8]
 80117c8:	4798      	blx	r3
 80117ca:	6823      	ldr	r3, [r4, #0]
 80117cc:	4620      	mov	r0, r4
 80117ce:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80117d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80117d4:	4718      	bx	r3
	...

080117d8 <_ZN8touchgfx3HAL4tickEv>:
 80117d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80117da:	6803      	ldr	r3, [r0, #0]
 80117dc:	4d5b      	ldr	r5, [pc, #364]	; (801194c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80117de:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80117e2:	4604      	mov	r4, r0
 80117e4:	4798      	blx	r3
 80117e6:	2800      	cmp	r0, #0
 80117e8:	f000 8095 	beq.w	8011916 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80117ec:	2001      	movs	r0, #1
 80117ee:	f7f0 fa3f 	bl	8001c70 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80117f2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80117f6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80117fa:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80117fe:	2600      	movs	r6, #0
 8011800:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011804:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011808:	b133      	cbz	r3, 8011818 <_ZN8touchgfx3HAL4tickEv+0x40>
 801180a:	6823      	ldr	r3, [r4, #0]
 801180c:	4620      	mov	r0, r4
 801180e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011812:	4798      	blx	r3
 8011814:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011818:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801181c:	6862      	ldr	r2, [r4, #4]
 801181e:	f083 0301 	eor.w	r3, r3, #1
 8011822:	7253      	strb	r3, [r2, #9]
 8011824:	2601      	movs	r6, #1
 8011826:	702e      	strb	r6, [r5, #0]
 8011828:	f004 ff6e 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 801182c:	6803      	ldr	r3, [r0, #0]
 801182e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011830:	4798      	blx	r3
 8011832:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011836:	b90b      	cbnz	r3, 801183c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011838:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801183c:	f004 ff64 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8011840:	6803      	ldr	r3, [r0, #0]
 8011842:	695b      	ldr	r3, [r3, #20]
 8011844:	4798      	blx	r3
 8011846:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011848:	6803      	ldr	r3, [r0, #0]
 801184a:	691b      	ldr	r3, [r3, #16]
 801184c:	4798      	blx	r3
 801184e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011852:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011856:	3b01      	subs	r3, #1
 8011858:	b2db      	uxtb	r3, r3
 801185a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801185e:	b10a      	cbz	r2, 8011864 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011860:	2b00      	cmp	r3, #0
 8011862:	d1eb      	bne.n	801183c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011864:	4a3a      	ldr	r2, [pc, #232]	; (8011950 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011866:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801186a:	7813      	ldrb	r3, [r2, #0]
 801186c:	3301      	adds	r3, #1
 801186e:	b25b      	sxtb	r3, r3
 8011870:	4299      	cmp	r1, r3
 8011872:	7013      	strb	r3, [r2, #0]
 8011874:	dc10      	bgt.n	8011898 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011876:	68e0      	ldr	r0, [r4, #12]
 8011878:	2300      	movs	r3, #0
 801187a:	7013      	strb	r3, [r2, #0]
 801187c:	6803      	ldr	r3, [r0, #0]
 801187e:	aa03      	add	r2, sp, #12
 8011880:	68db      	ldr	r3, [r3, #12]
 8011882:	a902      	add	r1, sp, #8
 8011884:	4798      	blx	r3
 8011886:	6823      	ldr	r3, [r4, #0]
 8011888:	2800      	cmp	r0, #0
 801188a:	d050      	beq.n	801192e <_ZN8touchgfx3HAL4tickEv+0x156>
 801188c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011890:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011894:	4620      	mov	r0, r4
 8011896:	4798      	blx	r3
 8011898:	6960      	ldr	r0, [r4, #20]
 801189a:	2300      	movs	r3, #0
 801189c:	f88d 3007 	strb.w	r3, [sp, #7]
 80118a0:	b158      	cbz	r0, 80118ba <_ZN8touchgfx3HAL4tickEv+0xe2>
 80118a2:	6803      	ldr	r3, [r0, #0]
 80118a4:	f10d 0107 	add.w	r1, sp, #7
 80118a8:	68db      	ldr	r3, [r3, #12]
 80118aa:	4798      	blx	r3
 80118ac:	b128      	cbz	r0, 80118ba <_ZN8touchgfx3HAL4tickEv+0xe2>
 80118ae:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80118b0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80118b4:	6803      	ldr	r3, [r0, #0]
 80118b6:	68db      	ldr	r3, [r3, #12]
 80118b8:	4798      	blx	r3
 80118ba:	f104 001c 	add.w	r0, r4, #28
 80118be:	f015 fef7 	bl	80276b0 <_ZN8touchgfx8Gestures4tickEv>
 80118c2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80118c6:	b30b      	cbz	r3, 801190c <_ZN8touchgfx3HAL4tickEv+0x134>
 80118c8:	6920      	ldr	r0, [r4, #16]
 80118ca:	6803      	ldr	r3, [r0, #0]
 80118cc:	691b      	ldr	r3, [r3, #16]
 80118ce:	4798      	blx	r3
 80118d0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80118d2:	4606      	mov	r6, r0
 80118d4:	b903      	cbnz	r3, 80118d8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80118d6:	6760      	str	r0, [r4, #116]	; 0x74
 80118d8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80118da:	4a1e      	ldr	r2, [pc, #120]	; (8011954 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80118dc:	1af3      	subs	r3, r6, r3
 80118de:	4293      	cmp	r3, r2
 80118e0:	d914      	bls.n	801190c <_ZN8touchgfx3HAL4tickEv+0x134>
 80118e2:	6920      	ldr	r0, [r4, #16]
 80118e4:	6803      	ldr	r3, [r0, #0]
 80118e6:	699b      	ldr	r3, [r3, #24]
 80118e8:	4798      	blx	r3
 80118ea:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80118ec:	2264      	movs	r2, #100	; 0x64
 80118ee:	1af3      	subs	r3, r6, r3
 80118f0:	fbb3 f3f2 	udiv	r3, r3, r2
 80118f4:	fbb0 f0f3 	udiv	r0, r0, r3
 80118f8:	2800      	cmp	r0, #0
 80118fa:	dc1d      	bgt.n	8011938 <_ZN8touchgfx3HAL4tickEv+0x160>
 80118fc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011900:	6920      	ldr	r0, [r4, #16]
 8011902:	6803      	ldr	r3, [r0, #0]
 8011904:	2100      	movs	r1, #0
 8011906:	69db      	ldr	r3, [r3, #28]
 8011908:	4798      	blx	r3
 801190a:	6766      	str	r6, [r4, #116]	; 0x74
 801190c:	f004 fefc 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 8011910:	6803      	ldr	r3, [r0, #0]
 8011912:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011914:	4798      	blx	r3
 8011916:	6823      	ldr	r3, [r4, #0]
 8011918:	4620      	mov	r0, r4
 801191a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801191e:	4798      	blx	r3
 8011920:	2001      	movs	r0, #1
 8011922:	f7f0 f9bd 	bl	8001ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011926:	2300      	movs	r3, #0
 8011928:	702b      	strb	r3, [r5, #0]
 801192a:	b004      	add	sp, #16
 801192c:	bd70      	pop	{r4, r5, r6, pc}
 801192e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011932:	4620      	mov	r0, r4
 8011934:	4798      	blx	r3
 8011936:	e7af      	b.n	8011898 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011938:	2863      	cmp	r0, #99	; 0x63
 801193a:	bfcb      	itete	gt
 801193c:	2300      	movgt	r3, #0
 801193e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011942:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011946:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801194a:	e7d9      	b.n	8011900 <_ZN8touchgfx3HAL4tickEv+0x128>
 801194c:	200138b8 	.word	0x200138b8
 8011950:	200138b9 	.word	0x200138b9
 8011954:	05f5e100 	.word	0x05f5e100

08011958 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011958:	b510      	push	{r4, lr}
 801195a:	4604      	mov	r4, r0
 801195c:	f7f0 faf8 	bl	8001f50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011960:	6863      	ldr	r3, [r4, #4]
 8011962:	2200      	movs	r2, #0
 8011964:	729a      	strb	r2, [r3, #10]
 8011966:	bd10      	pop	{r4, pc}

08011968 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011968:	65c1      	str	r1, [r0, #92]	; 0x5c
 801196a:	301c      	adds	r0, #28
 801196c:	f015 be9e 	b.w	80276ac <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011970 <_ZN8touchgfx3HAL5touchEll>:
 8011970:	b530      	push	{r4, r5, lr}
 8011972:	b087      	sub	sp, #28
 8011974:	4604      	mov	r4, r0
 8011976:	a804      	add	r0, sp, #16
 8011978:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801197c:	f004 fc90 	bl	80162a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011980:	9b04      	ldr	r3, [sp, #16]
 8011982:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011986:	a906      	add	r1, sp, #24
 8011988:	9b05      	ldr	r3, [sp, #20]
 801198a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801198e:	a803      	add	r0, sp, #12
 8011990:	f004 fcd8 	bl	8016344 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011994:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011998:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801199c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80119a0:	f104 001c 	add.w	r0, r4, #28
 80119a4:	b189      	cbz	r1, 80119ca <_ZN8touchgfx3HAL5touchEll+0x5a>
 80119a6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80119aa:	9300      	str	r3, [sp, #0]
 80119ac:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80119b0:	4613      	mov	r3, r2
 80119b2:	462a      	mov	r2, r5
 80119b4:	f015 fe8a 	bl	80276cc <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80119b8:	b128      	cbz	r0, 80119c6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80119ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80119be:	6623      	str	r3, [r4, #96]	; 0x60
 80119c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80119c4:	6663      	str	r3, [r4, #100]	; 0x64
 80119c6:	b007      	add	sp, #28
 80119c8:	bd30      	pop	{r4, r5, pc}
 80119ca:	f015 febf 	bl	802774c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80119ce:	2301      	movs	r3, #1
 80119d0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80119d4:	e7f1      	b.n	80119ba <_ZN8touchgfx3HAL5touchEll+0x4a>

080119d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80119d6:	b510      	push	{r4, lr}
 80119d8:	2b00      	cmp	r3, #0
 80119da:	d046      	beq.n	8011a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80119dc:	ea81 0002 	eor.w	r0, r1, r2
 80119e0:	07c4      	lsls	r4, r0, #31
 80119e2:	d508      	bpl.n	80119f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80119e4:	440b      	add	r3, r1
 80119e6:	3a01      	subs	r2, #1
 80119e8:	428b      	cmp	r3, r1
 80119ea:	d93e      	bls.n	8011a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80119ec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80119f0:	f801 0b01 	strb.w	r0, [r1], #1
 80119f4:	e7f8      	b.n	80119e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80119f6:	07d0      	lsls	r0, r2, #31
 80119f8:	bf42      	ittt	mi
 80119fa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80119fe:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011a02:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011a06:	2b01      	cmp	r3, #1
 8011a08:	d911      	bls.n	8011a2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011a0a:	ea81 0402 	eor.w	r4, r1, r2
 8011a0e:	07a4      	lsls	r4, r4, #30
 8011a10:	4610      	mov	r0, r2
 8011a12:	d022      	beq.n	8011a5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011a14:	f023 0401 	bic.w	r4, r3, #1
 8011a18:	440c      	add	r4, r1
 8011a1a:	428c      	cmp	r4, r1
 8011a1c:	4602      	mov	r2, r0
 8011a1e:	d904      	bls.n	8011a2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011a20:	8812      	ldrh	r2, [r2, #0]
 8011a22:	f821 2b02 	strh.w	r2, [r1], #2
 8011a26:	3002      	adds	r0, #2
 8011a28:	e7f7      	b.n	8011a1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011a2a:	f003 0301 	and.w	r3, r3, #1
 8011a2e:	f023 0003 	bic.w	r0, r3, #3
 8011a32:	4408      	add	r0, r1
 8011a34:	4288      	cmp	r0, r1
 8011a36:	4614      	mov	r4, r2
 8011a38:	d904      	bls.n	8011a44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011a3a:	6824      	ldr	r4, [r4, #0]
 8011a3c:	f841 4b04 	str.w	r4, [r1], #4
 8011a40:	3204      	adds	r2, #4
 8011a42:	e7f7      	b.n	8011a34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011a44:	f003 0303 	and.w	r3, r3, #3
 8011a48:	440b      	add	r3, r1
 8011a4a:	3a01      	subs	r2, #1
 8011a4c:	428b      	cmp	r3, r1
 8011a4e:	d90c      	bls.n	8011a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011a50:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011a54:	f801 0b01 	strb.w	r0, [r1], #1
 8011a58:	e7f8      	b.n	8011a4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011a5a:	0790      	lsls	r0, r2, #30
 8011a5c:	d0e7      	beq.n	8011a2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011a5e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011a62:	f821 0b02 	strh.w	r0, [r1], #2
 8011a66:	3b02      	subs	r3, #2
 8011a68:	e7e1      	b.n	8011a2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011a6a:	2001      	movs	r0, #1
 8011a6c:	bd10      	pop	{r4, pc}

08011a6e <_ZN8touchgfx3HAL7noTouchEv>:
 8011a6e:	b510      	push	{r4, lr}
 8011a70:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011a74:	4604      	mov	r4, r0
 8011a76:	b153      	cbz	r3, 8011a8e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011a78:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011a7c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011a80:	2101      	movs	r1, #1
 8011a82:	301c      	adds	r0, #28
 8011a84:	f015 fe62 	bl	802774c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011a88:	2300      	movs	r3, #0
 8011a8a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011a8e:	bd10      	pop	{r4, pc}

08011a90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011a90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a94:	b085      	sub	sp, #20
 8011a96:	ad04      	add	r5, sp, #16
 8011a98:	4604      	mov	r4, r0
 8011a9a:	2000      	movs	r0, #0
 8011a9c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011aa0:	69a0      	ldr	r0, [r4, #24]
 8011aa2:	6806      	ldr	r6, [r0, #0]
 8011aa4:	9501      	str	r5, [sp, #4]
 8011aa6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011aaa:	9500      	str	r5, [sp, #0]
 8011aac:	6835      	ldr	r5, [r6, #0]
 8011aae:	4699      	mov	r9, r3
 8011ab0:	460f      	mov	r7, r1
 8011ab2:	4690      	mov	r8, r2
 8011ab4:	47a8      	blx	r5
 8011ab6:	4d10      	ldr	r5, [pc, #64]	; (8011af8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011ab8:	4606      	mov	r6, r0
 8011aba:	f8a5 9000 	strh.w	r9, [r5]
 8011abe:	f7f2 fd17 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8011ac2:	6803      	ldr	r3, [r0, #0]
 8011ac4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ac6:	4798      	blx	r3
 8011ac8:	b128      	cbz	r0, 8011ad6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011aca:	2801      	cmp	r0, #1
 8011acc:	d00b      	beq.n	8011ae6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011ace:	4630      	mov	r0, r6
 8011ad0:	b005      	add	sp, #20
 8011ad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ad6:	882b      	ldrh	r3, [r5, #0]
 8011ad8:	fb08 7203 	mla	r2, r8, r3, r7
 8011adc:	9b03      	ldr	r3, [sp, #12]
 8011ade:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011ae2:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011ae4:	e7f3      	b.n	8011ace <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011ae6:	882a      	ldrh	r2, [r5, #0]
 8011ae8:	9b03      	ldr	r3, [sp, #12]
 8011aea:	fb08 7202 	mla	r2, r8, r2, r7
 8011aee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011af2:	1a9a      	subs	r2, r3, r2
 8011af4:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011af6:	e7ea      	b.n	8011ace <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011af8:	200138ae 	.word	0x200138ae

08011afc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011afc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011afe:	b08b      	sub	sp, #44	; 0x2c
 8011b00:	4617      	mov	r7, r2
 8011b02:	4604      	mov	r4, r0
 8011b04:	460e      	mov	r6, r1
 8011b06:	461d      	mov	r5, r3
 8011b08:	f7f2 fcf2 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8011b0c:	6803      	ldr	r3, [r0, #0]
 8011b0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b10:	4798      	blx	r3
 8011b12:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011b16:	9007      	str	r0, [sp, #28]
 8011b18:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011b1c:	4b0d      	ldr	r3, [pc, #52]	; (8011b54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011b1e:	6822      	ldr	r2, [r4, #0]
 8011b20:	881b      	ldrh	r3, [r3, #0]
 8011b22:	9306      	str	r3, [sp, #24]
 8011b24:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011b28:	9305      	str	r3, [sp, #20]
 8011b2a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011b2e:	9304      	str	r3, [sp, #16]
 8011b30:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011b34:	9303      	str	r3, [sp, #12]
 8011b36:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011b3a:	9302      	str	r3, [sp, #8]
 8011b3c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011b40:	e9cd 5300 	strd	r5, r3, [sp]
 8011b44:	4631      	mov	r1, r6
 8011b46:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011b48:	463b      	mov	r3, r7
 8011b4a:	2200      	movs	r2, #0
 8011b4c:	4620      	mov	r0, r4
 8011b4e:	47a8      	blx	r5
 8011b50:	b00b      	add	sp, #44	; 0x2c
 8011b52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b54:	200138ae 	.word	0x200138ae

08011b58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011b58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b5c:	4698      	mov	r8, r3
 8011b5e:	6803      	ldr	r3, [r0, #0]
 8011b60:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011b62:	4b15      	ldr	r3, [pc, #84]	; (8011bb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011b64:	b08b      	sub	sp, #44	; 0x2c
 8011b66:	4617      	mov	r7, r2
 8011b68:	f8b3 9000 	ldrh.w	r9, [r3]
 8011b6c:	460e      	mov	r6, r1
 8011b6e:	4604      	mov	r4, r0
 8011b70:	f7f2 fcbe 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8011b74:	6803      	ldr	r3, [r0, #0]
 8011b76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b78:	4798      	blx	r3
 8011b7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011b7e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011b82:	2302      	movs	r3, #2
 8011b84:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011b88:	2301      	movs	r3, #1
 8011b8a:	9305      	str	r3, [sp, #20]
 8011b8c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011b90:	9304      	str	r3, [sp, #16]
 8011b92:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011b96:	9303      	str	r3, [sp, #12]
 8011b98:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011b9c:	9302      	str	r3, [sp, #8]
 8011b9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011ba2:	2200      	movs	r2, #0
 8011ba4:	e9cd 8300 	strd	r8, r3, [sp]
 8011ba8:	4631      	mov	r1, r6
 8011baa:	463b      	mov	r3, r7
 8011bac:	4620      	mov	r0, r4
 8011bae:	47a8      	blx	r5
 8011bb0:	b00b      	add	sp, #44	; 0x2c
 8011bb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011bb6:	bf00      	nop
 8011bb8:	200138ae 	.word	0x200138ae

08011bbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011bbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011bc0:	4698      	mov	r8, r3
 8011bc2:	6803      	ldr	r3, [r0, #0]
 8011bc4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011bc6:	4b11      	ldr	r3, [pc, #68]	; (8011c0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011bc8:	b087      	sub	sp, #28
 8011bca:	f8b3 9000 	ldrh.w	r9, [r3]
 8011bce:	460e      	mov	r6, r1
 8011bd0:	4617      	mov	r7, r2
 8011bd2:	4604      	mov	r4, r0
 8011bd4:	f7f2 fc8c 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8011bd8:	6803      	ldr	r3, [r0, #0]
 8011bda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011bdc:	4798      	blx	r3
 8011bde:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011be2:	f8cd 900c 	str.w	r9, [sp, #12]
 8011be6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011bea:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011bee:	9302      	str	r3, [sp, #8]
 8011bf0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011bf4:	9301      	str	r3, [sp, #4]
 8011bf6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011bfa:	9300      	str	r3, [sp, #0]
 8011bfc:	463a      	mov	r2, r7
 8011bfe:	4643      	mov	r3, r8
 8011c00:	4631      	mov	r1, r6
 8011c02:	4620      	mov	r0, r4
 8011c04:	47a8      	blx	r5
 8011c06:	b007      	add	sp, #28
 8011c08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c0c:	200138ae 	.word	0x200138ae

08011c10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c14:	4604      	mov	r4, r0
 8011c16:	b08f      	sub	sp, #60	; 0x3c
 8011c18:	4610      	mov	r0, r2
 8011c1a:	460d      	mov	r5, r1
 8011c1c:	4691      	mov	r9, r2
 8011c1e:	461e      	mov	r6, r3
 8011c20:	f008 f92e 	bl	8019e80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011c24:	2800      	cmp	r0, #0
 8011c26:	f000 809d 	beq.w	8011d64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011c2a:	6823      	ldr	r3, [r4, #0]
 8011c2c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011dc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011c30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011c32:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011dcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011c36:	4f61      	ldr	r7, [pc, #388]	; (8011dbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011c38:	4620      	mov	r0, r4
 8011c3a:	4798      	blx	r3
 8011c3c:	6823      	ldr	r3, [r4, #0]
 8011c3e:	4620      	mov	r0, r4
 8011c40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c42:	4798      	blx	r3
 8011c44:	f8bb 3000 	ldrh.w	r3, [fp]
 8011c48:	9301      	str	r3, [sp, #4]
 8011c4a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011c4e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011c52:	9302      	str	r3, [sp, #8]
 8011c54:	883b      	ldrh	r3, [r7, #0]
 8011c56:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011c5a:	9303      	str	r3, [sp, #12]
 8011c5c:	4b58      	ldr	r3, [pc, #352]	; (8011dc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011c5e:	9305      	str	r3, [sp, #20]
 8011c60:	881a      	ldrh	r2, [r3, #0]
 8011c62:	9204      	str	r2, [sp, #16]
 8011c64:	4640      	mov	r0, r8
 8011c66:	f008 f99f 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011c6a:	8038      	strh	r0, [r7, #0]
 8011c6c:	4640      	mov	r0, r8
 8011c6e:	f008 f9cf 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011c72:	9b05      	ldr	r3, [sp, #20]
 8011c74:	b280      	uxth	r0, r0
 8011c76:	8018      	strh	r0, [r3, #0]
 8011c78:	4b52      	ldr	r3, [pc, #328]	; (8011dc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011c7a:	781b      	ldrb	r3, [r3, #0]
 8011c7c:	2b00      	cmp	r3, #0
 8011c7e:	d174      	bne.n	8011d6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011c80:	883b      	ldrh	r3, [r7, #0]
 8011c82:	f8ab 3000 	strh.w	r3, [fp]
 8011c86:	f8aa 0000 	strh.w	r0, [sl]
 8011c8a:	4648      	mov	r0, r9
 8011c8c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011c90:	f008 f8f6 	bl	8019e80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011c94:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011c98:	2200      	movs	r2, #0
 8011c9a:	4611      	mov	r1, r2
 8011c9c:	4628      	mov	r0, r5
 8011c9e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011ca2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011ca6:	f7f0 fdce 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8011caa:	2301      	movs	r3, #1
 8011cac:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011cb0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011cb4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011cb8:	2b00      	cmp	r3, #0
 8011cba:	dd5c      	ble.n	8011d76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011cbc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011cc0:	2b00      	cmp	r3, #0
 8011cc2:	dd58      	ble.n	8011d76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011cc4:	462a      	mov	r2, r5
 8011cc6:	ab0a      	add	r3, sp, #40	; 0x28
 8011cc8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011ccc:	6851      	ldr	r1, [r2, #4]
 8011cce:	c303      	stmia	r3!, {r0, r1}
 8011cd0:	4631      	mov	r1, r6
 8011cd2:	a80a      	add	r0, sp, #40	; 0x28
 8011cd4:	f7ff fc06 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8011cd8:	4b38      	ldr	r3, [pc, #224]	; (8011dbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011cda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011cde:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011ce2:	2100      	movs	r1, #0
 8011ce4:	aa0a      	add	r2, sp, #40	; 0x28
 8011ce6:	4b36      	ldr	r3, [pc, #216]	; (8011dc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011ce8:	910c      	str	r1, [sp, #48]	; 0x30
 8011cea:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011cee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011cf2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011cf6:	ab08      	add	r3, sp, #32
 8011cf8:	e883 0003 	stmia.w	r3, {r0, r1}
 8011cfc:	4618      	mov	r0, r3
 8011cfe:	a90c      	add	r1, sp, #48	; 0x30
 8011d00:	f7ff fbf0 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8011d04:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011d06:	2b00      	cmp	r3, #0
 8011d08:	d13c      	bne.n	8011d84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011d0a:	2000      	movs	r0, #0
 8011d0c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011d10:	2600      	movs	r6, #0
 8011d12:	682a      	ldr	r2, [r5, #0]
 8011d14:	696b      	ldr	r3, [r5, #20]
 8011d16:	616e      	str	r6, [r5, #20]
 8011d18:	9305      	str	r3, [sp, #20]
 8011d1a:	6892      	ldr	r2, [r2, #8]
 8011d1c:	a908      	add	r1, sp, #32
 8011d1e:	4628      	mov	r0, r5
 8011d20:	4790      	blx	r2
 8011d22:	9b05      	ldr	r3, [sp, #20]
 8011d24:	616b      	str	r3, [r5, #20]
 8011d26:	4652      	mov	r2, sl
 8011d28:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011d2c:	4649      	mov	r1, r9
 8011d2e:	4628      	mov	r0, r5
 8011d30:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011d34:	f7f0 fd87 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8011d38:	4b23      	ldr	r3, [pc, #140]	; (8011dc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011d3a:	9a01      	ldr	r2, [sp, #4]
 8011d3c:	801a      	strh	r2, [r3, #0]
 8011d3e:	4b23      	ldr	r3, [pc, #140]	; (8011dcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011d40:	9a02      	ldr	r2, [sp, #8]
 8011d42:	801a      	strh	r2, [r3, #0]
 8011d44:	4b1d      	ldr	r3, [pc, #116]	; (8011dbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011d46:	9a03      	ldr	r2, [sp, #12]
 8011d48:	801a      	strh	r2, [r3, #0]
 8011d4a:	4b1d      	ldr	r3, [pc, #116]	; (8011dc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011d4c:	9a04      	ldr	r2, [sp, #16]
 8011d4e:	801a      	strh	r2, [r3, #0]
 8011d50:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011d54:	6823      	ldr	r3, [r4, #0]
 8011d56:	4620      	mov	r0, r4
 8011d58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011d5a:	4798      	blx	r3
 8011d5c:	6823      	ldr	r3, [r4, #0]
 8011d5e:	4620      	mov	r0, r4
 8011d60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d62:	4798      	blx	r3
 8011d64:	b00f      	add	sp, #60	; 0x3c
 8011d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d6a:	883b      	ldrh	r3, [r7, #0]
 8011d6c:	f8ab 0000 	strh.w	r0, [fp]
 8011d70:	f8aa 3000 	strh.w	r3, [sl]
 8011d74:	e789      	b.n	8011c8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011d76:	462a      	mov	r2, r5
 8011d78:	ab0a      	add	r3, sp, #40	; 0x28
 8011d7a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011d7e:	6851      	ldr	r1, [r2, #4]
 8011d80:	c303      	stmia	r3!, {r0, r1}
 8011d82:	e7a9      	b.n	8011cd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011d84:	a807      	add	r0, sp, #28
 8011d86:	f008 fa7f 	bl	801a288 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011d8a:	4606      	mov	r6, r0
 8011d8c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011d8e:	6803      	ldr	r3, [r0, #0]
 8011d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d92:	4798      	blx	r3
 8011d94:	4286      	cmp	r6, r0
 8011d96:	d1b8      	bne.n	8011d0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011d98:	f7f2 fbaa 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8011d9c:	6803      	ldr	r3, [r0, #0]
 8011d9e:	4606      	mov	r6, r0
 8011da0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011da2:	9305      	str	r3, [sp, #20]
 8011da4:	a807      	add	r0, sp, #28
 8011da6:	f008 fa6f 	bl	801a288 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011daa:	9b05      	ldr	r3, [sp, #20]
 8011dac:	4601      	mov	r1, r0
 8011dae:	4630      	mov	r0, r6
 8011db0:	4798      	blx	r3
 8011db2:	f080 0001 	eor.w	r0, r0, #1
 8011db6:	b2c0      	uxtb	r0, r0
 8011db8:	e7a8      	b.n	8011d0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011dba:	bf00      	nop
 8011dbc:	200138a8 	.word	0x200138a8
 8011dc0:	200138aa 	.word	0x200138aa
 8011dc4:	200138ac 	.word	0x200138ac
 8011dc8:	200138ae 	.word	0x200138ae
 8011dcc:	200138b0 	.word	0x200138b0

08011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011dd0:	b510      	push	{r4, lr}
 8011dd2:	4b07      	ldr	r3, [pc, #28]	; (8011df0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011dd4:	781b      	ldrb	r3, [r3, #0]
 8011dd6:	4604      	mov	r4, r0
 8011dd8:	b13b      	cbz	r3, 8011dea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011dda:	6803      	ldr	r3, [r0, #0]
 8011ddc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011dde:	4798      	blx	r3
 8011de0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011de2:	4283      	cmp	r3, r0
 8011de4:	d101      	bne.n	8011dea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011de6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011de8:	bd10      	pop	{r4, pc}
 8011dea:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011dec:	e7fc      	b.n	8011de8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011dee:	bf00      	nop
 8011df0:	200138b2 	.word	0x200138b2

08011df4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011df8:	b08a      	sub	sp, #40	; 0x28
 8011dfa:	461d      	mov	r5, r3
 8011dfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011e00:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011e04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011e08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011e0c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011e10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011e14:	2400      	movs	r4, #0
 8011e16:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011e1a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011e1e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011e22:	4690      	mov	r8, r2
 8011e24:	4607      	mov	r7, r0
 8011e26:	9404      	str	r4, [sp, #16]
 8011e28:	f88d 4020 	strb.w	r4, [sp, #32]
 8011e2c:	f7ff ffd0 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011e30:	fb06 8505 	mla	r5, r6, r5, r8
 8011e34:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011e38:	6878      	ldr	r0, [r7, #4]
 8011e3a:	9505      	str	r5, [sp, #20]
 8011e3c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011e40:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011e44:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011e48:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011e4c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011e50:	6803      	ldr	r3, [r0, #0]
 8011e52:	a901      	add	r1, sp, #4
 8011e54:	685b      	ldr	r3, [r3, #4]
 8011e56:	4798      	blx	r3
 8011e58:	b00a      	add	sp, #40	; 0x28
 8011e5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011e5e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011e5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e62:	b08b      	sub	sp, #44	; 0x2c
 8011e64:	2400      	movs	r4, #0
 8011e66:	461d      	mov	r5, r3
 8011e68:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011e6c:	4688      	mov	r8, r1
 8011e6e:	4691      	mov	r9, r2
 8011e70:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011e74:	9404      	str	r4, [sp, #16]
 8011e76:	4607      	mov	r7, r0
 8011e78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011e7c:	f7ff ffa8 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011e80:	fb06 9505 	mla	r5, r6, r5, r9
 8011e84:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011e88:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011e8c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011e90:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011e94:	6878      	ldr	r0, [r7, #4]
 8011e96:	9505      	str	r5, [sp, #20]
 8011e98:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011e9c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011ea0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011ea4:	f8cd 8010 	str.w	r8, [sp, #16]
 8011ea8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011eac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011eb0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011eb4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011eb8:	6803      	ldr	r3, [r0, #0]
 8011eba:	a901      	add	r1, sp, #4
 8011ebc:	685b      	ldr	r3, [r3, #4]
 8011ebe:	4798      	blx	r3
 8011ec0:	b00b      	add	sp, #44	; 0x2c
 8011ec2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011ec8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ecc:	b08a      	sub	sp, #40	; 0x28
 8011ece:	4698      	mov	r8, r3
 8011ed0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011ed4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011ed8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011edc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011ee0:	2300      	movs	r3, #0
 8011ee2:	2d0b      	cmp	r5, #11
 8011ee4:	4606      	mov	r6, r0
 8011ee6:	9304      	str	r3, [sp, #16]
 8011ee8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011eec:	d138      	bne.n	8011f60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011eee:	2380      	movs	r3, #128	; 0x80
 8011ef0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011ef4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011ef8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011efc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011f00:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011f04:	f88d 0020 	strb.w	r0, [sp, #32]
 8011f08:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011f0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011f10:	4630      	mov	r0, r6
 8011f12:	9203      	str	r2, [sp, #12]
 8011f14:	f7ff ff5c 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011f18:	2c0b      	cmp	r4, #11
 8011f1a:	bf98      	it	ls
 8011f1c:	4b1b      	ldrls	r3, [pc, #108]	; (8011f8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011f1e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011f22:	bf98      	it	ls
 8011f24:	5d19      	ldrbls	r1, [r3, r4]
 8011f26:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011f2a:	bf88      	it	hi
 8011f2c:	2100      	movhi	r1, #0
 8011f2e:	fb02 8307 	mla	r3, r2, r7, r8
 8011f32:	10c9      	asrs	r1, r1, #3
 8011f34:	fb01 0003 	mla	r0, r1, r3, r0
 8011f38:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011f3c:	9005      	str	r0, [sp, #20]
 8011f3e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011f42:	6870      	ldr	r0, [r6, #4]
 8011f44:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011f48:	2300      	movs	r3, #0
 8011f4a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011f4e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011f52:	6803      	ldr	r3, [r0, #0]
 8011f54:	a901      	add	r1, sp, #4
 8011f56:	685b      	ldr	r3, [r3, #4]
 8011f58:	4798      	blx	r3
 8011f5a:	b00a      	add	sp, #40	; 0x28
 8011f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f60:	2d02      	cmp	r5, #2
 8011f62:	d109      	bne.n	8011f78 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011f64:	28ff      	cmp	r0, #255	; 0xff
 8011f66:	d105      	bne.n	8011f74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011f68:	f1bc 0f00 	cmp.w	ip, #0
 8011f6c:	bf14      	ite	ne
 8011f6e:	2340      	movne	r3, #64	; 0x40
 8011f70:	2320      	moveq	r3, #32
 8011f72:	e7bd      	b.n	8011ef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011f74:	2340      	movs	r3, #64	; 0x40
 8011f76:	e7bb      	b.n	8011ef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011f78:	28ff      	cmp	r0, #255	; 0xff
 8011f7a:	d105      	bne.n	8011f88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011f7c:	f1bc 0f00 	cmp.w	ip, #0
 8011f80:	bf14      	ite	ne
 8011f82:	2304      	movne	r3, #4
 8011f84:	2301      	moveq	r3, #1
 8011f86:	e7b3      	b.n	8011ef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011f88:	2304      	movs	r3, #4
 8011f8a:	e7b1      	b.n	8011ef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011f8c:	0802fa80 	.word	0x0802fa80

08011f90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f94:	b08b      	sub	sp, #44	; 0x2c
 8011f96:	461d      	mov	r5, r3
 8011f98:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011f9c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011fa0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011fa4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011fa8:	bf14      	ite	ne
 8011faa:	2308      	movne	r3, #8
 8011fac:	2302      	moveq	r3, #2
 8011fae:	2400      	movs	r4, #0
 8011fb0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011fb4:	4688      	mov	r8, r1
 8011fb6:	4693      	mov	fp, r2
 8011fb8:	9404      	str	r4, [sp, #16]
 8011fba:	4607      	mov	r7, r0
 8011fbc:	f7ff ff08 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011fc0:	2e0b      	cmp	r6, #11
 8011fc2:	bf98      	it	ls
 8011fc4:	4b15      	ldrls	r3, [pc, #84]	; (801201c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011fc6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011fca:	bf98      	it	ls
 8011fcc:	5d9c      	ldrbls	r4, [r3, r6]
 8011fce:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011fd2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011fd6:	fb05 b50a 	mla	r5, r5, sl, fp
 8011fda:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011fde:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011fe2:	10e4      	asrs	r4, r4, #3
 8011fe4:	fb04 0405 	mla	r4, r4, r5, r0
 8011fe8:	2300      	movs	r3, #0
 8011fea:	6878      	ldr	r0, [r7, #4]
 8011fec:	9405      	str	r4, [sp, #20]
 8011fee:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011ff2:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011ff6:	f8cd 8010 	str.w	r8, [sp, #16]
 8011ffa:	f88d 9020 	strb.w	r9, [sp, #32]
 8011ffe:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8012002:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012006:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801200a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801200e:	6803      	ldr	r3, [r0, #0]
 8012010:	a901      	add	r1, sp, #4
 8012012:	685b      	ldr	r3, [r3, #4]
 8012014:	4798      	blx	r3
 8012016:	b00b      	add	sp, #44	; 0x2c
 8012018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801201c:	0802fa80 	.word	0x0802fa80

08012020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012024:	461e      	mov	r6, r3
 8012026:	4b0a      	ldr	r3, [pc, #40]	; (8012050 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012028:	460f      	mov	r7, r1
 801202a:	881d      	ldrh	r5, [r3, #0]
 801202c:	4690      	mov	r8, r2
 801202e:	f7f2 fa5f 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8012032:	6803      	ldr	r3, [r0, #0]
 8012034:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012036:	4798      	blx	r3
 8012038:	280b      	cmp	r0, #11
 801203a:	bf9a      	itte	ls
 801203c:	4b05      	ldrls	r3, [pc, #20]	; (8012054 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801203e:	5c1c      	ldrbls	r4, [r3, r0]
 8012040:	2400      	movhi	r4, #0
 8012042:	fb08 7005 	mla	r0, r8, r5, r7
 8012046:	10e4      	asrs	r4, r4, #3
 8012048:	fb04 6000 	mla	r0, r4, r0, r6
 801204c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012050:	200138ae 	.word	0x200138ae
 8012054:	0802fa80 	.word	0x0802fa80

08012058 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012058:	b5f0      	push	{r4, r5, r6, r7, lr}
 801205a:	b08b      	sub	sp, #44	; 0x2c
 801205c:	461f      	mov	r7, r3
 801205e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012062:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012066:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801206a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801206e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012072:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012076:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801207a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801207e:	2500      	movs	r5, #0
 8012080:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012084:	f88d 3020 	strb.w	r3, [sp, #32]
 8012088:	4604      	mov	r4, r0
 801208a:	4616      	mov	r6, r2
 801208c:	9504      	str	r5, [sp, #16]
 801208e:	f7ff fe9f 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012092:	463a      	mov	r2, r7
 8012094:	4631      	mov	r1, r6
 8012096:	4603      	mov	r3, r0
 8012098:	4620      	mov	r0, r4
 801209a:	f7ff ffc1 	bl	8012020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801209e:	4b0e      	ldr	r3, [pc, #56]	; (80120d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80120a0:	9005      	str	r0, [sp, #20]
 80120a2:	881b      	ldrh	r3, [r3, #0]
 80120a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80120a8:	f7f2 fa22 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 80120ac:	6803      	ldr	r3, [r0, #0]
 80120ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120b0:	4798      	blx	r3
 80120b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80120b4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80120b8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80120bc:	9304      	str	r3, [sp, #16]
 80120be:	6860      	ldr	r0, [r4, #4]
 80120c0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80120c4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80120c8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80120cc:	6803      	ldr	r3, [r0, #0]
 80120ce:	a901      	add	r1, sp, #4
 80120d0:	685b      	ldr	r3, [r3, #4]
 80120d2:	4798      	blx	r3
 80120d4:	b00b      	add	sp, #44	; 0x2c
 80120d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80120d8:	200138ae 	.word	0x200138ae

080120dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80120dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80120de:	b08d      	sub	sp, #52	; 0x34
 80120e0:	466b      	mov	r3, sp
 80120e2:	e883 0006 	stmia.w	r3, {r1, r2}
 80120e6:	2300      	movs	r3, #0
 80120e8:	9306      	str	r3, [sp, #24]
 80120ea:	6803      	ldr	r3, [r0, #0]
 80120ec:	f8bd 6000 	ldrh.w	r6, [sp]
 80120f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80120f2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80120f6:	2501      	movs	r5, #1
 80120f8:	9503      	str	r5, [sp, #12]
 80120fa:	4604      	mov	r4, r0
 80120fc:	4798      	blx	r3
 80120fe:	463a      	mov	r2, r7
 8012100:	4631      	mov	r1, r6
 8012102:	4603      	mov	r3, r0
 8012104:	4620      	mov	r0, r4
 8012106:	f7ff ff8b 	bl	8012020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801210a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801210c:	9307      	str	r3, [sp, #28]
 801210e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012112:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012116:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801211a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801211e:	4b0f      	ldr	r3, [pc, #60]	; (801215c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8012120:	9004      	str	r0, [sp, #16]
 8012122:	881b      	ldrh	r3, [r3, #0]
 8012124:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012128:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801212c:	f7f2 f9e0 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8012130:	6803      	ldr	r3, [r0, #0]
 8012132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012134:	4798      	blx	r3
 8012136:	23ff      	movs	r3, #255	; 0xff
 8012138:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801213c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012140:	6860      	ldr	r0, [r4, #4]
 8012142:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012146:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801214a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801214e:	6803      	ldr	r3, [r0, #0]
 8012150:	a903      	add	r1, sp, #12
 8012152:	685b      	ldr	r3, [r3, #4]
 8012154:	4798      	blx	r3
 8012156:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012158:	b00d      	add	sp, #52	; 0x34
 801215a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801215c:	200138ae 	.word	0x200138ae

08012160 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012164:	b08c      	sub	sp, #48	; 0x30
 8012166:	461e      	mov	r6, r3
 8012168:	466d      	mov	r5, sp
 801216a:	2300      	movs	r3, #0
 801216c:	e885 0006 	stmia.w	r5, {r1, r2}
 8012170:	9306      	str	r3, [sp, #24]
 8012172:	6803      	ldr	r3, [r0, #0]
 8012174:	f8bd 7000 	ldrh.w	r7, [sp]
 8012178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801217a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801217e:	2501      	movs	r5, #1
 8012180:	9503      	str	r5, [sp, #12]
 8012182:	4604      	mov	r4, r0
 8012184:	4798      	blx	r3
 8012186:	4642      	mov	r2, r8
 8012188:	4639      	mov	r1, r7
 801218a:	4603      	mov	r3, r0
 801218c:	4620      	mov	r0, r4
 801218e:	f7ff ff47 	bl	8012020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012192:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012196:	f8ad 3020 	strh.w	r3, [sp, #32]
 801219a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801219e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80121a2:	4b11      	ldr	r3, [pc, #68]	; (80121e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80121a4:	9004      	str	r0, [sp, #16]
 80121a6:	881b      	ldrh	r3, [r3, #0]
 80121a8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80121ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80121ae:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80121b2:	9607      	str	r6, [sp, #28]
 80121b4:	f7f2 f99c 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 80121b8:	6803      	ldr	r3, [r0, #0]
 80121ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121bc:	4798      	blx	r3
 80121be:	23ff      	movs	r3, #255	; 0xff
 80121c0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80121c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80121c8:	6860      	ldr	r0, [r4, #4]
 80121ca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80121ce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80121d2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80121d6:	6803      	ldr	r3, [r0, #0]
 80121d8:	a903      	add	r1, sp, #12
 80121da:	685b      	ldr	r3, [r3, #4]
 80121dc:	4798      	blx	r3
 80121de:	4630      	mov	r0, r6
 80121e0:	b00c      	add	sp, #48	; 0x30
 80121e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121e6:	bf00      	nop
 80121e8:	200138ae 	.word	0x200138ae

080121ec <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80121ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80121ee:	b085      	sub	sp, #20
 80121f0:	ac02      	add	r4, sp, #8
 80121f2:	e884 0006 	stmia.w	r4, {r1, r2}
 80121f6:	4605      	mov	r5, r0
 80121f8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80121fc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012200:	f7ff fde6 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012204:	463a      	mov	r2, r7
 8012206:	4603      	mov	r3, r0
 8012208:	4631      	mov	r1, r6
 801220a:	4628      	mov	r0, r5
 801220c:	f7ff ff08 	bl	8012020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012210:	4a05      	ldr	r2, [pc, #20]	; (8012228 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012212:	682b      	ldr	r3, [r5, #0]
 8012214:	8812      	ldrh	r2, [r2, #0]
 8012216:	9200      	str	r2, [sp, #0]
 8012218:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801221a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801221e:	4603      	mov	r3, r0
 8012220:	4628      	mov	r0, r5
 8012222:	47b0      	blx	r6
 8012224:	b005      	add	sp, #20
 8012226:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012228:	200138ae 	.word	0x200138ae

0801222c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801222c:	b570      	push	{r4, r5, r6, lr}
 801222e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8012232:	4604      	mov	r4, r0
 8012234:	b19b      	cbz	r3, 801225e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012236:	2002      	movs	r0, #2
 8012238:	f7ef fd4a 	bl	8001cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801223c:	2300      	movs	r3, #0
 801223e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012242:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012246:	6823      	ldr	r3, [r4, #0]
 8012248:	4620      	mov	r0, r4
 801224a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801224e:	f7ff fdbf 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012252:	462b      	mov	r3, r5
 8012254:	4601      	mov	r1, r0
 8012256:	4620      	mov	r0, r4
 8012258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801225c:	4718      	bx	r3
 801225e:	bd70      	pop	{r4, r5, r6, pc}

08012260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012260:	b538      	push	{r3, r4, r5, lr}
 8012262:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012266:	428b      	cmp	r3, r1
 8012268:	4604      	mov	r4, r0
 801226a:	460d      	mov	r5, r1
 801226c:	d006      	beq.n	801227c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801226e:	6803      	ldr	r3, [r0, #0]
 8012270:	b929      	cbnz	r1, 801227e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8012272:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012276:	4798      	blx	r3
 8012278:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801227c:	bd38      	pop	{r3, r4, r5, pc}
 801227e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8012282:	e7f8      	b.n	8012276 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08012284 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012284:	b510      	push	{r4, lr}
 8012286:	4b0d      	ldr	r3, [pc, #52]	; (80122bc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8012288:	781b      	ldrb	r3, [r3, #0]
 801228a:	4604      	mov	r4, r0
 801228c:	b95b      	cbnz	r3, 80122a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801228e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8012292:	2b02      	cmp	r3, #2
 8012294:	d007      	beq.n	80122a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012296:	6840      	ldr	r0, [r0, #4]
 8012298:	f000 f92c 	bl	80124f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801229c:	b118      	cbz	r0, 80122a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801229e:	6862      	ldr	r2, [r4, #4]
 80122a0:	7a53      	ldrb	r3, [r2, #9]
 80122a2:	2b00      	cmp	r3, #0
 80122a4:	d0fc      	beq.n	80122a0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80122a6:	f7ef fe4b 	bl	8001f40 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80122aa:	4620      	mov	r0, r4
 80122ac:	2100      	movs	r1, #0
 80122ae:	f7ff ffd7 	bl	8012260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80122b2:	4620      	mov	r0, r4
 80122b4:	f7ff fd8c 	bl	8011dd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80122b8:	bd10      	pop	{r4, pc}
 80122ba:	bf00      	nop
 80122bc:	200138b2 	.word	0x200138b2

080122c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80122c0:	b570      	push	{r4, r5, r6, lr}
 80122c2:	4604      	mov	r4, r0
 80122c4:	6803      	ldr	r3, [r0, #0]
 80122c6:	b919      	cbnz	r1, 80122d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80122c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80122ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80122ce:	4718      	bx	r3
 80122d0:	2200      	movs	r2, #0
 80122d2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80122d6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80122da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80122dc:	4798      	blx	r3
 80122de:	6863      	ldr	r3, [r4, #4]
 80122e0:	2101      	movs	r1, #1
 80122e2:	4605      	mov	r5, r0
 80122e4:	7299      	strb	r1, [r3, #10]
 80122e6:	4620      	mov	r0, r4
 80122e8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80122ec:	f7ff ffb8 	bl	8012260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80122f0:	4628      	mov	r0, r5
 80122f2:	bd70      	pop	{r4, r5, r6, pc}

080122f4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80122f4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80122f8:	1a13      	subs	r3, r2, r0
 80122fa:	4258      	negs	r0, r3
 80122fc:	4158      	adcs	r0, r3
 80122fe:	4770      	bx	lr

08012300 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012300:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012304:	1a9b      	subs	r3, r3, r2
 8012306:	2b00      	cmp	r3, #0
 8012308:	bfdc      	itt	le
 801230a:	6882      	ldrle	r2, [r0, #8]
 801230c:	189b      	addle	r3, r3, r2
 801230e:	2b01      	cmp	r3, #1
 8012310:	bfcc      	ite	gt
 8012312:	2000      	movgt	r0, #0
 8012314:	2001      	movle	r0, #1
 8012316:	4770      	bx	lr

08012318 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012318:	6902      	ldr	r2, [r0, #16]
 801231a:	6843      	ldr	r3, [r0, #4]
 801231c:	2024      	movs	r0, #36	; 0x24
 801231e:	fb00 3002 	mla	r0, r0, r2, r3
 8012322:	4770      	bx	lr

08012324 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012324:	6803      	ldr	r3, [r0, #0]
 8012326:	691b      	ldr	r3, [r3, #16]
 8012328:	4718      	bx	r3

0801232a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801232a:	b570      	push	{r4, r5, r6, lr}
 801232c:	2301      	movs	r3, #1
 801232e:	7203      	strb	r3, [r0, #8]
 8012330:	4604      	mov	r4, r0
 8012332:	6840      	ldr	r0, [r0, #4]
 8012334:	6803      	ldr	r3, [r0, #0]
 8012336:	699b      	ldr	r3, [r3, #24]
 8012338:	4798      	blx	r3
 801233a:	6803      	ldr	r3, [r0, #0]
 801233c:	2b40      	cmp	r3, #64	; 0x40
 801233e:	4605      	mov	r5, r0
 8012340:	d00c      	beq.n	801235c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012342:	d810      	bhi.n	8012366 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012344:	2b04      	cmp	r3, #4
 8012346:	d01d      	beq.n	8012384 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012348:	d804      	bhi.n	8012354 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801234a:	2b01      	cmp	r3, #1
 801234c:	d006      	beq.n	801235c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801234e:	2b02      	cmp	r3, #2
 8012350:	d02c      	beq.n	80123ac <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012352:	bd70      	pop	{r4, r5, r6, pc}
 8012354:	2b08      	cmp	r3, #8
 8012356:	d01d      	beq.n	8012394 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012358:	2b20      	cmp	r3, #32
 801235a:	d1fa      	bne.n	8012352 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801235c:	6823      	ldr	r3, [r4, #0]
 801235e:	4620      	mov	r0, r4
 8012360:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012362:	4798      	blx	r3
 8012364:	e013      	b.n	801238e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012366:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801236a:	d0f7      	beq.n	801235c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801236c:	d804      	bhi.n	8012378 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801236e:	2b80      	cmp	r3, #128	; 0x80
 8012370:	d0f4      	beq.n	801235c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012372:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012376:	e7f0      	b.n	801235a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012378:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801237c:	d0ee      	beq.n	801235c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801237e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012382:	e7e5      	b.n	8012350 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012384:	6823      	ldr	r3, [r4, #0]
 8012386:	7f01      	ldrb	r1, [r0, #28]
 8012388:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801238a:	4620      	mov	r0, r4
 801238c:	4798      	blx	r3
 801238e:	6823      	ldr	r3, [r4, #0]
 8012390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012392:	e006      	b.n	80123a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8012394:	6823      	ldr	r3, [r4, #0]
 8012396:	7f01      	ldrb	r1, [r0, #28]
 8012398:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801239a:	4620      	mov	r0, r4
 801239c:	4798      	blx	r3
 801239e:	6823      	ldr	r3, [r4, #0]
 80123a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80123a2:	4629      	mov	r1, r5
 80123a4:	4620      	mov	r0, r4
 80123a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123aa:	4718      	bx	r3
 80123ac:	6823      	ldr	r3, [r4, #0]
 80123ae:	4620      	mov	r0, r4
 80123b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80123b2:	4798      	blx	r3
 80123b4:	e7f3      	b.n	801239e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080123b6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80123b6:	4770      	bx	lr

080123b8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80123b8:	4770      	bx	lr

080123ba <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80123ba:	4770      	bx	lr

080123bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80123bc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80123c0:	1ad2      	subs	r2, r2, r3
 80123c2:	2a00      	cmp	r2, #0
 80123c4:	b510      	push	{r4, lr}
 80123c6:	bfdc      	itt	le
 80123c8:	6884      	ldrle	r4, [r0, #8]
 80123ca:	1912      	addle	r2, r2, r4
 80123cc:	2a01      	cmp	r2, #1
 80123ce:	dd16      	ble.n	80123fe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80123d0:	6842      	ldr	r2, [r0, #4]
 80123d2:	2424      	movs	r4, #36	; 0x24
 80123d4:	fb04 2303 	mla	r3, r4, r3, r2
 80123d8:	f101 0220 	add.w	r2, r1, #32
 80123dc:	f851 4b04 	ldr.w	r4, [r1], #4
 80123e0:	f843 4b04 	str.w	r4, [r3], #4
 80123e4:	4291      	cmp	r1, r2
 80123e6:	d1f9      	bne.n	80123dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80123e8:	780a      	ldrb	r2, [r1, #0]
 80123ea:	701a      	strb	r2, [r3, #0]
 80123ec:	68c3      	ldr	r3, [r0, #12]
 80123ee:	6882      	ldr	r2, [r0, #8]
 80123f0:	f3bf 8f5b 	dmb	ish
 80123f4:	3301      	adds	r3, #1
 80123f6:	429a      	cmp	r2, r3
 80123f8:	bfd8      	it	le
 80123fa:	1a9b      	suble	r3, r3, r2
 80123fc:	60c3      	str	r3, [r0, #12]
 80123fe:	bd10      	pop	{r4, pc}

08012400 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012400:	6903      	ldr	r3, [r0, #16]
 8012402:	6882      	ldr	r2, [r0, #8]
 8012404:	f3bf 8f5b 	dmb	ish
 8012408:	3301      	adds	r3, #1
 801240a:	429a      	cmp	r2, r3
 801240c:	bfd8      	it	le
 801240e:	1a9b      	suble	r3, r3, r2
 8012410:	6103      	str	r3, [r0, #16]
 8012412:	4770      	bx	lr

08012414 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012414:	b570      	push	{r4, r5, r6, lr}
 8012416:	4604      	mov	r4, r0
 8012418:	460e      	mov	r6, r1
 801241a:	6860      	ldr	r0, [r4, #4]
 801241c:	6803      	ldr	r3, [r0, #0]
 801241e:	685b      	ldr	r3, [r3, #4]
 8012420:	4798      	blx	r3
 8012422:	2800      	cmp	r0, #0
 8012424:	d1f9      	bne.n	801241a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012426:	4d0d      	ldr	r5, [pc, #52]	; (801245c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012428:	6828      	ldr	r0, [r5, #0]
 801242a:	6803      	ldr	r3, [r0, #0]
 801242c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801242e:	4798      	blx	r3
 8012430:	f7ef fd94 	bl	8001f5c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012434:	6828      	ldr	r0, [r5, #0]
 8012436:	2101      	movs	r1, #1
 8012438:	f7ff ff12 	bl	8012260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801243c:	6860      	ldr	r0, [r4, #4]
 801243e:	6803      	ldr	r3, [r0, #0]
 8012440:	4631      	mov	r1, r6
 8012442:	689b      	ldr	r3, [r3, #8]
 8012444:	4798      	blx	r3
 8012446:	6823      	ldr	r3, [r4, #0]
 8012448:	4620      	mov	r0, r4
 801244a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801244c:	4798      	blx	r3
 801244e:	6828      	ldr	r0, [r5, #0]
 8012450:	6803      	ldr	r3, [r0, #0]
 8012452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012456:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012458:	4718      	bx	r3
 801245a:	bf00      	nop
 801245c:	200138b4 	.word	0x200138b4

08012460 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012460:	b508      	push	{r3, lr}
 8012462:	f7ef fd6d 	bl	8001f40 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012466:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801246a:	f7ef bd71 	b.w	8001f50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801246e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801246e:	b510      	push	{r4, lr}
 8012470:	2114      	movs	r1, #20
 8012472:	4604      	mov	r4, r0
 8012474:	f018 f9fd 	bl	802a872 <_ZdlPvj>
 8012478:	4620      	mov	r0, r4
 801247a:	bd10      	pop	{r4, pc}

0801247c <_ZN8touchgfx13DMA_Interface5startEv>:
 801247c:	b510      	push	{r4, lr}
 801247e:	4604      	mov	r4, r0
 8012480:	6840      	ldr	r0, [r0, #4]
 8012482:	6803      	ldr	r3, [r0, #0]
 8012484:	681b      	ldr	r3, [r3, #0]
 8012486:	4798      	blx	r3
 8012488:	b948      	cbnz	r0, 801249e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801248a:	7a63      	ldrb	r3, [r4, #9]
 801248c:	b13b      	cbz	r3, 801249e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801248e:	7a23      	ldrb	r3, [r4, #8]
 8012490:	b92b      	cbnz	r3, 801249e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012492:	6823      	ldr	r3, [r4, #0]
 8012494:	4620      	mov	r0, r4
 8012496:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012498:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801249c:	4718      	bx	r3
 801249e:	bd10      	pop	{r4, pc}

080124a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80124a0:	b570      	push	{r4, r5, r6, lr}
 80124a2:	4604      	mov	r4, r0
 80124a4:	6840      	ldr	r0, [r0, #4]
 80124a6:	6803      	ldr	r3, [r0, #0]
 80124a8:	681b      	ldr	r3, [r3, #0]
 80124aa:	4798      	blx	r3
 80124ac:	4605      	mov	r5, r0
 80124ae:	b930      	cbnz	r0, 80124be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80124b0:	7a23      	ldrb	r3, [r4, #8]
 80124b2:	b123      	cbz	r3, 80124be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80124b4:	6860      	ldr	r0, [r4, #4]
 80124b6:	6803      	ldr	r3, [r0, #0]
 80124b8:	695b      	ldr	r3, [r3, #20]
 80124ba:	4798      	blx	r3
 80124bc:	7225      	strb	r5, [r4, #8]
 80124be:	6860      	ldr	r0, [r4, #4]
 80124c0:	6803      	ldr	r3, [r0, #0]
 80124c2:	681b      	ldr	r3, [r3, #0]
 80124c4:	4798      	blx	r3
 80124c6:	b928      	cbnz	r0, 80124d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80124c8:	6823      	ldr	r3, [r4, #0]
 80124ca:	4620      	mov	r0, r4
 80124cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124d2:	4718      	bx	r3
 80124d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124d8:	f7ef bd48 	b.w	8001f6c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080124dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80124dc:	b510      	push	{r4, lr}
 80124de:	4c04      	ldr	r4, [pc, #16]	; (80124f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80124e0:	6082      	str	r2, [r0, #8]
 80124e2:	2200      	movs	r2, #0
 80124e4:	e9c0 4100 	strd	r4, r1, [r0]
 80124e8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80124ec:	bd10      	pop	{r4, pc}
 80124ee:	bf00      	nop
 80124f0:	0802fa94 	.word	0x0802fa94

080124f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80124f4:	6840      	ldr	r0, [r0, #4]
 80124f6:	6803      	ldr	r3, [r0, #0]
 80124f8:	681b      	ldr	r3, [r3, #0]
 80124fa:	4718      	bx	r3

080124fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80124fc:	4b06      	ldr	r3, [pc, #24]	; (8012518 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80124fe:	60c1      	str	r1, [r0, #12]
 8012500:	094a      	lsrs	r2, r1, #5
 8012502:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012506:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801250a:	4313      	orrs	r3, r2
 801250c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012510:	4319      	orrs	r1, r3
 8012512:	8201      	strh	r1, [r0, #16]
 8012514:	4770      	bx	lr
 8012516:	bf00      	nop
 8012518:	fffff800 	.word	0xfffff800

0801251c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801251c:	f1a0 0008 	sub.w	r0, r0, #8
 8012520:	e7ec      	b.n	80124fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012522:	bf00      	nop

08012524 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012524:	b508      	push	{r3, lr}
 8012526:	4b05      	ldr	r3, [pc, #20]	; (801253c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012528:	6818      	ldr	r0, [r3, #0]
 801252a:	6803      	ldr	r3, [r0, #0]
 801252c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012530:	4798      	blx	r3
 8012532:	1e43      	subs	r3, r0, #1
 8012534:	4258      	negs	r0, r3
 8012536:	4158      	adcs	r0, r3
 8012538:	bd08      	pop	{r3, pc}
 801253a:	bf00      	nop
 801253c:	200138b4 	.word	0x200138b4

08012540 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012540:	4770      	bx	lr

08012542 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012542:	3808      	subs	r0, #8
 8012544:	4770      	bx	lr

08012546 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012546:	b430      	push	{r4, r5}
 8012548:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801254c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012550:	8a02      	ldrh	r2, [r0, #16]
 8012552:	9202      	str	r2, [sp, #8]
 8012554:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012558:	68c2      	ldr	r2, [r0, #12]
 801255a:	4629      	mov	r1, r5
 801255c:	4620      	mov	r0, r4
 801255e:	bc30      	pop	{r4, r5}
 8012560:	f7ef bfc6 	b.w	80024f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012564 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012564:	f7ef bfc2 	b.w	80024ec <_ZN8touchgfx5paint8tearDownEv>

08012568 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012568:	b510      	push	{r4, lr}
 801256a:	2114      	movs	r1, #20
 801256c:	4604      	mov	r4, r0
 801256e:	f018 f980 	bl	802a872 <_ZdlPvj>
 8012572:	4620      	mov	r0, r4
 8012574:	bd10      	pop	{r4, pc}

08012576 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8012576:	f1a0 0008 	sub.w	r0, r0, #8
 801257a:	e7f5      	b.n	8012568 <_ZN8touchgfx13PainterRGB565D0Ev>

0801257c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801257c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801257e:	6803      	ldr	r3, [r0, #0]
 8012580:	460d      	mov	r5, r1
 8012582:	4604      	mov	r4, r0
 8012584:	4601      	mov	r1, r0
 8012586:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012588:	a802      	add	r0, sp, #8
 801258a:	4798      	blx	r3
 801258c:	6828      	ldr	r0, [r5, #0]
 801258e:	6869      	ldr	r1, [r5, #4]
 8012590:	466b      	mov	r3, sp
 8012592:	c303      	stmia	r3!, {r0, r1}
 8012594:	4668      	mov	r0, sp
 8012596:	4619      	mov	r1, r3
 8012598:	f7fe ffa4 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801259c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801259e:	b188      	cbz	r0, 80125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80125a0:	6803      	ldr	r3, [r0, #0]
 80125a2:	1d21      	adds	r1, r4, #4
 80125a4:	68db      	ldr	r3, [r3, #12]
 80125a6:	4798      	blx	r3
 80125a8:	b160      	cbz	r0, 80125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80125aa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80125ae:	2b00      	cmp	r3, #0
 80125b0:	dd08      	ble.n	80125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80125b2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80125b6:	2d00      	cmp	r5, #0
 80125b8:	dd04      	ble.n	80125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80125ba:	4a2b      	ldr	r2, [pc, #172]	; (8012668 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80125bc:	7812      	ldrb	r2, [r2, #0]
 80125be:	b11a      	cbz	r2, 80125c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80125c0:	2a01      	cmp	r2, #1
 80125c2:	d029      	beq.n	8012618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80125c4:	b004      	add	sp, #16
 80125c6:	bd70      	pop	{r4, r5, r6, pc}
 80125c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80125cc:	441d      	add	r5, r3
 80125ce:	b2ad      	uxth	r5, r5
 80125d0:	b22e      	sxth	r6, r5
 80125d2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80125d6:	42b3      	cmp	r3, r6
 80125d8:	daf4      	bge.n	80125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80125da:	6823      	ldr	r3, [r4, #0]
 80125dc:	4669      	mov	r1, sp
 80125de:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80125e0:	4620      	mov	r0, r4
 80125e2:	4798      	blx	r3
 80125e4:	b940      	cbnz	r0, 80125f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80125e6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80125ea:	2b01      	cmp	r3, #1
 80125ec:	d004      	beq.n	80125f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80125ee:	3301      	adds	r3, #1
 80125f0:	105b      	asrs	r3, r3, #1
 80125f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80125f6:	e7f0      	b.n	80125da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80125f8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80125fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012600:	4413      	add	r3, r2
 8012602:	b29b      	uxth	r3, r3
 8012604:	441a      	add	r2, r3
 8012606:	b212      	sxth	r2, r2
 8012608:	4296      	cmp	r6, r2
 801260a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801260e:	dae0      	bge.n	80125d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012610:	1aeb      	subs	r3, r5, r3
 8012612:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012616:	e7dc      	b.n	80125d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012618:	f8bd 5000 	ldrh.w	r5, [sp]
 801261c:	441d      	add	r5, r3
 801261e:	b2ad      	uxth	r5, r5
 8012620:	b22e      	sxth	r6, r5
 8012622:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012626:	42b3      	cmp	r3, r6
 8012628:	dacc      	bge.n	80125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801262a:	6823      	ldr	r3, [r4, #0]
 801262c:	4669      	mov	r1, sp
 801262e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012630:	4620      	mov	r0, r4
 8012632:	4798      	blx	r3
 8012634:	b940      	cbnz	r0, 8012648 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012636:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801263a:	2b01      	cmp	r3, #1
 801263c:	d004      	beq.n	8012648 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801263e:	3301      	adds	r3, #1
 8012640:	105b      	asrs	r3, r3, #1
 8012642:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012646:	e7f0      	b.n	801262a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012648:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801264c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012650:	4413      	add	r3, r2
 8012652:	b29b      	uxth	r3, r3
 8012654:	441a      	add	r2, r3
 8012656:	b212      	sxth	r2, r2
 8012658:	4296      	cmp	r6, r2
 801265a:	f8ad 3000 	strh.w	r3, [sp]
 801265e:	dae0      	bge.n	8012622 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012660:	1aeb      	subs	r3, r5, r3
 8012662:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012666:	e7dc      	b.n	8012622 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012668:	200138ac 	.word	0x200138ac

0801266c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801266c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801266e:	6803      	ldr	r3, [r0, #0]
 8012670:	4604      	mov	r4, r0
 8012672:	4601      	mov	r1, r0
 8012674:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012676:	4668      	mov	r0, sp
 8012678:	4798      	blx	r3
 801267a:	2100      	movs	r1, #0
 801267c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012680:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012684:	9102      	str	r1, [sp, #8]
 8012686:	4668      	mov	r0, sp
 8012688:	a902      	add	r1, sp, #8
 801268a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801268e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012692:	f7fe ff27 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8012696:	6823      	ldr	r3, [r4, #0]
 8012698:	4669      	mov	r1, sp
 801269a:	691b      	ldr	r3, [r3, #16]
 801269c:	4620      	mov	r0, r4
 801269e:	4798      	blx	r3
 80126a0:	b004      	add	sp, #16
 80126a2:	bd10      	pop	{r4, pc}

080126a4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80126a4:	2101      	movs	r1, #1
 80126a6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80126aa:	490b      	ldr	r1, [pc, #44]	; (80126d8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80126ac:	6001      	str	r1, [r0, #0]
 80126ae:	2200      	movs	r2, #0
 80126b0:	21ff      	movs	r1, #255	; 0xff
 80126b2:	8082      	strh	r2, [r0, #4]
 80126b4:	80c2      	strh	r2, [r0, #6]
 80126b6:	8102      	strh	r2, [r0, #8]
 80126b8:	8142      	strh	r2, [r0, #10]
 80126ba:	8182      	strh	r2, [r0, #12]
 80126bc:	81c2      	strh	r2, [r0, #14]
 80126be:	8202      	strh	r2, [r0, #16]
 80126c0:	8242      	strh	r2, [r0, #18]
 80126c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80126c6:	61c2      	str	r2, [r0, #28]
 80126c8:	8402      	strh	r2, [r0, #32]
 80126ca:	8442      	strh	r2, [r0, #34]	; 0x22
 80126cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80126d0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80126d4:	6282      	str	r2, [r0, #40]	; 0x28
 80126d6:	4770      	bx	lr
 80126d8:	0802faf0 	.word	0x0802faf0

080126dc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80126dc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80126e0:	4602      	mov	r2, r0
 80126e2:	cb03      	ldmia	r3!, {r0, r1}
 80126e4:	6010      	str	r0, [r2, #0]
 80126e6:	6051      	str	r1, [r2, #4]
 80126e8:	4610      	mov	r0, r2
 80126ea:	4770      	bx	lr

080126ec <_ZN8touchgfx4LineD1Ev>:
 80126ec:	4770      	bx	lr

080126ee <_ZN8touchgfx4LineD0Ev>:
 80126ee:	b510      	push	{r4, lr}
 80126f0:	2170      	movs	r1, #112	; 0x70
 80126f2:	4604      	mov	r4, r0
 80126f4:	f018 f8bd 	bl	802a872 <_ZdlPvj>
 80126f8:	4620      	mov	r0, r4
 80126fa:	bd10      	pop	{r4, pc}

080126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80126fc:	b507      	push	{r0, r1, r2, lr}
 80126fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012702:	ab01      	add	r3, sp, #4
 8012704:	6809      	ldr	r1, [r1, #0]
 8012706:	6800      	ldr	r0, [r0, #0]
 8012708:	f005 fab4 	bl	8017c74 <_ZN8touchgfx6muldivElllRl>
 801270c:	b003      	add	sp, #12
 801270e:	f85d fb04 	ldr.w	pc, [sp], #4

08012712 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012712:	6800      	ldr	r0, [r0, #0]
 8012714:	2800      	cmp	r0, #0
 8012716:	bfb9      	ittee	lt
 8012718:	2320      	movlt	r3, #32
 801271a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801271e:	301f      	addge	r0, #31
 8012720:	1140      	asrge	r0, r0, #5
 8012722:	4770      	bx	lr

08012724 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012728:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801272c:	b089      	sub	sp, #36	; 0x24
 801272e:	4604      	mov	r4, r0
 8012730:	b353      	cbz	r3, 8012788 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012732:	6803      	ldr	r3, [r0, #0]
 8012734:	4601      	mov	r1, r0
 8012736:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012738:	a802      	add	r0, sp, #8
 801273a:	4798      	blx	r3
 801273c:	2220      	movs	r2, #32
 801273e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012742:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012744:	fb9a f0f2 	sdiv	r0, sl, r2
 8012748:	fb91 f5f2 	sdiv	r5, r1, r2
 801274c:	1b40      	subs	r0, r0, r5
 801274e:	2800      	cmp	r0, #0
 8012750:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012752:	fb93 f6f2 	sdiv	r6, r3, r2
 8012756:	bfb8      	it	lt
 8012758:	4240      	neglt	r0, r0
 801275a:	0076      	lsls	r6, r6, #1
 801275c:	4286      	cmp	r6, r0
 801275e:	f8d4 b000 	ldr.w	fp, [r4]
 8012762:	dc0c      	bgt.n	801277e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012764:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012766:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801276a:	fb95 f0f2 	sdiv	r0, r5, r2
 801276e:	fb98 f7f2 	sdiv	r7, r8, r2
 8012772:	1bc0      	subs	r0, r0, r7
 8012774:	2800      	cmp	r0, #0
 8012776:	bfb8      	it	lt
 8012778:	4240      	neglt	r0, r0
 801277a:	4286      	cmp	r6, r0
 801277c:	dd07      	ble.n	801278e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801277e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012782:	a902      	add	r1, sp, #8
 8012784:	4620      	mov	r0, r4
 8012786:	4798      	blx	r3
 8012788:	b009      	add	sp, #36	; 0x24
 801278a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801278e:	3301      	adds	r3, #1
 8012790:	2002      	movs	r0, #2
 8012792:	f10d 0920 	add.w	r9, sp, #32
 8012796:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801279a:	4103      	asrs	r3, r0
 801279c:	f849 3d08 	str.w	r3, [r9, #-8]!
 80127a0:	eb01 060a 	add.w	r6, r1, sl
 80127a4:	eb08 0705 	add.w	r7, r8, r5
 80127a8:	fb96 f6f0 	sdiv	r6, r6, r0
 80127ac:	fb97 f7f0 	sdiv	r7, r7, r0
 80127b0:	4648      	mov	r0, r9
 80127b2:	9101      	str	r1, [sp, #4]
 80127b4:	b236      	sxth	r6, r6
 80127b6:	b23f      	sxth	r7, r7
 80127b8:	fb96 f6f2 	sdiv	r6, r6, r2
 80127bc:	fb97 f7f2 	sdiv	r7, r7, r2
 80127c0:	f7ff ffa7 	bl	8012712 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80127c4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80127c8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80127cc:	9901      	ldr	r1, [sp, #4]
 80127ce:	4293      	cmp	r3, r2
 80127d0:	fa1f fe87 	uxth.w	lr, r7
 80127d4:	fa1f fc86 	uxth.w	ip, r6
 80127d8:	eba1 0a0a 	sub.w	sl, r1, sl
 80127dc:	b280      	uxth	r0, r0
 80127de:	da54      	bge.n	801288a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80127e0:	ebac 0100 	sub.w	r1, ip, r0
 80127e4:	b289      	uxth	r1, r1
 80127e6:	4460      	add	r0, ip
 80127e8:	f1ba 0f00 	cmp.w	sl, #0
 80127ec:	b20e      	sxth	r6, r1
 80127ee:	b280      	uxth	r0, r0
 80127f0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80127f4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80127f8:	da29      	bge.n	801284e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80127fa:	eba8 0505 	sub.w	r5, r8, r5
 80127fe:	2d00      	cmp	r5, #0
 8012800:	da2a      	bge.n	8012858 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012802:	fa1f f88a 	uxth.w	r8, sl
 8012806:	eba0 0008 	sub.w	r0, r0, r8
 801280a:	fa1f f58c 	uxth.w	r5, ip
 801280e:	4443      	add	r3, r8
 8012810:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012814:	1a59      	subs	r1, r3, r1
 8012816:	ebae 0005 	sub.w	r0, lr, r5
 801281a:	f8ad a010 	strh.w	sl, [sp, #16]
 801281e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012822:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012826:	f8ad 6018 	strh.w	r6, [sp, #24]
 801282a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801282e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012832:	442a      	add	r2, r5
 8012834:	eba2 0e0e 	sub.w	lr, r2, lr
 8012838:	f8ad e01e 	strh.w	lr, [sp, #30]
 801283c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012840:	a904      	add	r1, sp, #16
 8012842:	4620      	mov	r0, r4
 8012844:	4798      	blx	r3
 8012846:	6823      	ldr	r3, [r4, #0]
 8012848:	4649      	mov	r1, r9
 801284a:	691b      	ldr	r3, [r3, #16]
 801284c:	e79a      	b.n	8012784 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801284e:	d003      	beq.n	8012858 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012850:	eba8 0505 	sub.w	r5, r8, r5
 8012854:	2d00      	cmp	r5, #0
 8012856:	dcd4      	bgt.n	8012802 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012858:	fa1f f88a 	uxth.w	r8, sl
 801285c:	4443      	add	r3, r8
 801285e:	fa1f f58c 	uxth.w	r5, ip
 8012862:	1a59      	subs	r1, r3, r1
 8012864:	eba0 0008 	sub.w	r0, r0, r8
 8012868:	ebae 0305 	sub.w	r3, lr, r5
 801286c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012870:	f8ad c012 	strh.w	ip, [sp, #18]
 8012874:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012878:	f8ad 3016 	strh.w	r3, [sp, #22]
 801287c:	f8ad a018 	strh.w	sl, [sp, #24]
 8012880:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012884:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012888:	e7d3      	b.n	8012832 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801288a:	ebae 0100 	sub.w	r1, lr, r0
 801288e:	b289      	uxth	r1, r1
 8012890:	4470      	add	r0, lr
 8012892:	f1ba 0f00 	cmp.w	sl, #0
 8012896:	b20f      	sxth	r7, r1
 8012898:	b280      	uxth	r0, r0
 801289a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801289e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80128a2:	da20      	bge.n	80128e6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80128a4:	eba8 0505 	sub.w	r5, r8, r5
 80128a8:	2d00      	cmp	r5, #0
 80128aa:	da21      	bge.n	80128f0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80128ac:	fa1f f88e 	uxth.w	r8, lr
 80128b0:	fa1f f58a 	uxth.w	r5, sl
 80128b4:	4443      	add	r3, r8
 80128b6:	442a      	add	r2, r5
 80128b8:	f8ad e010 	strh.w	lr, [sp, #16]
 80128bc:	1b40      	subs	r0, r0, r5
 80128be:	ebac 0e08 	sub.w	lr, ip, r8
 80128c2:	1a51      	subs	r1, r2, r1
 80128c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80128c8:	f8ad a012 	strh.w	sl, [sp, #18]
 80128cc:	f8ad e014 	strh.w	lr, [sp, #20]
 80128d0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80128d4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80128d8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80128dc:	f8ad c01c 	strh.w	ip, [sp, #28]
 80128e0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80128e4:	e7aa      	b.n	801283c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80128e6:	d003      	beq.n	80128f0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80128e8:	eba8 0505 	sub.w	r5, r8, r5
 80128ec:	2d00      	cmp	r5, #0
 80128ee:	dcdd      	bgt.n	80128ac <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80128f0:	fa1f f58e 	uxth.w	r5, lr
 80128f4:	fa1f f88a 	uxth.w	r8, sl
 80128f8:	4442      	add	r2, r8
 80128fa:	442b      	add	r3, r5
 80128fc:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012900:	1a51      	subs	r1, r2, r1
 8012902:	ebac 0705 	sub.w	r7, ip, r5
 8012906:	eba0 0008 	sub.w	r0, r0, r8
 801290a:	eba3 0c0c 	sub.w	ip, r3, ip
 801290e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012912:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012916:	f8ad 1016 	strh.w	r1, [sp, #22]
 801291a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801291e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012922:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012926:	f8ad 001e 	strh.w	r0, [sp, #30]
 801292a:	e787      	b.n	801283c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801292c <_ZN8touchgfx7CWRUtil4sineEi>:
 801292c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012930:	fb90 f2f3 	sdiv	r2, r0, r3
 8012934:	fb02 0013 	mls	r0, r2, r3, r0
 8012938:	2800      	cmp	r0, #0
 801293a:	bfb8      	it	lt
 801293c:	18c0      	addlt	r0, r0, r3
 801293e:	285a      	cmp	r0, #90	; 0x5a
 8012940:	4b09      	ldr	r3, [pc, #36]	; (8012968 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012942:	dc02      	bgt.n	801294a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012944:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012948:	4770      	bx	lr
 801294a:	28b4      	cmp	r0, #180	; 0xb4
 801294c:	dc02      	bgt.n	8012954 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801294e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012952:	e7f7      	b.n	8012944 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012954:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012958:	bfd4      	ite	le
 801295a:	38b4      	suble	r0, #180	; 0xb4
 801295c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012960:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012964:	4240      	negs	r0, r0
 8012966:	4770      	bx	lr
 8012968:	0802fbbc 	.word	0x0802fbbc

0801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801296c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012970:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012972:	fb90 f2f3 	sdiv	r2, r0, r3
 8012976:	fb02 0013 	mls	r0, r2, r3, r0
 801297a:	2800      	cmp	r0, #0
 801297c:	bfb8      	it	lt
 801297e:	18c0      	addlt	r0, r0, r3
 8012980:	1144      	asrs	r4, r0, #5
 8012982:	f000 061f 	and.w	r6, r0, #31
 8012986:	4620      	mov	r0, r4
 8012988:	f7ff ffd0 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 801298c:	4605      	mov	r5, r0
 801298e:	b90e      	cbnz	r6, 8012994 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012990:	b002      	add	sp, #8
 8012992:	bd70      	pop	{r4, r5, r6, pc}
 8012994:	1c60      	adds	r0, r4, #1
 8012996:	f7ff ffc9 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 801299a:	ab01      	add	r3, sp, #4
 801299c:	2220      	movs	r2, #32
 801299e:	4631      	mov	r1, r6
 80129a0:	1b40      	subs	r0, r0, r5
 80129a2:	f005 f967 	bl	8017c74 <_ZN8touchgfx6muldivElllRl>
 80129a6:	4428      	add	r0, r5
 80129a8:	e7f2      	b.n	8012990 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080129aa <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80129aa:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80129ae:	bf2c      	ite	cs
 80129b0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80129b4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80129b8:	2300      	movs	r3, #0
 80129ba:	1899      	adds	r1, r3, r2
 80129bc:	4288      	cmp	r0, r1
 80129be:	bf24      	itt	cs
 80129c0:	1853      	addcs	r3, r2, r1
 80129c2:	1a40      	subcs	r0, r0, r1
 80129c4:	0892      	lsrs	r2, r2, #2
 80129c6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80129ca:	d1f6      	bne.n	80129ba <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80129cc:	4618      	mov	r0, r3
 80129ce:	4770      	bx	lr

080129d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80129d0:	b510      	push	{r4, lr}
 80129d2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80129d6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80129da:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80129de:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80129e2:	13a4      	asrs	r4, r4, #14
 80129e4:	139b      	asrs	r3, r3, #14
 80129e6:	429c      	cmp	r4, r3
 80129e8:	bfb8      	it	lt
 80129ea:	461c      	movlt	r4, r3
 80129ec:	2c01      	cmp	r4, #1
 80129ee:	dd07      	ble.n	8012a00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80129f0:	fb91 f1f4 	sdiv	r1, r1, r4
 80129f4:	fb90 f0f4 	sdiv	r0, r0, r4
 80129f8:	f7ff ffea 	bl	80129d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80129fc:	4360      	muls	r0, r4
 80129fe:	bd10      	pop	{r4, pc}
 8012a00:	4340      	muls	r0, r0
 8012a02:	fb01 0001 	mla	r0, r1, r1, r0
 8012a06:	f7ff ffd0 	bl	80129aa <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012a0a:	e7f8      	b.n	80129fe <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012a0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012a0c:	2800      	cmp	r0, #0
 8012a0e:	b508      	push	{r3, lr}
 8012a10:	da05      	bge.n	8012a1e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012a12:	4240      	negs	r0, r0
 8012a14:	f7ff fffa 	bl	8012a0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012a18:	4240      	negs	r0, r0
 8012a1a:	b240      	sxtb	r0, r0
 8012a1c:	bd08      	pop	{r3, pc}
 8012a1e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012a22:	dc11      	bgt.n	8012a48 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012a24:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012a28:	dd09      	ble.n	8012a3e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012a2a:	4340      	muls	r0, r0
 8012a2c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012a30:	f7ff ffbb 	bl	80129aa <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012a34:	f7ff ffea 	bl	8012a0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012a38:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012a3c:	e7ed      	b.n	8012a1a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012a3e:	3003      	adds	r0, #3
 8012a40:	10c0      	asrs	r0, r0, #3
 8012a42:	4b02      	ldr	r3, [pc, #8]	; (8012a4c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012a44:	5618      	ldrsb	r0, [r3, r0]
 8012a46:	e7e9      	b.n	8012a1c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012a48:	2000      	movs	r0, #0
 8012a4a:	e7e7      	b.n	8012a1c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012a4c:	0802fb60 	.word	0x0802fb60

08012a50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012a50:	4281      	cmp	r1, r0
 8012a52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012a54:	460c      	mov	r4, r1
 8012a56:	4615      	mov	r5, r2
 8012a58:	dd07      	ble.n	8012a6a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8012a5a:	4601      	mov	r1, r0
 8012a5c:	4620      	mov	r0, r4
 8012a5e:	f7ff fff7 	bl	8012a50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012a62:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012a66:	b003      	add	sp, #12
 8012a68:	bd30      	pop	{r4, r5, pc}
 8012a6a:	f7ff ffb1 	bl	80129d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012a6e:	6028      	str	r0, [r5, #0]
 8012a70:	2800      	cmp	r0, #0
 8012a72:	d0f8      	beq.n	8012a66 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012a74:	4602      	mov	r2, r0
 8012a76:	ab01      	add	r3, sp, #4
 8012a78:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012a7c:	4620      	mov	r0, r4
 8012a7e:	f005 f8f9 	bl	8017c74 <_ZN8touchgfx6muldivElllRl>
 8012a82:	f7ff ffc3 	bl	8012a0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012a86:	e7ee      	b.n	8012a66 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012a88 <_ZN8touchgfx4LineC1Ev>:
 8012a88:	b510      	push	{r4, lr}
 8012a8a:	4604      	mov	r4, r0
 8012a8c:	f7ff fe0a 	bl	80126a4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012a90:	4b0c      	ldr	r3, [pc, #48]	; (8012ac4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012a92:	6023      	str	r3, [r4, #0]
 8012a94:	2220      	movs	r2, #32
 8012a96:	2300      	movs	r3, #0
 8012a98:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012a9a:	2212      	movs	r2, #18
 8012a9c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012aa0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012aa4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012aa8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012aac:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012ab0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012ab4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012ab8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012abc:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012abe:	60a3      	str	r3, [r4, #8]
 8012ac0:	4620      	mov	r0, r4
 8012ac2:	bd10      	pop	{r4, pc}
 8012ac4:	0802fc7c 	.word	0x0802fc7c

08012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012ac8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012acc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012ace:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ad0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012ad2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012ad4:	1aff      	subs	r7, r7, r3
 8012ad6:	4604      	mov	r4, r0
 8012ad8:	eba5 0502 	sub.w	r5, r5, r2
 8012adc:	d142      	bne.n	8012b64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012ade:	b955      	cbnz	r5, 8012af6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012ae0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012ae4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012ae8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012aec:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012af0:	b002      	add	sp, #8
 8012af2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012af6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012afa:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012afe:	4629      	mov	r1, r5
 8012b00:	4642      	mov	r2, r8
 8012b02:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012b04:	f005 f8d5 	bl	8017cb2 <_ZN8touchgfx6muldivElll>
 8012b08:	2502      	movs	r5, #2
 8012b0a:	4642      	mov	r2, r8
 8012b0c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012b10:	4639      	mov	r1, r7
 8012b12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012b14:	f005 f8cd 	bl	8017cb2 <_ZN8touchgfx6muldivElll>
 8012b18:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012b1c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012b20:	f1b9 0f00 	cmp.w	r9, #0
 8012b24:	d067      	beq.n	8012bf6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012b26:	f1b9 0f02 	cmp.w	r9, #2
 8012b2a:	d878      	bhi.n	8012c1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012b2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012b2e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012b30:	1b93      	subs	r3, r2, r6
 8012b32:	1b5b      	subs	r3, r3, r5
 8012b34:	6463      	str	r3, [r4, #68]	; 0x44
 8012b36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012b38:	18e9      	adds	r1, r5, r3
 8012b3a:	1b89      	subs	r1, r1, r6
 8012b3c:	6561      	str	r1, [r4, #84]	; 0x54
 8012b3e:	1b81      	subs	r1, r0, r6
 8012b40:	4429      	add	r1, r5
 8012b42:	64a1      	str	r1, [r4, #72]	; 0x48
 8012b44:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012b46:	4430      	add	r0, r6
 8012b48:	186f      	adds	r7, r5, r1
 8012b4a:	4432      	add	r2, r6
 8012b4c:	1b49      	subs	r1, r1, r5
 8012b4e:	4437      	add	r7, r6
 8012b50:	4428      	add	r0, r5
 8012b52:	4431      	add	r1, r6
 8012b54:	1b52      	subs	r2, r2, r5
 8012b56:	1b5b      	subs	r3, r3, r5
 8012b58:	65a7      	str	r7, [r4, #88]	; 0x58
 8012b5a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012b5c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012b5e:	6522      	str	r2, [r4, #80]	; 0x50
 8012b60:	1b9b      	subs	r3, r3, r6
 8012b62:	e05b      	b.n	8012c1c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012b64:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012b68:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012b6c:	2d00      	cmp	r5, #0
 8012b6e:	d0c6      	beq.n	8012afe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012b70:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012b74:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012b78:	fb93 f2f8 	sdiv	r2, r3, r8
 8012b7c:	fb08 3312 	mls	r3, r8, r2, r3
 8012b80:	b353      	cbz	r3, 8012bd8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012b82:	fb98 f2f3 	sdiv	r2, r8, r3
 8012b86:	fb03 8812 	mls	r8, r3, r2, r8
 8012b8a:	f1b8 0f00 	cmp.w	r8, #0
 8012b8e:	d1f3      	bne.n	8012b78 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012b90:	2b01      	cmp	r3, #1
 8012b92:	bf1c      	itt	ne
 8012b94:	fb95 f5f3 	sdivne	r5, r5, r3
 8012b98:	fb97 f7f3 	sdivne	r7, r7, r3
 8012b9c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012ba0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012ba4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012ba8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012bac:	428b      	cmp	r3, r1
 8012bae:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012bb2:	4608      	mov	r0, r1
 8012bb4:	dd01      	ble.n	8012bba <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012bb6:	428a      	cmp	r2, r1
 8012bb8:	dc10      	bgt.n	8012bdc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012bba:	fb90 f3f3 	sdiv	r3, r0, r3
 8012bbe:	fb90 f2f2 	sdiv	r2, r0, r2
 8012bc2:	4293      	cmp	r3, r2
 8012bc4:	bfa8      	it	ge
 8012bc6:	4613      	movge	r3, r2
 8012bc8:	435f      	muls	r7, r3
 8012bca:	435d      	muls	r5, r3
 8012bcc:	4629      	mov	r1, r5
 8012bce:	4638      	mov	r0, r7
 8012bd0:	f7ff fefe 	bl	80129d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012bd4:	4680      	mov	r8, r0
 8012bd6:	e792      	b.n	8012afe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012bd8:	4643      	mov	r3, r8
 8012bda:	e7d9      	b.n	8012b90 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012bdc:	fb93 f3f1 	sdiv	r3, r3, r1
 8012be0:	fb92 f2f1 	sdiv	r2, r2, r1
 8012be4:	4293      	cmp	r3, r2
 8012be6:	bfcc      	ite	gt
 8012be8:	3301      	addgt	r3, #1
 8012bea:	1c53      	addle	r3, r2, #1
 8012bec:	fb97 f7f3 	sdiv	r7, r7, r3
 8012bf0:	fb95 f5f3 	sdiv	r5, r5, r3
 8012bf4:	e7ea      	b.n	8012bcc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012bf6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012bf8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012bfa:	1b93      	subs	r3, r2, r6
 8012bfc:	6463      	str	r3, [r4, #68]	; 0x44
 8012bfe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012c00:	18e9      	adds	r1, r5, r3
 8012c02:	6561      	str	r1, [r4, #84]	; 0x54
 8012c04:	1b81      	subs	r1, r0, r6
 8012c06:	64a1      	str	r1, [r4, #72]	; 0x48
 8012c08:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012c0a:	4430      	add	r0, r6
 8012c0c:	186f      	adds	r7, r5, r1
 8012c0e:	4432      	add	r2, r6
 8012c10:	1b49      	subs	r1, r1, r5
 8012c12:	65a7      	str	r7, [r4, #88]	; 0x58
 8012c14:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012c16:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012c18:	6522      	str	r2, [r4, #80]	; 0x50
 8012c1a:	1b5b      	subs	r3, r3, r5
 8012c1c:	6623      	str	r3, [r4, #96]	; 0x60
 8012c1e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012c20:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012c22:	9200      	str	r2, [sp, #0]
 8012c24:	9301      	str	r3, [sp, #4]
 8012c26:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012c2a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012c2e:	680f      	ldr	r7, [r1, #0]
 8012c30:	9800      	ldr	r0, [sp, #0]
 8012c32:	42ba      	cmp	r2, r7
 8012c34:	bfa8      	it	ge
 8012c36:	463a      	movge	r2, r7
 8012c38:	4287      	cmp	r7, r0
 8012c3a:	bfc8      	it	gt
 8012c3c:	9700      	strgt	r7, [sp, #0]
 8012c3e:	690f      	ldr	r7, [r1, #16]
 8012c40:	9801      	ldr	r0, [sp, #4]
 8012c42:	42bb      	cmp	r3, r7
 8012c44:	bfa8      	it	ge
 8012c46:	463b      	movge	r3, r7
 8012c48:	3104      	adds	r1, #4
 8012c4a:	4287      	cmp	r7, r0
 8012c4c:	bfc8      	it	gt
 8012c4e:	9701      	strgt	r7, [sp, #4]
 8012c50:	458c      	cmp	ip, r1
 8012c52:	d1ec      	bne.n	8012c2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012c54:	4668      	mov	r0, sp
 8012c56:	2720      	movs	r7, #32
 8012c58:	fb92 f8f7 	sdiv	r8, r2, r7
 8012c5c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012c60:	f7ff fd57 	bl	8012712 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012c64:	4682      	mov	sl, r0
 8012c66:	a801      	add	r0, sp, #4
 8012c68:	f7ff fd53 	bl	8012712 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012c6c:	ebaa 0208 	sub.w	r2, sl, r8
 8012c70:	1bc0      	subs	r0, r0, r7
 8012c72:	f1b9 0f01 	cmp.w	r9, #1
 8012c76:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012c7a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012c7e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012c82:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012c86:	f47f af33 	bne.w	8012af0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012c8a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012c8c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012c8e:	1b83      	subs	r3, r0, r6
 8012c90:	6463      	str	r3, [r4, #68]	; 0x44
 8012c92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012c94:	18ea      	adds	r2, r5, r3
 8012c96:	6562      	str	r2, [r4, #84]	; 0x54
 8012c98:	1b8a      	subs	r2, r1, r6
 8012c9a:	64a2      	str	r2, [r4, #72]	; 0x48
 8012c9c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012c9e:	4431      	add	r1, r6
 8012ca0:	18af      	adds	r7, r5, r2
 8012ca2:	4406      	add	r6, r0
 8012ca4:	1b52      	subs	r2, r2, r5
 8012ca6:	1b5d      	subs	r5, r3, r5
 8012ca8:	65a7      	str	r7, [r4, #88]	; 0x58
 8012caa:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012cac:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012cae:	6526      	str	r6, [r4, #80]	; 0x50
 8012cb0:	6625      	str	r5, [r4, #96]	; 0x60
 8012cb2:	e71d      	b.n	8012af0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012cb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012cb4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012cb6:	428b      	cmp	r3, r1
 8012cb8:	d102      	bne.n	8012cc0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012cba:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012cbc:	4293      	cmp	r3, r2
 8012cbe:	d003      	beq.n	8012cc8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012cc0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012cc4:	f7ff bf00 	b.w	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012cc8:	4770      	bx	lr

08012cca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012cca:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012ccc:	428b      	cmp	r3, r1
 8012cce:	d102      	bne.n	8012cd6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012cd0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012cd2:	4293      	cmp	r3, r2
 8012cd4:	d003      	beq.n	8012cde <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012cd6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012cda:	f7ff bef5 	b.w	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012cde:	4770      	bx	lr

08012ce0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012ce0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012ce4:	f7ff bef0 	b.w	8012ac8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012ce8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012cec:	b0a0      	sub	sp, #128	; 0x80
 8012cee:	4604      	mov	r4, r0
 8012cf0:	460a      	mov	r2, r1
 8012cf2:	4601      	mov	r1, r0
 8012cf4:	a804      	add	r0, sp, #16
 8012cf6:	f014 fe79 	bl	80279ec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012cfa:	2300      	movs	r3, #0
 8012cfc:	9301      	str	r3, [sp, #4]
 8012cfe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012d02:	2b01      	cmp	r3, #1
 8012d04:	d17c      	bne.n	8012e00 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012d06:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012d08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012d0a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012d0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012d0e:	1ac0      	subs	r0, r0, r3
 8012d10:	eba1 0102 	sub.w	r1, r1, r2
 8012d14:	d437      	bmi.n	8012d86 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012d16:	2900      	cmp	r1, #0
 8012d18:	aa01      	add	r2, sp, #4
 8012d1a:	db2e      	blt.n	8012d7a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012d1c:	f7ff fe98 	bl	8012a50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012d20:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012d24:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012d26:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012d28:	a804      	add	r0, sp, #16
 8012d2a:	f014 ffdf 	bl	8027cec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012d2e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012d30:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012d32:	a804      	add	r0, sp, #16
 8012d34:	f015 f827 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012d38:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012d3a:	2db3      	cmp	r5, #179	; 0xb3
 8012d3c:	dc33      	bgt.n	8012da6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012d3e:	eba6 0805 	sub.w	r8, r6, r5
 8012d42:	4640      	mov	r0, r8
 8012d44:	f7ff fdf2 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 8012d48:	a902      	add	r1, sp, #8
 8012d4a:	9002      	str	r0, [sp, #8]
 8012d4c:	a801      	add	r0, sp, #4
 8012d4e:	f7ff fcd5 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012d52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012d54:	1847      	adds	r7, r0, r1
 8012d56:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012d5a:	f7ff fde7 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 8012d5e:	a903      	add	r1, sp, #12
 8012d60:	9003      	str	r0, [sp, #12]
 8012d62:	a801      	add	r0, sp, #4
 8012d64:	f7ff fcca 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012d68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012d6a:	4639      	mov	r1, r7
 8012d6c:	1a12      	subs	r2, r2, r0
 8012d6e:	a804      	add	r0, sp, #16
 8012d70:	f015 f809 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012d74:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012d76:	441d      	add	r5, r3
 8012d78:	e7df      	b.n	8012d3a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012d7a:	4249      	negs	r1, r1
 8012d7c:	f7ff fe68 	bl	8012a50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012d80:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012d84:	e7ce      	b.n	8012d24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012d86:	2900      	cmp	r1, #0
 8012d88:	f1c0 0000 	rsb	r0, r0, #0
 8012d8c:	aa01      	add	r2, sp, #4
 8012d8e:	db04      	blt.n	8012d9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012d90:	f7ff fe5e 	bl	8012a50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012d94:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012d98:	e7c4      	b.n	8012d24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012d9a:	4249      	negs	r1, r1
 8012d9c:	f7ff fe58 	bl	8012a50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012da0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012da4:	e7be      	b.n	8012d24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012da6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012da8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012daa:	a804      	add	r0, sp, #16
 8012dac:	f014 ffeb 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012db0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012db2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012db4:	a804      	add	r0, sp, #16
 8012db6:	f014 ffe6 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012dba:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012dbc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012dc0:	2d00      	cmp	r5, #0
 8012dc2:	dd31      	ble.n	8012e28 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012dc4:	eb05 0806 	add.w	r8, r5, r6
 8012dc8:	4640      	mov	r0, r8
 8012dca:	f7ff fdaf 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 8012dce:	a902      	add	r1, sp, #8
 8012dd0:	9002      	str	r0, [sp, #8]
 8012dd2:	a801      	add	r0, sp, #4
 8012dd4:	f7ff fc92 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012dd8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012dda:	1847      	adds	r7, r0, r1
 8012ddc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012de0:	f7ff fda4 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 8012de4:	a903      	add	r1, sp, #12
 8012de6:	9003      	str	r0, [sp, #12]
 8012de8:	a801      	add	r0, sp, #4
 8012dea:	f7ff fc87 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012dee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012df0:	4639      	mov	r1, r7
 8012df2:	1a12      	subs	r2, r2, r0
 8012df4:	a804      	add	r0, sp, #16
 8012df6:	f014 ffc6 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012dfa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012dfc:	1aed      	subs	r5, r5, r3
 8012dfe:	e7df      	b.n	8012dc0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012e00:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012e02:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012e04:	a804      	add	r0, sp, #16
 8012e06:	f014 ff71 	bl	8027cec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012e0a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012e0c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012e0e:	a804      	add	r0, sp, #16
 8012e10:	f014 ffb9 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012e14:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012e16:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012e18:	a804      	add	r0, sp, #16
 8012e1a:	f014 ffb4 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012e1e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012e20:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012e22:	a804      	add	r0, sp, #16
 8012e24:	f014 ffaf 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012e28:	21ff      	movs	r1, #255	; 0xff
 8012e2a:	a804      	add	r0, sp, #16
 8012e2c:	f014 fe9a 	bl	8027b64 <_ZN8touchgfx6Canvas6renderEh>
 8012e30:	4b04      	ldr	r3, [pc, #16]	; (8012e44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8012e32:	9304      	str	r3, [sp, #16]
 8012e34:	4604      	mov	r4, r0
 8012e36:	a80c      	add	r0, sp, #48	; 0x30
 8012e38:	f001 f8cc 	bl	8013fd4 <_ZN8touchgfx7OutlineD1Ev>
 8012e3c:	4620      	mov	r0, r4
 8012e3e:	b020      	add	sp, #128	; 0x80
 8012e40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012e44:	080304a4 	.word	0x080304a4

08012e48 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012e48:	2000      	movs	r0, #0
 8012e4a:	4770      	bx	lr

08012e4c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012e4c:	4b07      	ldr	r3, [pc, #28]	; (8012e6c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012e4e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012e50:	881b      	ldrh	r3, [r3, #0]
 8012e52:	4293      	cmp	r3, r2
 8012e54:	bf81      	itttt	hi
 8012e56:	4b06      	ldrhi	r3, [pc, #24]	; (8012e70 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012e58:	681b      	ldrhi	r3, [r3, #0]
 8012e5a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012e5e:	7858      	ldrbhi	r0, [r3, #1]
 8012e60:	bf8c      	ite	hi
 8012e62:	f000 0003 	andhi.w	r0, r0, #3
 8012e66:	2000      	movls	r0, #0
 8012e68:	4770      	bx	lr
 8012e6a:	bf00      	nop
 8012e6c:	20013910 	.word	0x20013910
 8012e70:	2001390c 	.word	0x2001390c

08012e74 <_ZN8touchgfx8TextAreaD1Ev>:
 8012e74:	4770      	bx	lr
	...

08012e78 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e7c:	4b10      	ldr	r3, [pc, #64]	; (8012ec0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012e7e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012e80:	881b      	ldrh	r3, [r3, #0]
 8012e82:	428b      	cmp	r3, r1
 8012e84:	4604      	mov	r4, r0
 8012e86:	d918      	bls.n	8012eba <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012e88:	6803      	ldr	r3, [r0, #0]
 8012e8a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012e8c:	4b0d      	ldr	r3, [pc, #52]	; (8012ec4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012e8e:	6818      	ldr	r0, [r3, #0]
 8012e90:	f7f5 fdce 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8012e94:	6823      	ldr	r3, [r4, #0]
 8012e96:	4606      	mov	r6, r0
 8012e98:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012e9a:	4620      	mov	r0, r4
 8012e9c:	4798      	blx	r3
 8012e9e:	6823      	ldr	r3, [r4, #0]
 8012ea0:	4607      	mov	r7, r0
 8012ea2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012ea6:	4620      	mov	r0, r4
 8012ea8:	4798      	blx	r3
 8012eaa:	463a      	mov	r2, r7
 8012eac:	4603      	mov	r3, r0
 8012eae:	4631      	mov	r1, r6
 8012eb0:	4620      	mov	r0, r4
 8012eb2:	46ac      	mov	ip, r5
 8012eb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012eb8:	4760      	bx	ip
 8012eba:	2000      	movs	r0, #0
 8012ebc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ec0:	20013910 	.word	0x20013910
 8012ec4:	20013918 	.word	0x20013918

08012ec8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012ec8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012ecc:	4b17      	ldr	r3, [pc, #92]	; (8012f2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012ece:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012ed0:	881b      	ldrh	r3, [r3, #0]
 8012ed2:	428b      	cmp	r3, r1
 8012ed4:	4604      	mov	r4, r0
 8012ed6:	d926      	bls.n	8012f26 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012ed8:	4b15      	ldr	r3, [pc, #84]	; (8012f30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012eda:	681b      	ldr	r3, [r3, #0]
 8012edc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012ee0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012ee4:	4b13      	ldr	r3, [pc, #76]	; (8012f34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012ee6:	7855      	ldrb	r5, [r2, #1]
 8012ee8:	681b      	ldr	r3, [r3, #0]
 8012eea:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012eee:	6833      	ldr	r3, [r6, #0]
 8012ef0:	69df      	ldr	r7, [r3, #28]
 8012ef2:	4b11      	ldr	r3, [pc, #68]	; (8012f38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012ef4:	6818      	ldr	r0, [r3, #0]
 8012ef6:	f7f5 fd9b 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8012efa:	6823      	ldr	r3, [r4, #0]
 8012efc:	4680      	mov	r8, r0
 8012efe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012f00:	4620      	mov	r0, r4
 8012f02:	4798      	blx	r3
 8012f04:	6823      	ldr	r3, [r4, #0]
 8012f06:	4681      	mov	r9, r0
 8012f08:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012f0c:	4620      	mov	r0, r4
 8012f0e:	4798      	blx	r3
 8012f10:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012f14:	9000      	str	r0, [sp, #0]
 8012f16:	464b      	mov	r3, r9
 8012f18:	4642      	mov	r2, r8
 8012f1a:	4629      	mov	r1, r5
 8012f1c:	4630      	mov	r0, r6
 8012f1e:	47b8      	blx	r7
 8012f20:	b003      	add	sp, #12
 8012f22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f26:	2000      	movs	r0, #0
 8012f28:	e7fa      	b.n	8012f20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012f2a:	bf00      	nop
 8012f2c:	20013910 	.word	0x20013910
 8012f30:	2001390c 	.word	0x2001390c
 8012f34:	20013914 	.word	0x20013914
 8012f38:	20013918 	.word	0x20013918

08012f3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012f3c:	b40e      	push	{r1, r2, r3}
 8012f3e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f42:	4b2f      	ldr	r3, [pc, #188]	; (8013000 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012f44:	881a      	ldrh	r2, [r3, #0]
 8012f46:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012f48:	429a      	cmp	r2, r3
 8012f4a:	b09d      	sub	sp, #116	; 0x74
 8012f4c:	4604      	mov	r4, r0
 8012f4e:	d954      	bls.n	8012ffa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012f50:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8013004 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012f54:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8013008 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012f58:	aa26      	add	r2, sp, #152	; 0x98
 8012f5a:	9202      	str	r2, [sp, #8]
 8012f5c:	f8d9 2000 	ldr.w	r2, [r9]
 8012f60:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012f64:	f8d8 3000 	ldr.w	r3, [r8]
 8012f68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012f6c:	682b      	ldr	r3, [r5, #0]
 8012f6e:	4628      	mov	r0, r5
 8012f70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012f72:	4798      	blx	r3
 8012f74:	b207      	sxth	r7, r0
 8012f76:	4606      	mov	r6, r0
 8012f78:	a803      	add	r0, sp, #12
 8012f7a:	f005 fa95 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 8012f7e:	682b      	ldr	r3, [r5, #0]
 8012f80:	4628      	mov	r0, r5
 8012f82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012f84:	4798      	blx	r3
 8012f86:	682b      	ldr	r3, [r5, #0]
 8012f88:	4682      	mov	sl, r0
 8012f8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012f8c:	4628      	mov	r0, r5
 8012f8e:	4798      	blx	r3
 8012f90:	4653      	mov	r3, sl
 8012f92:	9000      	str	r0, [sp, #0]
 8012f94:	9a02      	ldr	r2, [sp, #8]
 8012f96:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012f98:	a803      	add	r0, sp, #12
 8012f9a:	f005 fae0 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012f9e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012fa0:	f8d9 3000 	ldr.w	r3, [r9]
 8012fa4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012fa8:	8925      	ldrh	r5, [r4, #8]
 8012faa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012fae:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012fb2:	eba5 050c 	sub.w	r5, r5, ip
 8012fb6:	784a      	ldrb	r2, [r1, #1]
 8012fb8:	f8d8 3000 	ldr.w	r3, [r8]
 8012fbc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012fc0:	b22d      	sxth	r5, r5
 8012fc2:	9500      	str	r5, [sp, #0]
 8012fc4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012fc8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012fcc:	a803      	add	r0, sp, #12
 8012fce:	f002 feed 	bl	8015dac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012fd2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012fd6:	18b9      	adds	r1, r7, r2
 8012fd8:	2900      	cmp	r1, #0
 8012fda:	b203      	sxth	r3, r0
 8012fdc:	dd0b      	ble.n	8012ff6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012fde:	3b01      	subs	r3, #1
 8012fe0:	fb13 f302 	smulbb	r3, r3, r2
 8012fe4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012fe8:	b21f      	sxth	r7, r3
 8012fea:	4638      	mov	r0, r7
 8012fec:	b01d      	add	sp, #116	; 0x74
 8012fee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012ff2:	b003      	add	sp, #12
 8012ff4:	4770      	bx	lr
 8012ff6:	2b00      	cmp	r3, #0
 8012ff8:	dcf7      	bgt.n	8012fea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012ffa:	2700      	movs	r7, #0
 8012ffc:	e7f5      	b.n	8012fea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012ffe:	bf00      	nop
 8013000:	20013910 	.word	0x20013910
 8013004:	2001390c 	.word	0x2001390c
 8013008:	20013914 	.word	0x20013914

0801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801300c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013010:	4bbc      	ldr	r3, [pc, #752]	; (8013304 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013012:	460c      	mov	r4, r1
 8013014:	881b      	ldrh	r3, [r3, #0]
 8013016:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8013018:	428b      	cmp	r3, r1
 801301a:	b0a9      	sub	sp, #164	; 0xa4
 801301c:	4680      	mov	r8, r0
 801301e:	d809      	bhi.n	8013034 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013020:	2300      	movs	r3, #0
 8013022:	f04f 32ff 	mov.w	r2, #4294967295
 8013026:	e9c0 3200 	strd	r3, r2, [r0]
 801302a:	6083      	str	r3, [r0, #8]
 801302c:	4640      	mov	r0, r8
 801302e:	b029      	add	sp, #164	; 0xa4
 8013030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013034:	4eb4      	ldr	r6, [pc, #720]	; (8013308 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8013036:	6833      	ldr	r3, [r6, #0]
 8013038:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801303c:	4bb3      	ldr	r3, [pc, #716]	; (801330c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801303e:	681b      	ldr	r3, [r3, #0]
 8013040:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013044:	4bb2      	ldr	r3, [pc, #712]	; (8013310 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013046:	6818      	ldr	r0, [r3, #0]
 8013048:	f7f5 fcf2 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 801304c:	682b      	ldr	r3, [r5, #0]
 801304e:	4681      	mov	r9, r0
 8013050:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013052:	4628      	mov	r0, r5
 8013054:	4798      	blx	r3
 8013056:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8013058:	b203      	sxth	r3, r0
 801305a:	4407      	add	r7, r0
 801305c:	9304      	str	r3, [sp, #16]
 801305e:	b2bb      	uxth	r3, r7
 8013060:	9303      	str	r3, [sp, #12]
 8013062:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013066:	4682      	mov	sl, r0
 8013068:	a80f      	add	r0, sp, #60	; 0x3c
 801306a:	2b00      	cmp	r3, #0
 801306c:	f040 80a6 	bne.w	80131bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8013070:	f005 fa1a 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 8013074:	682b      	ldr	r3, [r5, #0]
 8013076:	4628      	mov	r0, r5
 8013078:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801307a:	4798      	blx	r3
 801307c:	682b      	ldr	r3, [r5, #0]
 801307e:	4606      	mov	r6, r0
 8013080:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013082:	4628      	mov	r0, r5
 8013084:	4798      	blx	r3
 8013086:	6823      	ldr	r3, [r4, #0]
 8013088:	4607      	mov	r7, r0
 801308a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801308c:	4620      	mov	r0, r4
 801308e:	4798      	blx	r3
 8013090:	6823      	ldr	r3, [r4, #0]
 8013092:	4683      	mov	fp, r0
 8013094:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013098:	4620      	mov	r0, r4
 801309a:	4798      	blx	r3
 801309c:	463b      	mov	r3, r7
 801309e:	e9cd b000 	strd	fp, r0, [sp]
 80130a2:	4649      	mov	r1, r9
 80130a4:	4632      	mov	r2, r6
 80130a6:	a80f      	add	r0, sp, #60	; 0x3c
 80130a8:	f005 fa6e 	bl	8018588 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80130ac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80130b0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8013308 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80130b4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80130b8:	f04f 0600 	mov.w	r6, #0
 80130bc:	bf0c      	ite	eq
 80130be:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80130c2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80130c6:	4637      	mov	r7, r6
 80130c8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80130ca:	f8db 3000 	ldr.w	r3, [fp]
 80130ce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80130d2:	4629      	mov	r1, r5
 80130d4:	785b      	ldrb	r3, [r3, #1]
 80130d6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80130da:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80130de:	a80f      	add	r0, sp, #60	; 0x3c
 80130e0:	f002 fb7f 	bl	80157e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80130e4:	9b03      	ldr	r3, [sp, #12]
 80130e6:	4286      	cmp	r6, r0
 80130e8:	bfb8      	it	lt
 80130ea:	4606      	movlt	r6, r0
 80130ec:	3701      	adds	r7, #1
 80130ee:	eba9 0903 	sub.w	r9, r9, r3
 80130f2:	a80f      	add	r0, sp, #60	; 0x3c
 80130f4:	b236      	sxth	r6, r6
 80130f6:	b2bf      	uxth	r7, r7
 80130f8:	fa0f f989 	sxth.w	r9, r9
 80130fc:	f005 f9fb 	bl	80184f6 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8013100:	b918      	cbnz	r0, 801310a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013102:	7a2b      	ldrb	r3, [r5, #8]
 8013104:	444b      	add	r3, r9
 8013106:	2b00      	cmp	r3, #0
 8013108:	dcde      	bgt.n	80130c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801310a:	9b03      	ldr	r3, [sp, #12]
 801310c:	9a04      	ldr	r2, [sp, #16]
 801310e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8013112:	fb13 f707 	smulbb	r7, r3, r7
 8013116:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013118:	1aff      	subs	r7, r7, r3
 801311a:	b2bf      	uxth	r7, r7
 801311c:	b23b      	sxth	r3, r7
 801311e:	429a      	cmp	r2, r3
 8013120:	bfa8      	it	ge
 8013122:	4657      	movge	r7, sl
 8013124:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013128:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801312c:	6823      	ldr	r3, [r4, #0]
 801312e:	bf08      	it	eq
 8013130:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8013134:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013136:	bf18      	it	ne
 8013138:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801313c:	4620      	mov	r0, r4
 801313e:	4798      	blx	r3
 8013140:	444f      	add	r7, r9
 8013142:	fa1f f987 	uxth.w	r9, r7
 8013146:	2801      	cmp	r0, #1
 8013148:	fa0f f789 	sxth.w	r7, r9
 801314c:	b2b3      	uxth	r3, r6
 801314e:	f000 80e1 	beq.w	8013314 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013152:	2802      	cmp	r0, #2
 8013154:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8013158:	f000 80e2 	beq.w	8013320 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801315c:	7aea      	ldrb	r2, [r5, #11]
 801315e:	7b2d      	ldrb	r5, [r5, #12]
 8013160:	b236      	sxth	r6, r6
 8013162:	1ab6      	subs	r6, r6, r2
 8013164:	442a      	add	r2, r5
 8013166:	4413      	add	r3, r2
 8013168:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801316c:	fa1f fa86 	uxth.w	sl, r6
 8013170:	b29b      	uxth	r3, r3
 8013172:	2a02      	cmp	r2, #2
 8013174:	fa0f fb8a 	sxth.w	fp, sl
 8013178:	b21e      	sxth	r6, r3
 801317a:	f000 80d5 	beq.w	8013328 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801317e:	2a03      	cmp	r2, #3
 8013180:	f000 80dd 	beq.w	801333e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8013184:	2a01      	cmp	r2, #1
 8013186:	f040 80e5 	bne.w	8013354 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801318a:	8925      	ldrh	r5, [r4, #8]
 801318c:	4633      	mov	r3, r6
 801318e:	eba5 0909 	sub.w	r9, r5, r9
 8013192:	463e      	mov	r6, r7
 8013194:	465d      	mov	r5, fp
 8013196:	461f      	mov	r7, r3
 8013198:	fa0f fb89 	sxth.w	fp, r9
 801319c:	4b5c      	ldr	r3, [pc, #368]	; (8013310 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801319e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80131a0:	6818      	ldr	r0, [r3, #0]
 80131a2:	f7f5 fc45 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80131a6:	f8a8 b000 	strh.w	fp, [r8]
 80131aa:	f8a8 5002 	strh.w	r5, [r8, #2]
 80131ae:	f8a8 6004 	strh.w	r6, [r8, #4]
 80131b2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80131b6:	f8c8 0008 	str.w	r0, [r8, #8]
 80131ba:	e737      	b.n	801302c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80131bc:	f005 f974 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 80131c0:	682b      	ldr	r3, [r5, #0]
 80131c2:	4628      	mov	r0, r5
 80131c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80131c6:	4798      	blx	r3
 80131c8:	682b      	ldr	r3, [r5, #0]
 80131ca:	4607      	mov	r7, r0
 80131cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80131ce:	4628      	mov	r0, r5
 80131d0:	4798      	blx	r3
 80131d2:	6823      	ldr	r3, [r4, #0]
 80131d4:	4683      	mov	fp, r0
 80131d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80131d8:	4620      	mov	r0, r4
 80131da:	4798      	blx	r3
 80131dc:	6822      	ldr	r2, [r4, #0]
 80131de:	9005      	str	r0, [sp, #20]
 80131e0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80131e4:	4620      	mov	r0, r4
 80131e6:	4790      	blx	r2
 80131e8:	9b05      	ldr	r3, [sp, #20]
 80131ea:	9001      	str	r0, [sp, #4]
 80131ec:	463a      	mov	r2, r7
 80131ee:	4649      	mov	r1, r9
 80131f0:	9300      	str	r3, [sp, #0]
 80131f2:	a80f      	add	r0, sp, #60	; 0x3c
 80131f4:	465b      	mov	r3, fp
 80131f6:	f005 f9c7 	bl	8018588 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80131fa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80131fe:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013202:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013204:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013208:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801320c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013210:	bf0a      	itet	eq
 8013212:	464a      	moveq	r2, r9
 8013214:	461a      	movne	r2, r3
 8013216:	4699      	moveq	r9, r3
 8013218:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801321c:	1ad2      	subs	r2, r2, r3
 801321e:	6833      	ldr	r3, [r6, #0]
 8013220:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8013224:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013228:	af0f      	add	r7, sp, #60	; 0x3c
 801322a:	7859      	ldrb	r1, [r3, #1]
 801322c:	9707      	str	r7, [sp, #28]
 801322e:	2300      	movs	r3, #0
 8013230:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013234:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013238:	f88d 1020 	strb.w	r1, [sp, #32]
 801323c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013240:	9509      	str	r5, [sp, #36]	; 0x24
 8013242:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013246:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801324a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801324e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013252:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013256:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801325a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801325e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013262:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013266:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801326a:	b350      	cbz	r0, 80132c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801326c:	682b      	ldr	r3, [r5, #0]
 801326e:	4628      	mov	r0, r5
 8013270:	695b      	ldr	r3, [r3, #20]
 8013272:	4798      	blx	r3
 8013274:	4607      	mov	r7, r0
 8013276:	b320      	cbz	r0, 80132c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013278:	9809      	ldr	r0, [sp, #36]	; 0x24
 801327a:	6803      	ldr	r3, [r0, #0]
 801327c:	4639      	mov	r1, r7
 801327e:	68db      	ldr	r3, [r3, #12]
 8013280:	4798      	blx	r3
 8013282:	4606      	mov	r6, r0
 8013284:	b1e8      	cbz	r0, 80132c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013286:	7b43      	ldrb	r3, [r0, #13]
 8013288:	7a82      	ldrb	r2, [r0, #10]
 801328a:	005b      	lsls	r3, r3, #1
 801328c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013290:	4313      	orrs	r3, r2
 8013292:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013296:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801329a:	2b06      	cmp	r3, #6
 801329c:	d111      	bne.n	80132c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801329e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80132a0:	6803      	ldr	r3, [r0, #0]
 80132a2:	4632      	mov	r2, r6
 80132a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80132a6:	4639      	mov	r1, r7
 80132a8:	4798      	blx	r3
 80132aa:	7b73      	ldrb	r3, [r6, #13]
 80132ac:	005b      	lsls	r3, r3, #1
 80132ae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80132b2:	7ab3      	ldrb	r3, [r6, #10]
 80132b4:	4313      	orrs	r3, r2
 80132b6:	4418      	add	r0, r3
 80132b8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80132bc:	4418      	add	r0, r3
 80132be:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80132c2:	2600      	movs	r6, #0
 80132c4:	4637      	mov	r7, r6
 80132c6:	a806      	add	r0, sp, #24
 80132c8:	f002 fc6c 	bl	8015ba4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80132cc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80132d0:	9b03      	ldr	r3, [sp, #12]
 80132d2:	4286      	cmp	r6, r0
 80132d4:	eba9 0903 	sub.w	r9, r9, r3
 80132d8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80132dc:	bfb8      	it	lt
 80132de:	4606      	movlt	r6, r0
 80132e0:	3701      	adds	r7, #1
 80132e2:	b236      	sxth	r6, r6
 80132e4:	b2bf      	uxth	r7, r7
 80132e6:	fa0f f989 	sxth.w	r9, r9
 80132ea:	2b00      	cmp	r3, #0
 80132ec:	f43f af0d 	beq.w	801310a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80132f0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80132f4:	2b00      	cmp	r3, #0
 80132f6:	f47f af08 	bne.w	801310a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80132fa:	7a2b      	ldrb	r3, [r5, #8]
 80132fc:	444b      	add	r3, r9
 80132fe:	2b00      	cmp	r3, #0
 8013300:	dce1      	bgt.n	80132c6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013302:	e702      	b.n	801310a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013304:	20013910 	.word	0x20013910
 8013308:	2001390c 	.word	0x2001390c
 801330c:	20013914 	.word	0x20013914
 8013310:	20013918 	.word	0x20013918
 8013314:	ebaa 0606 	sub.w	r6, sl, r6
 8013318:	2002      	movs	r0, #2
 801331a:	fb96 f6f0 	sdiv	r6, r6, r0
 801331e:	e71d      	b.n	801315c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013320:	441e      	add	r6, r3
 8013322:	ebaa 0606 	sub.w	r6, sl, r6
 8013326:	e719      	b.n	801315c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013328:	8925      	ldrh	r5, [r4, #8]
 801332a:	1aed      	subs	r5, r5, r3
 801332c:	eba5 050a 	sub.w	r5, r5, sl
 8013330:	fa0f fb85 	sxth.w	fp, r5
 8013334:	8965      	ldrh	r5, [r4, #10]
 8013336:	eba5 0509 	sub.w	r5, r5, r9
 801333a:	b22d      	sxth	r5, r5
 801333c:	e72e      	b.n	801319c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801333e:	8965      	ldrh	r5, [r4, #10]
 8013340:	1aed      	subs	r5, r5, r3
 8013342:	eba5 050a 	sub.w	r5, r5, sl
 8013346:	4633      	mov	r3, r6
 8013348:	b22d      	sxth	r5, r5
 801334a:	463e      	mov	r6, r7
 801334c:	f04f 0b00 	mov.w	fp, #0
 8013350:	461f      	mov	r7, r3
 8013352:	e723      	b.n	801319c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013354:	2500      	movs	r5, #0
 8013356:	e721      	b.n	801319c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013358 <_ZN8touchgfx8TextAreaD0Ev>:
 8013358:	b510      	push	{r4, lr}
 801335a:	2148      	movs	r1, #72	; 0x48
 801335c:	4604      	mov	r4, r0
 801335e:	f017 fa88 	bl	802a872 <_ZdlPvj>
 8013362:	4620      	mov	r0, r4
 8013364:	bd10      	pop	{r4, pc}
	...

08013368 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013368:	b513      	push	{r0, r1, r4, lr}
 801336a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801336e:	4604      	mov	r4, r0
 8013370:	b1fb      	cbz	r3, 80133b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013372:	4b16      	ldr	r3, [pc, #88]	; (80133cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013374:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013376:	881b      	ldrh	r3, [r3, #0]
 8013378:	428b      	cmp	r3, r1
 801337a:	d91a      	bls.n	80133b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801337c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013380:	2b00      	cmp	r3, #0
 8013382:	dd16      	ble.n	80133b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013384:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013388:	2b00      	cmp	r3, #0
 801338a:	dd12      	ble.n	80133b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801338c:	4b10      	ldr	r3, [pc, #64]	; (80133d0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801338e:	6818      	ldr	r0, [r3, #0]
 8013390:	f7f5 fb4e 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8013394:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8013398:	6822      	ldr	r2, [r4, #0]
 801339a:	2b00      	cmp	r3, #0
 801339c:	db06      	blt.n	80133ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801339e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80133a2:	2b00      	cmp	r3, #0
 80133a4:	db02      	blt.n	80133ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80133a6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80133a8:	4298      	cmp	r0, r3
 80133aa:	d004      	beq.n	80133b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80133ac:	6953      	ldr	r3, [r2, #20]
 80133ae:	4620      	mov	r0, r4
 80133b0:	4798      	blx	r3
 80133b2:	b002      	add	sp, #8
 80133b4:	bd10      	pop	{r4, pc}
 80133b6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80133ba:	c903      	ldmia	r1, {r0, r1}
 80133bc:	466b      	mov	r3, sp
 80133be:	e883 0003 	stmia.w	r3, {r0, r1}
 80133c2:	6912      	ldr	r2, [r2, #16]
 80133c4:	4619      	mov	r1, r3
 80133c6:	4620      	mov	r0, r4
 80133c8:	4790      	blx	r2
 80133ca:	e7f2      	b.n	80133b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80133cc:	20013910 	.word	0x20013910
 80133d0:	20013918 	.word	0x20013918

080133d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80133d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80133d8:	4b44      	ldr	r3, [pc, #272]	; (80134ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80133da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80133dc:	881b      	ldrh	r3, [r3, #0]
 80133de:	4293      	cmp	r3, r2
 80133e0:	b08e      	sub	sp, #56	; 0x38
 80133e2:	4604      	mov	r4, r0
 80133e4:	d97e      	bls.n	80134e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80133e6:	6808      	ldr	r0, [r1, #0]
 80133e8:	4d41      	ldr	r5, [pc, #260]	; (80134f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80133ea:	6849      	ldr	r1, [r1, #4]
 80133ec:	ab05      	add	r3, sp, #20
 80133ee:	c303      	stmia	r3!, {r0, r1}
 80133f0:	4611      	mov	r1, r2
 80133f2:	6828      	ldr	r0, [r5, #0]
 80133f4:	f7f5 fb1c 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80133f8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80133fc:	2b00      	cmp	r3, #0
 80133fe:	db11      	blt.n	8013424 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013400:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013404:	2b00      	cmp	r3, #0
 8013406:	db0d      	blt.n	8013424 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013408:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801340a:	4298      	cmp	r0, r3
 801340c:	d10a      	bne.n	8013424 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801340e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013412:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013416:	ab09      	add	r3, sp, #36	; 0x24
 8013418:	e883 0003 	stmia.w	r3, {r0, r1}
 801341c:	4619      	mov	r1, r3
 801341e:	a805      	add	r0, sp, #20
 8013420:	f7fe f860 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8013424:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013428:	2b00      	cmp	r3, #0
 801342a:	dd5b      	ble.n	80134e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801342c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013430:	2b00      	cmp	r3, #0
 8013432:	dd57      	ble.n	80134e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013434:	4f2f      	ldr	r7, [pc, #188]	; (80134f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013436:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013438:	683b      	ldr	r3, [r7, #0]
 801343a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801343e:	4b2e      	ldr	r3, [pc, #184]	; (80134f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013440:	681b      	ldr	r3, [r3, #0]
 8013442:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013446:	2e00      	cmp	r6, #0
 8013448:	d04c      	beq.n	80134e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801344a:	6823      	ldr	r3, [r4, #0]
 801344c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013450:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013452:	4620      	mov	r0, r4
 8013454:	4798      	blx	r3
 8013456:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013458:	683b      	ldr	r3, [r7, #0]
 801345a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801345e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013462:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013466:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013468:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801346c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013470:	785b      	ldrb	r3, [r3, #1]
 8013472:	9609      	str	r6, [sp, #36]	; 0x24
 8013474:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013478:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801347c:	4b1f      	ldr	r3, [pc, #124]	; (80134fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801347e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8013482:	681b      	ldr	r3, [r3, #0]
 8013484:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8013488:	910b      	str	r1, [sp, #44]	; 0x2c
 801348a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801348e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8013492:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8013496:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801349a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801349e:	b10a      	cbz	r2, 80134a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80134a0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80134a2:	b906      	cbnz	r6, 80134a6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80134a4:	689e      	ldr	r6, [r3, #8]
 80134a6:	af07      	add	r7, sp, #28
 80134a8:	4621      	mov	r1, r4
 80134aa:	4638      	mov	r0, r7
 80134ac:	f004 fab0 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80134b0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80134b2:	6828      	ldr	r0, [r5, #0]
 80134b4:	f7f5 fabc 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 80134b8:	6823      	ldr	r3, [r4, #0]
 80134ba:	4605      	mov	r5, r0
 80134bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80134be:	4620      	mov	r0, r4
 80134c0:	4798      	blx	r3
 80134c2:	6823      	ldr	r3, [r4, #0]
 80134c4:	4680      	mov	r8, r0
 80134c6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80134ca:	4620      	mov	r0, r4
 80134cc:	4798      	blx	r3
 80134ce:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80134d2:	ab09      	add	r3, sp, #36	; 0x24
 80134d4:	9300      	str	r3, [sp, #0]
 80134d6:	9501      	str	r5, [sp, #4]
 80134d8:	ab05      	add	r3, sp, #20
 80134da:	e897 0006 	ldmia.w	r7, {r1, r2}
 80134de:	4630      	mov	r0, r6
 80134e0:	f7f5 fa58 	bl	8008994 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80134e4:	b00e      	add	sp, #56	; 0x38
 80134e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80134ea:	bf00      	nop
 80134ec:	20013910 	.word	0x20013910
 80134f0:	20013918 	.word	0x20013918
 80134f4:	2001390c 	.word	0x2001390c
 80134f8:	20013914 	.word	0x20013914
 80134fc:	200138b4 	.word	0x200138b4

08013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013500:	b538      	push	{r3, r4, r5, lr}
 8013502:	4b0e      	ldr	r3, [pc, #56]	; (801353c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013504:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013506:	881b      	ldrh	r3, [r3, #0]
 8013508:	429a      	cmp	r2, r3
 801350a:	4604      	mov	r4, r0
 801350c:	d214      	bcs.n	8013538 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801350e:	6803      	ldr	r3, [r0, #0]
 8013510:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013512:	4798      	blx	r3
 8013514:	6823      	ldr	r3, [r4, #0]
 8013516:	4605      	mov	r5, r0
 8013518:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801351a:	4620      	mov	r0, r4
 801351c:	4798      	blx	r3
 801351e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013522:	b22d      	sxth	r5, r5
 8013524:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013528:	4601      	mov	r1, r0
 801352a:	bf06      	itte	eq
 801352c:	4602      	moveq	r2, r0
 801352e:	4629      	moveq	r1, r5
 8013530:	462a      	movne	r2, r5
 8013532:	4620      	mov	r0, r4
 8013534:	f7fc feca 	bl	80102cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013538:	bd38      	pop	{r3, r4, r5, pc}
 801353a:	bf00      	nop
 801353c:	20013910 	.word	0x20013910

08013540 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013540:	b530      	push	{r4, r5, lr}
 8013542:	888b      	ldrh	r3, [r1, #4]
 8013544:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013546:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801354a:	b085      	sub	sp, #20
 801354c:	4604      	mov	r4, r0
 801354e:	b923      	cbnz	r3, 801355a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013550:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013554:	b90b      	cbnz	r3, 801355a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013556:	f7ff ffd3 	bl	8013500 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801355a:	6823      	ldr	r3, [r4, #0]
 801355c:	466d      	mov	r5, sp
 801355e:	4621      	mov	r1, r4
 8013560:	4628      	mov	r0, r5
 8013562:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013566:	4798      	blx	r3
 8013568:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801356c:	343c      	adds	r4, #60	; 0x3c
 801356e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013572:	b005      	add	sp, #20
 8013574:	bd30      	pop	{r4, r5, pc}

08013576 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013576:	2300      	movs	r3, #0
 8013578:	8083      	strh	r3, [r0, #4]
 801357a:	80c3      	strh	r3, [r0, #6]
 801357c:	8003      	strh	r3, [r0, #0]
 801357e:	8043      	strh	r3, [r0, #2]
 8013580:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8013584:	2bff      	cmp	r3, #255	; 0xff
 8013586:	bf01      	itttt	eq
 8013588:	890b      	ldrheq	r3, [r1, #8]
 801358a:	8083      	strheq	r3, [r0, #4]
 801358c:	894b      	ldrheq	r3, [r1, #10]
 801358e:	80c3      	strheq	r3, [r0, #6]
 8013590:	4770      	bx	lr
	...

08013594 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013594:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013596:	4604      	mov	r4, r0
 8013598:	6808      	ldr	r0, [r1, #0]
 801359a:	6849      	ldr	r1, [r1, #4]
 801359c:	466b      	mov	r3, sp
 801359e:	c303      	stmia	r3!, {r0, r1}
 80135a0:	6823      	ldr	r3, [r4, #0]
 80135a2:	4669      	mov	r1, sp
 80135a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135a6:	4620      	mov	r0, r4
 80135a8:	4798      	blx	r3
 80135aa:	4b08      	ldr	r3, [pc, #32]	; (80135cc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80135ac:	681b      	ldr	r3, [r3, #0]
 80135ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80135b2:	b10a      	cbz	r2, 80135b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80135b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80135b6:	b900      	cbnz	r0, 80135ba <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80135b8:	6898      	ldr	r0, [r3, #8]
 80135ba:	6803      	ldr	r3, [r0, #0]
 80135bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80135be:	6a1d      	ldr	r5, [r3, #32]
 80135c0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80135c4:	4669      	mov	r1, sp
 80135c6:	47a8      	blx	r5
 80135c8:	b003      	add	sp, #12
 80135ca:	bd30      	pop	{r4, r5, pc}
 80135cc:	200138b4 	.word	0x200138b4

080135d0 <_ZN8touchgfx3BoxD1Ev>:
 80135d0:	4770      	bx	lr

080135d2 <_ZN8touchgfx3BoxD0Ev>:
 80135d2:	b510      	push	{r4, lr}
 80135d4:	212c      	movs	r1, #44	; 0x2c
 80135d6:	4604      	mov	r4, r0
 80135d8:	f017 f94b 	bl	802a872 <_ZdlPvj>
 80135dc:	4620      	mov	r0, r4
 80135de:	bd10      	pop	{r4, pc}

080135e0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80135e0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80135e4:	b12a      	cbz	r2, 80135f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80135e6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80135ea:	b112      	cbz	r2, 80135f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80135ec:	6803      	ldr	r3, [r0, #0]
 80135ee:	695b      	ldr	r3, [r3, #20]
 80135f0:	4718      	bx	r3
 80135f2:	4770      	bx	lr

080135f4 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80135f4:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80135f8:	600b      	str	r3, [r1, #0]
 80135fa:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80135fe:	6013      	str	r3, [r2, #0]
 8013600:	4770      	bx	lr

08013602 <_ZN8touchgfx5Gauge8setWidthEs>:
 8013602:	8101      	strh	r1, [r0, #8]
 8013604:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8013608:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 801360c:	4770      	bx	lr

0801360e <_ZN8touchgfx5Gauge9setHeightEs>:
 801360e:	8141      	strh	r1, [r0, #10]
 8013610:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8013614:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8013618:	4770      	bx	lr

0801361a <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 801361a:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 801361e:	4770      	bx	lr

08013620 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8013620:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013624:	4770      	bx	lr

08013626 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013626:	4770      	bx	lr

08013628 <_ZN8touchgfx5GaugeD1Ev>:
 8013628:	4770      	bx	lr

0801362a <_ZN8touchgfx5Gauge8setAlphaEh>:
 801362a:	b538      	push	{r3, r4, r5, lr}
 801362c:	4604      	mov	r4, r0
 801362e:	460d      	mov	r5, r1
 8013630:	f7fc fd65 	bl	80100fe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013634:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013638:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 801363c:	bd38      	pop	{r3, r4, r5, pc}

0801363e <_ZN8touchgfx5GaugeD0Ev>:
 801363e:	b510      	push	{r4, lr}
 8013640:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013644:	4604      	mov	r4, r0
 8013646:	f017 f914 	bl	802a872 <_ZdlPvj>
 801364a:	4620      	mov	r0, r4
 801364c:	bd10      	pop	{r4, pc}

0801364e <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801364e:	b510      	push	{r4, lr}
 8013650:	6803      	ldr	r3, [r0, #0]
 8013652:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013656:	4604      	mov	r4, r0
 8013658:	4798      	blx	r3
 801365a:	b170      	cbz	r0, 801367a <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801365c:	6823      	ldr	r3, [r4, #0]
 801365e:	4620      	mov	r0, r4
 8013660:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013664:	4798      	blx	r3
 8013666:	b140      	cbz	r0, 801367a <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013668:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801366c:	b12b      	cbz	r3, 801367a <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801366e:	6823      	ldr	r3, [r4, #0]
 8013670:	4620      	mov	r0, r4
 8013672:	695b      	ldr	r3, [r3, #20]
 8013674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013678:	4718      	bx	r3
 801367a:	bd10      	pop	{r4, pc}

0801367c <_ZN8touchgfx5GaugeC1Ev>:
 801367c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801367e:	4604      	mov	r4, r0
 8013680:	4626      	mov	r6, r4
 8013682:	f7fc fe5d 	bl	8010340 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013686:	4b18      	ldr	r3, [pc, #96]	; (80136e8 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013688:	f846 3bb4 	str.w	r3, [r6], #180
 801368c:	a902      	add	r1, sp, #8
 801368e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013692:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013696:	4630      	mov	r0, r6
 8013698:	f015 f9ae 	bl	80289f8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 801369c:	2500      	movs	r5, #0
 801369e:	2301      	movs	r3, #1
 80136a0:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 80136a4:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 80136a8:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 80136ac:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 80136b0:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 80136b4:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 80136b8:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 80136bc:	4638      	mov	r0, r7
 80136be:	f014 fbdf 	bl	8027e80 <_ZN8touchgfx6CircleC1Ev>
 80136c2:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80136c6:	4620      	mov	r0, r4
 80136c8:	f7fd fdc6 	bl	8011258 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80136cc:	4639      	mov	r1, r7
 80136ce:	4620      	mov	r0, r4
 80136d0:	f7fd fd81 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80136d4:	4620      	mov	r0, r4
 80136d6:	4631      	mov	r1, r6
 80136d8:	f7fd fd7d 	bl	80111d6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80136dc:	4620      	mov	r0, r4
 80136de:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 80136e2:	b003      	add	sp, #12
 80136e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80136e6:	bf00      	nop
 80136e8:	0802fdec 	.word	0x0802fdec

080136ec <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80136ec:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80136f0:	4770      	bx	lr

080136f2 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80136f2:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80136f6:	4770      	bx	lr

080136f8 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80136f8:	b538      	push	{r3, r4, r5, lr}
 80136fa:	8902      	ldrh	r2, [r0, #8]
 80136fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013700:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8013704:	4604      	mov	r4, r0
 8013706:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 801370a:	2200      	movs	r2, #0
 801370c:	4611      	mov	r1, r2
 801370e:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8013712:	4628      	mov	r0, r5
 8013714:	f7ef f897 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8013718:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 801371c:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013720:	1a9b      	subs	r3, r3, r2
 8013722:	ee07 3a90 	vmov	s15, r3
 8013726:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 801372a:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 801372e:	1a9b      	subs	r3, r3, r2
 8013730:	ee07 3a10 	vmov	s14, r3
 8013734:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013738:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801373c:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8013740:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013744:	4628      	mov	r0, r5
 8013746:	f015 f9a3 	bl	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801374a:	4b16      	ldr	r3, [pc, #88]	; (80137a4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 801374c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8013750:	4628      	mov	r0, r5
 8013752:	f015 f99d 	bl	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013756:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 801375a:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 801375e:	ee07 3a90 	vmov	s15, r3
 8013762:	ee07 2a10 	vmov	s14, r2
 8013766:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801376a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801376e:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8013772:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013776:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 801377a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 801377e:	4628      	mov	r0, r5
 8013780:	f015 f986 	bl	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013784:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013788:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 801378c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8013790:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013794:	4628      	mov	r0, r5
 8013796:	f015 f97b 	bl	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801379a:	2301      	movs	r3, #1
 801379c:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80137a0:	bd38      	pop	{r3, r4, r5, pc}
 80137a2:	bf00      	nop
 80137a4:	43960000 	.word	0x43960000

080137a8 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 80137a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80137aa:	4604      	mov	r4, r0
 80137ac:	a802      	add	r0, sp, #8
 80137ae:	4616      	mov	r6, r2
 80137b0:	f820 1d04 	strh.w	r1, [r0, #-4]!
 80137b4:	461d      	mov	r5, r3
 80137b6:	4601      	mov	r1, r0
 80137b8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80137bc:	f015 fabe 	bl	8028d3c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 80137c0:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 80137c4:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 80137c8:	4620      	mov	r0, r4
 80137ca:	f7ff ff95 	bl	80136f8 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80137ce:	b002      	add	sp, #8
 80137d0:	bd70      	pop	{r4, r5, r6, pc}

080137d2 <_ZN8touchgfx5Gauge9setCenterEii>:
 80137d2:	b570      	push	{r4, r5, r6, lr}
 80137d4:	4606      	mov	r6, r0
 80137d6:	460d      	mov	r5, r1
 80137d8:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 80137dc:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 80137e0:	4614      	mov	r4, r2
 80137e2:	f7ff ff89 	bl	80136f8 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80137e6:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 80137ea:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 80137ee:	1aa4      	subs	r4, r4, r2
 80137f0:	1a6d      	subs	r5, r5, r1
 80137f2:	0164      	lsls	r4, r4, #5
 80137f4:	016d      	lsls	r5, r5, #5
 80137f6:	3410      	adds	r4, #16
 80137f8:	3510      	adds	r5, #16
 80137fa:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 80137fe:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8013802:	bd70      	pop	{r4, r5, r6, pc}

08013804 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013804:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013806:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013808:	0149      	lsls	r1, r1, #5
 801380a:	4299      	cmp	r1, r3
 801380c:	4604      	mov	r4, r0
 801380e:	9101      	str	r1, [sp, #4]
 8013810:	d00b      	beq.n	801382a <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8013812:	4601      	mov	r1, r0
 8013814:	aa01      	add	r2, sp, #4
 8013816:	a802      	add	r0, sp, #8
 8013818:	f014 fd30 	bl	802827c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 801381c:	9b01      	ldr	r3, [sp, #4]
 801381e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013820:	6823      	ldr	r3, [r4, #0]
 8013822:	a902      	add	r1, sp, #8
 8013824:	691b      	ldr	r3, [r3, #16]
 8013826:	4620      	mov	r0, r4
 8013828:	4798      	blx	r3
 801382a:	b004      	add	sp, #16
 801382c:	bd10      	pop	{r4, pc}
	...

08013830 <_ZN8touchgfx5Gauge8setValueEi>:
 8013830:	b570      	push	{r4, r5, r6, lr}
 8013832:	4604      	mov	r4, r0
 8013834:	f7fc fcb6 	bl	80101a4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013838:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 801383c:	429a      	cmp	r2, r3
 801383e:	bfac      	ite	ge
 8013840:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013844:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013848:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 801384c:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8013850:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013854:	1ac9      	subs	r1, r1, r3
 8013856:	2900      	cmp	r1, #0
 8013858:	bfb8      	it	lt
 801385a:	4249      	neglt	r1, r1
 801385c:	b289      	uxth	r1, r1
 801385e:	4620      	mov	r0, r4
 8013860:	f7fc fcc2 	bl	80101e8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013864:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013868:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 801386c:	eddf 6a19 	vldr	s13, [pc, #100]	; 80138d4 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8013870:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80138d8 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013874:	429a      	cmp	r2, r3
 8013876:	4605      	mov	r5, r0
 8013878:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 801387c:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013880:	da15      	bge.n	80138ae <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8013882:	1b5b      	subs	r3, r3, r5
 8013884:	ee07 3a90 	vmov	s15, r3
 8013888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801388c:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013890:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013894:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013898:	ee21 1a07 	vmul.f32	s2, s2, s14
 801389c:	f015 f867 	bl	802896e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80138a0:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80138a4:	1b49      	subs	r1, r1, r5
 80138a6:	4630      	mov	r0, r6
 80138a8:	f7ff ffac 	bl	8013804 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 80138ac:	bd70      	pop	{r4, r5, r6, pc}
 80138ae:	442b      	add	r3, r5
 80138b0:	ee07 3a90 	vmov	s15, r3
 80138b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80138b8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80138bc:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80138c0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80138c4:	ee21 1a07 	vmul.f32	s2, s2, s14
 80138c8:	f015 f851 	bl	802896e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80138cc:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80138d0:	4429      	add	r1, r5
 80138d2:	e7e8      	b.n	80138a6 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 80138d4:	43340000 	.word	0x43340000
 80138d8:	40490fdb 	.word	0x40490fdb

080138dc <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 80138dc:	b510      	push	{r4, lr}
 80138de:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 80138e2:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 80138e6:	0149      	lsls	r1, r1, #5
 80138e8:	0152      	lsls	r2, r2, #5
 80138ea:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 80138ee:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 80138f2:	4604      	mov	r4, r0
 80138f4:	f7fc fc00 	bl	80100f8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 80138f8:	4601      	mov	r1, r0
 80138fa:	4620      	mov	r0, r4
 80138fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013900:	f7ff bf96 	b.w	8013830 <_ZN8touchgfx5Gauge8setValueEi>

08013904 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013904:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013908:	4770      	bx	lr

0801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801390a:	b570      	push	{r4, r5, r6, lr}
 801390c:	880b      	ldrh	r3, [r1, #0]
 801390e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013910:	4605      	mov	r5, r0
 8013912:	8813      	ldrh	r3, [r2, #0]
 8013914:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013918:	4604      	mov	r4, r0
 801391a:	4628      	mov	r0, r5
 801391c:	f006 fb44 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013920:	4606      	mov	r6, r0
 8013922:	4628      	mov	r0, r5
 8013924:	f006 fb74 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013928:	6823      	ldr	r3, [r4, #0]
 801392a:	4605      	mov	r5, r0
 801392c:	4631      	mov	r1, r6
 801392e:	4620      	mov	r0, r4
 8013930:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013932:	4798      	blx	r3
 8013934:	6823      	ldr	r3, [r4, #0]
 8013936:	4629      	mov	r1, r5
 8013938:	4620      	mov	r0, r4
 801393a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801393c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013940:	4718      	bx	r3

08013942 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013942:	b510      	push	{r4, lr}
 8013944:	4604      	mov	r4, r0
 8013946:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013948:	b150      	cbz	r0, 8013960 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801394a:	6803      	ldr	r3, [r0, #0]
 801394c:	68db      	ldr	r3, [r3, #12]
 801394e:	4798      	blx	r3
 8013950:	b130      	cbz	r0, 8013960 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013952:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013954:	6803      	ldr	r3, [r0, #0]
 8013956:	4621      	mov	r1, r4
 8013958:	689b      	ldr	r3, [r3, #8]
 801395a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801395e:	4718      	bx	r3
 8013960:	bd10      	pop	{r4, pc}

08013962 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013962:	b510      	push	{r4, lr}
 8013964:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013968:	2bff      	cmp	r3, #255	; 0xff
 801396a:	4604      	mov	r4, r0
 801396c:	d006      	beq.n	801397c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801396e:	2300      	movs	r3, #0
 8013970:	8003      	strh	r3, [r0, #0]
 8013972:	8043      	strh	r3, [r0, #2]
 8013974:	8083      	strh	r3, [r0, #4]
 8013976:	80c3      	strh	r3, [r0, #6]
 8013978:	4620      	mov	r0, r4
 801397a:	bd10      	pop	{r4, pc}
 801397c:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013980:	b11b      	cbz	r3, 801398a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013982:	3130      	adds	r1, #48	; 0x30
 8013984:	f006 fb78 	bl	801a078 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013988:	e7f6      	b.n	8013978 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801398a:	312e      	adds	r1, #46	; 0x2e
 801398c:	e7fa      	b.n	8013984 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013990 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013994:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013998:	b08a      	sub	sp, #40	; 0x28
 801399a:	4604      	mov	r4, r0
 801399c:	4688      	mov	r8, r1
 801399e:	2b00      	cmp	r3, #0
 80139a0:	d066      	beq.n	8013a70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80139a2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80139a4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80139a8:	a805      	add	r0, sp, #20
 80139aa:	f006 fafd 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80139ae:	4607      	mov	r7, r0
 80139b0:	a805      	add	r0, sp, #20
 80139b2:	f006 fb2d 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80139b6:	f9b8 6000 	ldrsh.w	r6, [r8]
 80139ba:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80139be:	4432      	add	r2, r6
 80139c0:	b292      	uxth	r2, r2
 80139c2:	2300      	movs	r3, #0
 80139c4:	fa0f fc82 	sxth.w	ip, r2
 80139c8:	459c      	cmp	ip, r3
 80139ca:	9306      	str	r3, [sp, #24]
 80139cc:	dd52      	ble.n	8013a74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80139ce:	42b7      	cmp	r7, r6
 80139d0:	dd50      	ble.n	8013a74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80139d2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80139d6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80139da:	442b      	add	r3, r5
 80139dc:	b29b      	uxth	r3, r3
 80139de:	b219      	sxth	r1, r3
 80139e0:	2900      	cmp	r1, #0
 80139e2:	dd47      	ble.n	8013a74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80139e4:	42a8      	cmp	r0, r5
 80139e6:	dd45      	ble.n	8013a74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80139e8:	4567      	cmp	r7, ip
 80139ea:	bfb8      	it	lt
 80139ec:	b2ba      	uxthlt	r2, r7
 80139ee:	4288      	cmp	r0, r1
 80139f0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80139f4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80139f8:	bfb8      	it	lt
 80139fa:	b283      	uxthlt	r3, r0
 80139fc:	1b92      	subs	r2, r2, r6
 80139fe:	1b5b      	subs	r3, r3, r5
 8013a00:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013a04:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013a08:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013a0c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013a10:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013a14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013a18:	429a      	cmp	r2, r3
 8013a1a:	d026      	beq.n	8013a6a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013a1c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013a20:	2b00      	cmp	r3, #0
 8013a22:	dd22      	ble.n	8013a6a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013a24:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013a28:	2b00      	cmp	r3, #0
 8013a2a:	dd1e      	ble.n	8013a6a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013a2c:	2300      	movs	r3, #0
 8013a2e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013a32:	6823      	ldr	r3, [r4, #0]
 8013a34:	a908      	add	r1, sp, #32
 8013a36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a38:	4620      	mov	r0, r4
 8013a3a:	4798      	blx	r3
 8013a3c:	4b0f      	ldr	r3, [pc, #60]	; (8013a7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013a3e:	681b      	ldr	r3, [r3, #0]
 8013a40:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013a44:	b10a      	cbz	r2, 8013a4a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013a46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013a48:	b900      	cbnz	r0, 8013a4c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013a4a:	6898      	ldr	r0, [r3, #8]
 8013a4c:	6801      	ldr	r1, [r0, #0]
 8013a4e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013a52:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013a56:	2501      	movs	r5, #1
 8013a58:	9502      	str	r5, [sp, #8]
 8013a5a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013a5e:	9401      	str	r4, [sp, #4]
 8013a60:	ac06      	add	r4, sp, #24
 8013a62:	9400      	str	r4, [sp, #0]
 8013a64:	688c      	ldr	r4, [r1, #8]
 8013a66:	a905      	add	r1, sp, #20
 8013a68:	47a0      	blx	r4
 8013a6a:	b00a      	add	sp, #40	; 0x28
 8013a6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a70:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013a72:	e797      	b.n	80139a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013a74:	2300      	movs	r3, #0
 8013a76:	9307      	str	r3, [sp, #28]
 8013a78:	e7ca      	b.n	8013a10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013a7a:	bf00      	nop
 8013a7c:	200138b4 	.word	0x200138b4

08013a80 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013a80:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013a84:	b12a      	cbz	r2, 8013a92 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013a86:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013a8a:	b112      	cbz	r2, 8013a92 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013a8c:	6803      	ldr	r3, [r0, #0]
 8013a8e:	695b      	ldr	r3, [r3, #20]
 8013a90:	4718      	bx	r3
 8013a92:	4770      	bx	lr

08013a94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013a94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a98:	4b2f      	ldr	r3, [pc, #188]	; (8013b58 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013a9a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013a9c:	881b      	ldrh	r3, [r3, #0]
 8013a9e:	4293      	cmp	r3, r2
 8013aa0:	b08d      	sub	sp, #52	; 0x34
 8013aa2:	4604      	mov	r4, r0
 8013aa4:	460f      	mov	r7, r1
 8013aa6:	d954      	bls.n	8013b52 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013aa8:	4b2c      	ldr	r3, [pc, #176]	; (8013b5c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013aaa:	6819      	ldr	r1, [r3, #0]
 8013aac:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013ab0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013ab4:	4a2a      	ldr	r2, [pc, #168]	; (8013b60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013ab6:	6812      	ldr	r2, [r2, #0]
 8013ab8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013abc:	2900      	cmp	r1, #0
 8013abe:	d048      	beq.n	8013b52 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013ac0:	785a      	ldrb	r2, [r3, #1]
 8013ac2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013ac6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013aca:	4b26      	ldr	r3, [pc, #152]	; (8013b64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013acc:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013ad0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013ad4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013ad8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013ada:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8013ade:	9107      	str	r1, [sp, #28]
 8013ae0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013ae4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013ae8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013aec:	681a      	ldr	r2, [r3, #0]
 8013aee:	f88d 8020 	strb.w	r8, [sp, #32]
 8013af2:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013af6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013afa:	9609      	str	r6, [sp, #36]	; 0x24
 8013afc:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013b00:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013b04:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013b08:	b10b      	cbz	r3, 8013b0e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013b0a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013b0c:	b905      	cbnz	r5, 8013b10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013b0e:	6895      	ldr	r5, [r2, #8]
 8013b10:	ae05      	add	r6, sp, #20
 8013b12:	4621      	mov	r1, r4
 8013b14:	4630      	mov	r0, r6
 8013b16:	f003 ff7b 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013b1a:	4b13      	ldr	r3, [pc, #76]	; (8013b68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013b1c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013b1e:	6818      	ldr	r0, [r3, #0]
 8013b20:	f7f4 ff86 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8013b24:	6823      	ldr	r3, [r4, #0]
 8013b26:	4680      	mov	r8, r0
 8013b28:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013b2a:	4620      	mov	r0, r4
 8013b2c:	4798      	blx	r3
 8013b2e:	6823      	ldr	r3, [r4, #0]
 8013b30:	4681      	mov	r9, r0
 8013b32:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013b36:	4620      	mov	r0, r4
 8013b38:	4798      	blx	r3
 8013b3a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013b3e:	ab07      	add	r3, sp, #28
 8013b40:	9300      	str	r3, [sp, #0]
 8013b42:	f8cd 8004 	str.w	r8, [sp, #4]
 8013b46:	463b      	mov	r3, r7
 8013b48:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013b4c:	4628      	mov	r0, r5
 8013b4e:	f7f4 ff21 	bl	8008994 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013b52:	b00d      	add	sp, #52	; 0x34
 8013b54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b58:	20013910 	.word	0x20013910
 8013b5c:	2001390c 	.word	0x2001390c
 8013b60:	20013914 	.word	0x20013914
 8013b64:	200138b4 	.word	0x200138b4
 8013b68:	20013918 	.word	0x20013918

08013b6c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013b6c:	4770      	bx	lr

08013b6e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013b6e:	4770      	bx	lr

08013b70 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013b70:	b510      	push	{r4, lr}
 8013b72:	213c      	movs	r1, #60	; 0x3c
 8013b74:	4604      	mov	r4, r0
 8013b76:	f016 fe7c 	bl	802a872 <_ZdlPvj>
 8013b7a:	4620      	mov	r0, r4
 8013b7c:	bd10      	pop	{r4, pc}

08013b7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013b7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b82:	461c      	mov	r4, r3
 8013b84:	4606      	mov	r6, r0
 8013b86:	9f06      	ldr	r7, [sp, #24]
 8013b88:	f7ff febf 	bl	801390a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013b8c:	8823      	ldrh	r3, [r4, #0]
 8013b8e:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013b90:	883b      	ldrh	r3, [r7, #0]
 8013b92:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013b94:	4638      	mov	r0, r7
 8013b96:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013b9a:	f006 fa05 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b9e:	f04f 0802 	mov.w	r8, #2
 8013ba2:	fb95 f5f8 	sdiv	r5, r5, r8
 8013ba6:	b2ad      	uxth	r5, r5
 8013ba8:	fb90 f0f8 	sdiv	r0, r0, r8
 8013bac:	1a2d      	subs	r5, r5, r0
 8013bae:	8735      	strh	r5, [r6, #56]	; 0x38
 8013bb0:	4638      	mov	r0, r7
 8013bb2:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013bb6:	fb94 f4f8 	sdiv	r4, r4, r8
 8013bba:	f006 fa29 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013bbe:	b2a4      	uxth	r4, r4
 8013bc0:	fb90 f0f8 	sdiv	r0, r0, r8
 8013bc4:	1a24      	subs	r4, r4, r0
 8013bc6:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013bc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013bcc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013bcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013bd0:	4604      	mov	r4, r0
 8013bd2:	b08c      	sub	sp, #48	; 0x30
 8013bd4:	460d      	mov	r5, r1
 8013bd6:	f7ff fedb 	bl	8013990 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013bda:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013bde:	2b00      	cmp	r3, #0
 8013be0:	d05d      	beq.n	8013c9e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8013be2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013be4:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013be8:	a805      	add	r0, sp, #20
 8013bea:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013bee:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8013bf2:	f006 f9d9 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013bf6:	4606      	mov	r6, r0
 8013bf8:	a805      	add	r0, sp, #20
 8013bfa:	f006 fa09 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013bfe:	6869      	ldr	r1, [r5, #4]
 8013c00:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c04:	6828      	ldr	r0, [r5, #0]
 8013c06:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013c0a:	ab08      	add	r3, sp, #32
 8013c0c:	ad08      	add	r5, sp, #32
 8013c0e:	c303      	stmia	r3!, {r0, r1}
 8013c10:	a906      	add	r1, sp, #24
 8013c12:	4628      	mov	r0, r5
 8013c14:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013c18:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013c1c:	f7fd fc62 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8013c20:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013c24:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013c28:	429a      	cmp	r2, r3
 8013c2a:	d035      	beq.n	8013c98 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013c2c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013c30:	2b00      	cmp	r3, #0
 8013c32:	dd31      	ble.n	8013c98 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013c34:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013c38:	2b00      	cmp	r3, #0
 8013c3a:	dd2d      	ble.n	8013c98 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013c3c:	2300      	movs	r3, #0
 8013c3e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013c42:	6823      	ldr	r3, [r4, #0]
 8013c44:	a90a      	add	r1, sp, #40	; 0x28
 8013c46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c48:	4620      	mov	r0, r4
 8013c4a:	4798      	blx	r3
 8013c4c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013c50:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8013c52:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013c56:	1a9b      	subs	r3, r3, r2
 8013c58:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013c5c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013c5e:	1ac9      	subs	r1, r1, r3
 8013c60:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8013c64:	490f      	ldr	r1, [pc, #60]	; (8013ca4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8013c66:	6809      	ldr	r1, [r1, #0]
 8013c68:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013c6c:	b108      	cbz	r0, 8013c72 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013c6e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013c70:	b900      	cbnz	r0, 8013c74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8013c72:	6888      	ldr	r0, [r1, #8]
 8013c74:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013c78:	440b      	add	r3, r1
 8013c7a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013c7e:	2601      	movs	r6, #1
 8013c80:	440a      	add	r2, r1
 8013c82:	6801      	ldr	r1, [r0, #0]
 8013c84:	9602      	str	r6, [sp, #8]
 8013c86:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013c8a:	e9cd 5400 	strd	r5, r4, [sp]
 8013c8e:	b21b      	sxth	r3, r3
 8013c90:	688c      	ldr	r4, [r1, #8]
 8013c92:	b212      	sxth	r2, r2
 8013c94:	a905      	add	r1, sp, #20
 8013c96:	47a0      	blx	r4
 8013c98:	b00c      	add	sp, #48	; 0x30
 8013c9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c9e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013ca0:	e7a0      	b.n	8013be4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8013ca2:	bf00      	nop
 8013ca4:	200138b4 	.word	0x200138b4

08013ca8 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013ca8:	b510      	push	{r4, lr}
 8013caa:	2101      	movs	r1, #1
 8013cac:	2200      	movs	r2, #0
 8013cae:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013cb2:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013cb6:	4c0e      	ldr	r4, [pc, #56]	; (8013cf0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013cb8:	8082      	strh	r2, [r0, #4]
 8013cba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013cbe:	80c2      	strh	r2, [r0, #6]
 8013cc0:	8102      	strh	r2, [r0, #8]
 8013cc2:	8142      	strh	r2, [r0, #10]
 8013cc4:	8182      	strh	r2, [r0, #12]
 8013cc6:	81c2      	strh	r2, [r0, #14]
 8013cc8:	8202      	strh	r2, [r0, #16]
 8013cca:	8242      	strh	r2, [r0, #18]
 8013ccc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013cd0:	61c2      	str	r2, [r0, #28]
 8013cd2:	8402      	strh	r2, [r0, #32]
 8013cd4:	8442      	strh	r2, [r0, #34]	; 0x22
 8013cd6:	6282      	str	r2, [r0, #40]	; 0x28
 8013cd8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013cdc:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013cde:	8601      	strh	r1, [r0, #48]	; 0x30
 8013ce0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013ce4:	6004      	str	r4, [r0, #0]
 8013ce6:	8681      	strh	r1, [r0, #52]	; 0x34
 8013ce8:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013cea:	8702      	strh	r2, [r0, #56]	; 0x38
 8013cec:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013cee:	bd10      	pop	{r4, pc}
 8013cf0:	0802fed4 	.word	0x0802fed4

08013cf4 <_ZN8touchgfx5ImageD1Ev>:
 8013cf4:	4770      	bx	lr

08013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013cf6:	b570      	push	{r4, r5, r6, lr}
 8013cf8:	880b      	ldrh	r3, [r1, #0]
 8013cfa:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013cfc:	4604      	mov	r4, r0
 8013cfe:	4608      	mov	r0, r1
 8013d00:	460d      	mov	r5, r1
 8013d02:	f006 f951 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013d06:	4606      	mov	r6, r0
 8013d08:	4628      	mov	r0, r5
 8013d0a:	f006 f981 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013d0e:	6823      	ldr	r3, [r4, #0]
 8013d10:	4605      	mov	r5, r0
 8013d12:	4631      	mov	r1, r6
 8013d14:	4620      	mov	r0, r4
 8013d16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013d18:	4798      	blx	r3
 8013d1a:	6823      	ldr	r3, [r4, #0]
 8013d1c:	4629      	mov	r1, r5
 8013d1e:	4620      	mov	r0, r4
 8013d20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013d22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d26:	4718      	bx	r3

08013d28 <_ZN8touchgfx5ImageD0Ev>:
 8013d28:	b510      	push	{r4, lr}
 8013d2a:	212c      	movs	r1, #44	; 0x2c
 8013d2c:	4604      	mov	r4, r0
 8013d2e:	f016 fda0 	bl	802a872 <_ZdlPvj>
 8013d32:	4620      	mov	r0, r4
 8013d34:	bd10      	pop	{r4, pc}

08013d36 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013d36:	b510      	push	{r4, lr}
 8013d38:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013d3c:	2bff      	cmp	r3, #255	; 0xff
 8013d3e:	4604      	mov	r4, r0
 8013d40:	d006      	beq.n	8013d50 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013d42:	2300      	movs	r3, #0
 8013d44:	8003      	strh	r3, [r0, #0]
 8013d46:	8043      	strh	r3, [r0, #2]
 8013d48:	8083      	strh	r3, [r0, #4]
 8013d4a:	80c3      	strh	r3, [r0, #6]
 8013d4c:	4620      	mov	r0, r4
 8013d4e:	bd10      	pop	{r4, pc}
 8013d50:	3126      	adds	r1, #38	; 0x26
 8013d52:	f006 f991 	bl	801a078 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013d56:	e7f9      	b.n	8013d4c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013d58 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013d58:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013d5c:	b12a      	cbz	r2, 8013d6a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013d5e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013d62:	b112      	cbz	r2, 8013d6a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013d64:	6803      	ldr	r3, [r0, #0]
 8013d66:	695b      	ldr	r3, [r3, #20]
 8013d68:	4718      	bx	r3
 8013d6a:	4770      	bx	lr

08013d6c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013d6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d70:	4604      	mov	r4, r0
 8013d72:	b088      	sub	sp, #32
 8013d74:	f854 3b26 	ldr.w	r3, [r4], #38
 8013d78:	2500      	movs	r5, #0
 8013d7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d7c:	460f      	mov	r7, r1
 8013d7e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013d82:	a904      	add	r1, sp, #16
 8013d84:	4606      	mov	r6, r0
 8013d86:	4798      	blx	r3
 8013d88:	4620      	mov	r0, r4
 8013d8a:	f006 f90d 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013d8e:	4680      	mov	r8, r0
 8013d90:	4620      	mov	r0, r4
 8013d92:	f006 f93d 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013d96:	9506      	str	r5, [sp, #24]
 8013d98:	ad06      	add	r5, sp, #24
 8013d9a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013d9e:	4639      	mov	r1, r7
 8013da0:	4628      	mov	r0, r5
 8013da2:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013da6:	f7fd fb9d 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8013daa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013dae:	2b00      	cmp	r3, #0
 8013db0:	dd19      	ble.n	8013de6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013db2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013db6:	2b00      	cmp	r3, #0
 8013db8:	dd15      	ble.n	8013de6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013dba:	4b0c      	ldr	r3, [pc, #48]	; (8013dec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013dbc:	681b      	ldr	r3, [r3, #0]
 8013dbe:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013dc2:	b10a      	cbz	r2, 8013dc8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013dc4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013dc6:	b900      	cbnz	r0, 8013dca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013dc8:	6898      	ldr	r0, [r3, #8]
 8013dca:	6801      	ldr	r1, [r0, #0]
 8013dcc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013dd0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013dd4:	2701      	movs	r7, #1
 8013dd6:	9702      	str	r7, [sp, #8]
 8013dd8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013ddc:	e9cd 5600 	strd	r5, r6, [sp]
 8013de0:	688d      	ldr	r5, [r1, #8]
 8013de2:	4621      	mov	r1, r4
 8013de4:	47a8      	blx	r5
 8013de6:	b008      	add	sp, #32
 8013de8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013dec:	200138b4 	.word	0x200138b4

08013df0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013df0:	4770      	bx	lr

08013df2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013df2:	b510      	push	{r4, lr}
 8013df4:	2148      	movs	r1, #72	; 0x48
 8013df6:	4604      	mov	r4, r0
 8013df8:	f016 fd3b 	bl	802a872 <_ZdlPvj>
 8013dfc:	4620      	mov	r0, r4
 8013dfe:	bd10      	pop	{r4, pc}

08013e00 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013e00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013e04:	b08d      	sub	sp, #52	; 0x34
 8013e06:	4604      	mov	r4, r0
 8013e08:	460f      	mov	r7, r1
 8013e0a:	f7ff fdc1 	bl	8013990 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013e0e:	4a55      	ldr	r2, [pc, #340]	; (8013f64 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013e10:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013e12:	8812      	ldrh	r2, [r2, #0]
 8013e14:	429a      	cmp	r2, r3
 8013e16:	f240 8082 	bls.w	8013f1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013e1a:	4d53      	ldr	r5, [pc, #332]	; (8013f68 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013e1c:	682a      	ldr	r2, [r5, #0]
 8013e1e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013e22:	4b52      	ldr	r3, [pc, #328]	; (8013f6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013e24:	681b      	ldr	r3, [r3, #0]
 8013e26:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013e2a:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013e2e:	2200      	movs	r2, #0
 8013e30:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013e34:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013e38:	2a03      	cmp	r2, #3
 8013e3a:	d811      	bhi.n	8013e60 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013e3c:	e8df f002 	tbb	[pc, r2]
 8013e40:	89727902 	.word	0x89727902
 8013e44:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013e48:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013e4c:	1ad2      	subs	r2, r2, r3
 8013e4e:	2002      	movs	r0, #2
 8013e50:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013e54:	fb92 f2f0 	sdiv	r2, r2, r0
 8013e58:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013e5c:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013e60:	f10d 080c 	add.w	r8, sp, #12
 8013e64:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013e68:	f10d 0914 	add.w	r9, sp, #20
 8013e6c:	e889 0003 	stmia.w	r9, {r0, r1}
 8013e70:	4639      	mov	r1, r7
 8013e72:	4648      	mov	r0, r9
 8013e74:	f7fd fb36 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8013e78:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013e7c:	2b00      	cmp	r3, #0
 8013e7e:	dd4e      	ble.n	8013f1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013e80:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013e84:	2b00      	cmp	r3, #0
 8013e86:	dd4a      	ble.n	8013f1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013e88:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013e8c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013e90:	1a9b      	subs	r3, r3, r2
 8013e92:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013e96:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013e9a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013e9e:	1a9b      	subs	r3, r3, r2
 8013ea0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013ea4:	6823      	ldr	r3, [r4, #0]
 8013ea6:	4641      	mov	r1, r8
 8013ea8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013eaa:	4620      	mov	r0, r4
 8013eac:	4798      	blx	r3
 8013eae:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013eb2:	2b00      	cmp	r3, #0
 8013eb4:	d053      	beq.n	8013f5e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8013eb6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013eb8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013eba:	682b      	ldr	r3, [r5, #0]
 8013ebc:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013ec0:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013ec4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013ec8:	785b      	ldrb	r3, [r3, #1]
 8013eca:	9209      	str	r2, [sp, #36]	; 0x24
 8013ecc:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013ed0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013ed4:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013ed8:	2300      	movs	r3, #0
 8013eda:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013ede:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013ee2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013ee6:	4b22      	ldr	r3, [pc, #136]	; (8013f70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013ee8:	9607      	str	r6, [sp, #28]
 8013eea:	681b      	ldr	r3, [r3, #0]
 8013eec:	f88d 5020 	strb.w	r5, [sp, #32]
 8013ef0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013ef4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013ef8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013efc:	b10a      	cbz	r2, 8013f02 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013efe:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013f00:	b904      	cbnz	r4, 8013f04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013f02:	689c      	ldr	r4, [r3, #8]
 8013f04:	4b1b      	ldr	r3, [pc, #108]	; (8013f74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013f06:	6818      	ldr	r0, [r3, #0]
 8013f08:	f7f4 fd92 	bl	8008a30 <_ZNK8touchgfx5Texts7getTextEt>
 8013f0c:	ab07      	add	r3, sp, #28
 8013f0e:	9001      	str	r0, [sp, #4]
 8013f10:	9300      	str	r3, [sp, #0]
 8013f12:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013f16:	464b      	mov	r3, r9
 8013f18:	4620      	mov	r0, r4
 8013f1a:	f7f4 fd3b 	bl	8008994 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013f1e:	b00d      	add	sp, #52	; 0x34
 8013f20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013f24:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013f28:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013f2c:	1ad2      	subs	r2, r2, r3
 8013f2e:	3201      	adds	r2, #1
 8013f30:	e78d      	b.n	8013e4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013f32:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013f36:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013f3a:	1ad2      	subs	r2, r2, r3
 8013f3c:	3201      	adds	r2, #1
 8013f3e:	2002      	movs	r0, #2
 8013f40:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013f44:	fb92 f2f0 	sdiv	r2, r2, r0
 8013f48:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013f4c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013f50:	e786      	b.n	8013e60 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013f52:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013f56:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013f5a:	1ad2      	subs	r2, r2, r3
 8013f5c:	e7ef      	b.n	8013f3e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013f5e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013f60:	e7aa      	b.n	8013eb8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8013f62:	bf00      	nop
 8013f64:	20013910 	.word	0x20013910
 8013f68:	2001390c 	.word	0x2001390c
 8013f6c:	20013914 	.word	0x20013914
 8013f70:	200138b4 	.word	0x200138b4
 8013f74:	20013918 	.word	0x20013918

08013f78 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013f78:	b510      	push	{r4, lr}
 8013f7a:	2101      	movs	r1, #1
 8013f7c:	4c13      	ldr	r4, [pc, #76]	; (8013fcc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013f7e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013f82:	2200      	movs	r2, #0
 8013f84:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013f88:	6004      	str	r4, [r0, #0]
 8013f8a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013f8e:	4c10      	ldr	r4, [pc, #64]	; (8013fd0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013f90:	8082      	strh	r2, [r0, #4]
 8013f92:	80c2      	strh	r2, [r0, #6]
 8013f94:	8102      	strh	r2, [r0, #8]
 8013f96:	8142      	strh	r2, [r0, #10]
 8013f98:	8182      	strh	r2, [r0, #12]
 8013f9a:	81c2      	strh	r2, [r0, #14]
 8013f9c:	8202      	strh	r2, [r0, #16]
 8013f9e:	8242      	strh	r2, [r0, #18]
 8013fa0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013fa4:	61c2      	str	r2, [r0, #28]
 8013fa6:	8402      	strh	r2, [r0, #32]
 8013fa8:	8442      	strh	r2, [r0, #34]	; 0x22
 8013faa:	6282      	str	r2, [r0, #40]	; 0x28
 8013fac:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013fb0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013fb2:	8601      	strh	r1, [r0, #48]	; 0x30
 8013fb4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013fb8:	6344      	str	r4, [r0, #52]	; 0x34
 8013fba:	8701      	strh	r1, [r0, #56]	; 0x38
 8013fbc:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013fc0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8013fc4:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013fc8:	bd10      	pop	{r4, pc}
 8013fca:	bf00      	nop
 8013fcc:	0802ffb8 	.word	0x0802ffb8
 8013fd0:	0802d000 	.word	0x0802d000

08013fd4 <_ZN8touchgfx7OutlineD1Ev>:
 8013fd4:	4770      	bx	lr

08013fd6 <_ZN8touchgfx7OutlineD0Ev>:
 8013fd6:	b510      	push	{r4, lr}
 8013fd8:	2130      	movs	r1, #48	; 0x30
 8013fda:	4604      	mov	r4, r0
 8013fdc:	f016 fc49 	bl	802a872 <_ZdlPvj>
 8013fe0:	4620      	mov	r0, r4
 8013fe2:	bd10      	pop	{r4, pc}

08013fe4 <_ZN8touchgfx7Outline5resetEv>:
 8013fe4:	b510      	push	{r4, lr}
 8013fe6:	4604      	mov	r4, r0
 8013fe8:	f000 fe96 	bl	8014d18 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013fec:	60e0      	str	r0, [r4, #12]
 8013fee:	f000 fe99 	bl	8014d24 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013ff2:	68e3      	ldr	r3, [r4, #12]
 8013ff4:	6123      	str	r3, [r4, #16]
 8013ff6:	08c0      	lsrs	r0, r0, #3
 8013ff8:	2200      	movs	r2, #0
 8013ffa:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013ffe:	3801      	subs	r0, #1
 8014000:	6060      	str	r0, [r4, #4]
 8014002:	60a2      	str	r2, [r4, #8]
 8014004:	8019      	strh	r1, [r3, #0]
 8014006:	8059      	strh	r1, [r3, #2]
 8014008:	809a      	strh	r2, [r3, #4]
 801400a:	80da      	strh	r2, [r3, #6]
 801400c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801400e:	f023 0301 	bic.w	r3, r3, #1
 8014012:	f043 0302 	orr.w	r3, r3, #2
 8014016:	6263      	str	r3, [r4, #36]	; 0x24
 8014018:	bd10      	pop	{r4, pc}
	...

0801401c <_ZN8touchgfx7OutlineC1Ev>:
 801401c:	b510      	push	{r4, lr}
 801401e:	4b0a      	ldr	r3, [pc, #40]	; (8014048 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8014020:	6003      	str	r3, [r0, #0]
 8014022:	2300      	movs	r3, #0
 8014024:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8014028:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801402c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8014030:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8014034:	6243      	str	r3, [r0, #36]	; 0x24
 8014036:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801403a:	4604      	mov	r4, r0
 801403c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8014040:	f7ff ffd0 	bl	8013fe4 <_ZN8touchgfx7Outline5resetEv>
 8014044:	4620      	mov	r0, r4
 8014046:	bd10      	pop	{r4, pc}
 8014048:	0803002c 	.word	0x0803002c

0801404c <_ZN8touchgfx7Outline10renderLineEiiii>:
 801404c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014050:	b093      	sub	sp, #76	; 0x4c
 8014052:	1156      	asrs	r6, r2, #5
 8014054:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8014056:	9305      	str	r3, [sp, #20]
 8014058:	f004 051f 	and.w	r5, r4, #31
 801405c:	1153      	asrs	r3, r2, #5
 801405e:	9504      	str	r5, [sp, #16]
 8014060:	1165      	asrs	r5, r4, #5
 8014062:	9303      	str	r3, [sp, #12]
 8014064:	42ae      	cmp	r6, r5
 8014066:	ea4f 1364 	mov.w	r3, r4, asr #5
 801406a:	9306      	str	r3, [sp, #24]
 801406c:	f002 031f 	and.w	r3, r2, #31
 8014070:	f040 80f8 	bne.w	8014264 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8014074:	9c04      	ldr	r4, [sp, #16]
 8014076:	9a05      	ldr	r2, [sp, #20]
 8014078:	42a3      	cmp	r3, r4
 801407a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801407e:	6902      	ldr	r2, [r0, #16]
 8014080:	d125      	bne.n	80140ce <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8014082:	f9b2 3000 	ldrsh.w	r3, [r2]
 8014086:	459e      	cmp	lr, r3
 8014088:	d103      	bne.n	8014092 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801408a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801408e:	429e      	cmp	r6, r3
 8014090:	d035      	beq.n	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014092:	88d1      	ldrh	r1, [r2, #6]
 8014094:	8893      	ldrh	r3, [r2, #4]
 8014096:	430b      	orrs	r3, r1
 8014098:	d010      	beq.n	80140bc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801409a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801409e:	2b00      	cmp	r3, #0
 80140a0:	db0c      	blt.n	80140bc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80140a2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80140a4:	428b      	cmp	r3, r1
 80140a6:	da09      	bge.n	80140bc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80140a8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80140ac:	428b      	cmp	r3, r1
 80140ae:	bf38      	it	cc
 80140b0:	3208      	addcc	r2, #8
 80140b2:	f103 0301 	add.w	r3, r3, #1
 80140b6:	bf38      	it	cc
 80140b8:	6102      	strcc	r2, [r0, #16]
 80140ba:	6083      	str	r3, [r0, #8]
 80140bc:	6903      	ldr	r3, [r0, #16]
 80140be:	9a03      	ldr	r2, [sp, #12]
 80140c0:	f8a3 e000 	strh.w	lr, [r3]
 80140c4:	805a      	strh	r2, [r3, #2]
 80140c6:	2200      	movs	r2, #0
 80140c8:	809a      	strh	r2, [r3, #4]
 80140ca:	80da      	strh	r2, [r3, #6]
 80140cc:	e017      	b.n	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80140ce:	9c05      	ldr	r4, [sp, #20]
 80140d0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80140d4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80140d8:	f004 041f 	and.w	r4, r4, #31
 80140dc:	114e      	asrs	r6, r1, #5
 80140de:	9402      	str	r4, [sp, #8]
 80140e0:	9c04      	ldr	r4, [sp, #16]
 80140e2:	4576      	cmp	r6, lr
 80140e4:	f001 0c1f 	and.w	ip, r1, #31
 80140e8:	eba4 0403 	sub.w	r4, r4, r3
 80140ec:	d10a      	bne.n	8014104 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80140ee:	9b02      	ldr	r3, [sp, #8]
 80140f0:	449c      	add	ip, r3
 80140f2:	44a0      	add	r8, r4
 80140f4:	fb04 a40c 	mla	r4, r4, ip, sl
 80140f8:	f8a2 8004 	strh.w	r8, [r2, #4]
 80140fc:	80d4      	strh	r4, [r2, #6]
 80140fe:	b013      	add	sp, #76	; 0x4c
 8014100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014104:	9d05      	ldr	r5, [sp, #20]
 8014106:	1a69      	subs	r1, r5, r1
 8014108:	bf5b      	ittet	pl
 801410a:	f1cc 0520 	rsbpl	r5, ip, #32
 801410e:	436c      	mulpl	r4, r5
 8014110:	2500      	movmi	r5, #0
 8014112:	2520      	movpl	r5, #32
 8014114:	bf44      	itt	mi
 8014116:	fb04 f40c 	mulmi.w	r4, r4, ip
 801411a:	4249      	negmi	r1, r1
 801411c:	9501      	str	r5, [sp, #4]
 801411e:	9f01      	ldr	r7, [sp, #4]
 8014120:	fb94 f5f1 	sdiv	r5, r4, r1
 8014124:	fb01 4415 	mls	r4, r1, r5, r4
 8014128:	bf54      	ite	pl
 801412a:	f04f 0901 	movpl.w	r9, #1
 801412e:	f04f 39ff 	movmi.w	r9, #4294967295
 8014132:	2c00      	cmp	r4, #0
 8014134:	bfb8      	it	lt
 8014136:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801413a:	44bc      	add	ip, r7
 801413c:	44a8      	add	r8, r5
 801413e:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014142:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014146:	f8a2 c006 	strh.w	ip, [r2, #6]
 801414a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801414e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014152:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8014156:	bfb8      	it	lt
 8014158:	1864      	addlt	r4, r4, r1
 801415a:	ea58 0202 	orrs.w	r2, r8, r2
 801415e:	444e      	add	r6, r9
 8014160:	d011      	beq.n	8014186 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014162:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014166:	f1b8 0f00 	cmp.w	r8, #0
 801416a:	db0c      	blt.n	8014186 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801416c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801416e:	4590      	cmp	r8, r2
 8014170:	da09      	bge.n	8014186 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014172:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8014176:	4590      	cmp	r8, r2
 8014178:	bf3c      	itt	cc
 801417a:	f10c 0208 	addcc.w	r2, ip, #8
 801417e:	6102      	strcc	r2, [r0, #16]
 8014180:	f108 0201 	add.w	r2, r8, #1
 8014184:	6082      	str	r2, [r0, #8]
 8014186:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801418a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801418e:	f8ac 6000 	strh.w	r6, [ip]
 8014192:	2700      	movs	r7, #0
 8014194:	45b6      	cmp	lr, r6
 8014196:	f8ac 2002 	strh.w	r2, [ip, #2]
 801419a:	f8ac 7004 	strh.w	r7, [ip, #4]
 801419e:	f8ac 7006 	strh.w	r7, [ip, #6]
 80141a2:	442b      	add	r3, r5
 80141a4:	d04d      	beq.n	8014242 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80141a6:	9f04      	ldr	r7, [sp, #16]
 80141a8:	1aff      	subs	r7, r7, r3
 80141aa:	443d      	add	r5, r7
 80141ac:	016d      	lsls	r5, r5, #5
 80141ae:	fb95 f8f1 	sdiv	r8, r5, r1
 80141b2:	fb01 5518 	mls	r5, r1, r8, r5
 80141b6:	2d00      	cmp	r5, #0
 80141b8:	bfb8      	it	lt
 80141ba:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80141be:	f108 0701 	add.w	r7, r8, #1
 80141c2:	bfb8      	it	lt
 80141c4:	186d      	addlt	r5, r5, r1
 80141c6:	1a64      	subs	r4, r4, r1
 80141c8:	9703      	str	r7, [sp, #12]
 80141ca:	f04f 0a00 	mov.w	sl, #0
 80141ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80141d2:	1964      	adds	r4, r4, r5
 80141d4:	bf58      	it	pl
 80141d6:	9f03      	ldrpl	r7, [sp, #12]
 80141d8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80141dc:	bf48      	it	mi
 80141de:	4647      	movmi	r7, r8
 80141e0:	44bb      	add	fp, r7
 80141e2:	f8ac b004 	strh.w	fp, [ip, #4]
 80141e6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80141ea:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80141ee:	f8ac b006 	strh.w	fp, [ip, #6]
 80141f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80141f6:	443b      	add	r3, r7
 80141f8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80141fc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014200:	bf58      	it	pl
 8014202:	1a64      	subpl	r4, r4, r1
 8014204:	ea5b 0707 	orrs.w	r7, fp, r7
 8014208:	444e      	add	r6, r9
 801420a:	d011      	beq.n	8014230 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801420c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014210:	f1bb 0f00 	cmp.w	fp, #0
 8014214:	db0c      	blt.n	8014230 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014216:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014218:	45bb      	cmp	fp, r7
 801421a:	da09      	bge.n	8014230 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801421c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014220:	45bb      	cmp	fp, r7
 8014222:	bf3c      	itt	cc
 8014224:	f10c 0708 	addcc.w	r7, ip, #8
 8014228:	6107      	strcc	r7, [r0, #16]
 801422a:	f10b 0701 	add.w	r7, fp, #1
 801422e:	6087      	str	r7, [r0, #8]
 8014230:	6907      	ldr	r7, [r0, #16]
 8014232:	45b6      	cmp	lr, r6
 8014234:	803e      	strh	r6, [r7, #0]
 8014236:	807a      	strh	r2, [r7, #2]
 8014238:	f8a7 a004 	strh.w	sl, [r7, #4]
 801423c:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014240:	d1c5      	bne.n	80141ce <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8014242:	9a04      	ldr	r2, [sp, #16]
 8014244:	1ad3      	subs	r3, r2, r3
 8014246:	6902      	ldr	r2, [r0, #16]
 8014248:	8891      	ldrh	r1, [r2, #4]
 801424a:	88d6      	ldrh	r6, [r2, #6]
 801424c:	4419      	add	r1, r3
 801424e:	8091      	strh	r1, [r2, #4]
 8014250:	9902      	ldr	r1, [sp, #8]
 8014252:	f101 0c20 	add.w	ip, r1, #32
 8014256:	9901      	ldr	r1, [sp, #4]
 8014258:	ebac 0c01 	sub.w	ip, ip, r1
 801425c:	fb03 630c 	mla	r3, r3, ip, r6
 8014260:	80d3      	strh	r3, [r2, #6]
 8014262:	e74c      	b.n	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014264:	9d05      	ldr	r5, [sp, #20]
 8014266:	1aa2      	subs	r2, r4, r2
 8014268:	eba5 0501 	sub.w	r5, r5, r1
 801426c:	9508      	str	r5, [sp, #32]
 801426e:	9202      	str	r2, [sp, #8]
 8014270:	f140 8128 	bpl.w	80144c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8014274:	9a03      	ldr	r2, [sp, #12]
 8014276:	2a00      	cmp	r2, #0
 8014278:	f6ff af41 	blt.w	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801427c:	9a02      	ldr	r2, [sp, #8]
 801427e:	4252      	negs	r2, r2
 8014280:	9202      	str	r2, [sp, #8]
 8014282:	9a06      	ldr	r2, [sp, #24]
 8014284:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014288:	f04f 34ff 	mov.w	r4, #4294967295
 801428c:	9206      	str	r2, [sp, #24]
 801428e:	462a      	mov	r2, r5
 8014290:	940b      	str	r4, [sp, #44]	; 0x2c
 8014292:	435a      	muls	r2, r3
 8014294:	2400      	movs	r4, #0
 8014296:	9d02      	ldr	r5, [sp, #8]
 8014298:	9401      	str	r4, [sp, #4]
 801429a:	9c02      	ldr	r4, [sp, #8]
 801429c:	fb92 f4f4 	sdiv	r4, r2, r4
 80142a0:	fb05 2214 	mls	r2, r5, r4, r2
 80142a4:	2a00      	cmp	r2, #0
 80142a6:	9207      	str	r2, [sp, #28]
 80142a8:	bfbc      	itt	lt
 80142aa:	1952      	addlt	r2, r2, r5
 80142ac:	9207      	strlt	r2, [sp, #28]
 80142ae:	9a01      	ldr	r2, [sp, #4]
 80142b0:	6905      	ldr	r5, [r0, #16]
 80142b2:	bfb8      	it	lt
 80142b4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80142b8:	eb04 0901 	add.w	r9, r4, r1
 80142bc:	429a      	cmp	r2, r3
 80142be:	ea4f 1669 	mov.w	r6, r9, asr #5
 80142c2:	f040 8112 	bne.w	80144ea <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80142c6:	f9b5 3000 	ldrsh.w	r3, [r5]
 80142ca:	429e      	cmp	r6, r3
 80142cc:	d104      	bne.n	80142d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80142ce:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80142d2:	9a03      	ldr	r2, [sp, #12]
 80142d4:	429a      	cmp	r2, r3
 80142d6:	d01b      	beq.n	8014310 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80142d8:	88ea      	ldrh	r2, [r5, #6]
 80142da:	88ab      	ldrh	r3, [r5, #4]
 80142dc:	4313      	orrs	r3, r2
 80142de:	d010      	beq.n	8014302 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80142e0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80142e4:	2a00      	cmp	r2, #0
 80142e6:	db0c      	blt.n	8014302 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80142e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80142ea:	429a      	cmp	r2, r3
 80142ec:	da09      	bge.n	8014302 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80142ee:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80142f2:	429a      	cmp	r2, r3
 80142f4:	bf38      	it	cc
 80142f6:	3508      	addcc	r5, #8
 80142f8:	f102 0201 	add.w	r2, r2, #1
 80142fc:	bf38      	it	cc
 80142fe:	6105      	strcc	r5, [r0, #16]
 8014300:	6082      	str	r2, [r0, #8]
 8014302:	6903      	ldr	r3, [r0, #16]
 8014304:	9a03      	ldr	r2, [sp, #12]
 8014306:	805a      	strh	r2, [r3, #2]
 8014308:	2200      	movs	r2, #0
 801430a:	801e      	strh	r6, [r3, #0]
 801430c:	809a      	strh	r2, [r3, #4]
 801430e:	80da      	strh	r2, [r3, #6]
 8014310:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014312:	9a03      	ldr	r2, [sp, #12]
 8014314:	6901      	ldr	r1, [r0, #16]
 8014316:	441a      	add	r2, r3
 8014318:	f9b1 3000 	ldrsh.w	r3, [r1]
 801431c:	42b3      	cmp	r3, r6
 801431e:	d103      	bne.n	8014328 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8014320:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014324:	429a      	cmp	r2, r3
 8014326:	d01a      	beq.n	801435e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8014328:	88cc      	ldrh	r4, [r1, #6]
 801432a:	888b      	ldrh	r3, [r1, #4]
 801432c:	4323      	orrs	r3, r4
 801432e:	d010      	beq.n	8014352 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014330:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014334:	2c00      	cmp	r4, #0
 8014336:	db0c      	blt.n	8014352 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014338:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801433a:	429c      	cmp	r4, r3
 801433c:	da09      	bge.n	8014352 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801433e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014342:	429c      	cmp	r4, r3
 8014344:	bf38      	it	cc
 8014346:	3108      	addcc	r1, #8
 8014348:	f104 0401 	add.w	r4, r4, #1
 801434c:	bf38      	it	cc
 801434e:	6101      	strcc	r1, [r0, #16]
 8014350:	6084      	str	r4, [r0, #8]
 8014352:	6903      	ldr	r3, [r0, #16]
 8014354:	2100      	movs	r1, #0
 8014356:	801e      	strh	r6, [r3, #0]
 8014358:	805a      	strh	r2, [r3, #2]
 801435a:	8099      	strh	r1, [r3, #4]
 801435c:	80d9      	strh	r1, [r3, #6]
 801435e:	9b06      	ldr	r3, [sp, #24]
 8014360:	4293      	cmp	r3, r2
 8014362:	f000 8082 	beq.w	801446a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8014366:	9b08      	ldr	r3, [sp, #32]
 8014368:	9c02      	ldr	r4, [sp, #8]
 801436a:	9902      	ldr	r1, [sp, #8]
 801436c:	015b      	lsls	r3, r3, #5
 801436e:	fb93 f1f1 	sdiv	r1, r3, r1
 8014372:	fb04 3311 	mls	r3, r4, r1, r3
 8014376:	2b00      	cmp	r3, #0
 8014378:	9103      	str	r1, [sp, #12]
 801437a:	9308      	str	r3, [sp, #32]
 801437c:	da04      	bge.n	8014388 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801437e:	1e4b      	subs	r3, r1, #1
 8014380:	9303      	str	r3, [sp, #12]
 8014382:	9b08      	ldr	r3, [sp, #32]
 8014384:	4423      	add	r3, r4
 8014386:	9308      	str	r3, [sp, #32]
 8014388:	9b07      	ldr	r3, [sp, #28]
 801438a:	9902      	ldr	r1, [sp, #8]
 801438c:	1a5b      	subs	r3, r3, r1
 801438e:	9307      	str	r3, [sp, #28]
 8014390:	9b01      	ldr	r3, [sp, #4]
 8014392:	f1c3 0320 	rsb	r3, r3, #32
 8014396:	930e      	str	r3, [sp, #56]	; 0x38
 8014398:	990e      	ldr	r1, [sp, #56]	; 0x38
 801439a:	9b01      	ldr	r3, [sp, #4]
 801439c:	1a5b      	subs	r3, r3, r1
 801439e:	464f      	mov	r7, r9
 80143a0:	930a      	str	r3, [sp, #40]	; 0x28
 80143a2:	2600      	movs	r6, #0
 80143a4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80143a8:	185b      	adds	r3, r3, r1
 80143aa:	bf58      	it	pl
 80143ac:	9902      	ldrpl	r1, [sp, #8]
 80143ae:	9307      	str	r3, [sp, #28]
 80143b0:	bf5d      	ittte	pl
 80143b2:	1a5b      	subpl	r3, r3, r1
 80143b4:	9307      	strpl	r3, [sp, #28]
 80143b6:	9b03      	ldrpl	r3, [sp, #12]
 80143b8:	9903      	ldrmi	r1, [sp, #12]
 80143ba:	bf58      	it	pl
 80143bc:	1c59      	addpl	r1, r3, #1
 80143be:	4489      	add	r9, r1
 80143c0:	2a00      	cmp	r2, #0
 80143c2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80143c6:	db2e      	blt.n	8014426 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80143c8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80143ca:	4293      	cmp	r3, r2
 80143cc:	dd2b      	ble.n	8014426 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80143ce:	9c01      	ldr	r4, [sp, #4]
 80143d0:	6905      	ldr	r5, [r0, #16]
 80143d2:	46a0      	mov	r8, r4
 80143d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80143d6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80143da:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80143de:	45a0      	cmp	r8, r4
 80143e0:	f040 814f 	bne.w	8014682 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80143e4:	f9b5 1000 	ldrsh.w	r1, [r5]
 80143e8:	4551      	cmp	r1, sl
 80143ea:	d103      	bne.n	80143f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80143ec:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80143f0:	4291      	cmp	r1, r2
 80143f2:	d018      	beq.n	8014426 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80143f4:	ea5c 010e 	orrs.w	r1, ip, lr
 80143f8:	d00f      	beq.n	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80143fa:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80143fe:	2900      	cmp	r1, #0
 8014400:	db0b      	blt.n	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014402:	428b      	cmp	r3, r1
 8014404:	dd09      	ble.n	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014406:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 801440a:	4299      	cmp	r1, r3
 801440c:	bf38      	it	cc
 801440e:	3508      	addcc	r5, #8
 8014410:	f101 0101 	add.w	r1, r1, #1
 8014414:	bf38      	it	cc
 8014416:	6105      	strcc	r5, [r0, #16]
 8014418:	6081      	str	r1, [r0, #8]
 801441a:	6903      	ldr	r3, [r0, #16]
 801441c:	f8a3 a000 	strh.w	sl, [r3]
 8014420:	805a      	strh	r2, [r3, #2]
 8014422:	809e      	strh	r6, [r3, #4]
 8014424:	80de      	strh	r6, [r3, #6]
 8014426:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014428:	6901      	ldr	r1, [r0, #16]
 801442a:	441a      	add	r2, r3
 801442c:	88cc      	ldrh	r4, [r1, #6]
 801442e:	888b      	ldrh	r3, [r1, #4]
 8014430:	4323      	orrs	r3, r4
 8014432:	d010      	beq.n	8014456 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014434:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014438:	2c00      	cmp	r4, #0
 801443a:	db0c      	blt.n	8014456 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801443c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801443e:	429c      	cmp	r4, r3
 8014440:	da09      	bge.n	8014456 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014442:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014446:	429c      	cmp	r4, r3
 8014448:	bf38      	it	cc
 801444a:	3108      	addcc	r1, #8
 801444c:	f104 0401 	add.w	r4, r4, #1
 8014450:	bf38      	it	cc
 8014452:	6101      	strcc	r1, [r0, #16]
 8014454:	6084      	str	r4, [r0, #8]
 8014456:	6903      	ldr	r3, [r0, #16]
 8014458:	f8a3 a000 	strh.w	sl, [r3]
 801445c:	805a      	strh	r2, [r3, #2]
 801445e:	809e      	strh	r6, [r3, #4]
 8014460:	80de      	strh	r6, [r3, #6]
 8014462:	9b06      	ldr	r3, [sp, #24]
 8014464:	4293      	cmp	r3, r2
 8014466:	464f      	mov	r7, r9
 8014468:	d19c      	bne.n	80143a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 801446a:	9b01      	ldr	r3, [sp, #4]
 801446c:	6907      	ldr	r7, [r0, #16]
 801446e:	f1c3 0620 	rsb	r6, r3, #32
 8014472:	9b05      	ldr	r3, [sp, #20]
 8014474:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014478:	9b04      	ldr	r3, [sp, #16]
 801447a:	429e      	cmp	r6, r3
 801447c:	f040 81cc 	bne.w	8014818 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014480:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014484:	459e      	cmp	lr, r3
 8014486:	d104      	bne.n	8014492 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014488:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801448c:	429a      	cmp	r2, r3
 801448e:	f43f ae36 	beq.w	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014492:	88f9      	ldrh	r1, [r7, #6]
 8014494:	88bb      	ldrh	r3, [r7, #4]
 8014496:	430b      	orrs	r3, r1
 8014498:	d010      	beq.n	80144bc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801449a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801449e:	2b00      	cmp	r3, #0
 80144a0:	db0c      	blt.n	80144bc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80144a2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80144a4:	428b      	cmp	r3, r1
 80144a6:	da09      	bge.n	80144bc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80144a8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80144ac:	428b      	cmp	r3, r1
 80144ae:	bf38      	it	cc
 80144b0:	3708      	addcc	r7, #8
 80144b2:	f103 0301 	add.w	r3, r3, #1
 80144b6:	bf38      	it	cc
 80144b8:	6107      	strcc	r7, [r0, #16]
 80144ba:	6083      	str	r3, [r0, #8]
 80144bc:	6903      	ldr	r3, [r0, #16]
 80144be:	f8a3 e000 	strh.w	lr, [r3]
 80144c2:	e5ff      	b.n	80140c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80144c4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80144c6:	9c03      	ldr	r4, [sp, #12]
 80144c8:	42a2      	cmp	r2, r4
 80144ca:	f6ff ae18 	blt.w	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80144ce:	9c06      	ldr	r4, [sp, #24]
 80144d0:	42a2      	cmp	r2, r4
 80144d2:	bfb8      	it	lt
 80144d4:	3201      	addlt	r2, #1
 80144d6:	9c08      	ldr	r4, [sp, #32]
 80144d8:	bfb8      	it	lt
 80144da:	9206      	strlt	r2, [sp, #24]
 80144dc:	f1c3 0220 	rsb	r2, r3, #32
 80144e0:	4362      	muls	r2, r4
 80144e2:	2401      	movs	r4, #1
 80144e4:	940b      	str	r4, [sp, #44]	; 0x2c
 80144e6:	2420      	movs	r4, #32
 80144e8:	e6d5      	b.n	8014296 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80144ea:	f009 021f 	and.w	r2, r9, #31
 80144ee:	ea4f 1861 	mov.w	r8, r1, asr #5
 80144f2:	920c      	str	r2, [sp, #48]	; 0x30
 80144f4:	9a01      	ldr	r2, [sp, #4]
 80144f6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80144fa:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80144fe:	45b0      	cmp	r8, r6
 8014500:	f001 011f 	and.w	r1, r1, #31
 8014504:	eba2 0203 	sub.w	r2, r2, r3
 8014508:	d108      	bne.n	801451c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 801450a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801450c:	4419      	add	r1, r3
 801450e:	4496      	add	lr, r2
 8014510:	fb02 a101 	mla	r1, r2, r1, sl
 8014514:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014518:	80e9      	strh	r1, [r5, #6]
 801451a:	e6f9      	b.n	8014310 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801451c:	2c00      	cmp	r4, #0
 801451e:	f2c0 80a9 	blt.w	8014674 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8014522:	2701      	movs	r7, #1
 8014524:	f1c1 0c20 	rsb	ip, r1, #32
 8014528:	970a      	str	r7, [sp, #40]	; 0x28
 801452a:	fb02 f20c 	mul.w	r2, r2, ip
 801452e:	2720      	movs	r7, #32
 8014530:	9709      	str	r7, [sp, #36]	; 0x24
 8014532:	fb92 fcf4 	sdiv	ip, r2, r4
 8014536:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014538:	fb04 221c 	mls	r2, r4, ip, r2
 801453c:	2a00      	cmp	r2, #0
 801453e:	bfb8      	it	lt
 8014540:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014544:	4439      	add	r1, r7
 8014546:	fb0c a101 	mla	r1, ip, r1, sl
 801454a:	80e9      	strh	r1, [r5, #6]
 801454c:	44e6      	add	lr, ip
 801454e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014550:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014554:	eb08 0501 	add.w	r5, r8, r1
 8014558:	6901      	ldr	r1, [r0, #16]
 801455a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801455e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014562:	bfb8      	it	lt
 8014564:	1912      	addlt	r2, r2, r4
 8014566:	ea58 070e 	orrs.w	r7, r8, lr
 801456a:	d010      	beq.n	801458e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801456c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014570:	f1be 0f00 	cmp.w	lr, #0
 8014574:	db0b      	blt.n	801458e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014576:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014578:	45be      	cmp	lr, r7
 801457a:	da08      	bge.n	801458e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801457c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014580:	45be      	cmp	lr, r7
 8014582:	bf3c      	itt	cc
 8014584:	3108      	addcc	r1, #8
 8014586:	6101      	strcc	r1, [r0, #16]
 8014588:	f10e 0101 	add.w	r1, lr, #1
 801458c:	6081      	str	r1, [r0, #8]
 801458e:	6901      	ldr	r1, [r0, #16]
 8014590:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014594:	800d      	strh	r5, [r1, #0]
 8014596:	f04f 0e00 	mov.w	lr, #0
 801459a:	42ae      	cmp	r6, r5
 801459c:	f8a1 8002 	strh.w	r8, [r1, #2]
 80145a0:	f8a1 e004 	strh.w	lr, [r1, #4]
 80145a4:	f8a1 e006 	strh.w	lr, [r1, #6]
 80145a8:	4463      	add	r3, ip
 80145aa:	d054      	beq.n	8014656 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80145ac:	9901      	ldr	r1, [sp, #4]
 80145ae:	1ac9      	subs	r1, r1, r3
 80145b0:	4461      	add	r1, ip
 80145b2:	0149      	lsls	r1, r1, #5
 80145b4:	fb91 fef4 	sdiv	lr, r1, r4
 80145b8:	fb04 111e 	mls	r1, r4, lr, r1
 80145bc:	2900      	cmp	r1, #0
 80145be:	bfb8      	it	lt
 80145c0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80145c4:	f10e 0701 	add.w	r7, lr, #1
 80145c8:	bfb8      	it	lt
 80145ca:	1909      	addlt	r1, r1, r4
 80145cc:	1b12      	subs	r2, r2, r4
 80145ce:	970d      	str	r7, [sp, #52]	; 0x34
 80145d0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80145d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80145d6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80145da:	1852      	adds	r2, r2, r1
 80145dc:	bf54      	ite	pl
 80145de:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80145e2:	46f4      	movmi	ip, lr
 80145e4:	44e3      	add	fp, ip
 80145e6:	f8aa b004 	strh.w	fp, [sl, #4]
 80145ea:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80145ee:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80145f2:	f8aa b006 	strh.w	fp, [sl, #6]
 80145f6:	4463      	add	r3, ip
 80145f8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80145fc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014600:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014604:	bf58      	it	pl
 8014606:	1b12      	subpl	r2, r2, r4
 8014608:	443d      	add	r5, r7
 801460a:	ea5b 070a 	orrs.w	r7, fp, sl
 801460e:	d014      	beq.n	801463a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014610:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014614:	f1ba 0f00 	cmp.w	sl, #0
 8014618:	db0f      	blt.n	801463a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801461a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801461c:	45ba      	cmp	sl, r7
 801461e:	da0c      	bge.n	801463a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014620:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014624:	45ba      	cmp	sl, r7
 8014626:	bf38      	it	cc
 8014628:	f10c 0c08 	addcc.w	ip, ip, #8
 801462c:	f10a 0a01 	add.w	sl, sl, #1
 8014630:	bf38      	it	cc
 8014632:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014636:	f8c0 a008 	str.w	sl, [r0, #8]
 801463a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801463e:	f04f 0700 	mov.w	r7, #0
 8014642:	42ae      	cmp	r6, r5
 8014644:	f8ac 5000 	strh.w	r5, [ip]
 8014648:	f8ac 8002 	strh.w	r8, [ip, #2]
 801464c:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014650:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014654:	d1bc      	bne.n	80145d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014656:	6904      	ldr	r4, [r0, #16]
 8014658:	9a01      	ldr	r2, [sp, #4]
 801465a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801465c:	1ad3      	subs	r3, r2, r3
 801465e:	88a2      	ldrh	r2, [r4, #4]
 8014660:	441a      	add	r2, r3
 8014662:	80a2      	strh	r2, [r4, #4]
 8014664:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014666:	3120      	adds	r1, #32
 8014668:	1a89      	subs	r1, r1, r2
 801466a:	88e2      	ldrh	r2, [r4, #6]
 801466c:	fb03 2301 	mla	r3, r3, r1, r2
 8014670:	80e3      	strh	r3, [r4, #6]
 8014672:	e64d      	b.n	8014310 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014674:	f04f 37ff 	mov.w	r7, #4294967295
 8014678:	970a      	str	r7, [sp, #40]	; 0x28
 801467a:	434a      	muls	r2, r1
 801467c:	4264      	negs	r4, r4
 801467e:	2700      	movs	r7, #0
 8014680:	e756      	b.n	8014530 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8014682:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014686:	f009 031f 	and.w	r3, r9, #31
 801468a:	45d0      	cmp	r8, sl
 801468c:	f007 071f 	and.w	r7, r7, #31
 8014690:	930f      	str	r3, [sp, #60]	; 0x3c
 8014692:	fa1f fc8c 	uxth.w	ip, ip
 8014696:	fa1f fe8e 	uxth.w	lr, lr
 801469a:	d10a      	bne.n	80146b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 801469c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801469e:	449c      	add	ip, r3
 80146a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80146a2:	f8a5 c004 	strh.w	ip, [r5, #4]
 80146a6:	441f      	add	r7, r3
 80146a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80146aa:	fb03 e707 	mla	r7, r3, r7, lr
 80146ae:	80ef      	strh	r7, [r5, #6]
 80146b0:	e6b9      	b.n	8014426 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80146b2:	2900      	cmp	r1, #0
 80146b4:	f2c0 80a8 	blt.w	8014808 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 80146b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80146ba:	f1c7 0320 	rsb	r3, r7, #32
 80146be:	4363      	muls	r3, r4
 80146c0:	2401      	movs	r4, #1
 80146c2:	940d      	str	r4, [sp, #52]	; 0x34
 80146c4:	2420      	movs	r4, #32
 80146c6:	940c      	str	r4, [sp, #48]	; 0x30
 80146c8:	fb93 f4f1 	sdiv	r4, r3, r1
 80146cc:	fb01 3b14 	mls	fp, r1, r4, r3
 80146d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80146d2:	f1bb 0f00 	cmp.w	fp, #0
 80146d6:	bfb8      	it	lt
 80146d8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80146dc:	441f      	add	r7, r3
 80146de:	fb04 e707 	mla	r7, r4, r7, lr
 80146e2:	44a4      	add	ip, r4
 80146e4:	f8a5 c004 	strh.w	ip, [r5, #4]
 80146e8:	80ef      	strh	r7, [r5, #6]
 80146ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80146ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146f0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80146f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80146f8:	bfb8      	it	lt
 80146fa:	448b      	addlt	fp, r1
 80146fc:	eb08 0503 	add.w	r5, r8, r3
 8014700:	ea5e 0307 	orrs.w	r3, lr, r7
 8014704:	d011      	beq.n	801472a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014706:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 801470a:	f1be 0f00 	cmp.w	lr, #0
 801470e:	db0c      	blt.n	801472a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014710:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014712:	45be      	cmp	lr, r7
 8014714:	da09      	bge.n	801472a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014716:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801471a:	45be      	cmp	lr, r7
 801471c:	bf3c      	itt	cc
 801471e:	f10c 0708 	addcc.w	r7, ip, #8
 8014722:	6107      	strcc	r7, [r0, #16]
 8014724:	f10e 0701 	add.w	r7, lr, #1
 8014728:	6087      	str	r7, [r0, #8]
 801472a:	6907      	ldr	r7, [r0, #16]
 801472c:	b213      	sxth	r3, r2
 801472e:	9310      	str	r3, [sp, #64]	; 0x40
 8014730:	807b      	strh	r3, [r7, #2]
 8014732:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014734:	803d      	strh	r5, [r7, #0]
 8014736:	4555      	cmp	r5, sl
 8014738:	80be      	strh	r6, [r7, #4]
 801473a:	80fe      	strh	r6, [r7, #6]
 801473c:	eb04 0c03 	add.w	ip, r4, r3
 8014740:	d051      	beq.n	80147e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8014742:	9b01      	ldr	r3, [sp, #4]
 8014744:	eba3 070c 	sub.w	r7, r3, ip
 8014748:	443c      	add	r4, r7
 801474a:	0164      	lsls	r4, r4, #5
 801474c:	fb94 f8f1 	sdiv	r8, r4, r1
 8014750:	fb01 4418 	mls	r4, r1, r8, r4
 8014754:	2c00      	cmp	r4, #0
 8014756:	bfb8      	it	lt
 8014758:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801475c:	ebab 0301 	sub.w	r3, fp, r1
 8014760:	f108 0701 	add.w	r7, r8, #1
 8014764:	bfb8      	it	lt
 8014766:	1864      	addlt	r4, r4, r1
 8014768:	9309      	str	r3, [sp, #36]	; 0x24
 801476a:	9711      	str	r7, [sp, #68]	; 0x44
 801476c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801476e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014772:	191b      	adds	r3, r3, r4
 8014774:	bf58      	it	pl
 8014776:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014778:	f8be b004 	ldrh.w	fp, [lr, #4]
 801477c:	9309      	str	r3, [sp, #36]	; 0x24
 801477e:	bf48      	it	mi
 8014780:	4647      	movmi	r7, r8
 8014782:	44bb      	add	fp, r7
 8014784:	f8ae b004 	strh.w	fp, [lr, #4]
 8014788:	f8be b006 	ldrh.w	fp, [lr, #6]
 801478c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014790:	f8ae b006 	strh.w	fp, [lr, #6]
 8014794:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014798:	44bc      	add	ip, r7
 801479a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801479c:	f8be b006 	ldrh.w	fp, [lr, #6]
 80147a0:	443d      	add	r5, r7
 80147a2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80147a6:	bf5c      	itt	pl
 80147a8:	1a5b      	subpl	r3, r3, r1
 80147aa:	9309      	strpl	r3, [sp, #36]	; 0x24
 80147ac:	ea5b 0307 	orrs.w	r3, fp, r7
 80147b0:	d011      	beq.n	80147d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80147b2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80147b6:	f1bb 0f00 	cmp.w	fp, #0
 80147ba:	db0c      	blt.n	80147d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80147bc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80147be:	45bb      	cmp	fp, r7
 80147c0:	da09      	bge.n	80147d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80147c2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80147c6:	45bb      	cmp	fp, r7
 80147c8:	bf3c      	itt	cc
 80147ca:	f10e 0708 	addcc.w	r7, lr, #8
 80147ce:	6107      	strcc	r7, [r0, #16]
 80147d0:	f10b 0701 	add.w	r7, fp, #1
 80147d4:	6087      	str	r7, [r0, #8]
 80147d6:	6907      	ldr	r7, [r0, #16]
 80147d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80147da:	803d      	strh	r5, [r7, #0]
 80147dc:	4555      	cmp	r5, sl
 80147de:	807b      	strh	r3, [r7, #2]
 80147e0:	80be      	strh	r6, [r7, #4]
 80147e2:	80fe      	strh	r6, [r7, #6]
 80147e4:	d1c2      	bne.n	801476c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80147e6:	9b01      	ldr	r3, [sp, #4]
 80147e8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80147ea:	eba3 0c0c 	sub.w	ip, r3, ip
 80147ee:	6903      	ldr	r3, [r0, #16]
 80147f0:	8899      	ldrh	r1, [r3, #4]
 80147f2:	4461      	add	r1, ip
 80147f4:	8099      	strh	r1, [r3, #4]
 80147f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80147f8:	3720      	adds	r7, #32
 80147fa:	1a7f      	subs	r7, r7, r1
 80147fc:	88d9      	ldrh	r1, [r3, #6]
 80147fe:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014802:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014806:	e60e      	b.n	8014426 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014808:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801480a:	f04f 34ff 	mov.w	r4, #4294967295
 801480e:	940d      	str	r4, [sp, #52]	; 0x34
 8014810:	437b      	muls	r3, r7
 8014812:	4249      	negs	r1, r1
 8014814:	2400      	movs	r4, #0
 8014816:	e756      	b.n	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014818:	9905      	ldr	r1, [sp, #20]
 801481a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801481e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014822:	f001 011f 	and.w	r1, r1, #31
 8014826:	ea4f 1b69 	mov.w	fp, r9, asr #5
 801482a:	9102      	str	r1, [sp, #8]
 801482c:	9904      	ldr	r1, [sp, #16]
 801482e:	45f3      	cmp	fp, lr
 8014830:	f009 0c1f 	and.w	ip, r9, #31
 8014834:	eba1 0406 	sub.w	r4, r1, r6
 8014838:	d108      	bne.n	801484c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 801483a:	9b02      	ldr	r3, [sp, #8]
 801483c:	449c      	add	ip, r3
 801483e:	44a0      	add	r8, r4
 8014840:	fb04 a40c 	mla	r4, r4, ip, sl
 8014844:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014848:	80fc      	strh	r4, [r7, #6]
 801484a:	e458      	b.n	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801484c:	9905      	ldr	r1, [sp, #20]
 801484e:	ebb1 0109 	subs.w	r1, r1, r9
 8014852:	bf5b      	ittet	pl
 8014854:	f1cc 0520 	rsbpl	r5, ip, #32
 8014858:	436c      	mulpl	r4, r5
 801485a:	2500      	movmi	r5, #0
 801485c:	2520      	movpl	r5, #32
 801485e:	bf44      	itt	mi
 8014860:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014864:	4249      	negmi	r1, r1
 8014866:	9501      	str	r5, [sp, #4]
 8014868:	9b01      	ldr	r3, [sp, #4]
 801486a:	fb94 f5f1 	sdiv	r5, r4, r1
 801486e:	fb01 4415 	mls	r4, r1, r5, r4
 8014872:	bf54      	ite	pl
 8014874:	f04f 0901 	movpl.w	r9, #1
 8014878:	f04f 39ff 	movmi.w	r9, #4294967295
 801487c:	2c00      	cmp	r4, #0
 801487e:	bfb8      	it	lt
 8014880:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014884:	449c      	add	ip, r3
 8014886:	44a8      	add	r8, r5
 8014888:	fb05 ac0c 	mla	ip, r5, ip, sl
 801488c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014890:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014894:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014898:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801489c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80148a0:	bfb8      	it	lt
 80148a2:	1864      	addlt	r4, r4, r1
 80148a4:	ea58 0707 	orrs.w	r7, r8, r7
 80148a8:	eb0b 0309 	add.w	r3, fp, r9
 80148ac:	d011      	beq.n	80148d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80148ae:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80148b2:	f1b8 0f00 	cmp.w	r8, #0
 80148b6:	db0c      	blt.n	80148d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80148b8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80148ba:	45b8      	cmp	r8, r7
 80148bc:	da09      	bge.n	80148d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80148be:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80148c2:	45b8      	cmp	r8, r7
 80148c4:	bf3c      	itt	cc
 80148c6:	f10c 0708 	addcc.w	r7, ip, #8
 80148ca:	6107      	strcc	r7, [r0, #16]
 80148cc:	f108 0701 	add.w	r7, r8, #1
 80148d0:	6087      	str	r7, [r0, #8]
 80148d2:	6907      	ldr	r7, [r0, #16]
 80148d4:	f04f 0c00 	mov.w	ip, #0
 80148d8:	b212      	sxth	r2, r2
 80148da:	459e      	cmp	lr, r3
 80148dc:	803b      	strh	r3, [r7, #0]
 80148de:	807a      	strh	r2, [r7, #2]
 80148e0:	f8a7 c004 	strh.w	ip, [r7, #4]
 80148e4:	f8a7 c006 	strh.w	ip, [r7, #6]
 80148e8:	442e      	add	r6, r5
 80148ea:	d04d      	beq.n	8014988 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80148ec:	9f04      	ldr	r7, [sp, #16]
 80148ee:	1bbf      	subs	r7, r7, r6
 80148f0:	443d      	add	r5, r7
 80148f2:	016d      	lsls	r5, r5, #5
 80148f4:	fb95 f8f1 	sdiv	r8, r5, r1
 80148f8:	fb01 5518 	mls	r5, r1, r8, r5
 80148fc:	4565      	cmp	r5, ip
 80148fe:	bfb8      	it	lt
 8014900:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014904:	f108 0701 	add.w	r7, r8, #1
 8014908:	bfb8      	it	lt
 801490a:	186d      	addlt	r5, r5, r1
 801490c:	1a64      	subs	r4, r4, r1
 801490e:	9703      	str	r7, [sp, #12]
 8014910:	f04f 0a00 	mov.w	sl, #0
 8014914:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014918:	1964      	adds	r4, r4, r5
 801491a:	bf58      	it	pl
 801491c:	9f03      	ldrpl	r7, [sp, #12]
 801491e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014922:	bf48      	it	mi
 8014924:	4647      	movmi	r7, r8
 8014926:	44bb      	add	fp, r7
 8014928:	f8ac b004 	strh.w	fp, [ip, #4]
 801492c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014930:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014934:	f8ac b006 	strh.w	fp, [ip, #6]
 8014938:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801493c:	443e      	add	r6, r7
 801493e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014942:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014946:	bf58      	it	pl
 8014948:	1a64      	subpl	r4, r4, r1
 801494a:	ea5b 0707 	orrs.w	r7, fp, r7
 801494e:	444b      	add	r3, r9
 8014950:	d011      	beq.n	8014976 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014952:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014956:	f1bb 0f00 	cmp.w	fp, #0
 801495a:	db0c      	blt.n	8014976 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801495c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801495e:	45bb      	cmp	fp, r7
 8014960:	da09      	bge.n	8014976 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014962:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014966:	45bb      	cmp	fp, r7
 8014968:	bf3c      	itt	cc
 801496a:	f10c 0708 	addcc.w	r7, ip, #8
 801496e:	6107      	strcc	r7, [r0, #16]
 8014970:	f10b 0701 	add.w	r7, fp, #1
 8014974:	6087      	str	r7, [r0, #8]
 8014976:	6907      	ldr	r7, [r0, #16]
 8014978:	459e      	cmp	lr, r3
 801497a:	803b      	strh	r3, [r7, #0]
 801497c:	807a      	strh	r2, [r7, #2]
 801497e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014982:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014986:	d1c5      	bne.n	8014914 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014988:	9b04      	ldr	r3, [sp, #16]
 801498a:	1b9e      	subs	r6, r3, r6
 801498c:	6903      	ldr	r3, [r0, #16]
 801498e:	889a      	ldrh	r2, [r3, #4]
 8014990:	4432      	add	r2, r6
 8014992:	809a      	strh	r2, [r3, #4]
 8014994:	9a02      	ldr	r2, [sp, #8]
 8014996:	f102 0c20 	add.w	ip, r2, #32
 801499a:	9a01      	ldr	r2, [sp, #4]
 801499c:	ebac 0c02 	sub.w	ip, ip, r2
 80149a0:	88da      	ldrh	r2, [r3, #6]
 80149a2:	fb06 260c 	mla	r6, r6, ip, r2
 80149a6:	80de      	strh	r6, [r3, #6]
 80149a8:	f7ff bba9 	b.w	80140fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080149ac <_ZN8touchgfx7Outline6lineToEii>:
 80149ac:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80149ae:	079b      	lsls	r3, r3, #30
 80149b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80149b2:	460e      	mov	r6, r1
 80149b4:	4615      	mov	r5, r2
 80149b6:	d511      	bpl.n	80149dc <_ZN8touchgfx7Outline6lineToEii+0x30>
 80149b8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80149bc:	ea86 0701 	eor.w	r7, r6, r1
 80149c0:	ea85 0302 	eor.w	r3, r5, r2
 80149c4:	433b      	orrs	r3, r7
 80149c6:	d009      	beq.n	80149dc <_ZN8touchgfx7Outline6lineToEii+0x30>
 80149c8:	4633      	mov	r3, r6
 80149ca:	9500      	str	r5, [sp, #0]
 80149cc:	f7ff fb3e 	bl	801404c <_ZN8touchgfx7Outline10renderLineEiiii>
 80149d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80149d2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80149d6:	f043 0301 	orr.w	r3, r3, #1
 80149da:	6243      	str	r3, [r0, #36]	; 0x24
 80149dc:	b003      	add	sp, #12
 80149de:	bdf0      	pop	{r4, r5, r6, r7, pc}

080149e0 <_ZN8touchgfx7Outline6moveToEii>:
 80149e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80149e2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80149e4:	4615      	mov	r5, r2
 80149e6:	079a      	lsls	r2, r3, #30
 80149e8:	4604      	mov	r4, r0
 80149ea:	460e      	mov	r6, r1
 80149ec:	d401      	bmi.n	80149f2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 80149ee:	f7ff faf9 	bl	8013fe4 <_ZN8touchgfx7Outline5resetEv>
 80149f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80149f4:	07db      	lsls	r3, r3, #31
 80149f6:	d504      	bpl.n	8014a02 <_ZN8touchgfx7Outline6moveToEii+0x22>
 80149f8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80149fc:	4620      	mov	r0, r4
 80149fe:	f7ff ffd5 	bl	80149ac <_ZN8touchgfx7Outline6lineToEii>
 8014a02:	6923      	ldr	r3, [r4, #16]
 8014a04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a08:	1170      	asrs	r0, r6, #5
 8014a0a:	4290      	cmp	r0, r2
 8014a0c:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014a10:	d103      	bne.n	8014a1a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014a12:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014a16:	4291      	cmp	r1, r2
 8014a18:	d01a      	beq.n	8014a50 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014a1a:	88df      	ldrh	r7, [r3, #6]
 8014a1c:	889a      	ldrh	r2, [r3, #4]
 8014a1e:	433a      	orrs	r2, r7
 8014a20:	d010      	beq.n	8014a44 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014a22:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014a26:	2a00      	cmp	r2, #0
 8014a28:	db0c      	blt.n	8014a44 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014a2a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014a2c:	42ba      	cmp	r2, r7
 8014a2e:	da09      	bge.n	8014a44 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014a30:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014a34:	42ba      	cmp	r2, r7
 8014a36:	bf38      	it	cc
 8014a38:	3308      	addcc	r3, #8
 8014a3a:	f102 0201 	add.w	r2, r2, #1
 8014a3e:	bf38      	it	cc
 8014a40:	6123      	strcc	r3, [r4, #16]
 8014a42:	60a2      	str	r2, [r4, #8]
 8014a44:	6923      	ldr	r3, [r4, #16]
 8014a46:	2200      	movs	r2, #0
 8014a48:	8018      	strh	r0, [r3, #0]
 8014a4a:	8059      	strh	r1, [r3, #2]
 8014a4c:	809a      	strh	r2, [r3, #4]
 8014a4e:	80da      	strh	r2, [r3, #6]
 8014a50:	6166      	str	r6, [r4, #20]
 8014a52:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014a56:	6225      	str	r5, [r4, #32]
 8014a58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014a5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014a5a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014a5e:	b0d0      	sub	sp, #320	; 0x140
 8014a60:	466c      	mov	r4, sp
 8014a62:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014a66:	4627      	mov	r7, r4
 8014a68:	1a0d      	subs	r5, r1, r0
 8014a6a:	2d48      	cmp	r5, #72	; 0x48
 8014a6c:	f100 0308 	add.w	r3, r0, #8
 8014a70:	f340 80d5 	ble.w	8014c1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014a74:	112d      	asrs	r5, r5, #4
 8014a76:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014a7a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014a7e:	6816      	ldr	r6, [r2, #0]
 8014a80:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014a84:	6006      	str	r6, [r0, #0]
 8014a86:	6856      	ldr	r6, [r2, #4]
 8014a88:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014a8c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014a90:	6046      	str	r6, [r0, #4]
 8014a92:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014a96:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014a9a:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014a9e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014aa2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014aa6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014aaa:	4565      	cmp	r5, ip
 8014aac:	f1a1 0208 	sub.w	r2, r1, #8
 8014ab0:	db06      	blt.n	8014ac0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8014ab2:	d119      	bne.n	8014ae8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014ab4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014ab8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014abc:	42ae      	cmp	r6, r5
 8014abe:	dd13      	ble.n	8014ae8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014ac0:	460e      	mov	r6, r1
 8014ac2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8014ac6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014aca:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014ace:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8014ad2:	601d      	str	r5, [r3, #0]
 8014ad4:	6875      	ldr	r5, [r6, #4]
 8014ad6:	605d      	str	r5, [r3, #4]
 8014ad8:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014adc:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014ae0:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014ae4:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014ae8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014aec:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014af0:	42ae      	cmp	r6, r5
 8014af2:	db06      	blt.n	8014b02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014af4:	d116      	bne.n	8014b24 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014af6:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014afa:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014afe:	45ac      	cmp	ip, r5
 8014b00:	da10      	bge.n	8014b24 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014b02:	681d      	ldr	r5, [r3, #0]
 8014b04:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014b08:	6005      	str	r5, [r0, #0]
 8014b0a:	685d      	ldr	r5, [r3, #4]
 8014b0c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014b10:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014b14:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014b18:	6045      	str	r5, [r0, #4]
 8014b1a:	8146      	strh	r6, [r0, #10]
 8014b1c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014b20:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014b24:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014b28:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014b2c:	4565      	cmp	r5, ip
 8014b2e:	db06      	blt.n	8014b3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014b30:	d119      	bne.n	8014b66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b32:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014b36:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014b3a:	42ae      	cmp	r6, r5
 8014b3c:	da13      	bge.n	8014b66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b3e:	460e      	mov	r6, r1
 8014b40:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014b44:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014b48:	6005      	str	r5, [r0, #0]
 8014b4a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014b4e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014b52:	6875      	ldr	r5, [r6, #4]
 8014b54:	6045      	str	r5, [r0, #4]
 8014b56:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014b5a:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014b5e:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014b62:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014b66:	3308      	adds	r3, #8
 8014b68:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014b6c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014b70:	45e6      	cmp	lr, ip
 8014b72:	dbf8      	blt.n	8014b66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b74:	d105      	bne.n	8014b82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014b76:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014b7a:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014b7e:	42ae      	cmp	r6, r5
 8014b80:	dbf1      	blt.n	8014b66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b82:	4615      	mov	r5, r2
 8014b84:	3a08      	subs	r2, #8
 8014b86:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014b8a:	45b4      	cmp	ip, r6
 8014b8c:	dbf9      	blt.n	8014b82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014b8e:	d105      	bne.n	8014b9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014b90:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014b94:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014b98:	45b0      	cmp	r8, r6
 8014b9a:	dbf2      	blt.n	8014b82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014b9c:	4293      	cmp	r3, r2
 8014b9e:	f1a5 0608 	sub.w	r6, r5, #8
 8014ba2:	d816      	bhi.n	8014bd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014ba4:	f8d6 c000 	ldr.w	ip, [r6]
 8014ba8:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014bac:	f8c3 c000 	str.w	ip, [r3]
 8014bb0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014bb4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014bb8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014bbc:	f8c3 c004 	str.w	ip, [r3, #4]
 8014bc0:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014bc4:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014bc8:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014bcc:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014bd0:	e7c9      	b.n	8014b66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014bd2:	f8d6 e000 	ldr.w	lr, [r6]
 8014bd6:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014bda:	f8c0 e000 	str.w	lr, [r0]
 8014bde:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014be2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014be6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014bea:	f8c0 e004 	str.w	lr, [r0, #4]
 8014bee:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014bf2:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014bf6:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014bfa:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014bfe:	1acd      	subs	r5, r1, r3
 8014c00:	1a16      	subs	r6, r2, r0
 8014c02:	10ed      	asrs	r5, r5, #3
 8014c04:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014c08:	bfb5      	itete	lt
 8014c0a:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014c0e:	e9c4 3100 	strdge	r3, r1, [r4]
 8014c12:	460a      	movlt	r2, r1
 8014c14:	4603      	movge	r3, r0
 8014c16:	3408      	adds	r4, #8
 8014c18:	4618      	mov	r0, r3
 8014c1a:	4611      	mov	r1, r2
 8014c1c:	e724      	b.n	8014a68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014c1e:	4299      	cmp	r1, r3
 8014c20:	d928      	bls.n	8014c74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014c22:	f1a3 0210 	sub.w	r2, r3, #16
 8014c26:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014c2a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014c2e:	45ac      	cmp	ip, r5
 8014c30:	db06      	blt.n	8014c40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014c32:	d11d      	bne.n	8014c70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014c34:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014c38:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014c3c:	42ae      	cmp	r6, r5
 8014c3e:	da17      	bge.n	8014c70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014c40:	4615      	mov	r5, r2
 8014c42:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014c46:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014c4a:	6116      	str	r6, [r2, #16]
 8014c4c:	686e      	ldr	r6, [r5, #4]
 8014c4e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014c52:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014c56:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014c5a:	42a8      	cmp	r0, r5
 8014c5c:	6156      	str	r6, [r2, #20]
 8014c5e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014c62:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014c66:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014c6a:	f1a2 0208 	sub.w	r2, r2, #8
 8014c6e:	d1da      	bne.n	8014c26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014c70:	3308      	adds	r3, #8
 8014c72:	e7d4      	b.n	8014c1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014c74:	42bc      	cmp	r4, r7
 8014c76:	d903      	bls.n	8014c80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014c78:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014c7c:	3c08      	subs	r4, #8
 8014c7e:	e6f3      	b.n	8014a68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014c80:	b050      	add	sp, #320	; 0x140
 8014c82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014c86 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014c86:	b510      	push	{r4, lr}
 8014c88:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014c8a:	07da      	lsls	r2, r3, #31
 8014c8c:	4604      	mov	r4, r0
 8014c8e:	d507      	bpl.n	8014ca0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014c90:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014c94:	f7ff fe8a 	bl	80149ac <_ZN8touchgfx7Outline6lineToEii>
 8014c98:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014c9a:	f023 0301 	bic.w	r3, r3, #1
 8014c9e:	6243      	str	r3, [r0, #36]	; 0x24
 8014ca0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014ca2:	079b      	lsls	r3, r3, #30
 8014ca4:	d521      	bpl.n	8014cea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014ca6:	6923      	ldr	r3, [r4, #16]
 8014ca8:	88d9      	ldrh	r1, [r3, #6]
 8014caa:	889a      	ldrh	r2, [r3, #4]
 8014cac:	430a      	orrs	r2, r1
 8014cae:	d010      	beq.n	8014cd2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014cb0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014cb4:	2a00      	cmp	r2, #0
 8014cb6:	db0c      	blt.n	8014cd2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014cb8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014cba:	428a      	cmp	r2, r1
 8014cbc:	da09      	bge.n	8014cd2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014cbe:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014cc2:	4291      	cmp	r1, r2
 8014cc4:	bf88      	it	hi
 8014cc6:	3308      	addhi	r3, #8
 8014cc8:	f102 0201 	add.w	r2, r2, #1
 8014ccc:	bf88      	it	hi
 8014cce:	6123      	strhi	r3, [r4, #16]
 8014cd0:	60a2      	str	r2, [r4, #8]
 8014cd2:	68a1      	ldr	r1, [r4, #8]
 8014cd4:	b129      	cbz	r1, 8014ce2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014cd6:	6863      	ldr	r3, [r4, #4]
 8014cd8:	4299      	cmp	r1, r3
 8014cda:	d802      	bhi.n	8014ce2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014cdc:	68e0      	ldr	r0, [r4, #12]
 8014cde:	f7ff febc 	bl	8014a5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014ce2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014ce4:	f023 0302 	bic.w	r3, r3, #2
 8014ce8:	6263      	str	r3, [r4, #36]	; 0x24
 8014cea:	68e0      	ldr	r0, [r4, #12]
 8014cec:	bd10      	pop	{r4, pc}
	...

08014cf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014cf0:	4b02      	ldr	r3, [pc, #8]	; (8014cfc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014cf2:	6018      	str	r0, [r3, #0]
 8014cf4:	4b02      	ldr	r3, [pc, #8]	; (8014d00 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014cf6:	6019      	str	r1, [r3, #0]
 8014cf8:	4770      	bx	lr
 8014cfa:	bf00      	nop
 8014cfc:	200138bc 	.word	0x200138bc
 8014d00:	200138c0 	.word	0x200138c0

08014d04 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014d04:	4a02      	ldr	r2, [pc, #8]	; (8014d10 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014d06:	2300      	movs	r3, #0
 8014d08:	6013      	str	r3, [r2, #0]
 8014d0a:	4a02      	ldr	r2, [pc, #8]	; (8014d14 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014d0c:	6013      	str	r3, [r2, #0]
 8014d0e:	4770      	bx	lr
 8014d10:	200138bc 	.word	0x200138bc
 8014d14:	200138c0 	.word	0x200138c0

08014d18 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014d18:	4b01      	ldr	r3, [pc, #4]	; (8014d20 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014d1a:	6818      	ldr	r0, [r3, #0]
 8014d1c:	4770      	bx	lr
 8014d1e:	bf00      	nop
 8014d20:	200138bc 	.word	0x200138bc

08014d24 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014d24:	4b01      	ldr	r3, [pc, #4]	; (8014d2c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014d26:	6818      	ldr	r0, [r3, #0]
 8014d28:	4770      	bx	lr
 8014d2a:	bf00      	nop
 8014d2c:	200138c0 	.word	0x200138c0

08014d30 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014d30:	b510      	push	{r4, lr}
 8014d32:	6803      	ldr	r3, [r0, #0]
 8014d34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d36:	460c      	mov	r4, r1
 8014d38:	4798      	blx	r3
 8014d3a:	1b03      	subs	r3, r0, r4
 8014d3c:	4258      	negs	r0, r3
 8014d3e:	4158      	adcs	r0, r3
 8014d40:	bd10      	pop	{r4, pc}
	...

08014d44 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014d44:	4b01      	ldr	r3, [pc, #4]	; (8014d4c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014d46:	6019      	str	r1, [r3, #0]
 8014d48:	4770      	bx	lr
 8014d4a:	bf00      	nop
 8014d4c:	200138c4 	.word	0x200138c4

08014d50 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d54:	4696      	mov	lr, r2
 8014d56:	4605      	mov	r5, r0
 8014d58:	4614      	mov	r4, r2
 8014d5a:	460e      	mov	r6, r1
 8014d5c:	461f      	mov	r7, r3
 8014d5e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d62:	b097      	sub	sp, #92	; 0x5c
 8014d64:	f10d 0c1c 	add.w	ip, sp, #28
 8014d68:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d6c:	f8de 3000 	ldr.w	r3, [lr]
 8014d70:	f8cc 3000 	str.w	r3, [ip]
 8014d74:	f104 0e14 	add.w	lr, r4, #20
 8014d78:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d7c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014d80:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d84:	f8de 3000 	ldr.w	r3, [lr]
 8014d88:	f8cc 3000 	str.w	r3, [ip]
 8014d8c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014d90:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d94:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014d98:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d9c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014da0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014da4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014da8:	f8de 3000 	ldr.w	r3, [lr]
 8014dac:	f8cc 3000 	str.w	r3, [ip]
 8014db0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014db2:	682b      	ldr	r3, [r5, #0]
 8014db4:	9201      	str	r2, [sp, #4]
 8014db6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014dba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014dbc:	9200      	str	r2, [sp, #0]
 8014dbe:	f8cd 8008 	str.w	r8, [sp, #8]
 8014dc2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014dc6:	aa07      	add	r2, sp, #28
 8014dc8:	463b      	mov	r3, r7
 8014dca:	4631      	mov	r1, r6
 8014dcc:	4628      	mov	r0, r5
 8014dce:	47d8      	blx	fp
 8014dd0:	46a6      	mov	lr, r4
 8014dd2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014dd6:	f10d 0c1c 	add.w	ip, sp, #28
 8014dda:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014dde:	f8de 3000 	ldr.w	r3, [lr]
 8014de2:	f8cc 3000 	str.w	r3, [ip]
 8014de6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014dea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014dee:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014df2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014df6:	343c      	adds	r4, #60	; 0x3c
 8014df8:	f8de 3000 	ldr.w	r3, [lr]
 8014dfc:	f8cc 3000 	str.w	r3, [ip]
 8014e00:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014e02:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014e06:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e0a:	6823      	ldr	r3, [r4, #0]
 8014e0c:	f8cc 3000 	str.w	r3, [ip]
 8014e10:	682b      	ldr	r3, [r5, #0]
 8014e12:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014e16:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014e18:	9201      	str	r2, [sp, #4]
 8014e1a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014e1c:	9200      	str	r2, [sp, #0]
 8014e1e:	f8cd 8008 	str.w	r8, [sp, #8]
 8014e22:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014e24:	aa07      	add	r2, sp, #28
 8014e26:	463b      	mov	r3, r7
 8014e28:	4631      	mov	r1, r6
 8014e2a:	4628      	mov	r0, r5
 8014e2c:	47a0      	blx	r4
 8014e2e:	b017      	add	sp, #92	; 0x5c
 8014e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e34 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e38:	b08d      	sub	sp, #52	; 0x34
 8014e3a:	4688      	mov	r8, r1
 8014e3c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014e3e:	f8d3 c000 	ldr.w	ip, [r3]
 8014e42:	680f      	ldr	r7, [r1, #0]
 8014e44:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014e48:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014e4c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014e50:	edd3 6a07 	vldr	s13, [r3, #28]
 8014e54:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014e56:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014e5a:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014e5e:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014e62:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014e66:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014e6a:	eba7 070c 	sub.w	r7, r7, ip
 8014e6e:	42bc      	cmp	r4, r7
 8014e70:	bfa8      	it	ge
 8014e72:	463c      	movge	r4, r7
 8014e74:	ee07 4a90 	vmov	s15, r4
 8014e78:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014e7c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014e80:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014e84:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014e88:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014e8c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014e90:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014e94:	eb09 0e0c 	add.w	lr, r9, ip
 8014e98:	4571      	cmp	r1, lr
 8014e9a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014e9e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014ea2:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014ea6:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014eaa:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014eae:	f340 808d 	ble.w	8014fcc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014eb2:	eba1 060e 	sub.w	r6, r1, lr
 8014eb6:	fb96 f5f4 	sdiv	r5, r6, r4
 8014eba:	ee07 5a10 	vmov	s14, r5
 8014ebe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014ec2:	2d00      	cmp	r5, #0
 8014ec4:	fb04 6615 	mls	r6, r4, r5, r6
 8014ec8:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014ecc:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014ed0:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014ed4:	dd13      	ble.n	8014efe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014ed6:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014eda:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014ede:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014ee2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ee6:	bf18      	it	ne
 8014ee8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014eec:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014ef0:	bf08      	it	eq
 8014ef2:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014ef6:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014efa:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014efe:	fb05 f204 	mul.w	r2, r5, r4
 8014f02:	1abf      	subs	r7, r7, r2
 8014f04:	4494      	add	ip, r2
 8014f06:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014f0a:	4411      	add	r1, r2
 8014f0c:	eb09 020c 	add.w	r2, r9, ip
 8014f10:	443a      	add	r2, r7
 8014f12:	b209      	sxth	r1, r1
 8014f14:	428a      	cmp	r2, r1
 8014f16:	bfc4      	itt	gt
 8014f18:	eba1 0209 	subgt.w	r2, r1, r9
 8014f1c:	eba2 070c 	subgt.w	r7, r2, ip
 8014f20:	2f00      	cmp	r7, #0
 8014f22:	dd50      	ble.n	8014fc6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014f24:	fb97 f1f4 	sdiv	r1, r7, r4
 8014f28:	fb04 7211 	mls	r2, r4, r1, r7
 8014f2c:	b90a      	cbnz	r2, 8014f32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014f2e:	3901      	subs	r1, #1
 8014f30:	4622      	mov	r2, r4
 8014f32:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014f36:	6840      	ldr	r0, [r0, #4]
 8014f38:	900b      	str	r0, [sp, #44]	; 0x2c
 8014f3a:	f8d0 a000 	ldr.w	sl, [r0]
 8014f3e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014f40:	9008      	str	r0, [sp, #32]
 8014f42:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014f46:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014f48:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014f4c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014f50:	695b      	ldr	r3, [r3, #20]
 8014f52:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014f54:	445b      	add	r3, fp
 8014f56:	eef0 6a42 	vmov.f32	s13, s4
 8014f5a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014f5e:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014f62:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014f66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f6a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014f6e:	9307      	str	r3, [sp, #28]
 8014f70:	ee17 7a90 	vmov	r7, s15
 8014f74:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014f78:	eeb0 7a61 	vmov.f32	s14, s3
 8014f7c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014f80:	ee16 3a90 	vmov	r3, s13
 8014f84:	fb97 f7f4 	sdiv	r7, r7, r4
 8014f88:	ee17 ca90 	vmov	ip, s15
 8014f8c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014f90:	fb9c fcf4 	sdiv	ip, ip, r4
 8014f94:	fb0c 3306 	mla	r3, ip, r6, r3
 8014f98:	9302      	str	r3, [sp, #8]
 8014f9a:	ee17 3a10 	vmov	r3, s14
 8014f9e:	44b6      	add	lr, r6
 8014fa0:	fb04 e505 	mla	r5, r4, r5, lr
 8014fa4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014fa8:	fb07 3706 	mla	r7, r7, r6, r3
 8014fac:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014fb0:	e9cd 4700 	strd	r4, r7, [sp]
 8014fb4:	2900      	cmp	r1, #0
 8014fb6:	bfcc      	ite	gt
 8014fb8:	46a1      	movgt	r9, r4
 8014fba:	4691      	movle	r9, r2
 8014fbc:	eba9 0306 	sub.w	r3, r9, r6
 8014fc0:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014fc4:	47a0      	blx	r4
 8014fc6:	b00d      	add	sp, #52	; 0x34
 8014fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fcc:	2500      	movs	r5, #0
 8014fce:	462e      	mov	r6, r5
 8014fd0:	e799      	b.n	8014f06 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014fd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fd8:	b0db      	sub	sp, #364	; 0x16c
 8014fda:	461d      	mov	r5, r3
 8014fdc:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014fe0:	930a      	str	r3, [sp, #40]	; 0x28
 8014fe2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8014fe6:	930b      	str	r3, [sp, #44]	; 0x2c
 8014fe8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014fec:	9310      	str	r3, [sp, #64]	; 0x40
 8014fee:	6803      	ldr	r3, [r0, #0]
 8014ff0:	910f      	str	r1, [sp, #60]	; 0x3c
 8014ff2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014ff4:	9009      	str	r0, [sp, #36]	; 0x24
 8014ff6:	4614      	mov	r4, r2
 8014ff8:	4629      	mov	r1, r5
 8014ffa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014ffe:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8015002:	47b8      	blx	r7
 8015004:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015006:	6058      	str	r0, [r3, #4]
 8015008:	2800      	cmp	r0, #0
 801500a:	f000 83a1 	beq.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801500e:	682b      	ldr	r3, [r5, #0]
 8015010:	9314      	str	r3, [sp, #80]	; 0x50
 8015012:	686b      	ldr	r3, [r5, #4]
 8015014:	9315      	str	r3, [sp, #84]	; 0x54
 8015016:	4bc4      	ldr	r3, [pc, #784]	; (8015328 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8015018:	ed94 7a02 	vldr	s14, [r4, #8]
 801501c:	7819      	ldrb	r1, [r3, #0]
 801501e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8015022:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8015026:	2900      	cmp	r1, #0
 8015028:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801502c:	bf16      	itet	ne
 801502e:	4619      	movne	r1, r3
 8015030:	4611      	moveq	r1, r2
 8015032:	4613      	movne	r3, r2
 8015034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015038:	9116      	str	r1, [sp, #88]	; 0x58
 801503a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801503e:	f240 8387 	bls.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015042:	ed94 7a07 	vldr	s14, [r4, #28]
 8015046:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801504a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801504e:	f240 837f 	bls.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015052:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8015056:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801505a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801505e:	f240 8377 	bls.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015062:	6822      	ldr	r2, [r4, #0]
 8015064:	4bb1      	ldr	r3, [pc, #708]	; (801532c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8015066:	429a      	cmp	r2, r3
 8015068:	f2c0 8372 	blt.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801506c:	49b0      	ldr	r1, [pc, #704]	; (8015330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801506e:	6963      	ldr	r3, [r4, #20]
 8015070:	428a      	cmp	r2, r1
 8015072:	f300 836d 	bgt.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015076:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801507a:	48ae      	ldr	r0, [pc, #696]	; (8015334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801507c:	33ff      	adds	r3, #255	; 0xff
 801507e:	4283      	cmp	r3, r0
 8015080:	f200 8366 	bhi.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015084:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8015086:	4dac      	ldr	r5, [pc, #688]	; (8015338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015088:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801508c:	33ff      	adds	r3, #255	; 0xff
 801508e:	42ab      	cmp	r3, r5
 8015090:	f200 835e 	bhi.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015094:	6862      	ldr	r2, [r4, #4]
 8015096:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801509a:	33ff      	adds	r3, #255	; 0xff
 801509c:	4283      	cmp	r3, r0
 801509e:	f200 8357 	bhi.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150a2:	69a1      	ldr	r1, [r4, #24]
 80150a4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80150a8:	33ff      	adds	r3, #255	; 0xff
 80150aa:	4283      	cmp	r3, r0
 80150ac:	f200 8350 	bhi.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80150b2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80150b6:	30ff      	adds	r0, #255	; 0xff
 80150b8:	42a8      	cmp	r0, r5
 80150ba:	f200 8349 	bhi.w	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150be:	428a      	cmp	r2, r1
 80150c0:	f280 8110 	bge.w	80152e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80150c4:	429a      	cmp	r2, r3
 80150c6:	f300 8119 	bgt.w	80152fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80150ca:	4299      	cmp	r1, r3
 80150cc:	f280 811d 	bge.w	801530a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80150d0:	2502      	movs	r5, #2
 80150d2:	2701      	movs	r7, #1
 80150d4:	46a9      	mov	r9, r5
 80150d6:	46b8      	mov	r8, r7
 80150d8:	f04f 0a00 	mov.w	sl, #0
 80150dc:	4621      	mov	r1, r4
 80150de:	a849      	add	r0, sp, #292	; 0x124
 80150e0:	f003 ff2a 	bl	8018f38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80150e4:	4622      	mov	r2, r4
 80150e6:	4653      	mov	r3, sl
 80150e8:	a949      	add	r1, sp, #292	; 0x124
 80150ea:	f8cd 9000 	str.w	r9, [sp]
 80150ee:	a819      	add	r0, sp, #100	; 0x64
 80150f0:	f004 f852 	bl	8019198 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80150f4:	4622      	mov	r2, r4
 80150f6:	4653      	mov	r3, sl
 80150f8:	a949      	add	r1, sp, #292	; 0x124
 80150fa:	f8cd 8000 	str.w	r8, [sp]
 80150fe:	a829      	add	r0, sp, #164	; 0xa4
 8015100:	f004 f84a 	bl	8019198 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015104:	4643      	mov	r3, r8
 8015106:	4622      	mov	r2, r4
 8015108:	a949      	add	r1, sp, #292	; 0x124
 801510a:	f8cd 9000 	str.w	r9, [sp]
 801510e:	a839      	add	r0, sp, #228	; 0xe4
 8015110:	f004 f842 	bl	8019198 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015114:	42af      	cmp	r7, r5
 8015116:	bfb5      	itete	lt
 8015118:	2300      	movlt	r3, #0
 801511a:	2301      	movge	r3, #1
 801511c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801511e:	930e      	strge	r3, [sp, #56]	; 0x38
 8015120:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015122:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015126:	af12      	add	r7, sp, #72	; 0x48
 8015128:	bfb9      	ittee	lt
 801512a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801512c:	ac19      	addlt	r4, sp, #100	; 0x64
 801512e:	ad19      	addge	r5, sp, #100	; 0x64
 8015130:	ac29      	addge	r4, sp, #164	; 0xa4
 8015132:	e887 0003 	stmia.w	r7, {r0, r1}
 8015136:	b928      	cbnz	r0, 8015144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015138:	4b80      	ldr	r3, [pc, #512]	; (801533c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801513a:	6818      	ldr	r0, [r3, #0]
 801513c:	6803      	ldr	r3, [r0, #0]
 801513e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015140:	4798      	blx	r3
 8015142:	6038      	str	r0, [r7, #0]
 8015144:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015146:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801514a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801514e:	930c      	str	r3, [sp, #48]	; 0x30
 8015150:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015152:	6963      	ldr	r3, [r4, #20]
 8015154:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015156:	440b      	add	r3, r1
 8015158:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801515c:	4408      	add	r0, r1
 801515e:	b200      	sxth	r0, r0
 8015160:	4283      	cmp	r3, r0
 8015162:	900d      	str	r0, [sp, #52]	; 0x34
 8015164:	f280 80dd 	bge.w	8015322 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015168:	428b      	cmp	r3, r1
 801516a:	da08      	bge.n	801517e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801516c:	2a00      	cmp	r2, #0
 801516e:	dd06      	ble.n	801517e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015170:	1acb      	subs	r3, r1, r3
 8015172:	429a      	cmp	r2, r3
 8015174:	f2c0 80e4 	blt.w	8015340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015178:	2b00      	cmp	r3, #0
 801517a:	f300 80e2 	bgt.w	8015342 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801517e:	6967      	ldr	r7, [r4, #20]
 8015180:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015182:	443b      	add	r3, r7
 8015184:	461f      	mov	r7, r3
 8015186:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015188:	1bdf      	subs	r7, r3, r7
 801518a:	4297      	cmp	r7, r2
 801518c:	bfa8      	it	ge
 801518e:	4617      	movge	r7, r2
 8015190:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015194:	2f00      	cmp	r7, #0
 8015196:	f340 8166 	ble.w	8015466 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801519a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801519c:	6829      	ldr	r1, [r5, #0]
 801519e:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151a2:	f9bb 3000 	ldrsh.w	r3, [fp]
 80151a6:	6820      	ldr	r0, [r4, #0]
 80151a8:	4411      	add	r1, r2
 80151aa:	4299      	cmp	r1, r3
 80151ac:	dd1a      	ble.n	80151e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80151ae:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80151b2:	440b      	add	r3, r1
 80151b4:	4402      	add	r2, r0
 80151b6:	b21b      	sxth	r3, r3
 80151b8:	429a      	cmp	r2, r3
 80151ba:	dc13      	bgt.n	80151e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80151bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80151c0:	681b      	ldr	r3, [r3, #0]
 80151c2:	9206      	str	r2, [sp, #24]
 80151c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80151c6:	9205      	str	r2, [sp, #20]
 80151c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80151ca:	9500      	str	r5, [sp, #0]
 80151cc:	e9cd b203 	strd	fp, r2, [sp, #12]
 80151d0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80151d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80151d4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80151d8:	a912      	add	r1, sp, #72	; 0x48
 80151da:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80151de:	aa49      	add	r2, sp, #292	; 0x124
 80151e0:	4623      	mov	r3, r4
 80151e2:	47c8      	blx	r9
 80151e4:	e9d4 2300 	ldrd	r2, r3, [r4]
 80151e8:	441a      	add	r2, r3
 80151ea:	6963      	ldr	r3, [r4, #20]
 80151ec:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80151f0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80151f4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80151f8:	68a1      	ldr	r1, [r4, #8]
 80151fa:	ed94 6a08 	vldr	s12, [r4, #32]
 80151fe:	6022      	str	r2, [r4, #0]
 8015200:	3301      	adds	r3, #1
 8015202:	6163      	str	r3, [r4, #20]
 8015204:	69a3      	ldr	r3, [r4, #24]
 8015206:	ee37 7a27 	vadd.f32	s14, s14, s15
 801520a:	3b01      	subs	r3, #1
 801520c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015210:	61a3      	str	r3, [r4, #24]
 8015212:	6923      	ldr	r3, [r4, #16]
 8015214:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015218:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801521c:	edd4 6a07 	vldr	s13, [r4, #28]
 8015220:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015224:	440b      	add	r3, r1
 8015226:	68e1      	ldr	r1, [r4, #12]
 8015228:	6123      	str	r3, [r4, #16]
 801522a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801522e:	428b      	cmp	r3, r1
 8015230:	edc4 6a07 	vstr	s13, [r4, #28]
 8015234:	db15      	blt.n	8015262 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8015236:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801523a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801523e:	3201      	adds	r2, #1
 8015240:	edc4 6a07 	vstr	s13, [r4, #28]
 8015244:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015248:	6022      	str	r2, [r4, #0]
 801524a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801524e:	1a5b      	subs	r3, r3, r1
 8015250:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015254:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015258:	6123      	str	r3, [r4, #16]
 801525a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801525e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015262:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015266:	441a      	add	r2, r3
 8015268:	696b      	ldr	r3, [r5, #20]
 801526a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801526e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015272:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015276:	68a9      	ldr	r1, [r5, #8]
 8015278:	ed95 6a08 	vldr	s12, [r5, #32]
 801527c:	602a      	str	r2, [r5, #0]
 801527e:	3301      	adds	r3, #1
 8015280:	616b      	str	r3, [r5, #20]
 8015282:	69ab      	ldr	r3, [r5, #24]
 8015284:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015288:	3b01      	subs	r3, #1
 801528a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801528e:	61ab      	str	r3, [r5, #24]
 8015290:	692b      	ldr	r3, [r5, #16]
 8015292:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015296:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801529a:	edd5 6a07 	vldr	s13, [r5, #28]
 801529e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80152a2:	440b      	add	r3, r1
 80152a4:	68e9      	ldr	r1, [r5, #12]
 80152a6:	612b      	str	r3, [r5, #16]
 80152a8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80152ac:	428b      	cmp	r3, r1
 80152ae:	edc5 6a07 	vstr	s13, [r5, #28]
 80152b2:	db15      	blt.n	80152e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80152b4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80152b8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80152bc:	3201      	adds	r2, #1
 80152be:	edc5 6a07 	vstr	s13, [r5, #28]
 80152c2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80152c6:	602a      	str	r2, [r5, #0]
 80152c8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80152cc:	1a5b      	subs	r3, r3, r1
 80152ce:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80152d2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80152d6:	612b      	str	r3, [r5, #16]
 80152d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80152dc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80152e0:	3f01      	subs	r7, #1
 80152e2:	e757      	b.n	8015194 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80152e4:	4299      	cmp	r1, r3
 80152e6:	dc13      	bgt.n	8015310 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80152e8:	429a      	cmp	r2, r3
 80152ea:	da14      	bge.n	8015316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80152ec:	2502      	movs	r5, #2
 80152ee:	2703      	movs	r7, #3
 80152f0:	46a9      	mov	r9, r5
 80152f2:	f04f 0800 	mov.w	r8, #0
 80152f6:	f04f 0a01 	mov.w	sl, #1
 80152fa:	e6ef      	b.n	80150dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80152fc:	2501      	movs	r5, #1
 80152fe:	2700      	movs	r7, #0
 8015300:	46a9      	mov	r9, r5
 8015302:	46b8      	mov	r8, r7
 8015304:	f04f 0a02 	mov.w	sl, #2
 8015308:	e6e8      	b.n	80150dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801530a:	2501      	movs	r5, #1
 801530c:	2702      	movs	r7, #2
 801530e:	e6e1      	b.n	80150d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015310:	2500      	movs	r5, #0
 8015312:	2701      	movs	r7, #1
 8015314:	e7f4      	b.n	8015300 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8015316:	2702      	movs	r7, #2
 8015318:	2503      	movs	r5, #3
 801531a:	f04f 0900 	mov.w	r9, #0
 801531e:	46b8      	mov	r8, r7
 8015320:	e7e9      	b.n	80152f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8015322:	4613      	mov	r3, r2
 8015324:	e728      	b.n	8015178 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8015326:	bf00      	nop
 8015328:	200138ac 	.word	0x200138ac
 801532c:	fffd8f01 	.word	0xfffd8f01
 8015330:	00027100 	.word	0x00027100
 8015334:	0004e1ff 	.word	0x0004e1ff
 8015338:	0004e1fe 	.word	0x0004e1fe
 801533c:	200138b4 	.word	0x200138b4
 8015340:	4613      	mov	r3, r2
 8015342:	992b      	ldr	r1, [sp, #172]	; 0xac
 8015344:	9111      	str	r1, [sp, #68]	; 0x44
 8015346:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801534a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801534e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015350:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8015354:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015358:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 801535c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015360:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8015364:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015368:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 801536c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015370:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8015374:	469e      	mov	lr, r3
 8015376:	469c      	mov	ip, r3
 8015378:	f04f 0900 	mov.w	r9, #0
 801537c:	f1bc 0f00 	cmp.w	ip, #0
 8015380:	d147      	bne.n	8015412 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8015382:	eb03 0c07 	add.w	ip, r3, r7
 8015386:	1ad7      	subs	r7, r2, r3
 8015388:	f1b9 0f00 	cmp.w	r9, #0
 801538c:	d009      	beq.n	80153a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801538e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8015392:	9029      	str	r0, [sp, #164]	; 0xa4
 8015394:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015398:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 801539c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80153a0:	912d      	str	r1, [sp, #180]	; 0xb4
 80153a2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80153a4:	9111      	str	r1, [sp, #68]	; 0x44
 80153a6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80153aa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80153ae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80153b2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80153b6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80153ba:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80153be:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80153c2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80153c6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80153ca:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80153ce:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80153d2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80153d6:	f04f 0800 	mov.w	r8, #0
 80153da:	f1be 0f00 	cmp.w	lr, #0
 80153de:	d031      	beq.n	8015444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80153e0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80153e2:	4431      	add	r1, r6
 80153e4:	4549      	cmp	r1, r9
 80153e6:	4450      	add	r0, sl
 80153e8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80153ec:	ee37 7a04 	vadd.f32	s14, s14, s8
 80153f0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80153f4:	db08      	blt.n	8015408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80153f6:	ee77 7a85 	vadd.f32	s15, s15, s10
 80153fa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80153fe:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015402:	3001      	adds	r0, #1
 8015404:	eba1 0109 	sub.w	r1, r1, r9
 8015408:	f10e 3eff 	add.w	lr, lr, #4294967295
 801540c:	f04f 0801 	mov.w	r8, #1
 8015410:	e7e3      	b.n	80153da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8015412:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015414:	4431      	add	r1, r6
 8015416:	4541      	cmp	r1, r8
 8015418:	4450      	add	r0, sl
 801541a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801541e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015422:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015426:	db08      	blt.n	801543a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015428:	ee76 6a85 	vadd.f32	s13, s13, s10
 801542c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015430:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015434:	3001      	adds	r0, #1
 8015436:	eba1 0108 	sub.w	r1, r1, r8
 801543a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801543e:	f04f 0901 	mov.w	r9, #1
 8015442:	e79b      	b.n	801537c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8015444:	449c      	add	ip, r3
 8015446:	1aff      	subs	r7, r7, r3
 8015448:	f1b8 0f00 	cmp.w	r8, #0
 801544c:	d009      	beq.n	8015462 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801544e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015452:	9019      	str	r0, [sp, #100]	; 0x64
 8015454:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015458:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801545c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015460:	911d      	str	r1, [sp, #116]	; 0x74
 8015462:	1ad2      	subs	r2, r2, r3
 8015464:	e68b      	b.n	801517e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015466:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015468:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801546a:	2b00      	cmp	r3, #0
 801546c:	f000 80d1 	beq.w	8015612 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015470:	ad19      	add	r5, sp, #100	; 0x64
 8015472:	ac39      	add	r4, sp, #228	; 0xe4
 8015474:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015476:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801547a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801547e:	930c      	str	r3, [sp, #48]	; 0x30
 8015480:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015482:	6963      	ldr	r3, [r4, #20]
 8015484:	440b      	add	r3, r1
 8015486:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801548a:	4408      	add	r0, r1
 801548c:	b200      	sxth	r0, r0
 801548e:	4283      	cmp	r3, r0
 8015490:	900d      	str	r0, [sp, #52]	; 0x34
 8015492:	f280 80c1 	bge.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015496:	428b      	cmp	r3, r1
 8015498:	da08      	bge.n	80154ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801549a:	2a00      	cmp	r2, #0
 801549c:	dd06      	ble.n	80154ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801549e:	1acb      	subs	r3, r1, r3
 80154a0:	429a      	cmp	r2, r3
 80154a2:	f2c0 80bb 	blt.w	801561c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80154a6:	2b00      	cmp	r3, #0
 80154a8:	f300 80b9 	bgt.w	801561e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80154ac:	6967      	ldr	r7, [r4, #20]
 80154ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80154b0:	443b      	add	r3, r7
 80154b2:	461f      	mov	r7, r3
 80154b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80154b6:	1bdf      	subs	r7, r3, r7
 80154b8:	4297      	cmp	r7, r2
 80154ba:	bfa8      	it	ge
 80154bc:	4617      	movge	r7, r2
 80154be:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80154c2:	2f00      	cmp	r7, #0
 80154c4:	f340 813c 	ble.w	8015740 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80154c8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80154ca:	6829      	ldr	r1, [r5, #0]
 80154cc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80154d0:	f9bb 3000 	ldrsh.w	r3, [fp]
 80154d4:	6820      	ldr	r0, [r4, #0]
 80154d6:	4411      	add	r1, r2
 80154d8:	4299      	cmp	r1, r3
 80154da:	dd1a      	ble.n	8015512 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80154dc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80154e0:	440b      	add	r3, r1
 80154e2:	4402      	add	r2, r0
 80154e4:	b21b      	sxth	r3, r3
 80154e6:	429a      	cmp	r2, r3
 80154e8:	dc13      	bgt.n	8015512 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80154ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80154ee:	681b      	ldr	r3, [r3, #0]
 80154f0:	9206      	str	r2, [sp, #24]
 80154f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80154f4:	9205      	str	r2, [sp, #20]
 80154f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80154f8:	9500      	str	r5, [sp, #0]
 80154fa:	e9cd b203 	strd	fp, r2, [sp, #12]
 80154fe:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015500:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015502:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015506:	a912      	add	r1, sp, #72	; 0x48
 8015508:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801550c:	aa49      	add	r2, sp, #292	; 0x124
 801550e:	4623      	mov	r3, r4
 8015510:	47c8      	blx	r9
 8015512:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015516:	441a      	add	r2, r3
 8015518:	6963      	ldr	r3, [r4, #20]
 801551a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801551e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015522:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015526:	68a1      	ldr	r1, [r4, #8]
 8015528:	ed94 6a08 	vldr	s12, [r4, #32]
 801552c:	6022      	str	r2, [r4, #0]
 801552e:	3301      	adds	r3, #1
 8015530:	6163      	str	r3, [r4, #20]
 8015532:	69a3      	ldr	r3, [r4, #24]
 8015534:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015538:	3b01      	subs	r3, #1
 801553a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801553e:	61a3      	str	r3, [r4, #24]
 8015540:	6923      	ldr	r3, [r4, #16]
 8015542:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015546:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801554a:	edd4 6a07 	vldr	s13, [r4, #28]
 801554e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015552:	440b      	add	r3, r1
 8015554:	68e1      	ldr	r1, [r4, #12]
 8015556:	6123      	str	r3, [r4, #16]
 8015558:	ee76 6a86 	vadd.f32	s13, s13, s12
 801555c:	428b      	cmp	r3, r1
 801555e:	edc4 6a07 	vstr	s13, [r4, #28]
 8015562:	db15      	blt.n	8015590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015564:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015568:	ee76 6a26 	vadd.f32	s13, s12, s13
 801556c:	3201      	adds	r2, #1
 801556e:	edc4 6a07 	vstr	s13, [r4, #28]
 8015572:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015576:	6022      	str	r2, [r4, #0]
 8015578:	ee36 7a87 	vadd.f32	s14, s13, s14
 801557c:	1a5b      	subs	r3, r3, r1
 801557e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015582:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015586:	6123      	str	r3, [r4, #16]
 8015588:	ee77 7a27 	vadd.f32	s15, s14, s15
 801558c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015590:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015594:	441a      	add	r2, r3
 8015596:	696b      	ldr	r3, [r5, #20]
 8015598:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801559c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80155a0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80155a4:	68a9      	ldr	r1, [r5, #8]
 80155a6:	ed95 6a08 	vldr	s12, [r5, #32]
 80155aa:	602a      	str	r2, [r5, #0]
 80155ac:	3301      	adds	r3, #1
 80155ae:	616b      	str	r3, [r5, #20]
 80155b0:	69ab      	ldr	r3, [r5, #24]
 80155b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80155b6:	3b01      	subs	r3, #1
 80155b8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80155bc:	61ab      	str	r3, [r5, #24]
 80155be:	692b      	ldr	r3, [r5, #16]
 80155c0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80155c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80155c8:	edd5 6a07 	vldr	s13, [r5, #28]
 80155cc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80155d0:	440b      	add	r3, r1
 80155d2:	68e9      	ldr	r1, [r5, #12]
 80155d4:	612b      	str	r3, [r5, #16]
 80155d6:	ee76 6a86 	vadd.f32	s13, s13, s12
 80155da:	428b      	cmp	r3, r1
 80155dc:	edc5 6a07 	vstr	s13, [r5, #28]
 80155e0:	db15      	blt.n	801560e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80155e2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80155e6:	ee76 6a26 	vadd.f32	s13, s12, s13
 80155ea:	3201      	adds	r2, #1
 80155ec:	edc5 6a07 	vstr	s13, [r5, #28]
 80155f0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80155f4:	602a      	str	r2, [r5, #0]
 80155f6:	ee36 7a87 	vadd.f32	s14, s13, s14
 80155fa:	1a5b      	subs	r3, r3, r1
 80155fc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015600:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015604:	612b      	str	r3, [r5, #16]
 8015606:	ee77 7a27 	vadd.f32	s15, s14, s15
 801560a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801560e:	3f01      	subs	r7, #1
 8015610:	e757      	b.n	80154c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015612:	ad39      	add	r5, sp, #228	; 0xe4
 8015614:	ac19      	add	r4, sp, #100	; 0x64
 8015616:	e72d      	b.n	8015474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015618:	4613      	mov	r3, r2
 801561a:	e744      	b.n	80154a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801561c:	4613      	mov	r3, r2
 801561e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015622:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015624:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015628:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801562c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015630:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015634:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015638:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801563c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015640:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015642:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8015646:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801564a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801564e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8015652:	960e      	str	r6, [sp, #56]	; 0x38
 8015654:	469e      	mov	lr, r3
 8015656:	461f      	mov	r7, r3
 8015658:	f04f 0900 	mov.w	r9, #0
 801565c:	2f00      	cmp	r7, #0
 801565e:	d146      	bne.n	80156ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015660:	449c      	add	ip, r3
 8015662:	1ad7      	subs	r7, r2, r3
 8015664:	f1b9 0f00 	cmp.w	r9, #0
 8015668:	d009      	beq.n	801567e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801566a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801566e:	9039      	str	r0, [sp, #228]	; 0xe4
 8015670:	913d      	str	r1, [sp, #244]	; 0xf4
 8015672:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8015676:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801567a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801567e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015680:	910e      	str	r1, [sp, #56]	; 0x38
 8015682:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015686:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801568a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801568e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015692:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015696:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801569a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801569e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80156a2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80156a6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80156aa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80156ae:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80156b2:	f04f 0800 	mov.w	r8, #0
 80156b6:	f1be 0f00 	cmp.w	lr, #0
 80156ba:	d030      	beq.n	801571e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80156bc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80156be:	4431      	add	r1, r6
 80156c0:	4549      	cmp	r1, r9
 80156c2:	4450      	add	r0, sl
 80156c4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80156c8:	ee37 7a04 	vadd.f32	s14, s14, s8
 80156cc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80156d0:	db08      	blt.n	80156e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80156d2:	ee77 7a85 	vadd.f32	s15, s15, s10
 80156d6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80156da:	ee37 7a06 	vadd.f32	s14, s14, s12
 80156de:	3001      	adds	r0, #1
 80156e0:	eba1 0109 	sub.w	r1, r1, r9
 80156e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80156e8:	f04f 0801 	mov.w	r8, #1
 80156ec:	e7e3      	b.n	80156b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80156ee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80156f0:	4431      	add	r1, r6
 80156f2:	4541      	cmp	r1, r8
 80156f4:	4450      	add	r0, sl
 80156f6:	ee37 7a24 	vadd.f32	s14, s14, s9
 80156fa:	ee77 7a84 	vadd.f32	s15, s15, s8
 80156fe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015702:	db08      	blt.n	8015716 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015704:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015708:	ee37 7a25 	vadd.f32	s14, s14, s11
 801570c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015710:	3001      	adds	r0, #1
 8015712:	eba1 0108 	sub.w	r1, r1, r8
 8015716:	3f01      	subs	r7, #1
 8015718:	f04f 0901 	mov.w	r9, #1
 801571c:	e79e      	b.n	801565c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801571e:	449c      	add	ip, r3
 8015720:	1aff      	subs	r7, r7, r3
 8015722:	f1b8 0f00 	cmp.w	r8, #0
 8015726:	d009      	beq.n	801573c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015728:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801572c:	9019      	str	r0, [sp, #100]	; 0x64
 801572e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015732:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015736:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801573a:	911d      	str	r1, [sp, #116]	; 0x74
 801573c:	1ad2      	subs	r2, r2, r3
 801573e:	e6b5      	b.n	80154ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015740:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015742:	681b      	ldr	r3, [r3, #0]
 8015744:	b923      	cbnz	r3, 8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015746:	4b04      	ldr	r3, [pc, #16]	; (8015758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015748:	6818      	ldr	r0, [r3, #0]
 801574a:	6803      	ldr	r3, [r0, #0]
 801574c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801574e:	4798      	blx	r3
 8015750:	b05b      	add	sp, #364	; 0x16c
 8015752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015756:	bf00      	nop
 8015758:	200138b4 	.word	0x200138b4

0801575c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 801575c:	b570      	push	{r4, r5, r6, lr}
 801575e:	4604      	mov	r4, r0
 8015760:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015764:	9805      	ldr	r0, [sp, #20]
 8015766:	6061      	str	r1, [r4, #4]
 8015768:	2500      	movs	r5, #0
 801576a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801576e:	8263      	strh	r3, [r4, #18]
 8015770:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015774:	8025      	strh	r5, [r4, #0]
 8015776:	7221      	strb	r1, [r4, #8]
 8015778:	7266      	strb	r6, [r4, #9]
 801577a:	60e0      	str	r0, [r4, #12]
 801577c:	8222      	strh	r2, [r4, #16]
 801577e:	82a3      	strh	r3, [r4, #20]
 8015780:	82e5      	strh	r5, [r4, #22]
 8015782:	8325      	strh	r5, [r4, #24]
 8015784:	8365      	strh	r5, [r4, #26]
 8015786:	83a5      	strh	r5, [r4, #28]
 8015788:	83e5      	strh	r5, [r4, #30]
 801578a:	8425      	strh	r5, [r4, #32]
 801578c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015790:	b32e      	cbz	r6, 80157de <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015792:	6803      	ldr	r3, [r0, #0]
 8015794:	695b      	ldr	r3, [r3, #20]
 8015796:	4798      	blx	r3
 8015798:	4606      	mov	r6, r0
 801579a:	b300      	cbz	r0, 80157de <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801579c:	68e0      	ldr	r0, [r4, #12]
 801579e:	6803      	ldr	r3, [r0, #0]
 80157a0:	4631      	mov	r1, r6
 80157a2:	68db      	ldr	r3, [r3, #12]
 80157a4:	4798      	blx	r3
 80157a6:	4605      	mov	r5, r0
 80157a8:	b1c8      	cbz	r0, 80157de <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80157aa:	7b43      	ldrb	r3, [r0, #13]
 80157ac:	7a82      	ldrb	r2, [r0, #10]
 80157ae:	005b      	lsls	r3, r3, #1
 80157b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80157b4:	4313      	orrs	r3, r2
 80157b6:	8423      	strh	r3, [r4, #32]
 80157b8:	7a63      	ldrb	r3, [r4, #9]
 80157ba:	2b06      	cmp	r3, #6
 80157bc:	d10f      	bne.n	80157de <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80157be:	68e0      	ldr	r0, [r4, #12]
 80157c0:	6803      	ldr	r3, [r0, #0]
 80157c2:	462a      	mov	r2, r5
 80157c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80157c6:	4631      	mov	r1, r6
 80157c8:	4798      	blx	r3
 80157ca:	7b6b      	ldrb	r3, [r5, #13]
 80157cc:	005b      	lsls	r3, r3, #1
 80157ce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80157d2:	7aab      	ldrb	r3, [r5, #10]
 80157d4:	4313      	orrs	r3, r2
 80157d6:	4418      	add	r0, r3
 80157d8:	8c23      	ldrh	r3, [r4, #32]
 80157da:	4418      	add	r0, r3
 80157dc:	8420      	strh	r0, [r4, #32]
 80157de:	4620      	mov	r0, r4
 80157e0:	bd70      	pop	{r4, r5, r6, pc}

080157e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80157e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157e6:	2400      	movs	r4, #0
 80157e8:	b085      	sub	sp, #20
 80157ea:	4681      	mov	r9, r0
 80157ec:	4688      	mov	r8, r1
 80157ee:	4692      	mov	sl, r2
 80157f0:	469b      	mov	fp, r3
 80157f2:	4627      	mov	r7, r4
 80157f4:	4625      	mov	r5, r4
 80157f6:	4626      	mov	r6, r4
 80157f8:	4554      	cmp	r4, sl
 80157fa:	da2a      	bge.n	8015852 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80157fc:	2300      	movs	r3, #0
 80157fe:	9303      	str	r3, [sp, #12]
 8015800:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015804:	429d      	cmp	r5, r3
 8015806:	d004      	beq.n	8015812 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015808:	f242 030b 	movw	r3, #8203	; 0x200b
 801580c:	429d      	cmp	r5, r3
 801580e:	bf18      	it	ne
 8015810:	462f      	movne	r7, r5
 8015812:	ab03      	add	r3, sp, #12
 8015814:	4642      	mov	r2, r8
 8015816:	4659      	mov	r1, fp
 8015818:	4648      	mov	r0, r9
 801581a:	f003 f9a3 	bl	8018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801581e:	4605      	mov	r5, r0
 8015820:	b1b8      	cbz	r0, 8015852 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015822:	280a      	cmp	r0, #10
 8015824:	d015      	beq.n	8015852 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015826:	9a03      	ldr	r2, [sp, #12]
 8015828:	b18a      	cbz	r2, 801584e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801582a:	7b50      	ldrb	r0, [r2, #13]
 801582c:	7a93      	ldrb	r3, [r2, #10]
 801582e:	8895      	ldrh	r5, [r2, #4]
 8015830:	0040      	lsls	r0, r0, #1
 8015832:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015836:	4303      	orrs	r3, r0
 8015838:	9301      	str	r3, [sp, #4]
 801583a:	f8d8 3000 	ldr.w	r3, [r8]
 801583e:	4639      	mov	r1, r7
 8015840:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015842:	4640      	mov	r0, r8
 8015844:	4798      	blx	r3
 8015846:	9b01      	ldr	r3, [sp, #4]
 8015848:	4418      	add	r0, r3
 801584a:	4406      	add	r6, r0
 801584c:	b2b6      	uxth	r6, r6
 801584e:	3401      	adds	r4, #1
 8015850:	e7d2      	b.n	80157f8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015852:	4630      	mov	r0, r6
 8015854:	b005      	add	sp, #20
 8015856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801585a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801585a:	2a02      	cmp	r2, #2
 801585c:	b530      	push	{r4, r5, lr}
 801585e:	d011      	beq.n	8015884 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015860:	2a03      	cmp	r2, #3
 8015862:	d01c      	beq.n	801589e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015864:	2a01      	cmp	r2, #1
 8015866:	d10c      	bne.n	8015882 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015868:	888b      	ldrh	r3, [r1, #4]
 801586a:	8801      	ldrh	r1, [r0, #0]
 801586c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015870:	8844      	ldrh	r4, [r0, #2]
 8015872:	8004      	strh	r4, [r0, #0]
 8015874:	1a5b      	subs	r3, r3, r1
 8015876:	1a9b      	subs	r3, r3, r2
 8015878:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801587c:	8043      	strh	r3, [r0, #2]
 801587e:	8081      	strh	r1, [r0, #4]
 8015880:	80c2      	strh	r2, [r0, #6]
 8015882:	bd30      	pop	{r4, r5, pc}
 8015884:	88cb      	ldrh	r3, [r1, #6]
 8015886:	8842      	ldrh	r2, [r0, #2]
 8015888:	1a9b      	subs	r3, r3, r2
 801588a:	88c2      	ldrh	r2, [r0, #6]
 801588c:	1a9b      	subs	r3, r3, r2
 801588e:	888a      	ldrh	r2, [r1, #4]
 8015890:	8801      	ldrh	r1, [r0, #0]
 8015892:	8043      	strh	r3, [r0, #2]
 8015894:	1a52      	subs	r2, r2, r1
 8015896:	8881      	ldrh	r1, [r0, #4]
 8015898:	1a52      	subs	r2, r2, r1
 801589a:	8002      	strh	r2, [r0, #0]
 801589c:	e7f1      	b.n	8015882 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801589e:	88cb      	ldrh	r3, [r1, #6]
 80158a0:	8841      	ldrh	r1, [r0, #2]
 80158a2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80158a6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80158aa:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80158ae:	8045      	strh	r5, [r0, #2]
 80158b0:	1a5b      	subs	r3, r3, r1
 80158b2:	1a9b      	subs	r3, r3, r2
 80158b4:	8003      	strh	r3, [r0, #0]
 80158b6:	8082      	strh	r2, [r0, #4]
 80158b8:	80c4      	strh	r4, [r0, #6]
 80158ba:	e7e2      	b.n	8015882 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080158bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80158bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158c0:	b09f      	sub	sp, #124	; 0x7c
 80158c2:	9116      	str	r1, [sp, #88]	; 0x58
 80158c4:	9317      	str	r3, [sp, #92]	; 0x5c
 80158c6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80158c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80158ca:	8809      	ldrh	r1, [r1, #0]
 80158cc:	889b      	ldrh	r3, [r3, #4]
 80158ce:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80158d2:	9212      	str	r2, [sp, #72]	; 0x48
 80158d4:	440b      	add	r3, r1
 80158d6:	b21b      	sxth	r3, r3
 80158d8:	9310      	str	r3, [sp, #64]	; 0x40
 80158da:	f8d8 3000 	ldr.w	r3, [r8]
 80158de:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80158e2:	7b19      	ldrb	r1, [r3, #12]
 80158e4:	7adb      	ldrb	r3, [r3, #11]
 80158e6:	9011      	str	r0, [sp, #68]	; 0x44
 80158e8:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80158ec:	9114      	str	r1, [sp, #80]	; 0x50
 80158ee:	9315      	str	r3, [sp, #84]	; 0x54
 80158f0:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80158f4:	2a00      	cmp	r2, #0
 80158f6:	d06a      	beq.n	80159ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80158f8:	f898 3010 	ldrb.w	r3, [r8, #16]
 80158fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80158fe:	2b06      	cmp	r3, #6
 8015900:	bf14      	ite	ne
 8015902:	2301      	movne	r3, #1
 8015904:	2302      	moveq	r3, #2
 8015906:	4413      	add	r3, r2
 8015908:	f04f 0900 	mov.w	r9, #0
 801590c:	930f      	str	r3, [sp, #60]	; 0x3c
 801590e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015912:	464c      	mov	r4, r9
 8015914:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015918:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801591c:	4293      	cmp	r3, r2
 801591e:	f280 808f 	bge.w	8015a40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015922:	2300      	movs	r3, #0
 8015924:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015928:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801592c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015930:	429c      	cmp	r4, r3
 8015932:	d006      	beq.n	8015942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8015934:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015936:	f242 020b 	movw	r2, #8203	; 0x200b
 801593a:	4294      	cmp	r4, r2
 801593c:	bf18      	it	ne
 801593e:	4623      	movne	r3, r4
 8015940:	930d      	str	r3, [sp, #52]	; 0x34
 8015942:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015944:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015946:	f8d8 2000 	ldr.w	r2, [r8]
 801594a:	428b      	cmp	r3, r1
 801594c:	db41      	blt.n	80159d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801594e:	6813      	ldr	r3, [r2, #0]
 8015950:	4610      	mov	r0, r2
 8015952:	695b      	ldr	r3, [r3, #20]
 8015954:	4798      	blx	r3
 8015956:	4604      	mov	r4, r0
 8015958:	f8d8 0000 	ldr.w	r0, [r8]
 801595c:	6803      	ldr	r3, [r0, #0]
 801595e:	aa1d      	add	r2, sp, #116	; 0x74
 8015960:	689d      	ldr	r5, [r3, #8]
 8015962:	4621      	mov	r1, r4
 8015964:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015968:	47a8      	blx	r5
 801596a:	901c      	str	r0, [sp, #112]	; 0x70
 801596c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015970:	429c      	cmp	r4, r3
 8015972:	f000 80eb 	beq.w	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015976:	f242 030b 	movw	r3, #8203	; 0x200b
 801597a:	429c      	cmp	r4, r3
 801597c:	f000 80e6 	beq.w	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015980:	2c00      	cmp	r4, #0
 8015982:	f000 80f8 	beq.w	8015b76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015986:	2c0a      	cmp	r4, #10
 8015988:	d060      	beq.n	8015a4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801598a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801598c:	b36a      	cbz	r2, 80159ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801598e:	8894      	ldrh	r4, [r2, #4]
 8015990:	f1bb 0f00 	cmp.w	fp, #0
 8015994:	d03b      	beq.n	8015a0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015996:	f892 900d 	ldrb.w	r9, [r2, #13]
 801599a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801599e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80159a2:	f892 900a 	ldrb.w	r9, [r2, #10]
 80159a6:	f1bb 0f01 	cmp.w	fp, #1
 80159aa:	ea49 0903 	orr.w	r9, r9, r3
 80159ae:	d134      	bne.n	8015a1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80159b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80159b2:	eba6 0609 	sub.w	r6, r6, r9
 80159b6:	2b00      	cmp	r3, #0
 80159b8:	d14f      	bne.n	8015a5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80159ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80159bc:	eb09 0306 	add.w	r3, r9, r6
 80159c0:	4413      	add	r3, r2
 80159c2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80159c4:	f9b2 2000 	ldrsh.w	r2, [r2]
 80159c8:	4293      	cmp	r3, r2
 80159ca:	da51      	bge.n	8015a70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80159cc:	e038      	b.n	8015a40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80159ce:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80159d0:	e79a      	b.n	8015908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80159d2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80159d6:	9301      	str	r3, [sp, #4]
 80159d8:	ab1d      	add	r3, sp, #116	; 0x74
 80159da:	9300      	str	r3, [sp, #0]
 80159dc:	4659      	mov	r1, fp
 80159de:	ab1c      	add	r3, sp, #112	; 0x70
 80159e0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80159e2:	f003 f908 	bl	8018bf6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80159e6:	4604      	mov	r4, r0
 80159e8:	e7c0      	b.n	801596c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80159ea:	f8d8 0000 	ldr.w	r0, [r8]
 80159ee:	6803      	ldr	r3, [r0, #0]
 80159f0:	691b      	ldr	r3, [r3, #16]
 80159f2:	4798      	blx	r3
 80159f4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80159f8:	4298      	cmp	r0, r3
 80159fa:	f000 80a7 	beq.w	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80159fe:	f242 030b 	movw	r3, #8203	; 0x200b
 8015a02:	4298      	cmp	r0, r3
 8015a04:	f000 80a2 	beq.w	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015a08:	f1bb 0f00 	cmp.w	fp, #0
 8015a0c:	d100      	bne.n	8015a10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015a0e:	444e      	add	r6, r9
 8015a10:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015a12:	2a00      	cmp	r2, #0
 8015a14:	d1bf      	bne.n	8015996 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015a16:	4691      	mov	r9, r2
 8015a18:	e098      	b.n	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015a1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a1c:	2b00      	cmp	r3, #0
 8015a1e:	f000 80ac 	beq.w	8015b7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015a22:	f1bb 0f00 	cmp.w	fp, #0
 8015a26:	d118      	bne.n	8015a5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015a28:	f8d8 0000 	ldr.w	r0, [r8]
 8015a2c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015a2e:	6803      	ldr	r3, [r0, #0]
 8015a30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015a32:	4798      	blx	r3
 8015a34:	4406      	add	r6, r0
 8015a36:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015a38:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015a3a:	1af3      	subs	r3, r6, r3
 8015a3c:	4293      	cmp	r3, r2
 8015a3e:	dd17      	ble.n	8015a70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015a40:	2c00      	cmp	r4, #0
 8015a42:	f000 8098 	beq.w	8015b76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015a46:	2c0a      	cmp	r4, #10
 8015a48:	f040 8086 	bne.w	8015b58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015a4c:	240a      	movs	r4, #10
 8015a4e:	fab4 f084 	clz	r0, r4
 8015a52:	0940      	lsrs	r0, r0, #5
 8015a54:	b01f      	add	sp, #124	; 0x7c
 8015a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a5a:	f8d8 0000 	ldr.w	r0, [r8]
 8015a5e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015a60:	6803      	ldr	r3, [r0, #0]
 8015a62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015a64:	4798      	blx	r3
 8015a66:	f1bb 0f01 	cmp.w	fp, #1
 8015a6a:	eba6 0600 	sub.w	r6, r6, r0
 8015a6e:	d0a4      	beq.n	80159ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015a70:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015a72:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a74:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015a78:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015a7c:	7b43      	ldrb	r3, [r0, #13]
 8015a7e:	015b      	lsls	r3, r3, #5
 8015a80:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015a84:	7983      	ldrb	r3, [r0, #6]
 8015a86:	4431      	add	r1, r6
 8015a88:	4313      	orrs	r3, r2
 8015a8a:	440b      	add	r3, r1
 8015a8c:	42bb      	cmp	r3, r7
 8015a8e:	db5d      	blt.n	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015a90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a92:	4299      	cmp	r1, r3
 8015a94:	da5a      	bge.n	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015a96:	f8d8 0000 	ldr.w	r0, [r8]
 8015a9a:	6803      	ldr	r3, [r0, #0]
 8015a9c:	42b7      	cmp	r7, r6
 8015a9e:	bfc8      	it	gt
 8015aa0:	1bbf      	subgt	r7, r7, r6
 8015aa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015aa4:	bfcc      	ite	gt
 8015aa6:	b2bf      	uxthgt	r7, r7
 8015aa8:	2700      	movle	r7, #0
 8015aaa:	4798      	blx	r3
 8015aac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015aae:	7b5a      	ldrb	r2, [r3, #13]
 8015ab0:	00d1      	lsls	r1, r2, #3
 8015ab2:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8015ab6:	7a19      	ldrb	r1, [r3, #8]
 8015ab8:	4329      	orrs	r1, r5
 8015aba:	0655      	lsls	r5, r2, #25
 8015abc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015abe:	bf44      	itt	mi
 8015ac0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8015ac4:	b209      	sxthmi	r1, r1
 8015ac6:	1945      	adds	r5, r0, r5
 8015ac8:	1a6d      	subs	r5, r5, r1
 8015aca:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015acc:	b2ad      	uxth	r5, r5
 8015ace:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015ad2:	fa0f fa85 	sxth.w	sl, r5
 8015ad6:	4551      	cmp	r1, sl
 8015ad8:	dd3c      	ble.n	8015b54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015ada:	0112      	lsls	r2, r2, #4
 8015adc:	79d8      	ldrb	r0, [r3, #7]
 8015ade:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015ae2:	4302      	orrs	r2, r0
 8015ae4:	4492      	add	sl, r2
 8015ae6:	4551      	cmp	r1, sl
 8015ae8:	dc30      	bgt.n	8015b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015aea:	1b4d      	subs	r5, r1, r5
 8015aec:	b22d      	sxth	r5, r5
 8015aee:	468a      	mov	sl, r1
 8015af0:	9319      	str	r3, [sp, #100]	; 0x64
 8015af2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015af4:	f8d8 0000 	ldr.w	r0, [r8]
 8015af8:	681a      	ldr	r2, [r3, #0]
 8015afa:	6801      	ldr	r1, [r0, #0]
 8015afc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015afe:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015b00:	9313      	str	r3, [sp, #76]	; 0x4c
 8015b02:	9218      	str	r2, [sp, #96]	; 0x60
 8015b04:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8015b06:	4788      	blx	r1
 8015b08:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015b0c:	910b      	str	r1, [sp, #44]	; 0x2c
 8015b0e:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015b12:	910a      	str	r1, [sp, #40]	; 0x28
 8015b14:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015b18:	9109      	str	r1, [sp, #36]	; 0x24
 8015b1a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015b1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015b20:	9305      	str	r3, [sp, #20]
 8015b22:	b2ad      	uxth	r5, r5
 8015b24:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015b28:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015b2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015b2e:	9304      	str	r3, [sp, #16]
 8015b30:	4437      	add	r7, r6
 8015b32:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015b34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015b36:	9206      	str	r2, [sp, #24]
 8015b38:	b23f      	sxth	r7, r7
 8015b3a:	f8cd a004 	str.w	sl, [sp, #4]
 8015b3e:	9700      	str	r7, [sp, #0]
 8015b40:	681a      	ldr	r2, [r3, #0]
 8015b42:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015b44:	685b      	ldr	r3, [r3, #4]
 8015b46:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b48:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015b4a:	47a8      	blx	r5
 8015b4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b4e:	3301      	adds	r3, #1
 8015b50:	930e      	str	r3, [sp, #56]	; 0x38
 8015b52:	e6e1      	b.n	8015918 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015b54:	2500      	movs	r5, #0
 8015b56:	e7cb      	b.n	8015af0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015b58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015b5a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015b5c:	3501      	adds	r5, #1
 8015b5e:	429d      	cmp	r5, r3
 8015b60:	f6bf af75 	bge.w	8015a4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015b64:	4659      	mov	r1, fp
 8015b66:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015b68:	f7f2 fed0 	bl	800890c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015b6c:	4604      	mov	r4, r0
 8015b6e:	b110      	cbz	r0, 8015b76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015b70:	280a      	cmp	r0, #10
 8015b72:	d1f2      	bne.n	8015b5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8015b74:	e76a      	b.n	8015a4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015b76:	2400      	movs	r4, #0
 8015b78:	e769      	b.n	8015a4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015b7a:	f1bb 0f00 	cmp.w	fp, #0
 8015b7e:	f43f af5a 	beq.w	8015a36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015b82:	e775      	b.n	8015a70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015b84 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015b84:	b530      	push	{r4, r5, lr}
 8015b86:	8ac4      	ldrh	r4, [r0, #22]
 8015b88:	8b45      	ldrh	r5, [r0, #26]
 8015b8a:	8343      	strh	r3, [r0, #26]
 8015b8c:	442c      	add	r4, r5
 8015b8e:	1ae4      	subs	r4, r4, r3
 8015b90:	82c4      	strh	r4, [r0, #22]
 8015b92:	8b83      	ldrh	r3, [r0, #28]
 8015b94:	8b04      	ldrh	r4, [r0, #24]
 8015b96:	4422      	add	r2, r4
 8015b98:	440c      	add	r4, r1
 8015b9a:	1a59      	subs	r1, r3, r1
 8015b9c:	83c2      	strh	r2, [r0, #30]
 8015b9e:	8304      	strh	r4, [r0, #24]
 8015ba0:	8381      	strh	r1, [r0, #28]
 8015ba2:	bd30      	pop	{r4, r5, pc}

08015ba4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ba8:	4604      	mov	r4, r0
 8015baa:	8a47      	ldrh	r7, [r0, #18]
 8015bac:	68c0      	ldr	r0, [r0, #12]
 8015bae:	6803      	ldr	r3, [r0, #0]
 8015bb0:	b085      	sub	sp, #20
 8015bb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015bb4:	4798      	blx	r3
 8015bb6:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015bba:	7a63      	ldrb	r3, [r4, #9]
 8015bbc:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015bc0:	42b7      	cmp	r7, r6
 8015bc2:	f103 33ff 	add.w	r3, r3, #4294967295
 8015bc6:	bfac      	ite	ge
 8015bc8:	f04f 0900 	movge.w	r9, #0
 8015bcc:	f04f 0901 	movlt.w	r9, #1
 8015bd0:	2b05      	cmp	r3, #5
 8015bd2:	d804      	bhi.n	8015bde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015bd4:	e8df f003 	tbb	[pc, r3]
 8015bd8:	470e0854 	.word	0x470e0854
 8015bdc:	4c4c      	.short	0x4c4c
 8015bde:	2500      	movs	r5, #0
 8015be0:	46a9      	mov	r9, r5
 8015be2:	462e      	mov	r6, r5
 8015be4:	462f      	mov	r7, r5
 8015be6:	e00d      	b.n	8015c04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015be8:	42b7      	cmp	r7, r6
 8015bea:	bfb4      	ite	lt
 8015bec:	2600      	movlt	r6, #0
 8015bee:	2601      	movge	r6, #1
 8015bf0:	2500      	movs	r5, #0
 8015bf2:	e7f7      	b.n	8015be4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015bf4:	42b7      	cmp	r7, r6
 8015bf6:	464d      	mov	r5, r9
 8015bf8:	f04f 0900 	mov.w	r9, #0
 8015bfc:	bfb4      	ite	lt
 8015bfe:	2600      	movlt	r6, #0
 8015c00:	2601      	movge	r6, #1
 8015c02:	464f      	mov	r7, r9
 8015c04:	f04f 0800 	mov.w	r8, #0
 8015c08:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015c0c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015c10:	f8cd 8004 	str.w	r8, [sp, #4]
 8015c14:	2300      	movs	r3, #0
 8015c16:	9303      	str	r3, [sp, #12]
 8015c18:	8823      	ldrh	r3, [r4, #0]
 8015c1a:	2b20      	cmp	r3, #32
 8015c1c:	d034      	beq.n	8015c88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015c1e:	f242 010b 	movw	r1, #8203	; 0x200b
 8015c22:	1a5a      	subs	r2, r3, r1
 8015c24:	f1d2 0a00 	rsbs	sl, r2, #0
 8015c28:	eb4a 0a02 	adc.w	sl, sl, r2
 8015c2c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015c30:	4293      	cmp	r3, r2
 8015c32:	d009      	beq.n	8015c48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015c34:	428b      	cmp	r3, r1
 8015c36:	9a01      	ldr	r2, [sp, #4]
 8015c38:	bf18      	it	ne
 8015c3a:	461a      	movne	r2, r3
 8015c3c:	9201      	str	r2, [sp, #4]
 8015c3e:	bf0c      	ite	eq
 8015c40:	f04f 0a01 	moveq.w	sl, #1
 8015c44:	f04f 0a00 	movne.w	sl, #0
 8015c48:	ab03      	add	r3, sp, #12
 8015c4a:	68e2      	ldr	r2, [r4, #12]
 8015c4c:	7a21      	ldrb	r1, [r4, #8]
 8015c4e:	6860      	ldr	r0, [r4, #4]
 8015c50:	f002 ff88 	bl	8018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c54:	8020      	strh	r0, [r4, #0]
 8015c56:	b9d8      	cbnz	r0, 8015c90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015c58:	8ba2      	ldrh	r2, [r4, #28]
 8015c5a:	2300      	movs	r3, #0
 8015c5c:	4611      	mov	r1, r2
 8015c5e:	4620      	mov	r0, r4
 8015c60:	f7ff ff90 	bl	8015b84 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015c64:	e06e      	b.n	8015d44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015c66:	2500      	movs	r5, #0
 8015c68:	46a9      	mov	r9, r5
 8015c6a:	462e      	mov	r6, r5
 8015c6c:	2701      	movs	r7, #1
 8015c6e:	e7c9      	b.n	8015c04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015c70:	42b7      	cmp	r7, r6
 8015c72:	f04f 0500 	mov.w	r5, #0
 8015c76:	bfb4      	ite	lt
 8015c78:	2700      	movlt	r7, #0
 8015c7a:	2701      	movge	r7, #1
 8015c7c:	462e      	mov	r6, r5
 8015c7e:	e7c1      	b.n	8015c04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015c80:	2500      	movs	r5, #0
 8015c82:	46a9      	mov	r9, r5
 8015c84:	2601      	movs	r6, #1
 8015c86:	e7ad      	b.n	8015be4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015c88:	9301      	str	r3, [sp, #4]
 8015c8a:	f04f 0a01 	mov.w	sl, #1
 8015c8e:	e7db      	b.n	8015c48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015c90:	8b63      	ldrh	r3, [r4, #26]
 8015c92:	280a      	cmp	r0, #10
 8015c94:	f103 0301 	add.w	r3, r3, #1
 8015c98:	8363      	strh	r3, [r4, #26]
 8015c9a:	d0dd      	beq.n	8015c58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015c9c:	9a03      	ldr	r2, [sp, #12]
 8015c9e:	bb62      	cbnz	r2, 8015cfa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015ca0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ca4:	4298      	cmp	r0, r3
 8015ca6:	d003      	beq.n	8015cb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015ca8:	f242 030b 	movw	r3, #8203	; 0x200b
 8015cac:	4298      	cmp	r0, r3
 8015cae:	d1b1      	bne.n	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015cb0:	8823      	ldrh	r3, [r4, #0]
 8015cb2:	8ba1      	ldrh	r1, [r4, #28]
 8015cb4:	2b20      	cmp	r3, #32
 8015cb6:	d003      	beq.n	8015cc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015cb8:	f242 000b 	movw	r0, #8203	; 0x200b
 8015cbc:	4283      	cmp	r3, r0
 8015cbe:	d131      	bne.n	8015d24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015cc0:	f1ba 0f00 	cmp.w	sl, #0
 8015cc4:	bf0a      	itet	eq
 8015cc6:	4688      	moveq	r8, r1
 8015cc8:	4650      	movne	r0, sl
 8015cca:	2001      	moveq	r0, #1
 8015ccc:	440a      	add	r2, r1
 8015cce:	8b23      	ldrh	r3, [r4, #24]
 8015cd0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015cd4:	b292      	uxth	r2, r2
 8015cd6:	83a2      	strh	r2, [r4, #28]
 8015cd8:	4413      	add	r3, r2
 8015cda:	f1b9 0f00 	cmp.w	r9, #0
 8015cde:	d102      	bne.n	8015ce6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015ce0:	2d00      	cmp	r5, #0
 8015ce2:	d042      	beq.n	8015d6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015ce4:	b300      	cbz	r0, 8015d28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015ce6:	8c21      	ldrh	r1, [r4, #32]
 8015ce8:	4419      	add	r1, r3
 8015cea:	458c      	cmp	ip, r1
 8015cec:	da37      	bge.n	8015d5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015cee:	8ae1      	ldrh	r1, [r4, #22]
 8015cf0:	2900      	cmp	r1, #0
 8015cf2:	d034      	beq.n	8015d5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015cf4:	4563      	cmp	r3, ip
 8015cf6:	dd8d      	ble.n	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015cf8:	e01d      	b.n	8015d36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015cfa:	8893      	ldrh	r3, [r2, #4]
 8015cfc:	8023      	strh	r3, [r4, #0]
 8015cfe:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015d02:	9901      	ldr	r1, [sp, #4]
 8015d04:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015d08:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015d0c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015d10:	ea4b 0b00 	orr.w	fp, fp, r0
 8015d14:	68e0      	ldr	r0, [r4, #12]
 8015d16:	6803      	ldr	r3, [r0, #0]
 8015d18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d1a:	4798      	blx	r3
 8015d1c:	eb0b 0200 	add.w	r2, fp, r0
 8015d20:	b292      	uxth	r2, r2
 8015d22:	e7c5      	b.n	8015cb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015d24:	2000      	movs	r0, #0
 8015d26:	e7d1      	b.n	8015ccc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015d28:	4563      	cmp	r3, ip
 8015d2a:	f77f af73 	ble.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d2e:	8ae3      	ldrh	r3, [r4, #22]
 8015d30:	2b00      	cmp	r3, #0
 8015d32:	f43f af6f 	beq.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d36:	2301      	movs	r3, #1
 8015d38:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015d3c:	8c22      	ldrh	r2, [r4, #32]
 8015d3e:	8be3      	ldrh	r3, [r4, #30]
 8015d40:	4413      	add	r3, r2
 8015d42:	83e3      	strh	r3, [r4, #30]
 8015d44:	68e0      	ldr	r0, [r4, #12]
 8015d46:	6803      	ldr	r3, [r0, #0]
 8015d48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d4a:	4798      	blx	r3
 8015d4c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015d50:	4418      	add	r0, r3
 8015d52:	8a63      	ldrh	r3, [r4, #18]
 8015d54:	1a18      	subs	r0, r3, r0
 8015d56:	8260      	strh	r0, [r4, #18]
 8015d58:	b005      	add	sp, #20
 8015d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d5e:	2300      	movs	r3, #0
 8015d60:	4611      	mov	r1, r2
 8015d62:	4620      	mov	r0, r4
 8015d64:	f7ff ff0e 	bl	8015b84 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015d68:	e754      	b.n	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d6a:	4563      	cmp	r3, ip
 8015d6c:	dd14      	ble.n	8015d98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015d6e:	b117      	cbz	r7, 8015d76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015d70:	2301      	movs	r3, #1
 8015d72:	460a      	mov	r2, r1
 8015d74:	e772      	b.n	8015c5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015d76:	2e00      	cmp	r6, #0
 8015d78:	f43f af4c 	beq.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d7c:	2800      	cmp	r0, #0
 8015d7e:	f47f af49 	bne.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d82:	f1ba 0f00 	cmp.w	sl, #0
 8015d86:	d002      	beq.n	8015d8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015d88:	2301      	movs	r3, #1
 8015d8a:	4642      	mov	r2, r8
 8015d8c:	e767      	b.n	8015c5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015d8e:	8ae3      	ldrh	r3, [r4, #22]
 8015d90:	2b00      	cmp	r3, #0
 8015d92:	f43f af3f 	beq.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d96:	e7d5      	b.n	8015d44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015d98:	2800      	cmp	r0, #0
 8015d9a:	f47f af3b 	bne.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d9e:	f1ba 0f00 	cmp.w	sl, #0
 8015da2:	f43f af37 	beq.w	8015c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015da6:	2301      	movs	r3, #1
 8015da8:	4642      	mov	r2, r8
 8015daa:	e7da      	b.n	8015d62 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015dac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015dac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015dae:	4605      	mov	r5, r0
 8015db0:	b08f      	sub	sp, #60	; 0x3c
 8015db2:	4617      	mov	r7, r2
 8015db4:	461c      	mov	r4, r3
 8015db6:	460e      	mov	r6, r1
 8015db8:	b1d1      	cbz	r1, 8015df0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015dba:	681b      	ldr	r3, [r3, #0]
 8015dbc:	4620      	mov	r0, r4
 8015dbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015dc0:	4798      	blx	r3
 8015dc2:	4240      	negs	r0, r0
 8015dc4:	b200      	sxth	r0, r0
 8015dc6:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015dca:	9603      	str	r6, [sp, #12]
 8015dcc:	9700      	str	r7, [sp, #0]
 8015dce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015dd2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015dd6:	4629      	mov	r1, r5
 8015dd8:	a805      	add	r0, sp, #20
 8015dda:	f7ff fcbf 	bl	801575c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015dde:	2401      	movs	r4, #1
 8015de0:	a805      	add	r0, sp, #20
 8015de2:	f7ff fedf 	bl	8015ba4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015de6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015dea:	b163      	cbz	r3, 8015e06 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015dec:	3401      	adds	r4, #1
 8015dee:	e7f7      	b.n	8015de0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015df0:	f002 ff86 	bl	8018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015df4:	2401      	movs	r4, #1
 8015df6:	280a      	cmp	r0, #10
 8015df8:	4628      	mov	r0, r5
 8015dfa:	bf08      	it	eq
 8015dfc:	3401      	addeq	r4, #1
 8015dfe:	f002 ff7f 	bl	8018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015e02:	2800      	cmp	r0, #0
 8015e04:	d1f7      	bne.n	8015df6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015e06:	b2a0      	uxth	r0, r4
 8015e08:	b00f      	add	sp, #60	; 0x3c
 8015e0a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e10:	b0e3      	sub	sp, #396	; 0x18c
 8015e12:	461c      	mov	r4, r3
 8015e14:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015e16:	4683      	mov	fp, r0
 8015e18:	4688      	mov	r8, r1
 8015e1a:	2b00      	cmp	r3, #0
 8015e1c:	f000 8112 	beq.w	8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e20:	6823      	ldr	r3, [r4, #0]
 8015e22:	2b00      	cmp	r3, #0
 8015e24:	f000 810e 	beq.w	8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e28:	7ba3      	ldrb	r3, [r4, #14]
 8015e2a:	2b00      	cmp	r3, #0
 8015e2c:	f000 810a 	beq.w	8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e30:	6810      	ldr	r0, [r2, #0]
 8015e32:	6851      	ldr	r1, [r2, #4]
 8015e34:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015e38:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015e3c:	ad0a      	add	r5, sp, #40	; 0x28
 8015e3e:	462b      	mov	r3, r5
 8015e40:	c303      	stmia	r3!, {r0, r1}
 8015e42:	2100      	movs	r1, #0
 8015e44:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015e48:	910c      	str	r1, [sp, #48]	; 0x30
 8015e4a:	79a2      	ldrb	r2, [r4, #6]
 8015e4c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015e50:	a90c      	add	r1, sp, #48	; 0x30
 8015e52:	4628      	mov	r0, r5
 8015e54:	f7ff fd01 	bl	801585a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015e58:	a90c      	add	r1, sp, #48	; 0x30
 8015e5a:	4608      	mov	r0, r1
 8015e5c:	79a2      	ldrb	r2, [r4, #6]
 8015e5e:	f7ff fcfc 	bl	801585a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015e62:	a817      	add	r0, sp, #92	; 0x5c
 8015e64:	f002 fb20 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 8015e68:	6820      	ldr	r0, [r4, #0]
 8015e6a:	6803      	ldr	r3, [r0, #0]
 8015e6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015e6e:	4798      	blx	r3
 8015e70:	4606      	mov	r6, r0
 8015e72:	6820      	ldr	r0, [r4, #0]
 8015e74:	6803      	ldr	r3, [r0, #0]
 8015e76:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015e78:	4798      	blx	r3
 8015e7a:	4633      	mov	r3, r6
 8015e7c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015e7e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015e80:	9000      	str	r0, [sp, #0]
 8015e82:	a817      	add	r0, sp, #92	; 0x5c
 8015e84:	f002 fb6b 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015e88:	6820      	ldr	r0, [r4, #0]
 8015e8a:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015e8e:	6803      	ldr	r3, [r0, #0]
 8015e90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015e92:	4798      	blx	r3
 8015e94:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015e98:	6823      	ldr	r3, [r4, #0]
 8015e9a:	4607      	mov	r7, r0
 8015e9c:	4406      	add	r6, r0
 8015e9e:	a830      	add	r0, sp, #192	; 0xc0
 8015ea0:	f893 9009 	ldrb.w	r9, [r3, #9]
 8015ea4:	f002 fb00 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 8015ea8:	7c23      	ldrb	r3, [r4, #16]
 8015eaa:	b17b      	cbz	r3, 8015ecc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015eac:	6820      	ldr	r0, [r4, #0]
 8015eae:	6803      	ldr	r3, [r0, #0]
 8015eb0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015eb2:	4798      	blx	r3
 8015eb4:	9009      	str	r0, [sp, #36]	; 0x24
 8015eb6:	6820      	ldr	r0, [r4, #0]
 8015eb8:	6802      	ldr	r2, [r0, #0]
 8015eba:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015ebc:	4790      	blx	r2
 8015ebe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ec0:	9000      	str	r0, [sp, #0]
 8015ec2:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015ec4:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015ec6:	a830      	add	r0, sp, #192	; 0xc0
 8015ec8:	f002 fb49 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015ecc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015ed0:	7be2      	ldrb	r2, [r4, #15]
 8015ed2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015ed6:	1a8a      	subs	r2, r1, r2
 8015ed8:	7c21      	ldrb	r1, [r4, #16]
 8015eda:	9103      	str	r1, [sp, #12]
 8015edc:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015ee0:	9102      	str	r1, [sp, #8]
 8015ee2:	6821      	ldr	r1, [r4, #0]
 8015ee4:	9101      	str	r1, [sp, #4]
 8015ee6:	7961      	ldrb	r1, [r4, #5]
 8015ee8:	9100      	str	r1, [sp, #0]
 8015eea:	b292      	uxth	r2, r2
 8015eec:	a930      	add	r1, sp, #192	; 0xc0
 8015eee:	a80e      	add	r0, sp, #56	; 0x38
 8015ef0:	f7ff fc34 	bl	801575c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015ef4:	2e00      	cmp	r6, #0
 8015ef6:	dc5b      	bgt.n	8015fb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015ef8:	af17      	add	r7, sp, #92	; 0x5c
 8015efa:	f04f 0900 	mov.w	r9, #0
 8015efe:	7c23      	ldrb	r3, [r4, #16]
 8015f00:	2b00      	cmp	r3, #0
 8015f02:	f000 80b1 	beq.w	8016068 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015f06:	a80e      	add	r0, sp, #56	; 0x38
 8015f08:	f7ff fe4c 	bl	8015ba4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015f0c:	f1ba 0f00 	cmp.w	sl, #0
 8015f10:	f000 80a5 	beq.w	801605e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015f14:	7c23      	ldrb	r3, [r4, #16]
 8015f16:	9309      	str	r3, [sp, #36]	; 0x24
 8015f18:	2264      	movs	r2, #100	; 0x64
 8015f1a:	4639      	mov	r1, r7
 8015f1c:	a849      	add	r0, sp, #292	; 0x124
 8015f1e:	f015 fde6 	bl	802baee <memcpy>
 8015f22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f24:	2b00      	cmp	r3, #0
 8015f26:	f000 80a7 	beq.w	8016078 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015f2a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015f2e:	7922      	ldrb	r2, [r4, #4]
 8015f30:	2a01      	cmp	r2, #1
 8015f32:	f040 808a 	bne.w	801604a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015f36:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015f3a:	1ac0      	subs	r0, r0, r3
 8015f3c:	2302      	movs	r3, #2
 8015f3e:	fb90 f0f3 	sdiv	r0, r0, r3
 8015f42:	b200      	sxth	r0, r0
 8015f44:	7c23      	ldrb	r3, [r4, #16]
 8015f46:	2b00      	cmp	r3, #0
 8015f48:	f000 808b 	beq.w	8016062 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015f4c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015f50:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8015f54:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015f58:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015f5c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015f60:	4410      	add	r0, r2
 8015f62:	b200      	sxth	r0, r0
 8015f64:	9000      	str	r0, [sp, #0]
 8015f66:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015f6a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015f6e:	4642      	mov	r2, r8
 8015f70:	2100      	movs	r1, #0
 8015f72:	4658      	mov	r0, fp
 8015f74:	f7ff fca2 	bl	80158bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015f78:	2800      	cmp	r0, #0
 8015f7a:	d163      	bne.n	8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015f7c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015f80:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015f84:	b2b2      	uxth	r2, r6
 8015f86:	4413      	add	r3, r2
 8015f88:	1a8a      	subs	r2, r1, r2
 8015f8a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015f8e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8015f92:	b21b      	sxth	r3, r3
 8015f94:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015f98:	2a00      	cmp	r2, #0
 8015f9a:	d153      	bne.n	8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015f9c:	6822      	ldr	r2, [r4, #0]
 8015f9e:	8869      	ldrh	r1, [r5, #2]
 8015fa0:	7a12      	ldrb	r2, [r2, #8]
 8015fa2:	1a9b      	subs	r3, r3, r2
 8015fa4:	88ea      	ldrh	r2, [r5, #6]
 8015fa6:	440a      	add	r2, r1
 8015fa8:	b212      	sxth	r2, r2
 8015faa:	4293      	cmp	r3, r2
 8015fac:	dda7      	ble.n	8015efe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015fae:	e049      	b.n	8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015fb0:	7c23      	ldrb	r3, [r4, #16]
 8015fb2:	444f      	add	r7, r9
 8015fb4:	b1c3      	cbz	r3, 8015fe8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8015fb6:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015fba:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015fbe:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015fc2:	443b      	add	r3, r7
 8015fc4:	4293      	cmp	r3, r2
 8015fc6:	da97      	bge.n	8015ef8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015fc8:	a80e      	add	r0, sp, #56	; 0x38
 8015fca:	f7ff fdeb 	bl	8015ba4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015fce:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8015fd2:	3b01      	subs	r3, #1
 8015fd4:	b29b      	uxth	r3, r3
 8015fd6:	454b      	cmp	r3, r9
 8015fd8:	9309      	str	r3, [sp, #36]	; 0x24
 8015fda:	d021      	beq.n	8016020 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015fdc:	7961      	ldrb	r1, [r4, #5]
 8015fde:	a817      	add	r0, sp, #92	; 0x5c
 8015fe0:	f7f2 fc94 	bl	800890c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015fe4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fe6:	e7f4      	b.n	8015fd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015fe8:	fa1f f986 	uxth.w	r9, r6
 8015fec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015ff0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015ff4:	443b      	add	r3, r7
 8015ff6:	4293      	cmp	r3, r2
 8015ff8:	f6bf af7e 	bge.w	8015ef8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015ffc:	a817      	add	r0, sp, #92	; 0x5c
 8015ffe:	f002 fe7f 	bl	8018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016002:	b1f8      	cbz	r0, 8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016004:	280a      	cmp	r0, #10
 8016006:	d1f1      	bne.n	8015fec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016008:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801600c:	444b      	add	r3, r9
 801600e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016012:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8016016:	eba3 0309 	sub.w	r3, r3, r9
 801601a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801601e:	e7e5      	b.n	8015fec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016020:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8016024:	b2b3      	uxth	r3, r6
 8016026:	441a      	add	r2, r3
 8016028:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801602c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8016030:	1ad3      	subs	r3, r2, r3
 8016032:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016036:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801603a:	b11b      	cbz	r3, 8016044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801603c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8016040:	2b00      	cmp	r3, #0
 8016042:	d0ba      	beq.n	8015fba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8016044:	b063      	add	sp, #396	; 0x18c
 8016046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801604a:	2a02      	cmp	r2, #2
 801604c:	d105      	bne.n	801605a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801604e:	7be2      	ldrb	r2, [r4, #15]
 8016050:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016054:	1a80      	subs	r0, r0, r2
 8016056:	1ac0      	subs	r0, r0, r3
 8016058:	e773      	b.n	8015f42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801605a:	2000      	movs	r0, #0
 801605c:	e772      	b.n	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801605e:	7be0      	ldrb	r0, [r4, #15]
 8016060:	e770      	b.n	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016062:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016066:	e773      	b.n	8015f50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016068:	f1ba 0f00 	cmp.w	sl, #0
 801606c:	d0f7      	beq.n	801605e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801606e:	2264      	movs	r2, #100	; 0x64
 8016070:	4639      	mov	r1, r7
 8016072:	a849      	add	r0, sp, #292	; 0x124
 8016074:	f015 fd3b 	bl	802baee <memcpy>
 8016078:	2300      	movs	r3, #0
 801607a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801607e:	6821      	ldr	r1, [r4, #0]
 8016080:	a849      	add	r0, sp, #292	; 0x124
 8016082:	f7ff fbae 	bl	80157e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016086:	b203      	sxth	r3, r0
 8016088:	e751      	b.n	8015f2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801608a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801608a:	2b03      	cmp	r3, #3
 801608c:	d818      	bhi.n	80160c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801608e:	e8df f003 	tbb	[pc, r3]
 8016092:	0602      	.short	0x0602
 8016094:	130d      	.short	0x130d
 8016096:	f9b0 2000 	ldrsh.w	r2, [r0]
 801609a:	1850      	adds	r0, r2, r1
 801609c:	4770      	bx	lr
 801609e:	8803      	ldrh	r3, [r0, #0]
 80160a0:	8880      	ldrh	r0, [r0, #4]
 80160a2:	4418      	add	r0, r3
 80160a4:	b200      	sxth	r0, r0
 80160a6:	1a80      	subs	r0, r0, r2
 80160a8:	3801      	subs	r0, #1
 80160aa:	4770      	bx	lr
 80160ac:	8803      	ldrh	r3, [r0, #0]
 80160ae:	8880      	ldrh	r0, [r0, #4]
 80160b0:	4418      	add	r0, r3
 80160b2:	b200      	sxth	r0, r0
 80160b4:	1a40      	subs	r0, r0, r1
 80160b6:	e7f7      	b.n	80160a8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80160b8:	f9b0 0000 	ldrsh.w	r0, [r0]
 80160bc:	4410      	add	r0, r2
 80160be:	4770      	bx	lr
 80160c0:	2000      	movs	r0, #0
 80160c2:	4770      	bx	lr

080160c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80160c4:	2b03      	cmp	r3, #3
 80160c6:	d817      	bhi.n	80160f8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80160c8:	e8df f003 	tbb	[pc, r3]
 80160cc:	10090602 	.word	0x10090602
 80160d0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80160d4:	1850      	adds	r0, r2, r1
 80160d6:	4770      	bx	lr
 80160d8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80160dc:	e7fa      	b.n	80160d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80160de:	8843      	ldrh	r3, [r0, #2]
 80160e0:	88c0      	ldrh	r0, [r0, #6]
 80160e2:	4418      	add	r0, r3
 80160e4:	b200      	sxth	r0, r0
 80160e6:	1a80      	subs	r0, r0, r2
 80160e8:	3801      	subs	r0, #1
 80160ea:	4770      	bx	lr
 80160ec:	8843      	ldrh	r3, [r0, #2]
 80160ee:	88c0      	ldrh	r0, [r0, #6]
 80160f0:	4418      	add	r0, r3
 80160f2:	b200      	sxth	r0, r0
 80160f4:	1a40      	subs	r0, r0, r1
 80160f6:	e7f7      	b.n	80160e8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80160f8:	2000      	movs	r0, #0
 80160fa:	4770      	bx	lr

080160fc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80160fc:	4b01      	ldr	r3, [pc, #4]	; (8016104 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80160fe:	2200      	movs	r2, #0
 8016100:	601a      	str	r2, [r3, #0]
 8016102:	4770      	bx	lr
 8016104:	200138c4 	.word	0x200138c4

08016108 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8016108:	4603      	mov	r3, r0
 801610a:	b1c8      	cbz	r0, 8016140 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801610c:	0c02      	lsrs	r2, r0, #16
 801610e:	0412      	lsls	r2, r2, #16
 8016110:	b9a2      	cbnz	r2, 801613c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8016112:	0403      	lsls	r3, r0, #16
 8016114:	2010      	movs	r0, #16
 8016116:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801611a:	bf04      	itt	eq
 801611c:	021b      	lsleq	r3, r3, #8
 801611e:	3008      	addeq	r0, #8
 8016120:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016124:	bf04      	itt	eq
 8016126:	011b      	lsleq	r3, r3, #4
 8016128:	3004      	addeq	r0, #4
 801612a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801612e:	bf04      	itt	eq
 8016130:	009b      	lsleq	r3, r3, #2
 8016132:	3002      	addeq	r0, #2
 8016134:	2b00      	cmp	r3, #0
 8016136:	db04      	blt.n	8016142 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016138:	3001      	adds	r0, #1
 801613a:	4770      	bx	lr
 801613c:	2000      	movs	r0, #0
 801613e:	e7ea      	b.n	8016116 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016140:	2020      	movs	r0, #32
 8016142:	4770      	bx	lr

08016144 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8016144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016148:	b087      	sub	sp, #28
 801614a:	460d      	mov	r5, r1
 801614c:	4616      	mov	r6, r2
 801614e:	4698      	mov	r8, r3
 8016150:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8016154:	4601      	mov	r1, r0
 8016156:	b120      	cbz	r0, 8016162 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016158:	b11a      	cbz	r2, 8016162 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801615a:	2d1f      	cmp	r5, #31
 801615c:	d801      	bhi.n	8016162 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801615e:	2b1f      	cmp	r3, #31
 8016160:	d904      	bls.n	801616c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8016162:	2000      	movs	r0, #0
 8016164:	6038      	str	r0, [r7, #0]
 8016166:	b007      	add	sp, #28
 8016168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801616c:	b97d      	cbnz	r5, 801618e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801616e:	b143      	cbz	r3, 8016182 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016170:	4602      	mov	r2, r0
 8016172:	e9cd 4700 	strd	r4, r7, [sp]
 8016176:	462b      	mov	r3, r5
 8016178:	4641      	mov	r1, r8
 801617a:	4630      	mov	r0, r6
 801617c:	f7ff ffe2 	bl	8016144 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016180:	e7f1      	b.n	8016166 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016182:	f04f 33ff 	mov.w	r3, #4294967295
 8016186:	603b      	str	r3, [r7, #0]
 8016188:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801618c:	e7eb      	b.n	8016166 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801618e:	fa32 fa05 	lsrs.w	sl, r2, r5
 8016192:	d106      	bne.n	80161a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8016194:	4346      	muls	r6, r0
 8016196:	fbb6 f0f4 	udiv	r0, r6, r4
 801619a:	fb04 6610 	mls	r6, r4, r0, r6
 801619e:	603e      	str	r6, [r7, #0]
 80161a0:	e7e1      	b.n	8016166 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80161a2:	2201      	movs	r2, #1
 80161a4:	40aa      	lsls	r2, r5
 80161a6:	3a01      	subs	r2, #1
 80161a8:	4016      	ands	r6, r2
 80161aa:	fa00 fb05 	lsl.w	fp, r0, r5
 80161ae:	4630      	mov	r0, r6
 80161b0:	fbbb f9f4 	udiv	r9, fp, r4
 80161b4:	fb0a f309 	mul.w	r3, sl, r9
 80161b8:	9303      	str	r3, [sp, #12]
 80161ba:	f7ff ffa5 	bl	8016108 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80161be:	462b      	mov	r3, r5
 80161c0:	460a      	mov	r2, r1
 80161c2:	e9cd 4700 	strd	r4, r7, [sp]
 80161c6:	4601      	mov	r1, r0
 80161c8:	4630      	mov	r0, r6
 80161ca:	f7ff ffbb 	bl	8016144 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80161ce:	fb04 b919 	mls	r9, r4, r9, fp
 80161d2:	4606      	mov	r6, r0
 80161d4:	4648      	mov	r0, r9
 80161d6:	eb05 0108 	add.w	r1, r5, r8
 80161da:	f7ff ff95 	bl	8016108 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80161de:	ab05      	add	r3, sp, #20
 80161e0:	e9cd 4300 	strd	r4, r3, [sp]
 80161e4:	464a      	mov	r2, r9
 80161e6:	4603      	mov	r3, r0
 80161e8:	4650      	mov	r0, sl
 80161ea:	f7ff ffab 	bl	8016144 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80161ee:	6839      	ldr	r1, [r7, #0]
 80161f0:	9a05      	ldr	r2, [sp, #20]
 80161f2:	9b03      	ldr	r3, [sp, #12]
 80161f4:	4411      	add	r1, r2
 80161f6:	fbb1 f2f4 	udiv	r2, r1, r4
 80161fa:	18d3      	adds	r3, r2, r3
 80161fc:	441e      	add	r6, r3
 80161fe:	fb04 1412 	mls	r4, r4, r2, r1
 8016202:	4430      	add	r0, r6
 8016204:	603c      	str	r4, [r7, #0]
 8016206:	e7ae      	b.n	8016166 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08016208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8016208:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801620c:	b085      	sub	sp, #20
 801620e:	f1b0 0900 	subs.w	r9, r0, #0
 8016212:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016214:	461d      	mov	r5, r3
 8016216:	bfbf      	itttt	lt
 8016218:	6823      	ldrlt	r3, [r4, #0]
 801621a:	425b      	neglt	r3, r3
 801621c:	f1c9 0900 	rsblt	r9, r9, #0
 8016220:	6023      	strlt	r3, [r4, #0]
 8016222:	bfb4      	ite	lt
 8016224:	f04f 36ff 	movlt.w	r6, #4294967295
 8016228:	2601      	movge	r6, #1
 801622a:	2a00      	cmp	r2, #0
 801622c:	4617      	mov	r7, r2
 801622e:	da04      	bge.n	801623a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8016230:	6823      	ldr	r3, [r4, #0]
 8016232:	425b      	negs	r3, r3
 8016234:	4257      	negs	r7, r2
 8016236:	4276      	negs	r6, r6
 8016238:	6023      	str	r3, [r4, #0]
 801623a:	2d00      	cmp	r5, #0
 801623c:	4638      	mov	r0, r7
 801623e:	bfba      	itte	lt
 8016240:	426d      	neglt	r5, r5
 8016242:	f04f 38ff 	movlt.w	r8, #4294967295
 8016246:	f04f 0801 	movge.w	r8, #1
 801624a:	f7ff ff5d 	bl	8016108 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801624e:	ab03      	add	r3, sp, #12
 8016250:	e9cd 5300 	strd	r5, r3, [sp]
 8016254:	463a      	mov	r2, r7
 8016256:	4603      	mov	r3, r0
 8016258:	4648      	mov	r0, r9
 801625a:	f7ff ff73 	bl	8016144 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801625e:	6823      	ldr	r3, [r4, #0]
 8016260:	9a03      	ldr	r2, [sp, #12]
 8016262:	4546      	cmp	r6, r8
 8016264:	441a      	add	r2, r3
 8016266:	fb92 f3f5 	sdiv	r3, r2, r5
 801626a:	4418      	add	r0, r3
 801626c:	bf18      	it	ne
 801626e:	4240      	negne	r0, r0
 8016270:	fb05 2313 	mls	r3, r5, r3, r2
 8016274:	1c72      	adds	r2, r6, #1
 8016276:	6023      	str	r3, [r4, #0]
 8016278:	d105      	bne.n	8016286 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801627a:	2b00      	cmp	r3, #0
 801627c:	f1c3 0200 	rsb	r2, r3, #0
 8016280:	db0b      	blt.n	801629a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8016282:	6022      	str	r2, [r4, #0]
 8016284:	e006      	b.n	8016294 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016286:	2e01      	cmp	r6, #1
 8016288:	d104      	bne.n	8016294 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801628a:	2b00      	cmp	r3, #0
 801628c:	da02      	bge.n	8016294 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801628e:	442b      	add	r3, r5
 8016290:	3801      	subs	r0, #1
 8016292:	6023      	str	r3, [r4, #0]
 8016294:	b005      	add	sp, #20
 8016296:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801629a:	3801      	subs	r0, #1
 801629c:	1b52      	subs	r2, r2, r5
 801629e:	e7f0      	b.n	8016282 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080162a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80162a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80162a4:	4c1c      	ldr	r4, [pc, #112]	; (8016318 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80162a6:	6807      	ldr	r7, [r0, #0]
 80162a8:	69a3      	ldr	r3, [r4, #24]
 80162aa:	4605      	mov	r5, r0
 80162ac:	b92b      	cbnz	r3, 80162ba <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80162ae:	6840      	ldr	r0, [r0, #4]
 80162b0:	e9c5 7000 	strd	r7, r0, [r5]
 80162b4:	b004      	add	sp, #16
 80162b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80162ba:	68a2      	ldr	r2, [r4, #8]
 80162bc:	6820      	ldr	r0, [r4, #0]
 80162be:	ae04      	add	r6, sp, #16
 80162c0:	f04f 0802 	mov.w	r8, #2
 80162c4:	fb93 f1f8 	sdiv	r1, r3, r8
 80162c8:	440a      	add	r2, r1
 80162ca:	f846 2d04 	str.w	r2, [r6, #-4]!
 80162ce:	69e1      	ldr	r1, [r4, #28]
 80162d0:	9600      	str	r6, [sp, #0]
 80162d2:	463a      	mov	r2, r7
 80162d4:	f7ff ff98 	bl	8016208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80162d8:	69a3      	ldr	r3, [r4, #24]
 80162da:	686a      	ldr	r2, [r5, #4]
 80162dc:	6a21      	ldr	r1, [r4, #32]
 80162de:	9600      	str	r6, [sp, #0]
 80162e0:	4607      	mov	r7, r0
 80162e2:	6860      	ldr	r0, [r4, #4]
 80162e4:	f7ff ff90 	bl	8016208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80162e8:	6962      	ldr	r2, [r4, #20]
 80162ea:	69a3      	ldr	r3, [r4, #24]
 80162ec:	fb93 f8f8 	sdiv	r8, r3, r8
 80162f0:	4442      	add	r2, r8
 80162f2:	9203      	str	r2, [sp, #12]
 80162f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80162f6:	682a      	ldr	r2, [r5, #0]
 80162f8:	9600      	str	r6, [sp, #0]
 80162fa:	4407      	add	r7, r0
 80162fc:	68e0      	ldr	r0, [r4, #12]
 80162fe:	f7ff ff83 	bl	8016208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016302:	9600      	str	r6, [sp, #0]
 8016304:	4680      	mov	r8, r0
 8016306:	69a3      	ldr	r3, [r4, #24]
 8016308:	686a      	ldr	r2, [r5, #4]
 801630a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801630c:	6920      	ldr	r0, [r4, #16]
 801630e:	f7ff ff7b 	bl	8016208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016312:	4440      	add	r0, r8
 8016314:	e7cc      	b.n	80162b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8016316:	bf00      	nop
 8016318:	200138c8 	.word	0x200138c8

0801631c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801631c:	4b07      	ldr	r3, [pc, #28]	; (801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801631e:	781b      	ldrb	r3, [r3, #0]
 8016320:	2b01      	cmp	r3, #1
 8016322:	d109      	bne.n	8016338 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8016324:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016328:	f9b0 2000 	ldrsh.w	r2, [r0]
 801632c:	8003      	strh	r3, [r0, #0]
 801632e:	4b04      	ldr	r3, [pc, #16]	; (8016340 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8016330:	881b      	ldrh	r3, [r3, #0]
 8016332:	3b01      	subs	r3, #1
 8016334:	1a9b      	subs	r3, r3, r2
 8016336:	800b      	strh	r3, [r1, #0]
 8016338:	4770      	bx	lr
 801633a:	bf00      	nop
 801633c:	200138ac 	.word	0x200138ac
 8016340:	200138a8 	.word	0x200138a8

08016344 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8016344:	b510      	push	{r4, lr}
 8016346:	4b07      	ldr	r3, [pc, #28]	; (8016364 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016348:	781b      	ldrb	r3, [r3, #0]
 801634a:	2b01      	cmp	r3, #1
 801634c:	d108      	bne.n	8016360 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801634e:	4b06      	ldr	r3, [pc, #24]	; (8016368 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016350:	880c      	ldrh	r4, [r1, #0]
 8016352:	881b      	ldrh	r3, [r3, #0]
 8016354:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016358:	3b01      	subs	r3, #1
 801635a:	1b1b      	subs	r3, r3, r4
 801635c:	8003      	strh	r3, [r0, #0]
 801635e:	800a      	strh	r2, [r1, #0]
 8016360:	bd10      	pop	{r4, pc}
 8016362:	bf00      	nop
 8016364:	200138ac 	.word	0x200138ac
 8016368:	200138a8 	.word	0x200138a8

0801636c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801636c:	b510      	push	{r4, lr}
 801636e:	4b0a      	ldr	r3, [pc, #40]	; (8016398 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016370:	781b      	ldrb	r3, [r3, #0]
 8016372:	2b01      	cmp	r3, #1
 8016374:	d10e      	bne.n	8016394 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8016376:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801637a:	8843      	ldrh	r3, [r0, #2]
 801637c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016380:	8044      	strh	r4, [r0, #2]
 8016382:	18ca      	adds	r2, r1, r3
 8016384:	4b05      	ldr	r3, [pc, #20]	; (801639c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8016386:	881b      	ldrh	r3, [r3, #0]
 8016388:	1a9b      	subs	r3, r3, r2
 801638a:	8003      	strh	r3, [r0, #0]
 801638c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016390:	80c3      	strh	r3, [r0, #6]
 8016392:	8081      	strh	r1, [r0, #4]
 8016394:	bd10      	pop	{r4, pc}
 8016396:	bf00      	nop
 8016398:	200138ac 	.word	0x200138ac
 801639c:	200138a8 	.word	0x200138a8

080163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80163a0:	4b08      	ldr	r3, [pc, #32]	; (80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80163a2:	781b      	ldrb	r3, [r3, #0]
 80163a4:	2b01      	cmp	r3, #1
 80163a6:	d10c      	bne.n	80163c2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80163a8:	8803      	ldrh	r3, [r0, #0]
 80163aa:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80163ae:	8842      	ldrh	r2, [r0, #2]
 80163b0:	8002      	strh	r2, [r0, #0]
 80163b2:	185a      	adds	r2, r3, r1
 80163b4:	4b04      	ldr	r3, [pc, #16]	; (80163c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80163b6:	881b      	ldrh	r3, [r3, #0]
 80163b8:	1a9b      	subs	r3, r3, r2
 80163ba:	8043      	strh	r3, [r0, #2]
 80163bc:	88c3      	ldrh	r3, [r0, #6]
 80163be:	8083      	strh	r3, [r0, #4]
 80163c0:	80c1      	strh	r1, [r0, #6]
 80163c2:	4770      	bx	lr
 80163c4:	200138ac 	.word	0x200138ac
 80163c8:	200138a8 	.word	0x200138a8

080163cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80163cc:	b510      	push	{r4, lr}
 80163ce:	4b07      	ldr	r3, [pc, #28]	; (80163ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80163d0:	781b      	ldrb	r3, [r3, #0]
 80163d2:	2b01      	cmp	r3, #1
 80163d4:	d108      	bne.n	80163e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80163d6:	f9b1 3000 	ldrsh.w	r3, [r1]
 80163da:	f9b0 4000 	ldrsh.w	r4, [r0]
 80163de:	8003      	strh	r3, [r0, #0]
 80163e0:	8893      	ldrh	r3, [r2, #4]
 80163e2:	3b01      	subs	r3, #1
 80163e4:	1b1b      	subs	r3, r3, r4
 80163e6:	800b      	strh	r3, [r1, #0]
 80163e8:	bd10      	pop	{r4, pc}
 80163ea:	bf00      	nop
 80163ec:	200138ac 	.word	0x200138ac

080163f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80163f0:	4b0b      	ldr	r3, [pc, #44]	; (8016420 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80163f2:	781b      	ldrb	r3, [r3, #0]
 80163f4:	2b01      	cmp	r3, #1
 80163f6:	d111      	bne.n	801641c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80163f8:	680b      	ldr	r3, [r1, #0]
 80163fa:	ed90 7a00 	vldr	s14, [r0]
 80163fe:	6003      	str	r3, [r0, #0]
 8016400:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8016404:	eddf 6a07 	vldr	s13, [pc, #28]	; 8016424 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8016408:	ee07 3a90 	vmov	s15, r3
 801640c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016410:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8016414:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016418:	edc1 7a00 	vstr	s15, [r1]
 801641c:	4770      	bx	lr
 801641e:	bf00      	nop
 8016420:	200138ac 	.word	0x200138ac
 8016424:	38d1b717 	.word	0x38d1b717

08016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8016428:	b510      	push	{r4, lr}
 801642a:	4b0a      	ldr	r3, [pc, #40]	; (8016454 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801642c:	781b      	ldrb	r3, [r3, #0]
 801642e:	2b01      	cmp	r3, #1
 8016430:	460a      	mov	r2, r1
 8016432:	d10d      	bne.n	8016450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8016434:	8881      	ldrh	r1, [r0, #4]
 8016436:	8803      	ldrh	r3, [r0, #0]
 8016438:	440b      	add	r3, r1
 801643a:	4601      	mov	r1, r0
 801643c:	3b01      	subs	r3, #1
 801643e:	f821 3b02 	strh.w	r3, [r1], #2
 8016442:	f7ff ffc3 	bl	80163cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8016446:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801644a:	88c2      	ldrh	r2, [r0, #6]
 801644c:	8082      	strh	r2, [r0, #4]
 801644e:	80c3      	strh	r3, [r0, #6]
 8016450:	bd10      	pop	{r4, pc}
 8016452:	bf00      	nop
 8016454:	200138ac 	.word	0x200138ac

08016458 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016458:	4b06      	ldr	r3, [pc, #24]	; (8016474 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801645a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801645e:	4b06      	ldr	r3, [pc, #24]	; (8016478 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016460:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8016464:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016468:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801646c:	2100      	movs	r1, #0
 801646e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8016472:	4770      	bx	lr
 8016474:	200138a8 	.word	0x200138a8
 8016478:	200138aa 	.word	0x200138aa

0801647c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801647c:	4b03      	ldr	r3, [pc, #12]	; (801648c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801647e:	6818      	ldr	r0, [r3, #0]
 8016480:	b110      	cbz	r0, 8016488 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016482:	6803      	ldr	r3, [r0, #0]
 8016484:	699b      	ldr	r3, [r3, #24]
 8016486:	4718      	bx	r3
 8016488:	4770      	bx	lr
 801648a:	bf00      	nop
 801648c:	200138f8 	.word	0x200138f8

08016490 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016490:	4770      	bx	lr
	...

08016494 <_ZN8touchgfx11Application4drawEv>:
 8016494:	b507      	push	{r0, r1, r2, lr}
 8016496:	4b09      	ldr	r3, [pc, #36]	; (80164bc <_ZN8touchgfx11Application4drawEv+0x28>)
 8016498:	f9b3 2000 	ldrsh.w	r2, [r3]
 801649c:	4b08      	ldr	r3, [pc, #32]	; (80164c0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801649e:	f8ad 2004 	strh.w	r2, [sp, #4]
 80164a2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80164a6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80164aa:	6803      	ldr	r3, [r0, #0]
 80164ac:	2100      	movs	r1, #0
 80164ae:	9100      	str	r1, [sp, #0]
 80164b0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80164b2:	4669      	mov	r1, sp
 80164b4:	4798      	blx	r3
 80164b6:	b003      	add	sp, #12
 80164b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80164bc:	200138a8 	.word	0x200138a8
 80164c0:	200138aa 	.word	0x200138aa

080164c4 <_ZN8touchgfx11Application10invalidateEv>:
 80164c4:	4b09      	ldr	r3, [pc, #36]	; (80164ec <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80164c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80164ca:	4b09      	ldr	r3, [pc, #36]	; (80164f0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80164cc:	b082      	sub	sp, #8
 80164ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80164d2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80164d6:	2100      	movs	r1, #0
 80164d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80164dc:	9100      	str	r1, [sp, #0]
 80164de:	6803      	ldr	r3, [r0, #0]
 80164e0:	aa02      	add	r2, sp, #8
 80164e2:	e912 0006 	ldmdb	r2, {r1, r2}
 80164e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80164e8:	b002      	add	sp, #8
 80164ea:	4718      	bx	r3
 80164ec:	200138a8 	.word	0x200138a8
 80164f0:	200138aa 	.word	0x200138aa

080164f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80164f4:	4b03      	ldr	r3, [pc, #12]	; (8016504 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80164f6:	6818      	ldr	r0, [r3, #0]
 80164f8:	b110      	cbz	r0, 8016500 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80164fa:	6803      	ldr	r3, [r0, #0]
 80164fc:	69db      	ldr	r3, [r3, #28]
 80164fe:	4718      	bx	r3
 8016500:	4770      	bx	lr
 8016502:	bf00      	nop
 8016504:	200138f8 	.word	0x200138f8

08016508 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016508:	4b03      	ldr	r3, [pc, #12]	; (8016518 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801650a:	6818      	ldr	r0, [r3, #0]
 801650c:	b110      	cbz	r0, 8016514 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801650e:	6803      	ldr	r3, [r0, #0]
 8016510:	6a1b      	ldr	r3, [r3, #32]
 8016512:	4718      	bx	r3
 8016514:	4770      	bx	lr
 8016516:	bf00      	nop
 8016518:	200138f8 	.word	0x200138f8

0801651c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801651c:	2300      	movs	r3, #0
 801651e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8016522:	4770      	bx	lr

08016524 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016524:	4b03      	ldr	r3, [pc, #12]	; (8016534 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016526:	6818      	ldr	r0, [r3, #0]
 8016528:	b110      	cbz	r0, 8016530 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801652a:	6803      	ldr	r3, [r0, #0]
 801652c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801652e:	4718      	bx	r3
 8016530:	4770      	bx	lr
 8016532:	bf00      	nop
 8016534:	200138f8 	.word	0x200138f8

08016538 <_ZN8touchgfx11ApplicationD1Ev>:
 8016538:	4770      	bx	lr

0801653a <_ZN8touchgfx11ApplicationD0Ev>:
 801653a:	b510      	push	{r4, lr}
 801653c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016540:	4604      	mov	r4, r0
 8016542:	f014 f996 	bl	802a872 <_ZdlPvj>
 8016546:	4620      	mov	r0, r4
 8016548:	bd10      	pop	{r4, pc}

0801654a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801654a:	b510      	push	{r4, lr}
 801654c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016550:	888a      	ldrh	r2, [r1, #4]
 8016552:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016556:	4422      	add	r2, r4
 8016558:	b212      	sxth	r2, r2
 801655a:	4293      	cmp	r3, r2
 801655c:	da15      	bge.n	801658a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801655e:	8882      	ldrh	r2, [r0, #4]
 8016560:	4413      	add	r3, r2
 8016562:	b21b      	sxth	r3, r3
 8016564:	429c      	cmp	r4, r3
 8016566:	da10      	bge.n	801658a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016568:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801656c:	88c9      	ldrh	r1, [r1, #6]
 801656e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016572:	4419      	add	r1, r3
 8016574:	b209      	sxth	r1, r1
 8016576:	428a      	cmp	r2, r1
 8016578:	da07      	bge.n	801658a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801657a:	88c0      	ldrh	r0, [r0, #6]
 801657c:	4410      	add	r0, r2
 801657e:	b200      	sxth	r0, r0
 8016580:	4283      	cmp	r3, r0
 8016582:	bfac      	ite	ge
 8016584:	2000      	movge	r0, #0
 8016586:	2001      	movlt	r0, #1
 8016588:	bd10      	pop	{r4, pc}
 801658a:	2000      	movs	r0, #0
 801658c:	e7fc      	b.n	8016588 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801658e <_ZN8touchgfx4Rect10restrictToEss>:
 801658e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016592:	2b00      	cmp	r3, #0
 8016594:	b510      	push	{r4, lr}
 8016596:	da04      	bge.n	80165a2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016598:	8884      	ldrh	r4, [r0, #4]
 801659a:	4423      	add	r3, r4
 801659c:	8083      	strh	r3, [r0, #4]
 801659e:	2300      	movs	r3, #0
 80165a0:	8003      	strh	r3, [r0, #0]
 80165a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80165a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80165aa:	1b09      	subs	r1, r1, r4
 80165ac:	428b      	cmp	r3, r1
 80165ae:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80165b2:	bfc8      	it	gt
 80165b4:	8081      	strhgt	r1, [r0, #4]
 80165b6:	2b00      	cmp	r3, #0
 80165b8:	da04      	bge.n	80165c4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80165ba:	88c1      	ldrh	r1, [r0, #6]
 80165bc:	440b      	add	r3, r1
 80165be:	80c3      	strh	r3, [r0, #6]
 80165c0:	2300      	movs	r3, #0
 80165c2:	8043      	strh	r3, [r0, #2]
 80165c4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80165c8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80165cc:	1a52      	subs	r2, r2, r1
 80165ce:	4293      	cmp	r3, r2
 80165d0:	bfc8      	it	gt
 80165d2:	80c2      	strhgt	r2, [r0, #6]
 80165d4:	bd10      	pop	{r4, pc}
	...

080165d8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80165d8:	b510      	push	{r4, lr}
 80165da:	4b10      	ldr	r3, [pc, #64]	; (801661c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80165dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80165e0:	4b0f      	ldr	r3, [pc, #60]	; (8016620 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80165e2:	460c      	mov	r4, r1
 80165e4:	4620      	mov	r0, r4
 80165e6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80165ea:	f7ff ffd0 	bl	801658e <_ZN8touchgfx4Rect10restrictToEss>
 80165ee:	4b0d      	ldr	r3, [pc, #52]	; (8016624 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80165f0:	6818      	ldr	r0, [r3, #0]
 80165f2:	b190      	cbz	r0, 801661a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80165f4:	6803      	ldr	r3, [r0, #0]
 80165f6:	4621      	mov	r1, r4
 80165f8:	689b      	ldr	r3, [r3, #8]
 80165fa:	4798      	blx	r3
 80165fc:	4b0a      	ldr	r3, [pc, #40]	; (8016628 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80165fe:	6818      	ldr	r0, [r3, #0]
 8016600:	b118      	cbz	r0, 801660a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016602:	6803      	ldr	r3, [r0, #0]
 8016604:	4621      	mov	r1, r4
 8016606:	689b      	ldr	r3, [r3, #8]
 8016608:	4798      	blx	r3
 801660a:	4b08      	ldr	r3, [pc, #32]	; (801662c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801660c:	6818      	ldr	r0, [r3, #0]
 801660e:	6803      	ldr	r3, [r0, #0]
 8016610:	4621      	mov	r1, r4
 8016612:	69db      	ldr	r3, [r3, #28]
 8016614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016618:	4718      	bx	r3
 801661a:	bd10      	pop	{r4, pc}
 801661c:	200138aa 	.word	0x200138aa
 8016620:	200138a8 	.word	0x200138a8
 8016624:	200138f8 	.word	0x200138f8
 8016628:	200138f4 	.word	0x200138f4
 801662c:	200138b4 	.word	0x200138b4

08016630 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016632:	4606      	mov	r6, r0
 8016634:	4608      	mov	r0, r1
 8016636:	460f      	mov	r7, r1
 8016638:	f7fa ff97 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801663c:	b9e8      	cbnz	r0, 801667a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801663e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8016642:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016646:	42a5      	cmp	r5, r4
 8016648:	db17      	blt.n	801667a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801664a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801664e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8016652:	429a      	cmp	r2, r3
 8016654:	db11      	blt.n	801667a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016656:	88b9      	ldrh	r1, [r7, #4]
 8016658:	440d      	add	r5, r1
 801665a:	88b1      	ldrh	r1, [r6, #4]
 801665c:	440c      	add	r4, r1
 801665e:	b22d      	sxth	r5, r5
 8016660:	b224      	sxth	r4, r4
 8016662:	42a5      	cmp	r5, r4
 8016664:	dc09      	bgt.n	801667a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016666:	88f8      	ldrh	r0, [r7, #6]
 8016668:	4410      	add	r0, r2
 801666a:	88f2      	ldrh	r2, [r6, #6]
 801666c:	4413      	add	r3, r2
 801666e:	b200      	sxth	r0, r0
 8016670:	b21b      	sxth	r3, r3
 8016672:	4298      	cmp	r0, r3
 8016674:	bfcc      	ite	gt
 8016676:	2000      	movgt	r0, #0
 8016678:	2001      	movle	r0, #1
 801667a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801667c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801667c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801667e:	4604      	mov	r4, r0
 8016680:	4608      	mov	r0, r1
 8016682:	460d      	mov	r5, r1
 8016684:	f7fa ff71 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016688:	b978      	cbnz	r0, 80166aa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801668a:	4620      	mov	r0, r4
 801668c:	f7fa ff6d 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016690:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016694:	b150      	cbz	r0, 80166ac <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016696:	8026      	strh	r6, [r4, #0]
 8016698:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801669c:	8063      	strh	r3, [r4, #2]
 801669e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80166a2:	80a3      	strh	r3, [r4, #4]
 80166a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80166a8:	80e3      	strh	r3, [r4, #6]
 80166aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80166ac:	f9b4 1000 	ldrsh.w	r1, [r4]
 80166b0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80166b4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80166b8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80166bc:	88ed      	ldrh	r5, [r5, #6]
 80166be:	42b1      	cmp	r1, r6
 80166c0:	460f      	mov	r7, r1
 80166c2:	bfa8      	it	ge
 80166c4:	4637      	movge	r7, r6
 80166c6:	4293      	cmp	r3, r2
 80166c8:	4618      	mov	r0, r3
 80166ca:	4466      	add	r6, ip
 80166cc:	bfa8      	it	ge
 80166ce:	4610      	movge	r0, r2
 80166d0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80166d4:	8027      	strh	r7, [r4, #0]
 80166d6:	442a      	add	r2, r5
 80166d8:	88e5      	ldrh	r5, [r4, #6]
 80166da:	8060      	strh	r0, [r4, #2]
 80166dc:	4461      	add	r1, ip
 80166de:	442b      	add	r3, r5
 80166e0:	b236      	sxth	r6, r6
 80166e2:	b209      	sxth	r1, r1
 80166e4:	b212      	sxth	r2, r2
 80166e6:	b21b      	sxth	r3, r3
 80166e8:	428e      	cmp	r6, r1
 80166ea:	bfac      	ite	ge
 80166ec:	ebc7 0106 	rsbge	r1, r7, r6
 80166f0:	ebc7 0101 	rsblt	r1, r7, r1
 80166f4:	429a      	cmp	r2, r3
 80166f6:	bfac      	ite	ge
 80166f8:	ebc0 0202 	rsbge	r2, r0, r2
 80166fc:	ebc0 0203 	rsblt	r2, r0, r3
 8016700:	80a1      	strh	r1, [r4, #4]
 8016702:	80e2      	strh	r2, [r4, #6]
 8016704:	e7d1      	b.n	80166aa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016708 <_ZN8touchgfx11Application11getInstanceEv>:
 8016708:	4b01      	ldr	r3, [pc, #4]	; (8016710 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801670a:	6818      	ldr	r0, [r3, #0]
 801670c:	4770      	bx	lr
 801670e:	bf00      	nop
 8016710:	20013908 	.word	0x20013908

08016714 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016716:	4b10      	ldr	r3, [pc, #64]	; (8016758 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016718:	781b      	ldrb	r3, [r3, #0]
 801671a:	4605      	mov	r5, r0
 801671c:	b1d3      	cbz	r3, 8016754 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801671e:	4b0f      	ldr	r3, [pc, #60]	; (801675c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016720:	4f0f      	ldr	r7, [pc, #60]	; (8016760 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8016722:	881c      	ldrh	r4, [r3, #0]
 8016724:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8016728:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 801672c:	42a3      	cmp	r3, r4
 801672e:	d90e      	bls.n	801674e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016730:	683b      	ldr	r3, [r7, #0]
 8016732:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016736:	b10a      	cbz	r2, 801673c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016738:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801673a:	b900      	cbnz	r0, 801673e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 801673c:	6898      	ldr	r0, [r3, #8]
 801673e:	6803      	ldr	r3, [r0, #0]
 8016740:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016744:	69db      	ldr	r3, [r3, #28]
 8016746:	3401      	adds	r4, #1
 8016748:	4798      	blx	r3
 801674a:	b2a4      	uxth	r4, r4
 801674c:	e7ec      	b.n	8016728 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801674e:	2300      	movs	r3, #0
 8016750:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8016754:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016756:	bf00      	nop
 8016758:	200138b2 	.word	0x200138b2
 801675c:	200000a0 	.word	0x200000a0
 8016760:	200138b4 	.word	0x200138b4

08016764 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016764:	b510      	push	{r4, lr}
 8016766:	2300      	movs	r3, #0
 8016768:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 801676c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016770:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016774:	4604      	mov	r4, r0
 8016776:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801677a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 801677e:	429a      	cmp	r2, r3
 8016780:	d90e      	bls.n	80167a0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016782:	18e2      	adds	r2, r4, r3
 8016784:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016788:	b122      	cbz	r2, 8016794 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801678a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801678e:	6803      	ldr	r3, [r0, #0]
 8016790:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016792:	4798      	blx	r3
 8016794:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016798:	3301      	adds	r3, #1
 801679a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801679e:	e7ea      	b.n	8016776 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80167a0:	bd10      	pop	{r4, pc}

080167a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80167a2:	b530      	push	{r4, r5, lr}
 80167a4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80167a8:	2200      	movs	r2, #0
 80167aa:	b293      	uxth	r3, r2
 80167ac:	429d      	cmp	r5, r3
 80167ae:	d90e      	bls.n	80167ce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80167b0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80167b4:	428b      	cmp	r3, r1
 80167b6:	d10b      	bne.n	80167d0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80167b8:	1884      	adds	r4, r0, r2
 80167ba:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 80167be:	b13b      	cbz	r3, 80167d0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80167c0:	3b01      	subs	r3, #1
 80167c2:	b2db      	uxtb	r3, r3
 80167c4:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 80167c8:	b90b      	cbnz	r3, 80167ce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80167ca:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80167ce:	bd30      	pop	{r4, r5, pc}
 80167d0:	3201      	adds	r2, #1
 80167d2:	e7ea      	b.n	80167aa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80167d4:	2300      	movs	r3, #0
 80167d6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80167da:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80167de:	30a4      	adds	r0, #164	; 0xa4
 80167e0:	f802 3b01 	strb.w	r3, [r2], #1
 80167e4:	4282      	cmp	r2, r0
 80167e6:	d1fb      	bne.n	80167e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80167e8:	4770      	bx	lr
	...

080167ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80167ec:	b570      	push	{r4, r5, r6, lr}
 80167ee:	4c0b      	ldr	r4, [pc, #44]	; (801681c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80167f0:	4605      	mov	r5, r0
 80167f2:	6820      	ldr	r0, [r4, #0]
 80167f4:	460e      	mov	r6, r1
 80167f6:	b110      	cbz	r0, 80167fe <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80167f8:	6803      	ldr	r3, [r0, #0]
 80167fa:	695b      	ldr	r3, [r3, #20]
 80167fc:	4798      	blx	r3
 80167fe:	1d28      	adds	r0, r5, #4
 8016800:	f7ff ffe8 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016804:	6026      	str	r6, [r4, #0]
 8016806:	6833      	ldr	r3, [r6, #0]
 8016808:	4630      	mov	r0, r6
 801680a:	68db      	ldr	r3, [r3, #12]
 801680c:	4798      	blx	r3
 801680e:	682b      	ldr	r3, [r5, #0]
 8016810:	4628      	mov	r0, r5
 8016812:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016814:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016818:	4718      	bx	r3
 801681a:	bf00      	nop
 801681c:	200138f8 	.word	0x200138f8

08016820 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016820:	2300      	movs	r3, #0
 8016822:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016826:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801682a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801682c:	461a      	mov	r2, r3
 801682e:	461c      	mov	r4, r3
 8016830:	461d      	mov	r5, r3
 8016832:	459c      	cmp	ip, r3
 8016834:	dd1a      	ble.n	801686c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8016836:	18c6      	adds	r6, r0, r3
 8016838:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 801683c:	b16e      	cbz	r6, 801685a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801683e:	429a      	cmp	r2, r3
 8016840:	d008      	beq.n	8016854 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016842:	fa1f fe82 	uxth.w	lr, r2
 8016846:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801684a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801684e:	1887      	adds	r7, r0, r2
 8016850:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8016854:	3201      	adds	r2, #1
 8016856:	3301      	adds	r3, #1
 8016858:	e7eb      	b.n	8016832 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801685a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 801685e:	4299      	cmp	r1, r3
 8016860:	bfa8      	it	ge
 8016862:	3501      	addge	r5, #1
 8016864:	429e      	cmp	r6, r3
 8016866:	bfc8      	it	gt
 8016868:	3401      	addgt	r4, #1
 801686a:	e7f4      	b.n	8016856 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 801686c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016870:	1b49      	subs	r1, r1, r5
 8016872:	1b1b      	subs	r3, r3, r4
 8016874:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016878:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801687c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016880:	4293      	cmp	r3, r2
 8016882:	dd03      	ble.n	801688c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016884:	3b01      	subs	r3, #1
 8016886:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801688a:	e7f7      	b.n	801687c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801688c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016890 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016890:	b570      	push	{r4, r5, r6, lr}
 8016892:	4d16      	ldr	r5, [pc, #88]	; (80168ec <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016894:	4604      	mov	r4, r0
 8016896:	6828      	ldr	r0, [r5, #0]
 8016898:	b140      	cbz	r0, 80168ac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801689a:	7a03      	ldrb	r3, [r0, #8]
 801689c:	b933      	cbnz	r3, 80168ac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801689e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80168a2:	6803      	ldr	r3, [r0, #0]
 80168a4:	689b      	ldr	r3, [r3, #8]
 80168a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80168aa:	4718      	bx	r3
 80168ac:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80168b0:	4e0f      	ldr	r6, [pc, #60]	; (80168f0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80168b2:	b973      	cbnz	r3, 80168d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80168b4:	b168      	cbz	r0, 80168d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80168b6:	7a03      	ldrb	r3, [r0, #8]
 80168b8:	b15b      	cbz	r3, 80168d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80168ba:	6830      	ldr	r0, [r6, #0]
 80168bc:	b110      	cbz	r0, 80168c4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80168be:	6803      	ldr	r3, [r0, #0]
 80168c0:	691b      	ldr	r3, [r3, #16]
 80168c2:	4798      	blx	r3
 80168c4:	6828      	ldr	r0, [r5, #0]
 80168c6:	6803      	ldr	r3, [r0, #0]
 80168c8:	68db      	ldr	r3, [r3, #12]
 80168ca:	4798      	blx	r3
 80168cc:	2301      	movs	r3, #1
 80168ce:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80168d2:	3404      	adds	r4, #4
 80168d4:	4620      	mov	r0, r4
 80168d6:	f7ff ff45 	bl	8016764 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80168da:	4620      	mov	r0, r4
 80168dc:	f7ff ffa0 	bl	8016820 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80168e0:	6830      	ldr	r0, [r6, #0]
 80168e2:	b110      	cbz	r0, 80168ea <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80168e4:	6803      	ldr	r3, [r0, #0]
 80168e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80168e8:	e7dd      	b.n	80168a6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80168ea:	bd70      	pop	{r4, r5, r6, pc}
 80168ec:	200138fc 	.word	0x200138fc
 80168f0:	200138f8 	.word	0x200138f8

080168f4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80168f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80168f6:	2300      	movs	r3, #0
 80168f8:	4604      	mov	r4, r0
 80168fa:	460d      	mov	r5, r1
 80168fc:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016900:	4618      	mov	r0, r3
 8016902:	b29a      	uxth	r2, r3
 8016904:	4291      	cmp	r1, r2
 8016906:	d911      	bls.n	801692c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016908:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 801690c:	18e6      	adds	r6, r4, r3
 801690e:	42af      	cmp	r7, r5
 8016910:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016914:	d105      	bne.n	8016922 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016916:	2aff      	cmp	r2, #255	; 0xff
 8016918:	d002      	beq.n	8016920 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801691a:	3201      	adds	r2, #1
 801691c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016922:	2a00      	cmp	r2, #0
 8016924:	bf08      	it	eq
 8016926:	2001      	moveq	r0, #1
 8016928:	3301      	adds	r3, #1
 801692a:	e7ea      	b.n	8016902 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 801692c:	b120      	cbz	r0, 8016938 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801692e:	2920      	cmp	r1, #32
 8016930:	d102      	bne.n	8016938 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016932:	4620      	mov	r0, r4
 8016934:	f7ff ff74 	bl	8016820 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016938:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 801693c:	2b1f      	cmp	r3, #31
 801693e:	d8ef      	bhi.n	8016920 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016940:	18e2      	adds	r2, r4, r3
 8016942:	2101      	movs	r1, #1
 8016944:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016948:	185a      	adds	r2, r3, r1
 801694a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 801694e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016952:	e7e5      	b.n	8016920 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016954 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016954:	4603      	mov	r3, r0
 8016956:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801695a:	2200      	movs	r2, #0
 801695c:	801a      	strh	r2, [r3, #0]
 801695e:	805a      	strh	r2, [r3, #2]
 8016960:	809a      	strh	r2, [r3, #4]
 8016962:	80da      	strh	r2, [r3, #6]
 8016964:	3308      	adds	r3, #8
 8016966:	428b      	cmp	r3, r1
 8016968:	d1f8      	bne.n	801695c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801696a:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801696e:	4770      	bx	lr

08016970 <_ZN8touchgfx11ApplicationC1Ev>:
 8016970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016972:	4606      	mov	r6, r0
 8016974:	4b1c      	ldr	r3, [pc, #112]	; (80169e8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016976:	f846 3b04 	str.w	r3, [r6], #4
 801697a:	4604      	mov	r4, r0
 801697c:	2500      	movs	r5, #0
 801697e:	22a8      	movs	r2, #168	; 0xa8
 8016980:	2100      	movs	r1, #0
 8016982:	4630      	mov	r0, r6
 8016984:	f014 ff8d 	bl	802b8a2 <memset>
 8016988:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 801698c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016990:	f7ff ffe0 	bl	8016954 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016994:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016998:	f7ff ffdc 	bl	8016954 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801699c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80169a0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80169a4:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80169a8:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80169ac:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80169b0:	490e      	ldr	r1, [pc, #56]	; (80169ec <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80169b2:	480f      	ldr	r0, [pc, #60]	; (80169f0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80169b4:	4f0f      	ldr	r7, [pc, #60]	; (80169f4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80169b6:	f010 fe27 	bl	8027608 <CRC_Lock>
 80169ba:	4b0f      	ldr	r3, [pc, #60]	; (80169f8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80169bc:	b158      	cbz	r0, 80169d6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80169be:	801d      	strh	r5, [r3, #0]
 80169c0:	4a0e      	ldr	r2, [pc, #56]	; (80169fc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80169c2:	2300      	movs	r3, #0
 80169c4:	6013      	str	r3, [r2, #0]
 80169c6:	4a0e      	ldr	r2, [pc, #56]	; (8016a00 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80169c8:	603b      	str	r3, [r7, #0]
 80169ca:	4630      	mov	r0, r6
 80169cc:	6013      	str	r3, [r2, #0]
 80169ce:	f7ff ff01 	bl	80167d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80169d2:	4620      	mov	r0, r4
 80169d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80169d6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80169da:	2002      	movs	r0, #2
 80169dc:	801a      	strh	r2, [r3, #0]
 80169de:	6038      	str	r0, [r7, #0]
 80169e0:	f001 fb4a 	bl	8018078 <_ZN8touchgfx6Screen4drawEv>
 80169e4:	e7ec      	b.n	80169c0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80169e6:	bf00      	nop
 80169e8:	0803003c 	.word	0x0803003c
 80169ec:	b5e8b5cd 	.word	0xb5e8b5cd
 80169f0:	f407a5c2 	.word	0xf407a5c2
 80169f4:	200138f8 	.word	0x200138f8
 80169f8:	200000a0 	.word	0x200000a0
 80169fc:	20013908 	.word	0x20013908
 8016a00:	200138fc 	.word	0x200138fc

08016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016a04:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016a08:	3b01      	subs	r3, #1
 8016a0a:	b29b      	uxth	r3, r3
 8016a0c:	428b      	cmp	r3, r1
 8016a0e:	b510      	push	{r4, lr}
 8016a10:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016a14:	d908      	bls.n	8016a28 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016a16:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016a1a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016a1e:	681a      	ldr	r2, [r3, #0]
 8016a20:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016a24:	685a      	ldr	r2, [r3, #4]
 8016a26:	6062      	str	r2, [r4, #4]
 8016a28:	bd10      	pop	{r4, pc}
	...

08016a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a30:	4b8f      	ldr	r3, [pc, #572]	; (8016c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016a32:	b08f      	sub	sp, #60	; 0x3c
 8016a34:	ac0a      	add	r4, sp, #40	; 0x28
 8016a36:	e884 0006 	stmia.w	r4, {r1, r2}
 8016a3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a3e:	4b8d      	ldr	r3, [pc, #564]	; (8016c74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016a40:	4683      	mov	fp, r0
 8016a42:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016a46:	4620      	mov	r0, r4
 8016a48:	f7ff fda1 	bl	801658e <_ZN8touchgfx4Rect10restrictToEss>
 8016a4c:	4620      	mov	r0, r4
 8016a4e:	f7fa fd8c 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a52:	2800      	cmp	r0, #0
 8016a54:	d16a      	bne.n	8016b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016a56:	9403      	str	r4, [sp, #12]
 8016a58:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016a5c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016a60:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016a64:	35a4      	adds	r5, #164	; 0xa4
 8016a66:	9301      	str	r3, [sp, #4]
 8016a68:	b15c      	cbz	r4, 8016a82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016a6a:	4629      	mov	r1, r5
 8016a6c:	9803      	ldr	r0, [sp, #12]
 8016a6e:	f7ff fddf 	bl	8016630 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016a72:	3c01      	subs	r4, #1
 8016a74:	b118      	cbz	r0, 8016a7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8016a76:	b2a1      	uxth	r1, r4
 8016a78:	9801      	ldr	r0, [sp, #4]
 8016a7a:	f7ff ffc3 	bl	8016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016a7e:	3d08      	subs	r5, #8
 8016a80:	e7f2      	b.n	8016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8016a82:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8016a86:	f8cd a010 	str.w	sl, [sp, #16]
 8016a8a:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016a8e:	9302      	str	r3, [sp, #8]
 8016a90:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8016a94:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016a98:	9306      	str	r3, [sp, #24]
 8016a9a:	445c      	add	r4, fp
 8016a9c:	2500      	movs	r5, #0
 8016a9e:	4626      	mov	r6, r4
 8016aa0:	f8cd a014 	str.w	sl, [sp, #20]
 8016aa4:	462f      	mov	r7, r5
 8016aa6:	9b05      	ldr	r3, [sp, #20]
 8016aa8:	2b00      	cmp	r3, #0
 8016aaa:	d073      	beq.n	8016b94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016aac:	9903      	ldr	r1, [sp, #12]
 8016aae:	4630      	mov	r0, r6
 8016ab0:	f7ff fd4b 	bl	801654a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016ab4:	b350      	cbz	r0, 8016b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016ab6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016aba:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016abe:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8016ac2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016ac6:	45e6      	cmp	lr, ip
 8016ac8:	db33      	blt.n	8016b32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016aca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016ace:	88b3      	ldrh	r3, [r6, #4]
 8016ad0:	4472      	add	r2, lr
 8016ad2:	4463      	add	r3, ip
 8016ad4:	b212      	sxth	r2, r2
 8016ad6:	b21b      	sxth	r3, r3
 8016ad8:	429a      	cmp	r2, r3
 8016ada:	dc2a      	bgt.n	8016b32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016adc:	88f3      	ldrh	r3, [r6, #6]
 8016ade:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016ae2:	fa1f f289 	uxth.w	r2, r9
 8016ae6:	4413      	add	r3, r2
 8016ae8:	b29b      	uxth	r3, r3
 8016aea:	45c8      	cmp	r8, r9
 8016aec:	fa1f fc88 	uxth.w	ip, r8
 8016af0:	fa0f fe83 	sxth.w	lr, r3
 8016af4:	db0f      	blt.n	8016b16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016af6:	eba3 030c 	sub.w	r3, r3, ip
 8016afa:	1ac9      	subs	r1, r1, r3
 8016afc:	b209      	sxth	r1, r1
 8016afe:	2900      	cmp	r1, #0
 8016b00:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016b04:	dd12      	ble.n	8016b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016b06:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016b0a:	4605      	mov	r5, r0
 8016b0c:	9b05      	ldr	r3, [sp, #20]
 8016b0e:	3b01      	subs	r3, #1
 8016b10:	9305      	str	r3, [sp, #20]
 8016b12:	3e08      	subs	r6, #8
 8016b14:	e7c7      	b.n	8016aa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016b16:	4461      	add	r1, ip
 8016b18:	b209      	sxth	r1, r1
 8016b1a:	4571      	cmp	r1, lr
 8016b1c:	dc38      	bgt.n	8016b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016b1e:	eba2 020c 	sub.w	r2, r2, ip
 8016b22:	b212      	sxth	r2, r2
 8016b24:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016b28:	2a00      	cmp	r2, #0
 8016b2a:	dcee      	bgt.n	8016b0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016b2c:	b00f      	add	sp, #60	; 0x3c
 8016b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b32:	45c8      	cmp	r8, r9
 8016b34:	db2c      	blt.n	8016b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016b36:	88f3      	ldrh	r3, [r6, #6]
 8016b38:	4499      	add	r9, r3
 8016b3a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016b3e:	4498      	add	r8, r3
 8016b40:	fa0f f989 	sxth.w	r9, r9
 8016b44:	fa0f f888 	sxth.w	r8, r8
 8016b48:	45c1      	cmp	r9, r8
 8016b4a:	db21      	blt.n	8016b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016b4c:	88b3      	ldrh	r3, [r6, #4]
 8016b4e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016b52:	fa1f f28c 	uxth.w	r2, ip
 8016b56:	4413      	add	r3, r2
 8016b58:	b29b      	uxth	r3, r3
 8016b5a:	45e6      	cmp	lr, ip
 8016b5c:	fa1f f88e 	uxth.w	r8, lr
 8016b60:	fa0f f983 	sxth.w	r9, r3
 8016b64:	db0a      	blt.n	8016b7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8016b66:	eba3 0308 	sub.w	r3, r3, r8
 8016b6a:	1ac9      	subs	r1, r1, r3
 8016b6c:	b209      	sxth	r1, r1
 8016b6e:	2900      	cmp	r1, #0
 8016b70:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8016b74:	ddda      	ble.n	8016b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016b76:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016b7a:	e7c6      	b.n	8016b0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016b7c:	4441      	add	r1, r8
 8016b7e:	b209      	sxth	r1, r1
 8016b80:	4549      	cmp	r1, r9
 8016b82:	dc05      	bgt.n	8016b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016b84:	eba2 0208 	sub.w	r2, r2, r8
 8016b88:	b212      	sxth	r2, r2
 8016b8a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016b8e:	e7cb      	b.n	8016b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016b90:	4607      	mov	r7, r0
 8016b92:	e7bb      	b.n	8016b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016b94:	2d00      	cmp	r5, #0
 8016b96:	d181      	bne.n	8016a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016b98:	2f00      	cmp	r7, #0
 8016b9a:	f000 81dd 	beq.w	8016f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016b9e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8016ba2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8016ba6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016baa:	b2b3      	uxth	r3, r6
 8016bac:	9305      	str	r3, [sp, #20]
 8016bae:	9a05      	ldr	r2, [sp, #20]
 8016bb0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016bb4:	4413      	add	r3, r2
 8016bb6:	b2ba      	uxth	r2, r7
 8016bb8:	4492      	add	sl, r2
 8016bba:	b29b      	uxth	r3, r3
 8016bbc:	fa1f fa8a 	uxth.w	sl, sl
 8016bc0:	fa0f f883 	sxth.w	r8, r3
 8016bc4:	fa0f f98a 	sxth.w	r9, sl
 8016bc8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016bcc:	9b04      	ldr	r3, [sp, #16]
 8016bce:	2b00      	cmp	r3, #0
 8016bd0:	d052      	beq.n	8016c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016bd2:	9903      	ldr	r1, [sp, #12]
 8016bd4:	4620      	mov	r0, r4
 8016bd6:	f7ff fcb8 	bl	801654a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016bda:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016bde:	b1c0      	cbz	r0, 8016c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016be0:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016be4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016be8:	4576      	cmp	r6, lr
 8016bea:	dc22      	bgt.n	8016c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016bec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016bf0:	44f4      	add	ip, lr
 8016bf2:	fa0f fc8c 	sxth.w	ip, ip
 8016bf6:	45e0      	cmp	r8, ip
 8016bf8:	db1b      	blt.n	8016c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016bfa:	428f      	cmp	r7, r1
 8016bfc:	fa1f fc81 	uxth.w	ip, r1
 8016c00:	88e1      	ldrh	r1, [r4, #6]
 8016c02:	dc0d      	bgt.n	8016c20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016c04:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016c08:	eba1 010c 	sub.w	r1, r1, ip
 8016c0c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016c10:	80e1      	strh	r1, [r4, #6]
 8016c12:	4628      	mov	r0, r5
 8016c14:	9904      	ldr	r1, [sp, #16]
 8016c16:	3901      	subs	r1, #1
 8016c18:	9104      	str	r1, [sp, #16]
 8016c1a:	3c08      	subs	r4, #8
 8016c1c:	4605      	mov	r5, r0
 8016c1e:	e7d3      	b.n	8016bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016c20:	4461      	add	r1, ip
 8016c22:	b209      	sxth	r1, r1
 8016c24:	4549      	cmp	r1, r9
 8016c26:	dcf5      	bgt.n	8016c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016c28:	eba2 0c0c 	sub.w	ip, r2, ip
 8016c2c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016c30:	e7ef      	b.n	8016c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016c32:	428f      	cmp	r7, r1
 8016c34:	dcee      	bgt.n	8016c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016c36:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016c3a:	4461      	add	r1, ip
 8016c3c:	b209      	sxth	r1, r1
 8016c3e:	4589      	cmp	r9, r1
 8016c40:	dbe8      	blt.n	8016c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016c42:	4576      	cmp	r6, lr
 8016c44:	fa1f fc8e 	uxth.w	ip, lr
 8016c48:	88a1      	ldrh	r1, [r4, #4]
 8016c4a:	dc07      	bgt.n	8016c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016c4c:	eba3 0c0c 	sub.w	ip, r3, ip
 8016c50:	eba1 010c 	sub.w	r1, r1, ip
 8016c54:	f8a4 8000 	strh.w	r8, [r4]
 8016c58:	80a1      	strh	r1, [r4, #4]
 8016c5a:	e7da      	b.n	8016c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016c5c:	4461      	add	r1, ip
 8016c5e:	b209      	sxth	r1, r1
 8016c60:	4588      	cmp	r8, r1
 8016c62:	dbd7      	blt.n	8016c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016c64:	9905      	ldr	r1, [sp, #20]
 8016c66:	eba1 0c0c 	sub.w	ip, r1, ip
 8016c6a:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016c6e:	e7d0      	b.n	8016c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016c70:	200138aa 	.word	0x200138aa
 8016c74:	200138a8 	.word	0x200138a8
 8016c78:	2d00      	cmp	r5, #0
 8016c7a:	f000 816d 	beq.w	8016f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016c7e:	9b06      	ldr	r3, [sp, #24]
 8016c80:	445b      	add	r3, fp
 8016c82:	461c      	mov	r4, r3
 8016c84:	9b02      	ldr	r3, [sp, #8]
 8016c86:	3301      	adds	r3, #1
 8016c88:	f000 8166 	beq.w	8016f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016c8c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016c90:	4629      	mov	r1, r5
 8016c92:	9803      	ldr	r0, [sp, #12]
 8016c94:	f7ff fccc 	bl	8016630 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016c98:	b120      	cbz	r0, 8016ca4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016c9a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016c9e:	9801      	ldr	r0, [sp, #4]
 8016ca0:	f7ff feb0 	bl	8016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016ca4:	9903      	ldr	r1, [sp, #12]
 8016ca6:	4628      	mov	r0, r5
 8016ca8:	f7ff fc4f 	bl	801654a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016cac:	2800      	cmp	r0, #0
 8016cae:	f000 809c 	beq.w	8016dea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016cb2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016cb6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016cba:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016cbe:	9309      	str	r3, [sp, #36]	; 0x24
 8016cc0:	fa1f f189 	uxth.w	r1, r9
 8016cc4:	eb01 0c03 	add.w	ip, r1, r3
 8016cc8:	fa1f fa8c 	uxth.w	sl, ip
 8016ccc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016cd0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016cd4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016cd8:	b283      	uxth	r3, r0
 8016cda:	eb03 050c 	add.w	r5, r3, ip
 8016cde:	b2ad      	uxth	r5, r5
 8016ce0:	9505      	str	r5, [sp, #20]
 8016ce2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016ce6:	9504      	str	r5, [sp, #16]
 8016ce8:	4548      	cmp	r0, r9
 8016cea:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016cee:	f340 8099 	ble.w	8016e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016cf2:	1a5b      	subs	r3, r3, r1
 8016cf4:	b29b      	uxth	r3, r3
 8016cf6:	4596      	cmp	lr, r2
 8016cf8:	fa0f f08a 	sxth.w	r0, sl
 8016cfc:	b21e      	sxth	r6, r3
 8016cfe:	dd2e      	ble.n	8016d5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016d00:	9f02      	ldr	r7, [sp, #8]
 8016d02:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016d06:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016d0a:	9f04      	ldr	r7, [sp, #16]
 8016d0c:	1a3f      	subs	r7, r7, r0
 8016d0e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016d12:	fa1f fe8e 	uxth.w	lr, lr
 8016d16:	b292      	uxth	r2, r2
 8016d18:	ebae 0102 	sub.w	r1, lr, r2
 8016d1c:	44a6      	add	lr, r4
 8016d1e:	4402      	add	r2, r0
 8016d20:	b289      	uxth	r1, r1
 8016d22:	fa0f fe8e 	sxth.w	lr, lr
 8016d26:	b212      	sxth	r2, r2
 8016d28:	b20d      	sxth	r5, r1
 8016d2a:	ebae 0202 	sub.w	r2, lr, r2
 8016d2e:	436f      	muls	r7, r5
 8016d30:	4372      	muls	r2, r6
 8016d32:	4297      	cmp	r7, r2
 8016d34:	db09      	blt.n	8016d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016d36:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016d3a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016d3e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016d42:	449c      	add	ip, r3
 8016d44:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016d48:	e686      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d4a:	4421      	add	r1, r4
 8016d4c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016d50:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016d54:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016d58:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016d5c:	e67c      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d5e:	9f04      	ldr	r7, [sp, #16]
 8016d60:	42b8      	cmp	r0, r7
 8016d62:	da27      	bge.n	8016db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016d64:	9902      	ldr	r1, [sp, #8]
 8016d66:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016d6a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016d6e:	eb05 010e 	add.w	r1, r5, lr
 8016d72:	fa1f f881 	uxth.w	r8, r1
 8016d76:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016d7a:	4411      	add	r1, r2
 8016d7c:	eba1 0108 	sub.w	r1, r1, r8
 8016d80:	b289      	uxth	r1, r1
 8016d82:	fa0f f988 	sxth.w	r9, r8
 8016d86:	eba2 020e 	sub.w	r2, r2, lr
 8016d8a:	fa0f f881 	sxth.w	r8, r1
 8016d8e:	1a3f      	subs	r7, r7, r0
 8016d90:	4372      	muls	r2, r6
 8016d92:	fb08 f707 	mul.w	r7, r8, r7
 8016d96:	42ba      	cmp	r2, r7
 8016d98:	dc06      	bgt.n	8016da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016d9a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016d9e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016da2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016da6:	e7ca      	b.n	8016d3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016da8:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016dac:	4429      	add	r1, r5
 8016dae:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016db2:	e651      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016db4:	9805      	ldr	r0, [sp, #20]
 8016db6:	ebaa 0000 	sub.w	r0, sl, r0
 8016dba:	b280      	uxth	r0, r0
 8016dbc:	2d06      	cmp	r5, #6
 8016dbe:	fa0f fe80 	sxth.w	lr, r0
 8016dc2:	d817      	bhi.n	8016df4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016dc4:	9b04      	ldr	r3, [sp, #16]
 8016dc6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016dca:	1c6b      	adds	r3, r5, #1
 8016dcc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016dd0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016dd4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016dd8:	9b01      	ldr	r3, [sp, #4]
 8016dda:	9801      	ldr	r0, [sp, #4]
 8016ddc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016de0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016de4:	805a      	strh	r2, [r3, #2]
 8016de6:	809e      	strh	r6, [r3, #4]
 8016de8:	80d9      	strh	r1, [r3, #6]
 8016dea:	9b02      	ldr	r3, [sp, #8]
 8016dec:	3b01      	subs	r3, #1
 8016dee:	9302      	str	r3, [sp, #8]
 8016df0:	3c08      	subs	r4, #8
 8016df2:	e747      	b.n	8016c84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016df4:	9a02      	ldr	r2, [sp, #8]
 8016df6:	45b6      	cmp	lr, r6
 8016df8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016dfc:	db0d      	blt.n	8016e1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016dfe:	449c      	add	ip, r3
 8016e00:	fa1f fc8c 	uxth.w	ip, ip
 8016e04:	445a      	add	r2, fp
 8016e06:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016e0a:	448c      	add	ip, r1
 8016e0c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016e10:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016e14:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016e18:	e61e      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e1a:	445a      	add	r2, fp
 8016e1c:	4484      	add	ip, r0
 8016e1e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016e22:	e78f      	b.n	8016d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016e24:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016e28:	fa1f f18e 	uxth.w	r1, lr
 8016e2c:	eb01 0806 	add.w	r8, r1, r6
 8016e30:	b293      	uxth	r3, r2
 8016e32:	fa1f f888 	uxth.w	r8, r8
 8016e36:	9306      	str	r3, [sp, #24]
 8016e38:	fa0f f388 	sxth.w	r3, r8
 8016e3c:	9307      	str	r3, [sp, #28]
 8016e3e:	9f06      	ldr	r7, [sp, #24]
 8016e40:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016e44:	443b      	add	r3, r7
 8016e46:	b29b      	uxth	r3, r3
 8016e48:	4596      	cmp	lr, r2
 8016e4a:	9308      	str	r3, [sp, #32]
 8016e4c:	da24      	bge.n	8016e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016e4e:	9905      	ldr	r1, [sp, #20]
 8016e50:	eba3 0308 	sub.w	r3, r3, r8
 8016e54:	ebaa 0401 	sub.w	r4, sl, r1
 8016e58:	b2a4      	uxth	r4, r4
 8016e5a:	b29b      	uxth	r3, r3
 8016e5c:	b225      	sxth	r5, r4
 8016e5e:	b219      	sxth	r1, r3
 8016e60:	eba2 020e 	sub.w	r2, r2, lr
 8016e64:	eba9 0000 	sub.w	r0, r9, r0
 8016e68:	436a      	muls	r2, r5
 8016e6a:	4348      	muls	r0, r1
 8016e6c:	4282      	cmp	r2, r0
 8016e6e:	9a02      	ldr	r2, [sp, #8]
 8016e70:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016e74:	445a      	add	r2, fp
 8016e76:	dc06      	bgt.n	8016e86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016e78:	9b07      	ldr	r3, [sp, #28]
 8016e7a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016e7e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8016e82:	44a4      	add	ip, r4
 8016e84:	e75e      	b.n	8016d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016e86:	9904      	ldr	r1, [sp, #16]
 8016e88:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016e8c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016e90:	4433      	add	r3, r6
 8016e92:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016e96:	e5df      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e98:	9f06      	ldr	r7, [sp, #24]
 8016e9a:	9b04      	ldr	r3, [sp, #16]
 8016e9c:	1bc9      	subs	r1, r1, r7
 8016e9e:	fa0f f78a 	sxth.w	r7, sl
 8016ea2:	b289      	uxth	r1, r1
 8016ea4:	429f      	cmp	r7, r3
 8016ea6:	fa0f fe81 	sxth.w	lr, r1
 8016eaa:	dd23      	ble.n	8016ef4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016eac:	9a05      	ldr	r2, [sp, #20]
 8016eae:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016eb2:	9d07      	ldr	r5, [sp, #28]
 8016eb4:	ebaa 0202 	sub.w	r2, sl, r2
 8016eb8:	b292      	uxth	r2, r2
 8016eba:	eba5 0a03 	sub.w	sl, r5, r3
 8016ebe:	b214      	sxth	r4, r2
 8016ec0:	eba9 0000 	sub.w	r0, r9, r0
 8016ec4:	9b02      	ldr	r3, [sp, #8]
 8016ec6:	fb0e f000 	mul.w	r0, lr, r0
 8016eca:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ece:	00db      	lsls	r3, r3, #3
 8016ed0:	4550      	cmp	r0, sl
 8016ed2:	445b      	add	r3, fp
 8016ed4:	db03      	blt.n	8016ede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016ed6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016eda:	4494      	add	ip, r2
 8016edc:	e732      	b.n	8016d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016ede:	9a04      	ldr	r2, [sp, #16]
 8016ee0:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8016ee4:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016ee8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016eec:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016ef0:	4431      	add	r1, r6
 8016ef2:	e75c      	b.n	8016dae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016ef4:	9b08      	ldr	r3, [sp, #32]
 8016ef6:	eba3 0308 	sub.w	r3, r3, r8
 8016efa:	b29b      	uxth	r3, r3
 8016efc:	2d06      	cmp	r5, #6
 8016efe:	b218      	sxth	r0, r3
 8016f00:	d813      	bhi.n	8016f2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016f02:	9b07      	ldr	r3, [sp, #28]
 8016f04:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016f08:	1c6b      	adds	r3, r5, #1
 8016f0a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016f0e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016f12:	9b01      	ldr	r3, [sp, #4]
 8016f14:	9901      	ldr	r1, [sp, #4]
 8016f16:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016f1a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016f1e:	805a      	strh	r2, [r3, #2]
 8016f20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016f22:	809a      	strh	r2, [r3, #4]
 8016f24:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016f28:	e75f      	b.n	8016dea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016f2a:	9c02      	ldr	r4, [sp, #8]
 8016f2c:	4570      	cmp	r0, lr
 8016f2e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016f32:	db0d      	blt.n	8016f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016f34:	4431      	add	r1, r6
 8016f36:	9b06      	ldr	r3, [sp, #24]
 8016f38:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016f3c:	b289      	uxth	r1, r1
 8016f3e:	445c      	add	r4, fp
 8016f40:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016f44:	4419      	add	r1, r3
 8016f46:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016f4a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016f4e:	e583      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016f50:	445c      	add	r4, fp
 8016f52:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8016f56:	e79b      	b.n	8016e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016f58:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016f5c:	1e65      	subs	r5, r4, #1
 8016f5e:	b2ad      	uxth	r5, r5
 8016f60:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8016f64:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016f68:	42b5      	cmp	r5, r6
 8016f6a:	d044      	beq.n	8016ff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016f6c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016f70:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8016f74:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016f78:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016f7c:	4282      	cmp	r2, r0
 8016f7e:	d11f      	bne.n	8016fc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016f80:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8016f84:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016f88:	459c      	cmp	ip, r3
 8016f8a:	d119      	bne.n	8016fc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016f8c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016f90:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016f94:	19d8      	adds	r0, r3, r7
 8016f96:	b200      	sxth	r0, r0
 8016f98:	4288      	cmp	r0, r1
 8016f9a:	d109      	bne.n	8016fb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016f9c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016fa0:	4413      	add	r3, r2
 8016fa2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016fa6:	4629      	mov	r1, r5
 8016fa8:	9801      	ldr	r0, [sp, #4]
 8016faa:	f7ff fd2b 	bl	8016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016fae:	e003      	b.n	8016fb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016fb0:	4411      	add	r1, r2
 8016fb2:	b209      	sxth	r1, r1
 8016fb4:	42b9      	cmp	r1, r7
 8016fb6:	d0f3      	beq.n	8016fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016fb8:	3d01      	subs	r5, #1
 8016fba:	b2ad      	uxth	r5, r5
 8016fbc:	3c08      	subs	r4, #8
 8016fbe:	e7d3      	b.n	8016f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016fc0:	42b9      	cmp	r1, r7
 8016fc2:	d1f9      	bne.n	8016fb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016fc4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016fc8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016fcc:	4299      	cmp	r1, r3
 8016fce:	d1f3      	bne.n	8016fb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016fd0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016fd4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016fd8:	181f      	adds	r7, r3, r0
 8016fda:	b23f      	sxth	r7, r7
 8016fdc:	42ba      	cmp	r2, r7
 8016fde:	d105      	bne.n	8016fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016fe0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8016fe4:	440b      	add	r3, r1
 8016fe6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016fea:	e7dc      	b.n	8016fa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016fec:	440a      	add	r2, r1
 8016fee:	b212      	sxth	r2, r2
 8016ff0:	4290      	cmp	r0, r2
 8016ff2:	d1e1      	bne.n	8016fb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016ff4:	e7f6      	b.n	8016fe4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016ff6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016ffa:	2e07      	cmp	r6, #7
 8016ffc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8017000:	d812      	bhi.n	8017028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8017002:	1c75      	adds	r5, r6, #1
 8017004:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8017008:	9d01      	ldr	r5, [sp, #4]
 801700a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801700e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8017012:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017016:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801701a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801701e:	442c      	add	r4, r5
 8017020:	8061      	strh	r1, [r4, #2]
 8017022:	80a2      	strh	r2, [r4, #4]
 8017024:	80e3      	strh	r3, [r4, #6]
 8017026:	e581      	b.n	8016b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017028:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801702c:	3e01      	subs	r6, #1
 801702e:	445c      	add	r4, fp
 8017030:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8017034:	f04f 37ff 	mov.w	r7, #4294967295
 8017038:	2500      	movs	r5, #0
 801703a:	9305      	str	r3, [sp, #20]
 801703c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017040:	9302      	str	r3, [sp, #8]
 8017042:	1e72      	subs	r2, r6, #1
 8017044:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017048:	9304      	str	r3, [sp, #16]
 801704a:	4691      	mov	r9, r2
 801704c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8017050:	f1b9 3fff 	cmp.w	r9, #4294967295
 8017054:	bf14      	ite	ne
 8017056:	9905      	ldrne	r1, [sp, #20]
 8017058:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801705c:	6818      	ldr	r0, [r3, #0]
 801705e:	9207      	str	r2, [sp, #28]
 8017060:	bf18      	it	ne
 8017062:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8017066:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801706a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801706e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8017072:	9306      	str	r3, [sp, #24]
 8017074:	fb18 f801 	smulbb	r8, r8, r1
 8017078:	6859      	ldr	r1, [r3, #4]
 801707a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801707e:	4671      	mov	r1, lr
 8017080:	a80c      	add	r0, sp, #48	; 0x30
 8017082:	f7ff fafb 	bl	801667c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017086:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801708a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801708e:	9b04      	ldr	r3, [sp, #16]
 8017090:	9a02      	ldr	r2, [sp, #8]
 8017092:	fb10 f001 	smulbb	r0, r0, r1
 8017096:	fb02 8803 	mla	r8, r2, r3, r8
 801709a:	eba0 0108 	sub.w	r1, r0, r8
 801709e:	f04f 0c08 	mov.w	ip, #8
 80170a2:	fb90 f0fc 	sdiv	r0, r0, ip
 80170a6:	4288      	cmp	r0, r1
 80170a8:	dc20      	bgt.n	80170ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80170aa:	4551      	cmp	r1, sl
 80170ac:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80170b0:	da03      	bge.n	80170ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80170b2:	b1d9      	cbz	r1, 80170ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80170b4:	468a      	mov	sl, r1
 80170b6:	464f      	mov	r7, r9
 80170b8:	4635      	mov	r5, r6
 80170ba:	f109 39ff 	add.w	r9, r9, #4294967295
 80170be:	f119 0f02 	cmn.w	r9, #2
 80170c2:	d1c5      	bne.n	8017050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80170c4:	4616      	mov	r6, r2
 80170c6:	3201      	adds	r2, #1
 80170c8:	f1a4 0408 	sub.w	r4, r4, #8
 80170cc:	d1b6      	bne.n	801703c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80170ce:	9b01      	ldr	r3, [sp, #4]
 80170d0:	b2ac      	uxth	r4, r5
 80170d2:	00ed      	lsls	r5, r5, #3
 80170d4:	1958      	adds	r0, r3, r5
 80170d6:	1c7b      	adds	r3, r7, #1
 80170d8:	d10b      	bne.n	80170f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80170da:	4601      	mov	r1, r0
 80170dc:	9803      	ldr	r0, [sp, #12]
 80170de:	f7ff facd 	bl	801667c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80170e2:	4621      	mov	r1, r4
 80170e4:	9801      	ldr	r0, [sp, #4]
 80170e6:	f7ff fc8d 	bl	8016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80170ea:	e4b5      	b.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80170ec:	464f      	mov	r7, r9
 80170ee:	4635      	mov	r5, r6
 80170f0:	e7ed      	b.n	80170ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80170f2:	9b01      	ldr	r3, [sp, #4]
 80170f4:	00ff      	lsls	r7, r7, #3
 80170f6:	19d9      	adds	r1, r3, r7
 80170f8:	f7ff fac0 	bl	801667c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80170fc:	9b03      	ldr	r3, [sp, #12]
 80170fe:	cb03      	ldmia	r3!, {r0, r1}
 8017100:	445f      	add	r7, fp
 8017102:	445d      	add	r5, fp
 8017104:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8017108:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801710c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8017110:	9b03      	ldr	r3, [sp, #12]
 8017112:	6869      	ldr	r1, [r5, #4]
 8017114:	c303      	stmia	r3!, {r0, r1}
 8017116:	e7e4      	b.n	80170e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08017118 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8017118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801711c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8017120:	b09b      	sub	sp, #108	; 0x6c
 8017122:	4604      	mov	r4, r0
 8017124:	4630      	mov	r0, r6
 8017126:	f7fa fa20 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801712a:	4605      	mov	r5, r0
 801712c:	b948      	cbnz	r0, 8017142 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801712e:	6823      	ldr	r3, [r4, #0]
 8017130:	e896 0006 	ldmia.w	r6, {r1, r2}
 8017134:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017136:	4620      	mov	r0, r4
 8017138:	4798      	blx	r3
 801713a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801713e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8017142:	4bc6      	ldr	r3, [pc, #792]	; (801745c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8017144:	681b      	ldr	r3, [r3, #0]
 8017146:	2b00      	cmp	r3, #0
 8017148:	d03f      	beq.n	80171ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801714a:	4dc5      	ldr	r5, [pc, #788]	; (8017460 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801714c:	4628      	mov	r0, r5
 801714e:	f7fa fa0c 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 8017152:	4606      	mov	r6, r0
 8017154:	2800      	cmp	r0, #0
 8017156:	d138      	bne.n	80171ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017158:	4628      	mov	r0, r5
 801715a:	f7ff f907 	bl	801636c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801715e:	6823      	ldr	r3, [r4, #0]
 8017160:	6829      	ldr	r1, [r5, #0]
 8017162:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017164:	686a      	ldr	r2, [r5, #4]
 8017166:	4620      	mov	r0, r4
 8017168:	4798      	blx	r3
 801716a:	802e      	strh	r6, [r5, #0]
 801716c:	806e      	strh	r6, [r5, #2]
 801716e:	80ae      	strh	r6, [r5, #4]
 8017170:	80ee      	strh	r6, [r5, #6]
 8017172:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8017176:	4dbb      	ldr	r5, [pc, #748]	; (8017464 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017178:	4640      	mov	r0, r8
 801717a:	f7ff fbeb 	bl	8016954 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801717e:	882e      	ldrh	r6, [r5, #0]
 8017180:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8017184:	4633      	mov	r3, r6
 8017186:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801718a:	42bb      	cmp	r3, r7
 801718c:	d224      	bcs.n	80171d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801718e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8017192:	2907      	cmp	r1, #7
 8017194:	d816      	bhi.n	80171c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8017196:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801719a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801719e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80171a2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80171a6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80171aa:	1c4a      	adds	r2, r1, #1
 80171ac:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80171b0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80171b4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80171b8:	f8a2 a002 	strh.w	sl, [r2, #2]
 80171bc:	f8a2 e004 	strh.w	lr, [r2, #4]
 80171c0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80171c4:	3301      	adds	r3, #1
 80171c6:	b29b      	uxth	r3, r3
 80171c8:	e7df      	b.n	801718a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80171ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80171ce:	2b00      	cmp	r3, #0
 80171d0:	d1cf      	bne.n	8017172 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80171d2:	b01b      	add	sp, #108	; 0x6c
 80171d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171d8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80171dc:	42b3      	cmp	r3, r6
 80171de:	d90c      	bls.n	80171fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80171e0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80171e4:	6822      	ldr	r2, [r4, #0]
 80171e6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80171ea:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80171ec:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80171f0:	4620      	mov	r0, r4
 80171f2:	3601      	adds	r6, #1
 80171f4:	47b8      	blx	r7
 80171f6:	b2b6      	uxth	r6, r6
 80171f8:	e7ee      	b.n	80171d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80171fa:	4a9b      	ldr	r2, [pc, #620]	; (8017468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80171fc:	6813      	ldr	r3, [r2, #0]
 80171fe:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8017202:	2b01      	cmp	r3, #1
 8017204:	4691      	mov	r9, r2
 8017206:	f040 80e2 	bne.w	80173ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801720a:	8829      	ldrh	r1, [r5, #0]
 801720c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8017210:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8017214:	33ae      	adds	r3, #174	; 0xae
 8017216:	2600      	movs	r6, #0
 8017218:	428f      	cmp	r7, r1
 801721a:	f103 0308 	add.w	r3, r3, #8
 801721e:	dd0a      	ble.n	8017236 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8017220:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8017224:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8017228:	4402      	add	r2, r0
 801722a:	b212      	sxth	r2, r2
 801722c:	4296      	cmp	r6, r2
 801722e:	bfb8      	it	lt
 8017230:	4616      	movlt	r6, r2
 8017232:	3101      	adds	r1, #1
 8017234:	e7f0      	b.n	8017218 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8017236:	4b8d      	ldr	r3, [pc, #564]	; (801746c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017238:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 801723c:	881b      	ldrh	r3, [r3, #0]
 801723e:	2b0f      	cmp	r3, #15
 8017240:	bf88      	it	hi
 8017242:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8017246:	f04f 0300 	mov.w	r3, #0
 801724a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801724e:	bf98      	it	ls
 8017250:	f04f 0b01 	movls.w	fp, #1
 8017254:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017258:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801725c:	4b82      	ldr	r3, [pc, #520]	; (8017468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801725e:	4438      	add	r0, r7
 8017260:	b207      	sxth	r7, r0
 8017262:	6818      	ldr	r0, [r3, #0]
 8017264:	42b7      	cmp	r7, r6
 8017266:	6803      	ldr	r3, [r0, #0]
 8017268:	f280 8083 	bge.w	8017372 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801726c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017270:	4798      	blx	r3
 8017272:	eb07 030b 	add.w	r3, r7, fp
 8017276:	4298      	cmp	r0, r3
 8017278:	da07      	bge.n	801728a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801727a:	42b0      	cmp	r0, r6
 801727c:	da05      	bge.n	801728a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801727e:	4287      	cmp	r7, r0
 8017280:	dd6c      	ble.n	801735c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8017282:	2f00      	cmp	r7, #0
 8017284:	dd6a      	ble.n	801735c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8017286:	4630      	mov	r0, r6
 8017288:	e004      	b.n	8017294 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 801728a:	4287      	cmp	r7, r0
 801728c:	dcfb      	bgt.n	8017286 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801728e:	42b0      	cmp	r0, r6
 8017290:	bfa8      	it	ge
 8017292:	4630      	movge	r0, r6
 8017294:	4b76      	ldr	r3, [pc, #472]	; (8017470 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8017296:	f8ad 7016 	strh.w	r7, [sp, #22]
 801729a:	1bc0      	subs	r0, r0, r7
 801729c:	f9b3 3000 	ldrsh.w	r3, [r3]
 80172a0:	882f      	ldrh	r7, [r5, #0]
 80172a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80172a6:	2200      	movs	r2, #0
 80172a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80172ac:	f8ad 001a 	strh.w	r0, [sp, #26]
 80172b0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80172b4:	42bb      	cmp	r3, r7
 80172b6:	d9cd      	bls.n	8017254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80172b8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80172bc:	ab07      	add	r3, sp, #28
 80172be:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80172c2:	6851      	ldr	r1, [r2, #4]
 80172c4:	c303      	stmia	r3!, {r0, r1}
 80172c6:	a905      	add	r1, sp, #20
 80172c8:	a807      	add	r0, sp, #28
 80172ca:	f7ff f93e 	bl	801654a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80172ce:	2800      	cmp	r0, #0
 80172d0:	d04c      	beq.n	801736c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80172d2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80172d6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80172da:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80172de:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80172e2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80172e6:	9302      	str	r3, [sp, #8]
 80172e8:	4686      	mov	lr, r0
 80172ea:	4290      	cmp	r0, r2
 80172ec:	4450      	add	r0, sl
 80172ee:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80172f2:	bfb8      	it	lt
 80172f4:	4696      	movlt	lr, r2
 80172f6:	4452      	add	r2, sl
 80172f8:	4299      	cmp	r1, r3
 80172fa:	b280      	uxth	r0, r0
 80172fc:	b292      	uxth	r2, r2
 80172fe:	468c      	mov	ip, r1
 8017300:	fa0f fa82 	sxth.w	sl, r2
 8017304:	bfb8      	it	lt
 8017306:	469c      	movlt	ip, r3
 8017308:	b203      	sxth	r3, r0
 801730a:	4553      	cmp	r3, sl
 801730c:	bfb8      	it	lt
 801730e:	4602      	movlt	r2, r0
 8017310:	eba2 020e 	sub.w	r2, r2, lr
 8017314:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017318:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801731c:	9b02      	ldr	r3, [sp, #8]
 801731e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8017322:	4411      	add	r1, r2
 8017324:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017328:	f8ad c01e 	strh.w	ip, [sp, #30]
 801732c:	4413      	add	r3, r2
 801732e:	b289      	uxth	r1, r1
 8017330:	b29b      	uxth	r3, r3
 8017332:	b208      	sxth	r0, r1
 8017334:	b21a      	sxth	r2, r3
 8017336:	4290      	cmp	r0, r2
 8017338:	bfb8      	it	lt
 801733a:	460b      	movlt	r3, r1
 801733c:	eba3 030c 	sub.w	r3, r3, ip
 8017340:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017344:	a807      	add	r0, sp, #28
 8017346:	f7fa f910 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801734a:	b920      	cbnz	r0, 8017356 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 801734c:	6823      	ldr	r3, [r4, #0]
 801734e:	a907      	add	r1, sp, #28
 8017350:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017352:	4620      	mov	r0, r4
 8017354:	4798      	blx	r3
 8017356:	3701      	adds	r7, #1
 8017358:	b2bf      	uxth	r7, r7
 801735a:	e7a9      	b.n	80172b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 801735c:	f8d9 0000 	ldr.w	r0, [r9]
 8017360:	6803      	ldr	r3, [r0, #0]
 8017362:	2101      	movs	r1, #1
 8017364:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017368:	4798      	blx	r3
 801736a:	e773      	b.n	8017254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801736c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017370:	e7e8      	b.n	8017344 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8017372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017374:	4798      	blx	r3
 8017376:	4b3f      	ldr	r3, [pc, #252]	; (8017474 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017378:	781b      	ldrb	r3, [r3, #0]
 801737a:	2b00      	cmp	r3, #0
 801737c:	f43f af29 	beq.w	80171d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017380:	2300      	movs	r3, #0
 8017382:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8017386:	882b      	ldrh	r3, [r5, #0]
 8017388:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801738c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017390:	42ab      	cmp	r3, r5
 8017392:	f4bf af1e 	bcs.w	80171d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017396:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 801739a:	2907      	cmp	r1, #7
 801739c:	d814      	bhi.n	80173c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 801739e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80173a2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80173a6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80173aa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80173ae:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80173b2:	1c4a      	adds	r2, r1, #1
 80173b4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80173b8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80173bc:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80173c0:	f8a2 c002 	strh.w	ip, [r2, #2]
 80173c4:	8097      	strh	r7, [r2, #4]
 80173c6:	80d6      	strh	r6, [r2, #6]
 80173c8:	3301      	adds	r3, #1
 80173ca:	b29b      	uxth	r3, r3
 80173cc:	e7e0      	b.n	8017390 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80173ce:	2b02      	cmp	r3, #2
 80173d0:	f040 8133 	bne.w	801763a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80173d4:	4b28      	ldr	r3, [pc, #160]	; (8017478 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80173d6:	781b      	ldrb	r3, [r3, #0]
 80173d8:	2b01      	cmp	r3, #1
 80173da:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80173de:	f000 8098 	beq.w	8017512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80173e2:	882a      	ldrh	r2, [r5, #0]
 80173e4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80173e8:	3201      	adds	r2, #1
 80173ea:	b292      	uxth	r2, r2
 80173ec:	2900      	cmp	r1, #0
 80173ee:	d0c2      	beq.n	8017376 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80173f0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80173f4:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80173f8:	441e      	add	r6, r3
 80173fa:	b236      	sxth	r6, r6
 80173fc:	4694      	mov	ip, r2
 80173fe:	f04f 0900 	mov.w	r9, #0
 8017402:	fa1f f38c 	uxth.w	r3, ip
 8017406:	4299      	cmp	r1, r3
 8017408:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801740c:	f240 80bf 	bls.w	801758e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8017410:	4427      	add	r7, r4
 8017412:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8017416:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801741a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801741e:	4283      	cmp	r3, r0
 8017420:	f340 80a1 	ble.w	8017566 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8017424:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8017428:	4406      	add	r6, r0
 801742a:	b236      	sxth	r6, r6
 801742c:	429e      	cmp	r6, r3
 801742e:	bfa8      	it	ge
 8017430:	461e      	movge	r6, r3
 8017432:	46e1      	mov	r9, ip
 8017434:	f10c 0c01 	add.w	ip, ip, #1
 8017438:	e7e3      	b.n	8017402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801743a:	d10a      	bne.n	8017452 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801743c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8017440:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8017444:	4562      	cmp	r2, ip
 8017446:	bfb8      	it	lt
 8017448:	4662      	movlt	r2, ip
 801744a:	4288      	cmp	r0, r1
 801744c:	bfb8      	it	lt
 801744e:	461f      	movlt	r7, r3
 8017450:	e087      	b.n	8017562 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017452:	428a      	cmp	r2, r1
 8017454:	bfb8      	it	lt
 8017456:	460a      	movlt	r2, r1
 8017458:	e083      	b.n	8017562 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801745a:	bf00      	nop
 801745c:	200138f4 	.word	0x200138f4
 8017460:	20013900 	.word	0x20013900
 8017464:	200000a0 	.word	0x200000a0
 8017468:	200138b4 	.word	0x200138b4
 801746c:	200138aa 	.word	0x200138aa
 8017470:	200138a8 	.word	0x200138a8
 8017474:	200138b2 	.word	0x200138b2
 8017478:	200138ac 	.word	0x200138ac
 801747c:	19a1      	adds	r1, r4, r6
 801747e:	ab07      	add	r3, sp, #28
 8017480:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017484:	6849      	ldr	r1, [r1, #4]
 8017486:	c303      	stmia	r3!, {r0, r1}
 8017488:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801748c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017490:	2b13      	cmp	r3, #19
 8017492:	bfd8      	it	le
 8017494:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017498:	f8ad 201c 	strh.w	r2, [sp, #28]
 801749c:	440b      	add	r3, r1
 801749e:	1a9b      	subs	r3, r3, r2
 80174a0:	a807      	add	r0, sp, #28
 80174a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80174a6:	f7fe ff7b 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174aa:	a807      	add	r0, sp, #28
 80174ac:	f7fa f85d 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 80174b0:	bb78      	cbnz	r0, 8017512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80174b2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80174b6:	f8d9 0000 	ldr.w	r0, [r9]
 80174ba:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80174be:	f8d0 e000 	ldr.w	lr, [r0]
 80174c2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80174c6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80174ca:	f1bc 0f14 	cmp.w	ip, #20
 80174ce:	bfa8      	it	ge
 80174d0:	f04f 0c14 	movge.w	ip, #20
 80174d4:	fa1f fc8c 	uxth.w	ip, ip
 80174d8:	f8cd c000 	str.w	ip, [sp]
 80174dc:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80174e0:	47d8      	blx	fp
 80174e2:	4683      	mov	fp, r0
 80174e4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80174e8:	a807      	add	r0, sp, #28
 80174ea:	f7fe ff3f 	bl	801636c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80174ee:	6823      	ldr	r3, [r4, #0]
 80174f0:	4426      	add	r6, r4
 80174f2:	4620      	mov	r0, r4
 80174f4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80174f6:	a907      	add	r1, sp, #28
 80174f8:	4798      	blx	r3
 80174fa:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80174fe:	eba0 000b 	sub.w	r0, r0, fp
 8017502:	b200      	sxth	r0, r0
 8017504:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017508:	b918      	cbnz	r0, 8017512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801750a:	b2b9      	uxth	r1, r7
 801750c:	4650      	mov	r0, sl
 801750e:	f7ff fa79 	bl	8016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017512:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8017516:	f1bb 0f00 	cmp.w	fp, #0
 801751a:	f43f af2c 	beq.w	8017376 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801751e:	882b      	ldrh	r3, [r5, #0]
 8017520:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8017524:	3301      	adds	r3, #1
 8017526:	b29b      	uxth	r3, r3
 8017528:	2700      	movs	r7, #0
 801752a:	b299      	uxth	r1, r3
 801752c:	458b      	cmp	fp, r1
 801752e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8017532:	d9a3      	bls.n	801747c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8017534:	4426      	add	r6, r4
 8017536:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801753a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801753e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017542:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8017546:	4408      	add	r0, r1
 8017548:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 801754c:	4461      	add	r1, ip
 801754e:	b200      	sxth	r0, r0
 8017550:	b209      	sxth	r1, r1
 8017552:	4288      	cmp	r0, r1
 8017554:	f6bf af71 	bge.w	801743a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017558:	4584      	cmp	ip, r0
 801755a:	4662      	mov	r2, ip
 801755c:	461f      	mov	r7, r3
 801755e:	bfb8      	it	lt
 8017560:	4602      	movlt	r2, r0
 8017562:	3301      	adds	r3, #1
 8017564:	e7e1      	b.n	801752a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8017566:	d10e      	bne.n	8017586 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017568:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 801756c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017570:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8017574:	4473      	add	r3, lr
 8017576:	b21b      	sxth	r3, r3
 8017578:	429e      	cmp	r6, r3
 801757a:	bfa8      	it	ge
 801757c:	461e      	movge	r6, r3
 801757e:	4287      	cmp	r7, r0
 8017580:	bfb8      	it	lt
 8017582:	46e1      	movlt	r9, ip
 8017584:	e756      	b.n	8017434 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017586:	4286      	cmp	r6, r0
 8017588:	bfa8      	it	ge
 801758a:	4606      	movge	r6, r0
 801758c:	e752      	b.n	8017434 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801758e:	eb0a 0007 	add.w	r0, sl, r7
 8017592:	4427      	add	r7, r4
 8017594:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017598:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 801759c:	f1bb 0f13 	cmp.w	fp, #19
 80175a0:	bfde      	ittt	le
 80175a2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80175a6:	445e      	addle	r6, fp
 80175a8:	b236      	sxthle	r6, r6
 80175aa:	f7f9 ffde 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 80175ae:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80175b2:	2800      	cmp	r0, #0
 80175b4:	f47f af1a 	bne.w	80173ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80175b8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80175bc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80175c0:	482a      	ldr	r0, [pc, #168]	; (801766c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80175c2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80175c6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80175ca:	6800      	ldr	r0, [r0, #0]
 80175cc:	f8ad 101c 	strh.w	r1, [sp, #28]
 80175d0:	1ab6      	subs	r6, r6, r2
 80175d2:	2e14      	cmp	r6, #20
 80175d4:	f8ad 201e 	strh.w	r2, [sp, #30]
 80175d8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80175dc:	bfa8      	it	ge
 80175de:	2614      	movge	r6, #20
 80175e0:	f8d0 c000 	ldr.w	ip, [r0]
 80175e4:	b2b6      	uxth	r6, r6
 80175e6:	fa1f fb8b 	uxth.w	fp, fp
 80175ea:	455e      	cmp	r6, fp
 80175ec:	bf94      	ite	ls
 80175ee:	9600      	strls	r6, [sp, #0]
 80175f0:	f8cd b000 	strhi.w	fp, [sp]
 80175f4:	b292      	uxth	r2, r2
 80175f6:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80175fa:	b29b      	uxth	r3, r3
 80175fc:	b289      	uxth	r1, r1
 80175fe:	47b0      	blx	r6
 8017600:	6823      	ldr	r3, [r4, #0]
 8017602:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017606:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017608:	a907      	add	r1, sp, #28
 801760a:	4620      	mov	r0, r4
 801760c:	4798      	blx	r3
 801760e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017612:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8017616:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801761a:	1a5b      	subs	r3, r3, r1
 801761c:	440a      	add	r2, r1
 801761e:	b21b      	sxth	r3, r3
 8017620:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8017624:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017628:	2b00      	cmp	r3, #0
 801762a:	f47f aeda 	bne.w	80173e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801762e:	fa1f f189 	uxth.w	r1, r9
 8017632:	4650      	mov	r0, sl
 8017634:	f7ff f9e6 	bl	8016a04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017638:	e6d3      	b.n	80173e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801763a:	882e      	ldrh	r6, [r5, #0]
 801763c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017640:	42b3      	cmp	r3, r6
 8017642:	f67f ae98 	bls.w	8017376 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017646:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801764a:	ab07      	add	r3, sp, #28
 801764c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017650:	6851      	ldr	r1, [r2, #4]
 8017652:	c303      	stmia	r3!, {r0, r1}
 8017654:	a807      	add	r0, sp, #28
 8017656:	f7f9 ff88 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801765a:	b920      	cbnz	r0, 8017666 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 801765c:	6823      	ldr	r3, [r4, #0]
 801765e:	a907      	add	r1, sp, #28
 8017660:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017662:	4620      	mov	r0, r4
 8017664:	4798      	blx	r3
 8017666:	3601      	adds	r6, #1
 8017668:	b2b6      	uxth	r6, r6
 801766a:	e7e7      	b.n	801763c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 801766c:	200138b4 	.word	0x200138b4

08017670 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017670:	4b03      	ldr	r3, [pc, #12]	; (8017680 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017672:	2200      	movs	r2, #0
 8017674:	801a      	strh	r2, [r3, #0]
 8017676:	805a      	strh	r2, [r3, #2]
 8017678:	809a      	strh	r2, [r3, #4]
 801767a:	80da      	strh	r2, [r3, #6]
 801767c:	4770      	bx	lr
 801767e:	bf00      	nop
 8017680:	20013900 	.word	0x20013900

08017684 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017688:	4606      	mov	r6, r0
 801768a:	b09d      	sub	sp, #116	; 0x74
 801768c:	a803      	add	r0, sp, #12
 801768e:	4614      	mov	r4, r2
 8017690:	468a      	mov	sl, r1
 8017692:	461d      	mov	r5, r3
 8017694:	f000 ff08 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 8017698:	6833      	ldr	r3, [r6, #0]
 801769a:	4630      	mov	r0, r6
 801769c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801769e:	4798      	blx	r3
 80176a0:	6833      	ldr	r3, [r6, #0]
 80176a2:	4607      	mov	r7, r0
 80176a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80176a6:	4630      	mov	r0, r6
 80176a8:	4798      	blx	r3
 80176aa:	462a      	mov	r2, r5
 80176ac:	9000      	str	r0, [sp, #0]
 80176ae:	4621      	mov	r1, r4
 80176b0:	463b      	mov	r3, r7
 80176b2:	a803      	add	r0, sp, #12
 80176b4:	f000 ff53 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80176b8:	2500      	movs	r5, #0
 80176ba:	462c      	mov	r4, r5
 80176bc:	46a9      	mov	r9, r5
 80176be:	46a8      	mov	r8, r5
 80176c0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80176c4:	2300      	movs	r3, #0
 80176c6:	9302      	str	r3, [sp, #8]
 80176c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80176cc:	429c      	cmp	r4, r3
 80176ce:	d002      	beq.n	80176d6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80176d0:	455c      	cmp	r4, fp
 80176d2:	bf18      	it	ne
 80176d4:	4625      	movne	r5, r4
 80176d6:	ab02      	add	r3, sp, #8
 80176d8:	4632      	mov	r2, r6
 80176da:	4651      	mov	r1, sl
 80176dc:	a803      	add	r0, sp, #12
 80176de:	f001 fa41 	bl	8018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80176e2:	4604      	mov	r4, r0
 80176e4:	b108      	cbz	r0, 80176ea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80176e6:	280a      	cmp	r0, #10
 80176e8:	d10a      	bne.n	8017700 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80176ea:	45c1      	cmp	r9, r8
 80176ec:	bf38      	it	cc
 80176ee:	46c1      	movcc	r9, r8
 80176f0:	f04f 0800 	mov.w	r8, #0
 80176f4:	2c00      	cmp	r4, #0
 80176f6:	d1e5      	bne.n	80176c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80176f8:	4648      	mov	r0, r9
 80176fa:	b01d      	add	sp, #116	; 0x74
 80176fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017700:	9a02      	ldr	r2, [sp, #8]
 8017702:	2a00      	cmp	r2, #0
 8017704:	d0de      	beq.n	80176c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017706:	7b57      	ldrb	r7, [r2, #13]
 8017708:	6833      	ldr	r3, [r6, #0]
 801770a:	8894      	ldrh	r4, [r2, #4]
 801770c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801770e:	007f      	lsls	r7, r7, #1
 8017710:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8017714:	7a97      	ldrb	r7, [r2, #10]
 8017716:	4629      	mov	r1, r5
 8017718:	4307      	orrs	r7, r0
 801771a:	4630      	mov	r0, r6
 801771c:	4798      	blx	r3
 801771e:	4438      	add	r0, r7
 8017720:	4480      	add	r8, r0
 8017722:	fa1f f888 	uxth.w	r8, r8
 8017726:	e7e5      	b.n	80176f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017728 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017728:	b508      	push	{r3, lr}
 801772a:	6803      	ldr	r3, [r0, #0]
 801772c:	68db      	ldr	r3, [r3, #12]
 801772e:	4798      	blx	r3
 8017730:	b128      	cbz	r0, 801773e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8017732:	7b43      	ldrb	r3, [r0, #13]
 8017734:	7a80      	ldrb	r0, [r0, #10]
 8017736:	005b      	lsls	r3, r3, #1
 8017738:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801773c:	4318      	orrs	r0, r3
 801773e:	bd08      	pop	{r3, pc}

08017740 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017740:	b40e      	push	{r1, r2, r3}
 8017742:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017744:	b09e      	sub	sp, #120	; 0x78
 8017746:	ab23      	add	r3, sp, #140	; 0x8c
 8017748:	4605      	mov	r5, r0
 801774a:	f853 4b04 	ldr.w	r4, [r3], #4
 801774e:	9303      	str	r3, [sp, #12]
 8017750:	a805      	add	r0, sp, #20
 8017752:	f000 fea9 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 8017756:	682b      	ldr	r3, [r5, #0]
 8017758:	4628      	mov	r0, r5
 801775a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801775c:	4798      	blx	r3
 801775e:	682b      	ldr	r3, [r5, #0]
 8017760:	4606      	mov	r6, r0
 8017762:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017764:	4628      	mov	r0, r5
 8017766:	4798      	blx	r3
 8017768:	4633      	mov	r3, r6
 801776a:	ae1e      	add	r6, sp, #120	; 0x78
 801776c:	4621      	mov	r1, r4
 801776e:	9000      	str	r0, [sp, #0]
 8017770:	9a03      	ldr	r2, [sp, #12]
 8017772:	2400      	movs	r4, #0
 8017774:	a805      	add	r0, sp, #20
 8017776:	f000 fef2 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801777a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801777e:	462a      	mov	r2, r5
 8017780:	4633      	mov	r3, r6
 8017782:	4621      	mov	r1, r4
 8017784:	a805      	add	r0, sp, #20
 8017786:	f001 f9ed 	bl	8018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801778a:	b1f0      	cbz	r0, 80177ca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801778c:	280a      	cmp	r0, #10
 801778e:	d018      	beq.n	80177c2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017790:	9f04      	ldr	r7, [sp, #16]
 8017792:	b1b7      	cbz	r7, 80177c2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017794:	7b78      	ldrb	r0, [r7, #13]
 8017796:	7a3b      	ldrb	r3, [r7, #8]
 8017798:	88ea      	ldrh	r2, [r5, #6]
 801779a:	00c1      	lsls	r1, r0, #3
 801779c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80177a0:	4319      	orrs	r1, r3
 80177a2:	0643      	lsls	r3, r0, #25
 80177a4:	bf44      	itt	mi
 80177a6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80177aa:	b219      	sxthmi	r1, r3
 80177ac:	0100      	lsls	r0, r0, #4
 80177ae:	79fb      	ldrb	r3, [r7, #7]
 80177b0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80177b4:	4303      	orrs	r3, r0
 80177b6:	4413      	add	r3, r2
 80177b8:	1a5b      	subs	r3, r3, r1
 80177ba:	b21b      	sxth	r3, r3
 80177bc:	429c      	cmp	r4, r3
 80177be:	bfb8      	it	lt
 80177c0:	461c      	movlt	r4, r3
 80177c2:	4633      	mov	r3, r6
 80177c4:	462a      	mov	r2, r5
 80177c6:	2100      	movs	r1, #0
 80177c8:	e7dc      	b.n	8017784 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80177ca:	b2a0      	uxth	r0, r4
 80177cc:	b01e      	add	sp, #120	; 0x78
 80177ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80177d2:	b003      	add	sp, #12
 80177d4:	4770      	bx	lr

080177d6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80177d6:	7a43      	ldrb	r3, [r0, #9]
 80177d8:	8880      	ldrh	r0, [r0, #4]
 80177da:	4418      	add	r0, r3
 80177dc:	b280      	uxth	r0, r0
 80177de:	4770      	bx	lr

080177e0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80177e0:	6803      	ldr	r3, [r0, #0]
 80177e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80177e4:	4718      	bx	r3

080177e6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80177e6:	b40e      	push	{r1, r2, r3}
 80177e8:	b570      	push	{r4, r5, r6, lr}
 80177ea:	b09d      	sub	sp, #116	; 0x74
 80177ec:	ab21      	add	r3, sp, #132	; 0x84
 80177ee:	4604      	mov	r4, r0
 80177f0:	f853 5b04 	ldr.w	r5, [r3], #4
 80177f4:	9302      	str	r3, [sp, #8]
 80177f6:	a803      	add	r0, sp, #12
 80177f8:	f000 fe56 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 80177fc:	6823      	ldr	r3, [r4, #0]
 80177fe:	4620      	mov	r0, r4
 8017800:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017802:	4798      	blx	r3
 8017804:	6823      	ldr	r3, [r4, #0]
 8017806:	4606      	mov	r6, r0
 8017808:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801780a:	4620      	mov	r0, r4
 801780c:	4798      	blx	r3
 801780e:	4633      	mov	r3, r6
 8017810:	9000      	str	r0, [sp, #0]
 8017812:	9a02      	ldr	r2, [sp, #8]
 8017814:	4629      	mov	r1, r5
 8017816:	a803      	add	r0, sp, #12
 8017818:	f000 fea1 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801781c:	a803      	add	r0, sp, #12
 801781e:	f001 fa6f 	bl	8018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017822:	2401      	movs	r4, #1
 8017824:	b2a3      	uxth	r3, r4
 8017826:	b140      	cbz	r0, 801783a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017828:	280a      	cmp	r0, #10
 801782a:	bf08      	it	eq
 801782c:	3301      	addeq	r3, #1
 801782e:	a803      	add	r0, sp, #12
 8017830:	bf08      	it	eq
 8017832:	b21c      	sxtheq	r4, r3
 8017834:	f001 fa64 	bl	8018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017838:	e7f4      	b.n	8017824 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801783a:	4618      	mov	r0, r3
 801783c:	b01d      	add	sp, #116	; 0x74
 801783e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017842:	b003      	add	sp, #12
 8017844:	4770      	bx	lr

08017846 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017846:	b40e      	push	{r1, r2, r3}
 8017848:	b5f0      	push	{r4, r5, r6, r7, lr}
 801784a:	b09e      	sub	sp, #120	; 0x78
 801784c:	ab23      	add	r3, sp, #140	; 0x8c
 801784e:	4604      	mov	r4, r0
 8017850:	f853 5b04 	ldr.w	r5, [r3], #4
 8017854:	9303      	str	r3, [sp, #12]
 8017856:	a805      	add	r0, sp, #20
 8017858:	f000 fe26 	bl	80184a8 <_ZN8touchgfx12TextProviderC1Ev>
 801785c:	6823      	ldr	r3, [r4, #0]
 801785e:	4620      	mov	r0, r4
 8017860:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017862:	4798      	blx	r3
 8017864:	6823      	ldr	r3, [r4, #0]
 8017866:	4606      	mov	r6, r0
 8017868:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801786a:	4620      	mov	r0, r4
 801786c:	4798      	blx	r3
 801786e:	4633      	mov	r3, r6
 8017870:	4629      	mov	r1, r5
 8017872:	9000      	str	r0, [sp, #0]
 8017874:	9a03      	ldr	r2, [sp, #12]
 8017876:	a805      	add	r0, sp, #20
 8017878:	ad1e      	add	r5, sp, #120	; 0x78
 801787a:	f000 fe70 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801787e:	2100      	movs	r1, #0
 8017880:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017884:	4622      	mov	r2, r4
 8017886:	462b      	mov	r3, r5
 8017888:	a805      	add	r0, sp, #20
 801788a:	f001 f96b 	bl	8018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801788e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017892:	b1d8      	cbz	r0, 80178cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017894:	280a      	cmp	r0, #10
 8017896:	d012      	beq.n	80178be <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017898:	9804      	ldr	r0, [sp, #16]
 801789a:	b180      	cbz	r0, 80178be <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801789c:	7b47      	ldrb	r7, [r0, #13]
 801789e:	88e2      	ldrh	r2, [r4, #6]
 80178a0:	00fb      	lsls	r3, r7, #3
 80178a2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80178a6:	7a03      	ldrb	r3, [r0, #8]
 80178a8:	430b      	orrs	r3, r1
 80178aa:	0679      	lsls	r1, r7, #25
 80178ac:	bf44      	itt	mi
 80178ae:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80178b2:	b21b      	sxthmi	r3, r3
 80178b4:	1ad3      	subs	r3, r2, r3
 80178b6:	b21b      	sxth	r3, r3
 80178b8:	429e      	cmp	r6, r3
 80178ba:	bfa8      	it	ge
 80178bc:	461e      	movge	r6, r3
 80178be:	462b      	mov	r3, r5
 80178c0:	4622      	mov	r2, r4
 80178c2:	2100      	movs	r1, #0
 80178c4:	a805      	add	r0, sp, #20
 80178c6:	f001 f94d 	bl	8018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80178ca:	e7e2      	b.n	8017892 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80178cc:	4630      	mov	r0, r6
 80178ce:	b01e      	add	sp, #120	; 0x78
 80178d0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80178d4:	b003      	add	sp, #12
 80178d6:	4770      	bx	lr

080178d8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80178d8:	b513      	push	{r0, r1, r4, lr}
 80178da:	6803      	ldr	r3, [r0, #0]
 80178dc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80178e0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80178e4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80178e8:	2400      	movs	r4, #0
 80178ea:	9400      	str	r4, [sp, #0]
 80178ec:	f8ad 2006 	strh.w	r2, [sp, #6]
 80178f0:	691b      	ldr	r3, [r3, #16]
 80178f2:	4669      	mov	r1, sp
 80178f4:	4798      	blx	r3
 80178f6:	b002      	add	sp, #8
 80178f8:	bd10      	pop	{r4, pc}

080178fa <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80178fa:	b538      	push	{r3, r4, r5, lr}
 80178fc:	680b      	ldr	r3, [r1, #0]
 80178fe:	460c      	mov	r4, r1
 8017900:	68db      	ldr	r3, [r3, #12]
 8017902:	4605      	mov	r5, r0
 8017904:	4798      	blx	r3
 8017906:	6823      	ldr	r3, [r4, #0]
 8017908:	4620      	mov	r0, r4
 801790a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801790c:	4629      	mov	r1, r5
 801790e:	4798      	blx	r3
 8017910:	4628      	mov	r0, r5
 8017912:	bd38      	pop	{r3, r4, r5, pc}

08017914 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017914:	b410      	push	{r4}
 8017916:	880a      	ldrh	r2, [r1, #0]
 8017918:	8884      	ldrh	r4, [r0, #4]
 801791a:	4422      	add	r2, r4
 801791c:	800a      	strh	r2, [r1, #0]
 801791e:	88c4      	ldrh	r4, [r0, #6]
 8017920:	884a      	ldrh	r2, [r1, #2]
 8017922:	4422      	add	r2, r4
 8017924:	804a      	strh	r2, [r1, #2]
 8017926:	6940      	ldr	r0, [r0, #20]
 8017928:	b120      	cbz	r0, 8017934 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801792a:	6803      	ldr	r3, [r0, #0]
 801792c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017932:	4718      	bx	r3
 8017934:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017938:	4770      	bx	lr

0801793a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801793a:	b570      	push	{r4, r5, r6, lr}
 801793c:	8882      	ldrh	r2, [r0, #4]
 801793e:	880b      	ldrh	r3, [r1, #0]
 8017940:	4413      	add	r3, r2
 8017942:	800b      	strh	r3, [r1, #0]
 8017944:	88c2      	ldrh	r2, [r0, #6]
 8017946:	884b      	ldrh	r3, [r1, #2]
 8017948:	460c      	mov	r4, r1
 801794a:	4413      	add	r3, r2
 801794c:	804b      	strh	r3, [r1, #2]
 801794e:	4605      	mov	r5, r0
 8017950:	1d01      	adds	r1, r0, #4
 8017952:	4620      	mov	r0, r4
 8017954:	f7f9 fdc6 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8017958:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801795c:	2b00      	cmp	r3, #0
 801795e:	dd0b      	ble.n	8017978 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017960:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017964:	2b00      	cmp	r3, #0
 8017966:	dd07      	ble.n	8017978 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017968:	6968      	ldr	r0, [r5, #20]
 801796a:	b128      	cbz	r0, 8017978 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801796c:	6803      	ldr	r3, [r0, #0]
 801796e:	4621      	mov	r1, r4
 8017970:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017976:	4718      	bx	r3
 8017978:	bd70      	pop	{r4, r5, r6, pc}
	...

0801797c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801797c:	b570      	push	{r4, r5, r6, lr}
 801797e:	8882      	ldrh	r2, [r0, #4]
 8017980:	880b      	ldrh	r3, [r1, #0]
 8017982:	4413      	add	r3, r2
 8017984:	800b      	strh	r3, [r1, #0]
 8017986:	88c2      	ldrh	r2, [r0, #6]
 8017988:	884b      	ldrh	r3, [r1, #2]
 801798a:	460c      	mov	r4, r1
 801798c:	4413      	add	r3, r2
 801798e:	804b      	strh	r3, [r1, #2]
 8017990:	4605      	mov	r5, r0
 8017992:	1d01      	adds	r1, r0, #4
 8017994:	4620      	mov	r0, r4
 8017996:	f7f9 fda5 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801799a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801799e:	2b00      	cmp	r3, #0
 80179a0:	dd19      	ble.n	80179d6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80179a2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80179a6:	2b00      	cmp	r3, #0
 80179a8:	dd15      	ble.n	80179d6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80179aa:	6968      	ldr	r0, [r5, #20]
 80179ac:	b128      	cbz	r0, 80179ba <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80179ae:	6803      	ldr	r3, [r0, #0]
 80179b0:	4621      	mov	r1, r4
 80179b2:	691b      	ldr	r3, [r3, #16]
 80179b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80179b8:	4718      	bx	r3
 80179ba:	4b07      	ldr	r3, [pc, #28]	; (80179d8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80179bc:	681b      	ldr	r3, [r3, #0]
 80179be:	3304      	adds	r3, #4
 80179c0:	429d      	cmp	r5, r3
 80179c2:	d108      	bne.n	80179d6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80179c4:	f7fe fea0 	bl	8016708 <_ZN8touchgfx11Application11getInstanceEv>
 80179c8:	6803      	ldr	r3, [r0, #0]
 80179ca:	6821      	ldr	r1, [r4, #0]
 80179cc:	6862      	ldr	r2, [r4, #4]
 80179ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80179d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80179d4:	4718      	bx	r3
 80179d6:	bd70      	pop	{r4, r5, r6, pc}
 80179d8:	200138f8 	.word	0x200138f8

080179dc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80179dc:	b570      	push	{r4, r5, r6, lr}
 80179de:	4604      	mov	r4, r0
 80179e0:	4616      	mov	r6, r2
 80179e2:	460d      	mov	r5, r1
 80179e4:	b901      	cbnz	r1, 80179e8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80179e6:	b192      	cbz	r2, 8017a0e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80179e8:	6823      	ldr	r3, [r4, #0]
 80179ea:	4620      	mov	r0, r4
 80179ec:	699b      	ldr	r3, [r3, #24]
 80179ee:	4798      	blx	r3
 80179f0:	88e2      	ldrh	r2, [r4, #6]
 80179f2:	88a1      	ldrh	r1, [r4, #4]
 80179f4:	4432      	add	r2, r6
 80179f6:	4429      	add	r1, r5
 80179f8:	4620      	mov	r0, r4
 80179fa:	b212      	sxth	r2, r2
 80179fc:	b209      	sxth	r1, r1
 80179fe:	f7ea ff22 	bl	8002846 <_ZN8touchgfx8Drawable5setXYEss>
 8017a02:	6823      	ldr	r3, [r4, #0]
 8017a04:	4620      	mov	r0, r4
 8017a06:	699b      	ldr	r3, [r3, #24]
 8017a08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017a0c:	4718      	bx	r3
 8017a0e:	bd70      	pop	{r4, r5, r6, pc}

08017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017a10:	b510      	push	{r4, lr}
 8017a12:	4604      	mov	r4, r0
 8017a14:	4608      	mov	r0, r1
 8017a16:	2300      	movs	r3, #0
 8017a18:	8023      	strh	r3, [r4, #0]
 8017a1a:	8063      	strh	r3, [r4, #2]
 8017a1c:	6803      	ldr	r3, [r0, #0]
 8017a1e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017a22:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017a26:	80a1      	strh	r1, [r4, #4]
 8017a28:	80e2      	strh	r2, [r4, #6]
 8017a2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a2c:	4621      	mov	r1, r4
 8017a2e:	4798      	blx	r3
 8017a30:	4620      	mov	r0, r4
 8017a32:	bd10      	pop	{r4, pc}

08017a34 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017a34:	b530      	push	{r4, r5, lr}
 8017a36:	8083      	strh	r3, [r0, #4]
 8017a38:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017a3c:	80c3      	strh	r3, [r0, #6]
 8017a3e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017a42:	7203      	strb	r3, [r0, #8]
 8017a44:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017a48:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017a4c:	7243      	strb	r3, [r0, #9]
 8017a4e:	7a83      	ldrb	r3, [r0, #10]
 8017a50:	6141      	str	r1, [r0, #20]
 8017a52:	f365 0306 	bfi	r3, r5, #0, #7
 8017a56:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017a5a:	8302      	strh	r2, [r0, #24]
 8017a5c:	f365 13c7 	bfi	r3, r5, #7, #1
 8017a60:	7283      	strb	r3, [r0, #10]
 8017a62:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8017a66:	72c3      	strb	r3, [r0, #11]
 8017a68:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017a6c:	7303      	strb	r3, [r0, #12]
 8017a6e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017a72:	81c3      	strh	r3, [r0, #14]
 8017a74:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017a78:	8203      	strh	r3, [r0, #16]
 8017a7a:	4b01      	ldr	r3, [pc, #4]	; (8017a80 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017a7c:	6003      	str	r3, [r0, #0]
 8017a7e:	bd30      	pop	{r4, r5, pc}
 8017a80:	080300f8 	.word	0x080300f8

08017a84 <_ZNK8touchgfx9ConstFont4findEt>:
 8017a84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017a86:	6944      	ldr	r4, [r0, #20]
 8017a88:	b3bc      	cbz	r4, 8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017a8a:	88a3      	ldrh	r3, [r4, #4]
 8017a8c:	8b02      	ldrh	r2, [r0, #24]
 8017a8e:	1acb      	subs	r3, r1, r3
 8017a90:	f102 32ff 	add.w	r2, r2, #4294967295
 8017a94:	d431      	bmi.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017a96:	4293      	cmp	r3, r2
 8017a98:	dd0c      	ble.n	8017ab4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017a9a:	230e      	movs	r3, #14
 8017a9c:	fb03 4302 	mla	r3, r3, r2, r4
 8017aa0:	889b      	ldrh	r3, [r3, #4]
 8017aa2:	1a5b      	subs	r3, r3, r1
 8017aa4:	1ad3      	subs	r3, r2, r3
 8017aa6:	429a      	cmp	r2, r3
 8017aa8:	db27      	blt.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017aaa:	2b00      	cmp	r3, #0
 8017aac:	bfbc      	itt	lt
 8017aae:	2302      	movlt	r3, #2
 8017ab0:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017ab4:	2500      	movs	r5, #0
 8017ab6:	260e      	movs	r6, #14
 8017ab8:	4295      	cmp	r5, r2
 8017aba:	dc1e      	bgt.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017abc:	fb06 4003 	mla	r0, r6, r3, r4
 8017ac0:	8887      	ldrh	r7, [r0, #4]
 8017ac2:	42b9      	cmp	r1, r7
 8017ac4:	d01a      	beq.n	8017afc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017ac6:	d20d      	bcs.n	8017ae4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017ac8:	1e5a      	subs	r2, r3, #1
 8017aca:	4295      	cmp	r5, r2
 8017acc:	dc15      	bgt.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017ace:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8017ad2:	1a5b      	subs	r3, r3, r1
 8017ad4:	1ad3      	subs	r3, r2, r3
 8017ad6:	429a      	cmp	r2, r3
 8017ad8:	db0f      	blt.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017ada:	429d      	cmp	r5, r3
 8017adc:	ddec      	ble.n	8017ab8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017ade:	1953      	adds	r3, r2, r5
 8017ae0:	105b      	asrs	r3, r3, #1
 8017ae2:	e7e9      	b.n	8017ab8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017ae4:	1c5d      	adds	r5, r3, #1
 8017ae6:	42aa      	cmp	r2, r5
 8017ae8:	db07      	blt.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017aea:	8a43      	ldrh	r3, [r0, #18]
 8017aec:	1acb      	subs	r3, r1, r3
 8017aee:	442b      	add	r3, r5
 8017af0:	429d      	cmp	r5, r3
 8017af2:	dc02      	bgt.n	8017afa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017af4:	429a      	cmp	r2, r3
 8017af6:	dadf      	bge.n	8017ab8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017af8:	e7f1      	b.n	8017ade <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017afa:	2000      	movs	r0, #0
 8017afc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017afe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017afe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b00:	4604      	mov	r4, r0
 8017b02:	4617      	mov	r7, r2
 8017b04:	461e      	mov	r6, r3
 8017b06:	b911      	cbnz	r1, 8017b0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017b08:	2500      	movs	r5, #0
 8017b0a:	4628      	mov	r0, r5
 8017b0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017b0e:	290a      	cmp	r1, #10
 8017b10:	d0fa      	beq.n	8017b08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017b12:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017b16:	4291      	cmp	r1, r2
 8017b18:	d0f6      	beq.n	8017b08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017b1a:	f242 020b 	movw	r2, #8203	; 0x200b
 8017b1e:	4291      	cmp	r1, r2
 8017b20:	d0f2      	beq.n	8017b08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017b22:	f7ff ffaf 	bl	8017a84 <_ZNK8touchgfx9ConstFont4findEt>
 8017b26:	4605      	mov	r5, r0
 8017b28:	b950      	cbnz	r0, 8017b40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017b2a:	6823      	ldr	r3, [r4, #0]
 8017b2c:	4620      	mov	r0, r4
 8017b2e:	691b      	ldr	r3, [r3, #16]
 8017b30:	4798      	blx	r3
 8017b32:	4601      	mov	r1, r0
 8017b34:	4620      	mov	r0, r4
 8017b36:	f7ff ffa5 	bl	8017a84 <_ZNK8touchgfx9ConstFont4findEt>
 8017b3a:	4605      	mov	r5, r0
 8017b3c:	2800      	cmp	r0, #0
 8017b3e:	d0e3      	beq.n	8017b08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017b40:	6823      	ldr	r3, [r4, #0]
 8017b42:	4629      	mov	r1, r5
 8017b44:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8017b46:	4620      	mov	r0, r4
 8017b48:	4798      	blx	r3
 8017b4a:	6038      	str	r0, [r7, #0]
 8017b4c:	6823      	ldr	r3, [r4, #0]
 8017b4e:	4620      	mov	r0, r4
 8017b50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017b52:	4798      	blx	r3
 8017b54:	7030      	strb	r0, [r6, #0]
 8017b56:	e7d8      	b.n	8017b0a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017b58 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017b58:	b538      	push	{r3, r4, r5, lr}
 8017b5a:	4605      	mov	r5, r0
 8017b5c:	f002 fb94 	bl	801a288 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017b60:	4604      	mov	r4, r0
 8017b62:	4628      	mov	r0, r5
 8017b64:	f002 fad4 	bl	801a110 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017b68:	2800      	cmp	r0, #0
 8017b6a:	bf14      	ite	ne
 8017b6c:	2002      	movne	r0, #2
 8017b6e:	2000      	moveq	r0, #0
 8017b70:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017b74:	b280      	uxth	r0, r0
 8017b76:	bd38      	pop	{r3, r4, r5, pc}

08017b78 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017b78:	b538      	push	{r3, r4, r5, lr}
 8017b7a:	4605      	mov	r5, r0
 8017b7c:	f002 fb84 	bl	801a288 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017b80:	4604      	mov	r4, r0
 8017b82:	4628      	mov	r0, r5
 8017b84:	f002 fac4 	bl	801a110 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017b88:	2800      	cmp	r0, #0
 8017b8a:	bf14      	ite	ne
 8017b8c:	2002      	movne	r0, #2
 8017b8e:	2000      	moveq	r0, #0
 8017b90:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017b94:	f040 0001 	orr.w	r0, r0, #1
 8017b98:	b280      	uxth	r0, r0
 8017b9a:	bd38      	pop	{r3, r4, r5, pc}

08017b9c <_ZN8touchgfx4clzuEm>:
 8017b9c:	4603      	mov	r3, r0
 8017b9e:	b1c8      	cbz	r0, 8017bd4 <_ZN8touchgfx4clzuEm+0x38>
 8017ba0:	0c02      	lsrs	r2, r0, #16
 8017ba2:	0412      	lsls	r2, r2, #16
 8017ba4:	b9a2      	cbnz	r2, 8017bd0 <_ZN8touchgfx4clzuEm+0x34>
 8017ba6:	0403      	lsls	r3, r0, #16
 8017ba8:	2010      	movs	r0, #16
 8017baa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017bae:	bf04      	itt	eq
 8017bb0:	021b      	lsleq	r3, r3, #8
 8017bb2:	3008      	addeq	r0, #8
 8017bb4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017bb8:	bf04      	itt	eq
 8017bba:	011b      	lsleq	r3, r3, #4
 8017bbc:	3004      	addeq	r0, #4
 8017bbe:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017bc2:	bf04      	itt	eq
 8017bc4:	009b      	lsleq	r3, r3, #2
 8017bc6:	3002      	addeq	r0, #2
 8017bc8:	2b00      	cmp	r3, #0
 8017bca:	db04      	blt.n	8017bd6 <_ZN8touchgfx4clzuEm+0x3a>
 8017bcc:	3001      	adds	r0, #1
 8017bce:	4770      	bx	lr
 8017bd0:	2000      	movs	r0, #0
 8017bd2:	e7ea      	b.n	8017baa <_ZN8touchgfx4clzuEm+0xe>
 8017bd4:	2020      	movs	r0, #32
 8017bd6:	4770      	bx	lr

08017bd8 <_ZN8touchgfx7muldivuEmmmRm>:
 8017bd8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017bdc:	460f      	mov	r7, r1
 8017bde:	4615      	mov	r5, r2
 8017be0:	461e      	mov	r6, r3
 8017be2:	4601      	mov	r1, r0
 8017be4:	b100      	cbz	r0, 8017be8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8017be6:	b927      	cbnz	r7, 8017bf2 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017be8:	2000      	movs	r0, #0
 8017bea:	6030      	str	r0, [r6, #0]
 8017bec:	b002      	add	sp, #8
 8017bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017bf2:	f7ff ffd3 	bl	8017b9c <_ZN8touchgfx4clzuEm>
 8017bf6:	b980      	cbnz	r0, 8017c1a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017bf8:	4638      	mov	r0, r7
 8017bfa:	f7ff ffcf 	bl	8017b9c <_ZN8touchgfx4clzuEm>
 8017bfe:	2800      	cmp	r0, #0
 8017c00:	dd05      	ble.n	8017c0e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017c02:	4633      	mov	r3, r6
 8017c04:	462a      	mov	r2, r5
 8017c06:	4638      	mov	r0, r7
 8017c08:	f7ff ffe6 	bl	8017bd8 <_ZN8touchgfx7muldivuEmmmRm>
 8017c0c:	e7ee      	b.n	8017bec <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017c0e:	f04f 33ff 	mov.w	r3, #4294967295
 8017c12:	6033      	str	r3, [r6, #0]
 8017c14:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017c18:	e7e8      	b.n	8017bec <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017c1a:	fa37 f800 	lsrs.w	r8, r7, r0
 8017c1e:	fb07 f301 	mul.w	r3, r7, r1
 8017c22:	d105      	bne.n	8017c30 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017c24:	fbb3 f0f5 	udiv	r0, r3, r5
 8017c28:	fb05 3510 	mls	r5, r5, r0, r3
 8017c2c:	6035      	str	r5, [r6, #0]
 8017c2e:	e7dd      	b.n	8017bec <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017c30:	2301      	movs	r3, #1
 8017c32:	fa01 fa00 	lsl.w	sl, r1, r0
 8017c36:	fa03 f000 	lsl.w	r0, r3, r0
 8017c3a:	3801      	subs	r0, #1
 8017c3c:	462a      	mov	r2, r5
 8017c3e:	4633      	mov	r3, r6
 8017c40:	4038      	ands	r0, r7
 8017c42:	f7ff ffc9 	bl	8017bd8 <_ZN8touchgfx7muldivuEmmmRm>
 8017c46:	fbba f9f5 	udiv	r9, sl, r5
 8017c4a:	462a      	mov	r2, r5
 8017c4c:	4607      	mov	r7, r0
 8017c4e:	ab01      	add	r3, sp, #4
 8017c50:	fb05 a119 	mls	r1, r5, r9, sl
 8017c54:	4640      	mov	r0, r8
 8017c56:	f7ff ffbf 	bl	8017bd8 <_ZN8touchgfx7muldivuEmmmRm>
 8017c5a:	9b01      	ldr	r3, [sp, #4]
 8017c5c:	6832      	ldr	r2, [r6, #0]
 8017c5e:	fb08 f409 	mul.w	r4, r8, r9
 8017c62:	441a      	add	r2, r3
 8017c64:	fbb2 f3f5 	udiv	r3, r2, r5
 8017c68:	441c      	add	r4, r3
 8017c6a:	443c      	add	r4, r7
 8017c6c:	4420      	add	r0, r4
 8017c6e:	fb05 2513 	mls	r5, r5, r3, r2
 8017c72:	e7db      	b.n	8017c2c <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017c74 <_ZN8touchgfx6muldivElllRl>:
 8017c74:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017c76:	2800      	cmp	r0, #0
 8017c78:	bfba      	itte	lt
 8017c7a:	4240      	neglt	r0, r0
 8017c7c:	f04f 34ff 	movlt.w	r4, #4294967295
 8017c80:	2401      	movge	r4, #1
 8017c82:	2900      	cmp	r1, #0
 8017c84:	bfbc      	itt	lt
 8017c86:	4249      	neglt	r1, r1
 8017c88:	4264      	neglt	r4, r4
 8017c8a:	2a00      	cmp	r2, #0
 8017c8c:	bfb6      	itet	lt
 8017c8e:	4265      	neglt	r5, r4
 8017c90:	4625      	movge	r5, r4
 8017c92:	4252      	neglt	r2, r2
 8017c94:	4288      	cmp	r0, r1
 8017c96:	461e      	mov	r6, r3
 8017c98:	bfc2      	ittt	gt
 8017c9a:	4603      	movgt	r3, r0
 8017c9c:	4608      	movgt	r0, r1
 8017c9e:	4619      	movgt	r1, r3
 8017ca0:	ab01      	add	r3, sp, #4
 8017ca2:	f7ff ff99 	bl	8017bd8 <_ZN8touchgfx7muldivuEmmmRm>
 8017ca6:	9b01      	ldr	r3, [sp, #4]
 8017ca8:	4368      	muls	r0, r5
 8017caa:	435c      	muls	r4, r3
 8017cac:	6034      	str	r4, [r6, #0]
 8017cae:	b002      	add	sp, #8
 8017cb0:	bd70      	pop	{r4, r5, r6, pc}

08017cb2 <_ZN8touchgfx6muldivElll>:
 8017cb2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017cb4:	4606      	mov	r6, r0
 8017cb6:	ab01      	add	r3, sp, #4
 8017cb8:	460d      	mov	r5, r1
 8017cba:	4614      	mov	r4, r2
 8017cbc:	f7ff ffda 	bl	8017c74 <_ZN8touchgfx6muldivElllRl>
 8017cc0:	2e00      	cmp	r6, #0
 8017cc2:	db20      	blt.n	8017d06 <_ZN8touchgfx6muldivElll+0x54>
 8017cc4:	bf14      	ite	ne
 8017cc6:	2301      	movne	r3, #1
 8017cc8:	2300      	moveq	r3, #0
 8017cca:	2d00      	cmp	r5, #0
 8017ccc:	db1e      	blt.n	8017d0c <_ZN8touchgfx6muldivElll+0x5a>
 8017cce:	bf14      	ite	ne
 8017cd0:	2201      	movne	r2, #1
 8017cd2:	2200      	moveq	r2, #0
 8017cd4:	2c00      	cmp	r4, #0
 8017cd6:	fb03 f202 	mul.w	r2, r3, r2
 8017cda:	db1a      	blt.n	8017d12 <_ZN8touchgfx6muldivElll+0x60>
 8017cdc:	bf14      	ite	ne
 8017cde:	2301      	movne	r3, #1
 8017ce0:	2300      	moveq	r3, #0
 8017ce2:	4353      	muls	r3, r2
 8017ce4:	2b01      	cmp	r3, #1
 8017ce6:	d117      	bne.n	8017d18 <_ZN8touchgfx6muldivElll+0x66>
 8017ce8:	9b01      	ldr	r3, [sp, #4]
 8017cea:	2c00      	cmp	r4, #0
 8017cec:	bfb8      	it	lt
 8017cee:	4264      	neglt	r4, r4
 8017cf0:	2b00      	cmp	r3, #0
 8017cf2:	f104 0401 	add.w	r4, r4, #1
 8017cf6:	bfb8      	it	lt
 8017cf8:	425b      	neglt	r3, r3
 8017cfa:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017cfe:	db00      	blt.n	8017d02 <_ZN8touchgfx6muldivElll+0x50>
 8017d00:	3001      	adds	r0, #1
 8017d02:	b002      	add	sp, #8
 8017d04:	bd70      	pop	{r4, r5, r6, pc}
 8017d06:	f04f 33ff 	mov.w	r3, #4294967295
 8017d0a:	e7de      	b.n	8017cca <_ZN8touchgfx6muldivElll+0x18>
 8017d0c:	f04f 32ff 	mov.w	r2, #4294967295
 8017d10:	e7e0      	b.n	8017cd4 <_ZN8touchgfx6muldivElll+0x22>
 8017d12:	f04f 33ff 	mov.w	r3, #4294967295
 8017d16:	e7e4      	b.n	8017ce2 <_ZN8touchgfx6muldivElll+0x30>
 8017d18:	3301      	adds	r3, #1
 8017d1a:	d1f2      	bne.n	8017d02 <_ZN8touchgfx6muldivElll+0x50>
 8017d1c:	9b01      	ldr	r3, [sp, #4]
 8017d1e:	2c00      	cmp	r4, #0
 8017d20:	bfb8      	it	lt
 8017d22:	4264      	neglt	r4, r4
 8017d24:	2b00      	cmp	r3, #0
 8017d26:	bfb8      	it	lt
 8017d28:	425b      	neglt	r3, r3
 8017d2a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017d2e:	bfc8      	it	gt
 8017d30:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017d34:	e7e5      	b.n	8017d02 <_ZN8touchgfx6muldivElll+0x50>

08017d36 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017d36:	2000      	movs	r0, #0
 8017d38:	4770      	bx	lr

08017d3a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017d3a:	2001      	movs	r0, #1
 8017d3c:	4770      	bx	lr

08017d3e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017d3e:	2002      	movs	r0, #2
 8017d40:	4770      	bx	lr

08017d42 <_ZN8touchgfx6ScreenD1Ev>:
 8017d42:	4770      	bx	lr

08017d44 <_ZN8touchgfx12GestureEventD1Ev>:
 8017d44:	4770      	bx	lr

08017d46 <_ZN8touchgfx9DragEventD1Ev>:
 8017d46:	4770      	bx	lr

08017d48 <_ZN8touchgfx10ClickEventD1Ev>:
 8017d48:	4770      	bx	lr

08017d4a <_ZN8touchgfx10ClickEventD0Ev>:
 8017d4a:	b510      	push	{r4, lr}
 8017d4c:	210c      	movs	r1, #12
 8017d4e:	4604      	mov	r4, r0
 8017d50:	f012 fd8f 	bl	802a872 <_ZdlPvj>
 8017d54:	4620      	mov	r0, r4
 8017d56:	bd10      	pop	{r4, pc}

08017d58 <_ZN8touchgfx9DragEventD0Ev>:
 8017d58:	b510      	push	{r4, lr}
 8017d5a:	2110      	movs	r1, #16
 8017d5c:	4604      	mov	r4, r0
 8017d5e:	f012 fd88 	bl	802a872 <_ZdlPvj>
 8017d62:	4620      	mov	r0, r4
 8017d64:	bd10      	pop	{r4, pc}

08017d66 <_ZN8touchgfx12GestureEventD0Ev>:
 8017d66:	b510      	push	{r4, lr}
 8017d68:	210c      	movs	r1, #12
 8017d6a:	4604      	mov	r4, r0
 8017d6c:	f012 fd81 	bl	802a872 <_ZdlPvj>
 8017d70:	4620      	mov	r0, r4
 8017d72:	bd10      	pop	{r4, pc}

08017d74 <_ZN8touchgfx6ScreenD0Ev>:
 8017d74:	b510      	push	{r4, lr}
 8017d76:	213c      	movs	r1, #60	; 0x3c
 8017d78:	4604      	mov	r4, r0
 8017d7a:	f012 fd7a 	bl	802a872 <_ZdlPvj>
 8017d7e:	4620      	mov	r0, r4
 8017d80:	bd10      	pop	{r4, pc}
	...

08017d84 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017d84:	b530      	push	{r4, r5, lr}
 8017d86:	460d      	mov	r5, r1
 8017d88:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017d8a:	b087      	sub	sp, #28
 8017d8c:	4604      	mov	r4, r0
 8017d8e:	b301      	cbz	r1, 8017dd2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017d90:	a801      	add	r0, sp, #4
 8017d92:	f7ff fe3d 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017d96:	892a      	ldrh	r2, [r5, #8]
 8017d98:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017d9c:	7928      	ldrb	r0, [r5, #4]
 8017d9e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017da2:	f88d 0010 	strb.w	r0, [sp, #16]
 8017da6:	1ad2      	subs	r2, r2, r3
 8017da8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017daa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017dac:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017db0:	441a      	add	r2, r3
 8017db2:	896b      	ldrh	r3, [r5, #10]
 8017db4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017db8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017dbc:	1b5b      	subs	r3, r3, r5
 8017dbe:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017dc0:	442b      	add	r3, r5
 8017dc2:	4d05      	ldr	r5, [pc, #20]	; (8017dd8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017dc4:	9503      	str	r5, [sp, #12]
 8017dc6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017dca:	6803      	ldr	r3, [r0, #0]
 8017dcc:	a903      	add	r1, sp, #12
 8017dce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017dd0:	4798      	blx	r3
 8017dd2:	b007      	add	sp, #28
 8017dd4:	bd30      	pop	{r4, r5, pc}
 8017dd6:	bf00      	nop
 8017dd8:	08030180 	.word	0x08030180

08017ddc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017ddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017de0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017de2:	b08a      	sub	sp, #40	; 0x28
 8017de4:	4604      	mov	r4, r0
 8017de6:	460d      	mov	r5, r1
 8017de8:	b113      	cbz	r3, 8017df0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017dea:	790b      	ldrb	r3, [r1, #4]
 8017dec:	2b00      	cmp	r3, #0
 8017dee:	d044      	beq.n	8017e7a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017df0:	f104 0804 	add.w	r8, r4, #4
 8017df4:	4641      	mov	r1, r8
 8017df6:	a803      	add	r0, sp, #12
 8017df8:	f7ff fe0a 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017dfc:	792b      	ldrb	r3, [r5, #4]
 8017dfe:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017e02:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017e06:	b983      	cbnz	r3, 8017e2a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017e08:	892a      	ldrh	r2, [r5, #8]
 8017e0a:	88e9      	ldrh	r1, [r5, #6]
 8017e0c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017e10:	1b92      	subs	r2, r2, r6
 8017e12:	1bc9      	subs	r1, r1, r7
 8017e14:	9301      	str	r3, [sp, #4]
 8017e16:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017e1a:	9300      	str	r3, [sp, #0]
 8017e1c:	b212      	sxth	r2, r2
 8017e1e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017e22:	b209      	sxth	r1, r1
 8017e24:	4640      	mov	r0, r8
 8017e26:	f7f9 fa79 	bl	801131c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017e2a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017e2c:	b329      	cbz	r1, 8017e7a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017e2e:	a805      	add	r0, sp, #20
 8017e30:	f7ff fdee 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e34:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017e38:	792b      	ldrb	r3, [r5, #4]
 8017e3a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017e3c:	f88d 3020 	strb.w	r3, [sp, #32]
 8017e40:	1abf      	subs	r7, r7, r2
 8017e42:	88ea      	ldrh	r2, [r5, #6]
 8017e44:	4417      	add	r7, r2
 8017e46:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017e48:	4417      	add	r7, r2
 8017e4a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017e4e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017e52:	1ab6      	subs	r6, r6, r2
 8017e54:	892a      	ldrh	r2, [r5, #8]
 8017e56:	4416      	add	r6, r2
 8017e58:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017e5a:	4416      	add	r6, r2
 8017e5c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017e60:	4a07      	ldr	r2, [pc, #28]	; (8017e80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017e62:	9207      	str	r2, [sp, #28]
 8017e64:	2600      	movs	r6, #0
 8017e66:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017e6a:	6803      	ldr	r3, [r0, #0]
 8017e6c:	a907      	add	r1, sp, #28
 8017e6e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017e70:	4798      	blx	r3
 8017e72:	792b      	ldrb	r3, [r5, #4]
 8017e74:	b10b      	cbz	r3, 8017e7a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017e76:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017e7a:	b00a      	add	sp, #40	; 0x28
 8017e7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017e80:	08030158 	.word	0x08030158

08017e84 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017e88:	460c      	mov	r4, r1
 8017e8a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017e8c:	b088      	sub	sp, #32
 8017e8e:	4605      	mov	r5, r0
 8017e90:	2900      	cmp	r1, #0
 8017e92:	d06d      	beq.n	8017f70 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017e94:	4668      	mov	r0, sp
 8017e96:	f7ff fdbb 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e9a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017e9c:	88e3      	ldrh	r3, [r4, #6]
 8017e9e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017ea2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017ea6:	440b      	add	r3, r1
 8017ea8:	b21b      	sxth	r3, r3
 8017eaa:	4543      	cmp	r3, r8
 8017eac:	db31      	blt.n	8017f12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017eae:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017eb2:	44c4      	add	ip, r8
 8017eb4:	fa0f fc8c 	sxth.w	ip, ip
 8017eb8:	4563      	cmp	r3, ip
 8017eba:	da2a      	bge.n	8017f12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017ebc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017ebe:	8926      	ldrh	r6, [r4, #8]
 8017ec0:	4416      	add	r6, r2
 8017ec2:	b236      	sxth	r6, r6
 8017ec4:	42be      	cmp	r6, r7
 8017ec6:	db24      	blt.n	8017f12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017ec8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017ecc:	4438      	add	r0, r7
 8017ece:	b200      	sxth	r0, r0
 8017ed0:	4286      	cmp	r6, r0
 8017ed2:	da1e      	bge.n	8017f12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017ed4:	8963      	ldrh	r3, [r4, #10]
 8017ed6:	4419      	add	r1, r3
 8017ed8:	b209      	sxth	r1, r1
 8017eda:	4541      	cmp	r1, r8
 8017edc:	db08      	blt.n	8017ef0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017ede:	4561      	cmp	r1, ip
 8017ee0:	da06      	bge.n	8017ef0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017ee2:	89a3      	ldrh	r3, [r4, #12]
 8017ee4:	441a      	add	r2, r3
 8017ee6:	b212      	sxth	r2, r2
 8017ee8:	42ba      	cmp	r2, r7
 8017eea:	db01      	blt.n	8017ef0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017eec:	4282      	cmp	r2, r0
 8017eee:	db10      	blt.n	8017f12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017ef0:	4b21      	ldr	r3, [pc, #132]	; (8017f78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017ef2:	9304      	str	r3, [sp, #16]
 8017ef4:	2302      	movs	r3, #2
 8017ef6:	f88d 3014 	strb.w	r3, [sp, #20]
 8017efa:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017efc:	2300      	movs	r3, #0
 8017efe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017f02:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017f06:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017f0a:	6803      	ldr	r3, [r0, #0]
 8017f0c:	a904      	add	r1, sp, #16
 8017f0e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017f10:	4798      	blx	r3
 8017f12:	1d29      	adds	r1, r5, #4
 8017f14:	a802      	add	r0, sp, #8
 8017f16:	f7ff fd7b 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f1a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017f1e:	88e0      	ldrh	r0, [r4, #6]
 8017f20:	7921      	ldrb	r1, [r4, #4]
 8017f22:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017f26:	8922      	ldrh	r2, [r4, #8]
 8017f28:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017f2a:	f88d 1014 	strb.w	r1, [sp, #20]
 8017f2e:	eba3 0808 	sub.w	r8, r3, r8
 8017f32:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017f36:	1bdf      	subs	r7, r3, r7
 8017f38:	b2bb      	uxth	r3, r7
 8017f3a:	fa1f f888 	uxth.w	r8, r8
 8017f3e:	8967      	ldrh	r7, [r4, #10]
 8017f40:	89a4      	ldrh	r4, [r4, #12]
 8017f42:	4440      	add	r0, r8
 8017f44:	4460      	add	r0, ip
 8017f46:	441a      	add	r2, r3
 8017f48:	44b8      	add	r8, r7
 8017f4a:	4423      	add	r3, r4
 8017f4c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017f50:	4433      	add	r3, r6
 8017f52:	4432      	add	r2, r6
 8017f54:	44e0      	add	r8, ip
 8017f56:	4c09      	ldr	r4, [pc, #36]	; (8017f7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017f58:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017f5a:	9404      	str	r4, [sp, #16]
 8017f5c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017f60:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017f64:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017f68:	6803      	ldr	r3, [r0, #0]
 8017f6a:	a904      	add	r1, sp, #16
 8017f6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017f6e:	4798      	blx	r3
 8017f70:	b008      	add	sp, #32
 8017f72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017f76:	bf00      	nop
 8017f78:	08030158 	.word	0x08030158
 8017f7c:	0803016c 	.word	0x0803016c

08017f80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017f80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017f82:	4604      	mov	r4, r0
 8017f84:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017f88:	3201      	adds	r2, #1
 8017f8a:	d112      	bne.n	8017fb2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017f8c:	6803      	ldr	r3, [r0, #0]
 8017f8e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017f92:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017f96:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017f9a:	2500      	movs	r5, #0
 8017f9c:	9500      	str	r5, [sp, #0]
 8017f9e:	466d      	mov	r5, sp
 8017fa0:	4629      	mov	r1, r5
 8017fa2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017fa6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017fa8:	4798      	blx	r3
 8017faa:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017fae:	e884 0003 	stmia.w	r4, {r0, r1}
 8017fb2:	4620      	mov	r0, r4
 8017fb4:	b003      	add	sp, #12
 8017fb6:	bd30      	pop	{r4, r5, pc}

08017fb8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017fb8:	b513      	push	{r0, r1, r4, lr}
 8017fba:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017fbe:	3301      	adds	r3, #1
 8017fc0:	4604      	mov	r4, r0
 8017fc2:	d109      	bne.n	8017fd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017fc4:	4601      	mov	r1, r0
 8017fc6:	4668      	mov	r0, sp
 8017fc8:	f7ff fd22 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017fcc:	f8bd 3000 	ldrh.w	r3, [sp]
 8017fd0:	8423      	strh	r3, [r4, #32]
 8017fd2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017fd6:	8463      	strh	r3, [r4, #34]	; 0x22
 8017fd8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017fdc:	b002      	add	sp, #8
 8017fde:	bd10      	pop	{r4, pc}

08017fe0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017fe0:	b513      	push	{r0, r1, r4, lr}
 8017fe2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017fe6:	3301      	adds	r3, #1
 8017fe8:	4604      	mov	r4, r0
 8017fea:	d109      	bne.n	8018000 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017fec:	4601      	mov	r1, r0
 8017fee:	4668      	mov	r0, sp
 8017ff0:	f7ff fd0e 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017ff4:	f8bd 3000 	ldrh.w	r3, [sp]
 8017ff8:	8423      	strh	r3, [r4, #32]
 8017ffa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017ffe:	8463      	strh	r3, [r4, #34]	; 0x22
 8018000:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8018004:	b002      	add	sp, #8
 8018006:	bd10      	pop	{r4, pc}

08018008 <_ZN8touchgfx6ScreenC1Ev>:
 8018008:	b570      	push	{r4, r5, r6, lr}
 801800a:	4605      	mov	r5, r0
 801800c:	4b16      	ldr	r3, [pc, #88]	; (8018068 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801800e:	f845 3b04 	str.w	r3, [r5], #4
 8018012:	2300      	movs	r3, #0
 8018014:	8103      	strh	r3, [r0, #8]
 8018016:	8143      	strh	r3, [r0, #10]
 8018018:	8183      	strh	r3, [r0, #12]
 801801a:	81c3      	strh	r3, [r0, #14]
 801801c:	8203      	strh	r3, [r0, #16]
 801801e:	8243      	strh	r3, [r0, #18]
 8018020:	8283      	strh	r3, [r0, #20]
 8018022:	82c3      	strh	r3, [r0, #22]
 8018024:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8018028:	6203      	str	r3, [r0, #32]
 801802a:	8483      	strh	r3, [r0, #36]	; 0x24
 801802c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801802e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8018032:	4a0e      	ldr	r2, [pc, #56]	; (801806c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8018034:	6343      	str	r3, [r0, #52]	; 0x34
 8018036:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801803a:	4b0d      	ldr	r3, [pc, #52]	; (8018070 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801803c:	6042      	str	r2, [r0, #4]
 801803e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018042:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8018044:	4a0b      	ldr	r2, [pc, #44]	; (8018074 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8018046:	4604      	mov	r4, r0
 8018048:	2101      	movs	r1, #1
 801804a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801804e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8018052:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018056:	4628      	mov	r0, r5
 8018058:	4798      	blx	r3
 801805a:	6863      	ldr	r3, [r4, #4]
 801805c:	4628      	mov	r0, r5
 801805e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018060:	4631      	mov	r1, r6
 8018062:	4798      	blx	r3
 8018064:	4620      	mov	r0, r4
 8018066:	bd70      	pop	{r4, r5, r6, pc}
 8018068:	08030194 	.word	0x08030194
 801806c:	0802f9f8 	.word	0x0802f9f8
 8018070:	200138aa 	.word	0x200138aa
 8018074:	200138a8 	.word	0x200138a8

08018078 <_ZN8touchgfx6Screen4drawEv>:
 8018078:	b507      	push	{r0, r1, r2, lr}
 801807a:	4b09      	ldr	r3, [pc, #36]	; (80180a0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801807c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018080:	4b08      	ldr	r3, [pc, #32]	; (80180a4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8018082:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018086:	f9b3 3000 	ldrsh.w	r3, [r3]
 801808a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801808e:	6803      	ldr	r3, [r0, #0]
 8018090:	2100      	movs	r1, #0
 8018092:	9100      	str	r1, [sp, #0]
 8018094:	689b      	ldr	r3, [r3, #8]
 8018096:	4669      	mov	r1, sp
 8018098:	4798      	blx	r3
 801809a:	b003      	add	sp, #12
 801809c:	f85d fb04 	ldr.w	pc, [sp], #4
 80180a0:	200138a8 	.word	0x200138a8
 80180a4:	200138aa 	.word	0x200138aa

080180a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80180a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180ac:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80180b0:	2b00      	cmp	r3, #0
 80180b2:	b089      	sub	sp, #36	; 0x24
 80180b4:	4680      	mov	r8, r0
 80180b6:	460c      	mov	r4, r1
 80180b8:	4615      	mov	r5, r2
 80180ba:	dd0e      	ble.n	80180da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80180bc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80180c0:	2b00      	cmp	r3, #0
 80180c2:	dd0a      	ble.n	80180da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80180c4:	4628      	mov	r0, r5
 80180c6:	f7ff ff5b 	bl	8017f80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80180ca:	4621      	mov	r1, r4
 80180cc:	f7fe fa3d 	bl	801654a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80180d0:	69eb      	ldr	r3, [r5, #28]
 80180d2:	b928      	cbnz	r0, 80180e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80180d4:	461d      	mov	r5, r3
 80180d6:	2b00      	cmp	r3, #0
 80180d8:	d1f4      	bne.n	80180c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80180da:	b009      	add	sp, #36	; 0x24
 80180dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180e0:	ae04      	add	r6, sp, #16
 80180e2:	2b00      	cmp	r3, #0
 80180e4:	f000 80b5 	beq.w	8018252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80180e8:	682b      	ldr	r3, [r5, #0]
 80180ea:	4629      	mov	r1, r5
 80180ec:	68db      	ldr	r3, [r3, #12]
 80180ee:	a802      	add	r0, sp, #8
 80180f0:	4798      	blx	r3
 80180f2:	4628      	mov	r0, r5
 80180f4:	f7ff ff60 	bl	8017fb8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80180f8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80180fc:	4407      	add	r7, r0
 80180fe:	4628      	mov	r0, r5
 8018100:	f7ff ff6e 	bl	8017fe0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018104:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018108:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801810c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018110:	4418      	add	r0, r3
 8018112:	4621      	mov	r1, r4
 8018114:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8018118:	f8ad 0012 	strh.w	r0, [sp, #18]
 801811c:	b23f      	sxth	r7, r7
 801811e:	4630      	mov	r0, r6
 8018120:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018124:	f8ad 7010 	strh.w	r7, [sp, #16]
 8018128:	f7f9 f9dc 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801812c:	4628      	mov	r0, r5
 801812e:	f7ff ff27 	bl	8017f80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018132:	4602      	mov	r2, r0
 8018134:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018138:	ab06      	add	r3, sp, #24
 801813a:	e883 0003 	stmia.w	r3, {r0, r1}
 801813e:	4611      	mov	r1, r2
 8018140:	4618      	mov	r0, r3
 8018142:	f7f9 f9cf 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 8018146:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801814a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801814e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8018152:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8018156:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801815a:	4299      	cmp	r1, r3
 801815c:	d10b      	bne.n	8018176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801815e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018162:	4552      	cmp	r2, sl
 8018164:	d107      	bne.n	8018176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018166:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801816a:	455a      	cmp	r2, fp
 801816c:	d103      	bne.n	8018176 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801816e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8018172:	454a      	cmp	r2, r9
 8018174:	d06d      	beq.n	8018252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018176:	f1bb 0f00 	cmp.w	fp, #0
 801817a:	dd65      	ble.n	8018248 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801817c:	f1b9 0f00 	cmp.w	r9, #0
 8018180:	dd62      	ble.n	8018248 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018182:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018186:	fa1f f08a 	uxth.w	r0, sl
 801818a:	4552      	cmp	r2, sl
 801818c:	9000      	str	r0, [sp, #0]
 801818e:	da12      	bge.n	80181b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018190:	9301      	str	r3, [sp, #4]
 8018192:	9b00      	ldr	r3, [sp, #0]
 8018194:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018198:	f8ad 2012 	strh.w	r2, [sp, #18]
 801819c:	1a9a      	subs	r2, r3, r2
 801819e:	f8ad 1010 	strh.w	r1, [sp, #16]
 80181a2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80181a6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80181aa:	69ea      	ldr	r2, [r5, #28]
 80181ac:	4631      	mov	r1, r6
 80181ae:	4640      	mov	r0, r8
 80181b0:	f7ff ff7a 	bl	80180a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80181b4:	9b01      	ldr	r3, [sp, #4]
 80181b6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80181ba:	429a      	cmp	r2, r3
 80181bc:	b29f      	uxth	r7, r3
 80181be:	da0d      	bge.n	80181dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80181c0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80181c4:	1aba      	subs	r2, r7, r2
 80181c6:	f8ad a012 	strh.w	sl, [sp, #18]
 80181ca:	f8ad 2014 	strh.w	r2, [sp, #20]
 80181ce:	f8ad 9016 	strh.w	r9, [sp, #22]
 80181d2:	69ea      	ldr	r2, [r5, #28]
 80181d4:	4631      	mov	r1, r6
 80181d6:	4640      	mov	r0, r8
 80181d8:	f7ff ff66 	bl	80180a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80181dc:	8822      	ldrh	r2, [r4, #0]
 80181de:	88a3      	ldrh	r3, [r4, #4]
 80181e0:	445f      	add	r7, fp
 80181e2:	4413      	add	r3, r2
 80181e4:	b29b      	uxth	r3, r3
 80181e6:	b2bf      	uxth	r7, r7
 80181e8:	b23a      	sxth	r2, r7
 80181ea:	b219      	sxth	r1, r3
 80181ec:	4291      	cmp	r1, r2
 80181ee:	dd0d      	ble.n	801820c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80181f0:	1bdb      	subs	r3, r3, r7
 80181f2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80181f6:	f8ad a012 	strh.w	sl, [sp, #18]
 80181fa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80181fe:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018202:	69ea      	ldr	r2, [r5, #28]
 8018204:	4631      	mov	r1, r6
 8018206:	4640      	mov	r0, r8
 8018208:	f7ff ff4e 	bl	80180a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801820c:	88e2      	ldrh	r2, [r4, #6]
 801820e:	8863      	ldrh	r3, [r4, #2]
 8018210:	4413      	add	r3, r2
 8018212:	9a00      	ldr	r2, [sp, #0]
 8018214:	444a      	add	r2, r9
 8018216:	b29b      	uxth	r3, r3
 8018218:	fa1f f982 	uxth.w	r9, r2
 801821c:	fa0f f289 	sxth.w	r2, r9
 8018220:	b219      	sxth	r1, r3
 8018222:	428a      	cmp	r2, r1
 8018224:	da15      	bge.n	8018252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018226:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801822a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801822e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8018232:	eba3 0309 	sub.w	r3, r3, r9
 8018236:	f8ad 0010 	strh.w	r0, [sp, #16]
 801823a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801823e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018242:	69ea      	ldr	r2, [r5, #28]
 8018244:	4631      	mov	r1, r6
 8018246:	e001      	b.n	801824c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018248:	69ea      	ldr	r2, [r5, #28]
 801824a:	4621      	mov	r1, r4
 801824c:	4640      	mov	r0, r8
 801824e:	f7ff ff2b 	bl	80180a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018252:	4628      	mov	r0, r5
 8018254:	f7ff fe94 	bl	8017f80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018258:	6861      	ldr	r1, [r4, #4]
 801825a:	4602      	mov	r2, r0
 801825c:	6820      	ldr	r0, [r4, #0]
 801825e:	4633      	mov	r3, r6
 8018260:	c303      	stmia	r3!, {r0, r1}
 8018262:	4611      	mov	r1, r2
 8018264:	4630      	mov	r0, r6
 8018266:	f7f9 f93d 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801826a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801826e:	2b00      	cmp	r3, #0
 8018270:	f77f af33 	ble.w	80180da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018274:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018278:	2b00      	cmp	r3, #0
 801827a:	f77f af2e 	ble.w	80180da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801827e:	4628      	mov	r0, r5
 8018280:	f7ff fe9a 	bl	8017fb8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018284:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018288:	1a18      	subs	r0, r3, r0
 801828a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801828e:	4628      	mov	r0, r5
 8018290:	f7ff fea6 	bl	8017fe0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018294:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018298:	1a18      	subs	r0, r3, r0
 801829a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801829e:	682b      	ldr	r3, [r5, #0]
 80182a0:	4631      	mov	r1, r6
 80182a2:	689b      	ldr	r3, [r3, #8]
 80182a4:	4628      	mov	r0, r5
 80182a6:	4798      	blx	r3
 80182a8:	e717      	b.n	80180da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080182aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80182aa:	b570      	push	{r4, r5, r6, lr}
 80182ac:	460c      	mov	r4, r1
 80182ae:	b086      	sub	sp, #24
 80182b0:	1d06      	adds	r6, r0, #4
 80182b2:	2300      	movs	r3, #0
 80182b4:	4631      	mov	r1, r6
 80182b6:	4605      	mov	r5, r0
 80182b8:	a802      	add	r0, sp, #8
 80182ba:	9301      	str	r3, [sp, #4]
 80182bc:	f7ff fba8 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80182c0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80182c4:	8822      	ldrh	r2, [r4, #0]
 80182c6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80182ca:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80182ce:	f8ad 0014 	strh.w	r0, [sp, #20]
 80182d2:	1ad2      	subs	r2, r2, r3
 80182d4:	8863      	ldrh	r3, [r4, #2]
 80182d6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80182da:	1a5b      	subs	r3, r3, r1
 80182dc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80182e0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80182e4:	aa01      	add	r2, sp, #4
 80182e6:	a904      	add	r1, sp, #16
 80182e8:	4630      	mov	r0, r6
 80182ea:	f8ad 3012 	strh.w	r3, [sp, #18]
 80182ee:	f7f9 f9d1 	bl	8011694 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80182f2:	9a01      	ldr	r2, [sp, #4]
 80182f4:	b11a      	cbz	r2, 80182fe <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80182f6:	4621      	mov	r1, r4
 80182f8:	4628      	mov	r0, r5
 80182fa:	f7ff fed5 	bl	80180a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80182fe:	b006      	add	sp, #24
 8018300:	bd70      	pop	{r4, r5, r6, pc}

08018302 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8018302:	b530      	push	{r4, r5, lr}
 8018304:	4602      	mov	r2, r0
 8018306:	4604      	mov	r4, r0
 8018308:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801830c:	b085      	sub	sp, #20
 801830e:	460d      	mov	r5, r1
 8018310:	6851      	ldr	r1, [r2, #4]
 8018312:	466b      	mov	r3, sp
 8018314:	c303      	stmia	r3!, {r0, r1}
 8018316:	4629      	mov	r1, r5
 8018318:	4668      	mov	r0, sp
 801831a:	f7f9 f8e3 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801831e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8018322:	b12b      	cbz	r3, 8018330 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8018324:	4669      	mov	r1, sp
 8018326:	4620      	mov	r0, r4
 8018328:	f7ff ffbf 	bl	80182aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801832c:	b005      	add	sp, #20
 801832e:	bd30      	pop	{r4, r5, pc}
 8018330:	3404      	adds	r4, #4
 8018332:	4621      	mov	r1, r4
 8018334:	a802      	add	r0, sp, #8
 8018336:	f7ff fb6b 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801833a:	f8bd 3000 	ldrh.w	r3, [sp]
 801833e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8018342:	1a9b      	subs	r3, r3, r2
 8018344:	f8ad 3000 	strh.w	r3, [sp]
 8018348:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801834c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018350:	4669      	mov	r1, sp
 8018352:	1a9b      	subs	r3, r3, r2
 8018354:	4620      	mov	r0, r4
 8018356:	f8ad 3002 	strh.w	r3, [sp, #2]
 801835a:	f7f9 f962 	bl	8011622 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801835e:	e7e5      	b.n	801832c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018360 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018360:	680a      	ldr	r2, [r1, #0]
 8018362:	460b      	mov	r3, r1
 8018364:	6992      	ldr	r2, [r2, #24]
 8018366:	1d01      	adds	r1, r0, #4
 8018368:	4618      	mov	r0, r3
 801836a:	4710      	bx	r2

0801836c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801836c:	4298      	cmp	r0, r3
 801836e:	d200      	bcs.n	8018372 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018370:	b913      	cbnz	r3, 8018378 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8018372:	440a      	add	r2, r1
 8018374:	b210      	sxth	r0, r2
 8018376:	4770      	bx	lr
 8018378:	ee07 0a90 	vmov	s15, r0
 801837c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018380:	ee07 3a90 	vmov	s15, r3
 8018384:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018388:	eddf 4a15 	vldr	s9, [pc, #84]	; 80183e0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801838c:	eddf 5a15 	vldr	s11, [pc, #84]	; 80183e4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018390:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018394:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018398:	ee37 7a66 	vsub.f32	s14, s14, s13
 801839c:	ee07 2a90 	vmov	s15, r2
 80183a0:	eee7 5a24 	vfma.f32	s11, s14, s9
 80183a4:	ee27 5a07 	vmul.f32	s10, s14, s14
 80183a8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80183ac:	eee5 6a25 	vfma.f32	s13, s10, s11
 80183b0:	ee07 1a90 	vmov	s15, r1
 80183b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80183b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80183bc:	eee6 7a26 	vfma.f32	s15, s12, s13
 80183c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80183c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80183c8:	bfcc      	ite	gt
 80183ca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80183ce:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80183d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80183d6:	ee17 3a90 	vmov	r3, s15
 80183da:	b218      	sxth	r0, r3
 80183dc:	4770      	bx	lr
 80183de:	bf00      	nop
 80183e0:	402ce6b0 	.word	0x402ce6b0
 80183e4:	3fd9cd60 	.word	0x3fd9cd60

080183e8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80183e8:	4298      	cmp	r0, r3
 80183ea:	d200      	bcs.n	80183ee <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80183ec:	b913      	cbnz	r3, 80183f4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80183ee:	440a      	add	r2, r1
 80183f0:	b210      	sxth	r0, r2
 80183f2:	4770      	bx	lr
 80183f4:	ee07 0a90 	vmov	s15, r0
 80183f8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80183fc:	ee07 3a90 	vmov	s15, r3
 8018400:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018404:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018408:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801840c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018410:	ee07 2a90 	vmov	s15, r2
 8018414:	ee67 5a07 	vmul.f32	s11, s14, s14
 8018418:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801841c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018420:	ee07 1a90 	vmov	s15, r1
 8018424:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018428:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801842c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018430:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018438:	bfcc      	ite	gt
 801843a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801843e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018442:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018446:	ee17 3a90 	vmov	r3, s15
 801844a:	b218      	sxth	r0, r3
 801844c:	4770      	bx	lr

0801844e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801844e:	4298      	cmp	r0, r3
 8018450:	d200      	bcs.n	8018454 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8018452:	b913      	cbnz	r3, 801845a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8018454:	440a      	add	r2, r1
 8018456:	b210      	sxth	r0, r2
 8018458:	4770      	bx	lr
 801845a:	ee07 2a90 	vmov	s15, r2
 801845e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018462:	ee07 0a90 	vmov	s15, r0
 8018466:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801846a:	ee67 7a27 	vmul.f32	s15, s14, s15
 801846e:	ee07 3a10 	vmov	s14, r3
 8018472:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018476:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801847a:	ee07 1a90 	vmov	s15, r1
 801847e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018482:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018486:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801848a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801848e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018492:	bfcc      	ite	gt
 8018494:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018498:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801849c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80184a0:	ee17 3a90 	vmov	r3, s15
 80184a4:	b218      	sxth	r0, r3
 80184a6:	4770      	bx	lr

080184a8 <_ZN8touchgfx12TextProviderC1Ev>:
 80184a8:	b538      	push	{r3, r4, r5, lr}
 80184aa:	2500      	movs	r5, #0
 80184ac:	2302      	movs	r3, #2
 80184ae:	4604      	mov	r4, r0
 80184b0:	e9c0 5500 	strd	r5, r5, [r0]
 80184b4:	7403      	strb	r3, [r0, #16]
 80184b6:	6145      	str	r5, [r0, #20]
 80184b8:	7605      	strb	r5, [r0, #24]
 80184ba:	83c5      	strh	r5, [r0, #30]
 80184bc:	8405      	strh	r5, [r0, #32]
 80184be:	86c5      	strh	r5, [r0, #54]	; 0x36
 80184c0:	8705      	strh	r5, [r0, #56]	; 0x38
 80184c2:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80184c4:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80184c8:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80184cc:	220e      	movs	r2, #14
 80184ce:	4629      	mov	r1, r5
 80184d0:	304c      	adds	r0, #76	; 0x4c
 80184d2:	f013 f9e6 	bl	802b8a2 <memset>
 80184d6:	2301      	movs	r3, #1
 80184d8:	4620      	mov	r0, r4
 80184da:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80184de:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80184e2:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80184e6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80184ea:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80184ee:	f7f0 fa4f 	bl	8008990 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80184f2:	4620      	mov	r0, r4
 80184f4:	bd38      	pop	{r3, r4, r5, pc}

080184f6 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80184f6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80184f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184fc:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80184fe:	fab0 f080 	clz	r0, r0
 8018502:	0940      	lsrs	r0, r0, #5
 8018504:	4770      	bx	lr

08018506 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018506:	b530      	push	{r4, r5, lr}
 8018508:	2500      	movs	r5, #0
 801850a:	2401      	movs	r4, #1
 801850c:	6843      	ldr	r3, [r0, #4]
 801850e:	b913      	cbnz	r3, 8018516 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018510:	6803      	ldr	r3, [r0, #0]
 8018512:	b313      	cbz	r3, 801855a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018514:	6043      	str	r3, [r0, #4]
 8018516:	7e03      	ldrb	r3, [r0, #24]
 8018518:	b143      	cbz	r3, 801852c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801851a:	6943      	ldr	r3, [r0, #20]
 801851c:	b12b      	cbz	r3, 801852a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801851e:	881a      	ldrh	r2, [r3, #0]
 8018520:	b11a      	cbz	r2, 801852a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018522:	1c9a      	adds	r2, r3, #2
 8018524:	6142      	str	r2, [r0, #20]
 8018526:	8818      	ldrh	r0, [r3, #0]
 8018528:	bd30      	pop	{r4, r5, pc}
 801852a:	7605      	strb	r5, [r0, #24]
 801852c:	6843      	ldr	r3, [r0, #4]
 801852e:	8819      	ldrh	r1, [r3, #0]
 8018530:	b199      	cbz	r1, 801855a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018532:	1c9a      	adds	r2, r3, #2
 8018534:	2902      	cmp	r1, #2
 8018536:	6042      	str	r2, [r0, #4]
 8018538:	d1f5      	bne.n	8018526 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801853a:	7c03      	ldrb	r3, [r0, #16]
 801853c:	2b01      	cmp	r3, #1
 801853e:	d8e5      	bhi.n	801850c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018540:	1c5a      	adds	r2, r3, #1
 8018542:	3302      	adds	r3, #2
 8018544:	7402      	strb	r2, [r0, #16]
 8018546:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801854a:	6143      	str	r3, [r0, #20]
 801854c:	2b00      	cmp	r3, #0
 801854e:	d0dd      	beq.n	801850c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018550:	881b      	ldrh	r3, [r3, #0]
 8018552:	2b00      	cmp	r3, #0
 8018554:	d0da      	beq.n	801850c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018556:	7604      	strb	r4, [r0, #24]
 8018558:	e7d8      	b.n	801850c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801855a:	2000      	movs	r0, #0
 801855c:	e7e4      	b.n	8018528 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801855e:	b430      	push	{r4, r5}
 8018560:	6001      	str	r1, [r0, #0]
 8018562:	2100      	movs	r1, #0
 8018564:	6041      	str	r1, [r0, #4]
 8018566:	6815      	ldr	r5, [r2, #0]
 8018568:	6085      	str	r5, [r0, #8]
 801856a:	6852      	ldr	r2, [r2, #4]
 801856c:	6443      	str	r3, [r0, #68]	; 0x44
 801856e:	9b02      	ldr	r3, [sp, #8]
 8018570:	60c2      	str	r2, [r0, #12]
 8018572:	7401      	strb	r1, [r0, #16]
 8018574:	6141      	str	r1, [r0, #20]
 8018576:	7601      	strb	r1, [r0, #24]
 8018578:	8701      	strh	r1, [r0, #56]	; 0x38
 801857a:	8401      	strh	r1, [r0, #32]
 801857c:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018580:	6483      	str	r3, [r0, #72]	; 0x48
 8018582:	bc30      	pop	{r4, r5}
 8018584:	f7f0 ba04 	b.w	8008990 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018588 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018588:	b408      	push	{r3}
 801858a:	b510      	push	{r4, lr}
 801858c:	b085      	sub	sp, #20
 801858e:	ac07      	add	r4, sp, #28
 8018590:	f854 3b04 	ldr.w	r3, [r4], #4
 8018594:	9300      	str	r3, [sp, #0]
 8018596:	4613      	mov	r3, r2
 8018598:	4622      	mov	r2, r4
 801859a:	9403      	str	r4, [sp, #12]
 801859c:	f7ff ffdf 	bl	801855e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80185a0:	b005      	add	sp, #20
 80185a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80185a6:	b001      	add	sp, #4
 80185a8:	4770      	bx	lr

080185aa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80185aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80185ac:	4605      	mov	r5, r0
 80185ae:	4608      	mov	r0, r1
 80185b0:	b1e9      	cbz	r1, 80185ee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80185b2:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80185b6:	460b      	mov	r3, r1
 80185b8:	f101 0708 	add.w	r7, r1, #8
 80185bc:	4622      	mov	r2, r4
 80185be:	6818      	ldr	r0, [r3, #0]
 80185c0:	6859      	ldr	r1, [r3, #4]
 80185c2:	4626      	mov	r6, r4
 80185c4:	c603      	stmia	r6!, {r0, r1}
 80185c6:	3308      	adds	r3, #8
 80185c8:	42bb      	cmp	r3, r7
 80185ca:	4634      	mov	r4, r6
 80185cc:	d1f7      	bne.n	80185be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80185ce:	6818      	ldr	r0, [r3, #0]
 80185d0:	6030      	str	r0, [r6, #0]
 80185d2:	889b      	ldrh	r3, [r3, #4]
 80185d4:	80b3      	strh	r3, [r6, #4]
 80185d6:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80185da:	015b      	lsls	r3, r3, #5
 80185dc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80185e0:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80185e4:	430b      	orrs	r3, r1
 80185e6:	425b      	negs	r3, r3
 80185e8:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80185ec:	4610      	mov	r0, r2
 80185ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

080185f0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80185f0:	b538      	push	{r3, r4, r5, lr}
 80185f2:	460c      	mov	r4, r1
 80185f4:	6811      	ldr	r1, [r2, #0]
 80185f6:	4610      	mov	r0, r2
 80185f8:	68cd      	ldr	r5, [r1, #12]
 80185fa:	4619      	mov	r1, r3
 80185fc:	47a8      	blx	r5
 80185fe:	2800      	cmp	r0, #0
 8018600:	bf08      	it	eq
 8018602:	4620      	moveq	r0, r4
 8018604:	bd38      	pop	{r3, r4, r5, pc}
	...

08018608 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801860a:	4604      	mov	r4, r0
 801860c:	4615      	mov	r5, r2
 801860e:	4608      	mov	r0, r1
 8018610:	b93a      	cbnz	r2, 8018622 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8018612:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018616:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801861a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801861e:	4628      	mov	r0, r5
 8018620:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018622:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018626:	8893      	ldrh	r3, [r2, #4]
 8018628:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801862c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018630:	79ee      	ldrb	r6, [r5, #7]
 8018632:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018636:	4316      	orrs	r6, r2
 8018638:	19da      	adds	r2, r3, r7
 801863a:	b291      	uxth	r1, r2
 801863c:	291d      	cmp	r1, #29
 801863e:	b2b7      	uxth	r7, r6
 8018640:	d87a      	bhi.n	8018738 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018642:	2201      	movs	r2, #1
 8018644:	408a      	lsls	r2, r1
 8018646:	4975      	ldr	r1, [pc, #468]	; (801881c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018648:	420a      	tst	r2, r1
 801864a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801864e:	d12d      	bne.n	80186ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018650:	f412 7f60 	tst.w	r2, #896	; 0x380
 8018654:	d070      	beq.n	8018738 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018656:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801865a:	462b      	mov	r3, r5
 801865c:	f105 0e08 	add.w	lr, r5, #8
 8018660:	4615      	mov	r5, r2
 8018662:	6818      	ldr	r0, [r3, #0]
 8018664:	6859      	ldr	r1, [r3, #4]
 8018666:	4694      	mov	ip, r2
 8018668:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801866c:	3308      	adds	r3, #8
 801866e:	4573      	cmp	r3, lr
 8018670:	4662      	mov	r2, ip
 8018672:	d1f6      	bne.n	8018662 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018674:	6818      	ldr	r0, [r3, #0]
 8018676:	f8cc 0000 	str.w	r0, [ip]
 801867a:	889b      	ldrh	r3, [r3, #4]
 801867c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018680:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018684:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018688:	b2b3      	uxth	r3, r6
 801868a:	1aca      	subs	r2, r1, r3
 801868c:	b292      	uxth	r2, r2
 801868e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018692:	10d2      	asrs	r2, r2, #3
 8018694:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018698:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801869c:	4302      	orrs	r2, r0
 801869e:	1bcf      	subs	r7, r1, r7
 80186a0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80186a4:	1afb      	subs	r3, r7, r3
 80186a6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80186aa:	e7b8      	b.n	801861e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80186ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80186ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80186b2:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80186b4:	f640 6333 	movw	r3, #3635	; 0xe33
 80186b8:	4299      	cmp	r1, r3
 80186ba:	d110      	bne.n	80186de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80186bc:	6803      	ldr	r3, [r0, #0]
 80186be:	68db      	ldr	r3, [r3, #12]
 80186c0:	4798      	blx	r3
 80186c2:	7b41      	ldrb	r1, [r0, #13]
 80186c4:	00cb      	lsls	r3, r1, #3
 80186c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80186ca:	7a03      	ldrb	r3, [r0, #8]
 80186cc:	0648      	lsls	r0, r1, #25
 80186ce:	ea43 0302 	orr.w	r3, r3, r2
 80186d2:	bf44      	itt	mi
 80186d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80186d8:	b21b      	sxthmi	r3, r3
 80186da:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80186de:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80186e2:	443b      	add	r3, r7
 80186e4:	4433      	add	r3, r6
 80186e6:	b29b      	uxth	r3, r3
 80186e8:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80186ec:	462a      	mov	r2, r5
 80186ee:	f105 0c08 	add.w	ip, r5, #8
 80186f2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80186f6:	4635      	mov	r5, r6
 80186f8:	6810      	ldr	r0, [r2, #0]
 80186fa:	6851      	ldr	r1, [r2, #4]
 80186fc:	4637      	mov	r7, r6
 80186fe:	c703      	stmia	r7!, {r0, r1}
 8018700:	3208      	adds	r2, #8
 8018702:	4562      	cmp	r2, ip
 8018704:	463e      	mov	r6, r7
 8018706:	d1f7      	bne.n	80186f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018708:	6810      	ldr	r0, [r2, #0]
 801870a:	6038      	str	r0, [r7, #0]
 801870c:	8892      	ldrh	r2, [r2, #4]
 801870e:	80ba      	strh	r2, [r7, #4]
 8018710:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018714:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018718:	10db      	asrs	r3, r3, #3
 801871a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801871e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018722:	4313      	orrs	r3, r2
 8018724:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018728:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801872c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018730:	1a9b      	subs	r3, r3, r2
 8018732:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018736:	e772      	b.n	801861e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018738:	f023 0204 	bic.w	r2, r3, #4
 801873c:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018740:	428a      	cmp	r2, r1
 8018742:	d003      	beq.n	801874c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8018744:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018748:	4293      	cmp	r3, r2
 801874a:	d120      	bne.n	801878e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801874c:	3b01      	subs	r3, #1
 801874e:	4602      	mov	r2, r0
 8018750:	b29b      	uxth	r3, r3
 8018752:	4629      	mov	r1, r5
 8018754:	4620      	mov	r0, r4
 8018756:	f7ff ff4b 	bl	80185f0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801875a:	7b41      	ldrb	r1, [r0, #13]
 801875c:	00cb      	lsls	r3, r1, #3
 801875e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018762:	7a03      	ldrb	r3, [r0, #8]
 8018764:	0649      	lsls	r1, r1, #25
 8018766:	ea43 0302 	orr.w	r3, r3, r2
 801876a:	bf44      	itt	mi
 801876c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018770:	b21b      	sxthmi	r3, r3
 8018772:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018776:	7b6b      	ldrb	r3, [r5, #13]
 8018778:	7aaa      	ldrb	r2, [r5, #10]
 801877a:	005b      	lsls	r3, r3, #1
 801877c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018780:	4313      	orrs	r3, r2
 8018782:	115a      	asrs	r2, r3, #5
 8018784:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018788:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801878c:	e036      	b.n	80187fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801878e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018792:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018796:	7a2a      	ldrb	r2, [r5, #8]
 8018798:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801879c:	ea42 0201 	orr.w	r2, r2, r1
 80187a0:	bf1c      	itt	ne
 80187a2:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80187a6:	b212      	sxthne	r2, r2
 80187a8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80187ac:	f640 6109 	movw	r1, #3593	; 0xe09
 80187b0:	f023 0210 	bic.w	r2, r3, #16
 80187b4:	428a      	cmp	r2, r1
 80187b6:	d003      	beq.n	80187c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80187b8:	f640 6213 	movw	r2, #3603	; 0xe13
 80187bc:	4293      	cmp	r3, r2
 80187be:	d12a      	bne.n	8018816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80187c0:	7b6e      	ldrb	r6, [r5, #13]
 80187c2:	0076      	lsls	r6, r6, #1
 80187c4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80187c8:	7aae      	ldrb	r6, [r5, #10]
 80187ca:	4316      	orrs	r6, r2
 80187cc:	f640 6213 	movw	r2, #3603	; 0xe13
 80187d0:	4293      	cmp	r3, r2
 80187d2:	bf18      	it	ne
 80187d4:	f103 33ff 	addne.w	r3, r3, #4294967295
 80187d8:	4602      	mov	r2, r0
 80187da:	bf14      	ite	ne
 80187dc:	b29b      	uxthne	r3, r3
 80187de:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80187e2:	4629      	mov	r1, r5
 80187e4:	4620      	mov	r0, r4
 80187e6:	f7ff ff03 	bl	80185f0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80187ea:	7b43      	ldrb	r3, [r0, #13]
 80187ec:	7a82      	ldrb	r2, [r0, #10]
 80187ee:	005b      	lsls	r3, r3, #1
 80187f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80187f4:	4313      	orrs	r3, r2
 80187f6:	1af6      	subs	r6, r6, r3
 80187f8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80187fc:	7b69      	ldrb	r1, [r5, #13]
 80187fe:	00cb      	lsls	r3, r1, #3
 8018800:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018804:	7a2b      	ldrb	r3, [r5, #8]
 8018806:	4313      	orrs	r3, r2
 8018808:	064a      	lsls	r2, r1, #25
 801880a:	bf44      	itt	mi
 801880c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018810:	b21b      	sxthmi	r3, r3
 8018812:	1bdb      	subs	r3, r3, r7
 8018814:	e747      	b.n	80186a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018816:	2300      	movs	r3, #0
 8018818:	e7b6      	b.n	8018788 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801881a:	bf00      	nop
 801881c:	3fc00079 	.word	0x3fc00079

08018820 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018820:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018824:	4604      	mov	r4, r0
 8018826:	b942      	cbnz	r2, 801883a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018828:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801882c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018830:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018834:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018838:	e047      	b.n	80188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801883a:	7b51      	ldrb	r1, [r2, #13]
 801883c:	8893      	ldrh	r3, [r2, #4]
 801883e:	010d      	lsls	r5, r1, #4
 8018840:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8018844:	79d5      	ldrb	r5, [r2, #7]
 8018846:	4305      	orrs	r5, r0
 8018848:	2d04      	cmp	r5, #4
 801884a:	bfcc      	ite	gt
 801884c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018850:	f04f 0e01 	movle.w	lr, #1
 8018854:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018858:	f200 80ab 	bhi.w	80189b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801885c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018860:	4283      	cmp	r3, r0
 8018862:	d216      	bcs.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018864:	f240 605b 	movw	r0, #1627	; 0x65b
 8018868:	4283      	cmp	r3, r0
 801886a:	d859      	bhi.n	8018920 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801886c:	f240 6057 	movw	r0, #1623	; 0x657
 8018870:	4283      	cmp	r3, r0
 8018872:	d20e      	bcs.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018874:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018878:	d24a      	bcs.n	8018910 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801887a:	f240 604e 	movw	r0, #1614	; 0x64e
 801887e:	4283      	cmp	r3, r0
 8018880:	d207      	bcs.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018882:	f240 601a 	movw	r0, #1562	; 0x61a
 8018886:	4283      	cmp	r3, r0
 8018888:	d02a      	beq.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801888a:	d821      	bhi.n	80188d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801888c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018890:	d35b      	bcc.n	801894a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018892:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018896:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801889a:	f040 80d0 	bne.w	8018a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801889e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80188a2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80188a6:	f040 80ca 	bne.w	8018a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80188aa:	00cb      	lsls	r3, r1, #3
 80188ac:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80188b0:	7a13      	ldrb	r3, [r2, #8]
 80188b2:	0649      	lsls	r1, r1, #25
 80188b4:	ea43 0300 	orr.w	r3, r3, r0
 80188b8:	bf44      	itt	mi
 80188ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80188be:	b21b      	sxthmi	r3, r3
 80188c0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80188c4:	1b5d      	subs	r5, r3, r5
 80188c6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80188ca:	4610      	mov	r0, r2
 80188cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80188d0:	f240 604b 	movw	r0, #1611	; 0x64b
 80188d4:	4283      	cmp	r3, r0
 80188d6:	d338      	bcc.n	801894a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80188d8:	f240 604c 	movw	r0, #1612	; 0x64c
 80188dc:	4283      	cmp	r3, r0
 80188de:	d9d8      	bls.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80188e0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80188e4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80188e8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80188ec:	f040 80f2 	bne.w	8018ad4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80188f0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80188f4:	f040 80ee 	bne.w	8018ad4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80188f8:	00cb      	lsls	r3, r1, #3
 80188fa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80188fe:	7a13      	ldrb	r3, [r2, #8]
 8018900:	064e      	lsls	r6, r1, #25
 8018902:	ea43 0300 	orr.w	r3, r3, r0
 8018906:	bf44      	itt	mi
 8018908:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801890c:	b21b      	sxthmi	r3, r3
 801890e:	e7d9      	b.n	80188c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018910:	f240 6054 	movw	r0, #1620	; 0x654
 8018914:	4283      	cmp	r3, r0
 8018916:	d8e3      	bhi.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018918:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801891c:	d9e0      	bls.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801891e:	e7b8      	b.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018920:	f240 6074 	movw	r0, #1652	; 0x674
 8018924:	4283      	cmp	r3, r0
 8018926:	d0b4      	beq.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018928:	d82d      	bhi.n	8018986 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801892a:	f240 605e 	movw	r0, #1630	; 0x65e
 801892e:	4283      	cmp	r3, r0
 8018930:	d804      	bhi.n	801893c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018932:	f240 605d 	movw	r0, #1629	; 0x65d
 8018936:	4283      	cmp	r3, r0
 8018938:	d3d2      	bcc.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801893a:	e7aa      	b.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801893c:	f240 605f 	movw	r0, #1631	; 0x65f
 8018940:	4283      	cmp	r3, r0
 8018942:	d0cd      	beq.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018944:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018948:	d0a3      	beq.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801894a:	00cb      	lsls	r3, r1, #3
 801894c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018950:	7a13      	ldrb	r3, [r2, #8]
 8018952:	0649      	lsls	r1, r1, #25
 8018954:	ea43 0300 	orr.w	r3, r3, r0
 8018958:	bf44      	itt	mi
 801895a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801895e:	b21b      	sxthmi	r3, r3
 8018960:	1b5d      	subs	r5, r3, r5
 8018962:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018966:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801896a:	7b53      	ldrb	r3, [r2, #13]
 801896c:	015b      	lsls	r3, r3, #5
 801896e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018972:	7993      	ldrb	r3, [r2, #6]
 8018974:	430b      	orrs	r3, r1
 8018976:	005b      	lsls	r3, r3, #1
 8018978:	2105      	movs	r1, #5
 801897a:	fb93 f3f1 	sdiv	r3, r3, r1
 801897e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018982:	440b      	add	r3, r1
 8018984:	e756      	b.n	8018834 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018986:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801898a:	4283      	cmp	r3, r0
 801898c:	d809      	bhi.n	80189a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801898e:	f240 60df 	movw	r0, #1759	; 0x6df
 8018992:	4283      	cmp	r3, r0
 8018994:	f4bf af7d 	bcs.w	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018998:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801899c:	2b05      	cmp	r3, #5
 801899e:	d8d4      	bhi.n	801894a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80189a0:	e777      	b.n	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189a2:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80189a6:	4283      	cmp	r3, r0
 80189a8:	d09a      	beq.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189aa:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80189ae:	4283      	cmp	r3, r0
 80189b0:	e7ca      	b.n	8018948 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80189b2:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80189b6:	d22b      	bcs.n	8018a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80189b8:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80189bc:	4283      	cmp	r3, r0
 80189be:	d28f      	bcs.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189c0:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80189c4:	4283      	cmp	r3, r0
 80189c6:	d816      	bhi.n	80189f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80189c8:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80189cc:	4283      	cmp	r3, r0
 80189ce:	f4bf af60 	bcs.w	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189d2:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80189d6:	4283      	cmp	r3, r0
 80189d8:	d80a      	bhi.n	80189f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80189da:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80189de:	4283      	cmp	r3, r0
 80189e0:	f4bf af57 	bcs.w	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189e4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80189e8:	4283      	cmp	r3, r0
 80189ea:	f43f af79 	beq.w	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189ee:	e7ac      	b.n	801894a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80189f0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80189f4:	e7f8      	b.n	80189e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80189f6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80189fa:	4283      	cmp	r3, r0
 80189fc:	d802      	bhi.n	8018a04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80189fe:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018a02:	e798      	b.n	8018936 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018a04:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018a08:	4283      	cmp	r3, r0
 8018a0a:	f47f af42 	bne.w	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a0e:	e767      	b.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a10:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018a14:	4283      	cmp	r3, r0
 8018a16:	f43f af63 	beq.w	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a1a:	d802      	bhi.n	8018a22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018a1c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018a20:	e7f2      	b.n	8018a08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018a22:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018a26:	4283      	cmp	r3, r0
 8018a28:	d805      	bhi.n	8018a36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018a2a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018a2e:	4283      	cmp	r3, r0
 8018a30:	f4ff af2f 	bcc.w	8018892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a34:	e754      	b.n	80188e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a36:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018a3a:	4283      	cmp	r3, r0
 8018a3c:	e7af      	b.n	801899e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018a3e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018a42:	4617      	mov	r7, r2
 8018a44:	f102 0808 	add.w	r8, r2, #8
 8018a48:	4666      	mov	r6, ip
 8018a4a:	6838      	ldr	r0, [r7, #0]
 8018a4c:	6879      	ldr	r1, [r7, #4]
 8018a4e:	46e6      	mov	lr, ip
 8018a50:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018a54:	3708      	adds	r7, #8
 8018a56:	4547      	cmp	r7, r8
 8018a58:	46f4      	mov	ip, lr
 8018a5a:	d1f6      	bne.n	8018a4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018a5c:	6838      	ldr	r0, [r7, #0]
 8018a5e:	f8ce 0000 	str.w	r0, [lr]
 8018a62:	88b9      	ldrh	r1, [r7, #4]
 8018a64:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018a68:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018a6c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018a70:	d009      	beq.n	8018a86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8018a72:	7b51      	ldrb	r1, [r2, #13]
 8018a74:	7992      	ldrb	r2, [r2, #6]
 8018a76:	0149      	lsls	r1, r1, #5
 8018a78:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018a7c:	4311      	orrs	r1, r2
 8018a7e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018a82:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018a86:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018a8a:	b2ad      	uxth	r5, r5
 8018a8c:	d00d      	beq.n	8018aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8018a8e:	442b      	add	r3, r5
 8018a90:	b29b      	uxth	r3, r3
 8018a92:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018a96:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018a9a:	10db      	asrs	r3, r3, #3
 8018a9c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018aa0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018aa4:	4313      	orrs	r3, r2
 8018aa6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018aaa:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018aae:	00cb      	lsls	r3, r1, #3
 8018ab0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018ab4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018ab8:	064f      	lsls	r7, r1, #25
 8018aba:	ea43 0302 	orr.w	r3, r3, r2
 8018abe:	bf44      	itt	mi
 8018ac0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ac4:	b21b      	sxthmi	r3, r3
 8018ac6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018aca:	1b5b      	subs	r3, r3, r5
 8018acc:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018ad0:	4632      	mov	r2, r6
 8018ad2:	e6fa      	b.n	80188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018ad4:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018ad8:	4617      	mov	r7, r2
 8018ada:	f102 0908 	add.w	r9, r2, #8
 8018ade:	4666      	mov	r6, ip
 8018ae0:	6838      	ldr	r0, [r7, #0]
 8018ae2:	6879      	ldr	r1, [r7, #4]
 8018ae4:	46e0      	mov	r8, ip
 8018ae6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018aea:	3708      	adds	r7, #8
 8018aec:	454f      	cmp	r7, r9
 8018aee:	46c4      	mov	ip, r8
 8018af0:	d1f6      	bne.n	8018ae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8018af2:	6838      	ldr	r0, [r7, #0]
 8018af4:	f8c8 0000 	str.w	r0, [r8]
 8018af8:	88b9      	ldrh	r1, [r7, #4]
 8018afa:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018afe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018b02:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018b06:	d009      	beq.n	8018b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018b08:	7b51      	ldrb	r1, [r2, #13]
 8018b0a:	7992      	ldrb	r2, [r2, #6]
 8018b0c:	0149      	lsls	r1, r1, #5
 8018b0e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018b12:	4311      	orrs	r1, r2
 8018b14:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018b18:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018b1c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018b20:	d00e      	beq.n	8018b40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018b22:	eba3 030e 	sub.w	r3, r3, lr
 8018b26:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018b2a:	b29b      	uxth	r3, r3
 8018b2c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018b30:	10db      	asrs	r3, r3, #3
 8018b32:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018b36:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018b3a:	4313      	orrs	r3, r2
 8018b3c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018b40:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018b44:	00cb      	lsls	r3, r1, #3
 8018b46:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018b4a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018b4e:	0648      	lsls	r0, r1, #25
 8018b50:	ea43 0302 	orr.w	r3, r3, r2
 8018b54:	bf44      	itt	mi
 8018b56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018b5a:	b21b      	sxthmi	r3, r3
 8018b5c:	1b5d      	subs	r5, r3, r5
 8018b5e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018b62:	e7b5      	b.n	8018ad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018b68:	461e      	mov	r6, r3
 8018b6a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018b6c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018b70:	4604      	mov	r4, r0
 8018b72:	4617      	mov	r7, r2
 8018b74:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018b78:	f7ef fec8 	bl	800890c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018b7c:	4605      	mov	r5, r0
 8018b7e:	b918      	cbnz	r0, 8018b88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018b80:	6030      	str	r0, [r6, #0]
 8018b82:	4628      	mov	r0, r5
 8018b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018b88:	683b      	ldr	r3, [r7, #0]
 8018b8a:	4601      	mov	r1, r0
 8018b8c:	68db      	ldr	r3, [r3, #12]
 8018b8e:	4638      	mov	r0, r7
 8018b90:	4798      	blx	r3
 8018b92:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018b96:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018b9a:	4602      	mov	r2, r0
 8018b9c:	6030      	str	r0, [r6, #0]
 8018b9e:	d213      	bcs.n	8018bc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018ba0:	4643      	mov	r3, r8
 8018ba2:	4639      	mov	r1, r7
 8018ba4:	4620      	mov	r0, r4
 8018ba6:	f7ff fe3b 	bl	8018820 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018baa:	6030      	str	r0, [r6, #0]
 8018bac:	6833      	ldr	r3, [r6, #0]
 8018bae:	b143      	cbz	r3, 8018bc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018bb0:	7b5a      	ldrb	r2, [r3, #13]
 8018bb2:	7a9b      	ldrb	r3, [r3, #10]
 8018bb4:	0052      	lsls	r2, r2, #1
 8018bb6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018bba:	4313      	orrs	r3, r2
 8018bbc:	bf0c      	ite	eq
 8018bbe:	2301      	moveq	r3, #1
 8018bc0:	2300      	movne	r3, #0
 8018bc2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018bc6:	e7dc      	b.n	8018b82 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018bc8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018bcc:	b29b      	uxth	r3, r3
 8018bce:	2b7f      	cmp	r3, #127	; 0x7f
 8018bd0:	d804      	bhi.n	8018bdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018bd2:	4639      	mov	r1, r7
 8018bd4:	4620      	mov	r0, r4
 8018bd6:	f7ff fd17 	bl	8018608 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018bda:	e7e6      	b.n	8018baa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018bdc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018be0:	2b00      	cmp	r3, #0
 8018be2:	d0e3      	beq.n	8018bac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018be4:	f640 1302 	movw	r3, #2306	; 0x902
 8018be8:	429d      	cmp	r5, r3
 8018bea:	d1df      	bne.n	8018bac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018bec:	4601      	mov	r1, r0
 8018bee:	4620      	mov	r0, r4
 8018bf0:	f7ff fcdb 	bl	80185aa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018bf4:	e7d9      	b.n	8018baa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018bf6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018bf6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018bfa:	461e      	mov	r6, r3
 8018bfc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018bfe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018c02:	4604      	mov	r4, r0
 8018c04:	4617      	mov	r7, r2
 8018c06:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018c0a:	f7ef fe7f 	bl	800890c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018c0e:	4605      	mov	r5, r0
 8018c10:	b918      	cbnz	r0, 8018c1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018c12:	6030      	str	r0, [r6, #0]
 8018c14:	4628      	mov	r0, r5
 8018c16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018c1a:	683b      	ldr	r3, [r7, #0]
 8018c1c:	4601      	mov	r1, r0
 8018c1e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018c22:	4638      	mov	r0, r7
 8018c24:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018c28:	47c8      	blx	r9
 8018c2a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018c2e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018c32:	4602      	mov	r2, r0
 8018c34:	6030      	str	r0, [r6, #0]
 8018c36:	d213      	bcs.n	8018c60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018c38:	4643      	mov	r3, r8
 8018c3a:	4639      	mov	r1, r7
 8018c3c:	4620      	mov	r0, r4
 8018c3e:	f7ff fdef 	bl	8018820 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018c42:	6030      	str	r0, [r6, #0]
 8018c44:	6833      	ldr	r3, [r6, #0]
 8018c46:	b143      	cbz	r3, 8018c5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018c48:	7b5a      	ldrb	r2, [r3, #13]
 8018c4a:	7a9b      	ldrb	r3, [r3, #10]
 8018c4c:	0052      	lsls	r2, r2, #1
 8018c4e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018c52:	4313      	orrs	r3, r2
 8018c54:	bf0c      	ite	eq
 8018c56:	2301      	moveq	r3, #1
 8018c58:	2300      	movne	r3, #0
 8018c5a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018c5e:	e7d9      	b.n	8018c14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018c60:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018c64:	b29b      	uxth	r3, r3
 8018c66:	2b7f      	cmp	r3, #127	; 0x7f
 8018c68:	d804      	bhi.n	8018c74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018c6a:	4639      	mov	r1, r7
 8018c6c:	4620      	mov	r0, r4
 8018c6e:	f7ff fccb 	bl	8018608 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018c72:	e7e6      	b.n	8018c42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018c74:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018c78:	2b00      	cmp	r3, #0
 8018c7a:	d0e3      	beq.n	8018c44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018c7c:	f640 1302 	movw	r3, #2306	; 0x902
 8018c80:	429d      	cmp	r5, r3
 8018c82:	d1df      	bne.n	8018c44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018c84:	4601      	mov	r1, r0
 8018c86:	4620      	mov	r0, r4
 8018c88:	f7ff fc8f 	bl	80185aa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018c8c:	e7d9      	b.n	8018c42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08018c8e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018c8e:	b510      	push	{r4, lr}
 8018c90:	4604      	mov	r4, r0
 8018c92:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018c96:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018c98:	b1f1      	cbz	r1, 8018cd8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018c9a:	2b0a      	cmp	r3, #10
 8018c9c:	d02f      	beq.n	8018cfe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018c9e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018ca0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018ca4:	3901      	subs	r1, #1
 8018ca6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018ca8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018cac:	1c51      	adds	r1, r2, #1
 8018cae:	b289      	uxth	r1, r1
 8018cb0:	2901      	cmp	r1, #1
 8018cb2:	bf84      	itt	hi
 8018cb4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018cb8:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018cba:	f103 0201 	add.w	r2, r3, #1
 8018cbe:	8722      	strh	r2, [r4, #56]	; 0x38
 8018cc0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018cc2:	bf98      	it	ls
 8018cc4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018cc6:	4413      	add	r3, r2
 8018cc8:	b29b      	uxth	r3, r3
 8018cca:	2b09      	cmp	r3, #9
 8018ccc:	bf88      	it	hi
 8018cce:	3b0a      	subhi	r3, #10
 8018cd0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018cd4:	8458      	strh	r0, [r3, #34]	; 0x22
 8018cd6:	e7dc      	b.n	8018c92 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018cd8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018cda:	2b0a      	cmp	r3, #10
 8018cdc:	d00f      	beq.n	8018cfe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018cde:	4620      	mov	r0, r4
 8018ce0:	f7ff fc11 	bl	8018506 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018ce4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018ce6:	1c5a      	adds	r2, r3, #1
 8018ce8:	8722      	strh	r2, [r4, #56]	; 0x38
 8018cea:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018cec:	4413      	add	r3, r2
 8018cee:	b29b      	uxth	r3, r3
 8018cf0:	2b09      	cmp	r3, #9
 8018cf2:	bf88      	it	hi
 8018cf4:	3b0a      	subhi	r3, #10
 8018cf6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018cfa:	8458      	strh	r0, [r3, #34]	; 0x22
 8018cfc:	e7ec      	b.n	8018cd8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018cfe:	bd10      	pop	{r4, pc}

08018d00 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018d00:	b538      	push	{r3, r4, r5, lr}
 8018d02:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018d04:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018d08:	4604      	mov	r4, r0
 8018d0a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018d0c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018d0e:	3a01      	subs	r2, #1
 8018d10:	8702      	strh	r2, [r0, #56]	; 0x38
 8018d12:	1c5a      	adds	r2, r3, #1
 8018d14:	b292      	uxth	r2, r2
 8018d16:	2a09      	cmp	r2, #9
 8018d18:	bf86      	itte	hi
 8018d1a:	3b09      	subhi	r3, #9
 8018d1c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018d1e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018d20:	f7ff ffb5 	bl	8018c8e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018d24:	8c23      	ldrh	r3, [r4, #32]
 8018d26:	2b01      	cmp	r3, #1
 8018d28:	bf9c      	itt	ls
 8018d2a:	3301      	addls	r3, #1
 8018d2c:	8423      	strhls	r3, [r4, #32]
 8018d2e:	8be3      	ldrh	r3, [r4, #30]
 8018d30:	b90b      	cbnz	r3, 8018d36 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018d32:	2302      	movs	r3, #2
 8018d34:	83e3      	strh	r3, [r4, #30]
 8018d36:	8be3      	ldrh	r3, [r4, #30]
 8018d38:	3b01      	subs	r3, #1
 8018d3a:	b29b      	uxth	r3, r3
 8018d3c:	83e3      	strh	r3, [r4, #30]
 8018d3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018d42:	4628      	mov	r0, r5
 8018d44:	8365      	strh	r5, [r4, #26]
 8018d46:	bd38      	pop	{r3, r4, r5, pc}

08018d48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018d48:	428a      	cmp	r2, r1
 8018d4a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018d4e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018d50:	d931      	bls.n	8018db6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018d52:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018d54:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018d58:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018d5c:	19ee      	adds	r6, r5, r7
 8018d5e:	1a54      	subs	r4, r2, r1
 8018d60:	3e01      	subs	r6, #1
 8018d62:	fa1f fe84 	uxth.w	lr, r4
 8018d66:	b2b4      	uxth	r4, r6
 8018d68:	eba4 090e 	sub.w	r9, r4, lr
 8018d6c:	fa1f f989 	uxth.w	r9, r9
 8018d70:	2c09      	cmp	r4, #9
 8018d72:	4626      	mov	r6, r4
 8018d74:	bf88      	it	hi
 8018d76:	f1a4 060a 	subhi.w	r6, r4, #10
 8018d7a:	f1bc 0f00 	cmp.w	ip, #0
 8018d7e:	bf08      	it	eq
 8018d80:	f04f 0c02 	moveq.w	ip, #2
 8018d84:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018d88:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018d8c:	fa1f fc8c 	uxth.w	ip, ip
 8018d90:	3c01      	subs	r4, #1
 8018d92:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018d96:	b2a4      	uxth	r4, r4
 8018d98:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018d9c:	454c      	cmp	r4, r9
 8018d9e:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8018da2:	d1e5      	bne.n	8018d70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018da4:	eba5 050e 	sub.w	r5, r5, lr
 8018da8:	eb0e 0408 	add.w	r4, lr, r8
 8018dac:	8705      	strh	r5, [r0, #56]	; 0x38
 8018dae:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8018db2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018db6:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018db8:	1a64      	subs	r4, r4, r1
 8018dba:	4439      	add	r1, r7
 8018dbc:	b289      	uxth	r1, r1
 8018dbe:	2909      	cmp	r1, #9
 8018dc0:	bf88      	it	hi
 8018dc2:	390a      	subhi	r1, #10
 8018dc4:	8704      	strh	r4, [r0, #56]	; 0x38
 8018dc6:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018dc8:	250a      	movs	r5, #10
 8018dca:	b18a      	cbz	r2, 8018df0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018dcc:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018dce:	3a01      	subs	r2, #1
 8018dd0:	b292      	uxth	r2, r2
 8018dd2:	3101      	adds	r1, #1
 8018dd4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018dd8:	8701      	strh	r1, [r0, #56]	; 0x38
 8018dda:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018ddc:	b901      	cbnz	r1, 8018de0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018dde:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018de0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018de2:	3901      	subs	r1, #1
 8018de4:	b289      	uxth	r1, r1
 8018de6:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018de8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018dec:	844c      	strh	r4, [r1, #34]	; 0x22
 8018dee:	e7ec      	b.n	8018dca <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018df0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018df4:	f7ff bf4b 	b.w	8018c8e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018df8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018df8:	b570      	push	{r4, r5, r6, lr}
 8018dfa:	2500      	movs	r5, #0
 8018dfc:	4295      	cmp	r5, r2
 8018dfe:	d011      	beq.n	8018e24 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018e00:	8bc4      	ldrh	r4, [r0, #30]
 8018e02:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018e06:	4414      	add	r4, r2
 8018e08:	3c01      	subs	r4, #1
 8018e0a:	1b64      	subs	r4, r4, r5
 8018e0c:	b2a4      	uxth	r4, r4
 8018e0e:	2c01      	cmp	r4, #1
 8018e10:	bf88      	it	hi
 8018e12:	3c02      	subhi	r4, #2
 8018e14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018e18:	8b64      	ldrh	r4, [r4, #26]
 8018e1a:	42b4      	cmp	r4, r6
 8018e1c:	d117      	bne.n	8018e4e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018e1e:	3501      	adds	r5, #1
 8018e20:	b2ad      	uxth	r5, r5
 8018e22:	e7eb      	b.n	8018dfc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018e24:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018e28:	2400      	movs	r4, #0
 8018e2a:	4413      	add	r3, r2
 8018e2c:	b2a2      	uxth	r2, r4
 8018e2e:	429a      	cmp	r2, r3
 8018e30:	da0f      	bge.n	8018e52 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018e32:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018e34:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018e38:	4432      	add	r2, r6
 8018e3a:	b292      	uxth	r2, r2
 8018e3c:	2a09      	cmp	r2, #9
 8018e3e:	bf88      	it	hi
 8018e40:	3a0a      	subhi	r2, #10
 8018e42:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018e46:	3401      	adds	r4, #1
 8018e48:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018e4a:	42aa      	cmp	r2, r5
 8018e4c:	d0ee      	beq.n	8018e2c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018e4e:	2000      	movs	r0, #0
 8018e50:	bd70      	pop	{r4, r5, r6, pc}
 8018e52:	2001      	movs	r0, #1
 8018e54:	e7fc      	b.n	8018e50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018e56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018e56:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e5a:	4605      	mov	r5, r0
 8018e5c:	4616      	mov	r6, r2
 8018e5e:	1c8c      	adds	r4, r1, #2
 8018e60:	8809      	ldrh	r1, [r1, #0]
 8018e62:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018e66:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018e6a:	42b3      	cmp	r3, r6
 8018e6c:	d124      	bne.n	8018eb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018e6e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018e72:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018e76:	f001 070f 	and.w	r7, r1, #15
 8018e7a:	f8cd 8000 	str.w	r8, [sp]
 8018e7e:	464b      	mov	r3, r9
 8018e80:	4652      	mov	r2, sl
 8018e82:	4621      	mov	r1, r4
 8018e84:	4628      	mov	r0, r5
 8018e86:	f7ff ffb7 	bl	8018df8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018e8a:	4683      	mov	fp, r0
 8018e8c:	b168      	cbz	r0, 8018eaa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018e8e:	eb0a 0109 	add.w	r1, sl, r9
 8018e92:	4441      	add	r1, r8
 8018e94:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018e98:	463a      	mov	r2, r7
 8018e9a:	4649      	mov	r1, r9
 8018e9c:	4628      	mov	r0, r5
 8018e9e:	f7ff ff53 	bl	8018d48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018ea2:	4658      	mov	r0, fp
 8018ea4:	b003      	add	sp, #12
 8018ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018eaa:	eb07 010a 	add.w	r1, r7, sl
 8018eae:	4449      	add	r1, r9
 8018eb0:	4441      	add	r1, r8
 8018eb2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018eb6:	e7d2      	b.n	8018e5e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018eb8:	f04f 0b00 	mov.w	fp, #0
 8018ebc:	e7f1      	b.n	8018ea2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018ebe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018ebe:	b570      	push	{r4, r5, r6, lr}
 8018ec0:	8810      	ldrh	r0, [r2, #0]
 8018ec2:	4298      	cmp	r0, r3
 8018ec4:	d817      	bhi.n	8018ef6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ec6:	1e48      	subs	r0, r1, #1
 8018ec8:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018ecc:	4298      	cmp	r0, r3
 8018ece:	d312      	bcc.n	8018ef6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ed0:	2400      	movs	r4, #0
 8018ed2:	428c      	cmp	r4, r1
 8018ed4:	d20f      	bcs.n	8018ef6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ed6:	1860      	adds	r0, r4, r1
 8018ed8:	1040      	asrs	r0, r0, #1
 8018eda:	0085      	lsls	r5, r0, #2
 8018edc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018ee0:	42b3      	cmp	r3, r6
 8018ee2:	d902      	bls.n	8018eea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018ee4:	3001      	adds	r0, #1
 8018ee6:	b284      	uxth	r4, r0
 8018ee8:	e7f3      	b.n	8018ed2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018eea:	d201      	bcs.n	8018ef0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018eec:	b281      	uxth	r1, r0
 8018eee:	e7f0      	b.n	8018ed2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018ef0:	442a      	add	r2, r5
 8018ef2:	8850      	ldrh	r0, [r2, #2]
 8018ef4:	bd70      	pop	{r4, r5, r6, pc}
 8018ef6:	2000      	movs	r0, #0
 8018ef8:	e7fc      	b.n	8018ef4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018efa <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018efa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018efe:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018f00:	886f      	ldrh	r7, [r5, #2]
 8018f02:	4604      	mov	r4, r0
 8018f04:	087f      	lsrs	r7, r7, #1
 8018f06:	260b      	movs	r6, #11
 8018f08:	3e01      	subs	r6, #1
 8018f0a:	d013      	beq.n	8018f34 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018f0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018f0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018f12:	462a      	mov	r2, r5
 8018f14:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018f18:	4639      	mov	r1, r7
 8018f1a:	4643      	mov	r3, r8
 8018f1c:	4620      	mov	r0, r4
 8018f1e:	f7ff ffce 	bl	8018ebe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018f22:	b138      	cbz	r0, 8018f34 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018f24:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018f28:	4642      	mov	r2, r8
 8018f2a:	4620      	mov	r0, r4
 8018f2c:	f7ff ff93 	bl	8018e56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018f30:	2800      	cmp	r0, #0
 8018f32:	d1e9      	bne.n	8018f08 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018f34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018f38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018f38:	b570      	push	{r4, r5, r6, lr}
 8018f3a:	694a      	ldr	r2, [r1, #20]
 8018f3c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018f3e:	684b      	ldr	r3, [r1, #4]
 8018f40:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018f42:	1b54      	subs	r4, r2, r5
 8018f44:	f000 8106 	beq.w	8019154 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018f48:	1b9b      	subs	r3, r3, r6
 8018f4a:	d003      	beq.n	8018f54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018f4c:	4363      	muls	r3, r4
 8018f4e:	2210      	movs	r2, #16
 8018f50:	fb93 f3f2 	sdiv	r3, r3, r2
 8018f54:	680c      	ldr	r4, [r1, #0]
 8018f56:	698a      	ldr	r2, [r1, #24]
 8018f58:	1b65      	subs	r5, r4, r5
 8018f5a:	f000 80fd 	beq.w	8019158 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018f5e:	1b92      	subs	r2, r2, r6
 8018f60:	d003      	beq.n	8018f6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018f62:	436a      	muls	r2, r5
 8018f64:	2410      	movs	r4, #16
 8018f66:	fb92 f2f4 	sdiv	r2, r2, r4
 8018f6a:	1a9b      	subs	r3, r3, r2
 8018f6c:	ee07 3a90 	vmov	s15, r3
 8018f70:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8019194 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018f74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018f78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f7c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018f80:	460a      	mov	r2, r1
 8018f82:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018f86:	4603      	mov	r3, r0
 8018f88:	f100 040c 	add.w	r4, r0, #12
 8018f8c:	eeb1 6a43 	vneg.f32	s12, s6
 8018f90:	edd2 7a02 	vldr	s15, [r2, #8]
 8018f94:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018f98:	3214      	adds	r2, #20
 8018f9a:	ece3 6a01 	vstmia	r3!, {s13}
 8018f9e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018fa2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018fa6:	429c      	cmp	r4, r3
 8018fa8:	edc3 7a02 	vstr	s15, [r3, #8]
 8018fac:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018fb0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018fb4:	edc3 7a05 	vstr	s15, [r3, #20]
 8018fb8:	d1ea      	bne.n	8018f90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018fba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018fbc:	698b      	ldr	r3, [r1, #24]
 8018fbe:	edd0 4a02 	vldr	s9, [r0, #8]
 8018fc2:	edd0 3a00 	vldr	s7, [r0]
 8018fc6:	edd0 6a01 	vldr	s13, [r0, #4]
 8018fca:	ed90 5a05 	vldr	s10, [r0, #20]
 8018fce:	ed90 2a03 	vldr	s4, [r0, #12]
 8018fd2:	edd0 5a04 	vldr	s11, [r0, #16]
 8018fd6:	ed90 1a07 	vldr	s2, [r0, #28]
 8018fda:	edd0 2a06 	vldr	s5, [r0, #24]
 8018fde:	1a9b      	subs	r3, r3, r2
 8018fe0:	ee07 3a90 	vmov	s15, r3
 8018fe4:	684b      	ldr	r3, [r1, #4]
 8018fe6:	1a9b      	subs	r3, r3, r2
 8018fe8:	ee07 3a10 	vmov	s14, r3
 8018fec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018ff0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018ff4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018ff8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018ffc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019000:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8019004:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019008:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801900c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019010:	ee32 5a45 	vsub.f32	s10, s4, s10
 8019014:	ee67 7a83 	vmul.f32	s15, s15, s6
 8019018:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801901c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801901e:	694a      	ldr	r2, [r1, #20]
 8019020:	1b13      	subs	r3, r2, r4
 8019022:	ee07 3a10 	vmov	s14, r3
 8019026:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801902a:	680b      	ldr	r3, [r1, #0]
 801902c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019030:	1b1b      	subs	r3, r3, r4
 8019032:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8019036:	ee07 3a10 	vmov	s14, r3
 801903a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801903e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019042:	eee6 4a87 	vfma.f32	s9, s13, s14
 8019046:	ee64 4a86 	vmul.f32	s9, s9, s12
 801904a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801904e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019050:	698b      	ldr	r3, [r1, #24]
 8019052:	1a9b      	subs	r3, r3, r2
 8019054:	ee06 3a90 	vmov	s13, r3
 8019058:	684b      	ldr	r3, [r1, #4]
 801905a:	1a9b      	subs	r3, r3, r2
 801905c:	ee07 3a10 	vmov	s14, r3
 8019060:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019064:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019068:	ee66 6a84 	vmul.f32	s13, s13, s8
 801906c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019070:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8019074:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019078:	ee66 6a83 	vmul.f32	s13, s13, s6
 801907c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019080:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8019082:	694a      	ldr	r2, [r1, #20]
 8019084:	1b13      	subs	r3, r2, r4
 8019086:	ee07 3a10 	vmov	s14, r3
 801908a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801908e:	680b      	ldr	r3, [r1, #0]
 8019090:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019094:	1b1b      	subs	r3, r3, r4
 8019096:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801909a:	ee07 3a10 	vmov	s14, r3
 801909e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80190a2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80190a6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80190aa:	edd0 5a08 	vldr	s11, [r0, #32]
 80190ae:	ee25 5a06 	vmul.f32	s10, s10, s12
 80190b2:	ee31 1a65 	vsub.f32	s2, s2, s11
 80190b6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80190ba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80190bc:	698b      	ldr	r3, [r1, #24]
 80190be:	1a9b      	subs	r3, r3, r2
 80190c0:	ee07 3a10 	vmov	s14, r3
 80190c4:	684b      	ldr	r3, [r1, #4]
 80190c6:	1a9b      	subs	r3, r3, r2
 80190c8:	ee01 3a90 	vmov	s3, r3
 80190cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80190d0:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80190d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80190d8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80190dc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80190e0:	ee61 1a84 	vmul.f32	s3, s3, s8
 80190e4:	eea1 7a21 	vfma.f32	s14, s2, s3
 80190e8:	ee27 7a03 	vmul.f32	s14, s14, s6
 80190ec:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80190f0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80190f2:	694a      	ldr	r2, [r1, #20]
 80190f4:	1b13      	subs	r3, r2, r4
 80190f6:	ee03 3a10 	vmov	s6, r3
 80190fa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80190fe:	680b      	ldr	r3, [r1, #0]
 8019100:	ee23 3a04 	vmul.f32	s6, s6, s8
 8019104:	1b1b      	subs	r3, r3, r4
 8019106:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801910a:	ee03 3a10 	vmov	s6, r3
 801910e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019112:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019116:	eee1 5a04 	vfma.f32	s11, s2, s8
 801911a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801911e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8019122:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8019126:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801912a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801912e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019132:	dd13      	ble.n	801915c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8019134:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019138:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801913c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801913e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8019142:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801914a:	dd15      	ble.n	8019178 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801914c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019150:	6403      	str	r3, [r0, #64]	; 0x40
 8019152:	bd70      	pop	{r4, r5, r6, pc}
 8019154:	4623      	mov	r3, r4
 8019156:	e6fd      	b.n	8018f54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019158:	462a      	mov	r2, r5
 801915a:	e706      	b.n	8018f6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801915c:	d502      	bpl.n	8019164 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801915e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019162:	e7e9      	b.n	8019138 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8019164:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019168:	eea3 2a85 	vfma.f32	s4, s7, s10
 801916c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019174:	dade      	bge.n	8019134 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8019176:	e7f2      	b.n	801915e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019178:	d502      	bpl.n	8019180 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801917a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801917e:	e7e7      	b.n	8019150 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019180:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8019184:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019188:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801918c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019190:	dadc      	bge.n	801914c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8019192:	e7f2      	b.n	801917a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8019194:	3d800000 	.word	0x3d800000

08019198 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019198:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801919c:	2714      	movs	r7, #20
 801919e:	435f      	muls	r7, r3
 80191a0:	eb02 0c07 	add.w	ip, r2, r7
 80191a4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80191a8:	f115 0e0f 	adds.w	lr, r5, #15
 80191ac:	f100 80a2 	bmi.w	80192f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80191b0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80191b4:	9c08      	ldr	r4, [sp, #32]
 80191b6:	f8c0 e014 	str.w	lr, [r0, #20]
 80191ba:	2614      	movs	r6, #20
 80191bc:	4366      	muls	r6, r4
 80191be:	eb02 0806 	add.w	r8, r2, r6
 80191c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80191c6:	f115 040f 	adds.w	r4, r5, #15
 80191ca:	f100 809f 	bmi.w	801930c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80191ce:	1124      	asrs	r4, r4, #4
 80191d0:	eba4 040e 	sub.w	r4, r4, lr
 80191d4:	6184      	str	r4, [r0, #24]
 80191d6:	2c00      	cmp	r4, #0
 80191d8:	f000 808a 	beq.w	80192f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80191dc:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80191e0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80191e4:	5995      	ldr	r5, [r2, r6]
 80191e6:	eba4 0809 	sub.w	r8, r4, r9
 80191ea:	59d4      	ldr	r4, [r2, r7]
 80191ec:	eba5 0a04 	sub.w	sl, r5, r4
 80191f0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80191f4:	fb0e fe05 	mul.w	lr, lr, r5
 80191f8:	fb0a ee19 	mls	lr, sl, r9, lr
 80191fc:	fb08 e404 	mla	r4, r8, r4, lr
 8019200:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8019204:	3c01      	subs	r4, #1
 8019206:	19a4      	adds	r4, r4, r6
 8019208:	f100 808c 	bmi.w	8019324 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801920c:	fb94 fef6 	sdiv	lr, r4, r6
 8019210:	f8c0 e000 	str.w	lr, [r0]
 8019214:	fb06 441e 	mls	r4, r6, lr, r4
 8019218:	6104      	str	r4, [r0, #16]
 801921a:	2d00      	cmp	r5, #0
 801921c:	f2c0 8095 	blt.w	801934a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8019220:	fb95 f4f6 	sdiv	r4, r5, r6
 8019224:	6044      	str	r4, [r0, #4]
 8019226:	fb06 5514 	mls	r5, r6, r4, r5
 801922a:	6085      	str	r5, [r0, #8]
 801922c:	60c6      	str	r6, [r0, #12]
 801922e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8019232:	6945      	ldr	r5, [r0, #20]
 8019234:	59d2      	ldr	r2, [r2, r7]
 8019236:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801936c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801923a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801923e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8019242:	ee07 4a10 	vmov	s14, r4
 8019246:	6804      	ldr	r4, [r0, #0]
 8019248:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801924c:	ee07 2a90 	vmov	s15, r2
 8019250:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019254:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019258:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801925c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019260:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8019264:	edd3 6a00 	vldr	s13, [r3]
 8019268:	eee6 6a07 	vfma.f32	s13, s12, s14
 801926c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019270:	eee6 6a27 	vfma.f32	s13, s12, s15
 8019274:	edc0 6a07 	vstr	s13, [r0, #28]
 8019278:	edd0 6a01 	vldr	s13, [r0, #4]
 801927c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019280:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019284:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019288:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801928c:	ed80 6a08 	vstr	s12, [r0, #32]
 8019290:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8019292:	6242      	str	r2, [r0, #36]	; 0x24
 8019294:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019298:	ed93 6a03 	vldr	s12, [r3, #12]
 801929c:	eea5 6a87 	vfma.f32	s12, s11, s14
 80192a0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80192a4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80192a8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80192ac:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80192b0:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80192b4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80192b8:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80192bc:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80192be:	6302      	str	r2, [r0, #48]	; 0x30
 80192c0:	ed93 6a06 	vldr	s12, [r3, #24]
 80192c4:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80192c8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80192cc:	eeb0 7a46 	vmov.f32	s14, s12
 80192d0:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80192d4:	eea6 7a27 	vfma.f32	s14, s12, s15
 80192d8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80192dc:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80192e0:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80192e4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80192e8:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80192ec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80192ee:	63c3      	str	r3, [r0, #60]	; 0x3c
 80192f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80192f4:	f1c5 0501 	rsb	r5, r5, #1
 80192f8:	f015 050f 	ands.w	r5, r5, #15
 80192fc:	bf18      	it	ne
 80192fe:	2501      	movne	r5, #1
 8019300:	2410      	movs	r4, #16
 8019302:	fb9e fef4 	sdiv	lr, lr, r4
 8019306:	ebae 0e05 	sub.w	lr, lr, r5
 801930a:	e753      	b.n	80191b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801930c:	f1c5 0501 	rsb	r5, r5, #1
 8019310:	f015 050f 	ands.w	r5, r5, #15
 8019314:	bf18      	it	ne
 8019316:	2501      	movne	r5, #1
 8019318:	f04f 0910 	mov.w	r9, #16
 801931c:	fb94 f4f9 	sdiv	r4, r4, r9
 8019320:	1b64      	subs	r4, r4, r5
 8019322:	e755      	b.n	80191d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8019324:	4264      	negs	r4, r4
 8019326:	fb94 fef6 	sdiv	lr, r4, r6
 801932a:	f1ce 0800 	rsb	r8, lr, #0
 801932e:	fb06 441e 	mls	r4, r6, lr, r4
 8019332:	f8c0 8000 	str.w	r8, [r0]
 8019336:	6104      	str	r4, [r0, #16]
 8019338:	2c00      	cmp	r4, #0
 801933a:	f43f af6e 	beq.w	801921a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801933e:	ea6f 0e0e 	mvn.w	lr, lr
 8019342:	f8c0 e000 	str.w	lr, [r0]
 8019346:	1b34      	subs	r4, r6, r4
 8019348:	e766      	b.n	8019218 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801934a:	426d      	negs	r5, r5
 801934c:	fb95 f4f6 	sdiv	r4, r5, r6
 8019350:	f1c4 0e00 	rsb	lr, r4, #0
 8019354:	fb06 5514 	mls	r5, r6, r4, r5
 8019358:	f8c0 e004 	str.w	lr, [r0, #4]
 801935c:	6085      	str	r5, [r0, #8]
 801935e:	2d00      	cmp	r5, #0
 8019360:	f43f af64 	beq.w	801922c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8019364:	43e4      	mvns	r4, r4
 8019366:	6044      	str	r4, [r0, #4]
 8019368:	1b75      	subs	r5, r6, r5
 801936a:	e75e      	b.n	801922a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801936c:	3d800000 	.word	0x3d800000

08019370 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019370:	4602      	mov	r2, r0
 8019372:	b148      	cbz	r0, 8019388 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8019374:	2300      	movs	r3, #0
 8019376:	b298      	uxth	r0, r3
 8019378:	3301      	adds	r3, #1
 801937a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801937e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8019382:	2900      	cmp	r1, #0
 8019384:	d1f7      	bne.n	8019376 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8019386:	4770      	bx	lr
 8019388:	4770      	bx	lr

0801938a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801938a:	b530      	push	{r4, r5, lr}
 801938c:	4604      	mov	r4, r0
 801938e:	b159      	cbz	r1, 80193a8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019390:	b148      	cbz	r0, 80193a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019392:	2300      	movs	r3, #0
 8019394:	b298      	uxth	r0, r3
 8019396:	4282      	cmp	r2, r0
 8019398:	d905      	bls.n	80193a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801939a:	5ccd      	ldrb	r5, [r1, r3]
 801939c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80193a0:	3301      	adds	r3, #1
 80193a2:	2d00      	cmp	r5, #0
 80193a4:	d1f6      	bne.n	8019394 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80193a6:	bd30      	pop	{r4, r5, pc}
 80193a8:	4608      	mov	r0, r1
 80193aa:	e7fc      	b.n	80193a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080193ac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80193ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80193ae:	b08b      	sub	sp, #44	; 0x2c
 80193b0:	468c      	mov	ip, r1
 80193b2:	2100      	movs	r1, #0
 80193b4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80193b8:	4604      	mov	r4, r0
 80193ba:	261f      	movs	r6, #31
 80193bc:	af01      	add	r7, sp, #4
 80193be:	fb94 fef3 	sdiv	lr, r4, r3
 80193c2:	fb03 441e 	mls	r4, r3, lr, r4
 80193c6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80193ca:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80193ce:	b2ec      	uxtb	r4, r5
 80193d0:	2d09      	cmp	r5, #9
 80193d2:	bfd4      	ite	le
 80193d4:	3430      	addle	r4, #48	; 0x30
 80193d6:	3457      	addgt	r4, #87	; 0x57
 80193d8:	b2e4      	uxtb	r4, r4
 80193da:	55bc      	strb	r4, [r7, r6]
 80193dc:	4674      	mov	r4, lr
 80193de:	1e71      	subs	r1, r6, #1
 80193e0:	b974      	cbnz	r4, 8019400 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80193e2:	2800      	cmp	r0, #0
 80193e4:	da05      	bge.n	80193f2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80193e6:	ab0a      	add	r3, sp, #40	; 0x28
 80193e8:	4419      	add	r1, r3
 80193ea:	232d      	movs	r3, #45	; 0x2d
 80193ec:	f801 3c24 	strb.w	r3, [r1, #-36]
 80193f0:	1eb1      	subs	r1, r6, #2
 80193f2:	3101      	adds	r1, #1
 80193f4:	4439      	add	r1, r7
 80193f6:	4660      	mov	r0, ip
 80193f8:	f7ff ffc7 	bl	801938a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80193fc:	b00b      	add	sp, #44	; 0x2c
 80193fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019400:	460e      	mov	r6, r1
 8019402:	e7dc      	b.n	80193be <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08019404 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8019404:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019406:	b08b      	sub	sp, #44	; 0x2c
 8019408:	468c      	mov	ip, r1
 801940a:	2100      	movs	r1, #0
 801940c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019410:	ae01      	add	r6, sp, #4
 8019412:	211f      	movs	r1, #31
 8019414:	fbb0 f7f3 	udiv	r7, r0, r3
 8019418:	fb03 0517 	mls	r5, r3, r7, r0
 801941c:	b2ec      	uxtb	r4, r5
 801941e:	2d09      	cmp	r5, #9
 8019420:	bfd4      	ite	le
 8019422:	3430      	addle	r4, #48	; 0x30
 8019424:	3457      	addgt	r4, #87	; 0x57
 8019426:	b2e4      	uxtb	r4, r4
 8019428:	558c      	strb	r4, [r1, r6]
 801942a:	4638      	mov	r0, r7
 801942c:	1e4c      	subs	r4, r1, #1
 801942e:	b92f      	cbnz	r7, 801943c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8019430:	4431      	add	r1, r6
 8019432:	4660      	mov	r0, ip
 8019434:	f7ff ffa9 	bl	801938a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019438:	b00b      	add	sp, #44	; 0x2c
 801943a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801943c:	4621      	mov	r1, r4
 801943e:	e7e9      	b.n	8019414 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019440 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8019440:	b410      	push	{r4}
 8019442:	b131      	cbz	r1, 8019452 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019444:	1e9c      	subs	r4, r3, #2
 8019446:	2c22      	cmp	r4, #34	; 0x22
 8019448:	d803      	bhi.n	8019452 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801944a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801944e:	f7ff bfad 	b.w	80193ac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019452:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019456:	4770      	bx	lr

08019458 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801945c:	4691      	mov	r9, r2
 801945e:	b085      	sub	sp, #20
 8019460:	6802      	ldr	r2, [r0, #0]
 8019462:	9201      	str	r2, [sp, #4]
 8019464:	4688      	mov	r8, r1
 8019466:	4683      	mov	fp, r0
 8019468:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801946c:	9103      	str	r1, [sp, #12]
 801946e:	4610      	mov	r0, r2
 8019470:	461c      	mov	r4, r3
 8019472:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8019476:	9302      	str	r3, [sp, #8]
 8019478:	f7ff ff7a 	bl	8019370 <_ZN8touchgfx7Unicode6strlenEPKt>
 801947c:	f1b8 0f00 	cmp.w	r8, #0
 8019480:	bf0c      	ite	eq
 8019482:	4684      	moveq	ip, r0
 8019484:	f100 0c01 	addne.w	ip, r0, #1
 8019488:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801948c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019490:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019492:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019494:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019498:	9903      	ldr	r1, [sp, #12]
 801949a:	fa1f fc8c 	uxth.w	ip, ip
 801949e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80194a2:	d041      	beq.n	8019528 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80194a4:	d834      	bhi.n	8019510 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80194a6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80194aa:	d059      	beq.n	8019560 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80194ac:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80194b0:	d03a      	beq.n	8019528 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80194b2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80194b6:	d034      	beq.n	8019522 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80194b8:	2400      	movs	r4, #0
 80194ba:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80194be:	3a01      	subs	r2, #1
 80194c0:	b169      	cbz	r1, 80194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80194c2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80194c4:	458c      	cmp	ip, r1
 80194c6:	da09      	bge.n	80194dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80194c8:	eba1 010c 	sub.w	r1, r1, ip
 80194cc:	b289      	uxth	r1, r1
 80194ce:	b933      	cbnz	r3, 80194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80194d0:	2e00      	cmp	r6, #0
 80194d2:	d051      	beq.n	8019578 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80194d4:	2800      	cmp	r0, #0
 80194d6:	d04f      	beq.n	8019578 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80194d8:	440c      	add	r4, r1
 80194da:	b2a4      	uxth	r4, r4
 80194dc:	2100      	movs	r1, #0
 80194de:	682b      	ldr	r3, [r5, #0]
 80194e0:	4293      	cmp	r3, r2
 80194e2:	da07      	bge.n	80194f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80194e4:	f1b8 0f00 	cmp.w	r8, #0
 80194e8:	d004      	beq.n	80194f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80194ea:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80194ee:	682b      	ldr	r3, [r5, #0]
 80194f0:	3301      	adds	r3, #1
 80194f2:	602b      	str	r3, [r5, #0]
 80194f4:	2730      	movs	r7, #48	; 0x30
 80194f6:	2c00      	cmp	r4, #0
 80194f8:	d04e      	beq.n	8019598 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80194fa:	682e      	ldr	r6, [r5, #0]
 80194fc:	3c01      	subs	r4, #1
 80194fe:	42b2      	cmp	r2, r6
 8019500:	b2a4      	uxth	r4, r4
 8019502:	dd49      	ble.n	8019598 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019504:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019508:	682b      	ldr	r3, [r5, #0]
 801950a:	3301      	adds	r3, #1
 801950c:	602b      	str	r3, [r5, #0]
 801950e:	e7f2      	b.n	80194f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019510:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8019514:	d01d      	beq.n	8019552 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019516:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801951a:	d002      	beq.n	8019522 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801951c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019520:	e7c9      	b.n	80194b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019522:	4684      	mov	ip, r0
 8019524:	f04f 0800 	mov.w	r8, #0
 8019528:	2c00      	cmp	r4, #0
 801952a:	d0c6      	beq.n	80194ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801952c:	b947      	cbnz	r7, 8019540 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801952e:	2801      	cmp	r0, #1
 8019530:	d106      	bne.n	8019540 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019532:	8814      	ldrh	r4, [r2, #0]
 8019534:	2c30      	cmp	r4, #48	; 0x30
 8019536:	bf02      	ittt	eq
 8019538:	3202      	addeq	r2, #2
 801953a:	f8cb 2000 	streq.w	r2, [fp]
 801953e:	4638      	moveq	r0, r7
 8019540:	45bc      	cmp	ip, r7
 8019542:	da14      	bge.n	801956e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019544:	b2bf      	uxth	r7, r7
 8019546:	eba7 040c 	sub.w	r4, r7, ip
 801954a:	b2a4      	uxth	r4, r4
 801954c:	46bc      	mov	ip, r7
 801954e:	2600      	movs	r6, #0
 8019550:	e7b3      	b.n	80194ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019552:	4684      	mov	ip, r0
 8019554:	b16c      	cbz	r4, 8019572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019556:	42b8      	cmp	r0, r7
 8019558:	dd00      	ble.n	801955c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801955a:	b2b8      	uxth	r0, r7
 801955c:	2400      	movs	r4, #0
 801955e:	e003      	b.n	8019568 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019560:	f04f 0c01 	mov.w	ip, #1
 8019564:	2400      	movs	r4, #0
 8019566:	4660      	mov	r0, ip
 8019568:	4626      	mov	r6, r4
 801956a:	46a0      	mov	r8, r4
 801956c:	e7a5      	b.n	80194ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801956e:	2400      	movs	r4, #0
 8019570:	e7ed      	b.n	801954e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019572:	4626      	mov	r6, r4
 8019574:	46a0      	mov	r8, r4
 8019576:	e7a0      	b.n	80194ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019578:	2900      	cmp	r1, #0
 801957a:	d0b0      	beq.n	80194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801957c:	2720      	movs	r7, #32
 801957e:	682e      	ldr	r6, [r5, #0]
 8019580:	2900      	cmp	r1, #0
 8019582:	d0ac      	beq.n	80194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019584:	3901      	subs	r1, #1
 8019586:	4296      	cmp	r6, r2
 8019588:	b289      	uxth	r1, r1
 801958a:	daa7      	bge.n	80194dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801958c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019590:	682b      	ldr	r3, [r5, #0]
 8019592:	3301      	adds	r3, #1
 8019594:	602b      	str	r3, [r5, #0]
 8019596:	e7f2      	b.n	801957e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019598:	b188      	cbz	r0, 80195be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801959a:	682b      	ldr	r3, [r5, #0]
 801959c:	3801      	subs	r0, #1
 801959e:	429a      	cmp	r2, r3
 80195a0:	b280      	uxth	r0, r0
 80195a2:	dd0c      	ble.n	80195be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80195a4:	f8db 3000 	ldr.w	r3, [fp]
 80195a8:	1c9c      	adds	r4, r3, #2
 80195aa:	f8cb 4000 	str.w	r4, [fp]
 80195ae:	881c      	ldrh	r4, [r3, #0]
 80195b0:	682b      	ldr	r3, [r5, #0]
 80195b2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80195b6:	682b      	ldr	r3, [r5, #0]
 80195b8:	3301      	adds	r3, #1
 80195ba:	602b      	str	r3, [r5, #0]
 80195bc:	e7ec      	b.n	8019598 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80195be:	2620      	movs	r6, #32
 80195c0:	b151      	cbz	r1, 80195d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80195c2:	6828      	ldr	r0, [r5, #0]
 80195c4:	3901      	subs	r1, #1
 80195c6:	4282      	cmp	r2, r0
 80195c8:	b289      	uxth	r1, r1
 80195ca:	dd05      	ble.n	80195d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80195cc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80195d0:	682b      	ldr	r3, [r5, #0]
 80195d2:	3301      	adds	r3, #1
 80195d4:	602b      	str	r3, [r5, #0]
 80195d6:	e7f3      	b.n	80195c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80195d8:	b005      	add	sp, #20
 80195da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080195de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80195de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80195e2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80195e6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80195ea:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80195ee:	2400      	movs	r4, #0
 80195f0:	8014      	strh	r4, [r2, #0]
 80195f2:	701c      	strb	r4, [r3, #0]
 80195f4:	f888 4000 	strb.w	r4, [r8]
 80195f8:	f88c 4000 	strb.w	r4, [ip]
 80195fc:	f88e 4000 	strb.w	r4, [lr]
 8019600:	703c      	strb	r4, [r7, #0]
 8019602:	6804      	ldr	r4, [r0, #0]
 8019604:	b1a4      	cbz	r4, 8019630 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019606:	8824      	ldrh	r4, [r4, #0]
 8019608:	f04f 0901 	mov.w	r9, #1
 801960c:	b314      	cbz	r4, 8019654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801960e:	2c2b      	cmp	r4, #43	; 0x2b
 8019610:	d001      	beq.n	8019616 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019612:	2c20      	cmp	r4, #32
 8019614:	d110      	bne.n	8019638 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019616:	8014      	strh	r4, [r2, #0]
 8019618:	6804      	ldr	r4, [r0, #0]
 801961a:	b10c      	cbz	r4, 8019620 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801961c:	3402      	adds	r4, #2
 801961e:	6004      	str	r4, [r0, #0]
 8019620:	680c      	ldr	r4, [r1, #0]
 8019622:	b10c      	cbz	r4, 8019628 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019624:	3401      	adds	r4, #1
 8019626:	600c      	str	r4, [r1, #0]
 8019628:	6804      	ldr	r4, [r0, #0]
 801962a:	b17c      	cbz	r4, 801964c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801962c:	8824      	ldrh	r4, [r4, #0]
 801962e:	e7ed      	b.n	801960c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019630:	680c      	ldr	r4, [r1, #0]
 8019632:	b17c      	cbz	r4, 8019654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019634:	7824      	ldrb	r4, [r4, #0]
 8019636:	e7e7      	b.n	8019608 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019638:	2c2d      	cmp	r4, #45	; 0x2d
 801963a:	d102      	bne.n	8019642 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801963c:	f883 9000 	strb.w	r9, [r3]
 8019640:	e7ea      	b.n	8019618 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019642:	2c23      	cmp	r4, #35	; 0x23
 8019644:	d107      	bne.n	8019656 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019646:	f888 9000 	strb.w	r9, [r8]
 801964a:	e7e5      	b.n	8019618 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801964c:	680c      	ldr	r4, [r1, #0]
 801964e:	b10c      	cbz	r4, 8019654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019650:	7824      	ldrb	r4, [r4, #0]
 8019652:	e7db      	b.n	801960c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019654:	2400      	movs	r4, #0
 8019656:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801965a:	2b09      	cmp	r3, #9
 801965c:	d901      	bls.n	8019662 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801965e:	2c2a      	cmp	r4, #42	; 0x2a
 8019660:	d122      	bne.n	80196a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019662:	2301      	movs	r3, #1
 8019664:	2c30      	cmp	r4, #48	; 0x30
 8019666:	f88e 3000 	strb.w	r3, [lr]
 801966a:	d10d      	bne.n	8019688 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801966c:	f88c 3000 	strb.w	r3, [ip]
 8019670:	6803      	ldr	r3, [r0, #0]
 8019672:	b10b      	cbz	r3, 8019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019674:	3302      	adds	r3, #2
 8019676:	6003      	str	r3, [r0, #0]
 8019678:	680b      	ldr	r3, [r1, #0]
 801967a:	b10b      	cbz	r3, 8019680 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801967c:	3301      	adds	r3, #1
 801967e:	600b      	str	r3, [r1, #0]
 8019680:	6803      	ldr	r3, [r0, #0]
 8019682:	2b00      	cmp	r3, #0
 8019684:	d02f      	beq.n	80196e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019686:	881c      	ldrh	r4, [r3, #0]
 8019688:	2c2a      	cmp	r4, #42	; 0x2a
 801968a:	d135      	bne.n	80196f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801968c:	f04f 33ff 	mov.w	r3, #4294967295
 8019690:	6033      	str	r3, [r6, #0]
 8019692:	6803      	ldr	r3, [r0, #0]
 8019694:	b10b      	cbz	r3, 801969a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019696:	3302      	adds	r3, #2
 8019698:	6003      	str	r3, [r0, #0]
 801969a:	680b      	ldr	r3, [r1, #0]
 801969c:	b10b      	cbz	r3, 80196a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801969e:	3301      	adds	r3, #1
 80196a0:	600b      	str	r3, [r1, #0]
 80196a2:	6803      	ldr	r3, [r0, #0]
 80196a4:	b31b      	cbz	r3, 80196ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80196a6:	881c      	ldrh	r4, [r3, #0]
 80196a8:	2c2e      	cmp	r4, #46	; 0x2e
 80196aa:	d11a      	bne.n	80196e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80196ac:	2301      	movs	r3, #1
 80196ae:	703b      	strb	r3, [r7, #0]
 80196b0:	6803      	ldr	r3, [r0, #0]
 80196b2:	b10b      	cbz	r3, 80196b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80196b4:	3302      	adds	r3, #2
 80196b6:	6003      	str	r3, [r0, #0]
 80196b8:	680b      	ldr	r3, [r1, #0]
 80196ba:	b10b      	cbz	r3, 80196c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80196bc:	3301      	adds	r3, #1
 80196be:	600b      	str	r3, [r1, #0]
 80196c0:	6803      	ldr	r3, [r0, #0]
 80196c2:	2b00      	cmp	r3, #0
 80196c4:	d036      	beq.n	8019734 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80196c6:	881b      	ldrh	r3, [r3, #0]
 80196c8:	2b2a      	cmp	r3, #42	; 0x2a
 80196ca:	d137      	bne.n	801973c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80196cc:	f04f 33ff 	mov.w	r3, #4294967295
 80196d0:	602b      	str	r3, [r5, #0]
 80196d2:	6803      	ldr	r3, [r0, #0]
 80196d4:	b10b      	cbz	r3, 80196da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80196d6:	3302      	adds	r3, #2
 80196d8:	6003      	str	r3, [r0, #0]
 80196da:	680b      	ldr	r3, [r1, #0]
 80196dc:	b10b      	cbz	r3, 80196e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80196de:	3301      	adds	r3, #1
 80196e0:	600b      	str	r3, [r1, #0]
 80196e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80196e6:	680c      	ldr	r4, [r1, #0]
 80196e8:	b134      	cbz	r4, 80196f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80196ea:	7824      	ldrb	r4, [r4, #0]
 80196ec:	e7cc      	b.n	8019688 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80196ee:	680b      	ldr	r3, [r1, #0]
 80196f0:	2b00      	cmp	r3, #0
 80196f2:	d0f6      	beq.n	80196e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80196f4:	781c      	ldrb	r4, [r3, #0]
 80196f6:	e7d7      	b.n	80196a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80196f8:	2300      	movs	r3, #0
 80196fa:	6033      	str	r3, [r6, #0]
 80196fc:	220a      	movs	r2, #10
 80196fe:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019702:	fa1f f38c 	uxth.w	r3, ip
 8019706:	2b09      	cmp	r3, #9
 8019708:	d8ce      	bhi.n	80196a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801970a:	6833      	ldr	r3, [r6, #0]
 801970c:	fb02 c303 	mla	r3, r2, r3, ip
 8019710:	6033      	str	r3, [r6, #0]
 8019712:	6803      	ldr	r3, [r0, #0]
 8019714:	b10b      	cbz	r3, 801971a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019716:	3302      	adds	r3, #2
 8019718:	6003      	str	r3, [r0, #0]
 801971a:	680b      	ldr	r3, [r1, #0]
 801971c:	b10b      	cbz	r3, 8019722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801971e:	3301      	adds	r3, #1
 8019720:	600b      	str	r3, [r1, #0]
 8019722:	6803      	ldr	r3, [r0, #0]
 8019724:	b10b      	cbz	r3, 801972a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019726:	881c      	ldrh	r4, [r3, #0]
 8019728:	e7e9      	b.n	80196fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801972a:	680c      	ldr	r4, [r1, #0]
 801972c:	2c00      	cmp	r4, #0
 801972e:	d0e6      	beq.n	80196fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019730:	7824      	ldrb	r4, [r4, #0]
 8019732:	e7e4      	b.n	80196fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019734:	680b      	ldr	r3, [r1, #0]
 8019736:	b10b      	cbz	r3, 801973c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019738:	781b      	ldrb	r3, [r3, #0]
 801973a:	e7c5      	b.n	80196c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801973c:	2200      	movs	r2, #0
 801973e:	602a      	str	r2, [r5, #0]
 8019740:	240a      	movs	r4, #10
 8019742:	3b30      	subs	r3, #48	; 0x30
 8019744:	b29e      	uxth	r6, r3
 8019746:	2e09      	cmp	r6, #9
 8019748:	682a      	ldr	r2, [r5, #0]
 801974a:	d813      	bhi.n	8019774 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801974c:	fb04 3302 	mla	r3, r4, r2, r3
 8019750:	602b      	str	r3, [r5, #0]
 8019752:	6803      	ldr	r3, [r0, #0]
 8019754:	b10b      	cbz	r3, 801975a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019756:	3302      	adds	r3, #2
 8019758:	6003      	str	r3, [r0, #0]
 801975a:	680b      	ldr	r3, [r1, #0]
 801975c:	b10b      	cbz	r3, 8019762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801975e:	3301      	adds	r3, #1
 8019760:	600b      	str	r3, [r1, #0]
 8019762:	6803      	ldr	r3, [r0, #0]
 8019764:	b10b      	cbz	r3, 801976a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019766:	881b      	ldrh	r3, [r3, #0]
 8019768:	e7eb      	b.n	8019742 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801976a:	680b      	ldr	r3, [r1, #0]
 801976c:	2b00      	cmp	r3, #0
 801976e:	d0e8      	beq.n	8019742 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019770:	781b      	ldrb	r3, [r3, #0]
 8019772:	e7e6      	b.n	8019742 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019774:	2a06      	cmp	r2, #6
 8019776:	bfa8      	it	ge
 8019778:	2206      	movge	r2, #6
 801977a:	602a      	str	r2, [r5, #0]
 801977c:	e7b1      	b.n	80196e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801977e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801977e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019782:	b0a3      	sub	sp, #140	; 0x8c
 8019784:	2600      	movs	r6, #0
 8019786:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801978a:	4607      	mov	r7, r0
 801978c:	4688      	mov	r8, r1
 801978e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019792:	4631      	mov	r1, r6
 8019794:	2242      	movs	r2, #66	; 0x42
 8019796:	4648      	mov	r0, r9
 8019798:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801979a:	960d      	str	r6, [sp, #52]	; 0x34
 801979c:	f012 f881 	bl	802b8a2 <memset>
 80197a0:	b15f      	cbz	r7, 80197ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80197a2:	f108 3aff 	add.w	sl, r8, #4294967295
 80197a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80197a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80197aa:	b152      	cbz	r2, 80197c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80197ac:	8812      	ldrh	r2, [r2, #0]
 80197ae:	b10a      	cbz	r2, 80197b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80197b0:	459a      	cmp	sl, r3
 80197b2:	dc2e      	bgt.n	8019812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80197b4:	2200      	movs	r2, #0
 80197b6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80197ba:	4638      	mov	r0, r7
 80197bc:	b023      	add	sp, #140	; 0x8c
 80197be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197c2:	9a08      	ldr	r2, [sp, #32]
 80197c4:	2a00      	cmp	r2, #0
 80197c6:	d0f5      	beq.n	80197b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80197c8:	7812      	ldrb	r2, [r2, #0]
 80197ca:	e7f0      	b.n	80197ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80197cc:	2d00      	cmp	r5, #0
 80197ce:	d0ea      	beq.n	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80197d0:	782a      	ldrb	r2, [r5, #0]
 80197d2:	b142      	cbz	r2, 80197e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80197d4:	2a25      	cmp	r2, #37	; 0x25
 80197d6:	d001      	beq.n	80197dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80197d8:	459a      	cmp	sl, r3
 80197da:	dc08      	bgt.n	80197ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80197dc:	f1bb 0f00 	cmp.w	fp, #0
 80197e0:	d121      	bne.n	8019826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80197e2:	2d00      	cmp	r5, #0
 80197e4:	d0df      	beq.n	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80197e6:	782a      	ldrb	r2, [r5, #0]
 80197e8:	f04f 0b00 	mov.w	fp, #0
 80197ec:	e01d      	b.n	801982a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80197ee:	f1bb 0f00 	cmp.w	fp, #0
 80197f2:	d078      	beq.n	80198e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80197f4:	f8bb 2000 	ldrh.w	r2, [fp]
 80197f8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80197fc:	f1bb 0f00 	cmp.w	fp, #0
 8019800:	d002      	beq.n	8019808 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019802:	f10b 0202 	add.w	r2, fp, #2
 8019806:	9209      	str	r2, [sp, #36]	; 0x24
 8019808:	b10d      	cbz	r5, 801980e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801980a:	3501      	adds	r5, #1
 801980c:	9508      	str	r5, [sp, #32]
 801980e:	3301      	adds	r3, #1
 8019810:	930d      	str	r3, [sp, #52]	; 0x34
 8019812:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019816:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019818:	f1bb 0f00 	cmp.w	fp, #0
 801981c:	d0d6      	beq.n	80197cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801981e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019822:	2a00      	cmp	r2, #0
 8019824:	d1d6      	bne.n	80197d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019826:	f8bb 2000 	ldrh.w	r2, [fp]
 801982a:	2a00      	cmp	r2, #0
 801982c:	d0bb      	beq.n	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801982e:	459a      	cmp	sl, r3
 8019830:	ddb9      	ble.n	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019832:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019836:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801983a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801983e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8019842:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8019846:	960e      	str	r6, [sp, #56]	; 0x38
 8019848:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801984c:	960f      	str	r6, [sp, #60]	; 0x3c
 801984e:	f1bb 0f00 	cmp.w	fp, #0
 8019852:	d002      	beq.n	801985a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019854:	f10b 0302 	add.w	r3, fp, #2
 8019858:	9309      	str	r3, [sp, #36]	; 0x24
 801985a:	b10d      	cbz	r5, 8019860 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801985c:	1c6b      	adds	r3, r5, #1
 801985e:	9308      	str	r3, [sp, #32]
 8019860:	ab0f      	add	r3, sp, #60	; 0x3c
 8019862:	9305      	str	r3, [sp, #20]
 8019864:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019868:	9304      	str	r3, [sp, #16]
 801986a:	ab0e      	add	r3, sp, #56	; 0x38
 801986c:	9303      	str	r3, [sp, #12]
 801986e:	ab0c      	add	r3, sp, #48	; 0x30
 8019870:	9302      	str	r3, [sp, #8]
 8019872:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019876:	9301      	str	r3, [sp, #4]
 8019878:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801987c:	9300      	str	r3, [sp, #0]
 801987e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019882:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019886:	a908      	add	r1, sp, #32
 8019888:	a809      	add	r0, sp, #36	; 0x24
 801988a:	f7ff fea8 	bl	80195de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801988e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019890:	2b00      	cmp	r3, #0
 8019892:	bfbe      	ittt	lt
 8019894:	6823      	ldrlt	r3, [r4, #0]
 8019896:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801989a:	930e      	strlt	r3, [sp, #56]	; 0x38
 801989c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801989e:	bfb8      	it	lt
 80198a0:	3404      	addlt	r4, #4
 80198a2:	2b00      	cmp	r3, #0
 80198a4:	bfb8      	it	lt
 80198a6:	6823      	ldrlt	r3, [r4, #0]
 80198a8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80198ac:	bfbe      	ittt	lt
 80198ae:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80198b2:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80198b4:	3404      	addlt	r4, #4
 80198b6:	b1d9      	cbz	r1, 80198f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80198b8:	880b      	ldrh	r3, [r1, #0]
 80198ba:	2b69      	cmp	r3, #105	; 0x69
 80198bc:	d01f      	beq.n	80198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80198be:	d82f      	bhi.n	8019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80198c0:	2b58      	cmp	r3, #88	; 0x58
 80198c2:	d01c      	beq.n	80198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80198c4:	d818      	bhi.n	80198f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80198c6:	2b25      	cmp	r3, #37	; 0x25
 80198c8:	d034      	beq.n	8019934 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80198ca:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80198ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198d0:	f1bb 0f00 	cmp.w	fp, #0
 80198d4:	f000 80b8 	beq.w	8019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80198d8:	f8bb 5000 	ldrh.w	r5, [fp]
 80198dc:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80198e0:	3301      	adds	r3, #1
 80198e2:	930d      	str	r3, [sp, #52]	; 0x34
 80198e4:	e029      	b.n	801993a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80198e6:	b10d      	cbz	r5, 80198ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80198e8:	782a      	ldrb	r2, [r5, #0]
 80198ea:	e785      	b.n	80197f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80198ec:	462a      	mov	r2, r5
 80198ee:	e783      	b.n	80197f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80198f0:	2a00      	cmp	r2, #0
 80198f2:	d0ea      	beq.n	80198ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80198f4:	7813      	ldrb	r3, [r2, #0]
 80198f6:	e7e0      	b.n	80198ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80198f8:	3b63      	subs	r3, #99	; 0x63
 80198fa:	2b01      	cmp	r3, #1
 80198fc:	d8e5      	bhi.n	80198ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80198fe:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019902:	b329      	cbz	r1, 8019950 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019904:	880b      	ldrh	r3, [r1, #0]
 8019906:	2b69      	cmp	r3, #105	; 0x69
 8019908:	d063      	beq.n	80199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801990a:	d825      	bhi.n	8019958 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801990c:	2b63      	cmp	r3, #99	; 0x63
 801990e:	d038      	beq.n	8019982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019910:	2b64      	cmp	r3, #100	; 0x64
 8019912:	d05e      	beq.n	80199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019914:	2b58      	cmp	r3, #88	; 0x58
 8019916:	d07b      	beq.n	8019a10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019918:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801991c:	4625      	mov	r5, r4
 801991e:	e036      	b.n	801998e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019920:	2b73      	cmp	r3, #115	; 0x73
 8019922:	d0ec      	beq.n	80198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019924:	d802      	bhi.n	801992c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019926:	2b6f      	cmp	r3, #111	; 0x6f
 8019928:	d1cf      	bne.n	80198ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801992a:	e7e8      	b.n	80198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801992c:	2b75      	cmp	r3, #117	; 0x75
 801992e:	d0e6      	beq.n	80198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019930:	2b78      	cmp	r3, #120	; 0x78
 8019932:	e7f9      	b.n	8019928 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019934:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019936:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801993a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801993c:	b10b      	cbz	r3, 8019942 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801993e:	3302      	adds	r3, #2
 8019940:	9309      	str	r3, [sp, #36]	; 0x24
 8019942:	9b08      	ldr	r3, [sp, #32]
 8019944:	2b00      	cmp	r3, #0
 8019946:	f43f af2e 	beq.w	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801994a:	3301      	adds	r3, #1
 801994c:	9308      	str	r3, [sp, #32]
 801994e:	e72a      	b.n	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019950:	2a00      	cmp	r2, #0
 8019952:	d0e1      	beq.n	8019918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019954:	7813      	ldrb	r3, [r2, #0]
 8019956:	e7d6      	b.n	8019906 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019958:	2b73      	cmp	r3, #115	; 0x73
 801995a:	d036      	beq.n	80199ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801995c:	d807      	bhi.n	801996e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801995e:	2b6f      	cmp	r3, #111	; 0x6f
 8019960:	d1da      	bne.n	8019918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019962:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019964:	1d25      	adds	r5, r4, #4
 8019966:	eba8 0202 	sub.w	r2, r8, r2
 801996a:	2308      	movs	r3, #8
 801996c:	e04a      	b.n	8019a04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801996e:	2b75      	cmp	r3, #117	; 0x75
 8019970:	d043      	beq.n	80199fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019972:	2b78      	cmp	r3, #120	; 0x78
 8019974:	d1d0      	bne.n	8019918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019976:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019978:	1d25      	adds	r5, r4, #4
 801997a:	eba8 0202 	sub.w	r2, r8, r2
 801997e:	2310      	movs	r3, #16
 8019980:	e040      	b.n	8019a04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019982:	6823      	ldr	r3, [r4, #0]
 8019984:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019988:	1d25      	adds	r5, r4, #4
 801998a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801998e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019990:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019994:	2b00      	cmp	r3, #0
 8019996:	d052      	beq.n	8019a3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019998:	881a      	ldrh	r2, [r3, #0]
 801999a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801999e:	a80d      	add	r0, sp, #52	; 0x34
 80199a0:	9005      	str	r0, [sp, #20]
 80199a2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80199a6:	9004      	str	r0, [sp, #16]
 80199a8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80199aa:	9003      	str	r0, [sp, #12]
 80199ac:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80199b0:	9002      	str	r0, [sp, #8]
 80199b2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80199b4:	9001      	str	r0, [sp, #4]
 80199b6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80199ba:	9000      	str	r0, [sp, #0]
 80199bc:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80199c0:	a810      	add	r0, sp, #64	; 0x40
 80199c2:	f7ff fd49 	bl	8019458 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80199c6:	462c      	mov	r4, r5
 80199c8:	e7b7      	b.n	801993a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80199ca:	6823      	ldr	r3, [r4, #0]
 80199cc:	1d25      	adds	r5, r4, #4
 80199ce:	9310      	str	r3, [sp, #64]	; 0x40
 80199d0:	e7dd      	b.n	801998e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80199d2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80199d4:	6820      	ldr	r0, [r4, #0]
 80199d6:	eba8 0202 	sub.w	r2, r8, r2
 80199da:	230a      	movs	r3, #10
 80199dc:	b292      	uxth	r2, r2
 80199de:	4649      	mov	r1, r9
 80199e0:	f7ff fce4 	bl	80193ac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80199e4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80199e8:	2b2d      	cmp	r3, #45	; 0x2d
 80199ea:	f104 0504 	add.w	r5, r4, #4
 80199ee:	d1ce      	bne.n	801998e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80199f0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80199f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199f6:	3302      	adds	r3, #2
 80199f8:	e7e9      	b.n	80199ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80199fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80199fc:	1d25      	adds	r5, r4, #4
 80199fe:	eba8 0202 	sub.w	r2, r8, r2
 8019a02:	230a      	movs	r3, #10
 8019a04:	b292      	uxth	r2, r2
 8019a06:	4649      	mov	r1, r9
 8019a08:	6820      	ldr	r0, [r4, #0]
 8019a0a:	f7ff fcfb 	bl	8019404 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019a0e:	e7be      	b.n	801998e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019a10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019a12:	6820      	ldr	r0, [r4, #0]
 8019a14:	eba8 0202 	sub.w	r2, r8, r2
 8019a18:	b292      	uxth	r2, r2
 8019a1a:	2310      	movs	r3, #16
 8019a1c:	4649      	mov	r1, r9
 8019a1e:	f7ff fcf1 	bl	8019404 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019a22:	1d25      	adds	r5, r4, #4
 8019a24:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019a28:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019a2c:	2b00      	cmp	r3, #0
 8019a2e:	d0ae      	beq.n	801998e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019a30:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019a34:	2919      	cmp	r1, #25
 8019a36:	d8f7      	bhi.n	8019a28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019a38:	3b20      	subs	r3, #32
 8019a3a:	8013      	strh	r3, [r2, #0]
 8019a3c:	e7f4      	b.n	8019a28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019a3e:	9a08      	ldr	r2, [sp, #32]
 8019a40:	2a00      	cmp	r2, #0
 8019a42:	d0aa      	beq.n	801999a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019a44:	7812      	ldrb	r2, [r2, #0]
 8019a46:	e7a8      	b.n	801999a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019a48:	2d00      	cmp	r5, #0
 8019a4a:	f43f af47 	beq.w	80198dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019a4e:	782d      	ldrb	r5, [r5, #0]
 8019a50:	e744      	b.n	80198dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08019a52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019a52:	b507      	push	{r0, r1, r2, lr}
 8019a54:	9300      	str	r3, [sp, #0]
 8019a56:	4613      	mov	r3, r2
 8019a58:	2200      	movs	r2, #0
 8019a5a:	f7ff fe90 	bl	801977e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019a5e:	b003      	add	sp, #12
 8019a60:	f85d fb04 	ldr.w	pc, [sp], #4

08019a64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019a64:	b40c      	push	{r2, r3}
 8019a66:	b507      	push	{r0, r1, r2, lr}
 8019a68:	ab04      	add	r3, sp, #16
 8019a6a:	f853 2b04 	ldr.w	r2, [r3], #4
 8019a6e:	9301      	str	r3, [sp, #4]
 8019a70:	f7ff ffef 	bl	8019a52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019a74:	b003      	add	sp, #12
 8019a76:	f85d eb04 	ldr.w	lr, [sp], #4
 8019a7a:	b002      	add	sp, #8
 8019a7c:	4770      	bx	lr
	...

08019a80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8019a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a84:	b0c5      	sub	sp, #276	; 0x114
 8019a86:	2400      	movs	r4, #0
 8019a88:	af11      	add	r7, sp, #68	; 0x44
 8019a8a:	4606      	mov	r6, r0
 8019a8c:	468a      	mov	sl, r1
 8019a8e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019a92:	4621      	mov	r1, r4
 8019a94:	22c8      	movs	r2, #200	; 0xc8
 8019a96:	4638      	mov	r0, r7
 8019a98:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8019a9c:	940d      	str	r4, [sp, #52]	; 0x34
 8019a9e:	f011 ff00 	bl	802b8a2 <memset>
 8019aa2:	b16e      	cbz	r6, 8019ac0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8019aa4:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019d48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019aa8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019aaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019aac:	b162      	cbz	r2, 8019ac8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8019aae:	8812      	ldrh	r2, [r2, #0]
 8019ab0:	b11a      	cbz	r2, 8019aba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019ab2:	f10a 31ff 	add.w	r1, sl, #4294967295
 8019ab6:	4299      	cmp	r1, r3
 8019ab8:	dc2e      	bgt.n	8019b18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019aba:	2200      	movs	r2, #0
 8019abc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019ac0:	4630      	mov	r0, r6
 8019ac2:	b045      	add	sp, #276	; 0x114
 8019ac4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ac8:	9a08      	ldr	r2, [sp, #32]
 8019aca:	2a00      	cmp	r2, #0
 8019acc:	d0f5      	beq.n	8019aba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019ace:	7812      	ldrb	r2, [r2, #0]
 8019ad0:	e7ee      	b.n	8019ab0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8019ad2:	2d00      	cmp	r5, #0
 8019ad4:	d0e8      	beq.n	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019ad6:	782a      	ldrb	r2, [r5, #0]
 8019ad8:	b142      	cbz	r2, 8019aec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019ada:	2a25      	cmp	r2, #37	; 0x25
 8019adc:	d001      	beq.n	8019ae2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8019ade:	4299      	cmp	r1, r3
 8019ae0:	dc08      	bgt.n	8019af4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8019ae2:	f1b8 0f00 	cmp.w	r8, #0
 8019ae6:	d121      	bne.n	8019b2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019ae8:	2d00      	cmp	r5, #0
 8019aea:	d0dd      	beq.n	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019aec:	782a      	ldrb	r2, [r5, #0]
 8019aee:	f04f 0800 	mov.w	r8, #0
 8019af2:	e01d      	b.n	8019b30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019af4:	f1b8 0f00 	cmp.w	r8, #0
 8019af8:	d07f      	beq.n	8019bfa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019afa:	f8b8 2000 	ldrh.w	r2, [r8]
 8019afe:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019b02:	f1b8 0f00 	cmp.w	r8, #0
 8019b06:	d002      	beq.n	8019b0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019b08:	f108 0202 	add.w	r2, r8, #2
 8019b0c:	9209      	str	r2, [sp, #36]	; 0x24
 8019b0e:	b10d      	cbz	r5, 8019b14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019b10:	3501      	adds	r5, #1
 8019b12:	9508      	str	r5, [sp, #32]
 8019b14:	3301      	adds	r3, #1
 8019b16:	930d      	str	r3, [sp, #52]	; 0x34
 8019b18:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019b1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019b1e:	f1b8 0f00 	cmp.w	r8, #0
 8019b22:	d0d6      	beq.n	8019ad2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019b24:	f8b8 2000 	ldrh.w	r2, [r8]
 8019b28:	2a00      	cmp	r2, #0
 8019b2a:	d1d6      	bne.n	8019ada <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019b2c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019b30:	2a00      	cmp	r2, #0
 8019b32:	d0b9      	beq.n	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019b34:	4299      	cmp	r1, r3
 8019b36:	ddb7      	ble.n	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019b38:	2300      	movs	r3, #0
 8019b3a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019b3e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8019b42:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019b46:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019b4a:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8019b4e:	930e      	str	r3, [sp, #56]	; 0x38
 8019b50:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019b54:	930f      	str	r3, [sp, #60]	; 0x3c
 8019b56:	f1b8 0f00 	cmp.w	r8, #0
 8019b5a:	d002      	beq.n	8019b62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019b5c:	f108 0302 	add.w	r3, r8, #2
 8019b60:	9309      	str	r3, [sp, #36]	; 0x24
 8019b62:	b10d      	cbz	r5, 8019b68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019b64:	1c6b      	adds	r3, r5, #1
 8019b66:	9308      	str	r3, [sp, #32]
 8019b68:	ab0f      	add	r3, sp, #60	; 0x3c
 8019b6a:	9305      	str	r3, [sp, #20]
 8019b6c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019b70:	9304      	str	r3, [sp, #16]
 8019b72:	ab0e      	add	r3, sp, #56	; 0x38
 8019b74:	9303      	str	r3, [sp, #12]
 8019b76:	ab0c      	add	r3, sp, #48	; 0x30
 8019b78:	9302      	str	r3, [sp, #8]
 8019b7a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019b7e:	9301      	str	r3, [sp, #4]
 8019b80:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019b84:	9300      	str	r3, [sp, #0]
 8019b86:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019b8a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019b8e:	a908      	add	r1, sp, #32
 8019b90:	a809      	add	r0, sp, #36	; 0x24
 8019b92:	f7ff fd24 	bl	80195de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019b96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b98:	2b00      	cmp	r3, #0
 8019b9a:	da0b      	bge.n	8019bb4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019b9c:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019ba0:	edd3 7a00 	vldr	s15, [r3]
 8019ba4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019ba8:	3401      	adds	r4, #1
 8019baa:	ee17 3a90 	vmov	r3, s15
 8019bae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019bb2:	930e      	str	r3, [sp, #56]	; 0x38
 8019bb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019bb6:	2b00      	cmp	r3, #0
 8019bb8:	da0b      	bge.n	8019bd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019bba:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019bbe:	edd3 7a00 	vldr	s15, [r3]
 8019bc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019bc6:	3401      	adds	r4, #1
 8019bc8:	ee17 3a90 	vmov	r3, s15
 8019bcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019bd0:	930f      	str	r3, [sp, #60]	; 0x3c
 8019bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bd4:	b1b3      	cbz	r3, 8019c04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019bd6:	881a      	ldrh	r2, [r3, #0]
 8019bd8:	2a25      	cmp	r2, #37	; 0x25
 8019bda:	d018      	beq.n	8019c0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019bdc:	2a66      	cmp	r2, #102	; 0x66
 8019bde:	d01c      	beq.n	8019c1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019be0:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019be4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019be6:	f1b8 0f00 	cmp.w	r8, #0
 8019bea:	f000 8121 	beq.w	8019e30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019bee:	f8b8 5000 	ldrh.w	r5, [r8]
 8019bf2:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019bf6:	3301      	adds	r3, #1
 8019bf8:	e00d      	b.n	8019c16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019bfa:	b10d      	cbz	r5, 8019c00 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019bfc:	782a      	ldrb	r2, [r5, #0]
 8019bfe:	e77e      	b.n	8019afe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019c00:	462a      	mov	r2, r5
 8019c02:	e77c      	b.n	8019afe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019c04:	9b08      	ldr	r3, [sp, #32]
 8019c06:	2b00      	cmp	r3, #0
 8019c08:	d0ea      	beq.n	8019be0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019c0a:	781a      	ldrb	r2, [r3, #0]
 8019c0c:	e7e4      	b.n	8019bd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019c0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019c10:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019c14:	3302      	adds	r3, #2
 8019c16:	930d      	str	r3, [sp, #52]	; 0x34
 8019c18:	e041      	b.n	8019c9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019c1a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019c1e:	edd3 7a00 	vldr	s15, [r3]
 8019c22:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019c26:	9710      	str	r7, [sp, #64]	; 0x40
 8019c28:	3401      	adds	r4, #1
 8019c2a:	b923      	cbnz	r3, 8019c36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019c2c:	2301      	movs	r3, #1
 8019c2e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019c32:	2306      	movs	r3, #6
 8019c34:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019c3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c3e:	bf48      	it	mi
 8019c40:	eef1 7a67 	vnegmi.f32	s15, s15
 8019c44:	eeb0 7ae7 	vabs.f32	s14, s15
 8019c48:	bf48      	it	mi
 8019c4a:	232d      	movmi	r3, #45	; 0x2d
 8019c4c:	eeb4 7a45 	vcmp.f32	s14, s10
 8019c50:	bf48      	it	mi
 8019c52:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c5a:	dd2b      	ble.n	8019cb4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019c5c:	4b3b      	ldr	r3, [pc, #236]	; (8019d4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8019c5e:	9311      	str	r3, [sp, #68]	; 0x44
 8019c60:	2366      	movs	r3, #102	; 0x66
 8019c62:	9312      	str	r3, [sp, #72]	; 0x48
 8019c64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c66:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019c6a:	2b00      	cmp	r3, #0
 8019c6c:	f000 80da 	beq.w	8019e24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8019c70:	881a      	ldrh	r2, [r3, #0]
 8019c72:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019c76:	a80d      	add	r0, sp, #52	; 0x34
 8019c78:	9005      	str	r0, [sp, #20]
 8019c7a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019c7e:	9004      	str	r0, [sp, #16]
 8019c80:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019c82:	9003      	str	r0, [sp, #12]
 8019c84:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019c88:	9002      	str	r0, [sp, #8]
 8019c8a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019c8c:	9001      	str	r0, [sp, #4]
 8019c8e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019c92:	9000      	str	r0, [sp, #0]
 8019c94:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019c98:	a810      	add	r0, sp, #64	; 0x40
 8019c9a:	f7ff fbdd 	bl	8019458 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019c9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ca0:	b10b      	cbz	r3, 8019ca6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8019ca2:	3302      	adds	r3, #2
 8019ca4:	9309      	str	r3, [sp, #36]	; 0x24
 8019ca6:	9b08      	ldr	r3, [sp, #32]
 8019ca8:	2b00      	cmp	r3, #0
 8019caa:	f43f aefd 	beq.w	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019cae:	3301      	adds	r3, #1
 8019cb0:	9308      	str	r3, [sp, #32]
 8019cb2:	e6f9      	b.n	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019cb4:	eef4 7a67 	vcmp.f32	s15, s15
 8019cb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cbc:	d63a      	bvs.n	8019d34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8019cbe:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8019cc2:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019cc6:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019cca:	eeb0 6a67 	vmov.f32	s12, s15
 8019cce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cd2:	eef0 5a47 	vmov.f32	s11, s14
 8019cd6:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019cda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cde:	da2d      	bge.n	8019d3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019ce0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ce2:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019ce6:	2100      	movs	r1, #0
 8019ce8:	eef0 4a46 	vmov.f32	s9, s12
 8019cec:	ebaa 0202 	sub.w	r2, sl, r2
 8019cf0:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019cf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cf8:	b28d      	uxth	r5, r1
 8019cfa:	db2c      	blt.n	8019d56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019cfc:	1a53      	subs	r3, r2, r1
 8019cfe:	2b00      	cmp	r3, #0
 8019d00:	dd29      	ble.n	8019d56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019d02:	3101      	adds	r1, #1
 8019d04:	2964      	cmp	r1, #100	; 0x64
 8019d06:	d025      	beq.n	8019d54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019d08:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019d0c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019d10:	ee17 3a10 	vmov	r3, s14
 8019d14:	2b09      	cmp	r3, #9
 8019d16:	bfa8      	it	ge
 8019d18:	2309      	movge	r3, #9
 8019d1a:	ee07 3a10 	vmov	s14, r3
 8019d1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019d22:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019d26:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019d2a:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8019d2e:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8019d32:	e7dd      	b.n	8019cf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019d34:	4b06      	ldr	r3, [pc, #24]	; (8019d50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019d36:	9311      	str	r3, [sp, #68]	; 0x44
 8019d38:	236e      	movs	r3, #110	; 0x6e
 8019d3a:	e792      	b.n	8019c62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019d3c:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019d40:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019d44:	e7c7      	b.n	8019cd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019d46:	bf00      	nop
 8019d48:	7f7fffff 	.word	0x7f7fffff
 8019d4c:	006e0069 	.word	0x006e0069
 8019d50:	0061006e 	.word	0x0061006e
 8019d54:	2563      	movs	r5, #99	; 0x63
 8019d56:	2a63      	cmp	r2, #99	; 0x63
 8019d58:	bfd4      	ite	le
 8019d5a:	ebc5 0202 	rsble	r2, r5, r2
 8019d5e:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8019d62:	2a00      	cmp	r2, #0
 8019d64:	dd43      	ble.n	8019dee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019d66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019d68:	2b00      	cmp	r3, #0
 8019d6a:	dd40      	ble.n	8019dee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019d6c:	f04f 0901 	mov.w	r9, #1
 8019d70:	210a      	movs	r1, #10
 8019d72:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019d76:	d30c      	bcc.n	8019d92 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019d78:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019d7c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019d80:	ee17 0a10 	vmov	r0, s14
 8019d84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019d88:	fb01 0909 	mla	r9, r1, r9, r0
 8019d8c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019d90:	e7ef      	b.n	8019d72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8019d92:	3501      	adds	r5, #1
 8019d94:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d96:	b292      	uxth	r2, r2
 8019d98:	230a      	movs	r3, #10
 8019d9a:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8019d9e:	4648      	mov	r0, r9
 8019da0:	f7ff fb4e 	bl	8019440 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019da4:	f1b9 0f01 	cmp.w	r9, #1
 8019da8:	dc1f      	bgt.n	8019dea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019daa:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8019dae:	2b00      	cmp	r3, #0
 8019db0:	bf0c      	ite	eq
 8019db2:	2300      	moveq	r3, #0
 8019db4:	232e      	movne	r3, #46	; 0x2e
 8019db6:	aa44      	add	r2, sp, #272	; 0x110
 8019db8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019dbc:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019dc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dc4:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019dc8:	f6ff af4c 	blt.w	8019c64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019dcc:	2300      	movs	r3, #0
 8019dce:	f838 2b02 	ldrh.w	r2, [r8], #2
 8019dd2:	1c59      	adds	r1, r3, #1
 8019dd4:	b98a      	cbnz	r2, 8019dfa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019dd6:	b29b      	uxth	r3, r3
 8019dd8:	2130      	movs	r1, #48	; 0x30
 8019dda:	b983      	cbnz	r3, 8019dfe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019ddc:	2331      	movs	r3, #49	; 0x31
 8019dde:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019de2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019de4:	3b02      	subs	r3, #2
 8019de6:	9310      	str	r3, [sp, #64]	; 0x40
 8019de8:	e73c      	b.n	8019c64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019dea:	232e      	movs	r3, #46	; 0x2e
 8019dec:	e7e3      	b.n	8019db6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019dee:	ab44      	add	r3, sp, #272	; 0x110
 8019df0:	3501      	adds	r5, #1
 8019df2:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019df6:	2300      	movs	r3, #0
 8019df8:	e7e0      	b.n	8019dbc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019dfa:	460b      	mov	r3, r1
 8019dfc:	e7e7      	b.n	8019dce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019dfe:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019e02:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019e06:	2808      	cmp	r0, #8
 8019e08:	d806      	bhi.n	8019e18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019e0a:	a944      	add	r1, sp, #272	; 0x110
 8019e0c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019e10:	3201      	adds	r2, #1
 8019e12:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019e16:	e725      	b.n	8019c64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019e18:	2a39      	cmp	r2, #57	; 0x39
 8019e1a:	bf08      	it	eq
 8019e1c:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019e20:	3b01      	subs	r3, #1
 8019e22:	e7da      	b.n	8019dda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019e24:	9a08      	ldr	r2, [sp, #32]
 8019e26:	2a00      	cmp	r2, #0
 8019e28:	f43f af23 	beq.w	8019c72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019e2c:	7812      	ldrb	r2, [r2, #0]
 8019e2e:	e720      	b.n	8019c72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019e30:	2d00      	cmp	r5, #0
 8019e32:	f43f aede 	beq.w	8019bf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019e36:	782d      	ldrb	r5, [r5, #0]
 8019e38:	e6db      	b.n	8019bf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019e3a:	bf00      	nop

08019e3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019e3c:	b507      	push	{r0, r1, r2, lr}
 8019e3e:	9300      	str	r3, [sp, #0]
 8019e40:	4613      	mov	r3, r2
 8019e42:	2200      	movs	r2, #0
 8019e44:	f7ff fe1c 	bl	8019a80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019e48:	b003      	add	sp, #12
 8019e4a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019e50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019e50:	4b01      	ldr	r3, [pc, #4]	; (8019e58 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019e52:	6018      	str	r0, [r3, #0]
 8019e54:	4770      	bx	lr
 8019e56:	bf00      	nop
 8019e58:	2001391c 	.word	0x2001391c

08019e5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019e5c:	4b06      	ldr	r3, [pc, #24]	; (8019e78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019e5e:	881a      	ldrh	r2, [r3, #0]
 8019e60:	4282      	cmp	r2, r0
 8019e62:	d807      	bhi.n	8019e74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019e64:	4b05      	ldr	r3, [pc, #20]	; (8019e7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019e66:	881b      	ldrh	r3, [r3, #0]
 8019e68:	4413      	add	r3, r2
 8019e6a:	4298      	cmp	r0, r3
 8019e6c:	bfac      	ite	ge
 8019e6e:	2000      	movge	r0, #0
 8019e70:	2001      	movlt	r0, #1
 8019e72:	4770      	bx	lr
 8019e74:	2000      	movs	r0, #0
 8019e76:	4770      	bx	lr
 8019e78:	2001393c 	.word	0x2001393c
 8019e7c:	20013940 	.word	0x20013940

08019e80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019e80:	b508      	push	{r3, lr}
 8019e82:	4601      	mov	r1, r0
 8019e84:	f7ff ffea 	bl	8019e5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019e88:	b118      	cbz	r0, 8019e92 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019e8a:	4b02      	ldr	r3, [pc, #8]	; (8019e94 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019e8c:	681b      	ldr	r3, [r3, #0]
 8019e8e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019e92:	bd08      	pop	{r3, pc}
 8019e94:	20013920 	.word	0x20013920

08019e98 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019e98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019e9a:	4c24      	ldr	r4, [pc, #144]	; (8019f2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019e9c:	6823      	ldr	r3, [r4, #0]
 8019e9e:	2b00      	cmp	r3, #0
 8019ea0:	d042      	beq.n	8019f28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019ea2:	4a23      	ldr	r2, [pc, #140]	; (8019f30 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019ea4:	4d23      	ldr	r5, [pc, #140]	; (8019f34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019ea6:	8811      	ldrh	r1, [r2, #0]
 8019ea8:	f8b5 c000 	ldrh.w	ip, [r5]
 8019eac:	4822      	ldr	r0, [pc, #136]	; (8019f38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8019eae:	4461      	add	r1, ip
 8019eb0:	1c4a      	adds	r2, r1, #1
 8019eb2:	f022 0201 	bic.w	r2, r2, #1
 8019eb6:	008f      	lsls	r7, r1, #2
 8019eb8:	0412      	lsls	r2, r2, #16
 8019eba:	19de      	adds	r6, r3, r7
 8019ebc:	0c12      	lsrs	r2, r2, #16
 8019ebe:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019ec2:	6006      	str	r6, [r0, #0]
 8019ec4:	4e1d      	ldr	r6, [pc, #116]	; (8019f3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019ec6:	19da      	adds	r2, r3, r7
 8019ec8:	6032      	str	r2, [r6, #0]
 8019eca:	220e      	movs	r2, #14
 8019ecc:	fb02 f20c 	mul.w	r2, r2, ip
 8019ed0:	3203      	adds	r2, #3
 8019ed2:	f022 0203 	bic.w	r2, r2, #3
 8019ed6:	443a      	add	r2, r7
 8019ed8:	4f19      	ldr	r7, [pc, #100]	; (8019f40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019eda:	4413      	add	r3, r2
 8019edc:	603b      	str	r3, [r7, #0]
 8019ede:	4f19      	ldr	r7, [pc, #100]	; (8019f44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019ee0:	2300      	movs	r3, #0
 8019ee2:	803b      	strh	r3, [r7, #0]
 8019ee4:	4f18      	ldr	r7, [pc, #96]	; (8019f48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019ee6:	683f      	ldr	r7, [r7, #0]
 8019ee8:	1aba      	subs	r2, r7, r2
 8019eea:	4f18      	ldr	r7, [pc, #96]	; (8019f4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019eec:	603a      	str	r2, [r7, #0]
 8019eee:	4a18      	ldr	r2, [pc, #96]	; (8019f50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019ef0:	469c      	mov	ip, r3
 8019ef2:	8013      	strh	r3, [r2, #0]
 8019ef4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019ef8:	428b      	cmp	r3, r1
 8019efa:	d10d      	bne.n	8019f18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019efc:	882d      	ldrh	r5, [r5, #0]
 8019efe:	6830      	ldr	r0, [r6, #0]
 8019f00:	2300      	movs	r3, #0
 8019f02:	240e      	movs	r4, #14
 8019f04:	429d      	cmp	r5, r3
 8019f06:	d90f      	bls.n	8019f28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019f08:	fb04 0203 	mla	r2, r4, r3, r0
 8019f0c:	3301      	adds	r3, #1
 8019f0e:	7b11      	ldrb	r1, [r2, #12]
 8019f10:	f36f 1145 	bfc	r1, #5, #1
 8019f14:	7311      	strb	r1, [r2, #12]
 8019f16:	e7f5      	b.n	8019f04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019f18:	6822      	ldr	r2, [r4, #0]
 8019f1a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019f1e:	6802      	ldr	r2, [r0, #0]
 8019f20:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019f24:	3301      	adds	r3, #1
 8019f26:	e7e7      	b.n	8019ef8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019f28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019f2a:	bf00      	nop
 8019f2c:	20013920 	.word	0x20013920
 8019f30:	2001393c 	.word	0x2001393c
 8019f34:	20013940 	.word	0x20013940
 8019f38:	20013934 	.word	0x20013934
 8019f3c:	20013924 	.word	0x20013924
 8019f40:	2001392c 	.word	0x2001392c
 8019f44:	2001393e 	.word	0x2001393e
 8019f48:	20013928 	.word	0x20013928
 8019f4c:	20013938 	.word	0x20013938
 8019f50:	20013930 	.word	0x20013930

08019f54 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019f54:	4b06      	ldr	r3, [pc, #24]	; (8019f70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019f56:	681b      	ldr	r3, [r3, #0]
 8019f58:	b943      	cbnz	r3, 8019f6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019f5a:	b139      	cbz	r1, 8019f6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019f5c:	4b05      	ldr	r3, [pc, #20]	; (8019f74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8019f5e:	801a      	strh	r2, [r3, #0]
 8019f60:	4b05      	ldr	r3, [pc, #20]	; (8019f78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8019f62:	6019      	str	r1, [r3, #0]
 8019f64:	4b05      	ldr	r3, [pc, #20]	; (8019f7c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019f66:	6018      	str	r0, [r3, #0]
 8019f68:	f7ff bf96 	b.w	8019e98 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019f6c:	4770      	bx	lr
 8019f6e:	bf00      	nop
 8019f70:	2001392c 	.word	0x2001392c
 8019f74:	20013940 	.word	0x20013940
 8019f78:	20013928 	.word	0x20013928
 8019f7c:	20013920 	.word	0x20013920

08019f80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019f80:	b470      	push	{r4, r5, r6}
 8019f82:	4c07      	ldr	r4, [pc, #28]	; (8019fa0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019f84:	6826      	ldr	r6, [r4, #0]
 8019f86:	4605      	mov	r5, r0
 8019f88:	4610      	mov	r0, r2
 8019f8a:	9a03      	ldr	r2, [sp, #12]
 8019f8c:	b936      	cbnz	r6, 8019f9c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8019f8e:	6025      	str	r5, [r4, #0]
 8019f90:	4c04      	ldr	r4, [pc, #16]	; (8019fa4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019f92:	8021      	strh	r1, [r4, #0]
 8019f94:	bc70      	pop	{r4, r5, r6}
 8019f96:	4619      	mov	r1, r3
 8019f98:	f7ff bfdc 	b.w	8019f54 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019f9c:	bc70      	pop	{r4, r5, r6}
 8019f9e:	4770      	bx	lr
 8019fa0:	20013944 	.word	0x20013944
 8019fa4:	2001393c 	.word	0x2001393c

08019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019fa8:	4a12      	ldr	r2, [pc, #72]	; (8019ff4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019faa:	8803      	ldrh	r3, [r0, #0]
 8019fac:	8812      	ldrh	r2, [r2, #0]
 8019fae:	4293      	cmp	r3, r2
 8019fb0:	d207      	bcs.n	8019fc2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8019fb2:	4a11      	ldr	r2, [pc, #68]	; (8019ff8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019fb4:	6812      	ldr	r2, [r2, #0]
 8019fb6:	2114      	movs	r1, #20
 8019fb8:	fb01 2303 	mla	r3, r1, r3, r2
 8019fbc:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019fc0:	4770      	bx	lr
 8019fc2:	490e      	ldr	r1, [pc, #56]	; (8019ffc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019fc4:	8809      	ldrh	r1, [r1, #0]
 8019fc6:	4411      	add	r1, r2
 8019fc8:	428b      	cmp	r3, r1
 8019fca:	da04      	bge.n	8019fd6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019fcc:	1a9b      	subs	r3, r3, r2
 8019fce:	4a0c      	ldr	r2, [pc, #48]	; (801a000 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019fd0:	210e      	movs	r1, #14
 8019fd2:	6812      	ldr	r2, [r2, #0]
 8019fd4:	e7f0      	b.n	8019fb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019fd6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019fda:	4293      	cmp	r3, r2
 8019fdc:	d108      	bne.n	8019ff0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8019fde:	4b09      	ldr	r3, [pc, #36]	; (801a004 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019fe0:	781b      	ldrb	r3, [r3, #0]
 8019fe2:	b91b      	cbnz	r3, 8019fec <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019fe4:	4b08      	ldr	r3, [pc, #32]	; (801a008 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019fe6:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019fea:	4770      	bx	lr
 8019fec:	4b07      	ldr	r3, [pc, #28]	; (801a00c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019fee:	e7fa      	b.n	8019fe6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019ff0:	2000      	movs	r0, #0
 8019ff2:	4770      	bx	lr
 8019ff4:	2001393c 	.word	0x2001393c
 8019ff8:	20013944 	.word	0x20013944
 8019ffc:	20013940 	.word	0x20013940
 801a000:	20013924 	.word	0x20013924
 801a004:	200138ac 	.word	0x200138ac
 801a008:	200138ae 	.word	0x200138ae
 801a00c:	200138b0 	.word	0x200138b0

0801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a010:	4a12      	ldr	r2, [pc, #72]	; (801a05c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a012:	8803      	ldrh	r3, [r0, #0]
 801a014:	8812      	ldrh	r2, [r2, #0]
 801a016:	4293      	cmp	r3, r2
 801a018:	d207      	bcs.n	801a02a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a01a:	4a11      	ldr	r2, [pc, #68]	; (801a060 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a01c:	6812      	ldr	r2, [r2, #0]
 801a01e:	2114      	movs	r1, #20
 801a020:	fb01 2303 	mla	r3, r1, r3, r2
 801a024:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a028:	4770      	bx	lr
 801a02a:	490e      	ldr	r1, [pc, #56]	; (801a064 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a02c:	8809      	ldrh	r1, [r1, #0]
 801a02e:	4411      	add	r1, r2
 801a030:	428b      	cmp	r3, r1
 801a032:	da04      	bge.n	801a03e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a034:	1a9b      	subs	r3, r3, r2
 801a036:	4a0c      	ldr	r2, [pc, #48]	; (801a068 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a038:	210e      	movs	r1, #14
 801a03a:	6812      	ldr	r2, [r2, #0]
 801a03c:	e7f0      	b.n	801a020 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a03e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a042:	4293      	cmp	r3, r2
 801a044:	d108      	bne.n	801a058 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a046:	4b09      	ldr	r3, [pc, #36]	; (801a06c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a048:	781b      	ldrb	r3, [r3, #0]
 801a04a:	b91b      	cbnz	r3, 801a054 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a04c:	4b08      	ldr	r3, [pc, #32]	; (801a070 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a04e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a052:	4770      	bx	lr
 801a054:	4b07      	ldr	r3, [pc, #28]	; (801a074 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a056:	e7fa      	b.n	801a04e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a058:	2000      	movs	r0, #0
 801a05a:	4770      	bx	lr
 801a05c:	2001393c 	.word	0x2001393c
 801a060:	20013944 	.word	0x20013944
 801a064:	20013940 	.word	0x20013940
 801a068:	20013924 	.word	0x20013924
 801a06c:	200138ac 	.word	0x200138ac
 801a070:	200138b0 	.word	0x200138b0
 801a074:	200138ae 	.word	0x200138ae

0801a078 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a078:	b510      	push	{r4, lr}
 801a07a:	4a1f      	ldr	r2, [pc, #124]	; (801a0f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a07c:	880b      	ldrh	r3, [r1, #0]
 801a07e:	8812      	ldrh	r2, [r2, #0]
 801a080:	4293      	cmp	r3, r2
 801a082:	d213      	bcs.n	801a0ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a084:	4a1d      	ldr	r2, [pc, #116]	; (801a0fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a086:	6812      	ldr	r2, [r2, #0]
 801a088:	2114      	movs	r1, #20
 801a08a:	fb01 2303 	mla	r3, r1, r3, r2
 801a08e:	8a1a      	ldrh	r2, [r3, #16]
 801a090:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a094:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a098:	8a5b      	ldrh	r3, [r3, #18]
 801a09a:	8004      	strh	r4, [r0, #0]
 801a09c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a0a0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a0a4:	8041      	strh	r1, [r0, #2]
 801a0a6:	8082      	strh	r2, [r0, #4]
 801a0a8:	80c3      	strh	r3, [r0, #6]
 801a0aa:	e00e      	b.n	801a0ca <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a0ac:	4914      	ldr	r1, [pc, #80]	; (801a100 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a0ae:	8809      	ldrh	r1, [r1, #0]
 801a0b0:	4411      	add	r1, r2
 801a0b2:	428b      	cmp	r3, r1
 801a0b4:	da0a      	bge.n	801a0cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a0b6:	1a9b      	subs	r3, r3, r2
 801a0b8:	4a12      	ldr	r2, [pc, #72]	; (801a104 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a0ba:	6812      	ldr	r2, [r2, #0]
 801a0bc:	210e      	movs	r1, #14
 801a0be:	fb01 2303 	mla	r3, r1, r3, r2
 801a0c2:	681a      	ldr	r2, [r3, #0]
 801a0c4:	6002      	str	r2, [r0, #0]
 801a0c6:	685a      	ldr	r2, [r3, #4]
 801a0c8:	6042      	str	r2, [r0, #4]
 801a0ca:	bd10      	pop	{r4, pc}
 801a0cc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a0d0:	4293      	cmp	r3, r2
 801a0d2:	d10b      	bne.n	801a0ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a0d4:	4b0c      	ldr	r3, [pc, #48]	; (801a108 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a0d6:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a0da:	4b0c      	ldr	r3, [pc, #48]	; (801a10c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a0dc:	8081      	strh	r1, [r0, #4]
 801a0de:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a0e2:	80c2      	strh	r2, [r0, #6]
 801a0e4:	2300      	movs	r3, #0
 801a0e6:	8003      	strh	r3, [r0, #0]
 801a0e8:	8043      	strh	r3, [r0, #2]
 801a0ea:	e7ee      	b.n	801a0ca <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a0ec:	2300      	movs	r3, #0
 801a0ee:	8003      	strh	r3, [r0, #0]
 801a0f0:	8043      	strh	r3, [r0, #2]
 801a0f2:	8083      	strh	r3, [r0, #4]
 801a0f4:	e7d8      	b.n	801a0a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a0f6:	bf00      	nop
 801a0f8:	2001393c 	.word	0x2001393c
 801a0fc:	20013944 	.word	0x20013944
 801a100:	20013940 	.word	0x20013940
 801a104:	20013924 	.word	0x20013924
 801a108:	200138a8 	.word	0x200138a8
 801a10c:	200138aa 	.word	0x200138aa

0801a110 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a110:	4a17      	ldr	r2, [pc, #92]	; (801a170 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a112:	8803      	ldrh	r3, [r0, #0]
 801a114:	8812      	ldrh	r2, [r2, #0]
 801a116:	4293      	cmp	r3, r2
 801a118:	d213      	bcs.n	801a142 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a11a:	4a16      	ldr	r2, [pc, #88]	; (801a174 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a11c:	6812      	ldr	r2, [r2, #0]
 801a11e:	2114      	movs	r1, #20
 801a120:	fb01 2303 	mla	r3, r1, r3, r2
 801a124:	8a1a      	ldrh	r2, [r3, #16]
 801a126:	8919      	ldrh	r1, [r3, #8]
 801a128:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a12c:	428a      	cmp	r2, r1
 801a12e:	db1d      	blt.n	801a16c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a130:	8a58      	ldrh	r0, [r3, #18]
 801a132:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a136:	895b      	ldrh	r3, [r3, #10]
 801a138:	4298      	cmp	r0, r3
 801a13a:	bfac      	ite	ge
 801a13c:	2000      	movge	r0, #0
 801a13e:	2001      	movlt	r0, #1
 801a140:	4770      	bx	lr
 801a142:	490d      	ldr	r1, [pc, #52]	; (801a178 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a144:	8809      	ldrh	r1, [r1, #0]
 801a146:	4411      	add	r1, r2
 801a148:	428b      	cmp	r3, r1
 801a14a:	da0d      	bge.n	801a168 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a14c:	1a9b      	subs	r3, r3, r2
 801a14e:	4a0b      	ldr	r2, [pc, #44]	; (801a17c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a150:	6812      	ldr	r2, [r2, #0]
 801a152:	210e      	movs	r1, #14
 801a154:	fb01 2303 	mla	r3, r1, r3, r2
 801a158:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a15c:	891a      	ldrh	r2, [r3, #8]
 801a15e:	4291      	cmp	r1, r2
 801a160:	db04      	blt.n	801a16c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a162:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a166:	e7e6      	b.n	801a136 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a168:	2000      	movs	r0, #0
 801a16a:	4770      	bx	lr
 801a16c:	2001      	movs	r0, #1
 801a16e:	4770      	bx	lr
 801a170:	2001393c 	.word	0x2001393c
 801a174:	20013944 	.word	0x20013944
 801a178:	20013940 	.word	0x20013940
 801a17c:	20013924 	.word	0x20013924

0801a180 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a180:	4a12      	ldr	r2, [pc, #72]	; (801a1cc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a182:	8803      	ldrh	r3, [r0, #0]
 801a184:	8811      	ldrh	r1, [r2, #0]
 801a186:	428b      	cmp	r3, r1
 801a188:	d20b      	bcs.n	801a1a2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a18a:	4a11      	ldr	r2, [pc, #68]	; (801a1d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a18c:	6812      	ldr	r2, [r2, #0]
 801a18e:	b112      	cbz	r2, 801a196 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a190:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a194:	b9c0      	cbnz	r0, 801a1c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a196:	4a0f      	ldr	r2, [pc, #60]	; (801a1d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a198:	6811      	ldr	r1, [r2, #0]
 801a19a:	2214      	movs	r2, #20
 801a19c:	4353      	muls	r3, r2
 801a19e:	58c8      	ldr	r0, [r1, r3]
 801a1a0:	4770      	bx	lr
 801a1a2:	4a0d      	ldr	r2, [pc, #52]	; (801a1d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a1a4:	8812      	ldrh	r2, [r2, #0]
 801a1a6:	440a      	add	r2, r1
 801a1a8:	4293      	cmp	r3, r2
 801a1aa:	da04      	bge.n	801a1b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a1ac:	4a08      	ldr	r2, [pc, #32]	; (801a1d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a1ae:	6812      	ldr	r2, [r2, #0]
 801a1b0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a1b4:	4770      	bx	lr
 801a1b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a1ba:	4293      	cmp	r3, r2
 801a1bc:	d103      	bne.n	801a1c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a1be:	4b07      	ldr	r3, [pc, #28]	; (801a1dc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a1c0:	681b      	ldr	r3, [r3, #0]
 801a1c2:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a1c4:	4770      	bx	lr
 801a1c6:	2000      	movs	r0, #0
 801a1c8:	4770      	bx	lr
 801a1ca:	bf00      	nop
 801a1cc:	2001393c 	.word	0x2001393c
 801a1d0:	20013920 	.word	0x20013920
 801a1d4:	20013944 	.word	0x20013944
 801a1d8:	20013940 	.word	0x20013940
 801a1dc:	200138b4 	.word	0x200138b4

0801a1e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a1e0:	4b24      	ldr	r3, [pc, #144]	; (801a274 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a1e2:	8802      	ldrh	r2, [r0, #0]
 801a1e4:	8818      	ldrh	r0, [r3, #0]
 801a1e6:	4282      	cmp	r2, r0
 801a1e8:	d221      	bcs.n	801a22e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a1ea:	4b23      	ldr	r3, [pc, #140]	; (801a278 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a1ec:	6819      	ldr	r1, [r3, #0]
 801a1ee:	2314      	movs	r3, #20
 801a1f0:	fb03 1302 	mla	r3, r3, r2, r1
 801a1f4:	6858      	ldr	r0, [r3, #4]
 801a1f6:	2800      	cmp	r0, #0
 801a1f8:	d03a      	beq.n	801a270 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a1fa:	4920      	ldr	r1, [pc, #128]	; (801a27c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a1fc:	6809      	ldr	r1, [r1, #0]
 801a1fe:	2900      	cmp	r1, #0
 801a200:	d036      	beq.n	801a270 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a202:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a206:	2900      	cmp	r1, #0
 801a208:	d032      	beq.n	801a270 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a20a:	891a      	ldrh	r2, [r3, #8]
 801a20c:	8958      	ldrh	r0, [r3, #10]
 801a20e:	4350      	muls	r0, r2
 801a210:	7c5a      	ldrb	r2, [r3, #17]
 801a212:	7cdb      	ldrb	r3, [r3, #19]
 801a214:	0952      	lsrs	r2, r2, #5
 801a216:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a21a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a21e:	2b0b      	cmp	r3, #11
 801a220:	bf18      	it	ne
 801a222:	0040      	lslne	r0, r0, #1
 801a224:	3003      	adds	r0, #3
 801a226:	f020 0003 	bic.w	r0, r0, #3
 801a22a:	4408      	add	r0, r1
 801a22c:	4770      	bx	lr
 801a22e:	4b14      	ldr	r3, [pc, #80]	; (801a280 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a230:	881b      	ldrh	r3, [r3, #0]
 801a232:	4403      	add	r3, r0
 801a234:	429a      	cmp	r2, r3
 801a236:	da1a      	bge.n	801a26e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a238:	4b12      	ldr	r3, [pc, #72]	; (801a284 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a23a:	681b      	ldr	r3, [r3, #0]
 801a23c:	1a10      	subs	r0, r2, r0
 801a23e:	210e      	movs	r1, #14
 801a240:	fb01 3000 	mla	r0, r1, r0, r3
 801a244:	7b03      	ldrb	r3, [r0, #12]
 801a246:	f003 031f 	and.w	r3, r3, #31
 801a24a:	2b0b      	cmp	r3, #11
 801a24c:	d10b      	bne.n	801a266 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a24e:	8903      	ldrh	r3, [r0, #8]
 801a250:	8940      	ldrh	r0, [r0, #10]
 801a252:	4358      	muls	r0, r3
 801a254:	4b09      	ldr	r3, [pc, #36]	; (801a27c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a256:	6819      	ldr	r1, [r3, #0]
 801a258:	3003      	adds	r0, #3
 801a25a:	f020 0303 	bic.w	r3, r0, #3
 801a25e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a262:	4418      	add	r0, r3
 801a264:	4770      	bx	lr
 801a266:	2b0d      	cmp	r3, #13
 801a268:	d101      	bne.n	801a26e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a26a:	300d      	adds	r0, #13
 801a26c:	4770      	bx	lr
 801a26e:	2000      	movs	r0, #0
 801a270:	4770      	bx	lr
 801a272:	bf00      	nop
 801a274:	2001393c 	.word	0x2001393c
 801a278:	20013944 	.word	0x20013944
 801a27c:	20013920 	.word	0x20013920
 801a280:	20013940 	.word	0x20013940
 801a284:	20013924 	.word	0x20013924

0801a288 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a288:	b510      	push	{r4, lr}
 801a28a:	4a17      	ldr	r2, [pc, #92]	; (801a2e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a28c:	8803      	ldrh	r3, [r0, #0]
 801a28e:	8812      	ldrh	r2, [r2, #0]
 801a290:	4293      	cmp	r3, r2
 801a292:	d20c      	bcs.n	801a2ae <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a294:	4a15      	ldr	r2, [pc, #84]	; (801a2ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a296:	6812      	ldr	r2, [r2, #0]
 801a298:	2114      	movs	r1, #20
 801a29a:	fb01 2303 	mla	r3, r1, r3, r2
 801a29e:	7c58      	ldrb	r0, [r3, #17]
 801a2a0:	0942      	lsrs	r2, r0, #5
 801a2a2:	7cd8      	ldrb	r0, [r3, #19]
 801a2a4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a2a8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a2ac:	bd10      	pop	{r4, pc}
 801a2ae:	4910      	ldr	r1, [pc, #64]	; (801a2f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a2b0:	8809      	ldrh	r1, [r1, #0]
 801a2b2:	4411      	add	r1, r2
 801a2b4:	428b      	cmp	r3, r1
 801a2b6:	da09      	bge.n	801a2cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a2b8:	1a9b      	subs	r3, r3, r2
 801a2ba:	4a0e      	ldr	r2, [pc, #56]	; (801a2f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a2bc:	6812      	ldr	r2, [r2, #0]
 801a2be:	210e      	movs	r1, #14
 801a2c0:	fb01 2303 	mla	r3, r1, r3, r2
 801a2c4:	7b18      	ldrb	r0, [r3, #12]
 801a2c6:	f000 001f 	and.w	r0, r0, #31
 801a2ca:	e7ef      	b.n	801a2ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a2cc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a2d0:	4293      	cmp	r3, r2
 801a2d2:	d106      	bne.n	801a2e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a2d4:	f7ea f90c 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 801a2d8:	6803      	ldr	r3, [r0, #0]
 801a2da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a2de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a2e0:	4718      	bx	r3
 801a2e2:	2000      	movs	r0, #0
 801a2e4:	e7e2      	b.n	801a2ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a2e6:	bf00      	nop
 801a2e8:	2001393c 	.word	0x2001393c
 801a2ec:	20013944 	.word	0x20013944
 801a2f0:	20013940 	.word	0x20013940
 801a2f4:	20013924 	.word	0x20013924

0801a2f8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a2f8:	2010      	movs	r0, #16
 801a2fa:	4770      	bx	lr

0801a2fc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a2fc:	2000      	movs	r0, #0
 801a2fe:	4770      	bx	lr

0801a300 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a300:	4b02      	ldr	r3, [pc, #8]	; (801a30c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a302:	8818      	ldrh	r0, [r3, #0]
 801a304:	0040      	lsls	r0, r0, #1
 801a306:	b280      	uxth	r0, r0
 801a308:	4770      	bx	lr
 801a30a:	bf00      	nop
 801a30c:	200138ae 	.word	0x200138ae

0801a310 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a310:	2bff      	cmp	r3, #255	; 0xff
 801a312:	d050      	beq.n	801a3b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a314:	2a0b      	cmp	r2, #11
 801a316:	d04a      	beq.n	801a3ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a318:	d80e      	bhi.n	801a338 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a31a:	2a03      	cmp	r2, #3
 801a31c:	d03f      	beq.n	801a39e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a31e:	d804      	bhi.n	801a32a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a320:	2a01      	cmp	r2, #1
 801a322:	d03e      	beq.n	801a3a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a324:	d93f      	bls.n	801a3a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a326:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a328:	4770      	bx	lr
 801a32a:	2a09      	cmp	r2, #9
 801a32c:	d03f      	beq.n	801a3ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a32e:	d83c      	bhi.n	801a3aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a330:	2a08      	cmp	r2, #8
 801a332:	d03a      	beq.n	801a3aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a334:	2000      	movs	r0, #0
 801a336:	4770      	bx	lr
 801a338:	2a2f      	cmp	r2, #47	; 0x2f
 801a33a:	d024      	beq.n	801a386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a33c:	d80d      	bhi.n	801a35a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a33e:	2a2d      	cmp	r2, #45	; 0x2d
 801a340:	d014      	beq.n	801a36c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a342:	d826      	bhi.n	801a392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a344:	2a2c      	cmp	r2, #44	; 0x2c
 801a346:	d1f5      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a348:	684b      	ldr	r3, [r1, #4]
 801a34a:	781b      	ldrb	r3, [r3, #0]
 801a34c:	2b01      	cmp	r3, #1
 801a34e:	d018      	beq.n	801a382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a350:	d323      	bcc.n	801a39a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a352:	2b02      	cmp	r3, #2
 801a354:	d1ee      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a356:	6880      	ldr	r0, [r0, #8]
 801a358:	4770      	bx	lr
 801a35a:	2a31      	cmp	r2, #49	; 0x31
 801a35c:	d004      	beq.n	801a368 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a35e:	d328      	bcc.n	801a3b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a360:	2a32      	cmp	r2, #50	; 0x32
 801a362:	d026      	beq.n	801a3b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a364:	2a33      	cmp	r2, #51	; 0x33
 801a366:	d1e5      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a368:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a36a:	4770      	bx	lr
 801a36c:	684b      	ldr	r3, [r1, #4]
 801a36e:	781b      	ldrb	r3, [r3, #0]
 801a370:	2b01      	cmp	r3, #1
 801a372:	d004      	beq.n	801a37e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a374:	d30b      	bcc.n	801a38e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a376:	2b02      	cmp	r3, #2
 801a378:	d1dc      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a37a:	6900      	ldr	r0, [r0, #16]
 801a37c:	4770      	bx	lr
 801a37e:	6a00      	ldr	r0, [r0, #32]
 801a380:	4770      	bx	lr
 801a382:	6980      	ldr	r0, [r0, #24]
 801a384:	4770      	bx	lr
 801a386:	684b      	ldr	r3, [r1, #4]
 801a388:	781b      	ldrb	r3, [r3, #0]
 801a38a:	2b00      	cmp	r3, #0
 801a38c:	d1d2      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a38e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a390:	4770      	bx	lr
 801a392:	684b      	ldr	r3, [r1, #4]
 801a394:	781b      	ldrb	r3, [r3, #0]
 801a396:	2b00      	cmp	r3, #0
 801a398:	d1cc      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a39a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a39c:	4770      	bx	lr
 801a39e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a3a0:	4770      	bx	lr
 801a3a2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a3a4:	4770      	bx	lr
 801a3a6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a3a8:	4770      	bx	lr
 801a3aa:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a3ac:	4770      	bx	lr
 801a3ae:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a3b0:	4770      	bx	lr
 801a3b2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a3b4:	4770      	bx	lr
 801a3b6:	2a0b      	cmp	r2, #11
 801a3b8:	d049      	beq.n	801a44e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a3ba:	d80e      	bhi.n	801a3da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a3bc:	2a03      	cmp	r2, #3
 801a3be:	d040      	beq.n	801a442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a3c0:	d804      	bhi.n	801a3cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a3c2:	2a01      	cmp	r2, #1
 801a3c4:	d03f      	beq.n	801a446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a3c6:	d940      	bls.n	801a44a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a3c8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a3ca:	4770      	bx	lr
 801a3cc:	2a09      	cmp	r2, #9
 801a3ce:	d03e      	beq.n	801a44e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a3d0:	d801      	bhi.n	801a3d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a3d2:	2a08      	cmp	r2, #8
 801a3d4:	d1ae      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a3d6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a3d8:	4770      	bx	lr
 801a3da:	2a2f      	cmp	r2, #47	; 0x2f
 801a3dc:	d024      	beq.n	801a428 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a3de:	d80d      	bhi.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a3e0:	2a2d      	cmp	r2, #45	; 0x2d
 801a3e2:	d014      	beq.n	801a40e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a3e4:	d826      	bhi.n	801a434 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a3e6:	2a2c      	cmp	r2, #44	; 0x2c
 801a3e8:	d1a4      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a3ea:	684b      	ldr	r3, [r1, #4]
 801a3ec:	781b      	ldrb	r3, [r3, #0]
 801a3ee:	2b01      	cmp	r3, #1
 801a3f0:	d018      	beq.n	801a424 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a3f2:	d324      	bcc.n	801a43e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a3f4:	2b02      	cmp	r3, #2
 801a3f6:	d19d      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a3f8:	68c0      	ldr	r0, [r0, #12]
 801a3fa:	4770      	bx	lr
 801a3fc:	2a31      	cmp	r2, #49	; 0x31
 801a3fe:	d004      	beq.n	801a40a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a400:	d327      	bcc.n	801a452 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a402:	2a32      	cmp	r2, #50	; 0x32
 801a404:	d025      	beq.n	801a452 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a406:	2a33      	cmp	r2, #51	; 0x33
 801a408:	d194      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a40a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a40c:	4770      	bx	lr
 801a40e:	684b      	ldr	r3, [r1, #4]
 801a410:	781b      	ldrb	r3, [r3, #0]
 801a412:	2b01      	cmp	r3, #1
 801a414:	d004      	beq.n	801a420 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a416:	d30b      	bcc.n	801a430 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a418:	2b02      	cmp	r3, #2
 801a41a:	d18b      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a41c:	6940      	ldr	r0, [r0, #20]
 801a41e:	4770      	bx	lr
 801a420:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a422:	4770      	bx	lr
 801a424:	69c0      	ldr	r0, [r0, #28]
 801a426:	4770      	bx	lr
 801a428:	684b      	ldr	r3, [r1, #4]
 801a42a:	781b      	ldrb	r3, [r3, #0]
 801a42c:	2b00      	cmp	r3, #0
 801a42e:	d181      	bne.n	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a430:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a432:	4770      	bx	lr
 801a434:	684b      	ldr	r3, [r1, #4]
 801a436:	781b      	ldrb	r3, [r3, #0]
 801a438:	2b00      	cmp	r3, #0
 801a43a:	f47f af7b 	bne.w	801a334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a43e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a440:	4770      	bx	lr
 801a442:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a444:	4770      	bx	lr
 801a446:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801a448:	4770      	bx	lr
 801a44a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801a44c:	4770      	bx	lr
 801a44e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801a450:	4770      	bx	lr
 801a452:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801a454:	4770      	bx	lr

0801a456 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a456:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a45a:	b087      	sub	sp, #28
 801a45c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a45e:	9205      	str	r2, [sp, #20]
 801a460:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a464:	9202      	str	r2, [sp, #8]
 801a466:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a46a:	9101      	str	r1, [sp, #4]
 801a46c:	6841      	ldr	r1, [r0, #4]
 801a46e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a472:	fb01 2404 	mla	r4, r1, r4, r2
 801a476:	6802      	ldr	r2, [r0, #0]
 801a478:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a47c:	f8de 2000 	ldr.w	r2, [lr]
 801a480:	9203      	str	r2, [sp, #12]
 801a482:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a486:	3204      	adds	r2, #4
 801a488:	9204      	str	r2, [sp, #16]
 801a48a:	9a02      	ldr	r2, [sp, #8]
 801a48c:	43d6      	mvns	r6, r2
 801a48e:	b2f6      	uxtb	r6, r6
 801a490:	9a01      	ldr	r2, [sp, #4]
 801a492:	2a00      	cmp	r2, #0
 801a494:	dc03      	bgt.n	801a49e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a496:	9a05      	ldr	r2, [sp, #20]
 801a498:	2a00      	cmp	r2, #0
 801a49a:	f340 8129 	ble.w	801a6f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a49e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a4a0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a4a4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a4a8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a4ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a4ae:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a4b2:	2b00      	cmp	r3, #0
 801a4b4:	dd0e      	ble.n	801a4d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a4b6:	1408      	asrs	r0, r1, #16
 801a4b8:	d405      	bmi.n	801a4c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4ba:	4560      	cmp	r0, ip
 801a4bc:	da03      	bge.n	801a4c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4be:	1410      	asrs	r0, r2, #16
 801a4c0:	d401      	bmi.n	801a4c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4c2:	42b8      	cmp	r0, r7
 801a4c4:	db07      	blt.n	801a4d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a4c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a4c8:	4401      	add	r1, r0
 801a4ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a4cc:	3b01      	subs	r3, #1
 801a4ce:	4402      	add	r2, r0
 801a4d0:	3402      	adds	r4, #2
 801a4d2:	e7ee      	b.n	801a4b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a4d4:	d071      	beq.n	801a5ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a4d8:	1e58      	subs	r0, r3, #1
 801a4da:	fb05 1500 	mla	r5, r5, r0, r1
 801a4de:	142d      	asrs	r5, r5, #16
 801a4e0:	d45f      	bmi.n	801a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a4e2:	4565      	cmp	r5, ip
 801a4e4:	da5d      	bge.n	801a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a4e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a4e8:	fb05 2000 	mla	r0, r5, r0, r2
 801a4ec:	1400      	asrs	r0, r0, #16
 801a4ee:	d458      	bmi.n	801a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a4f0:	42b8      	cmp	r0, r7
 801a4f2:	da56      	bge.n	801a5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a4f4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801a4f8:	4699      	mov	r9, r3
 801a4fa:	46a2      	mov	sl, r4
 801a4fc:	f1b9 0f00 	cmp.w	r9, #0
 801a500:	dd57      	ble.n	801a5b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a502:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a506:	9803      	ldr	r0, [sp, #12]
 801a508:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801a50c:	140d      	asrs	r5, r1, #16
 801a50e:	fb07 000c 	mla	r0, r7, ip, r0
 801a512:	f109 39ff 	add.w	r9, r9, #4294967295
 801a516:	5d40      	ldrb	r0, [r0, r5]
 801a518:	9d04      	ldr	r5, [sp, #16]
 801a51a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a51e:	f8ba 5000 	ldrh.w	r5, [sl]
 801a522:	122f      	asrs	r7, r5, #8
 801a524:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a528:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a52c:	fb17 f706 	smulbb	r7, r7, r6
 801a530:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a534:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a538:	00ed      	lsls	r5, r5, #3
 801a53a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a53e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a542:	10c7      	asrs	r7, r0, #3
 801a544:	b2ed      	uxtb	r5, r5
 801a546:	00c0      	lsls	r0, r0, #3
 801a548:	fb18 f806 	smulbb	r8, r8, r6
 801a54c:	fb15 f506 	smulbb	r5, r5, r6
 801a550:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a554:	b2c0      	uxtb	r0, r0
 801a556:	fa1f fc8c 	uxth.w	ip, ip
 801a55a:	fb07 870b 	mla	r7, r7, fp, r8
 801a55e:	fb00 500b 	mla	r0, r0, fp, r5
 801a562:	b280      	uxth	r0, r0
 801a564:	b2bf      	uxth	r7, r7
 801a566:	f10c 0501 	add.w	r5, ip, #1
 801a56a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a56e:	f107 0801 	add.w	r8, r7, #1
 801a572:	1c45      	adds	r5, r0, #1
 801a574:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a578:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a57c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a57e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a582:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a586:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a58a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a58e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a592:	4401      	add	r1, r0
 801a594:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a596:	ea4c 0c08 	orr.w	ip, ip, r8
 801a59a:	f82a cb02 	strh.w	ip, [sl], #2
 801a59e:	4402      	add	r2, r0
 801a5a0:	e7ac      	b.n	801a4fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a5a2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a5a6:	f04f 0800 	mov.w	r8, #0
 801a5aa:	eb03 0008 	add.w	r0, r3, r8
 801a5ae:	2800      	cmp	r0, #0
 801a5b0:	dc41      	bgt.n	801a636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a5b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5ba:	9b01      	ldr	r3, [sp, #4]
 801a5bc:	2b00      	cmp	r3, #0
 801a5be:	f340 8097 	ble.w	801a6f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a5c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5dc:	eef0 6a62 	vmov.f32	s13, s5
 801a5e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a5ec:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a5f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a5f4:	eef0 6a43 	vmov.f32	s13, s6
 801a5f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a5fc:	ee12 2a90 	vmov	r2, s5
 801a600:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a604:	fb92 f3f3 	sdiv	r3, r2, r3
 801a608:	ee13 2a10 	vmov	r2, s6
 801a60c:	9313      	str	r3, [sp, #76]	; 0x4c
 801a60e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a610:	fb92 f3f3 	sdiv	r3, r2, r3
 801a614:	9314      	str	r3, [sp, #80]	; 0x50
 801a616:	9b01      	ldr	r3, [sp, #4]
 801a618:	9a05      	ldr	r2, [sp, #20]
 801a61a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a61e:	3b01      	subs	r3, #1
 801a620:	9301      	str	r3, [sp, #4]
 801a622:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a626:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a628:	eeb0 3a67 	vmov.f32	s6, s15
 801a62c:	bf08      	it	eq
 801a62e:	4613      	moveq	r3, r2
 801a630:	eef0 2a47 	vmov.f32	s5, s14
 801a634:	e72c      	b.n	801a490 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a636:	140f      	asrs	r7, r1, #16
 801a638:	d453      	bmi.n	801a6e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a63a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a63e:	42bd      	cmp	r5, r7
 801a640:	dd4f      	ble.n	801a6e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a642:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a646:	d44c      	bmi.n	801a6e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a648:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a64c:	4560      	cmp	r0, ip
 801a64e:	dd48      	ble.n	801a6e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a650:	9803      	ldr	r0, [sp, #12]
 801a652:	b22d      	sxth	r5, r5
 801a654:	fb0c 0505 	mla	r5, ip, r5, r0
 801a658:	5de8      	ldrb	r0, [r5, r7]
 801a65a:	9d04      	ldr	r5, [sp, #16]
 801a65c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a660:	f06f 0501 	mvn.w	r5, #1
 801a664:	fb05 fb08 	mul.w	fp, r5, r8
 801a668:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a66c:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a670:	122f      	asrs	r7, r5, #8
 801a672:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a676:	fb17 f706 	smulbb	r7, r7, r6
 801a67a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a67e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a682:	00ed      	lsls	r5, r5, #3
 801a684:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a688:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a68c:	10c7      	asrs	r7, r0, #3
 801a68e:	b2ed      	uxtb	r5, r5
 801a690:	00c0      	lsls	r0, r0, #3
 801a692:	fb19 f906 	smulbb	r9, r9, r6
 801a696:	fb15 f506 	smulbb	r5, r5, r6
 801a69a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a69e:	b2c0      	uxtb	r0, r0
 801a6a0:	fa1f fc8c 	uxth.w	ip, ip
 801a6a4:	fb07 970a 	mla	r7, r7, sl, r9
 801a6a8:	fb00 500a 	mla	r0, r0, sl, r5
 801a6ac:	b2bf      	uxth	r7, r7
 801a6ae:	b280      	uxth	r0, r0
 801a6b0:	f10c 0501 	add.w	r5, ip, #1
 801a6b4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a6b8:	f107 0901 	add.w	r9, r7, #1
 801a6bc:	1c45      	adds	r5, r0, #1
 801a6be:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a6c2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a6c6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a6ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a6ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a6d2:	ea45 0c0c 	orr.w	ip, r5, ip
 801a6d6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a6da:	ea4c 0c09 	orr.w	ip, ip, r9
 801a6de:	f824 c00b 	strh.w	ip, [r4, fp]
 801a6e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a6e4:	4401      	add	r1, r0
 801a6e6:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a6e8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a6ec:	4402      	add	r2, r0
 801a6ee:	e75c      	b.n	801a5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a6f0:	b007      	add	sp, #28
 801a6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6fa:	b085      	sub	sp, #20
 801a6fc:	4693      	mov	fp, r2
 801a6fe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a700:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a702:	6870      	ldr	r0, [r6, #4]
 801a704:	9100      	str	r1, [sp, #0]
 801a706:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a70a:	fb00 2404 	mla	r4, r0, r4, r2
 801a70e:	6832      	ldr	r2, [r6, #0]
 801a710:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a714:	682a      	ldr	r2, [r5, #0]
 801a716:	9201      	str	r2, [sp, #4]
 801a718:	686a      	ldr	r2, [r5, #4]
 801a71a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a71e:	3204      	adds	r2, #4
 801a720:	9202      	str	r2, [sp, #8]
 801a722:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a726:	9a00      	ldr	r2, [sp, #0]
 801a728:	2a00      	cmp	r2, #0
 801a72a:	dc03      	bgt.n	801a734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a72c:	f1bb 0f00 	cmp.w	fp, #0
 801a730:	f340 80a0 	ble.w	801a874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a734:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a736:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a73a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a73e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a742:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a744:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a748:	2b00      	cmp	r3, #0
 801a74a:	dd0c      	ble.n	801a766 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a74c:	1406      	asrs	r6, r0, #16
 801a74e:	d405      	bmi.n	801a75c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a750:	454e      	cmp	r6, r9
 801a752:	da03      	bge.n	801a75c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a754:	1416      	asrs	r6, r2, #16
 801a756:	d401      	bmi.n	801a75c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a758:	4546      	cmp	r6, r8
 801a75a:	db05      	blt.n	801a768 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a75c:	4470      	add	r0, lr
 801a75e:	4462      	add	r2, ip
 801a760:	3b01      	subs	r3, #1
 801a762:	3402      	adds	r4, #2
 801a764:	e7f0      	b.n	801a748 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a766:	d00f      	beq.n	801a788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a768:	1e5e      	subs	r6, r3, #1
 801a76a:	fb0e 0706 	mla	r7, lr, r6, r0
 801a76e:	143f      	asrs	r7, r7, #16
 801a770:	d541      	bpl.n	801a7f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a772:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a776:	4698      	mov	r8, r3
 801a778:	9603      	str	r6, [sp, #12]
 801a77a:	f1b8 0f00 	cmp.w	r8, #0
 801a77e:	dc59      	bgt.n	801a834 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a780:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a784:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a788:	9b00      	ldr	r3, [sp, #0]
 801a78a:	2b00      	cmp	r3, #0
 801a78c:	dd72      	ble.n	801a874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a78e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a792:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a796:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a79a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a79c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7a4:	eeb0 6a62 	vmov.f32	s12, s5
 801a7a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a7b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7bc:	eeb0 6a43 	vmov.f32	s12, s6
 801a7c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7c4:	ee12 2a90 	vmov	r2, s5
 801a7c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7cc:	fb92 fef3 	sdiv	lr, r2, r3
 801a7d0:	ee13 2a10 	vmov	r2, s6
 801a7d4:	fb92 fcf3 	sdiv	ip, r2, r3
 801a7d8:	9b00      	ldr	r3, [sp, #0]
 801a7da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7de:	3b01      	subs	r3, #1
 801a7e0:	9300      	str	r3, [sp, #0]
 801a7e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a7e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7e8:	eeb0 3a67 	vmov.f32	s6, s15
 801a7ec:	bf08      	it	eq
 801a7ee:	465b      	moveq	r3, fp
 801a7f0:	eef0 2a47 	vmov.f32	s5, s14
 801a7f4:	e797      	b.n	801a726 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a7f6:	454f      	cmp	r7, r9
 801a7f8:	dabb      	bge.n	801a772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a7fa:	fb0c 2606 	mla	r6, ip, r6, r2
 801a7fe:	1436      	asrs	r6, r6, #16
 801a800:	d4b7      	bmi.n	801a772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a802:	4546      	cmp	r6, r8
 801a804:	dab5      	bge.n	801a772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a806:	461e      	mov	r6, r3
 801a808:	46a0      	mov	r8, r4
 801a80a:	2e00      	cmp	r6, #0
 801a80c:	ddb8      	ble.n	801a780 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a80e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a812:	9901      	ldr	r1, [sp, #4]
 801a814:	1417      	asrs	r7, r2, #16
 801a816:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a81a:	fb0a 1707 	mla	r7, sl, r7, r1
 801a81e:	9902      	ldr	r1, [sp, #8]
 801a820:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a824:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a828:	f828 7b02 	strh.w	r7, [r8], #2
 801a82c:	4470      	add	r0, lr
 801a82e:	4462      	add	r2, ip
 801a830:	3e01      	subs	r6, #1
 801a832:	e7ea      	b.n	801a80a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a834:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a838:	d417      	bmi.n	801a86a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a83a:	68ae      	ldr	r6, [r5, #8]
 801a83c:	454e      	cmp	r6, r9
 801a83e:	dd14      	ble.n	801a86a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a840:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a844:	d411      	bmi.n	801a86a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a846:	68ef      	ldr	r7, [r5, #12]
 801a848:	4557      	cmp	r7, sl
 801a84a:	dd0e      	ble.n	801a86a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a84c:	9f01      	ldr	r7, [sp, #4]
 801a84e:	b236      	sxth	r6, r6
 801a850:	fb0a 7606 	mla	r6, sl, r6, r7
 801a854:	9f02      	ldr	r7, [sp, #8]
 801a856:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a85a:	f06f 0101 	mvn.w	r1, #1
 801a85e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a862:	fb01 f608 	mul.w	r6, r1, r8
 801a866:	9903      	ldr	r1, [sp, #12]
 801a868:	538f      	strh	r7, [r1, r6]
 801a86a:	4470      	add	r0, lr
 801a86c:	4462      	add	r2, ip
 801a86e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a872:	e782      	b.n	801a77a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a874:	b005      	add	sp, #20
 801a876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a87a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a87a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a87e:	b087      	sub	sp, #28
 801a880:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a882:	9205      	str	r2, [sp, #20]
 801a884:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a888:	9203      	str	r2, [sp, #12]
 801a88a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a88e:	9102      	str	r1, [sp, #8]
 801a890:	6861      	ldr	r1, [r4, #4]
 801a892:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a896:	fb01 2000 	mla	r0, r1, r0, r2
 801a89a:	6822      	ldr	r2, [r4, #0]
 801a89c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a8a0:	9200      	str	r2, [sp, #0]
 801a8a2:	f8dc 2000 	ldr.w	r2, [ip]
 801a8a6:	9204      	str	r2, [sp, #16]
 801a8a8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a8ac:	3204      	adds	r2, #4
 801a8ae:	9201      	str	r2, [sp, #4]
 801a8b0:	9a03      	ldr	r2, [sp, #12]
 801a8b2:	43d5      	mvns	r5, r2
 801a8b4:	b2ed      	uxtb	r5, r5
 801a8b6:	9a02      	ldr	r2, [sp, #8]
 801a8b8:	2a00      	cmp	r2, #0
 801a8ba:	dc03      	bgt.n	801a8c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a8bc:	9a05      	ldr	r2, [sp, #20]
 801a8be:	2a00      	cmp	r2, #0
 801a8c0:	f340 812c 	ble.w	801ab1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a8c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a8c6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a8ca:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a8ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a8d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a8d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a8d8:	2b00      	cmp	r3, #0
 801a8da:	dd10      	ble.n	801a8fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a8dc:	140c      	asrs	r4, r1, #16
 801a8de:	d405      	bmi.n	801a8ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a8e0:	4574      	cmp	r4, lr
 801a8e2:	da03      	bge.n	801a8ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a8e4:	1414      	asrs	r4, r2, #16
 801a8e6:	d401      	bmi.n	801a8ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a8e8:	42bc      	cmp	r4, r7
 801a8ea:	db09      	blt.n	801a900 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a8ee:	9800      	ldr	r0, [sp, #0]
 801a8f0:	4421      	add	r1, r4
 801a8f2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a8f4:	3002      	adds	r0, #2
 801a8f6:	4422      	add	r2, r4
 801a8f8:	3b01      	subs	r3, #1
 801a8fa:	9000      	str	r0, [sp, #0]
 801a8fc:	e7ec      	b.n	801a8d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a8fe:	d071      	beq.n	801a9e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a900:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a902:	1e5c      	subs	r4, r3, #1
 801a904:	fb06 1604 	mla	r6, r6, r4, r1
 801a908:	1436      	asrs	r6, r6, #16
 801a90a:	d45d      	bmi.n	801a9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a90c:	4576      	cmp	r6, lr
 801a90e:	da5b      	bge.n	801a9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a910:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a912:	fb06 2404 	mla	r4, r6, r4, r2
 801a916:	1424      	asrs	r4, r4, #16
 801a918:	d456      	bmi.n	801a9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a91a:	42bc      	cmp	r4, r7
 801a91c:	da54      	bge.n	801a9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a91e:	f8dd 9000 	ldr.w	r9, [sp]
 801a922:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a926:	4698      	mov	r8, r3
 801a928:	f1b8 0f00 	cmp.w	r8, #0
 801a92c:	dd54      	ble.n	801a9d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a92e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a932:	9804      	ldr	r0, [sp, #16]
 801a934:	1414      	asrs	r4, r2, #16
 801a936:	fb07 0404 	mla	r4, r7, r4, r0
 801a93a:	140e      	asrs	r6, r1, #16
 801a93c:	9801      	ldr	r0, [sp, #4]
 801a93e:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a942:	f8b9 4000 	ldrh.w	r4, [r9]
 801a946:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a94a:	eb00 0b0e 	add.w	fp, r0, lr
 801a94e:	1227      	asrs	r7, r4, #8
 801a950:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a954:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a958:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a95c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a95e:	fb16 f60a 	smulbb	r6, r6, sl
 801a962:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a966:	fb07 6705 	mla	r7, r7, r5, r6
 801a96a:	10e6      	asrs	r6, r4, #3
 801a96c:	00e4      	lsls	r4, r4, #3
 801a96e:	b2e4      	uxtb	r4, r4
 801a970:	fb1b fb0a 	smulbb	fp, fp, sl
 801a974:	fb14 f405 	smulbb	r4, r4, r5
 801a978:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a97c:	b2bf      	uxth	r7, r7
 801a97e:	fb06 b605 	mla	r6, r6, r5, fp
 801a982:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a986:	b2b6      	uxth	r6, r6
 801a988:	fa1f fe8e 	uxth.w	lr, lr
 801a98c:	1c7c      	adds	r4, r7, #1
 801a98e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a992:	f106 0b01 	add.w	fp, r6, #1
 801a996:	f10e 0401 	add.w	r4, lr, #1
 801a99a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a99e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a9a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a9a6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a9aa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a9ae:	4327      	orrs	r7, r4
 801a9b0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a9b4:	4401      	add	r1, r0
 801a9b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a9b8:	ea47 070b 	orr.w	r7, r7, fp
 801a9bc:	f829 7b02 	strh.w	r7, [r9], #2
 801a9c0:	4402      	add	r2, r0
 801a9c2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a9c6:	e7af      	b.n	801a928 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a9c8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a9cc:	f04f 0e00 	mov.w	lr, #0
 801a9d0:	eb03 040e 	add.w	r4, r3, lr
 801a9d4:	2c00      	cmp	r4, #0
 801a9d6:	dc43      	bgt.n	801aa60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a9d8:	9a00      	ldr	r2, [sp, #0]
 801a9da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9de:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a9e2:	9300      	str	r3, [sp, #0]
 801a9e4:	9b02      	ldr	r3, [sp, #8]
 801a9e6:	2b00      	cmp	r3, #0
 801a9e8:	f340 8098 	ble.w	801ab1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a9ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a9f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a9f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa06:	eef0 6a62 	vmov.f32	s13, s5
 801aa0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa12:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa16:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801aa1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa1e:	eef0 6a43 	vmov.f32	s13, s6
 801aa22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa26:	ee12 2a90 	vmov	r2, s5
 801aa2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa32:	ee13 2a10 	vmov	r2, s6
 801aa36:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa3e:	9314      	str	r3, [sp, #80]	; 0x50
 801aa40:	9b02      	ldr	r3, [sp, #8]
 801aa42:	9a05      	ldr	r2, [sp, #20]
 801aa44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa48:	3b01      	subs	r3, #1
 801aa4a:	9302      	str	r3, [sp, #8]
 801aa4c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801aa50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa52:	eeb0 3a67 	vmov.f32	s6, s15
 801aa56:	bf08      	it	eq
 801aa58:	4613      	moveq	r3, r2
 801aa5a:	eef0 2a47 	vmov.f32	s5, s14
 801aa5e:	e72a      	b.n	801a8b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa60:	140f      	asrs	r7, r1, #16
 801aa62:	d454      	bmi.n	801ab0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801aa64:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801aa68:	42be      	cmp	r6, r7
 801aa6a:	dd50      	ble.n	801ab0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801aa6c:	ea5f 4822 	movs.w	r8, r2, asr #16
 801aa70:	d44d      	bmi.n	801ab0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801aa72:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801aa76:	4544      	cmp	r4, r8
 801aa78:	dd49      	ble.n	801ab0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801aa7a:	9c04      	ldr	r4, [sp, #16]
 801aa7c:	b236      	sxth	r6, r6
 801aa7e:	fb08 4606 	mla	r6, r8, r6, r4
 801aa82:	f06f 0001 	mvn.w	r0, #1
 801aa86:	f816 8007 	ldrb.w	r8, [r6, r7]
 801aa8a:	9c01      	ldr	r4, [sp, #4]
 801aa8c:	fb00 fa0e 	mul.w	sl, r0, lr
 801aa90:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801aa94:	9800      	ldr	r0, [sp, #0]
 801aa96:	eb04 0b08 	add.w	fp, r4, r8
 801aa9a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801aa9e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801aaa2:	9801      	ldr	r0, [sp, #4]
 801aaa4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801aaa8:	f810 8008 	ldrb.w	r8, [r0, r8]
 801aaac:	9800      	ldr	r0, [sp, #0]
 801aaae:	1227      	asrs	r7, r4, #8
 801aab0:	fb16 f609 	smulbb	r6, r6, r9
 801aab4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aab8:	fb07 6705 	mla	r7, r7, r5, r6
 801aabc:	10e6      	asrs	r6, r4, #3
 801aabe:	00e4      	lsls	r4, r4, #3
 801aac0:	b2e4      	uxtb	r4, r4
 801aac2:	fb1b fb09 	smulbb	fp, fp, r9
 801aac6:	fb14 f405 	smulbb	r4, r4, r5
 801aaca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aace:	b2bf      	uxth	r7, r7
 801aad0:	fb06 b605 	mla	r6, r6, r5, fp
 801aad4:	fb08 4809 	mla	r8, r8, r9, r4
 801aad8:	b2b6      	uxth	r6, r6
 801aada:	fa1f f888 	uxth.w	r8, r8
 801aade:	1c7c      	adds	r4, r7, #1
 801aae0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801aae4:	f106 0b01 	add.w	fp, r6, #1
 801aae8:	f108 0401 	add.w	r4, r8, #1
 801aaec:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801aaf0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801aaf4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aaf8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801aafc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801ab00:	4327      	orrs	r7, r4
 801ab02:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ab06:	ea47 070b 	orr.w	r7, r7, fp
 801ab0a:	f820 700a 	strh.w	r7, [r0, sl]
 801ab0e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab10:	4401      	add	r1, r0
 801ab12:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ab14:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ab18:	4402      	add	r2, r0
 801ab1a:	e759      	b.n	801a9d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ab1c:	b007      	add	sp, #28
 801ab1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ab24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab28:	b085      	sub	sp, #20
 801ab2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ab2e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ab30:	9203      	str	r2, [sp, #12]
 801ab32:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ab36:	6870      	ldr	r0, [r6, #4]
 801ab38:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ab3a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801ab3e:	686f      	ldr	r7, [r5, #4]
 801ab40:	9101      	str	r1, [sp, #4]
 801ab42:	fb00 2404 	mla	r4, r0, r4, r2
 801ab46:	6832      	ldr	r2, [r6, #0]
 801ab48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ab4c:	682a      	ldr	r2, [r5, #0]
 801ab4e:	9202      	str	r2, [sp, #8]
 801ab50:	3704      	adds	r7, #4
 801ab52:	9a01      	ldr	r2, [sp, #4]
 801ab54:	2a00      	cmp	r2, #0
 801ab56:	dc03      	bgt.n	801ab60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ab58:	9a03      	ldr	r2, [sp, #12]
 801ab5a:	2a00      	cmp	r2, #0
 801ab5c:	f340 80cc 	ble.w	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ab60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ab62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ab66:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ab6a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ab6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ab70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ab74:	2b00      	cmp	r3, #0
 801ab76:	dd0d      	ble.n	801ab94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab78:	1406      	asrs	r6, r0, #16
 801ab7a:	d405      	bmi.n	801ab88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ab7c:	454e      	cmp	r6, r9
 801ab7e:	da03      	bge.n	801ab88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ab80:	1416      	asrs	r6, r2, #16
 801ab82:	d401      	bmi.n	801ab88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ab84:	4546      	cmp	r6, r8
 801ab86:	db06      	blt.n	801ab96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ab88:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ab8a:	4460      	add	r0, ip
 801ab8c:	4432      	add	r2, r6
 801ab8e:	3b01      	subs	r3, #1
 801ab90:	3402      	adds	r4, #2
 801ab92:	e7ef      	b.n	801ab74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ab94:	d00f      	beq.n	801abb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ab96:	1e5e      	subs	r6, r3, #1
 801ab98:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ab9c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801aba0:	d543      	bpl.n	801ac2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801aba2:	4698      	mov	r8, r3
 801aba4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801aba8:	f1b8 0f00 	cmp.w	r8, #0
 801abac:	dc71      	bgt.n	801ac92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801abae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801abb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801abb6:	9b01      	ldr	r3, [sp, #4]
 801abb8:	2b00      	cmp	r3, #0
 801abba:	f340 809d 	ble.w	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801abbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801abc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801abc6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801abca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abcc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abd4:	eeb0 6a62 	vmov.f32	s12, s5
 801abd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abe0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abe4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801abe8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abec:	eeb0 6a43 	vmov.f32	s12, s6
 801abf0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abf4:	ee12 2a90 	vmov	r2, s5
 801abf8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abfc:	fb92 fcf3 	sdiv	ip, r2, r3
 801ac00:	ee13 2a10 	vmov	r2, s6
 801ac04:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac08:	9312      	str	r3, [sp, #72]	; 0x48
 801ac0a:	9b01      	ldr	r3, [sp, #4]
 801ac0c:	9a03      	ldr	r2, [sp, #12]
 801ac0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac12:	3b01      	subs	r3, #1
 801ac14:	9301      	str	r3, [sp, #4]
 801ac16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ac1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac1c:	eeb0 3a67 	vmov.f32	s6, s15
 801ac20:	bf08      	it	eq
 801ac22:	4613      	moveq	r3, r2
 801ac24:	eef0 2a47 	vmov.f32	s5, s14
 801ac28:	e793      	b.n	801ab52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ac2a:	45ce      	cmp	lr, r9
 801ac2c:	dab9      	bge.n	801aba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ac2e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ac30:	fb01 2606 	mla	r6, r1, r6, r2
 801ac34:	1436      	asrs	r6, r6, #16
 801ac36:	d4b4      	bmi.n	801aba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ac38:	4546      	cmp	r6, r8
 801ac3a:	dab2      	bge.n	801aba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ac3c:	4698      	mov	r8, r3
 801ac3e:	46a2      	mov	sl, r4
 801ac40:	f1b8 0f00 	cmp.w	r8, #0
 801ac44:	ddb3      	ble.n	801abae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ac46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ac4a:	9902      	ldr	r1, [sp, #8]
 801ac4c:	1416      	asrs	r6, r2, #16
 801ac4e:	fb09 1606 	mla	r6, r9, r6, r1
 801ac52:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801ac56:	492a      	ldr	r1, [pc, #168]	; (801ad00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801ac58:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801ac5c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ac60:	eb07 0b0e 	add.w	fp, r7, lr
 801ac64:	4460      	add	r0, ip
 801ac66:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801ac6a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801ac6e:	00f6      	lsls	r6, r6, #3
 801ac70:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801ac74:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ac78:	ea49 0606 	orr.w	r6, r9, r6
 801ac7c:	f817 900e 	ldrb.w	r9, [r7, lr]
 801ac80:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ac82:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801ac86:	f82a 6b02 	strh.w	r6, [sl], #2
 801ac8a:	440a      	add	r2, r1
 801ac8c:	f108 38ff 	add.w	r8, r8, #4294967295
 801ac90:	e7d6      	b.n	801ac40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ac92:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ac96:	d429      	bmi.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ac98:	68ae      	ldr	r6, [r5, #8]
 801ac9a:	454e      	cmp	r6, r9
 801ac9c:	dd26      	ble.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ac9e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801aca2:	d423      	bmi.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801aca4:	68e9      	ldr	r1, [r5, #12]
 801aca6:	4559      	cmp	r1, fp
 801aca8:	dd20      	ble.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801acaa:	9902      	ldr	r1, [sp, #8]
 801acac:	fa0f fe86 	sxth.w	lr, r6
 801acb0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801acb4:	f06f 0101 	mvn.w	r1, #1
 801acb8:	f81e e009 	ldrb.w	lr, [lr, r9]
 801acbc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801acc0:	eb07 060e 	add.w	r6, r7, lr
 801acc4:	fb01 f908 	mul.w	r9, r1, r8
 801acc8:	f896 b002 	ldrb.w	fp, [r6, #2]
 801accc:	7876      	ldrb	r6, [r6, #1]
 801acce:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801acd2:	00f6      	lsls	r6, r6, #3
 801acd4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801acd8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801acdc:	ea4b 0606 	orr.w	r6, fp, r6
 801ace0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801ace4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801ace8:	f82a 6009 	strh.w	r6, [sl, r9]
 801acec:	9912      	ldr	r1, [sp, #72]	; 0x48
 801acee:	4460      	add	r0, ip
 801acf0:	440a      	add	r2, r1
 801acf2:	f108 38ff 	add.w	r8, r8, #4294967295
 801acf6:	e757      	b.n	801aba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801acf8:	b005      	add	sp, #20
 801acfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acfe:	bf00      	nop
 801ad00:	fffff800 	.word	0xfffff800

0801ad04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad08:	b087      	sub	sp, #28
 801ad0a:	468b      	mov	fp, r1
 801ad0c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ad0e:	9204      	str	r2, [sp, #16]
 801ad10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ad14:	9205      	str	r2, [sp, #20]
 801ad16:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ad1a:	6841      	ldr	r1, [r0, #4]
 801ad1c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801ad20:	fb01 2404 	mla	r4, r1, r4, r2
 801ad24:	6802      	ldr	r2, [r0, #0]
 801ad26:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ad2a:	f8dc 2000 	ldr.w	r2, [ip]
 801ad2e:	9201      	str	r2, [sp, #4]
 801ad30:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ad34:	3204      	adds	r2, #4
 801ad36:	9202      	str	r2, [sp, #8]
 801ad38:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ad3c:	f1bb 0f00 	cmp.w	fp, #0
 801ad40:	dc03      	bgt.n	801ad4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ad42:	9a04      	ldr	r2, [sp, #16]
 801ad44:	2a00      	cmp	r2, #0
 801ad46:	f340 8138 	ble.w	801afba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ad4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ad4c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ad50:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801ad54:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ad58:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ad5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad5e:	2b00      	cmp	r3, #0
 801ad60:	dd0e      	ble.n	801ad80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ad62:	1402      	asrs	r2, r0, #16
 801ad64:	d405      	bmi.n	801ad72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad66:	42ba      	cmp	r2, r7
 801ad68:	da03      	bge.n	801ad72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad6a:	140a      	asrs	r2, r1, #16
 801ad6c:	d401      	bmi.n	801ad72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad6e:	42b2      	cmp	r2, r6
 801ad70:	db07      	blt.n	801ad82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ad72:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ad74:	4410      	add	r0, r2
 801ad76:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ad78:	3b01      	subs	r3, #1
 801ad7a:	4411      	add	r1, r2
 801ad7c:	3402      	adds	r4, #2
 801ad7e:	e7ee      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ad80:	d019      	beq.n	801adb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ad82:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ad84:	1e5a      	subs	r2, r3, #1
 801ad86:	fb05 0502 	mla	r5, r5, r2, r0
 801ad8a:	142d      	asrs	r5, r5, #16
 801ad8c:	d409      	bmi.n	801ada2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad8e:	42bd      	cmp	r5, r7
 801ad90:	da07      	bge.n	801ada2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad92:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ad94:	fb05 1202 	mla	r2, r5, r2, r1
 801ad98:	1412      	asrs	r2, r2, #16
 801ad9a:	d402      	bmi.n	801ada2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad9c:	42b2      	cmp	r2, r6
 801ad9e:	f2c0 80ac 	blt.w	801aefa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801ada2:	f04f 0e00 	mov.w	lr, #0
 801ada6:	eb03 020e 	add.w	r2, r3, lr
 801adaa:	2a00      	cmp	r2, #0
 801adac:	dc3e      	bgt.n	801ae2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801adae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801adb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801adb6:	f1bb 0f00 	cmp.w	fp, #0
 801adba:	f340 80fe 	ble.w	801afba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801adbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801adc6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801adca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801adcc:	f1bb 0b01 	subs.w	fp, fp, #1
 801add0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801add4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801add8:	eeb0 6a62 	vmov.f32	s12, s5
 801addc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ade0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ade4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ade8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801adec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801adf0:	eeb0 6a43 	vmov.f32	s12, s6
 801adf4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801adf8:	ee12 2a90 	vmov	r2, s5
 801adfc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae00:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae04:	ee13 2a10 	vmov	r2, s6
 801ae08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae0c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ae0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae10:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae14:	9a04      	ldr	r2, [sp, #16]
 801ae16:	9314      	str	r3, [sp, #80]	; 0x50
 801ae18:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ae1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae1e:	eeb0 3a67 	vmov.f32	s6, s15
 801ae22:	bf08      	it	eq
 801ae24:	4613      	moveq	r3, r2
 801ae26:	eef0 2a47 	vmov.f32	s5, s14
 801ae2a:	e787      	b.n	801ad3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ae2c:	1406      	asrs	r6, r0, #16
 801ae2e:	d45d      	bmi.n	801aeec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ae30:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801ae34:	42b5      	cmp	r5, r6
 801ae36:	dd59      	ble.n	801aeec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ae38:	140f      	asrs	r7, r1, #16
 801ae3a:	d457      	bmi.n	801aeec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ae3c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801ae40:	42ba      	cmp	r2, r7
 801ae42:	dd53      	ble.n	801aeec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ae44:	9a01      	ldr	r2, [sp, #4]
 801ae46:	b22d      	sxth	r5, r5
 801ae48:	fb07 2505 	mla	r5, r7, r5, r2
 801ae4c:	5daa      	ldrb	r2, [r5, r6]
 801ae4e:	9d02      	ldr	r5, [sp, #8]
 801ae50:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801ae54:	0e2e      	lsrs	r6, r5, #24
 801ae56:	d049      	beq.n	801aeec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ae58:	f06f 0201 	mvn.w	r2, #1
 801ae5c:	fb02 f20e 	mul.w	r2, r2, lr
 801ae60:	9203      	str	r2, [sp, #12]
 801ae62:	f834 8002 	ldrh.w	r8, [r4, r2]
 801ae66:	9a05      	ldr	r2, [sp, #20]
 801ae68:	4356      	muls	r6, r2
 801ae6a:	1c72      	adds	r2, r6, #1
 801ae6c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801ae70:	1212      	asrs	r2, r2, #8
 801ae72:	fa1f f982 	uxth.w	r9, r2
 801ae76:	ea4f 2728 	mov.w	r7, r8, asr #8
 801ae7a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ae7e:	43d2      	mvns	r2, r2
 801ae80:	b2d2      	uxtb	r2, r2
 801ae82:	fb16 f609 	smulbb	r6, r6, r9
 801ae86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae8a:	fb07 6702 	mla	r7, r7, r2, r6
 801ae8e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ae92:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ae96:	b2ed      	uxtb	r5, r5
 801ae98:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ae9c:	fa5f f888 	uxtb.w	r8, r8
 801aea0:	fb15 f509 	smulbb	r5, r5, r9
 801aea4:	fb08 5502 	mla	r5, r8, r2, r5
 801aea8:	b2bf      	uxth	r7, r7
 801aeaa:	fb1a fa09 	smulbb	sl, sl, r9
 801aeae:	b2ad      	uxth	r5, r5
 801aeb0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aeb4:	fb06 a602 	mla	r6, r6, r2, sl
 801aeb8:	1c7a      	adds	r2, r7, #1
 801aeba:	f105 0a01 	add.w	sl, r5, #1
 801aebe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801aec2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aec6:	b2b6      	uxth	r6, r6
 801aec8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aecc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aed0:	ea4a 0707 	orr.w	r7, sl, r7
 801aed4:	f106 0a01 	add.w	sl, r6, #1
 801aed8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aedc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aee0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aee4:	9a03      	ldr	r2, [sp, #12]
 801aee6:	ea47 070a 	orr.w	r7, r7, sl
 801aeea:	52a7      	strh	r7, [r4, r2]
 801aeec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aeee:	4410      	add	r0, r2
 801aef0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aef2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801aef6:	4411      	add	r1, r2
 801aef8:	e755      	b.n	801ada6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aefa:	f04f 0800 	mov.w	r8, #0
 801aefe:	eba3 0208 	sub.w	r2, r3, r8
 801af02:	2a00      	cmp	r2, #0
 801af04:	f77f af53 	ble.w	801adae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801af08:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801af0c:	9f01      	ldr	r7, [sp, #4]
 801af0e:	140a      	asrs	r2, r1, #16
 801af10:	1405      	asrs	r5, r0, #16
 801af12:	fb06 7202 	mla	r2, r6, r2, r7
 801af16:	5d52      	ldrb	r2, [r2, r5]
 801af18:	9d02      	ldr	r5, [sp, #8]
 801af1a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801af1e:	0e2e      	lsrs	r6, r5, #24
 801af20:	d044      	beq.n	801afac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801af22:	9a05      	ldr	r2, [sp, #20]
 801af24:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801af28:	4356      	muls	r6, r2
 801af2a:	1c72      	adds	r2, r6, #1
 801af2c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801af30:	1212      	asrs	r2, r2, #8
 801af32:	fa1f f982 	uxth.w	r9, r2
 801af36:	ea4f 272e 	mov.w	r7, lr, asr #8
 801af3a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801af3e:	43d2      	mvns	r2, r2
 801af40:	b2d2      	uxtb	r2, r2
 801af42:	fb16 f609 	smulbb	r6, r6, r9
 801af46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af4a:	fb07 6702 	mla	r7, r7, r2, r6
 801af4e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801af52:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801af56:	b2ed      	uxtb	r5, r5
 801af58:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801af5c:	fa5f fe8e 	uxtb.w	lr, lr
 801af60:	fb15 f509 	smulbb	r5, r5, r9
 801af64:	fb0e 5502 	mla	r5, lr, r2, r5
 801af68:	b2bf      	uxth	r7, r7
 801af6a:	fb1a fa09 	smulbb	sl, sl, r9
 801af6e:	b2ad      	uxth	r5, r5
 801af70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af74:	fb06 a602 	mla	r6, r6, r2, sl
 801af78:	1c7a      	adds	r2, r7, #1
 801af7a:	f105 0a01 	add.w	sl, r5, #1
 801af7e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801af82:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af86:	b2b6      	uxth	r6, r6
 801af88:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801af90:	ea4a 0707 	orr.w	r7, sl, r7
 801af94:	f106 0a01 	add.w	sl, r6, #1
 801af98:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801afa0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801afa4:	ea47 070a 	orr.w	r7, r7, sl
 801afa8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801afac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801afae:	4410      	add	r0, r2
 801afb0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801afb2:	f108 0801 	add.w	r8, r8, #1
 801afb6:	4411      	add	r1, r2
 801afb8:	e7a1      	b.n	801aefe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801afba:	b007      	add	sp, #28
 801afbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afc4:	b085      	sub	sp, #20
 801afc6:	468b      	mov	fp, r1
 801afc8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801afca:	9203      	str	r2, [sp, #12]
 801afcc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801afd0:	6841      	ldr	r1, [r0, #4]
 801afd2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801afd6:	fb01 2404 	mla	r4, r1, r4, r2
 801afda:	6802      	ldr	r2, [r0, #0]
 801afdc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801afe0:	f8de 2000 	ldr.w	r2, [lr]
 801afe4:	9200      	str	r2, [sp, #0]
 801afe6:	f8de 2004 	ldr.w	r2, [lr, #4]
 801afea:	3204      	adds	r2, #4
 801afec:	9201      	str	r2, [sp, #4]
 801afee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aff2:	f1bb 0f00 	cmp.w	fp, #0
 801aff6:	dc03      	bgt.n	801b000 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aff8:	9a03      	ldr	r2, [sp, #12]
 801affa:	2a00      	cmp	r2, #0
 801affc:	f340 8153 	ble.w	801b2a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b000:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b002:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b006:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b00a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b00e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b010:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b014:	2b00      	cmp	r3, #0
 801b016:	dd0e      	ble.n	801b036 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b018:	1408      	asrs	r0, r1, #16
 801b01a:	d405      	bmi.n	801b028 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b01c:	42b8      	cmp	r0, r7
 801b01e:	da03      	bge.n	801b028 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b020:	1410      	asrs	r0, r2, #16
 801b022:	d401      	bmi.n	801b028 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b024:	42b0      	cmp	r0, r6
 801b026:	db07      	blt.n	801b038 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b028:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b02a:	4401      	add	r1, r0
 801b02c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b02e:	3b01      	subs	r3, #1
 801b030:	4402      	add	r2, r0
 801b032:	3402      	adds	r4, #2
 801b034:	e7ee      	b.n	801b014 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b036:	d017      	beq.n	801b068 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b038:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b03a:	1e58      	subs	r0, r3, #1
 801b03c:	fb05 1500 	mla	r5, r5, r0, r1
 801b040:	142d      	asrs	r5, r5, #16
 801b042:	d409      	bmi.n	801b058 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b044:	42bd      	cmp	r5, r7
 801b046:	da07      	bge.n	801b058 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b048:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b04a:	fb05 2000 	mla	r0, r5, r0, r2
 801b04e:	1400      	asrs	r0, r0, #16
 801b050:	d402      	bmi.n	801b058 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b052:	42b0      	cmp	r0, r6
 801b054:	f2c0 80bc 	blt.w	801b1d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b058:	2600      	movs	r6, #0
 801b05a:	1998      	adds	r0, r3, r6
 801b05c:	2800      	cmp	r0, #0
 801b05e:	dc3e      	bgt.n	801b0de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b060:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b064:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b068:	f1bb 0f00 	cmp.w	fp, #0
 801b06c:	f340 811b 	ble.w	801b2a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b070:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b074:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b078:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b07c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b07e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b082:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b086:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b08a:	eeb0 6a62 	vmov.f32	s12, s5
 801b08e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b092:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b096:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b09a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b09e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0a2:	eeb0 6a43 	vmov.f32	s12, s6
 801b0a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0aa:	ee12 2a90 	vmov	r2, s5
 801b0ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0b6:	ee13 2a10 	vmov	r2, s6
 801b0ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b0be:	9311      	str	r3, [sp, #68]	; 0x44
 801b0c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0c6:	9a03      	ldr	r2, [sp, #12]
 801b0c8:	9312      	str	r3, [sp, #72]	; 0x48
 801b0ca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b0ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0d0:	eeb0 3a67 	vmov.f32	s6, s15
 801b0d4:	bf08      	it	eq
 801b0d6:	4613      	moveq	r3, r2
 801b0d8:	eef0 2a47 	vmov.f32	s5, s14
 801b0dc:	e789      	b.n	801aff2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b0de:	140f      	asrs	r7, r1, #16
 801b0e0:	d426      	bmi.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b0e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b0e6:	42bd      	cmp	r5, r7
 801b0e8:	dd22      	ble.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b0ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b0ee:	d41f      	bmi.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b0f0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b0f4:	4560      	cmp	r0, ip
 801b0f6:	dd1b      	ble.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b0f8:	9800      	ldr	r0, [sp, #0]
 801b0fa:	b22d      	sxth	r5, r5
 801b0fc:	fb0c 0505 	mla	r5, ip, r5, r0
 801b100:	5de8      	ldrb	r0, [r5, r7]
 801b102:	9d01      	ldr	r5, [sp, #4]
 801b104:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b108:	0e07      	lsrs	r7, r0, #24
 801b10a:	2fff      	cmp	r7, #255	; 0xff
 801b10c:	d116      	bne.n	801b13c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b10e:	f06f 0501 	mvn.w	r5, #1
 801b112:	fb05 f706 	mul.w	r7, r5, r6
 801b116:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b11a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b11e:	0945      	lsrs	r5, r0, #5
 801b120:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b124:	ea4c 0505 	orr.w	r5, ip, r5
 801b128:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b12c:	4305      	orrs	r5, r0
 801b12e:	53e5      	strh	r5, [r4, r7]
 801b130:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b132:	4401      	add	r1, r0
 801b134:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b136:	3e01      	subs	r6, #1
 801b138:	4402      	add	r2, r0
 801b13a:	e78e      	b.n	801b05a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b13c:	b2fd      	uxtb	r5, r7
 801b13e:	2f00      	cmp	r7, #0
 801b140:	d0f6      	beq.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b142:	f06f 0701 	mvn.w	r7, #1
 801b146:	4377      	muls	r7, r6
 801b148:	fa1f f985 	uxth.w	r9, r5
 801b14c:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b150:	9702      	str	r7, [sp, #8]
 801b152:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b156:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b15a:	43ed      	mvns	r5, r5
 801b15c:	b2ed      	uxtb	r5, r5
 801b15e:	fb17 f709 	smulbb	r7, r7, r9
 801b162:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b166:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b16a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b16e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b172:	b2c0      	uxtb	r0, r0
 801b174:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b178:	fa5f f888 	uxtb.w	r8, r8
 801b17c:	fb10 f009 	smulbb	r0, r0, r9
 801b180:	fb08 0005 	mla	r0, r8, r5, r0
 801b184:	b280      	uxth	r0, r0
 801b186:	fa1f fc8c 	uxth.w	ip, ip
 801b18a:	fb1a fa09 	smulbb	sl, sl, r9
 801b18e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b192:	fb07 a705 	mla	r7, r7, r5, sl
 801b196:	f100 0a01 	add.w	sl, r0, #1
 801b19a:	f10c 0501 	add.w	r5, ip, #1
 801b19e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b1a2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b1a6:	b2bf      	uxth	r7, r7
 801b1a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b1ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b1b0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b1b4:	f107 0a01 	add.w	sl, r7, #1
 801b1b8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b1bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b1c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b1c4:	9802      	ldr	r0, [sp, #8]
 801b1c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b1ca:	f824 c000 	strh.w	ip, [r4, r0]
 801b1ce:	e7af      	b.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b1d0:	f04f 0800 	mov.w	r8, #0
 801b1d4:	eba3 0008 	sub.w	r0, r3, r8
 801b1d8:	2800      	cmp	r0, #0
 801b1da:	f77f af41 	ble.w	801b060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b1de:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b1e2:	9f00      	ldr	r7, [sp, #0]
 801b1e4:	1410      	asrs	r0, r2, #16
 801b1e6:	140d      	asrs	r5, r1, #16
 801b1e8:	fb06 7000 	mla	r0, r6, r0, r7
 801b1ec:	5d40      	ldrb	r0, [r0, r5]
 801b1ee:	9d01      	ldr	r5, [sp, #4]
 801b1f0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b1f4:	0e2e      	lsrs	r6, r5, #24
 801b1f6:	2eff      	cmp	r6, #255	; 0xff
 801b1f8:	d112      	bne.n	801b220 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b1fa:	482c      	ldr	r0, [pc, #176]	; (801b2ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b1fc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b200:	0968      	lsrs	r0, r5, #5
 801b202:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b206:	4330      	orrs	r0, r6
 801b208:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b20c:	4328      	orrs	r0, r5
 801b20e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b212:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b214:	4401      	add	r1, r0
 801b216:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b218:	f108 0801 	add.w	r8, r8, #1
 801b21c:	4402      	add	r2, r0
 801b21e:	e7d9      	b.n	801b1d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b220:	b2f0      	uxtb	r0, r6
 801b222:	2e00      	cmp	r6, #0
 801b224:	d0f5      	beq.n	801b212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b226:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b22a:	fa1f f980 	uxth.w	r9, r0
 801b22e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b232:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b236:	43c0      	mvns	r0, r0
 801b238:	b2c0      	uxtb	r0, r0
 801b23a:	fb16 f609 	smulbb	r6, r6, r9
 801b23e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b242:	fb07 6700 	mla	r7, r7, r0, r6
 801b246:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b24a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b24e:	b2ed      	uxtb	r5, r5
 801b250:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b254:	fa5f fc8c 	uxtb.w	ip, ip
 801b258:	fb15 f509 	smulbb	r5, r5, r9
 801b25c:	fb0c 5500 	mla	r5, ip, r0, r5
 801b260:	b2bf      	uxth	r7, r7
 801b262:	fb1a fa09 	smulbb	sl, sl, r9
 801b266:	b2ad      	uxth	r5, r5
 801b268:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b26c:	fb06 a600 	mla	r6, r6, r0, sl
 801b270:	1c78      	adds	r0, r7, #1
 801b272:	f105 0a01 	add.w	sl, r5, #1
 801b276:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b27a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b27e:	b2b6      	uxth	r6, r6
 801b280:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b284:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b288:	ea4a 0707 	orr.w	r7, sl, r7
 801b28c:	f106 0a01 	add.w	sl, r6, #1
 801b290:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b294:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b298:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b29c:	ea47 070a 	orr.w	r7, r7, sl
 801b2a0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b2a4:	e7b5      	b.n	801b212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b2a6:	b005      	add	sp, #20
 801b2a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2ac:	fffff800 	.word	0xfffff800

0801b2b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2b4:	b087      	sub	sp, #28
 801b2b6:	468b      	mov	fp, r1
 801b2b8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b2ba:	9204      	str	r2, [sp, #16]
 801b2bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b2c0:	9205      	str	r2, [sp, #20]
 801b2c2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b2c6:	6861      	ldr	r1, [r4, #4]
 801b2c8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b2cc:	fb01 2000 	mla	r0, r1, r0, r2
 801b2d0:	6822      	ldr	r2, [r4, #0]
 801b2d2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b2d6:	f8de 2000 	ldr.w	r2, [lr]
 801b2da:	9201      	str	r2, [sp, #4]
 801b2dc:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b2e0:	9202      	str	r2, [sp, #8]
 801b2e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b2e6:	f1bb 0f00 	cmp.w	fp, #0
 801b2ea:	dc03      	bgt.n	801b2f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b2ec:	9a04      	ldr	r2, [sp, #16]
 801b2ee:	2a00      	cmp	r2, #0
 801b2f0:	f340 8142 	ble.w	801b578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b2f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b2f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b2fa:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b2fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b302:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b304:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b308:	2b00      	cmp	r3, #0
 801b30a:	dd0e      	ble.n	801b32a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b30c:	140c      	asrs	r4, r1, #16
 801b30e:	d405      	bmi.n	801b31c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b310:	42bc      	cmp	r4, r7
 801b312:	da03      	bge.n	801b31c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b314:	1414      	asrs	r4, r2, #16
 801b316:	d401      	bmi.n	801b31c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b318:	42b4      	cmp	r4, r6
 801b31a:	db07      	blt.n	801b32c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b31c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b31e:	4421      	add	r1, r4
 801b320:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b322:	3b01      	subs	r3, #1
 801b324:	4422      	add	r2, r4
 801b326:	3002      	adds	r0, #2
 801b328:	e7ee      	b.n	801b308 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b32a:	d019      	beq.n	801b360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b32c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b32e:	1e5c      	subs	r4, r3, #1
 801b330:	fb05 1504 	mla	r5, r5, r4, r1
 801b334:	142d      	asrs	r5, r5, #16
 801b336:	d409      	bmi.n	801b34c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b338:	42bd      	cmp	r5, r7
 801b33a:	da07      	bge.n	801b34c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b33c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b33e:	fb05 2404 	mla	r4, r5, r4, r2
 801b342:	1424      	asrs	r4, r4, #16
 801b344:	d402      	bmi.n	801b34c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b346:	42b4      	cmp	r4, r6
 801b348:	f2c0 80b1 	blt.w	801b4ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b34c:	f04f 0800 	mov.w	r8, #0
 801b350:	eb03 0408 	add.w	r4, r3, r8
 801b354:	2c00      	cmp	r4, #0
 801b356:	dc3e      	bgt.n	801b3d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b358:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b35c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b360:	f1bb 0f00 	cmp.w	fp, #0
 801b364:	f340 8108 	ble.w	801b578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b368:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b36c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b370:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b374:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b376:	f1bb 0b01 	subs.w	fp, fp, #1
 801b37a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b37e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b382:	eeb0 6a62 	vmov.f32	s12, s5
 801b386:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b38a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b38e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b392:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b396:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b39a:	eeb0 6a43 	vmov.f32	s12, s6
 801b39e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3a2:	ee12 2a90 	vmov	r2, s5
 801b3a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3ae:	ee13 2a10 	vmov	r2, s6
 801b3b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3b6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b3b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3be:	9a04      	ldr	r2, [sp, #16]
 801b3c0:	9314      	str	r3, [sp, #80]	; 0x50
 801b3c2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b3c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3c8:	eeb0 3a67 	vmov.f32	s6, s15
 801b3cc:	bf08      	it	eq
 801b3ce:	4613      	moveq	r3, r2
 801b3d0:	eef0 2a47 	vmov.f32	s5, s14
 801b3d4:	e787      	b.n	801b2e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b3d6:	140e      	asrs	r6, r1, #16
 801b3d8:	d462      	bmi.n	801b4a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b3da:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b3de:	42b5      	cmp	r5, r6
 801b3e0:	dd5e      	ble.n	801b4a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b3e2:	1417      	asrs	r7, r2, #16
 801b3e4:	d45c      	bmi.n	801b4a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b3e6:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b3ea:	42bc      	cmp	r4, r7
 801b3ec:	dd58      	ble.n	801b4a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b3ee:	b22d      	sxth	r5, r5
 801b3f0:	fb07 6505 	mla	r5, r7, r5, r6
 801b3f4:	9c02      	ldr	r4, [sp, #8]
 801b3f6:	5d66      	ldrb	r6, [r4, r5]
 801b3f8:	2e00      	cmp	r6, #0
 801b3fa:	d051      	beq.n	801b4a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b3fc:	9c01      	ldr	r4, [sp, #4]
 801b3fe:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b402:	f06f 0401 	mvn.w	r4, #1
 801b406:	fb04 f408 	mul.w	r4, r4, r8
 801b40a:	9403      	str	r4, [sp, #12]
 801b40c:	5b05      	ldrh	r5, [r0, r4]
 801b40e:	9c05      	ldr	r4, [sp, #20]
 801b410:	4366      	muls	r6, r4
 801b412:	1c74      	adds	r4, r6, #1
 801b414:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b418:	1224      	asrs	r4, r4, #8
 801b41a:	b2a7      	uxth	r7, r4
 801b41c:	122e      	asrs	r6, r5, #8
 801b41e:	43e4      	mvns	r4, r4
 801b420:	b2e4      	uxtb	r4, r4
 801b422:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b426:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b42a:	fb16 f604 	smulbb	r6, r6, r4
 801b42e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b432:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b436:	00ed      	lsls	r5, r5, #3
 801b438:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b43c:	b2ed      	uxtb	r5, r5
 801b43e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b442:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b446:	fb15 f504 	smulbb	r5, r5, r4
 801b44a:	fa5f f989 	uxtb.w	r9, r9
 801b44e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b452:	fb09 5507 	mla	r5, r9, r7, r5
 801b456:	fb1a fa04 	smulbb	sl, sl, r4
 801b45a:	fa1f fc8c 	uxth.w	ip, ip
 801b45e:	b2ad      	uxth	r5, r5
 801b460:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b464:	fb06 a607 	mla	r6, r6, r7, sl
 801b468:	f10c 0401 	add.w	r4, ip, #1
 801b46c:	f105 0a01 	add.w	sl, r5, #1
 801b470:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b474:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b478:	b2b6      	uxth	r6, r6
 801b47a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b47e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b482:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b486:	f106 0a01 	add.w	sl, r6, #1
 801b48a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b48e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b492:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b496:	9c03      	ldr	r4, [sp, #12]
 801b498:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b49c:	f820 c004 	strh.w	ip, [r0, r4]
 801b4a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b4a2:	4421      	add	r1, r4
 801b4a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b4a6:	f108 38ff 	add.w	r8, r8, #4294967295
 801b4aa:	4422      	add	r2, r4
 801b4ac:	e750      	b.n	801b350 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b4ae:	f04f 0900 	mov.w	r9, #0
 801b4b2:	eba3 0409 	sub.w	r4, r3, r9
 801b4b6:	2c00      	cmp	r4, #0
 801b4b8:	f77f af4e 	ble.w	801b358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b4bc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b4c0:	140d      	asrs	r5, r1, #16
 801b4c2:	1414      	asrs	r4, r2, #16
 801b4c4:	fb06 5404 	mla	r4, r6, r4, r5
 801b4c8:	9d02      	ldr	r5, [sp, #8]
 801b4ca:	5d2e      	ldrb	r6, [r5, r4]
 801b4cc:	2e00      	cmp	r6, #0
 801b4ce:	d04c      	beq.n	801b56a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801b4d0:	9d01      	ldr	r5, [sp, #4]
 801b4d2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801b4d6:	9c05      	ldr	r4, [sp, #20]
 801b4d8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b4dc:	4366      	muls	r6, r4
 801b4de:	1c74      	adds	r4, r6, #1
 801b4e0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b4e4:	1224      	asrs	r4, r4, #8
 801b4e6:	b2a7      	uxth	r7, r4
 801b4e8:	122e      	asrs	r6, r5, #8
 801b4ea:	43e4      	mvns	r4, r4
 801b4ec:	b2e4      	uxtb	r4, r4
 801b4ee:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b4f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4f6:	fb16 f604 	smulbb	r6, r6, r4
 801b4fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b4fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b502:	00ed      	lsls	r5, r5, #3
 801b504:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b508:	b2ed      	uxtb	r5, r5
 801b50a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b50e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b512:	fb15 f504 	smulbb	r5, r5, r4
 801b516:	fa5f f888 	uxtb.w	r8, r8
 801b51a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b51e:	fb08 5507 	mla	r5, r8, r7, r5
 801b522:	fb1a fa04 	smulbb	sl, sl, r4
 801b526:	fa1f fc8c 	uxth.w	ip, ip
 801b52a:	b2ad      	uxth	r5, r5
 801b52c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b530:	fb06 a607 	mla	r6, r6, r7, sl
 801b534:	f10c 0401 	add.w	r4, ip, #1
 801b538:	f105 0a01 	add.w	sl, r5, #1
 801b53c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b540:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b544:	b2b6      	uxth	r6, r6
 801b546:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b54a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b54e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b552:	f106 0a01 	add.w	sl, r6, #1
 801b556:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b55a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b55e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b562:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b566:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b56a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b56c:	4421      	add	r1, r4
 801b56e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b570:	f109 0901 	add.w	r9, r9, #1
 801b574:	4422      	add	r2, r4
 801b576:	e79c      	b.n	801b4b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b578:	b007      	add	sp, #28
 801b57a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b57e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b57e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b582:	b085      	sub	sp, #20
 801b584:	468b      	mov	fp, r1
 801b586:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b588:	9203      	str	r2, [sp, #12]
 801b58a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801b58e:	6861      	ldr	r1, [r4, #4]
 801b590:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b594:	fb01 2000 	mla	r0, r1, r0, r2
 801b598:	6822      	ldr	r2, [r4, #0]
 801b59a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b59e:	f8d8 2000 	ldr.w	r2, [r8]
 801b5a2:	9200      	str	r2, [sp, #0]
 801b5a4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b5a8:	9201      	str	r2, [sp, #4]
 801b5aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b5ae:	f1bb 0f00 	cmp.w	fp, #0
 801b5b2:	dc03      	bgt.n	801b5bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b5b4:	9a03      	ldr	r2, [sp, #12]
 801b5b6:	2a00      	cmp	r2, #0
 801b5b8:	f340 8146 	ble.w	801b848 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b5bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5be:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b5c2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b5c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5d0:	2b00      	cmp	r3, #0
 801b5d2:	dd0e      	ble.n	801b5f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b5d4:	140c      	asrs	r4, r1, #16
 801b5d6:	d405      	bmi.n	801b5e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b5d8:	42bc      	cmp	r4, r7
 801b5da:	da03      	bge.n	801b5e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b5dc:	1414      	asrs	r4, r2, #16
 801b5de:	d401      	bmi.n	801b5e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b5e0:	42b4      	cmp	r4, r6
 801b5e2:	db07      	blt.n	801b5f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b5e6:	4421      	add	r1, r4
 801b5e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b5ea:	3b01      	subs	r3, #1
 801b5ec:	4422      	add	r2, r4
 801b5ee:	3002      	adds	r0, #2
 801b5f0:	e7ee      	b.n	801b5d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b5f2:	d017      	beq.n	801b624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b5f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5f6:	1e5c      	subs	r4, r3, #1
 801b5f8:	fb05 1504 	mla	r5, r5, r4, r1
 801b5fc:	142d      	asrs	r5, r5, #16
 801b5fe:	d409      	bmi.n	801b614 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b600:	42bd      	cmp	r5, r7
 801b602:	da07      	bge.n	801b614 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b604:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b606:	fb05 2404 	mla	r4, r5, r4, r2
 801b60a:	1424      	asrs	r4, r4, #16
 801b60c:	d402      	bmi.n	801b614 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b60e:	42b4      	cmp	r4, r6
 801b610:	f2c0 80b3 	blt.w	801b77a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b614:	2600      	movs	r6, #0
 801b616:	199c      	adds	r4, r3, r6
 801b618:	2c00      	cmp	r4, #0
 801b61a:	dc3e      	bgt.n	801b69a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b61c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b620:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b624:	f1bb 0f00 	cmp.w	fp, #0
 801b628:	f340 810e 	ble.w	801b848 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b62c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b630:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b634:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b638:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b63a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b63e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b642:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b646:	eeb0 6a62 	vmov.f32	s12, s5
 801b64a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b64e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b652:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b656:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b65a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b65e:	eeb0 6a43 	vmov.f32	s12, s6
 801b662:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b666:	ee12 2a90 	vmov	r2, s5
 801b66a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b66e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b672:	ee13 2a10 	vmov	r2, s6
 801b676:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b67a:	9311      	str	r3, [sp, #68]	; 0x44
 801b67c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b67e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b682:	9a03      	ldr	r2, [sp, #12]
 801b684:	9312      	str	r3, [sp, #72]	; 0x48
 801b686:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b68a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b68c:	eeb0 3a67 	vmov.f32	s6, s15
 801b690:	bf08      	it	eq
 801b692:	4613      	moveq	r3, r2
 801b694:	eef0 2a47 	vmov.f32	s5, s14
 801b698:	e789      	b.n	801b5ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b69a:	140f      	asrs	r7, r1, #16
 801b69c:	d418      	bmi.n	801b6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b69e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b6a2:	42bd      	cmp	r5, r7
 801b6a4:	dd14      	ble.n	801b6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b6a6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b6aa:	d411      	bmi.n	801b6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b6ac:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b6b0:	4564      	cmp	r4, ip
 801b6b2:	dd0d      	ble.n	801b6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b6b4:	b22d      	sxth	r5, r5
 801b6b6:	fb0c 7505 	mla	r5, ip, r5, r7
 801b6ba:	9c01      	ldr	r4, [sp, #4]
 801b6bc:	5d64      	ldrb	r4, [r4, r5]
 801b6be:	2cff      	cmp	r4, #255	; 0xff
 801b6c0:	d10c      	bne.n	801b6dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b6c2:	9c00      	ldr	r4, [sp, #0]
 801b6c4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b6c8:	f06f 0401 	mvn.w	r4, #1
 801b6cc:	4374      	muls	r4, r6
 801b6ce:	5305      	strh	r5, [r0, r4]
 801b6d0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b6d2:	4421      	add	r1, r4
 801b6d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b6d6:	3e01      	subs	r6, #1
 801b6d8:	4422      	add	r2, r4
 801b6da:	e79c      	b.n	801b616 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b6dc:	2c00      	cmp	r4, #0
 801b6de:	d0f7      	beq.n	801b6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b6e0:	9f00      	ldr	r7, [sp, #0]
 801b6e2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b6e6:	f06f 0501 	mvn.w	r5, #1
 801b6ea:	4375      	muls	r5, r6
 801b6ec:	9502      	str	r5, [sp, #8]
 801b6ee:	5b45      	ldrh	r5, [r0, r5]
 801b6f0:	fa1f fc84 	uxth.w	ip, r4
 801b6f4:	122f      	asrs	r7, r5, #8
 801b6f6:	43e4      	mvns	r4, r4
 801b6f8:	b2e4      	uxtb	r4, r4
 801b6fa:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b6fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b702:	fb17 f704 	smulbb	r7, r7, r4
 801b706:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b70a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b70e:	00ed      	lsls	r5, r5, #3
 801b710:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b714:	b2ed      	uxtb	r5, r5
 801b716:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b71a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b71e:	fb15 f504 	smulbb	r5, r5, r4
 801b722:	fa5f f989 	uxtb.w	r9, r9
 801b726:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b72a:	fb09 550c 	mla	r5, r9, ip, r5
 801b72e:	fb1a fa04 	smulbb	sl, sl, r4
 801b732:	fa1f fe8e 	uxth.w	lr, lr
 801b736:	b2ad      	uxth	r5, r5
 801b738:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b73c:	fb07 a70c 	mla	r7, r7, ip, sl
 801b740:	f10e 0401 	add.w	r4, lr, #1
 801b744:	f105 0a01 	add.w	sl, r5, #1
 801b748:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b74c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b750:	b2bf      	uxth	r7, r7
 801b752:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b756:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b75a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b75e:	f107 0a01 	add.w	sl, r7, #1
 801b762:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b766:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b76a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b76e:	9c02      	ldr	r4, [sp, #8]
 801b770:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b774:	f820 e004 	strh.w	lr, [r0, r4]
 801b778:	e7aa      	b.n	801b6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b77a:	f04f 0900 	mov.w	r9, #0
 801b77e:	eba3 0409 	sub.w	r4, r3, r9
 801b782:	2c00      	cmp	r4, #0
 801b784:	f77f af4a 	ble.w	801b61c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b788:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b78c:	1414      	asrs	r4, r2, #16
 801b78e:	140d      	asrs	r5, r1, #16
 801b790:	fb06 5504 	mla	r5, r6, r4, r5
 801b794:	9c01      	ldr	r4, [sp, #4]
 801b796:	5d64      	ldrb	r4, [r4, r5]
 801b798:	2cff      	cmp	r4, #255	; 0xff
 801b79a:	d10b      	bne.n	801b7b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b79c:	9c00      	ldr	r4, [sp, #0]
 801b79e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b7a2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b7a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b7a8:	4421      	add	r1, r4
 801b7aa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7ac:	f109 0901 	add.w	r9, r9, #1
 801b7b0:	4422      	add	r2, r4
 801b7b2:	e7e4      	b.n	801b77e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b7b4:	2c00      	cmp	r4, #0
 801b7b6:	d0f6      	beq.n	801b7a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b7b8:	9e00      	ldr	r6, [sp, #0]
 801b7ba:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b7be:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b7c2:	b2a7      	uxth	r7, r4
 801b7c4:	122e      	asrs	r6, r5, #8
 801b7c6:	43e4      	mvns	r4, r4
 801b7c8:	b2e4      	uxtb	r4, r4
 801b7ca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b7ce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b7d2:	fb16 f604 	smulbb	r6, r6, r4
 801b7d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b7da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b7de:	00ed      	lsls	r5, r5, #3
 801b7e0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b7e4:	b2ed      	uxtb	r5, r5
 801b7e6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b7ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b7ee:	fb15 f504 	smulbb	r5, r5, r4
 801b7f2:	fa5f fe8e 	uxtb.w	lr, lr
 801b7f6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b7fa:	fb0e 5507 	mla	r5, lr, r7, r5
 801b7fe:	fb1a fa04 	smulbb	sl, sl, r4
 801b802:	fa1f fc8c 	uxth.w	ip, ip
 801b806:	b2ad      	uxth	r5, r5
 801b808:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b80c:	fb06 a607 	mla	r6, r6, r7, sl
 801b810:	f10c 0401 	add.w	r4, ip, #1
 801b814:	f105 0a01 	add.w	sl, r5, #1
 801b818:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b81c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b820:	b2b6      	uxth	r6, r6
 801b822:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b826:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b82a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b82e:	f106 0a01 	add.w	sl, r6, #1
 801b832:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b836:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b83a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b83e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b842:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b846:	e7ae      	b.n	801b7a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b848:	b005      	add	sp, #20
 801b84a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b84e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b84e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b852:	b085      	sub	sp, #20
 801b854:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b856:	9203      	str	r2, [sp, #12]
 801b858:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b85c:	9201      	str	r2, [sp, #4]
 801b85e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b862:	9100      	str	r1, [sp, #0]
 801b864:	6841      	ldr	r1, [r0, #4]
 801b866:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b86a:	fb01 2404 	mla	r4, r1, r4, r2
 801b86e:	6802      	ldr	r2, [r0, #0]
 801b870:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b874:	f8de 2000 	ldr.w	r2, [lr]
 801b878:	9202      	str	r2, [sp, #8]
 801b87a:	9a01      	ldr	r2, [sp, #4]
 801b87c:	43d6      	mvns	r6, r2
 801b87e:	b2f6      	uxtb	r6, r6
 801b880:	9a00      	ldr	r2, [sp, #0]
 801b882:	2a00      	cmp	r2, #0
 801b884:	dc03      	bgt.n	801b88e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b886:	9a03      	ldr	r2, [sp, #12]
 801b888:	2a00      	cmp	r2, #0
 801b88a:	f340 8124 	ble.w	801bad6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b88e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b890:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b894:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b898:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b89c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b89e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b8a2:	2b00      	cmp	r3, #0
 801b8a4:	dd0e      	ble.n	801b8c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b8a6:	1408      	asrs	r0, r1, #16
 801b8a8:	d405      	bmi.n	801b8b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b8aa:	4560      	cmp	r0, ip
 801b8ac:	da03      	bge.n	801b8b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b8ae:	1410      	asrs	r0, r2, #16
 801b8b0:	d401      	bmi.n	801b8b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b8b2:	42b8      	cmp	r0, r7
 801b8b4:	db07      	blt.n	801b8c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b8b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b8b8:	4401      	add	r1, r0
 801b8ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b8bc:	3b01      	subs	r3, #1
 801b8be:	4402      	add	r2, r0
 801b8c0:	3402      	adds	r4, #2
 801b8c2:	e7ee      	b.n	801b8a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b8c4:	d06e      	beq.n	801b9a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b8c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b8c8:	1e58      	subs	r0, r3, #1
 801b8ca:	fb05 1500 	mla	r5, r5, r0, r1
 801b8ce:	142d      	asrs	r5, r5, #16
 801b8d0:	d45c      	bmi.n	801b98c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b8d2:	4565      	cmp	r5, ip
 801b8d4:	da5a      	bge.n	801b98c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b8d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b8d8:	fb05 2000 	mla	r0, r5, r0, r2
 801b8dc:	1400      	asrs	r0, r0, #16
 801b8de:	d455      	bmi.n	801b98c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b8e0:	42b8      	cmp	r0, r7
 801b8e2:	da53      	bge.n	801b98c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b8e4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b8e8:	4699      	mov	r9, r3
 801b8ea:	46a2      	mov	sl, r4
 801b8ec:	f1b9 0f00 	cmp.w	r9, #0
 801b8f0:	dd54      	ble.n	801b99c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b8f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b8f6:	140d      	asrs	r5, r1, #16
 801b8f8:	1410      	asrs	r0, r2, #16
 801b8fa:	fb07 5000 	mla	r0, r7, r0, r5
 801b8fe:	9d02      	ldr	r5, [sp, #8]
 801b900:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b904:	f8ba 5000 	ldrh.w	r5, [sl]
 801b908:	122f      	asrs	r7, r5, #8
 801b90a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b90e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b912:	fb17 f706 	smulbb	r7, r7, r6
 801b916:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b91a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b91e:	00ed      	lsls	r5, r5, #3
 801b920:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b924:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b928:	10c7      	asrs	r7, r0, #3
 801b92a:	b2ed      	uxtb	r5, r5
 801b92c:	00c0      	lsls	r0, r0, #3
 801b92e:	fb18 f806 	smulbb	r8, r8, r6
 801b932:	fb15 f506 	smulbb	r5, r5, r6
 801b936:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b93a:	b2c0      	uxtb	r0, r0
 801b93c:	fa1f fc8c 	uxth.w	ip, ip
 801b940:	fb07 870b 	mla	r7, r7, fp, r8
 801b944:	fb00 500b 	mla	r0, r0, fp, r5
 801b948:	b280      	uxth	r0, r0
 801b94a:	b2bf      	uxth	r7, r7
 801b94c:	f10c 0501 	add.w	r5, ip, #1
 801b950:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b954:	f107 0801 	add.w	r8, r7, #1
 801b958:	1c45      	adds	r5, r0, #1
 801b95a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b95e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b962:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b964:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b968:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b96c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b970:	ea45 0c0c 	orr.w	ip, r5, ip
 801b974:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b978:	4401      	add	r1, r0
 801b97a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b97c:	ea4c 0c08 	orr.w	ip, ip, r8
 801b980:	f82a cb02 	strh.w	ip, [sl], #2
 801b984:	4402      	add	r2, r0
 801b986:	f109 39ff 	add.w	r9, r9, #4294967295
 801b98a:	e7af      	b.n	801b8ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b98c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b990:	f04f 0800 	mov.w	r8, #0
 801b994:	eb03 0008 	add.w	r0, r3, r8
 801b998:	2800      	cmp	r0, #0
 801b99a:	dc41      	bgt.n	801ba20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b99c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b9a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b9a4:	9b00      	ldr	r3, [sp, #0]
 801b9a6:	2b00      	cmp	r3, #0
 801b9a8:	f340 8095 	ble.w	801bad6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b9ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b9b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b9b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b9ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9be:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b9c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b9c6:	eef0 6a62 	vmov.f32	s13, s5
 801b9ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b9ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b9d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b9d6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b9da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b9de:	eef0 6a43 	vmov.f32	s13, s6
 801b9e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b9e6:	ee12 2a90 	vmov	r2, s5
 801b9ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b9ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9f2:	ee13 2a10 	vmov	r2, s6
 801b9f6:	9311      	str	r3, [sp, #68]	; 0x44
 801b9f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b9fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9fe:	9312      	str	r3, [sp, #72]	; 0x48
 801ba00:	9b00      	ldr	r3, [sp, #0]
 801ba02:	9a03      	ldr	r2, [sp, #12]
 801ba04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba08:	3b01      	subs	r3, #1
 801ba0a:	9300      	str	r3, [sp, #0]
 801ba0c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801ba10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ba12:	eeb0 3a67 	vmov.f32	s6, s15
 801ba16:	bf08      	it	eq
 801ba18:	4613      	moveq	r3, r2
 801ba1a:	eef0 2a47 	vmov.f32	s5, s14
 801ba1e:	e72f      	b.n	801b880 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ba20:	140f      	asrs	r7, r1, #16
 801ba22:	d451      	bmi.n	801bac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ba24:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ba28:	42bd      	cmp	r5, r7
 801ba2a:	dd4d      	ble.n	801bac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ba2c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ba30:	d44a      	bmi.n	801bac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ba32:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ba36:	4560      	cmp	r0, ip
 801ba38:	dd46      	ble.n	801bac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ba3a:	b22d      	sxth	r5, r5
 801ba3c:	fb0c 7505 	mla	r5, ip, r5, r7
 801ba40:	9802      	ldr	r0, [sp, #8]
 801ba42:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801ba46:	f06f 0501 	mvn.w	r5, #1
 801ba4a:	fb05 fb08 	mul.w	fp, r5, r8
 801ba4e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ba52:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ba56:	122f      	asrs	r7, r5, #8
 801ba58:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ba5c:	fb17 f706 	smulbb	r7, r7, r6
 801ba60:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ba64:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ba68:	00ed      	lsls	r5, r5, #3
 801ba6a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ba6e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ba72:	10c7      	asrs	r7, r0, #3
 801ba74:	b2ed      	uxtb	r5, r5
 801ba76:	00c0      	lsls	r0, r0, #3
 801ba78:	fb19 f906 	smulbb	r9, r9, r6
 801ba7c:	fb15 f506 	smulbb	r5, r5, r6
 801ba80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ba84:	b2c0      	uxtb	r0, r0
 801ba86:	fa1f fc8c 	uxth.w	ip, ip
 801ba8a:	fb07 970a 	mla	r7, r7, sl, r9
 801ba8e:	fb00 500a 	mla	r0, r0, sl, r5
 801ba92:	b2bf      	uxth	r7, r7
 801ba94:	b280      	uxth	r0, r0
 801ba96:	f10c 0501 	add.w	r5, ip, #1
 801ba9a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ba9e:	f107 0901 	add.w	r9, r7, #1
 801baa2:	1c45      	adds	r5, r0, #1
 801baa4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801baa8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801baac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bab0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bab4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bab8:	ea45 0c0c 	orr.w	ip, r5, ip
 801babc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bac0:	ea4c 0c09 	orr.w	ip, ip, r9
 801bac4:	f824 c00b 	strh.w	ip, [r4, fp]
 801bac8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801baca:	4401      	add	r1, r0
 801bacc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bace:	f108 38ff 	add.w	r8, r8, #4294967295
 801bad2:	4402      	add	r2, r0
 801bad4:	e75e      	b.n	801b994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801bad6:	b005      	add	sp, #20
 801bad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801badc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801badc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bae0:	b085      	sub	sp, #20
 801bae2:	4693      	mov	fp, r2
 801bae4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bae6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bae8:	6870      	ldr	r0, [r6, #4]
 801baea:	9101      	str	r1, [sp, #4]
 801baec:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801baf0:	fb00 2404 	mla	r4, r0, r4, r2
 801baf4:	6832      	ldr	r2, [r6, #0]
 801baf6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801bafa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bafe:	682a      	ldr	r2, [r5, #0]
 801bb00:	9202      	str	r2, [sp, #8]
 801bb02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb06:	9a01      	ldr	r2, [sp, #4]
 801bb08:	2a00      	cmp	r2, #0
 801bb0a:	dc03      	bgt.n	801bb14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bb0c:	f1bb 0f00 	cmp.w	fp, #0
 801bb10:	f340 809a 	ble.w	801bc48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801bb14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bb16:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801bb1a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801bb1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bb22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bb24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bb28:	2b00      	cmp	r3, #0
 801bb2a:	dd0c      	ble.n	801bb46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801bb2c:	1406      	asrs	r6, r0, #16
 801bb2e:	d405      	bmi.n	801bb3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bb30:	454e      	cmp	r6, r9
 801bb32:	da03      	bge.n	801bb3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bb34:	1416      	asrs	r6, r2, #16
 801bb36:	d401      	bmi.n	801bb3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bb38:	4546      	cmp	r6, r8
 801bb3a:	db05      	blt.n	801bb48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bb3c:	4470      	add	r0, lr
 801bb3e:	4462      	add	r2, ip
 801bb40:	3b01      	subs	r3, #1
 801bb42:	3402      	adds	r4, #2
 801bb44:	e7f0      	b.n	801bb28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bb46:	d00f      	beq.n	801bb68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bb48:	1e5e      	subs	r6, r3, #1
 801bb4a:	fb0e 0706 	mla	r7, lr, r6, r0
 801bb4e:	143f      	asrs	r7, r7, #16
 801bb50:	d541      	bpl.n	801bbd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801bb52:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801bb56:	4698      	mov	r8, r3
 801bb58:	9603      	str	r6, [sp, #12]
 801bb5a:	f1b8 0f00 	cmp.w	r8, #0
 801bb5e:	dc56      	bgt.n	801bc0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801bb60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bb64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb68:	9b01      	ldr	r3, [sp, #4]
 801bb6a:	2b00      	cmp	r3, #0
 801bb6c:	dd6c      	ble.n	801bc48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801bb6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bb7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb84:	eeb0 6a62 	vmov.f32	s12, s5
 801bb88:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb90:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb94:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bb98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb9c:	eeb0 6a43 	vmov.f32	s12, s6
 801bba0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bba4:	ee12 2a90 	vmov	r2, s5
 801bba8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bbac:	fb92 fef3 	sdiv	lr, r2, r3
 801bbb0:	ee13 2a10 	vmov	r2, s6
 801bbb4:	fb92 fcf3 	sdiv	ip, r2, r3
 801bbb8:	9b01      	ldr	r3, [sp, #4]
 801bbba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbbe:	3b01      	subs	r3, #1
 801bbc0:	9301      	str	r3, [sp, #4]
 801bbc2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bbc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbc8:	eeb0 3a67 	vmov.f32	s6, s15
 801bbcc:	bf08      	it	eq
 801bbce:	465b      	moveq	r3, fp
 801bbd0:	eef0 2a47 	vmov.f32	s5, s14
 801bbd4:	e797      	b.n	801bb06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bbd6:	454f      	cmp	r7, r9
 801bbd8:	dabb      	bge.n	801bb52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bbda:	fb0c 2606 	mla	r6, ip, r6, r2
 801bbde:	1436      	asrs	r6, r6, #16
 801bbe0:	d4b7      	bmi.n	801bb52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bbe2:	4546      	cmp	r6, r8
 801bbe4:	dab5      	bge.n	801bb52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bbe6:	461e      	mov	r6, r3
 801bbe8:	46a0      	mov	r8, r4
 801bbea:	2e00      	cmp	r6, #0
 801bbec:	ddb8      	ble.n	801bb60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bbee:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801bbf2:	9902      	ldr	r1, [sp, #8]
 801bbf4:	1417      	asrs	r7, r2, #16
 801bbf6:	ea4f 4920 	mov.w	r9, r0, asr #16
 801bbfa:	fb0a 9707 	mla	r7, sl, r7, r9
 801bbfe:	4470      	add	r0, lr
 801bc00:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801bc04:	f828 7b02 	strh.w	r7, [r8], #2
 801bc08:	4462      	add	r2, ip
 801bc0a:	3e01      	subs	r6, #1
 801bc0c:	e7ed      	b.n	801bbea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801bc0e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bc12:	d414      	bmi.n	801bc3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bc14:	68ae      	ldr	r6, [r5, #8]
 801bc16:	454e      	cmp	r6, r9
 801bc18:	dd11      	ble.n	801bc3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bc1a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801bc1e:	d40e      	bmi.n	801bc3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bc20:	68ef      	ldr	r7, [r5, #12]
 801bc22:	4557      	cmp	r7, sl
 801bc24:	dd0b      	ble.n	801bc3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bc26:	b236      	sxth	r6, r6
 801bc28:	fb0a 9606 	mla	r6, sl, r6, r9
 801bc2c:	9f02      	ldr	r7, [sp, #8]
 801bc2e:	f06f 0101 	mvn.w	r1, #1
 801bc32:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801bc36:	fb01 f608 	mul.w	r6, r1, r8
 801bc3a:	9903      	ldr	r1, [sp, #12]
 801bc3c:	538f      	strh	r7, [r1, r6]
 801bc3e:	4470      	add	r0, lr
 801bc40:	4462      	add	r2, ip
 801bc42:	f108 38ff 	add.w	r8, r8, #4294967295
 801bc46:	e788      	b.n	801bb5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bc48:	b005      	add	sp, #20
 801bc4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bc4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc52:	b087      	sub	sp, #28
 801bc54:	468b      	mov	fp, r1
 801bc56:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bc58:	9203      	str	r2, [sp, #12]
 801bc5a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bc5e:	9204      	str	r2, [sp, #16]
 801bc60:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801bc64:	6841      	ldr	r1, [r0, #4]
 801bc66:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801bc6a:	fb01 2505 	mla	r5, r1, r5, r2
 801bc6e:	6802      	ldr	r2, [r0, #0]
 801bc70:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801bc74:	f8d9 2000 	ldr.w	r2, [r9]
 801bc78:	9201      	str	r2, [sp, #4]
 801bc7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bc7e:	f1bb 0f00 	cmp.w	fp, #0
 801bc82:	dc03      	bgt.n	801bc8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bc84:	9a03      	ldr	r2, [sp, #12]
 801bc86:	2a00      	cmp	r2, #0
 801bc88:	f340 8159 	ble.w	801bf3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bc8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bc8e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bc92:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bc96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bc9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bc9c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bca0:	2b00      	cmp	r3, #0
 801bca2:	dd0e      	ble.n	801bcc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bca4:	1402      	asrs	r2, r0, #16
 801bca6:	d405      	bmi.n	801bcb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bca8:	42ba      	cmp	r2, r7
 801bcaa:	da03      	bge.n	801bcb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bcac:	140a      	asrs	r2, r1, #16
 801bcae:	d401      	bmi.n	801bcb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bcb0:	42b2      	cmp	r2, r6
 801bcb2:	db07      	blt.n	801bcc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bcb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcb6:	4410      	add	r0, r2
 801bcb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcba:	3b01      	subs	r3, #1
 801bcbc:	4411      	add	r1, r2
 801bcbe:	3502      	adds	r5, #2
 801bcc0:	e7ee      	b.n	801bca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bcc2:	d017      	beq.n	801bcf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bcc4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bcc6:	1e5a      	subs	r2, r3, #1
 801bcc8:	fb04 0402 	mla	r4, r4, r2, r0
 801bccc:	1424      	asrs	r4, r4, #16
 801bcce:	d409      	bmi.n	801bce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bcd0:	42bc      	cmp	r4, r7
 801bcd2:	da07      	bge.n	801bce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bcd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bcd6:	fb04 1202 	mla	r2, r4, r2, r1
 801bcda:	1412      	asrs	r2, r2, #16
 801bcdc:	d402      	bmi.n	801bce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bcde:	42b2      	cmp	r2, r6
 801bce0:	f2c0 80bf 	blt.w	801be62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801bce4:	2700      	movs	r7, #0
 801bce6:	19da      	adds	r2, r3, r7
 801bce8:	2a00      	cmp	r2, #0
 801bcea:	dc3e      	bgt.n	801bd6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bcec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bcf0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801bcf4:	f1bb 0f00 	cmp.w	fp, #0
 801bcf8:	f340 8121 	ble.w	801bf3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bcfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd0a:	f1bb 0b01 	subs.w	fp, fp, #1
 801bd0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd16:	eeb0 6a62 	vmov.f32	s12, s5
 801bd1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd22:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd26:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bd2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd2e:	eeb0 6a43 	vmov.f32	s12, s6
 801bd32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd36:	ee12 2a90 	vmov	r2, s5
 801bd3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd42:	ee13 2a10 	vmov	r2, s6
 801bd46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd4a:	9313      	str	r3, [sp, #76]	; 0x4c
 801bd4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd52:	9a03      	ldr	r2, [sp, #12]
 801bd54:	9314      	str	r3, [sp, #80]	; 0x50
 801bd56:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bd5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd5c:	eeb0 3a67 	vmov.f32	s6, s15
 801bd60:	bf08      	it	eq
 801bd62:	4613      	moveq	r3, r2
 801bd64:	eef0 2a47 	vmov.f32	s5, s14
 801bd68:	e789      	b.n	801bc7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bd6a:	1406      	asrs	r6, r0, #16
 801bd6c:	d42d      	bmi.n	801bdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bd6e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801bd72:	42b4      	cmp	r4, r6
 801bd74:	dd29      	ble.n	801bdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bd76:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801bd7a:	d426      	bmi.n	801bdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bd7c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bd80:	4562      	cmp	r2, ip
 801bd82:	dd22      	ble.n	801bdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bd84:	b224      	sxth	r4, r4
 801bd86:	9a01      	ldr	r2, [sp, #4]
 801bd88:	fb0c 6404 	mla	r4, ip, r4, r6
 801bd8c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801bd90:	0e22      	lsrs	r2, r4, #24
 801bd92:	d01a      	beq.n	801bdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bd94:	9e04      	ldr	r6, [sp, #16]
 801bd96:	4372      	muls	r2, r6
 801bd98:	1c56      	adds	r6, r2, #1
 801bd9a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bd9e:	1212      	asrs	r2, r2, #8
 801bda0:	0a26      	lsrs	r6, r4, #8
 801bda2:	2aff      	cmp	r2, #255	; 0xff
 801bda4:	9605      	str	r6, [sp, #20]
 801bda6:	d116      	bne.n	801bdd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801bda8:	f06f 0201 	mvn.w	r2, #1
 801bdac:	fb02 fc07 	mul.w	ip, r2, r7
 801bdb0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bdb4:	0962      	lsrs	r2, r4, #5
 801bdb6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdba:	f026 0607 	bic.w	r6, r6, #7
 801bdbe:	4316      	orrs	r6, r2
 801bdc0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bdc4:	4326      	orrs	r6, r4
 801bdc6:	f825 600c 	strh.w	r6, [r5, ip]
 801bdca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bdcc:	4410      	add	r0, r2
 801bdce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bdd0:	3f01      	subs	r7, #1
 801bdd2:	4411      	add	r1, r2
 801bdd4:	e787      	b.n	801bce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bdd6:	f06f 0601 	mvn.w	r6, #1
 801bdda:	437e      	muls	r6, r7
 801bddc:	fa1f fa82 	uxth.w	sl, r2
 801bde0:	f835 8006 	ldrh.w	r8, [r5, r6]
 801bde4:	9602      	str	r6, [sp, #8]
 801bde6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bdea:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801bdee:	43d2      	mvns	r2, r2
 801bdf0:	b2d2      	uxtb	r2, r2
 801bdf2:	fb1c fc0a 	smulbb	ip, ip, sl
 801bdf6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bdfa:	fb0e ce02 	mla	lr, lr, r2, ip
 801bdfe:	b2e4      	uxtb	r4, r4
 801be00:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801be04:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801be08:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801be0c:	fa5f f888 	uxtb.w	r8, r8
 801be10:	fb14 f40a 	smulbb	r4, r4, sl
 801be14:	fb08 4402 	mla	r4, r8, r2, r4
 801be18:	fa1f fe8e 	uxth.w	lr, lr
 801be1c:	fb16 f60a 	smulbb	r6, r6, sl
 801be20:	b2a4      	uxth	r4, r4
 801be22:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801be26:	fb0c 6c02 	mla	ip, ip, r2, r6
 801be2a:	f10e 0201 	add.w	r2, lr, #1
 801be2e:	1c66      	adds	r6, r4, #1
 801be30:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801be34:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801be38:	fa1f fc8c 	uxth.w	ip, ip
 801be3c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801be40:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801be44:	ea46 0e0e 	orr.w	lr, r6, lr
 801be48:	f10c 0601 	add.w	r6, ip, #1
 801be4c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801be50:	0976      	lsrs	r6, r6, #5
 801be52:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801be56:	9a02      	ldr	r2, [sp, #8]
 801be58:	ea4e 0e06 	orr.w	lr, lr, r6
 801be5c:	f825 e002 	strh.w	lr, [r5, r2]
 801be60:	e7b3      	b.n	801bdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be62:	f04f 0800 	mov.w	r8, #0
 801be66:	eba3 0208 	sub.w	r2, r3, r8
 801be6a:	2a00      	cmp	r2, #0
 801be6c:	f77f af3e 	ble.w	801bcec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801be70:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801be74:	1404      	asrs	r4, r0, #16
 801be76:	140a      	asrs	r2, r1, #16
 801be78:	fb06 4202 	mla	r2, r6, r2, r4
 801be7c:	9c01      	ldr	r4, [sp, #4]
 801be7e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801be82:	0e22      	lsrs	r2, r4, #24
 801be84:	d016      	beq.n	801beb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801be86:	9e04      	ldr	r6, [sp, #16]
 801be88:	4372      	muls	r2, r6
 801be8a:	1c56      	adds	r6, r2, #1
 801be8c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801be90:	1212      	asrs	r2, r2, #8
 801be92:	2aff      	cmp	r2, #255	; 0xff
 801be94:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801be98:	d113      	bne.n	801bec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801be9a:	0962      	lsrs	r2, r4, #5
 801be9c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bea0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bea4:	f026 0607 	bic.w	r6, r6, #7
 801bea8:	4316      	orrs	r6, r2
 801beaa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801beae:	4326      	orrs	r6, r4
 801beb0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801beb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801beb6:	4410      	add	r0, r2
 801beb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801beba:	f108 0801 	add.w	r8, r8, #1
 801bebe:	4411      	add	r1, r2
 801bec0:	e7d1      	b.n	801be66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801bec2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801bec6:	fa1f fa82 	uxth.w	sl, r2
 801beca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bece:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801bed2:	43d2      	mvns	r2, r2
 801bed4:	b2d2      	uxtb	r2, r2
 801bed6:	fb17 f70a 	smulbb	r7, r7, sl
 801beda:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bede:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bee2:	b2e4      	uxtb	r4, r4
 801bee4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bee8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801beec:	fa5f fe8e 	uxtb.w	lr, lr
 801bef0:	fb14 f40a 	smulbb	r4, r4, sl
 801bef4:	fb0e 4402 	mla	r4, lr, r2, r4
 801bef8:	b2f6      	uxtb	r6, r6
 801befa:	fa1f fc8c 	uxth.w	ip, ip
 801befe:	fb16 f60a 	smulbb	r6, r6, sl
 801bf02:	b2a4      	uxth	r4, r4
 801bf04:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bf08:	fb07 6702 	mla	r7, r7, r2, r6
 801bf0c:	f10c 0201 	add.w	r2, ip, #1
 801bf10:	1c66      	adds	r6, r4, #1
 801bf12:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bf16:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bf1a:	b2bf      	uxth	r7, r7
 801bf1c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bf20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bf24:	ea46 0c0c 	orr.w	ip, r6, ip
 801bf28:	1c7e      	adds	r6, r7, #1
 801bf2a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801bf2e:	0976      	lsrs	r6, r6, #5
 801bf30:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bf34:	ea4c 0c06 	orr.w	ip, ip, r6
 801bf38:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801bf3c:	e7ba      	b.n	801beb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801bf3e:	b007      	add	sp, #28
 801bf40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bf44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf48:	b085      	sub	sp, #20
 801bf4a:	468b      	mov	fp, r1
 801bf4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bf4e:	9203      	str	r2, [sp, #12]
 801bf50:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801bf54:	6841      	ldr	r1, [r0, #4]
 801bf56:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801bf5a:	fb01 2404 	mla	r4, r1, r4, r2
 801bf5e:	6802      	ldr	r2, [r0, #0]
 801bf60:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bf64:	f8d8 2000 	ldr.w	r2, [r8]
 801bf68:	9201      	str	r2, [sp, #4]
 801bf6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bf6e:	f1bb 0f00 	cmp.w	fp, #0
 801bf72:	dc03      	bgt.n	801bf7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bf74:	9a03      	ldr	r2, [sp, #12]
 801bf76:	2a00      	cmp	r2, #0
 801bf78:	f340 814f 	ble.w	801c21a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bf7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bf7e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bf82:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bf86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bf8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bf8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bf90:	2b00      	cmp	r3, #0
 801bf92:	dd0e      	ble.n	801bfb2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bf94:	1408      	asrs	r0, r1, #16
 801bf96:	d405      	bmi.n	801bfa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bf98:	42b8      	cmp	r0, r7
 801bf9a:	da03      	bge.n	801bfa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bf9c:	1410      	asrs	r0, r2, #16
 801bf9e:	d401      	bmi.n	801bfa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bfa0:	42b0      	cmp	r0, r6
 801bfa2:	db07      	blt.n	801bfb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bfa4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bfa6:	4401      	add	r1, r0
 801bfa8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bfaa:	3b01      	subs	r3, #1
 801bfac:	4402      	add	r2, r0
 801bfae:	3402      	adds	r4, #2
 801bfb0:	e7ee      	b.n	801bf90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bfb2:	d017      	beq.n	801bfe4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bfb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bfb6:	1e58      	subs	r0, r3, #1
 801bfb8:	fb05 1500 	mla	r5, r5, r0, r1
 801bfbc:	142d      	asrs	r5, r5, #16
 801bfbe:	d409      	bmi.n	801bfd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfc0:	42bd      	cmp	r5, r7
 801bfc2:	da07      	bge.n	801bfd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfc4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bfc6:	fb05 2000 	mla	r0, r5, r0, r2
 801bfca:	1400      	asrs	r0, r0, #16
 801bfcc:	d402      	bmi.n	801bfd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfce:	42b0      	cmp	r0, r6
 801bfd0:	f2c0 80ba 	blt.w	801c148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bfd4:	2600      	movs	r6, #0
 801bfd6:	1998      	adds	r0, r3, r6
 801bfd8:	2800      	cmp	r0, #0
 801bfda:	dc3e      	bgt.n	801c05a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bfdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bfe0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bfe4:	f1bb 0f00 	cmp.w	fp, #0
 801bfe8:	f340 8117 	ble.w	801c21a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bfec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bff0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bff4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bff8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bffa:	f1bb 0b01 	subs.w	fp, fp, #1
 801bffe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c002:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c006:	eeb0 6a62 	vmov.f32	s12, s5
 801c00a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c00e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c012:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c016:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c01a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c01e:	eeb0 6a43 	vmov.f32	s12, s6
 801c022:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c026:	ee12 2a90 	vmov	r2, s5
 801c02a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c02e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c032:	ee13 2a10 	vmov	r2, s6
 801c036:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c03a:	9311      	str	r3, [sp, #68]	; 0x44
 801c03c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c03e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c042:	9a03      	ldr	r2, [sp, #12]
 801c044:	9312      	str	r3, [sp, #72]	; 0x48
 801c046:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c04a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c04c:	eeb0 3a67 	vmov.f32	s6, s15
 801c050:	bf08      	it	eq
 801c052:	4613      	moveq	r3, r2
 801c054:	eef0 2a47 	vmov.f32	s5, s14
 801c058:	e789      	b.n	801bf6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c05a:	140f      	asrs	r7, r1, #16
 801c05c:	d424      	bmi.n	801c0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c05e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c062:	42bd      	cmp	r5, r7
 801c064:	dd20      	ble.n	801c0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c066:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c06a:	d41d      	bmi.n	801c0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c06c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c070:	4560      	cmp	r0, ip
 801c072:	dd19      	ble.n	801c0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c074:	b22d      	sxth	r5, r5
 801c076:	fb0c 7505 	mla	r5, ip, r5, r7
 801c07a:	9801      	ldr	r0, [sp, #4]
 801c07c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c080:	0e07      	lsrs	r7, r0, #24
 801c082:	2fff      	cmp	r7, #255	; 0xff
 801c084:	d116      	bne.n	801c0b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c086:	f06f 0501 	mvn.w	r5, #1
 801c08a:	fb05 f706 	mul.w	r7, r5, r6
 801c08e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c092:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c096:	0945      	lsrs	r5, r0, #5
 801c098:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c09c:	ea4c 0505 	orr.w	r5, ip, r5
 801c0a0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c0a4:	4305      	orrs	r5, r0
 801c0a6:	53e5      	strh	r5, [r4, r7]
 801c0a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c0aa:	4401      	add	r1, r0
 801c0ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c0ae:	3e01      	subs	r6, #1
 801c0b0:	4402      	add	r2, r0
 801c0b2:	e790      	b.n	801bfd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c0b4:	b2fd      	uxtb	r5, r7
 801c0b6:	2f00      	cmp	r7, #0
 801c0b8:	d0f6      	beq.n	801c0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c0ba:	f06f 0701 	mvn.w	r7, #1
 801c0be:	4377      	muls	r7, r6
 801c0c0:	fa1f f985 	uxth.w	r9, r5
 801c0c4:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c0c8:	9702      	str	r7, [sp, #8]
 801c0ca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c0ce:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c0d2:	43ed      	mvns	r5, r5
 801c0d4:	b2ed      	uxtb	r5, r5
 801c0d6:	fb17 f709 	smulbb	r7, r7, r9
 801c0da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c0de:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c0e2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c0e6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c0ea:	b2c0      	uxtb	r0, r0
 801c0ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c0f0:	fa5f fe8e 	uxtb.w	lr, lr
 801c0f4:	fb10 f009 	smulbb	r0, r0, r9
 801c0f8:	fb0e 0005 	mla	r0, lr, r5, r0
 801c0fc:	b280      	uxth	r0, r0
 801c0fe:	fa1f fc8c 	uxth.w	ip, ip
 801c102:	fb1a fa09 	smulbb	sl, sl, r9
 801c106:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c10a:	fb07 a705 	mla	r7, r7, r5, sl
 801c10e:	f100 0a01 	add.w	sl, r0, #1
 801c112:	f10c 0501 	add.w	r5, ip, #1
 801c116:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c11a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c11e:	b2bf      	uxth	r7, r7
 801c120:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c124:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c128:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c12c:	f107 0a01 	add.w	sl, r7, #1
 801c130:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c134:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c138:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c13c:	9802      	ldr	r0, [sp, #8]
 801c13e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c142:	f824 c000 	strh.w	ip, [r4, r0]
 801c146:	e7af      	b.n	801c0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c148:	f04f 0e00 	mov.w	lr, #0
 801c14c:	eba3 000e 	sub.w	r0, r3, lr
 801c150:	2800      	cmp	r0, #0
 801c152:	f77f af43 	ble.w	801bfdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c156:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c15a:	140d      	asrs	r5, r1, #16
 801c15c:	1410      	asrs	r0, r2, #16
 801c15e:	fb06 5000 	mla	r0, r6, r0, r5
 801c162:	9d01      	ldr	r5, [sp, #4]
 801c164:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c168:	0e2e      	lsrs	r6, r5, #24
 801c16a:	2eff      	cmp	r6, #255	; 0xff
 801c16c:	d112      	bne.n	801c194 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c16e:	482c      	ldr	r0, [pc, #176]	; (801c220 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c170:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c174:	0968      	lsrs	r0, r5, #5
 801c176:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c17a:	4330      	orrs	r0, r6
 801c17c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c180:	4328      	orrs	r0, r5
 801c182:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c186:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c188:	4401      	add	r1, r0
 801c18a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c18c:	f10e 0e01 	add.w	lr, lr, #1
 801c190:	4402      	add	r2, r0
 801c192:	e7db      	b.n	801c14c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c194:	b2f0      	uxtb	r0, r6
 801c196:	2e00      	cmp	r6, #0
 801c198:	d0f5      	beq.n	801c186 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c19a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c19e:	fa1f f980 	uxth.w	r9, r0
 801c1a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c1a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c1aa:	43c0      	mvns	r0, r0
 801c1ac:	b2c0      	uxtb	r0, r0
 801c1ae:	fb16 f609 	smulbb	r6, r6, r9
 801c1b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c1b6:	fb07 6700 	mla	r7, r7, r0, r6
 801c1ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c1be:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c1c2:	b2ed      	uxtb	r5, r5
 801c1c4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c1c8:	fa5f fc8c 	uxtb.w	ip, ip
 801c1cc:	fb15 f509 	smulbb	r5, r5, r9
 801c1d0:	fb0c 5500 	mla	r5, ip, r0, r5
 801c1d4:	b2bf      	uxth	r7, r7
 801c1d6:	fb1a fa09 	smulbb	sl, sl, r9
 801c1da:	b2ad      	uxth	r5, r5
 801c1dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c1e0:	fb06 a600 	mla	r6, r6, r0, sl
 801c1e4:	1c78      	adds	r0, r7, #1
 801c1e6:	f105 0a01 	add.w	sl, r5, #1
 801c1ea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c1ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c1f2:	b2b6      	uxth	r6, r6
 801c1f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c1f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c1fc:	ea4a 0707 	orr.w	r7, sl, r7
 801c200:	f106 0a01 	add.w	sl, r6, #1
 801c204:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c208:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c20c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c210:	ea47 070a 	orr.w	r7, r7, sl
 801c214:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c218:	e7b5      	b.n	801c186 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c21a:	b005      	add	sp, #20
 801c21c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c220:	fffff800 	.word	0xfffff800

0801c224 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c228:	b087      	sub	sp, #28
 801c22a:	468b      	mov	fp, r1
 801c22c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c22e:	9203      	str	r2, [sp, #12]
 801c230:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c234:	9204      	str	r2, [sp, #16]
 801c236:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c23a:	6841      	ldr	r1, [r0, #4]
 801c23c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c240:	fb01 2404 	mla	r4, r1, r4, r2
 801c244:	6802      	ldr	r2, [r0, #0]
 801c246:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c24a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c24e:	3201      	adds	r2, #1
 801c250:	f022 0201 	bic.w	r2, r2, #1
 801c254:	9200      	str	r2, [sp, #0]
 801c256:	f8d9 2000 	ldr.w	r2, [r9]
 801c25a:	9201      	str	r2, [sp, #4]
 801c25c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c260:	f1bb 0f00 	cmp.w	fp, #0
 801c264:	dc03      	bgt.n	801c26e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c266:	9a03      	ldr	r2, [sp, #12]
 801c268:	2a00      	cmp	r2, #0
 801c26a:	f340 8169 	ble.w	801c540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c26e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c270:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c274:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c278:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c27c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c27e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c282:	2b00      	cmp	r3, #0
 801c284:	dd0e      	ble.n	801c2a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c286:	1402      	asrs	r2, r0, #16
 801c288:	d405      	bmi.n	801c296 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c28a:	42ba      	cmp	r2, r7
 801c28c:	da03      	bge.n	801c296 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c28e:	140a      	asrs	r2, r1, #16
 801c290:	d401      	bmi.n	801c296 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c292:	42b2      	cmp	r2, r6
 801c294:	db07      	blt.n	801c2a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c296:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c298:	4410      	add	r0, r2
 801c29a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c29c:	3b01      	subs	r3, #1
 801c29e:	4411      	add	r1, r2
 801c2a0:	3402      	adds	r4, #2
 801c2a2:	e7ee      	b.n	801c282 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c2a4:	d017      	beq.n	801c2d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c2a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c2a8:	1e5a      	subs	r2, r3, #1
 801c2aa:	fb05 0502 	mla	r5, r5, r2, r0
 801c2ae:	142d      	asrs	r5, r5, #16
 801c2b0:	d409      	bmi.n	801c2c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c2b2:	42bd      	cmp	r5, r7
 801c2b4:	da07      	bge.n	801c2c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c2b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c2b8:	fb05 1202 	mla	r2, r5, r2, r1
 801c2bc:	1412      	asrs	r2, r2, #16
 801c2be:	d402      	bmi.n	801c2c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c2c0:	42b2      	cmp	r2, r6
 801c2c2:	f2c0 80c7 	blt.w	801c454 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c2c6:	2700      	movs	r7, #0
 801c2c8:	19da      	adds	r2, r3, r7
 801c2ca:	2a00      	cmp	r2, #0
 801c2cc:	dc3e      	bgt.n	801c34c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c2ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c2d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c2d6:	f1bb 0f00 	cmp.w	fp, #0
 801c2da:	f340 8131 	ble.w	801c540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c2de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c2e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c2e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c2ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c2ec:	f1bb 0b01 	subs.w	fp, fp, #1
 801c2f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2f8:	eeb0 6a62 	vmov.f32	s12, s5
 801c2fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c300:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c304:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c308:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c30c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c310:	eeb0 6a43 	vmov.f32	s12, s6
 801c314:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c318:	ee12 2a90 	vmov	r2, s5
 801c31c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c320:	fb92 f3f3 	sdiv	r3, r2, r3
 801c324:	ee13 2a10 	vmov	r2, s6
 801c328:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c32c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c32e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c330:	fb92 f3f3 	sdiv	r3, r2, r3
 801c334:	9a03      	ldr	r2, [sp, #12]
 801c336:	9314      	str	r3, [sp, #80]	; 0x50
 801c338:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c33c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c33e:	eeb0 3a67 	vmov.f32	s6, s15
 801c342:	bf08      	it	eq
 801c344:	4613      	moveq	r3, r2
 801c346:	eef0 2a47 	vmov.f32	s5, s14
 801c34a:	e789      	b.n	801c260 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c34c:	1405      	asrs	r5, r0, #16
 801c34e:	d435      	bmi.n	801c3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c350:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c354:	42aa      	cmp	r2, r5
 801c356:	dd31      	ble.n	801c3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c358:	140e      	asrs	r6, r1, #16
 801c35a:	d42f      	bmi.n	801c3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c35c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c360:	42b2      	cmp	r2, r6
 801c362:	dd2b      	ble.n	801c3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c364:	9a00      	ldr	r2, [sp, #0]
 801c366:	fb06 5502 	mla	r5, r6, r2, r5
 801c36a:	086a      	lsrs	r2, r5, #1
 801c36c:	9e01      	ldr	r6, [sp, #4]
 801c36e:	5cb2      	ldrb	r2, [r6, r2]
 801c370:	07ee      	lsls	r6, r5, #31
 801c372:	bf54      	ite	pl
 801c374:	f002 020f 	andpl.w	r2, r2, #15
 801c378:	1112      	asrmi	r2, r2, #4
 801c37a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c37e:	b2d2      	uxtb	r2, r2
 801c380:	b1e2      	cbz	r2, 801c3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c382:	9d04      	ldr	r5, [sp, #16]
 801c384:	436a      	muls	r2, r5
 801c386:	1c55      	adds	r5, r2, #1
 801c388:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c38c:	4d6e      	ldr	r5, [pc, #440]	; (801c548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c38e:	682d      	ldr	r5, [r5, #0]
 801c390:	1212      	asrs	r2, r2, #8
 801c392:	0a2e      	lsrs	r6, r5, #8
 801c394:	2aff      	cmp	r2, #255	; 0xff
 801c396:	9605      	str	r6, [sp, #20]
 801c398:	d116      	bne.n	801c3c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c39a:	f06f 0201 	mvn.w	r2, #1
 801c39e:	fb02 fc07 	mul.w	ip, r2, r7
 801c3a2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c3a6:	096a      	lsrs	r2, r5, #5
 801c3a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c3ac:	f026 0607 	bic.w	r6, r6, #7
 801c3b0:	4316      	orrs	r6, r2
 801c3b2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c3b6:	432e      	orrs	r6, r5
 801c3b8:	f824 600c 	strh.w	r6, [r4, ip]
 801c3bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c3be:	4410      	add	r0, r2
 801c3c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c3c2:	3f01      	subs	r7, #1
 801c3c4:	4411      	add	r1, r2
 801c3c6:	e77f      	b.n	801c2c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c3c8:	f06f 0601 	mvn.w	r6, #1
 801c3cc:	437e      	muls	r6, r7
 801c3ce:	fa1f fa82 	uxth.w	sl, r2
 801c3d2:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c3d6:	9602      	str	r6, [sp, #8]
 801c3d8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c3dc:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c3e0:	43d2      	mvns	r2, r2
 801c3e2:	b2d2      	uxtb	r2, r2
 801c3e4:	fb1c fc0a 	smulbb	ip, ip, sl
 801c3e8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c3ec:	fb0e ce02 	mla	lr, lr, r2, ip
 801c3f0:	b2ed      	uxtb	r5, r5
 801c3f2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c3f6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c3fa:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c3fe:	fa5f f888 	uxtb.w	r8, r8
 801c402:	fb15 f50a 	smulbb	r5, r5, sl
 801c406:	fb08 5502 	mla	r5, r8, r2, r5
 801c40a:	fa1f fe8e 	uxth.w	lr, lr
 801c40e:	fb16 f60a 	smulbb	r6, r6, sl
 801c412:	b2ad      	uxth	r5, r5
 801c414:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c418:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c41c:	f10e 0201 	add.w	r2, lr, #1
 801c420:	1c6e      	adds	r6, r5, #1
 801c422:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c426:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c42a:	fa1f fc8c 	uxth.w	ip, ip
 801c42e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c432:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c436:	ea46 0e0e 	orr.w	lr, r6, lr
 801c43a:	f10c 0601 	add.w	r6, ip, #1
 801c43e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c442:	0976      	lsrs	r6, r6, #5
 801c444:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c448:	9a02      	ldr	r2, [sp, #8]
 801c44a:	ea4e 0e06 	orr.w	lr, lr, r6
 801c44e:	f824 e002 	strh.w	lr, [r4, r2]
 801c452:	e7b3      	b.n	801c3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c454:	f04f 0800 	mov.w	r8, #0
 801c458:	eba3 0208 	sub.w	r2, r3, r8
 801c45c:	2a00      	cmp	r2, #0
 801c45e:	f77f af36 	ble.w	801c2ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c462:	9e00      	ldr	r6, [sp, #0]
 801c464:	1402      	asrs	r2, r0, #16
 801c466:	140d      	asrs	r5, r1, #16
 801c468:	fb06 2505 	mla	r5, r6, r5, r2
 801c46c:	086a      	lsrs	r2, r5, #1
 801c46e:	9e01      	ldr	r6, [sp, #4]
 801c470:	5cb2      	ldrb	r2, [r6, r2]
 801c472:	07ed      	lsls	r5, r5, #31
 801c474:	bf54      	ite	pl
 801c476:	f002 020f 	andpl.w	r2, r2, #15
 801c47a:	1112      	asrmi	r2, r2, #4
 801c47c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c480:	b2d2      	uxtb	r2, r2
 801c482:	b1c2      	cbz	r2, 801c4b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c484:	9d04      	ldr	r5, [sp, #16]
 801c486:	436a      	muls	r2, r5
 801c488:	1c55      	adds	r5, r2, #1
 801c48a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c48e:	4d2e      	ldr	r5, [pc, #184]	; (801c548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c490:	1212      	asrs	r2, r2, #8
 801c492:	682e      	ldr	r6, [r5, #0]
 801c494:	2aff      	cmp	r2, #255	; 0xff
 801c496:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801c49a:	d113      	bne.n	801c4c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c49c:	0972      	lsrs	r2, r6, #5
 801c49e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c4a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4a6:	f025 0507 	bic.w	r5, r5, #7
 801c4aa:	4315      	orrs	r5, r2
 801c4ac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c4b0:	4335      	orrs	r5, r6
 801c4b2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801c4b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c4b8:	4410      	add	r0, r2
 801c4ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4bc:	f108 0801 	add.w	r8, r8, #1
 801c4c0:	4411      	add	r1, r2
 801c4c2:	e7c9      	b.n	801c458 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c4c4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c4c8:	fa1f fa82 	uxth.w	sl, r2
 801c4cc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c4d0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801c4d4:	43d2      	mvns	r2, r2
 801c4d6:	b2d2      	uxtb	r2, r2
 801c4d8:	fb17 f70a 	smulbb	r7, r7, sl
 801c4dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c4e0:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c4e4:	b2f6      	uxtb	r6, r6
 801c4e6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c4ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c4ee:	fa5f fe8e 	uxtb.w	lr, lr
 801c4f2:	fb16 f60a 	smulbb	r6, r6, sl
 801c4f6:	fb0e 6602 	mla	r6, lr, r2, r6
 801c4fa:	b2ed      	uxtb	r5, r5
 801c4fc:	fa1f fc8c 	uxth.w	ip, ip
 801c500:	fb15 f50a 	smulbb	r5, r5, sl
 801c504:	b2b6      	uxth	r6, r6
 801c506:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c50a:	fb07 5702 	mla	r7, r7, r2, r5
 801c50e:	f10c 0201 	add.w	r2, ip, #1
 801c512:	1c75      	adds	r5, r6, #1
 801c514:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c518:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c51c:	b2bf      	uxth	r7, r7
 801c51e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c522:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c526:	ea45 0c0c 	orr.w	ip, r5, ip
 801c52a:	1c7d      	adds	r5, r7, #1
 801c52c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801c530:	096d      	lsrs	r5, r5, #5
 801c532:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c536:	ea4c 0c05 	orr.w	ip, ip, r5
 801c53a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801c53e:	e7ba      	b.n	801c4b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c540:	b007      	add	sp, #28
 801c542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c546:	bf00      	nop
 801c548:	200138c4 	.word	0x200138c4

0801c54c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c550:	b087      	sub	sp, #28
 801c552:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801c556:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c558:	9205      	str	r2, [sp, #20]
 801c55a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c55e:	9101      	str	r1, [sp, #4]
 801c560:	6841      	ldr	r1, [r0, #4]
 801c562:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801c566:	fb01 2404 	mla	r4, r1, r4, r2
 801c56a:	6802      	ldr	r2, [r0, #0]
 801c56c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c570:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c574:	3201      	adds	r2, #1
 801c576:	f022 0201 	bic.w	r2, r2, #1
 801c57a:	9202      	str	r2, [sp, #8]
 801c57c:	f8db 2000 	ldr.w	r2, [fp]
 801c580:	9203      	str	r2, [sp, #12]
 801c582:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c586:	9a01      	ldr	r2, [sp, #4]
 801c588:	2a00      	cmp	r2, #0
 801c58a:	dc03      	bgt.n	801c594 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c58c:	9a05      	ldr	r2, [sp, #20]
 801c58e:	2a00      	cmp	r2, #0
 801c590:	f340 8162 	ble.w	801c858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c594:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c596:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c59a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c59e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c5a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c5a4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c5a8:	2b00      	cmp	r3, #0
 801c5aa:	dd0e      	ble.n	801c5ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c5ac:	1402      	asrs	r2, r0, #16
 801c5ae:	d405      	bmi.n	801c5bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c5b0:	42ba      	cmp	r2, r7
 801c5b2:	da03      	bge.n	801c5bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c5b4:	140a      	asrs	r2, r1, #16
 801c5b6:	d401      	bmi.n	801c5bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c5b8:	42b2      	cmp	r2, r6
 801c5ba:	db07      	blt.n	801c5cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c5bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c5be:	4410      	add	r0, r2
 801c5c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5c2:	3b01      	subs	r3, #1
 801c5c4:	4411      	add	r1, r2
 801c5c6:	3402      	adds	r4, #2
 801c5c8:	e7ee      	b.n	801c5a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c5ca:	d017      	beq.n	801c5fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c5cc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c5ce:	1e5a      	subs	r2, r3, #1
 801c5d0:	fb05 0502 	mla	r5, r5, r2, r0
 801c5d4:	142d      	asrs	r5, r5, #16
 801c5d6:	d409      	bmi.n	801c5ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c5d8:	42bd      	cmp	r5, r7
 801c5da:	da07      	bge.n	801c5ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c5dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c5de:	fb05 1202 	mla	r2, r5, r2, r1
 801c5e2:	1412      	asrs	r2, r2, #16
 801c5e4:	d402      	bmi.n	801c5ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c5e6:	42b2      	cmp	r2, r6
 801c5e8:	f2c0 80c3 	blt.w	801c772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c5ec:	2500      	movs	r5, #0
 801c5ee:	195a      	adds	r2, r3, r5
 801c5f0:	2a00      	cmp	r2, #0
 801c5f2:	dc3f      	bgt.n	801c674 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c5f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c5f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c5fc:	9b01      	ldr	r3, [sp, #4]
 801c5fe:	2b00      	cmp	r3, #0
 801c600:	f340 812a 	ble.w	801c858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c604:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c608:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c60c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c610:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c612:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c61a:	eeb0 6a62 	vmov.f32	s12, s5
 801c61e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c622:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c626:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c62a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c62e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c632:	eeb0 6a43 	vmov.f32	s12, s6
 801c636:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c63a:	ee12 2a90 	vmov	r2, s5
 801c63e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c642:	fb92 f3f3 	sdiv	r3, r2, r3
 801c646:	ee13 2a10 	vmov	r2, s6
 801c64a:	9313      	str	r3, [sp, #76]	; 0x4c
 801c64c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c64e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c652:	9314      	str	r3, [sp, #80]	; 0x50
 801c654:	9b01      	ldr	r3, [sp, #4]
 801c656:	9a05      	ldr	r2, [sp, #20]
 801c658:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c65c:	3b01      	subs	r3, #1
 801c65e:	9301      	str	r3, [sp, #4]
 801c660:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c664:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c666:	eeb0 3a67 	vmov.f32	s6, s15
 801c66a:	bf08      	it	eq
 801c66c:	4613      	moveq	r3, r2
 801c66e:	eef0 2a47 	vmov.f32	s5, s14
 801c672:	e788      	b.n	801c586 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c674:	1406      	asrs	r6, r0, #16
 801c676:	d42c      	bmi.n	801c6d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c678:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c67c:	42b2      	cmp	r2, r6
 801c67e:	dd28      	ble.n	801c6d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c680:	140f      	asrs	r7, r1, #16
 801c682:	d426      	bmi.n	801c6d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c684:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c688:	42ba      	cmp	r2, r7
 801c68a:	dd22      	ble.n	801c6d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c68c:	9a02      	ldr	r2, [sp, #8]
 801c68e:	fb07 6602 	mla	r6, r7, r2, r6
 801c692:	0872      	lsrs	r2, r6, #1
 801c694:	9f03      	ldr	r7, [sp, #12]
 801c696:	5cba      	ldrb	r2, [r7, r2]
 801c698:	07f6      	lsls	r6, r6, #31
 801c69a:	bf54      	ite	pl
 801c69c:	f002 020f 	andpl.w	r2, r2, #15
 801c6a0:	1112      	asrmi	r2, r2, #4
 801c6a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c6a6:	b2d2      	uxtb	r2, r2
 801c6a8:	2aff      	cmp	r2, #255	; 0xff
 801c6aa:	d118      	bne.n	801c6de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c6ac:	f8d8 2000 	ldr.w	r2, [r8]
 801c6b0:	f06f 0601 	mvn.w	r6, #1
 801c6b4:	fb06 f705 	mul.w	r7, r6, r5
 801c6b8:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801c6bc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c6c0:	0956      	lsrs	r6, r2, #5
 801c6c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c6c6:	ea4c 0606 	orr.w	r6, ip, r6
 801c6ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c6ce:	4316      	orrs	r6, r2
 801c6d0:	53e6      	strh	r6, [r4, r7]
 801c6d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c6d4:	4410      	add	r0, r2
 801c6d6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c6d8:	3d01      	subs	r5, #1
 801c6da:	4411      	add	r1, r2
 801c6dc:	e787      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c6de:	2a00      	cmp	r2, #0
 801c6e0:	d0f7      	beq.n	801c6d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c6e2:	f06f 0601 	mvn.w	r6, #1
 801c6e6:	436e      	muls	r6, r5
 801c6e8:	f8d8 c000 	ldr.w	ip, [r8]
 801c6ec:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c6f0:	9604      	str	r6, [sp, #16]
 801c6f2:	fa1f f982 	uxth.w	r9, r2
 801c6f6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c6fa:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c6fe:	43d2      	mvns	r2, r2
 801c700:	b2d2      	uxtb	r2, r2
 801c702:	fb16 f609 	smulbb	r6, r6, r9
 801c706:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c70a:	fb07 6702 	mla	r7, r7, r2, r6
 801c70e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c712:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c716:	fa5f fc8c 	uxtb.w	ip, ip
 801c71a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c71e:	fa5f fe8e 	uxtb.w	lr, lr
 801c722:	fb1c fc09 	smulbb	ip, ip, r9
 801c726:	fb0e cc02 	mla	ip, lr, r2, ip
 801c72a:	b2bf      	uxth	r7, r7
 801c72c:	fb1a fa09 	smulbb	sl, sl, r9
 801c730:	fa1f fc8c 	uxth.w	ip, ip
 801c734:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c738:	fb06 a602 	mla	r6, r6, r2, sl
 801c73c:	1c7a      	adds	r2, r7, #1
 801c73e:	f10c 0a01 	add.w	sl, ip, #1
 801c742:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c746:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c74a:	b2b6      	uxth	r6, r6
 801c74c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c750:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c754:	ea4a 0707 	orr.w	r7, sl, r7
 801c758:	f106 0a01 	add.w	sl, r6, #1
 801c75c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c760:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c764:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c768:	9a04      	ldr	r2, [sp, #16]
 801c76a:	ea47 070a 	orr.w	r7, r7, sl
 801c76e:	52a7      	strh	r7, [r4, r2]
 801c770:	e7af      	b.n	801c6d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c772:	f04f 0e00 	mov.w	lr, #0
 801c776:	eba3 020e 	sub.w	r2, r3, lr
 801c77a:	2a00      	cmp	r2, #0
 801c77c:	f77f af3a 	ble.w	801c5f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c780:	9e02      	ldr	r6, [sp, #8]
 801c782:	1402      	asrs	r2, r0, #16
 801c784:	140d      	asrs	r5, r1, #16
 801c786:	fb06 2505 	mla	r5, r6, r5, r2
 801c78a:	086a      	lsrs	r2, r5, #1
 801c78c:	9e03      	ldr	r6, [sp, #12]
 801c78e:	5cb2      	ldrb	r2, [r6, r2]
 801c790:	07ed      	lsls	r5, r5, #31
 801c792:	bf54      	ite	pl
 801c794:	f002 020f 	andpl.w	r2, r2, #15
 801c798:	1112      	asrmi	r2, r2, #4
 801c79a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c79e:	b2d2      	uxtb	r2, r2
 801c7a0:	2aff      	cmp	r2, #255	; 0xff
 801c7a2:	d115      	bne.n	801c7d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c7a4:	f8d8 5000 	ldr.w	r5, [r8]
 801c7a8:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c7ac:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c7b0:	096a      	lsrs	r2, r5, #5
 801c7b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c7b6:	4332      	orrs	r2, r6
 801c7b8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c7bc:	432a      	orrs	r2, r5
 801c7be:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c7c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c7c4:	4410      	add	r0, r2
 801c7c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c7c8:	f10e 0e01 	add.w	lr, lr, #1
 801c7cc:	4411      	add	r1, r2
 801c7ce:	e7d2      	b.n	801c776 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c7d0:	2a00      	cmp	r2, #0
 801c7d2:	d0f6      	beq.n	801c7c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c7d4:	f8d8 7000 	ldr.w	r7, [r8]
 801c7d8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c7dc:	fa1f f982 	uxth.w	r9, r2
 801c7e0:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c7e4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c7e8:	43d2      	mvns	r2, r2
 801c7ea:	b2d2      	uxtb	r2, r2
 801c7ec:	fb15 f509 	smulbb	r5, r5, r9
 801c7f0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c7f4:	fb06 5602 	mla	r6, r6, r2, r5
 801c7f8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c7fc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c800:	b2ff      	uxtb	r7, r7
 801c802:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c806:	fa5f fc8c 	uxtb.w	ip, ip
 801c80a:	fb17 f709 	smulbb	r7, r7, r9
 801c80e:	fb0c 7702 	mla	r7, ip, r2, r7
 801c812:	b2b6      	uxth	r6, r6
 801c814:	fb1a fa09 	smulbb	sl, sl, r9
 801c818:	b2bf      	uxth	r7, r7
 801c81a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c81e:	fb05 a502 	mla	r5, r5, r2, sl
 801c822:	1c72      	adds	r2, r6, #1
 801c824:	f107 0a01 	add.w	sl, r7, #1
 801c828:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c82c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c830:	b2ad      	uxth	r5, r5
 801c832:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c836:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c83a:	ea4a 0606 	orr.w	r6, sl, r6
 801c83e:	f105 0a01 	add.w	sl, r5, #1
 801c842:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c846:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c84a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c84e:	ea46 060a 	orr.w	r6, r6, sl
 801c852:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c856:	e7b4      	b.n	801c7c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c858:	b007      	add	sp, #28
 801c85a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c85e:	bf00      	nop
 801c860:	200138c4 	.word	0x200138c4

0801c864 <_ZN8touchgfx8LCD16bppD1Ev>:
 801c864:	4770      	bx	lr

0801c866 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c866:	4770      	bx	lr

0801c868 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c868:	4770      	bx	lr

0801c86a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c86a:	4770      	bx	lr

0801c86c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c86c:	4770      	bx	lr

0801c86e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c86e:	4770      	bx	lr

0801c870 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c870:	4770      	bx	lr

0801c872 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c872:	4770      	bx	lr

0801c874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c874:	4770      	bx	lr

0801c876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c876:	4770      	bx	lr

0801c878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c878:	4770      	bx	lr

0801c87a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c87a:	4770      	bx	lr

0801c87c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c87c:	4770      	bx	lr

0801c87e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c87e:	4770      	bx	lr

0801c880 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c880:	4770      	bx	lr

0801c882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c882:	4770      	bx	lr

0801c884 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c884:	4770      	bx	lr

0801c886 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c886:	4770      	bx	lr

0801c888 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c888:	4770      	bx	lr

0801c88a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c88a:	4770      	bx	lr

0801c88c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c88c:	4770      	bx	lr

0801c88e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c88e:	4770      	bx	lr

0801c890 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c890:	4770      	bx	lr

0801c892 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c892:	4770      	bx	lr

0801c894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c894:	4770      	bx	lr

0801c896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c896:	4770      	bx	lr

0801c898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c898:	4770      	bx	lr

0801c89a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c89a:	4770      	bx	lr

0801c89c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c89c:	4770      	bx	lr

0801c89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c89e:	4770      	bx	lr

0801c8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c8a0:	4770      	bx	lr

0801c8a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c8a2:	4770      	bx	lr

0801c8a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c8a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c8a8:	b088      	sub	sp, #32
 801c8aa:	ac08      	add	r4, sp, #32
 801c8ac:	4606      	mov	r6, r0
 801c8ae:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c8b2:	4620      	mov	r0, r4
 801c8b4:	4688      	mov	r8, r1
 801c8b6:	4691      	mov	r9, r2
 801c8b8:	f7fd fc62 	bl	801a180 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c8bc:	6833      	ldr	r3, [r6, #0]
 801c8be:	4605      	mov	r5, r0
 801c8c0:	4620      	mov	r0, r4
 801c8c2:	699f      	ldr	r7, [r3, #24]
 801c8c4:	f7fd fb70 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c8c8:	4682      	mov	sl, r0
 801c8ca:	4620      	mov	r0, r4
 801c8cc:	f7fd fba0 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c8d0:	9500      	str	r5, [sp, #0]
 801c8d2:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c8d6:	464b      	mov	r3, r9
 801c8d8:	a806      	add	r0, sp, #24
 801c8da:	4642      	mov	r2, r8
 801c8dc:	4631      	mov	r1, r6
 801c8de:	47b8      	blx	r7
 801c8e0:	4628      	mov	r0, r5
 801c8e2:	b008      	add	sp, #32
 801c8e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c8e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c8e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c8ec:	2300      	movs	r3, #0
 801c8ee:	9300      	str	r3, [sp, #0]
 801c8f0:	4b3d      	ldr	r3, [pc, #244]	; (801c9e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c8f2:	781b      	ldrb	r3, [r3, #0]
 801c8f4:	2b00      	cmp	r3, #0
 801c8f6:	d137      	bne.n	801c968 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c8f8:	4a3c      	ldr	r2, [pc, #240]	; (801c9ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c8fa:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c8fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c902:	2b00      	cmp	r3, #0
 801c904:	d132      	bne.n	801c96c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c906:	4b3a      	ldr	r3, [pc, #232]	; (801c9f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c908:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c90c:	6808      	ldr	r0, [r1, #0]
 801c90e:	6849      	ldr	r1, [r1, #4]
 801c910:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c914:	ac02      	add	r4, sp, #8
 801c916:	ab02      	add	r3, sp, #8
 801c918:	c303      	stmia	r3!, {r0, r1}
 801c91a:	4669      	mov	r1, sp
 801c91c:	4620      	mov	r0, r4
 801c91e:	f7f9 fd83 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c922:	4668      	mov	r0, sp
 801c924:	f7f9 fd3c 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c928:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c92c:	f8bd 2000 	ldrh.w	r2, [sp]
 801c930:	4d30      	ldr	r5, [pc, #192]	; (801c9f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c932:	4413      	add	r3, r2
 801c934:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c938:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c93c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c940:	6828      	ldr	r0, [r5, #0]
 801c942:	4413      	add	r3, r2
 801c944:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c948:	6803      	ldr	r3, [r0, #0]
 801c94a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c94c:	4798      	blx	r3
 801c94e:	f010 0f01 	tst.w	r0, #1
 801c952:	462f      	mov	r7, r5
 801c954:	d00c      	beq.n	801c970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c956:	6828      	ldr	r0, [r5, #0]
 801c958:	6803      	ldr	r3, [r0, #0]
 801c95a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c95e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c960:	4798      	blx	r3
 801c962:	b004      	add	sp, #16
 801c964:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c968:	4a21      	ldr	r2, [pc, #132]	; (801c9f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c96a:	e7c6      	b.n	801c8fa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c96c:	4b1f      	ldr	r3, [pc, #124]	; (801c9ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c96e:	e7cb      	b.n	801c908 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c970:	6838      	ldr	r0, [r7, #0]
 801c972:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c976:	6803      	ldr	r3, [r0, #0]
 801c978:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c97c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c97e:	4798      	blx	r3
 801c980:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c984:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c988:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c98c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c990:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c994:	6838      	ldr	r0, [r7, #0]
 801c996:	6803      	ldr	r3, [r0, #0]
 801c998:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c99a:	4798      	blx	r3
 801c99c:	4a13      	ldr	r2, [pc, #76]	; (801c9ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c99e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c9a2:	8813      	ldrh	r3, [r2, #0]
 801c9a4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c9a8:	fb03 1404 	mla	r4, r3, r4, r1
 801c9ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c9b0:	435d      	muls	r5, r3
 801c9b2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c9b6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c9ba:	4691      	mov	r9, r2
 801c9bc:	6838      	ldr	r0, [r7, #0]
 801c9be:	42ac      	cmp	r4, r5
 801c9c0:	6803      	ldr	r3, [r0, #0]
 801c9c2:	d20e      	bcs.n	801c9e2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c9c4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c9c8:	4632      	mov	r2, r6
 801c9ca:	4643      	mov	r3, r8
 801c9cc:	4621      	mov	r1, r4
 801c9ce:	47d0      	blx	sl
 801c9d0:	f8b9 3000 	ldrh.w	r3, [r9]
 801c9d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c9d8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c9dc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c9e0:	e7ec      	b.n	801c9bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c9e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c9e4:	4798      	blx	r3
 801c9e6:	e7bc      	b.n	801c962 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c9e8:	200138ac 	.word	0x200138ac
 801c9ec:	200138ae 	.word	0x200138ae
 801c9f0:	200138b0 	.word	0x200138b0
 801c9f4:	200138b4 	.word	0x200138b4

0801c9f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9fc:	b08b      	sub	sp, #44	; 0x2c
 801c9fe:	460f      	mov	r7, r1
 801ca00:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ca04:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ca08:	4616      	mov	r6, r2
 801ca0a:	f1bb 0f00 	cmp.w	fp, #0
 801ca0e:	d04a      	beq.n	801caa6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ca10:	6810      	ldr	r0, [r2, #0]
 801ca12:	6851      	ldr	r1, [r2, #4]
 801ca14:	ad06      	add	r5, sp, #24
 801ca16:	c503      	stmia	r5!, {r0, r1}
 801ca18:	6818      	ldr	r0, [r3, #0]
 801ca1a:	6859      	ldr	r1, [r3, #4]
 801ca1c:	ad08      	add	r5, sp, #32
 801ca1e:	c503      	stmia	r5!, {r0, r1}
 801ca20:	a806      	add	r0, sp, #24
 801ca22:	f7f9 fcbd 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca26:	4631      	mov	r1, r6
 801ca28:	a808      	add	r0, sp, #32
 801ca2a:	f7f9 fcfd 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca2e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ca32:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ca36:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ca3a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ca3e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ca42:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ca46:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ca4a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ca4e:	4f5f      	ldr	r7, [pc, #380]	; (801cbcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ca50:	440a      	add	r2, r1
 801ca52:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ca56:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ca5a:	6838      	ldr	r0, [r7, #0]
 801ca5c:	4413      	add	r3, r2
 801ca5e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ca62:	6803      	ldr	r3, [r0, #0]
 801ca64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca66:	4798      	blx	r3
 801ca68:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ca6c:	46b9      	mov	r9, r7
 801ca6e:	d11d      	bne.n	801caac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ca70:	b9fc      	cbnz	r4, 801cab2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ca72:	f010 0f01 	tst.w	r0, #1
 801ca76:	d01c      	beq.n	801cab2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ca78:	f8d9 0000 	ldr.w	r0, [r9]
 801ca7c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ca80:	6801      	ldr	r1, [r0, #0]
 801ca82:	f8cd b00c 	str.w	fp, [sp, #12]
 801ca86:	2700      	movs	r7, #0
 801ca88:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ca8c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ca90:	9402      	str	r4, [sp, #8]
 801ca92:	b2ad      	uxth	r5, r5
 801ca94:	fa1f f488 	uxth.w	r4, r8
 801ca98:	9501      	str	r5, [sp, #4]
 801ca9a:	9400      	str	r4, [sp, #0]
 801ca9c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ca9e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801caa2:	4631      	mov	r1, r6
 801caa4:	47a0      	blx	r4
 801caa6:	b00b      	add	sp, #44	; 0x2c
 801caa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801caac:	f010 0f04 	tst.w	r0, #4
 801cab0:	e7e1      	b.n	801ca76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801cab2:	f8d9 0000 	ldr.w	r0, [r9]
 801cab6:	6803      	ldr	r3, [r0, #0]
 801cab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caba:	4798      	blx	r3
 801cabc:	4b44      	ldr	r3, [pc, #272]	; (801cbd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801cabe:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801cac2:	881a      	ldrh	r2, [r3, #0]
 801cac4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801cac8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801cacc:	fb02 1404 	mla	r4, r2, r4, r1
 801cad0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cad4:	469a      	mov	sl, r3
 801cad6:	fb05 f502 	mul.w	r5, r5, r2
 801cada:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801cade:	d059      	beq.n	801cb94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801cae0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801cae4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cae8:	fa1f f28b 	uxth.w	r2, fp
 801caec:	fa1f f989 	uxth.w	r9, r9
 801caf0:	469e      	mov	lr, r3
 801caf2:	42ac      	cmp	r4, r5
 801caf4:	d264      	bcs.n	801cbc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801caf6:	eb04 0a07 	add.w	sl, r4, r7
 801cafa:	4554      	cmp	r4, sl
 801cafc:	d23d      	bcs.n	801cb7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801cafe:	8821      	ldrh	r1, [r4, #0]
 801cb00:	f836 3b02 	ldrh.w	r3, [r6], #2
 801cb04:	1208      	asrs	r0, r1, #8
 801cb06:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cb0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cb0e:	fb10 f009 	smulbb	r0, r0, r9
 801cb12:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801cb16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cb1a:	00c9      	lsls	r1, r1, #3
 801cb1c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801cb20:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cb24:	10d8      	asrs	r0, r3, #3
 801cb26:	b2c9      	uxtb	r1, r1
 801cb28:	00db      	lsls	r3, r3, #3
 801cb2a:	fa1f fc8c 	uxth.w	ip, ip
 801cb2e:	fb1b fb09 	smulbb	fp, fp, r9
 801cb32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cb36:	b2db      	uxtb	r3, r3
 801cb38:	fb11 f109 	smulbb	r1, r1, r9
 801cb3c:	fb00 b002 	mla	r0, r0, r2, fp
 801cb40:	fb03 1302 	mla	r3, r3, r2, r1
 801cb44:	f10c 0b01 	add.w	fp, ip, #1
 801cb48:	b29b      	uxth	r3, r3
 801cb4a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801cb4e:	b280      	uxth	r0, r0
 801cb50:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801cb54:	f103 0c01 	add.w	ip, r3, #1
 801cb58:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cb5c:	1c43      	adds	r3, r0, #1
 801cb5e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cb62:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cb66:	0940      	lsrs	r0, r0, #5
 801cb68:	ea4c 0c0b 	orr.w	ip, ip, fp
 801cb6c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cb70:	ea4c 0c00 	orr.w	ip, ip, r0
 801cb74:	f824 cb02 	strh.w	ip, [r4], #2
 801cb78:	e7bf      	b.n	801cafa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801cb7a:	f8be 3000 	ldrh.w	r3, [lr]
 801cb7e:	eba3 0308 	sub.w	r3, r3, r8
 801cb82:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb86:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801cb8a:	eba3 0308 	sub.w	r3, r3, r8
 801cb8e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cb92:	e7ae      	b.n	801caf2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801cb94:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cb98:	f8d9 0000 	ldr.w	r0, [r9]
 801cb9c:	42ac      	cmp	r4, r5
 801cb9e:	6803      	ldr	r3, [r0, #0]
 801cba0:	d20e      	bcs.n	801cbc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801cba2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801cba6:	4632      	mov	r2, r6
 801cba8:	463b      	mov	r3, r7
 801cbaa:	4621      	mov	r1, r4
 801cbac:	47c0      	blx	r8
 801cbae:	f8ba 3000 	ldrh.w	r3, [sl]
 801cbb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cbb6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801cbba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cbbe:	e7eb      	b.n	801cb98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801cbc0:	4b02      	ldr	r3, [pc, #8]	; (801cbcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801cbc2:	6818      	ldr	r0, [r3, #0]
 801cbc4:	6803      	ldr	r3, [r0, #0]
 801cbc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbc8:	4798      	blx	r3
 801cbca:	e76c      	b.n	801caa6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cbcc:	200138b4 	.word	0x200138b4
 801cbd0:	200138ae 	.word	0x200138ae

0801cbd4 <_ZN8touchgfx8LCD16bppD0Ev>:
 801cbd4:	b510      	push	{r4, lr}
 801cbd6:	2184      	movs	r1, #132	; 0x84
 801cbd8:	4604      	mov	r4, r0
 801cbda:	f00d fe4a 	bl	802a872 <_ZdlPvj>
 801cbde:	4620      	mov	r0, r4
 801cbe0:	bd10      	pop	{r4, pc}

0801cbe2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801cbe2:	b510      	push	{r4, lr}
 801cbe4:	2104      	movs	r1, #4
 801cbe6:	4604      	mov	r4, r0
 801cbe8:	f00d fe43 	bl	802a872 <_ZdlPvj>
 801cbec:	4620      	mov	r0, r4
 801cbee:	bd10      	pop	{r4, pc}

0801cbf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801cbf0:	b510      	push	{r4, lr}
 801cbf2:	2104      	movs	r1, #4
 801cbf4:	4604      	mov	r4, r0
 801cbf6:	f00d fe3c 	bl	802a872 <_ZdlPvj>
 801cbfa:	4620      	mov	r0, r4
 801cbfc:	bd10      	pop	{r4, pc}

0801cbfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801cbfe:	b510      	push	{r4, lr}
 801cc00:	f640 0144 	movw	r1, #2116	; 0x844
 801cc04:	4604      	mov	r4, r0
 801cc06:	f00d fe34 	bl	802a872 <_ZdlPvj>
 801cc0a:	4620      	mov	r0, r4
 801cc0c:	bd10      	pop	{r4, pc}

0801cc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cc0e:	b510      	push	{r4, lr}
 801cc10:	2104      	movs	r1, #4
 801cc12:	4604      	mov	r4, r0
 801cc14:	f00d fe2d 	bl	802a872 <_ZdlPvj>
 801cc18:	4620      	mov	r0, r4
 801cc1a:	bd10      	pop	{r4, pc}

0801cc1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801cc1c:	b510      	push	{r4, lr}
 801cc1e:	2104      	movs	r1, #4
 801cc20:	4604      	mov	r4, r0
 801cc22:	f00d fe26 	bl	802a872 <_ZdlPvj>
 801cc26:	4620      	mov	r0, r4
 801cc28:	bd10      	pop	{r4, pc}

0801cc2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cc2a:	b510      	push	{r4, lr}
 801cc2c:	2104      	movs	r1, #4
 801cc2e:	4604      	mov	r4, r0
 801cc30:	f00d fe1f 	bl	802a872 <_ZdlPvj>
 801cc34:	4620      	mov	r0, r4
 801cc36:	bd10      	pop	{r4, pc}

0801cc38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cc38:	b510      	push	{r4, lr}
 801cc3a:	2104      	movs	r1, #4
 801cc3c:	4604      	mov	r4, r0
 801cc3e:	f00d fe18 	bl	802a872 <_ZdlPvj>
 801cc42:	4620      	mov	r0, r4
 801cc44:	bd10      	pop	{r4, pc}

0801cc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cc46:	b510      	push	{r4, lr}
 801cc48:	2104      	movs	r1, #4
 801cc4a:	4604      	mov	r4, r0
 801cc4c:	f00d fe11 	bl	802a872 <_ZdlPvj>
 801cc50:	4620      	mov	r0, r4
 801cc52:	bd10      	pop	{r4, pc}

0801cc54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801cc54:	b510      	push	{r4, lr}
 801cc56:	2104      	movs	r1, #4
 801cc58:	4604      	mov	r4, r0
 801cc5a:	f00d fe0a 	bl	802a872 <_ZdlPvj>
 801cc5e:	4620      	mov	r0, r4
 801cc60:	bd10      	pop	{r4, pc}

0801cc62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cc62:	b510      	push	{r4, lr}
 801cc64:	2104      	movs	r1, #4
 801cc66:	4604      	mov	r4, r0
 801cc68:	f00d fe03 	bl	802a872 <_ZdlPvj>
 801cc6c:	4620      	mov	r0, r4
 801cc6e:	bd10      	pop	{r4, pc}

0801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801cc70:	b510      	push	{r4, lr}
 801cc72:	2104      	movs	r1, #4
 801cc74:	4604      	mov	r4, r0
 801cc76:	f00d fdfc 	bl	802a872 <_ZdlPvj>
 801cc7a:	4620      	mov	r0, r4
 801cc7c:	bd10      	pop	{r4, pc}

0801cc7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cc7e:	b510      	push	{r4, lr}
 801cc80:	2104      	movs	r1, #4
 801cc82:	4604      	mov	r4, r0
 801cc84:	f00d fdf5 	bl	802a872 <_ZdlPvj>
 801cc88:	4620      	mov	r0, r4
 801cc8a:	bd10      	pop	{r4, pc}

0801cc8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cc8c:	b510      	push	{r4, lr}
 801cc8e:	2104      	movs	r1, #4
 801cc90:	4604      	mov	r4, r0
 801cc92:	f00d fdee 	bl	802a872 <_ZdlPvj>
 801cc96:	4620      	mov	r0, r4
 801cc98:	bd10      	pop	{r4, pc}

0801cc9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cc9a:	b510      	push	{r4, lr}
 801cc9c:	2104      	movs	r1, #4
 801cc9e:	4604      	mov	r4, r0
 801cca0:	f00d fde7 	bl	802a872 <_ZdlPvj>
 801cca4:	4620      	mov	r0, r4
 801cca6:	bd10      	pop	{r4, pc}

0801cca8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cca8:	b510      	push	{r4, lr}
 801ccaa:	2104      	movs	r1, #4
 801ccac:	4604      	mov	r4, r0
 801ccae:	f00d fde0 	bl	802a872 <_ZdlPvj>
 801ccb2:	4620      	mov	r0, r4
 801ccb4:	bd10      	pop	{r4, pc}

0801ccb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ccb6:	b510      	push	{r4, lr}
 801ccb8:	2104      	movs	r1, #4
 801ccba:	4604      	mov	r4, r0
 801ccbc:	f00d fdd9 	bl	802a872 <_ZdlPvj>
 801ccc0:	4620      	mov	r0, r4
 801ccc2:	bd10      	pop	{r4, pc}

0801ccc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ccc4:	b510      	push	{r4, lr}
 801ccc6:	2104      	movs	r1, #4
 801ccc8:	4604      	mov	r4, r0
 801ccca:	f00d fdd2 	bl	802a872 <_ZdlPvj>
 801ccce:	4620      	mov	r0, r4
 801ccd0:	bd10      	pop	{r4, pc}

0801ccd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ccd2:	b510      	push	{r4, lr}
 801ccd4:	2104      	movs	r1, #4
 801ccd6:	4604      	mov	r4, r0
 801ccd8:	f00d fdcb 	bl	802a872 <_ZdlPvj>
 801ccdc:	4620      	mov	r0, r4
 801ccde:	bd10      	pop	{r4, pc}

0801cce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cce0:	b510      	push	{r4, lr}
 801cce2:	2104      	movs	r1, #4
 801cce4:	4604      	mov	r4, r0
 801cce6:	f00d fdc4 	bl	802a872 <_ZdlPvj>
 801ccea:	4620      	mov	r0, r4
 801ccec:	bd10      	pop	{r4, pc}

0801ccee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ccee:	b510      	push	{r4, lr}
 801ccf0:	2104      	movs	r1, #4
 801ccf2:	4604      	mov	r4, r0
 801ccf4:	f00d fdbd 	bl	802a872 <_ZdlPvj>
 801ccf8:	4620      	mov	r0, r4
 801ccfa:	bd10      	pop	{r4, pc}

0801ccfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ccfc:	b510      	push	{r4, lr}
 801ccfe:	2104      	movs	r1, #4
 801cd00:	4604      	mov	r4, r0
 801cd02:	f00d fdb6 	bl	802a872 <_ZdlPvj>
 801cd06:	4620      	mov	r0, r4
 801cd08:	bd10      	pop	{r4, pc}

0801cd0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cd0a:	b510      	push	{r4, lr}
 801cd0c:	2104      	movs	r1, #4
 801cd0e:	4604      	mov	r4, r0
 801cd10:	f00d fdaf 	bl	802a872 <_ZdlPvj>
 801cd14:	4620      	mov	r0, r4
 801cd16:	bd10      	pop	{r4, pc}

0801cd18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cd18:	b510      	push	{r4, lr}
 801cd1a:	2104      	movs	r1, #4
 801cd1c:	4604      	mov	r4, r0
 801cd1e:	f00d fda8 	bl	802a872 <_ZdlPvj>
 801cd22:	4620      	mov	r0, r4
 801cd24:	bd10      	pop	{r4, pc}

0801cd26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cd26:	b510      	push	{r4, lr}
 801cd28:	2104      	movs	r1, #4
 801cd2a:	4604      	mov	r4, r0
 801cd2c:	f00d fda1 	bl	802a872 <_ZdlPvj>
 801cd30:	4620      	mov	r0, r4
 801cd32:	bd10      	pop	{r4, pc}

0801cd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cd34:	b510      	push	{r4, lr}
 801cd36:	2104      	movs	r1, #4
 801cd38:	4604      	mov	r4, r0
 801cd3a:	f00d fd9a 	bl	802a872 <_ZdlPvj>
 801cd3e:	4620      	mov	r0, r4
 801cd40:	bd10      	pop	{r4, pc}

0801cd42 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cd42:	b510      	push	{r4, lr}
 801cd44:	2104      	movs	r1, #4
 801cd46:	4604      	mov	r4, r0
 801cd48:	f00d fd93 	bl	802a872 <_ZdlPvj>
 801cd4c:	4620      	mov	r0, r4
 801cd4e:	bd10      	pop	{r4, pc}

0801cd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cd50:	b510      	push	{r4, lr}
 801cd52:	2104      	movs	r1, #4
 801cd54:	4604      	mov	r4, r0
 801cd56:	f00d fd8c 	bl	802a872 <_ZdlPvj>
 801cd5a:	4620      	mov	r0, r4
 801cd5c:	bd10      	pop	{r4, pc}

0801cd5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801cd5e:	b510      	push	{r4, lr}
 801cd60:	2104      	movs	r1, #4
 801cd62:	4604      	mov	r4, r0
 801cd64:	f00d fd85 	bl	802a872 <_ZdlPvj>
 801cd68:	4620      	mov	r0, r4
 801cd6a:	bd10      	pop	{r4, pc}

0801cd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801cd6c:	b510      	push	{r4, lr}
 801cd6e:	2104      	movs	r1, #4
 801cd70:	4604      	mov	r4, r0
 801cd72:	f00d fd7e 	bl	802a872 <_ZdlPvj>
 801cd76:	4620      	mov	r0, r4
 801cd78:	bd10      	pop	{r4, pc}

0801cd7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801cd7a:	b510      	push	{r4, lr}
 801cd7c:	2104      	movs	r1, #4
 801cd7e:	4604      	mov	r4, r0
 801cd80:	f00d fd77 	bl	802a872 <_ZdlPvj>
 801cd84:	4620      	mov	r0, r4
 801cd86:	bd10      	pop	{r4, pc}

0801cd88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801cd88:	b510      	push	{r4, lr}
 801cd8a:	2104      	movs	r1, #4
 801cd8c:	4604      	mov	r4, r0
 801cd8e:	f00d fd70 	bl	802a872 <_ZdlPvj>
 801cd92:	4620      	mov	r0, r4
 801cd94:	bd10      	pop	{r4, pc}
	...

0801cd98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cd98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd9c:	b08f      	sub	sp, #60	; 0x3c
 801cd9e:	461c      	mov	r4, r3
 801cda0:	9205      	str	r2, [sp, #20]
 801cda2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cda6:	9100      	str	r1, [sp, #0]
 801cda8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cdaa:	9201      	str	r2, [sp, #4]
 801cdac:	2a00      	cmp	r2, #0
 801cdae:	f000 8115 	beq.w	801cfdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801cdb2:	6820      	ldr	r0, [r4, #0]
 801cdb4:	6861      	ldr	r1, [r4, #4]
 801cdb6:	aa0a      	add	r2, sp, #40	; 0x28
 801cdb8:	c203      	stmia	r2!, {r0, r1}
 801cdba:	6818      	ldr	r0, [r3, #0]
 801cdbc:	6859      	ldr	r1, [r3, #4]
 801cdbe:	aa0c      	add	r2, sp, #48	; 0x30
 801cdc0:	c203      	stmia	r2!, {r0, r1}
 801cdc2:	a80a      	add	r0, sp, #40	; 0x28
 801cdc4:	f7f9 faec 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cdc8:	4621      	mov	r1, r4
 801cdca:	a80c      	add	r0, sp, #48	; 0x30
 801cdcc:	f7f9 fb2c 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cdd0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cdd4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cdd8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cddc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cde0:	bfde      	ittt	le
 801cde2:	b2b3      	uxthle	r3, r6
 801cde4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cde8:	fb92 f3f3 	sdivle	r3, r2, r3
 801cdec:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cdf0:	bfc8      	it	gt
 801cdf2:	2301      	movgt	r3, #1
 801cdf4:	fb92 f1f3 	sdiv	r1, r2, r3
 801cdf8:	fa1f fc81 	uxth.w	ip, r1
 801cdfc:	fb0c 2413 	mls	r4, ip, r3, r2
 801ce00:	fb14 f406 	smulbb	r4, r4, r6
 801ce04:	441d      	add	r5, r3
 801ce06:	4404      	add	r4, r0
 801ce08:	4661      	mov	r1, ip
 801ce0a:	3d01      	subs	r5, #1
 801ce0c:	b2a4      	uxth	r4, r4
 801ce0e:	fb95 f5f3 	sdiv	r5, r5, r3
 801ce12:	b131      	cbz	r1, 801ce22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801ce14:	9b05      	ldr	r3, [sp, #20]
 801ce16:	9900      	ldr	r1, [sp, #0]
 801ce18:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ce1c:	ba1b      	rev	r3, r3
 801ce1e:	4419      	add	r1, r3
 801ce20:	9100      	str	r1, [sp, #0]
 801ce22:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ce26:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801ce2a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ce2e:	4418      	add	r0, r3
 801ce30:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ce34:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ce38:	441a      	add	r2, r3
 801ce3a:	4b6a      	ldr	r3, [pc, #424]	; (801cfe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ce3c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ce40:	6818      	ldr	r0, [r3, #0]
 801ce42:	6803      	ldr	r3, [r0, #0]
 801ce44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce46:	4798      	blx	r3
 801ce48:	4967      	ldr	r1, [pc, #412]	; (801cfe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801ce4a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ce4e:	880b      	ldrh	r3, [r1, #0]
 801ce50:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ce54:	9109      	str	r1, [sp, #36]	; 0x24
 801ce56:	fb03 c202 	mla	r2, r3, r2, ip
 801ce5a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ce5e:	4373      	muls	r3, r6
 801ce60:	b2ad      	uxth	r5, r5
 801ce62:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ce66:	00ad      	lsls	r5, r5, #2
 801ce68:	9306      	str	r3, [sp, #24]
 801ce6a:	1d2b      	adds	r3, r5, #4
 801ce6c:	9307      	str	r3, [sp, #28]
 801ce6e:	9b01      	ldr	r3, [sp, #4]
 801ce70:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ce74:	9103      	str	r1, [sp, #12]
 801ce76:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801ce7a:	2c00      	cmp	r4, #0
 801ce7c:	bf0c      	ite	eq
 801ce7e:	46c6      	moveq	lr, r8
 801ce80:	f04f 0e00 	movne.w	lr, #0
 801ce84:	2300      	movs	r3, #0
 801ce86:	b292      	uxth	r2, r2
 801ce88:	fa1f fe8e 	uxth.w	lr, lr
 801ce8c:	9302      	str	r3, [sp, #8]
 801ce8e:	9204      	str	r2, [sp, #16]
 801ce90:	9a06      	ldr	r2, [sp, #24]
 801ce92:	4282      	cmp	r2, r0
 801ce94:	f240 809d 	bls.w	801cfd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801ce98:	b963      	cbnz	r3, 801ceb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ce9a:	9b00      	ldr	r3, [sp, #0]
 801ce9c:	781a      	ldrb	r2, [r3, #0]
 801ce9e:	0993      	lsrs	r3, r2, #6
 801cea0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cea4:	9202      	str	r2, [sp, #8]
 801cea6:	1e5a      	subs	r2, r3, #1
 801cea8:	2a02      	cmp	r2, #2
 801ceaa:	d815      	bhi.n	801ced8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801ceac:	9a00      	ldr	r2, [sp, #0]
 801ceae:	3201      	adds	r2, #1
 801ceb0:	9200      	str	r2, [sp, #0]
 801ceb2:	b29b      	uxth	r3, r3
 801ceb4:	b1b4      	cbz	r4, 801cee4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801ceb6:	429c      	cmp	r4, r3
 801ceb8:	bf95      	itete	ls
 801ceba:	1b1c      	subls	r4, r3, r4
 801cebc:	1ae4      	subhi	r4, r4, r3
 801cebe:	fa1f fa84 	uxthls.w	sl, r4
 801cec2:	b2a4      	uxthhi	r4, r4
 801cec4:	bf87      	ittee	hi
 801cec6:	4671      	movhi	r1, lr
 801cec8:	f04f 0a00 	movhi.w	sl, #0
 801cecc:	fa1f f188 	uxthls.w	r1, r8
 801ced0:	2400      	movls	r4, #0
 801ced2:	4653      	mov	r3, sl
 801ced4:	468e      	mov	lr, r1
 801ced6:	e7db      	b.n	801ce90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801ced8:	9a00      	ldr	r2, [sp, #0]
 801ceda:	9b00      	ldr	r3, [sp, #0]
 801cedc:	3202      	adds	r2, #2
 801cede:	785b      	ldrb	r3, [r3, #1]
 801cee0:	9200      	str	r2, [sp, #0]
 801cee2:	e7e7      	b.n	801ceb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cee4:	2202      	movs	r2, #2
 801cee6:	4615      	mov	r5, r2
 801cee8:	9907      	ldr	r1, [sp, #28]
 801ceea:	9a02      	ldr	r2, [sp, #8]
 801ceec:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cef0:	9905      	ldr	r1, [sp, #20]
 801cef2:	4573      	cmp	r3, lr
 801cef4:	f831 c002 	ldrh.w	ip, [r1, r2]
 801cef8:	9a01      	ldr	r2, [sp, #4]
 801cefa:	bf2b      	itete	cs
 801cefc:	eba3 0a0e 	subcs.w	sl, r3, lr
 801cf00:	ebae 0103 	subcc.w	r1, lr, r3
 801cf04:	46f1      	movcs	r9, lr
 801cf06:	4699      	movcc	r9, r3
 801cf08:	bf27      	ittee	cs
 801cf0a:	fa1f fa8a 	uxthcs.w	sl, sl
 801cf0e:	4621      	movcs	r1, r4
 801cf10:	b289      	uxthcc	r1, r1
 801cf12:	46a2      	movcc	sl, r4
 801cf14:	2aff      	cmp	r2, #255	; 0xff
 801cf16:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf1a:	d105      	bne.n	801cf28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801cf1c:	4481      	add	r9, r0
 801cf1e:	4581      	cmp	r9, r0
 801cf20:	d045      	beq.n	801cfae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801cf22:	f820 cb02 	strh.w	ip, [r0], #2
 801cf26:	e7fa      	b.n	801cf1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801cf28:	9d03      	ldr	r5, [sp, #12]
 801cf2a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801cf2e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801cf32:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801cf36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cf3a:	436a      	muls	r2, r5
 801cf3c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cf40:	fa5f fc8c 	uxtb.w	ip, ip
 801cf44:	9208      	str	r2, [sp, #32]
 801cf46:	fb0b fb05 	mul.w	fp, fp, r5
 801cf4a:	fb0c fc05 	mul.w	ip, ip, r5
 801cf4e:	4481      	add	r9, r0
 801cf50:	4581      	cmp	r9, r0
 801cf52:	d02c      	beq.n	801cfae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801cf54:	8802      	ldrh	r2, [r0, #0]
 801cf56:	9d04      	ldr	r5, [sp, #16]
 801cf58:	9f04      	ldr	r7, [sp, #16]
 801cf5a:	1216      	asrs	r6, r2, #8
 801cf5c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cf60:	fb16 f605 	smulbb	r6, r6, r5
 801cf64:	9d08      	ldr	r5, [sp, #32]
 801cf66:	442e      	add	r6, r5
 801cf68:	10d5      	asrs	r5, r2, #3
 801cf6a:	00d2      	lsls	r2, r2, #3
 801cf6c:	b2d2      	uxtb	r2, r2
 801cf6e:	fb12 f207 	smulbb	r2, r2, r7
 801cf72:	b2b6      	uxth	r6, r6
 801cf74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cf78:	4462      	add	r2, ip
 801cf7a:	fb15 f507 	smulbb	r5, r5, r7
 801cf7e:	b292      	uxth	r2, r2
 801cf80:	1c77      	adds	r7, r6, #1
 801cf82:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801cf86:	1c57      	adds	r7, r2, #1
 801cf88:	445d      	add	r5, fp
 801cf8a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801cf8e:	b2ad      	uxth	r5, r5
 801cf90:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cf94:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cf98:	4316      	orrs	r6, r2
 801cf9a:	1c6a      	adds	r2, r5, #1
 801cf9c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cfa0:	096d      	lsrs	r5, r5, #5
 801cfa2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cfa6:	432e      	orrs	r6, r5
 801cfa8:	f820 6b02 	strh.w	r6, [r0], #2
 801cfac:	e7d0      	b.n	801cf50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801cfae:	4573      	cmp	r3, lr
 801cfb0:	d38f      	bcc.n	801ced2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801cfb2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cfb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cfb8:	fa1f f188 	uxth.w	r1, r8
 801cfbc:	1a64      	subs	r4, r4, r1
 801cfbe:	881b      	ldrh	r3, [r3, #0]
 801cfc0:	b2a4      	uxth	r4, r4
 801cfc2:	2c00      	cmp	r4, #0
 801cfc4:	eba3 0308 	sub.w	r3, r3, r8
 801cfc8:	bf18      	it	ne
 801cfca:	2100      	movne	r1, #0
 801cfcc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cfd0:	e77f      	b.n	801ced2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801cfd2:	4b04      	ldr	r3, [pc, #16]	; (801cfe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801cfd4:	6818      	ldr	r0, [r3, #0]
 801cfd6:	6803      	ldr	r3, [r0, #0]
 801cfd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfda:	4798      	blx	r3
 801cfdc:	b00f      	add	sp, #60	; 0x3c
 801cfde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfe2:	bf00      	nop
 801cfe4:	200138b4 	.word	0x200138b4
 801cfe8:	200138ae 	.word	0x200138ae

0801cfec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cfec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cff0:	b09f      	sub	sp, #124	; 0x7c
 801cff2:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801cff6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801cffa:	9209      	str	r2, [sp, #36]	; 0x24
 801cffc:	461d      	mov	r5, r3
 801cffe:	4604      	mov	r4, r0
 801d000:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d002:	2a00      	cmp	r2, #0
 801d004:	f000 81eb 	beq.w	801d3de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d008:	6828      	ldr	r0, [r5, #0]
 801d00a:	6869      	ldr	r1, [r5, #4]
 801d00c:	aa1a      	add	r2, sp, #104	; 0x68
 801d00e:	c203      	stmia	r2!, {r0, r1}
 801d010:	6818      	ldr	r0, [r3, #0]
 801d012:	6859      	ldr	r1, [r3, #4]
 801d014:	aa1c      	add	r2, sp, #112	; 0x70
 801d016:	c203      	stmia	r2!, {r0, r1}
 801d018:	a81a      	add	r0, sp, #104	; 0x68
 801d01a:	f7f9 f9c1 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d01e:	4629      	mov	r1, r5
 801d020:	a81c      	add	r0, sp, #112	; 0x70
 801d022:	f7f9 fa01 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d026:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d02a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d02e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d032:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d036:	bfd7      	itett	le
 801d038:	b29a      	uxthle	r2, r3
 801d03a:	2201      	movgt	r2, #1
 801d03c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d040:	fb91 f2f2 	sdivle	r2, r1, r2
 801d044:	9202      	str	r2, [sp, #8]
 801d046:	9802      	ldr	r0, [sp, #8]
 801d048:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d04c:	fb92 f0f0 	sdiv	r0, r2, r0
 801d050:	b280      	uxth	r0, r0
 801d052:	9010      	str	r0, [sp, #64]	; 0x40
 801d054:	9902      	ldr	r1, [sp, #8]
 801d056:	9802      	ldr	r0, [sp, #8]
 801d058:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d05a:	4488      	add	r8, r1
 801d05c:	fb05 2510 	mls	r5, r5, r0, r2
 801d060:	fb15 f503 	smulbb	r5, r5, r3
 801d064:	f108 38ff 	add.w	r8, r8, #4294967295
 801d068:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d06c:	fb98 f8f1 	sdiv	r8, r8, r1
 801d070:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d074:	440d      	add	r5, r1
 801d076:	4419      	add	r1, r3
 801d078:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d07c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d080:	441a      	add	r2, r3
 801d082:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d086:	9304      	str	r3, [sp, #16]
 801d088:	4b95      	ldr	r3, [pc, #596]	; (801d2e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d08a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d08e:	6818      	ldr	r0, [r3, #0]
 801d090:	6803      	ldr	r3, [r0, #0]
 801d092:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d094:	4798      	blx	r3
 801d096:	4b93      	ldr	r3, [pc, #588]	; (801d2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d098:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d09c:	881a      	ldrh	r2, [r3, #0]
 801d09e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d0a2:	9318      	str	r3, [sp, #96]	; 0x60
 801d0a4:	fb02 7101 	mla	r1, r2, r1, r7
 801d0a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d0ac:	4356      	muls	r6, r2
 801d0ae:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d0b2:	f108 0801 	add.w	r8, r8, #1
 801d0b6:	920a      	str	r2, [sp, #40]	; 0x28
 801d0b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d0ba:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d0be:	930f      	str	r3, [sp, #60]	; 0x3c
 801d0c0:	fa1f f888 	uxth.w	r8, r8
 801d0c4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d0c8:	f108 0204 	add.w	r2, r8, #4
 801d0cc:	9211      	str	r2, [sp, #68]	; 0x44
 801d0ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d0d0:	4b85      	ldr	r3, [pc, #532]	; (801d2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d0d2:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d0d6:	b2ad      	uxth	r5, r5
 801d0d8:	9215      	str	r2, [sp, #84]	; 0x54
 801d0da:	2d00      	cmp	r5, #0
 801d0dc:	9a04      	ldr	r2, [sp, #16]
 801d0de:	f04f 0100 	mov.w	r1, #0
 801d0e2:	bf18      	it	ne
 801d0e4:	2200      	movne	r2, #0
 801d0e6:	1b1b      	subs	r3, r3, r4
 801d0e8:	b292      	uxth	r2, r2
 801d0ea:	910d      	str	r1, [sp, #52]	; 0x34
 801d0ec:	9319      	str	r3, [sp, #100]	; 0x64
 801d0ee:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d0f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d0f2:	fa11 f383 	uxtah	r3, r1, r3
 801d0f6:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d0f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d0fc:	3304      	adds	r3, #4
 801d0fe:	9306      	str	r3, [sp, #24]
 801d100:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d102:	4283      	cmp	r3, r0
 801d104:	f240 8166 	bls.w	801d3d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d108:	9902      	ldr	r1, [sp, #8]
 801d10a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d10e:	fbb5 f3f3 	udiv	r3, r5, r3
 801d112:	1acb      	subs	r3, r1, r3
 801d114:	b29b      	uxth	r3, r3
 801d116:	9316      	str	r3, [sp, #88]	; 0x58
 801d118:	9b06      	ldr	r3, [sp, #24]
 801d11a:	9e06      	ldr	r6, [sp, #24]
 801d11c:	7859      	ldrb	r1, [r3, #1]
 801d11e:	789b      	ldrb	r3, [r3, #2]
 801d120:	7836      	ldrb	r6, [r6, #0]
 801d122:	9612      	str	r6, [sp, #72]	; 0x48
 801d124:	021b      	lsls	r3, r3, #8
 801d126:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d12a:	9906      	ldr	r1, [sp, #24]
 801d12c:	78c9      	ldrb	r1, [r1, #3]
 801d12e:	430b      	orrs	r3, r1
 801d130:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d132:	3601      	adds	r6, #1
 801d134:	4419      	add	r1, r3
 801d136:	9605      	str	r6, [sp, #20]
 801d138:	1c4e      	adds	r6, r1, #1
 801d13a:	9603      	str	r6, [sp, #12]
 801d13c:	7849      	ldrb	r1, [r1, #1]
 801d13e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d140:	0209      	lsls	r1, r1, #8
 801d142:	5cf3      	ldrb	r3, [r6, r3]
 801d144:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d148:	4319      	orrs	r1, r3
 801d14a:	b28b      	uxth	r3, r1
 801d14c:	930c      	str	r3, [sp, #48]	; 0x30
 801d14e:	2300      	movs	r3, #0
 801d150:	f04f 0a01 	mov.w	sl, #1
 801d154:	9307      	str	r3, [sp, #28]
 801d156:	469c      	mov	ip, r3
 801d158:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d15c:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d160:	46d3      	mov	fp, sl
 801d162:	4657      	mov	r7, sl
 801d164:	930e      	str	r3, [sp, #56]	; 0x38
 801d166:	2d00      	cmp	r5, #0
 801d168:	d07e      	beq.n	801d268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d16a:	42af      	cmp	r7, r5
 801d16c:	d26e      	bcs.n	801d24c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d16e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d170:	9201      	str	r2, [sp, #4]
 801d172:	1bed      	subs	r5, r5, r7
 801d174:	4283      	cmp	r3, r0
 801d176:	b2ad      	uxth	r5, r5
 801d178:	d802      	bhi.n	801d180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d17a:	e073      	b.n	801d264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d17c:	2b00      	cmp	r3, #0
 801d17e:	d15f      	bne.n	801d240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d180:	9b03      	ldr	r3, [sp, #12]
 801d182:	785b      	ldrb	r3, [r3, #1]
 801d184:	f1cb 0207 	rsb	r2, fp, #7
 801d188:	4093      	lsls	r3, r2
 801d18a:	005b      	lsls	r3, r3, #1
 801d18c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d190:	9b03      	ldr	r3, [sp, #12]
 801d192:	781b      	ldrb	r3, [r3, #0]
 801d194:	fa43 f30b 	asr.w	r3, r3, fp
 801d198:	b2db      	uxtb	r3, r3
 801d19a:	4313      	orrs	r3, r2
 801d19c:	f10b 0201 	add.w	r2, fp, #1
 801d1a0:	fa5f fb82 	uxtb.w	fp, r2
 801d1a4:	9a03      	ldr	r2, [sp, #12]
 801d1a6:	f1bb 0f08 	cmp.w	fp, #8
 801d1aa:	bf15      	itete	ne
 801d1ac:	3201      	addne	r2, #1
 801d1ae:	3202      	addeq	r2, #2
 801d1b0:	9203      	strne	r2, [sp, #12]
 801d1b2:	9203      	streq	r2, [sp, #12]
 801d1b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d1b6:	b29f      	uxth	r7, r3
 801d1b8:	bf08      	it	eq
 801d1ba:	f04f 0b00 	moveq.w	fp, #0
 801d1be:	42ba      	cmp	r2, r7
 801d1c0:	d309      	bcc.n	801d1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d1c2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d1c6:	2301      	movs	r3, #1
 801d1c8:	9a05      	ldr	r2, [sp, #20]
 801d1ca:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d1ce:	d30e      	bcc.n	801d1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d1d0:	469a      	mov	sl, r3
 801d1d2:	2600      	movs	r6, #0
 801d1d4:	e035      	b.n	801d242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d1d6:	9b05      	ldr	r3, [sp, #20]
 801d1d8:	429f      	cmp	r7, r3
 801d1da:	d318      	bcc.n	801d20e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d1dc:	eb04 030a 	add.w	r3, r4, sl
 801d1e0:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d1e4:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d1e8:	f10a 0301 	add.w	r3, sl, #1
 801d1ec:	b29b      	uxth	r3, r3
 801d1ee:	9a05      	ldr	r2, [sp, #20]
 801d1f0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d1f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d1f6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d1fa:	7116      	strb	r6, [r2, #4]
 801d1fc:	f10a 0601 	add.w	r6, sl, #1
 801d200:	80d1      	strh	r1, [r2, #6]
 801d202:	7156      	strb	r6, [r2, #5]
 801d204:	9a05      	ldr	r2, [sp, #20]
 801d206:	3201      	adds	r2, #1
 801d208:	b292      	uxth	r2, r2
 801d20a:	9205      	str	r2, [sp, #20]
 801d20c:	e7e0      	b.n	801d1d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d20e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d212:	463a      	mov	r2, r7
 801d214:	795b      	ldrb	r3, [r3, #5]
 801d216:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d21a:	4426      	add	r6, r4
 801d21c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d21e:	eb01 0c06 	add.w	ip, r1, r6
 801d222:	f1bc 0f00 	cmp.w	ip, #0
 801d226:	dd07      	ble.n	801d238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d228:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d22c:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d230:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d234:	88d2      	ldrh	r2, [r2, #6]
 801d236:	e7f1      	b.n	801d21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d238:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d23c:	b29b      	uxth	r3, r3
 801d23e:	e7c3      	b.n	801d1c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d240:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d242:	970c      	str	r7, [sp, #48]	; 0x30
 801d244:	9a01      	ldr	r2, [sp, #4]
 801d246:	46b4      	mov	ip, r6
 801d248:	461f      	mov	r7, r3
 801d24a:	e78c      	b.n	801d166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d24c:	1b7b      	subs	r3, r7, r5
 801d24e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d252:	9201      	str	r2, [sp, #4]
 801d254:	eb0c 0605 	add.w	r6, ip, r5
 801d258:	b29b      	uxth	r3, r3
 801d25a:	b2b6      	uxth	r6, r6
 801d25c:	2500      	movs	r5, #0
 801d25e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d260:	4282      	cmp	r2, r0
 801d262:	d88b      	bhi.n	801d17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d264:	9a01      	ldr	r2, [sp, #4]
 801d266:	e74b      	b.n	801d100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d268:	4297      	cmp	r7, r2
 801d26a:	d332      	bcc.n	801d2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d26c:	1abb      	subs	r3, r7, r2
 801d26e:	b29b      	uxth	r3, r3
 801d270:	9208      	str	r2, [sp, #32]
 801d272:	9501      	str	r5, [sp, #4]
 801d274:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d276:	29ff      	cmp	r1, #255	; 0xff
 801d278:	9908      	ldr	r1, [sp, #32]
 801d27a:	eb0c 0601 	add.w	r6, ip, r1
 801d27e:	d135      	bne.n	801d2ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d280:	f1a0 0e02 	sub.w	lr, r0, #2
 801d284:	b2b6      	uxth	r6, r6
 801d286:	45b4      	cmp	ip, r6
 801d288:	f040 808c 	bne.w	801d3a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d28c:	9908      	ldr	r1, [sp, #32]
 801d28e:	4297      	cmp	r7, r2
 801d290:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d294:	d3e2      	bcc.n	801d25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d296:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d298:	9904      	ldr	r1, [sp, #16]
 801d29a:	8812      	ldrh	r2, [r2, #0]
 801d29c:	1a52      	subs	r2, r2, r1
 801d29e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d2a2:	9a07      	ldr	r2, [sp, #28]
 801d2a4:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d2a6:	3201      	adds	r2, #1
 801d2a8:	428a      	cmp	r2, r1
 801d2aa:	9207      	str	r2, [sp, #28]
 801d2ac:	f040 8087 	bne.w	801d3be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d2b0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d2b4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d2b8:	9b04      	ldr	r3, [sp, #16]
 801d2ba:	1bed      	subs	r5, r5, r7
 801d2bc:	b2ad      	uxth	r5, r5
 801d2be:	2d00      	cmp	r5, #0
 801d2c0:	bf08      	it	eq
 801d2c2:	461a      	moveq	r2, r3
 801d2c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2c6:	bf18      	it	ne
 801d2c8:	2200      	movne	r2, #0
 801d2ca:	3301      	adds	r3, #1
 801d2cc:	930d      	str	r3, [sp, #52]	; 0x34
 801d2ce:	b292      	uxth	r2, r2
 801d2d0:	e70d      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d2d2:	1bd1      	subs	r1, r2, r7
 801d2d4:	b28b      	uxth	r3, r1
 801d2d6:	9301      	str	r3, [sp, #4]
 801d2d8:	9708      	str	r7, [sp, #32]
 801d2da:	462b      	mov	r3, r5
 801d2dc:	e7ca      	b.n	801d274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d2de:	bf00      	nop
 801d2e0:	200138b4 	.word	0x200138b4
 801d2e4:	200138ae 	.word	0x200138ae
 801d2e8:	fffff7fb 	.word	0xfffff7fb
 801d2ec:	b2b6      	uxth	r6, r6
 801d2ee:	900b      	str	r0, [sp, #44]	; 0x2c
 801d2f0:	45b4      	cmp	ip, r6
 801d2f2:	d0cb      	beq.n	801d28c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d2f4:	f10c 0101 	add.w	r1, ip, #1
 801d2f8:	44a4      	add	ip, r4
 801d2fa:	9117      	str	r1, [sp, #92]	; 0x5c
 801d2fc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d300:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d302:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d306:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d308:	f8b1 c000 	ldrh.w	ip, [r1]
 801d30c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d30e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d312:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d316:	fb1e fe01 	smulbb	lr, lr, r1
 801d31a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d31e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d320:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d324:	fb08 e801 	mla	r8, r8, r1, lr
 801d328:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d32c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d32e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d332:	fb19 f901 	smulbb	r9, r9, r1
 801d336:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d33a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d33c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d340:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d344:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d348:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d34a:	fa5f fc8c 	uxtb.w	ip, ip
 801d34e:	fb1c fc01 	smulbb	ip, ip, r1
 801d352:	00ed      	lsls	r5, r5, #3
 801d354:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d356:	b2ed      	uxtb	r5, r5
 801d358:	fb05 c501 	mla	r5, r5, r1, ip
 801d35c:	fa1f f888 	uxth.w	r8, r8
 801d360:	fa1f fe8e 	uxth.w	lr, lr
 801d364:	b2ad      	uxth	r5, r5
 801d366:	f108 0c01 	add.w	ip, r8, #1
 801d36a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d36e:	f10e 0901 	add.w	r9, lr, #1
 801d372:	f105 0c01 	add.w	ip, r5, #1
 801d376:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d37a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d37e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d382:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d386:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d38a:	ea4c 0808 	orr.w	r8, ip, r8
 801d38e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d390:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d394:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d398:	ea48 0809 	orr.w	r8, r8, r9
 801d39c:	f821 8b02 	strh.w	r8, [r1], #2
 801d3a0:	910b      	str	r1, [sp, #44]	; 0x2c
 801d3a2:	e7a5      	b.n	801d2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d3a4:	f10c 0801 	add.w	r8, ip, #1
 801d3a8:	44a4      	add	ip, r4
 801d3aa:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d3ac:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d3b0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d3b4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d3b8:	fa1f fc88 	uxth.w	ip, r8
 801d3bc:	e763      	b.n	801d286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d3be:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d3c2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d3c6:	1aad      	subs	r5, r5, r2
 801d3c8:	b2ad      	uxth	r5, r5
 801d3ca:	2d00      	cmp	r5, #0
 801d3cc:	bf18      	it	ne
 801d3ce:	2200      	movne	r2, #0
 801d3d0:	9201      	str	r2, [sp, #4]
 801d3d2:	e744      	b.n	801d25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d3d4:	4b03      	ldr	r3, [pc, #12]	; (801d3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d3d6:	6818      	ldr	r0, [r3, #0]
 801d3d8:	6803      	ldr	r3, [r0, #0]
 801d3da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3dc:	4798      	blx	r3
 801d3de:	b01f      	add	sp, #124	; 0x7c
 801d3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3e4:	200138b4 	.word	0x200138b4

0801d3e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d3e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3ec:	b08f      	sub	sp, #60	; 0x3c
 801d3ee:	461c      	mov	r4, r3
 801d3f0:	9203      	str	r2, [sp, #12]
 801d3f2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d3f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d3f8:	9202      	str	r2, [sp, #8]
 801d3fa:	460f      	mov	r7, r1
 801d3fc:	2a00      	cmp	r2, #0
 801d3fe:	f000 8128 	beq.w	801d652 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d402:	6820      	ldr	r0, [r4, #0]
 801d404:	6861      	ldr	r1, [r4, #4]
 801d406:	aa0a      	add	r2, sp, #40	; 0x28
 801d408:	c203      	stmia	r2!, {r0, r1}
 801d40a:	6818      	ldr	r0, [r3, #0]
 801d40c:	6859      	ldr	r1, [r3, #4]
 801d40e:	aa0c      	add	r2, sp, #48	; 0x30
 801d410:	c203      	stmia	r2!, {r0, r1}
 801d412:	a80a      	add	r0, sp, #40	; 0x28
 801d414:	f7f8 ffc4 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d418:	4621      	mov	r1, r4
 801d41a:	a80c      	add	r0, sp, #48	; 0x30
 801d41c:	f7f9 f804 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d420:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d424:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d428:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d42c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d430:	bfde      	ittt	le
 801d432:	b2b3      	uxthle	r3, r6
 801d434:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d438:	fb92 f3f3 	sdivle	r3, r2, r3
 801d43c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d440:	bfc8      	it	gt
 801d442:	2301      	movgt	r3, #1
 801d444:	fb92 f1f3 	sdiv	r1, r2, r3
 801d448:	fa1f fc81 	uxth.w	ip, r1
 801d44c:	fb0c 2413 	mls	r4, ip, r3, r2
 801d450:	fb14 f406 	smulbb	r4, r4, r6
 801d454:	441d      	add	r5, r3
 801d456:	4404      	add	r4, r0
 801d458:	4661      	mov	r1, ip
 801d45a:	3d01      	subs	r5, #1
 801d45c:	b2a4      	uxth	r4, r4
 801d45e:	fb95 f5f3 	sdiv	r5, r5, r3
 801d462:	b121      	cbz	r1, 801d46e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801d464:	9b03      	ldr	r3, [sp, #12]
 801d466:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d46a:	ba1b      	rev	r3, r3
 801d46c:	441f      	add	r7, r3
 801d46e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d472:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d476:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d47a:	4418      	add	r0, r3
 801d47c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d480:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d484:	441a      	add	r2, r3
 801d486:	4b74      	ldr	r3, [pc, #464]	; (801d658 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d488:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d48c:	6818      	ldr	r0, [r3, #0]
 801d48e:	6803      	ldr	r3, [r0, #0]
 801d490:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d492:	4798      	blx	r3
 801d494:	4a71      	ldr	r2, [pc, #452]	; (801d65c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801d496:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801d49a:	8813      	ldrh	r3, [r2, #0]
 801d49c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d4a0:	9209      	str	r2, [sp, #36]	; 0x24
 801d4a2:	fb03 c101 	mla	r1, r3, r1, ip
 801d4a6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d4aa:	4373      	muls	r3, r6
 801d4ac:	b2ad      	uxth	r5, r5
 801d4ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d4b2:	00ad      	lsls	r5, r5, #2
 801d4b4:	2c00      	cmp	r4, #0
 801d4b6:	9304      	str	r3, [sp, #16]
 801d4b8:	f105 0304 	add.w	r3, r5, #4
 801d4bc:	9305      	str	r3, [sp, #20]
 801d4be:	bf0c      	ite	eq
 801d4c0:	46c8      	moveq	r8, r9
 801d4c2:	f04f 0800 	movne.w	r8, #0
 801d4c6:	2300      	movs	r3, #0
 801d4c8:	fa1f f888 	uxth.w	r8, r8
 801d4cc:	9301      	str	r3, [sp, #4]
 801d4ce:	9a04      	ldr	r2, [sp, #16]
 801d4d0:	4282      	cmp	r2, r0
 801d4d2:	f240 80b9 	bls.w	801d648 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801d4d6:	b95b      	cbnz	r3, 801d4f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801d4d8:	783a      	ldrb	r2, [r7, #0]
 801d4da:	0993      	lsrs	r3, r2, #6
 801d4dc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d4e0:	9201      	str	r2, [sp, #4]
 801d4e2:	1e5a      	subs	r2, r3, #1
 801d4e4:	2a02      	cmp	r2, #2
 801d4e6:	bf8d      	iteet	hi
 801d4e8:	787b      	ldrbhi	r3, [r7, #1]
 801d4ea:	3701      	addls	r7, #1
 801d4ec:	b29b      	uxthls	r3, r3
 801d4ee:	3702      	addhi	r7, #2
 801d4f0:	b184      	cbz	r4, 801d514 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801d4f2:	429c      	cmp	r4, r3
 801d4f4:	bf95      	itete	ls
 801d4f6:	1b1c      	subls	r4, r3, r4
 801d4f8:	1ae4      	subhi	r4, r4, r3
 801d4fa:	fa1f fa84 	uxthls.w	sl, r4
 801d4fe:	b2a4      	uxthhi	r4, r4
 801d500:	bf87      	ittee	hi
 801d502:	46c4      	movhi	ip, r8
 801d504:	f04f 0a00 	movhi.w	sl, #0
 801d508:	fa1f fc89 	uxthls.w	ip, r9
 801d50c:	2400      	movls	r4, #0
 801d50e:	4653      	mov	r3, sl
 801d510:	46e0      	mov	r8, ip
 801d512:	e7dc      	b.n	801d4ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801d514:	2204      	movs	r2, #4
 801d516:	4615      	mov	r5, r2
 801d518:	9905      	ldr	r1, [sp, #20]
 801d51a:	9a01      	ldr	r2, [sp, #4]
 801d51c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d520:	9903      	ldr	r1, [sp, #12]
 801d522:	588a      	ldr	r2, [r1, r2]
 801d524:	4543      	cmp	r3, r8
 801d526:	bf27      	ittee	cs
 801d528:	eba3 0a08 	subcs.w	sl, r3, r8
 801d52c:	46c6      	movcs	lr, r8
 801d52e:	eba8 0c03 	subcc.w	ip, r8, r3
 801d532:	469e      	movcc	lr, r3
 801d534:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801d538:	bf27      	ittee	cs
 801d53a:	fa1f fa8a 	uxthcs.w	sl, sl
 801d53e:	46a4      	movcs	ip, r4
 801d540:	fa1f fc8c 	uxthcc.w	ip, ip
 801d544:	46a2      	movcc	sl, r4
 801d546:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801d54a:	2900      	cmp	r1, #0
 801d54c:	d066      	beq.n	801d61c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801d54e:	29ff      	cmp	r1, #255	; 0xff
 801d550:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d554:	d114      	bne.n	801d580 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d556:	9d02      	ldr	r5, [sp, #8]
 801d558:	2dff      	cmp	r5, #255	; 0xff
 801d55a:	d111      	bne.n	801d580 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d55c:	0951      	lsrs	r1, r2, #5
 801d55e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d562:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d566:	f026 0607 	bic.w	r6, r6, #7
 801d56a:	430e      	orrs	r6, r1
 801d56c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d570:	4316      	orrs	r6, r2
 801d572:	b2b6      	uxth	r6, r6
 801d574:	4486      	add	lr, r0
 801d576:	4586      	cmp	lr, r0
 801d578:	d051      	beq.n	801d61e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d57a:	f820 6b02 	strh.w	r6, [r0], #2
 801d57e:	e7fa      	b.n	801d576 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801d580:	9d02      	ldr	r5, [sp, #8]
 801d582:	4369      	muls	r1, r5
 801d584:	1c4d      	adds	r5, r1, #1
 801d586:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801d58a:	122d      	asrs	r5, r5, #8
 801d58c:	ea6f 0b05 	mvn.w	fp, r5
 801d590:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d594:	b2ad      	uxth	r5, r5
 801d596:	b2f6      	uxtb	r6, r6
 801d598:	b2d2      	uxtb	r2, r2
 801d59a:	fb11 f105 	smulbb	r1, r1, r5
 801d59e:	fb16 f605 	smulbb	r6, r6, r5
 801d5a2:	fb12 f205 	smulbb	r2, r2, r5
 801d5a6:	b289      	uxth	r1, r1
 801d5a8:	b2b6      	uxth	r6, r6
 801d5aa:	b292      	uxth	r2, r2
 801d5ac:	9106      	str	r1, [sp, #24]
 801d5ae:	9607      	str	r6, [sp, #28]
 801d5b0:	9208      	str	r2, [sp, #32]
 801d5b2:	4486      	add	lr, r0
 801d5b4:	fa5f fb8b 	uxtb.w	fp, fp
 801d5b8:	4586      	cmp	lr, r0
 801d5ba:	d030      	beq.n	801d61e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d5bc:	8802      	ldrh	r2, [r0, #0]
 801d5be:	9906      	ldr	r1, [sp, #24]
 801d5c0:	1216      	asrs	r6, r2, #8
 801d5c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d5c6:	10d5      	asrs	r5, r2, #3
 801d5c8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d5cc:	fb06 160b 	mla	r6, r6, fp, r1
 801d5d0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d5d4:	9907      	ldr	r1, [sp, #28]
 801d5d6:	00d2      	lsls	r2, r2, #3
 801d5d8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d5dc:	fb05 150b 	mla	r5, r5, fp, r1
 801d5e0:	b2d2      	uxtb	r2, r2
 801d5e2:	9908      	ldr	r1, [sp, #32]
 801d5e4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d5e8:	b2b6      	uxth	r6, r6
 801d5ea:	fb02 120b 	mla	r2, r2, fp, r1
 801d5ee:	b292      	uxth	r2, r2
 801d5f0:	1c71      	adds	r1, r6, #1
 801d5f2:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801d5f6:	1c51      	adds	r1, r2, #1
 801d5f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d5fc:	b2ad      	uxth	r5, r5
 801d5fe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d602:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d606:	4316      	orrs	r6, r2
 801d608:	1c6a      	adds	r2, r5, #1
 801d60a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d60e:	096d      	lsrs	r5, r5, #5
 801d610:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d614:	432e      	orrs	r6, r5
 801d616:	f820 6b02 	strh.w	r6, [r0], #2
 801d61a:	e7cd      	b.n	801d5b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801d61c:	4470      	add	r0, lr
 801d61e:	4543      	cmp	r3, r8
 801d620:	f4ff af75 	bcc.w	801d50e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d624:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d628:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d62a:	fa1f fc89 	uxth.w	ip, r9
 801d62e:	eba4 040c 	sub.w	r4, r4, ip
 801d632:	881b      	ldrh	r3, [r3, #0]
 801d634:	b2a4      	uxth	r4, r4
 801d636:	2c00      	cmp	r4, #0
 801d638:	eba3 0309 	sub.w	r3, r3, r9
 801d63c:	bf18      	it	ne
 801d63e:	f04f 0c00 	movne.w	ip, #0
 801d642:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d646:	e762      	b.n	801d50e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d648:	4b03      	ldr	r3, [pc, #12]	; (801d658 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d64a:	6818      	ldr	r0, [r3, #0]
 801d64c:	6803      	ldr	r3, [r0, #0]
 801d64e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d650:	4798      	blx	r3
 801d652:	b00f      	add	sp, #60	; 0x3c
 801d654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d658:	200138b4 	.word	0x200138b4
 801d65c:	200138ae 	.word	0x200138ae

0801d660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d664:	b093      	sub	sp, #76	; 0x4c
 801d666:	461c      	mov	r4, r3
 801d668:	9205      	str	r2, [sp, #20]
 801d66a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801d66e:	9101      	str	r1, [sp, #4]
 801d670:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d672:	9202      	str	r2, [sp, #8]
 801d674:	2a00      	cmp	r2, #0
 801d676:	f000 812c 	beq.w	801d8d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d67a:	6820      	ldr	r0, [r4, #0]
 801d67c:	6861      	ldr	r1, [r4, #4]
 801d67e:	aa0e      	add	r2, sp, #56	; 0x38
 801d680:	c203      	stmia	r2!, {r0, r1}
 801d682:	6818      	ldr	r0, [r3, #0]
 801d684:	6859      	ldr	r1, [r3, #4]
 801d686:	aa10      	add	r2, sp, #64	; 0x40
 801d688:	c203      	stmia	r2!, {r0, r1}
 801d68a:	a80e      	add	r0, sp, #56	; 0x38
 801d68c:	f7f8 fe88 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d690:	4621      	mov	r1, r4
 801d692:	a810      	add	r0, sp, #64	; 0x40
 801d694:	f7f8 fec8 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d698:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d69c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801d6a0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801d6a4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d6a8:	bfde      	ittt	le
 801d6aa:	b2b3      	uxthle	r3, r6
 801d6ac:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d6b0:	fb92 f3f3 	sdivle	r3, r2, r3
 801d6b4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d6b8:	bfc8      	it	gt
 801d6ba:	2301      	movgt	r3, #1
 801d6bc:	fb92 f1f3 	sdiv	r1, r2, r3
 801d6c0:	fa1f fc81 	uxth.w	ip, r1
 801d6c4:	fb0c 2413 	mls	r4, ip, r3, r2
 801d6c8:	fb14 f406 	smulbb	r4, r4, r6
 801d6cc:	441d      	add	r5, r3
 801d6ce:	4404      	add	r4, r0
 801d6d0:	4661      	mov	r1, ip
 801d6d2:	3d01      	subs	r5, #1
 801d6d4:	b2a4      	uxth	r4, r4
 801d6d6:	fb95 f5f3 	sdiv	r5, r5, r3
 801d6da:	b131      	cbz	r1, 801d6ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801d6dc:	9b05      	ldr	r3, [sp, #20]
 801d6de:	9901      	ldr	r1, [sp, #4]
 801d6e0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d6e4:	ba1b      	rev	r3, r3
 801d6e6:	4419      	add	r1, r3
 801d6e8:	9101      	str	r1, [sp, #4]
 801d6ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d6ee:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801d6f2:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801d6f6:	4418      	add	r0, r3
 801d6f8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801d6fc:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801d700:	441a      	add	r2, r3
 801d702:	4b75      	ldr	r3, [pc, #468]	; (801d8d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d704:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801d708:	6818      	ldr	r0, [r3, #0]
 801d70a:	6803      	ldr	r3, [r0, #0]
 801d70c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d70e:	4798      	blx	r3
 801d710:	4972      	ldr	r1, [pc, #456]	; (801d8dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d712:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801d716:	880b      	ldrh	r3, [r1, #0]
 801d718:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d71c:	910d      	str	r1, [sp, #52]	; 0x34
 801d71e:	fb03 c202 	mla	r2, r3, r2, ip
 801d722:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d726:	4373      	muls	r3, r6
 801d728:	b2ad      	uxth	r5, r5
 801d72a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d72e:	00ad      	lsls	r5, r5, #2
 801d730:	9308      	str	r3, [sp, #32]
 801d732:	1d2b      	adds	r3, r5, #4
 801d734:	9309      	str	r3, [sp, #36]	; 0x24
 801d736:	9b02      	ldr	r3, [sp, #8]
 801d738:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d73c:	9106      	str	r1, [sp, #24]
 801d73e:	43da      	mvns	r2, r3
 801d740:	2c00      	cmp	r4, #0
 801d742:	bf0c      	ite	eq
 801d744:	46dc      	moveq	ip, fp
 801d746:	f04f 0c00 	movne.w	ip, #0
 801d74a:	2300      	movs	r3, #0
 801d74c:	b2d2      	uxtb	r2, r2
 801d74e:	fa1f fc8c 	uxth.w	ip, ip
 801d752:	9303      	str	r3, [sp, #12]
 801d754:	9207      	str	r2, [sp, #28]
 801d756:	9a08      	ldr	r2, [sp, #32]
 801d758:	4282      	cmp	r2, r0
 801d75a:	f240 80b5 	bls.w	801d8c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d75e:	b963      	cbnz	r3, 801d77a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d760:	9b01      	ldr	r3, [sp, #4]
 801d762:	781a      	ldrb	r2, [r3, #0]
 801d764:	0993      	lsrs	r3, r2, #6
 801d766:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d76a:	9203      	str	r2, [sp, #12]
 801d76c:	1e5a      	subs	r2, r3, #1
 801d76e:	2a02      	cmp	r2, #2
 801d770:	d815      	bhi.n	801d79e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d772:	9a01      	ldr	r2, [sp, #4]
 801d774:	3201      	adds	r2, #1
 801d776:	9201      	str	r2, [sp, #4]
 801d778:	b29b      	uxth	r3, r3
 801d77a:	b1b4      	cbz	r4, 801d7aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801d77c:	429c      	cmp	r4, r3
 801d77e:	bf95      	itete	ls
 801d780:	1b1c      	subls	r4, r3, r4
 801d782:	1ae4      	subhi	r4, r4, r3
 801d784:	fa1f f884 	uxthls.w	r8, r4
 801d788:	b2a4      	uxthhi	r4, r4
 801d78a:	bf87      	ittee	hi
 801d78c:	4666      	movhi	r6, ip
 801d78e:	f04f 0800 	movhi.w	r8, #0
 801d792:	fa1f f68b 	uxthls.w	r6, fp
 801d796:	2400      	movls	r4, #0
 801d798:	4643      	mov	r3, r8
 801d79a:	46b4      	mov	ip, r6
 801d79c:	e7db      	b.n	801d756 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d79e:	9a01      	ldr	r2, [sp, #4]
 801d7a0:	9b01      	ldr	r3, [sp, #4]
 801d7a2:	3202      	adds	r2, #2
 801d7a4:	785b      	ldrb	r3, [r3, #1]
 801d7a6:	9201      	str	r2, [sp, #4]
 801d7a8:	e7e7      	b.n	801d77a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d7aa:	2203      	movs	r2, #3
 801d7ac:	4615      	mov	r5, r2
 801d7ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d7b0:	9a03      	ldr	r2, [sp, #12]
 801d7b2:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d7b6:	9905      	ldr	r1, [sp, #20]
 801d7b8:	4563      	cmp	r3, ip
 801d7ba:	eb01 0502 	add.w	r5, r1, r2
 801d7be:	9902      	ldr	r1, [sp, #8]
 801d7c0:	bf29      	itett	cs
 801d7c2:	eba3 080c 	subcs.w	r8, r3, ip
 801d7c6:	ebac 0603 	subcc.w	r6, ip, r3
 801d7ca:	fa1f f888 	uxthcs.w	r8, r8
 801d7ce:	46e1      	movcs	r9, ip
 801d7d0:	bf2f      	iteee	cs
 801d7d2:	4626      	movcs	r6, r4
 801d7d4:	b2b6      	uxthcc	r6, r6
 801d7d6:	4699      	movcc	r9, r3
 801d7d8:	46a0      	movcc	r8, r4
 801d7da:	29ff      	cmp	r1, #255	; 0xff
 801d7dc:	d04a      	beq.n	801d874 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801d7de:	9f06      	ldr	r7, [sp, #24]
 801d7e0:	78a9      	ldrb	r1, [r5, #2]
 801d7e2:	9004      	str	r0, [sp, #16]
 801d7e4:	4379      	muls	r1, r7
 801d7e6:	910a      	str	r1, [sp, #40]	; 0x28
 801d7e8:	7869      	ldrb	r1, [r5, #1]
 801d7ea:	4379      	muls	r1, r7
 801d7ec:	910b      	str	r1, [sp, #44]	; 0x2c
 801d7ee:	9905      	ldr	r1, [sp, #20]
 801d7f0:	5c8a      	ldrb	r2, [r1, r2]
 801d7f2:	437a      	muls	r2, r7
 801d7f4:	920c      	str	r2, [sp, #48]	; 0x30
 801d7f6:	46ca      	mov	sl, r9
 801d7f8:	f1ba 0f00 	cmp.w	sl, #0
 801d7fc:	d03d      	beq.n	801d87a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d7fe:	9a04      	ldr	r2, [sp, #16]
 801d800:	9f07      	ldr	r7, [sp, #28]
 801d802:	8812      	ldrh	r2, [r2, #0]
 801d804:	1215      	asrs	r5, r2, #8
 801d806:	46be      	mov	lr, r7
 801d808:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d80c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d80e:	10d1      	asrs	r1, r2, #3
 801d810:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d814:	fb05 750e 	mla	r5, r5, lr, r7
 801d818:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d81c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d81e:	00d2      	lsls	r2, r2, #3
 801d820:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d824:	fb01 710e 	mla	r1, r1, lr, r7
 801d828:	b2d2      	uxtb	r2, r2
 801d82a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d82c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d830:	b2ad      	uxth	r5, r5
 801d832:	fb02 720e 	mla	r2, r2, lr, r7
 801d836:	b292      	uxth	r2, r2
 801d838:	f105 0e01 	add.w	lr, r5, #1
 801d83c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d840:	f102 0e01 	add.w	lr, r2, #1
 801d844:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d848:	b289      	uxth	r1, r1
 801d84a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d84e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d852:	4315      	orrs	r5, r2
 801d854:	1c4a      	adds	r2, r1, #1
 801d856:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d85a:	0949      	lsrs	r1, r1, #5
 801d85c:	9a04      	ldr	r2, [sp, #16]
 801d85e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d862:	430d      	orrs	r5, r1
 801d864:	f822 5b02 	strh.w	r5, [r2], #2
 801d868:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d86c:	9204      	str	r2, [sp, #16]
 801d86e:	fa1f fa8a 	uxth.w	sl, sl
 801d872:	e7c1      	b.n	801d7f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801d874:	4649      	mov	r1, r9
 801d876:	4686      	mov	lr, r0
 801d878:	b999      	cbnz	r1, 801d8a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d87a:	4563      	cmp	r3, ip
 801d87c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d880:	d38a      	bcc.n	801d798 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d882:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801d886:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d888:	fa1f f68b 	uxth.w	r6, fp
 801d88c:	1ba4      	subs	r4, r4, r6
 801d88e:	881b      	ldrh	r3, [r3, #0]
 801d890:	b2a4      	uxth	r4, r4
 801d892:	2c00      	cmp	r4, #0
 801d894:	eba3 030b 	sub.w	r3, r3, fp
 801d898:	bf18      	it	ne
 801d89a:	2600      	movne	r6, #0
 801d89c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8a0:	e77a      	b.n	801d798 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d8a2:	78aa      	ldrb	r2, [r5, #2]
 801d8a4:	4f0e      	ldr	r7, [pc, #56]	; (801d8e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d8a6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d8aa:	786a      	ldrb	r2, [r5, #1]
 801d8ac:	00d2      	lsls	r2, r2, #3
 801d8ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8b2:	ea4a 0202 	orr.w	r2, sl, r2
 801d8b6:	f895 a000 	ldrb.w	sl, [r5]
 801d8ba:	3901      	subs	r1, #1
 801d8bc:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d8c0:	f82e 2b02 	strh.w	r2, [lr], #2
 801d8c4:	b289      	uxth	r1, r1
 801d8c6:	e7d7      	b.n	801d878 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d8c8:	4b03      	ldr	r3, [pc, #12]	; (801d8d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d8ca:	6818      	ldr	r0, [r3, #0]
 801d8cc:	6803      	ldr	r3, [r0, #0]
 801d8ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d8d0:	4798      	blx	r3
 801d8d2:	b013      	add	sp, #76	; 0x4c
 801d8d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d8d8:	200138b4 	.word	0x200138b4
 801d8dc:	200138ae 	.word	0x200138ae
 801d8e0:	fffff800 	.word	0xfffff800

0801d8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d8e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8e8:	b09d      	sub	sp, #116	; 0x74
 801d8ea:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801d8ee:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d8f2:	920e      	str	r2, [sp, #56]	; 0x38
 801d8f4:	461c      	mov	r4, r3
 801d8f6:	4683      	mov	fp, r0
 801d8f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d8fa:	2a00      	cmp	r2, #0
 801d8fc:	f000 81e0 	beq.w	801dcc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d900:	6820      	ldr	r0, [r4, #0]
 801d902:	6861      	ldr	r1, [r4, #4]
 801d904:	aa18      	add	r2, sp, #96	; 0x60
 801d906:	c203      	stmia	r2!, {r0, r1}
 801d908:	6818      	ldr	r0, [r3, #0]
 801d90a:	6859      	ldr	r1, [r3, #4]
 801d90c:	aa1a      	add	r2, sp, #104	; 0x68
 801d90e:	c203      	stmia	r2!, {r0, r1}
 801d910:	a818      	add	r0, sp, #96	; 0x60
 801d912:	f7f8 fd45 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d916:	4621      	mov	r1, r4
 801d918:	a81a      	add	r0, sp, #104	; 0x68
 801d91a:	f7f8 fd85 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d91e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d922:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d926:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d92a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d92e:	bfd7      	itett	le
 801d930:	b29a      	uxthle	r2, r3
 801d932:	2201      	movgt	r2, #1
 801d934:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d938:	fb91 f2f2 	sdivle	r2, r1, r2
 801d93c:	9202      	str	r2, [sp, #8]
 801d93e:	9802      	ldr	r0, [sp, #8]
 801d940:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801d944:	fb92 f0f0 	sdiv	r0, r2, r0
 801d948:	b280      	uxth	r0, r0
 801d94a:	900f      	str	r0, [sp, #60]	; 0x3c
 801d94c:	9902      	ldr	r1, [sp, #8]
 801d94e:	9802      	ldr	r0, [sp, #8]
 801d950:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d952:	440c      	add	r4, r1
 801d954:	fb05 2510 	mls	r5, r5, r0, r2
 801d958:	fb15 f503 	smulbb	r5, r5, r3
 801d95c:	3c01      	subs	r4, #1
 801d95e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801d962:	fb94 f4f1 	sdiv	r4, r4, r1
 801d966:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801d96a:	440d      	add	r5, r1
 801d96c:	4419      	add	r1, r3
 801d96e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801d972:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801d976:	441a      	add	r2, r3
 801d978:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d97c:	9306      	str	r3, [sp, #24]
 801d97e:	4bb3      	ldr	r3, [pc, #716]	; (801dc4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801d980:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801d984:	6818      	ldr	r0, [r3, #0]
 801d986:	6803      	ldr	r3, [r0, #0]
 801d988:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d98a:	4798      	blx	r3
 801d98c:	4bb0      	ldr	r3, [pc, #704]	; (801dc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801d98e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801d992:	881a      	ldrh	r2, [r3, #0]
 801d994:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801d998:	9316      	str	r3, [sp, #88]	; 0x58
 801d99a:	fb02 7101 	mla	r1, r2, r1, r7
 801d99e:	3401      	adds	r4, #1
 801d9a0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d9a4:	b2a4      	uxth	r4, r4
 801d9a6:	4356      	muls	r6, r2
 801d9a8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d9ac:	00a4      	lsls	r4, r4, #2
 801d9ae:	920a      	str	r2, [sp, #40]	; 0x28
 801d9b0:	1d22      	adds	r2, r4, #4
 801d9b2:	b2ad      	uxth	r5, r5
 801d9b4:	9213      	str	r2, [sp, #76]	; 0x4c
 801d9b6:	4ba7      	ldr	r3, [pc, #668]	; (801dc54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d9b8:	9a06      	ldr	r2, [sp, #24]
 801d9ba:	2d00      	cmp	r5, #0
 801d9bc:	bf0c      	ite	eq
 801d9be:	4611      	moveq	r1, r2
 801d9c0:	2100      	movne	r1, #0
 801d9c2:	2200      	movs	r2, #0
 801d9c4:	eba3 030b 	sub.w	r3, r3, fp
 801d9c8:	b289      	uxth	r1, r1
 801d9ca:	920d      	str	r2, [sp, #52]	; 0x34
 801d9cc:	9317      	str	r3, [sp, #92]	; 0x5c
 801d9ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d9d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d9d2:	fa12 f383 	uxtah	r3, r2, r3
 801d9d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d9d8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d9dc:	3304      	adds	r3, #4
 801d9de:	9308      	str	r3, [sp, #32]
 801d9e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d9e2:	4543      	cmp	r3, r8
 801d9e4:	f240 8167 	bls.w	801dcb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d9e8:	9a02      	ldr	r2, [sp, #8]
 801d9ea:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d9ee:	fbb5 f3f3 	udiv	r3, r5, r3
 801d9f2:	1ad3      	subs	r3, r2, r3
 801d9f4:	b29b      	uxth	r3, r3
 801d9f6:	9314      	str	r3, [sp, #80]	; 0x50
 801d9f8:	9b08      	ldr	r3, [sp, #32]
 801d9fa:	9808      	ldr	r0, [sp, #32]
 801d9fc:	785a      	ldrb	r2, [r3, #1]
 801d9fe:	789b      	ldrb	r3, [r3, #2]
 801da00:	7800      	ldrb	r0, [r0, #0]
 801da02:	9010      	str	r0, [sp, #64]	; 0x40
 801da04:	021b      	lsls	r3, r3, #8
 801da06:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801da0a:	9a08      	ldr	r2, [sp, #32]
 801da0c:	78d2      	ldrb	r2, [r2, #3]
 801da0e:	4313      	orrs	r3, r2
 801da10:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801da12:	3001      	adds	r0, #1
 801da14:	441a      	add	r2, r3
 801da16:	9007      	str	r0, [sp, #28]
 801da18:	1c50      	adds	r0, r2, #1
 801da1a:	9005      	str	r0, [sp, #20]
 801da1c:	7852      	ldrb	r2, [r2, #1]
 801da1e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801da20:	0212      	lsls	r2, r2, #8
 801da22:	5cc3      	ldrb	r3, [r0, r3]
 801da24:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801da28:	431a      	orrs	r2, r3
 801da2a:	b293      	uxth	r3, r2
 801da2c:	930b      	str	r3, [sp, #44]	; 0x2c
 801da2e:	2300      	movs	r3, #0
 801da30:	9309      	str	r3, [sp, #36]	; 0x24
 801da32:	2301      	movs	r3, #1
 801da34:	9301      	str	r3, [sp, #4]
 801da36:	9304      	str	r3, [sp, #16]
 801da38:	2300      	movs	r3, #0
 801da3a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801da3e:	9303      	str	r3, [sp, #12]
 801da40:	f04f 0e01 	mov.w	lr, #1
 801da44:	2d00      	cmp	r5, #0
 801da46:	d07c      	beq.n	801db42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801da48:	45ae      	cmp	lr, r5
 801da4a:	d26b      	bcs.n	801db24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801da4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801da4e:	eba5 050e 	sub.w	r5, r5, lr
 801da52:	4543      	cmp	r3, r8
 801da54:	b2ad      	uxth	r5, r5
 801da56:	460c      	mov	r4, r1
 801da58:	d802      	bhi.n	801da60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801da5a:	e070      	b.n	801db3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801da5c:	2b00      	cmp	r3, #0
 801da5e:	d15c      	bne.n	801db1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801da60:	9b05      	ldr	r3, [sp, #20]
 801da62:	9a04      	ldr	r2, [sp, #16]
 801da64:	785b      	ldrb	r3, [r3, #1]
 801da66:	9904      	ldr	r1, [sp, #16]
 801da68:	f1c2 0207 	rsb	r2, r2, #7
 801da6c:	4093      	lsls	r3, r2
 801da6e:	005b      	lsls	r3, r3, #1
 801da70:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801da74:	9b05      	ldr	r3, [sp, #20]
 801da76:	781b      	ldrb	r3, [r3, #0]
 801da78:	410b      	asrs	r3, r1
 801da7a:	3101      	adds	r1, #1
 801da7c:	b2c9      	uxtb	r1, r1
 801da7e:	2908      	cmp	r1, #8
 801da80:	9104      	str	r1, [sp, #16]
 801da82:	9905      	ldr	r1, [sp, #20]
 801da84:	bf0a      	itet	eq
 801da86:	3102      	addeq	r1, #2
 801da88:	3101      	addne	r1, #1
 801da8a:	9105      	streq	r1, [sp, #20]
 801da8c:	b2db      	uxtb	r3, r3
 801da8e:	bf0a      	itet	eq
 801da90:	2100      	moveq	r1, #0
 801da92:	9105      	strne	r1, [sp, #20]
 801da94:	9104      	streq	r1, [sp, #16]
 801da96:	4313      	orrs	r3, r2
 801da98:	9910      	ldr	r1, [sp, #64]	; 0x40
 801da9a:	b29a      	uxth	r2, r3
 801da9c:	4291      	cmp	r1, r2
 801da9e:	d30a      	bcc.n	801dab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801daa0:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801daa4:	2301      	movs	r3, #1
 801daa6:	9907      	ldr	r1, [sp, #28]
 801daa8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801daac:	d30f      	bcc.n	801dace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801daae:	2100      	movs	r1, #0
 801dab0:	9301      	str	r3, [sp, #4]
 801dab2:	9103      	str	r1, [sp, #12]
 801dab4:	e032      	b.n	801db1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801dab6:	9b07      	ldr	r3, [sp, #28]
 801dab8:	429a      	cmp	r2, r3
 801daba:	d318      	bcc.n	801daee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801dabc:	9b01      	ldr	r3, [sp, #4]
 801dabe:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801dac2:	445b      	add	r3, fp
 801dac4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801dac8:	9b01      	ldr	r3, [sp, #4]
 801daca:	3301      	adds	r3, #1
 801dacc:	b29b      	uxth	r3, r3
 801dace:	9907      	ldr	r1, [sp, #28]
 801dad0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801dad4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801dad8:	7108      	strb	r0, [r1, #4]
 801dada:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801dadc:	80c8      	strh	r0, [r1, #6]
 801dade:	9801      	ldr	r0, [sp, #4]
 801dae0:	3001      	adds	r0, #1
 801dae2:	7148      	strb	r0, [r1, #5]
 801dae4:	9907      	ldr	r1, [sp, #28]
 801dae6:	3101      	adds	r1, #1
 801dae8:	b289      	uxth	r1, r1
 801daea:	9107      	str	r1, [sp, #28]
 801daec:	e7df      	b.n	801daae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801daee:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801daf2:	4611      	mov	r1, r2
 801daf4:	795b      	ldrb	r3, [r3, #5]
 801daf6:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801dafa:	4458      	add	r0, fp
 801dafc:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801dafe:	4406      	add	r6, r0
 801db00:	2e00      	cmp	r6, #0
 801db02:	dd06      	ble.n	801db12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801db04:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801db08:	790e      	ldrb	r6, [r1, #4]
 801db0a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801db0e:	88c9      	ldrh	r1, [r1, #6]
 801db10:	e7f4      	b.n	801dafc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801db12:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801db16:	b29b      	uxth	r3, r3
 801db18:	e7c5      	b.n	801daa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801db1a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801db1c:	920b      	str	r2, [sp, #44]	; 0x2c
 801db1e:	4621      	mov	r1, r4
 801db20:	469e      	mov	lr, r3
 801db22:	e78f      	b.n	801da44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801db24:	9a03      	ldr	r2, [sp, #12]
 801db26:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801db2a:	442a      	add	r2, r5
 801db2c:	ebae 0305 	sub.w	r3, lr, r5
 801db30:	b292      	uxth	r2, r2
 801db32:	b29b      	uxth	r3, r3
 801db34:	9203      	str	r2, [sp, #12]
 801db36:	2500      	movs	r5, #0
 801db38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801db3a:	4542      	cmp	r2, r8
 801db3c:	d88e      	bhi.n	801da5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801db3e:	4621      	mov	r1, r4
 801db40:	e74e      	b.n	801d9e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801db42:	458e      	cmp	lr, r1
 801db44:	bf29      	itett	cs
 801db46:	ebae 0301 	subcs.w	r3, lr, r1
 801db4a:	eba1 040e 	subcc.w	r4, r1, lr
 801db4e:	b29b      	uxthcs	r3, r3
 801db50:	910c      	strcs	r1, [sp, #48]	; 0x30
 801db52:	bf2f      	iteee	cs
 801db54:	462c      	movcs	r4, r5
 801db56:	b2a4      	uxthcc	r4, r4
 801db58:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801db5c:	462b      	movcc	r3, r5
 801db5e:	f04f 0900 	mov.w	r9, #0
 801db62:	9a03      	ldr	r2, [sp, #12]
 801db64:	980c      	ldr	r0, [sp, #48]	; 0x30
 801db66:	444a      	add	r2, r9
 801db68:	4548      	cmp	r0, r9
 801db6a:	b292      	uxth	r2, r2
 801db6c:	d074      	beq.n	801dc58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801db6e:	445a      	add	r2, fp
 801db70:	2004      	movs	r0, #4
 801db72:	4605      	mov	r5, r0
 801db74:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801db78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801db7a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801db7e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db80:	5880      	ldr	r0, [r0, r2]
 801db82:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801db86:	d014      	beq.n	801dbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801db88:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801db8c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801db90:	d112      	bne.n	801dbb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801db92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801db94:	2aff      	cmp	r2, #255	; 0xff
 801db96:	d10f      	bne.n	801dbb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801db98:	0942      	lsrs	r2, r0, #5
 801db9a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801db9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dba2:	f025 0507 	bic.w	r5, r5, #7
 801dba6:	4315      	orrs	r5, r2
 801dba8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801dbac:	4305      	orrs	r5, r0
 801dbae:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801dbb2:	f109 0901 	add.w	r9, r9, #1
 801dbb6:	e7d4      	b.n	801db62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801dbb8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801dbbc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801dbc0:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801dbc4:	9215      	str	r2, [sp, #84]	; 0x54
 801dbc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dbc8:	fb02 fa0a 	mul.w	sl, r2, sl
 801dbcc:	f10a 0201 	add.w	r2, sl, #1
 801dbd0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801dbd4:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dbd8:	1212      	asrs	r2, r2, #8
 801dbda:	fa1f fa82 	uxth.w	sl, r2
 801dbde:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801dbe2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dbe6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dbea:	43d2      	mvns	r2, r2
 801dbec:	b2d2      	uxtb	r2, r2
 801dbee:	fb16 f60a 	smulbb	r6, r6, sl
 801dbf2:	fa5f fc8c 	uxtb.w	ip, ip
 801dbf6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dbfa:	b2c0      	uxtb	r0, r0
 801dbfc:	fb07 6702 	mla	r7, r7, r2, r6
 801dc00:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801dc04:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801dc06:	fb10 f00a 	smulbb	r0, r0, sl
 801dc0a:	fb0c 0002 	mla	r0, ip, r2, r0
 801dc0e:	b2ed      	uxtb	r5, r5
 801dc10:	b2bf      	uxth	r7, r7
 801dc12:	fb15 f50a 	smulbb	r5, r5, sl
 801dc16:	b280      	uxth	r0, r0
 801dc18:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801dc1c:	fb06 5602 	mla	r6, r6, r2, r5
 801dc20:	1c7a      	adds	r2, r7, #1
 801dc22:	1c45      	adds	r5, r0, #1
 801dc24:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801dc28:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dc2c:	b2b6      	uxth	r6, r6
 801dc2e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dc32:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801dc36:	432f      	orrs	r7, r5
 801dc38:	1c75      	adds	r5, r6, #1
 801dc3a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801dc3e:	096d      	lsrs	r5, r5, #5
 801dc40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dc44:	432f      	orrs	r7, r5
 801dc46:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801dc4a:	e7b2      	b.n	801dbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801dc4c:	200138b4 	.word	0x200138b4
 801dc50:	200138ae 	.word	0x200138ae
 801dc54:	fffff7fb 	.word	0xfffff7fb
 801dc58:	9203      	str	r2, [sp, #12]
 801dc5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dc5c:	458e      	cmp	lr, r1
 801dc5e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801dc62:	f4ff af68 	bcc.w	801db36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801dc66:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801dc68:	9906      	ldr	r1, [sp, #24]
 801dc6a:	8812      	ldrh	r2, [r2, #0]
 801dc6c:	1a52      	subs	r2, r2, r1
 801dc6e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801dc72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc74:	9914      	ldr	r1, [sp, #80]	; 0x50
 801dc76:	3201      	adds	r2, #1
 801dc78:	428a      	cmp	r2, r1
 801dc7a:	9209      	str	r2, [sp, #36]	; 0x24
 801dc7c:	d111      	bne.n	801dca2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801dc7e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801dc82:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801dc86:	9b06      	ldr	r3, [sp, #24]
 801dc88:	eba5 0509 	sub.w	r5, r5, r9
 801dc8c:	b2ad      	uxth	r5, r5
 801dc8e:	2d00      	cmp	r5, #0
 801dc90:	bf08      	it	eq
 801dc92:	4619      	moveq	r1, r3
 801dc94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dc96:	bf18      	it	ne
 801dc98:	2100      	movne	r1, #0
 801dc9a:	3301      	adds	r3, #1
 801dc9c:	930d      	str	r3, [sp, #52]	; 0x34
 801dc9e:	b289      	uxth	r1, r1
 801dca0:	e695      	b.n	801d9ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801dca2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801dca6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801dcaa:	1b2d      	subs	r5, r5, r4
 801dcac:	b2ad      	uxth	r5, r5
 801dcae:	2d00      	cmp	r5, #0
 801dcb0:	bf18      	it	ne
 801dcb2:	2400      	movne	r4, #0
 801dcb4:	e740      	b.n	801db38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801dcb6:	4b04      	ldr	r3, [pc, #16]	; (801dcc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801dcb8:	6818      	ldr	r0, [r3, #0]
 801dcba:	6803      	ldr	r3, [r0, #0]
 801dcbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcbe:	4798      	blx	r3
 801dcc0:	b01d      	add	sp, #116	; 0x74
 801dcc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcc6:	bf00      	nop
 801dcc8:	200138b4 	.word	0x200138b4

0801dccc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dcd0:	b09f      	sub	sp, #124	; 0x7c
 801dcd2:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801dcd6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801dcda:	920a      	str	r2, [sp, #40]	; 0x28
 801dcdc:	461d      	mov	r5, r3
 801dcde:	4604      	mov	r4, r0
 801dce0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dce2:	2a00      	cmp	r2, #0
 801dce4:	f000 81fa 	beq.w	801e0dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801dce8:	6828      	ldr	r0, [r5, #0]
 801dcea:	6869      	ldr	r1, [r5, #4]
 801dcec:	aa1a      	add	r2, sp, #104	; 0x68
 801dcee:	c203      	stmia	r2!, {r0, r1}
 801dcf0:	6818      	ldr	r0, [r3, #0]
 801dcf2:	6859      	ldr	r1, [r3, #4]
 801dcf4:	aa1c      	add	r2, sp, #112	; 0x70
 801dcf6:	c203      	stmia	r2!, {r0, r1}
 801dcf8:	a81a      	add	r0, sp, #104	; 0x68
 801dcfa:	f7f8 fb51 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcfe:	4629      	mov	r1, r5
 801dd00:	a81c      	add	r0, sp, #112	; 0x70
 801dd02:	f7f8 fb91 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd06:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801dd0a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801dd0e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801dd12:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801dd16:	bfd7      	itett	le
 801dd18:	b29a      	uxthle	r2, r3
 801dd1a:	2201      	movgt	r2, #1
 801dd1c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801dd20:	fb91 f2f2 	sdivle	r2, r1, r2
 801dd24:	9201      	str	r2, [sp, #4]
 801dd26:	9801      	ldr	r0, [sp, #4]
 801dd28:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801dd2c:	fb92 f0f0 	sdiv	r0, r2, r0
 801dd30:	b280      	uxth	r0, r0
 801dd32:	9010      	str	r0, [sp, #64]	; 0x40
 801dd34:	9901      	ldr	r1, [sp, #4]
 801dd36:	9801      	ldr	r0, [sp, #4]
 801dd38:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dd3a:	440e      	add	r6, r1
 801dd3c:	fb05 2510 	mls	r5, r5, r0, r2
 801dd40:	fb15 f503 	smulbb	r5, r5, r3
 801dd44:	3e01      	subs	r6, #1
 801dd46:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dd4a:	fb96 f6f1 	sdiv	r6, r6, r1
 801dd4e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801dd52:	440d      	add	r5, r1
 801dd54:	4419      	add	r1, r3
 801dd56:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801dd5a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801dd5e:	441a      	add	r2, r3
 801dd60:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801dd64:	9304      	str	r3, [sp, #16]
 801dd66:	4b96      	ldr	r3, [pc, #600]	; (801dfc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801dd68:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801dd6c:	6818      	ldr	r0, [r3, #0]
 801dd6e:	6803      	ldr	r3, [r0, #0]
 801dd70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dd72:	4798      	blx	r3
 801dd74:	4b93      	ldr	r3, [pc, #588]	; (801dfc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801dd76:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801dd7a:	881a      	ldrh	r2, [r3, #0]
 801dd7c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801dd80:	9318      	str	r3, [sp, #96]	; 0x60
 801dd82:	fb02 c101 	mla	r1, r2, r1, ip
 801dd86:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801dd8a:	4357      	muls	r7, r2
 801dd8c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801dd90:	3601      	adds	r6, #1
 801dd92:	920b      	str	r2, [sp, #44]	; 0x2c
 801dd94:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dd96:	4b8c      	ldr	r3, [pc, #560]	; (801dfc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801dd98:	b2b6      	uxth	r6, r6
 801dd9a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801dd9e:	1d32      	adds	r2, r6, #4
 801dda0:	9206      	str	r2, [sp, #24]
 801dda2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dda4:	43d2      	mvns	r2, r2
 801dda6:	b2d2      	uxtb	r2, r2
 801dda8:	b2ad      	uxth	r5, r5
 801ddaa:	9215      	str	r2, [sp, #84]	; 0x54
 801ddac:	9a04      	ldr	r2, [sp, #16]
 801ddae:	2d00      	cmp	r5, #0
 801ddb0:	bf0c      	ite	eq
 801ddb2:	4611      	moveq	r1, r2
 801ddb4:	2100      	movne	r1, #0
 801ddb6:	2200      	movs	r2, #0
 801ddb8:	1b1b      	subs	r3, r3, r4
 801ddba:	b289      	uxth	r1, r1
 801ddbc:	920d      	str	r2, [sp, #52]	; 0x34
 801ddbe:	9319      	str	r3, [sp, #100]	; 0x64
 801ddc0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ddc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ddc4:	fa12 f383 	uxtah	r3, r2, r3
 801ddc8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ddca:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ddce:	3304      	adds	r3, #4
 801ddd0:	9307      	str	r3, [sp, #28]
 801ddd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ddd4:	455b      	cmp	r3, fp
 801ddd6:	f240 817c 	bls.w	801e0d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801ddda:	9a01      	ldr	r2, [sp, #4]
 801dddc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801dde0:	fbb5 f3f3 	udiv	r3, r5, r3
 801dde4:	1ad3      	subs	r3, r2, r3
 801dde6:	b29b      	uxth	r3, r3
 801dde8:	9316      	str	r3, [sp, #88]	; 0x58
 801ddea:	9b07      	ldr	r3, [sp, #28]
 801ddec:	9807      	ldr	r0, [sp, #28]
 801ddee:	785a      	ldrb	r2, [r3, #1]
 801ddf0:	789b      	ldrb	r3, [r3, #2]
 801ddf2:	7800      	ldrb	r0, [r0, #0]
 801ddf4:	9011      	str	r0, [sp, #68]	; 0x44
 801ddf6:	021b      	lsls	r3, r3, #8
 801ddf8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ddfc:	9a07      	ldr	r2, [sp, #28]
 801ddfe:	78d2      	ldrb	r2, [r2, #3]
 801de00:	4313      	orrs	r3, r2
 801de02:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801de04:	3001      	adds	r0, #1
 801de06:	441a      	add	r2, r3
 801de08:	9005      	str	r0, [sp, #20]
 801de0a:	1c50      	adds	r0, r2, #1
 801de0c:	9003      	str	r0, [sp, #12]
 801de0e:	7852      	ldrb	r2, [r2, #1]
 801de10:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801de12:	0212      	lsls	r2, r2, #8
 801de14:	5cc3      	ldrb	r3, [r0, r3]
 801de16:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801de1a:	431a      	orrs	r2, r3
 801de1c:	b293      	uxth	r3, r2
 801de1e:	930c      	str	r3, [sp, #48]	; 0x30
 801de20:	2300      	movs	r3, #0
 801de22:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801de26:	9308      	str	r3, [sp, #32]
 801de28:	461a      	mov	r2, r3
 801de2a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801de2e:	930e      	str	r3, [sp, #56]	; 0x38
 801de30:	f04f 0801 	mov.w	r8, #1
 801de34:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801de38:	f8cd 8008 	str.w	r8, [sp, #8]
 801de3c:	46c4      	mov	ip, r8
 801de3e:	930f      	str	r3, [sp, #60]	; 0x3c
 801de40:	2d00      	cmp	r5, #0
 801de42:	d07c      	beq.n	801df3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801de44:	45ac      	cmp	ip, r5
 801de46:	d26c      	bcs.n	801df22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801de48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801de4a:	eba5 050c 	sub.w	r5, r5, ip
 801de4e:	455b      	cmp	r3, fp
 801de50:	b2ad      	uxth	r5, r5
 801de52:	4608      	mov	r0, r1
 801de54:	d802      	bhi.n	801de5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801de56:	e070      	b.n	801df3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801de58:	2b00      	cmp	r3, #0
 801de5a:	d15c      	bne.n	801df16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801de5c:	9b03      	ldr	r3, [sp, #12]
 801de5e:	9a02      	ldr	r2, [sp, #8]
 801de60:	785b      	ldrb	r3, [r3, #1]
 801de62:	9902      	ldr	r1, [sp, #8]
 801de64:	f1c2 0207 	rsb	r2, r2, #7
 801de68:	4093      	lsls	r3, r2
 801de6a:	005b      	lsls	r3, r3, #1
 801de6c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801de70:	9b03      	ldr	r3, [sp, #12]
 801de72:	781b      	ldrb	r3, [r3, #0]
 801de74:	410b      	asrs	r3, r1
 801de76:	3101      	adds	r1, #1
 801de78:	b2c9      	uxtb	r1, r1
 801de7a:	2908      	cmp	r1, #8
 801de7c:	9102      	str	r1, [sp, #8]
 801de7e:	9903      	ldr	r1, [sp, #12]
 801de80:	bf0a      	itet	eq
 801de82:	3102      	addeq	r1, #2
 801de84:	3101      	addne	r1, #1
 801de86:	9103      	streq	r1, [sp, #12]
 801de88:	b2db      	uxtb	r3, r3
 801de8a:	bf0a      	itet	eq
 801de8c:	2100      	moveq	r1, #0
 801de8e:	9103      	strne	r1, [sp, #12]
 801de90:	9102      	streq	r1, [sp, #8]
 801de92:	4313      	orrs	r3, r2
 801de94:	9911      	ldr	r1, [sp, #68]	; 0x44
 801de96:	b29a      	uxth	r2, r3
 801de98:	4291      	cmp	r1, r2
 801de9a:	d30a      	bcc.n	801deb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801de9c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801dea0:	2301      	movs	r3, #1
 801dea2:	9905      	ldr	r1, [sp, #20]
 801dea4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801dea8:	d30f      	bcc.n	801deca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801deaa:	2100      	movs	r1, #0
 801deac:	4698      	mov	r8, r3
 801deae:	9100      	str	r1, [sp, #0]
 801deb0:	e032      	b.n	801df18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801deb2:	9b05      	ldr	r3, [sp, #20]
 801deb4:	429a      	cmp	r2, r3
 801deb6:	d318      	bcc.n	801deea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801deb8:	eb04 0308 	add.w	r3, r4, r8
 801debc:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801dec0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801dec4:	f108 0301 	add.w	r3, r8, #1
 801dec8:	b29b      	uxth	r3, r3
 801deca:	9905      	ldr	r1, [sp, #20]
 801decc:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801ded0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801ded4:	710e      	strb	r6, [r1, #4]
 801ded6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ded8:	80ce      	strh	r6, [r1, #6]
 801deda:	f108 0601 	add.w	r6, r8, #1
 801dede:	714e      	strb	r6, [r1, #5]
 801dee0:	9905      	ldr	r1, [sp, #20]
 801dee2:	3101      	adds	r1, #1
 801dee4:	b289      	uxth	r1, r1
 801dee6:	9105      	str	r1, [sp, #20]
 801dee8:	e7df      	b.n	801deaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801deea:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801deee:	4611      	mov	r1, r2
 801def0:	795b      	ldrb	r3, [r3, #5]
 801def2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801def6:	4426      	add	r6, r4
 801def8:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801defa:	4437      	add	r7, r6
 801defc:	2f00      	cmp	r7, #0
 801defe:	dd06      	ble.n	801df0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801df00:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801df04:	790f      	ldrb	r7, [r1, #4]
 801df06:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801df0a:	88c9      	ldrh	r1, [r1, #6]
 801df0c:	e7f4      	b.n	801def8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801df0e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801df12:	b29b      	uxth	r3, r3
 801df14:	e7c5      	b.n	801dea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801df16:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801df18:	920c      	str	r2, [sp, #48]	; 0x30
 801df1a:	4601      	mov	r1, r0
 801df1c:	9a00      	ldr	r2, [sp, #0]
 801df1e:	469c      	mov	ip, r3
 801df20:	e78e      	b.n	801de40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801df22:	1957      	adds	r7, r2, r5
 801df24:	ebac 0305 	sub.w	r3, ip, r5
 801df28:	b2ba      	uxth	r2, r7
 801df2a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801df2e:	9200      	str	r2, [sp, #0]
 801df30:	b29b      	uxth	r3, r3
 801df32:	2500      	movs	r5, #0
 801df34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801df36:	455a      	cmp	r2, fp
 801df38:	d88e      	bhi.n	801de58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801df3a:	4601      	mov	r1, r0
 801df3c:	e749      	b.n	801ddd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801df3e:	458c      	cmp	ip, r1
 801df40:	bf2c      	ite	cs
 801df42:	4628      	movcs	r0, r5
 801df44:	462b      	movcc	r3, r5
 801df46:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801df48:	bf27      	ittee	cs
 801df4a:	9109      	strcs	r1, [sp, #36]	; 0x24
 801df4c:	ebac 0301 	subcs.w	r3, ip, r1
 801df50:	eba1 000c 	subcc.w	r0, r1, ip
 801df54:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801df58:	bf2c      	ite	cs
 801df5a:	b29b      	uxthcs	r3, r3
 801df5c:	b280      	uxthcc	r0, r0
 801df5e:	2dff      	cmp	r5, #255	; 0xff
 801df60:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801df62:	eb02 0705 	add.w	r7, r2, r5
 801df66:	b2bd      	uxth	r5, r7
 801df68:	9500      	str	r5, [sp, #0]
 801df6a:	d12f      	bne.n	801dfcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801df6c:	465e      	mov	r6, fp
 801df6e:	9d00      	ldr	r5, [sp, #0]
 801df70:	42aa      	cmp	r2, r5
 801df72:	f040 8084 	bne.w	801e07e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801df76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801df78:	458c      	cmp	ip, r1
 801df7a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801df7e:	d3d8      	bcc.n	801df32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801df80:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801df82:	9904      	ldr	r1, [sp, #16]
 801df84:	8812      	ldrh	r2, [r2, #0]
 801df86:	1a52      	subs	r2, r2, r1
 801df88:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801df8c:	9a08      	ldr	r2, [sp, #32]
 801df8e:	9916      	ldr	r1, [sp, #88]	; 0x58
 801df90:	3201      	adds	r2, #1
 801df92:	428a      	cmp	r2, r1
 801df94:	9208      	str	r2, [sp, #32]
 801df96:	f040 8092 	bne.w	801e0be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801df9a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801df9e:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801dfa2:	9b04      	ldr	r3, [sp, #16]
 801dfa4:	eba5 050c 	sub.w	r5, r5, ip
 801dfa8:	b2ad      	uxth	r5, r5
 801dfaa:	2d00      	cmp	r5, #0
 801dfac:	bf08      	it	eq
 801dfae:	4619      	moveq	r1, r3
 801dfb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dfb2:	bf18      	it	ne
 801dfb4:	2100      	movne	r1, #0
 801dfb6:	3301      	adds	r3, #1
 801dfb8:	930d      	str	r3, [sp, #52]	; 0x34
 801dfba:	b289      	uxth	r1, r1
 801dfbc:	e700      	b.n	801ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801dfbe:	bf00      	nop
 801dfc0:	200138b4 	.word	0x200138b4
 801dfc4:	200138ae 	.word	0x200138ae
 801dfc8:	fffff7fb 	.word	0xfffff7fb
 801dfcc:	46d9      	mov	r9, fp
 801dfce:	9d00      	ldr	r5, [sp, #0]
 801dfd0:	42aa      	cmp	r2, r5
 801dfd2:	d0d0      	beq.n	801df76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801dfd4:	1c55      	adds	r5, r2, #1
 801dfd6:	4422      	add	r2, r4
 801dfd8:	9517      	str	r5, [sp, #92]	; 0x5c
 801dfda:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801dfde:	9a06      	ldr	r2, [sp, #24]
 801dfe0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801dfe4:	4472      	add	r2, lr
 801dfe6:	9212      	str	r2, [sp, #72]	; 0x48
 801dfe8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801dfea:	f8b9 2000 	ldrh.w	r2, [r9]
 801dfee:	f897 a002 	ldrb.w	sl, [r7, #2]
 801dff2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801dff4:	1216      	asrs	r6, r2, #8
 801dff6:	fb1a fa07 	smulbb	sl, sl, r7
 801dffa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dffe:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e000:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e004:	fb06 a607 	mla	r6, r6, r7, sl
 801e008:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e00a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e00e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e010:	10d5      	asrs	r5, r2, #3
 801e012:	fb1a fa07 	smulbb	sl, sl, r7
 801e016:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e01a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e01c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e020:	fb05 a507 	mla	r5, r5, r7, sl
 801e024:	9f06      	ldr	r7, [sp, #24]
 801e026:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e02a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e02c:	00d2      	lsls	r2, r2, #3
 801e02e:	fb1e fe07 	smulbb	lr, lr, r7
 801e032:	b2d2      	uxtb	r2, r2
 801e034:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e036:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e03a:	b2b6      	uxth	r6, r6
 801e03c:	fb02 e207 	mla	r2, r2, r7, lr
 801e040:	b292      	uxth	r2, r2
 801e042:	b2ad      	uxth	r5, r5
 801e044:	f106 0a01 	add.w	sl, r6, #1
 801e048:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e04c:	f102 0e01 	add.w	lr, r2, #1
 801e050:	f105 0a01 	add.w	sl, r5, #1
 801e054:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e058:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e05c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e060:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e064:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e068:	ea4e 0606 	orr.w	r6, lr, r6
 801e06c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e070:	ea46 060a 	orr.w	r6, r6, sl
 801e074:	f829 6b02 	strh.w	r6, [r9], #2
 801e078:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e07c:	e7a7      	b.n	801dfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e07e:	f102 0e01 	add.w	lr, r2, #1
 801e082:	4422      	add	r2, r4
 801e084:	9f06      	ldr	r7, [sp, #24]
 801e086:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e08a:	9a06      	ldr	r2, [sp, #24]
 801e08c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e090:	eb02 0a05 	add.w	sl, r2, r5
 801e094:	4a13      	ldr	r2, [pc, #76]	; (801e0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e096:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e09a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e09e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e0a2:	00d2      	lsls	r2, r2, #3
 801e0a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e0a8:	ea49 0202 	orr.w	r2, r9, r2
 801e0ac:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e0b0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e0b4:	f826 2b02 	strh.w	r2, [r6], #2
 801e0b8:	fa1f f28e 	uxth.w	r2, lr
 801e0bc:	e757      	b.n	801df6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e0be:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e0c2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e0c6:	1a2d      	subs	r5, r5, r0
 801e0c8:	b2ad      	uxth	r5, r5
 801e0ca:	2d00      	cmp	r5, #0
 801e0cc:	bf18      	it	ne
 801e0ce:	2000      	movne	r0, #0
 801e0d0:	e730      	b.n	801df34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e0d2:	4b05      	ldr	r3, [pc, #20]	; (801e0e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e0d4:	6818      	ldr	r0, [r3, #0]
 801e0d6:	6803      	ldr	r3, [r0, #0]
 801e0d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e0da:	4798      	blx	r3
 801e0dc:	b01f      	add	sp, #124	; 0x7c
 801e0de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e0e2:	bf00      	nop
 801e0e4:	fffff800 	.word	0xfffff800
 801e0e8:	200138b4 	.word	0x200138b4

0801e0ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0f0:	b091      	sub	sp, #68	; 0x44
 801e0f2:	469b      	mov	fp, r3
 801e0f4:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e0f8:	4616      	mov	r6, r2
 801e0fa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e0fe:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e102:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e106:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e10a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e10e:	4604      	mov	r4, r0
 801e110:	460d      	mov	r5, r1
 801e112:	4640      	mov	r0, r8
 801e114:	4659      	mov	r1, fp
 801e116:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e11a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e11e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e122:	f7f3 f9df 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801e126:	4631      	mov	r1, r6
 801e128:	4640      	mov	r0, r8
 801e12a:	f7f3 f9db 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801e12e:	4b74      	ldr	r3, [pc, #464]	; (801e300 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e130:	8818      	ldrh	r0, [r3, #0]
 801e132:	4b74      	ldr	r3, [pc, #464]	; (801e304 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e134:	8819      	ldrh	r1, [r3, #0]
 801e136:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e13a:	2b00      	cmp	r3, #0
 801e13c:	b202      	sxth	r2, r0
 801e13e:	b20e      	sxth	r6, r1
 801e140:	da07      	bge.n	801e152 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e142:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e146:	4463      	add	r3, ip
 801e148:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e14c:	2300      	movs	r3, #0
 801e14e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e152:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e156:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e15a:	1ad2      	subs	r2, r2, r3
 801e15c:	4594      	cmp	ip, r2
 801e15e:	bfc4      	itt	gt
 801e160:	1ac2      	subgt	r2, r0, r3
 801e162:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e166:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e16a:	2a00      	cmp	r2, #0
 801e16c:	da07      	bge.n	801e17e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e16e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e172:	4462      	add	r2, ip
 801e174:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e178:	2200      	movs	r2, #0
 801e17a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e17e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e182:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e186:	eba6 060a 	sub.w	r6, r6, sl
 801e18a:	42b2      	cmp	r2, r6
 801e18c:	bfc4      	itt	gt
 801e18e:	eba1 020a 	subgt.w	r2, r1, sl
 801e192:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e196:	4a5c      	ldr	r2, [pc, #368]	; (801e308 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e198:	7812      	ldrb	r2, [r2, #0]
 801e19a:	b9a2      	cbnz	r2, 801e1c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e19c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e1a0:	4286      	cmp	r6, r0
 801e1a2:	4640      	mov	r0, r8
 801e1a4:	9303      	str	r3, [sp, #12]
 801e1a6:	bf14      	ite	ne
 801e1a8:	2600      	movne	r6, #0
 801e1aa:	2601      	moveq	r6, #1
 801e1ac:	f7f3 f9dd 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801e1b0:	9b03      	ldr	r3, [sp, #12]
 801e1b2:	b160      	cbz	r0, 801e1ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e1b4:	2300      	movs	r3, #0
 801e1b6:	8023      	strh	r3, [r4, #0]
 801e1b8:	8063      	strh	r3, [r4, #2]
 801e1ba:	80a3      	strh	r3, [r4, #4]
 801e1bc:	4620      	mov	r0, r4
 801e1be:	80e3      	strh	r3, [r4, #6]
 801e1c0:	b011      	add	sp, #68	; 0x44
 801e1c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1c6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e1ca:	428e      	cmp	r6, r1
 801e1cc:	e7e9      	b.n	801e1a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e1ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e1d2:	9205      	str	r2, [sp, #20]
 801e1d4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e1d8:	9206      	str	r2, [sp, #24]
 801e1da:	f8bb 2000 	ldrh.w	r2, [fp]
 801e1de:	900e      	str	r0, [sp, #56]	; 0x38
 801e1e0:	1a9b      	subs	r3, r3, r2
 801e1e2:	b21b      	sxth	r3, r3
 801e1e4:	9303      	str	r3, [sp, #12]
 801e1e6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e1ea:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e1ee:	ebaa 0a03 	sub.w	sl, sl, r3
 801e1f2:	fa0f f38a 	sxth.w	r3, sl
 801e1f6:	9304      	str	r3, [sp, #16]
 801e1f8:	9b03      	ldr	r3, [sp, #12]
 801e1fa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e1fe:	9b04      	ldr	r3, [sp, #16]
 801e200:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e204:	9b05      	ldr	r3, [sp, #20]
 801e206:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e20a:	a90e      	add	r1, sp, #56	; 0x38
 801e20c:	9b06      	ldr	r3, [sp, #24]
 801e20e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e212:	a80c      	add	r0, sp, #48	; 0x30
 801e214:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e218:	f7f8 f906 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e21c:	4640      	mov	r0, r8
 801e21e:	f7f8 f8bf 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e222:	a80e      	add	r0, sp, #56	; 0x38
 801e224:	f7f8 f8bc 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e228:	4b38      	ldr	r3, [pc, #224]	; (801e30c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e22a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e22e:	881b      	ldrh	r3, [r3, #0]
 801e230:	9307      	str	r3, [sp, #28]
 801e232:	682b      	ldr	r3, [r5, #0]
 801e234:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e310 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e238:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e23a:	4628      	mov	r0, r5
 801e23c:	4798      	blx	r3
 801e23e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e242:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e246:	4681      	mov	r9, r0
 801e248:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e24c:	f8db 0000 	ldr.w	r0, [fp]
 801e250:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e252:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e256:	6803      	ldr	r3, [r0, #0]
 801e258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e25a:	4798      	blx	r3
 801e25c:	4607      	mov	r7, r0
 801e25e:	f8db 0000 	ldr.w	r0, [fp]
 801e262:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e266:	6803      	ldr	r3, [r0, #0]
 801e268:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e26c:	9109      	str	r1, [sp, #36]	; 0x24
 801e26e:	9208      	str	r2, [sp, #32]
 801e270:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e272:	4798      	blx	r3
 801e274:	f010 0f01 	tst.w	r0, #1
 801e278:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e27c:	d012      	beq.n	801e2a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e27e:	f8db 0000 	ldr.w	r0, [fp]
 801e282:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e286:	6803      	ldr	r3, [r0, #0]
 801e288:	9200      	str	r2, [sp, #0]
 801e28a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e28c:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e290:	462b      	mov	r3, r5
 801e292:	47b0      	blx	r6
 801e294:	9b03      	ldr	r3, [sp, #12]
 801e296:	8023      	strh	r3, [r4, #0]
 801e298:	9b04      	ldr	r3, [sp, #16]
 801e29a:	8063      	strh	r3, [r4, #2]
 801e29c:	9b05      	ldr	r3, [sp, #20]
 801e29e:	80a3      	strh	r3, [r4, #4]
 801e2a0:	9b06      	ldr	r3, [sp, #24]
 801e2a2:	e78b      	b.n	801e1bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e2a4:	fb09 f202 	mul.w	r2, r9, r2
 801e2a8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e2ac:	440f      	add	r7, r1
 801e2ae:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e2b2:	b166      	cbz	r6, 801e2ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e2b4:	9a07      	ldr	r2, [sp, #28]
 801e2b6:	4592      	cmp	sl, r2
 801e2b8:	d109      	bne.n	801e2ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e2ba:	f8db 0000 	ldr.w	r0, [fp]
 801e2be:	6802      	ldr	r2, [r0, #0]
 801e2c0:	fb09 f303 	mul.w	r3, r9, r3
 801e2c4:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e2c6:	4629      	mov	r1, r5
 801e2c8:	463a      	mov	r2, r7
 801e2ca:	47b0      	blx	r6
 801e2cc:	e7e2      	b.n	801e294 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e2ce:	fb0a f303 	mul.w	r3, sl, r3
 801e2d2:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e310 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e2d6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e2da:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e2de:	4545      	cmp	r5, r8
 801e2e0:	d2d8      	bcs.n	801e294 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e2e2:	f8db 0000 	ldr.w	r0, [fp]
 801e2e6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e2ea:	6802      	ldr	r2, [r0, #0]
 801e2ec:	4629      	mov	r1, r5
 801e2ee:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e2f2:	005b      	lsls	r3, r3, #1
 801e2f4:	463a      	mov	r2, r7
 801e2f6:	47d0      	blx	sl
 801e2f8:	444f      	add	r7, r9
 801e2fa:	4435      	add	r5, r6
 801e2fc:	e7ef      	b.n	801e2de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e2fe:	bf00      	nop
 801e300:	200138a8 	.word	0x200138a8
 801e304:	200138aa 	.word	0x200138aa
 801e308:	200138ac 	.word	0x200138ac
 801e30c:	200138ae 	.word	0x200138ae
 801e310:	200138b4 	.word	0x200138b4

0801e314 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e314:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e316:	4606      	mov	r6, r0
 801e318:	b087      	sub	sp, #28
 801e31a:	460c      	mov	r4, r1
 801e31c:	4617      	mov	r7, r2
 801e31e:	461d      	mov	r5, r3
 801e320:	b333      	cbz	r3, 801e370 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e322:	4608      	mov	r0, r1
 801e324:	f7f3 f921 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801e328:	bb10      	cbnz	r0, 801e370 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e32a:	6820      	ldr	r0, [r4, #0]
 801e32c:	6861      	ldr	r1, [r4, #4]
 801e32e:	4c1c      	ldr	r4, [pc, #112]	; (801e3a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e330:	ab04      	add	r3, sp, #16
 801e332:	c303      	stmia	r3!, {r0, r1}
 801e334:	a804      	add	r0, sp, #16
 801e336:	f7f8 f833 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e33a:	6820      	ldr	r0, [r4, #0]
 801e33c:	6803      	ldr	r3, [r0, #0]
 801e33e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e340:	4798      	blx	r3
 801e342:	2dff      	cmp	r5, #255	; 0xff
 801e344:	d016      	beq.n	801e374 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e346:	f010 0f08 	tst.w	r0, #8
 801e34a:	6820      	ldr	r0, [r4, #0]
 801e34c:	d015      	beq.n	801e37a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e34e:	2400      	movs	r4, #0
 801e350:	6801      	ldr	r1, [r0, #0]
 801e352:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e356:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e35a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e35e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e362:	9401      	str	r4, [sp, #4]
 801e364:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e368:	9400      	str	r4, [sp, #0]
 801e36a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e36c:	4639      	mov	r1, r7
 801e36e:	47a0      	blx	r4
 801e370:	b007      	add	sp, #28
 801e372:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e374:	f010 0f02 	tst.w	r0, #2
 801e378:	e7e7      	b.n	801e34a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e37a:	6803      	ldr	r3, [r0, #0]
 801e37c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e37e:	4798      	blx	r3
 801e380:	4b08      	ldr	r3, [pc, #32]	; (801e3a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e382:	881a      	ldrh	r2, [r3, #0]
 801e384:	6833      	ldr	r3, [r6, #0]
 801e386:	e9cd 7500 	strd	r7, r5, [sp]
 801e38a:	4601      	mov	r1, r0
 801e38c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e38e:	4630      	mov	r0, r6
 801e390:	ab04      	add	r3, sp, #16
 801e392:	47a8      	blx	r5
 801e394:	6820      	ldr	r0, [r4, #0]
 801e396:	6803      	ldr	r3, [r0, #0]
 801e398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e39a:	4798      	blx	r3
 801e39c:	e7e8      	b.n	801e370 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e39e:	bf00      	nop
 801e3a0:	200138b4 	.word	0x200138b4
 801e3a4:	200138ae 	.word	0x200138ae

0801e3a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e3a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e3ac:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e3b0:	9e08      	ldr	r6, [sp, #32]
 801e3b2:	4688      	mov	r8, r1
 801e3b4:	4614      	mov	r4, r2
 801e3b6:	461d      	mov	r5, r3
 801e3b8:	2f00      	cmp	r7, #0
 801e3ba:	f000 80a9 	beq.w	801e510 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e3be:	4618      	mov	r0, r3
 801e3c0:	f7f3 f8d3 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801e3c4:	2800      	cmp	r0, #0
 801e3c6:	f040 80a3 	bne.w	801e510 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e3ca:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e3ce:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e3d2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e3d6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e3da:	fb04 1303 	mla	r3, r4, r3, r1
 801e3de:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e3e2:	4365      	muls	r5, r4
 801e3e4:	2fff      	cmp	r7, #255	; 0xff
 801e3e6:	eba4 0200 	sub.w	r2, r4, r0
 801e3ea:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e3ee:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e3f2:	d04a      	beq.n	801e48a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e3f4:	b2bc      	uxth	r4, r7
 801e3f6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e3fa:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e3fe:	fa5f f788 	uxtb.w	r7, r8
 801e402:	b2f3      	uxtb	r3, r6
 801e404:	0040      	lsls	r0, r0, #1
 801e406:	fb0e fe04 	mul.w	lr, lr, r4
 801e40a:	4367      	muls	r7, r4
 801e40c:	4363      	muls	r3, r4
 801e40e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e412:	fa1f fc8c 	uxth.w	ip, ip
 801e416:	42a9      	cmp	r1, r5
 801e418:	d27a      	bcs.n	801e510 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e41a:	eb01 0900 	add.w	r9, r1, r0
 801e41e:	4549      	cmp	r1, r9
 801e420:	d231      	bcs.n	801e486 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e422:	880a      	ldrh	r2, [r1, #0]
 801e424:	1214      	asrs	r4, r2, #8
 801e426:	10d6      	asrs	r6, r2, #3
 801e428:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e42c:	00d2      	lsls	r2, r2, #3
 801e42e:	b2d2      	uxtb	r2, r2
 801e430:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e434:	fb14 f40c 	smulbb	r4, r4, ip
 801e438:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e43c:	4474      	add	r4, lr
 801e43e:	fb12 f20c 	smulbb	r2, r2, ip
 801e442:	b2a4      	uxth	r4, r4
 801e444:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e448:	441a      	add	r2, r3
 801e44a:	b292      	uxth	r2, r2
 801e44c:	f104 0a01 	add.w	sl, r4, #1
 801e450:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e454:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e458:	fb16 f60c 	smulbb	r6, r6, ip
 801e45c:	f102 0a01 	add.w	sl, r2, #1
 801e460:	443e      	add	r6, r7
 801e462:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e466:	b2b6      	uxth	r6, r6
 801e468:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e46c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e470:	4322      	orrs	r2, r4
 801e472:	1c74      	adds	r4, r6, #1
 801e474:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e478:	0976      	lsrs	r6, r6, #5
 801e47a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e47e:	4332      	orrs	r2, r6
 801e480:	f821 2b02 	strh.w	r2, [r1], #2
 801e484:	e7cb      	b.n	801e41e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801e486:	4441      	add	r1, r8
 801e488:	e7c5      	b.n	801e416 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801e48a:	4f22      	ldr	r7, [pc, #136]	; (801e514 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801e48c:	0973      	lsrs	r3, r6, #5
 801e48e:	ea08 0707 	and.w	r7, r8, r7
 801e492:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e496:	433b      	orrs	r3, r7
 801e498:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e49c:	4333      	orrs	r3, r6
 801e49e:	07e7      	lsls	r7, r4, #31
 801e4a0:	b29b      	uxth	r3, r3
 801e4a2:	d50b      	bpl.n	801e4bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801e4a4:	0040      	lsls	r0, r0, #1
 801e4a6:	0052      	lsls	r2, r2, #1
 801e4a8:	42a9      	cmp	r1, r5
 801e4aa:	d231      	bcs.n	801e510 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e4ac:	180c      	adds	r4, r1, r0
 801e4ae:	42a1      	cmp	r1, r4
 801e4b0:	d202      	bcs.n	801e4b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801e4b2:	f821 3b02 	strh.w	r3, [r1], #2
 801e4b6:	e7fa      	b.n	801e4ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801e4b8:	4411      	add	r1, r2
 801e4ba:	e7f5      	b.n	801e4a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801e4bc:	078e      	lsls	r6, r1, #30
 801e4be:	d008      	beq.n	801e4d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801e4c0:	0066      	lsls	r6, r4, #1
 801e4c2:	460a      	mov	r2, r1
 801e4c4:	42aa      	cmp	r2, r5
 801e4c6:	d202      	bcs.n	801e4ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801e4c8:	8013      	strh	r3, [r2, #0]
 801e4ca:	4432      	add	r2, r6
 801e4cc:	e7fa      	b.n	801e4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801e4ce:	3102      	adds	r1, #2
 801e4d0:	3801      	subs	r0, #1
 801e4d2:	07c2      	lsls	r2, r0, #31
 801e4d4:	d50b      	bpl.n	801e4ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801e4d6:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801e4da:	3a01      	subs	r2, #1
 801e4dc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e4e0:	0066      	lsls	r6, r4, #1
 801e4e2:	42aa      	cmp	r2, r5
 801e4e4:	d202      	bcs.n	801e4ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801e4e6:	8013      	strh	r3, [r2, #0]
 801e4e8:	4432      	add	r2, r6
 801e4ea:	e7fa      	b.n	801e4e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801e4ec:	3801      	subs	r0, #1
 801e4ee:	b178      	cbz	r0, 801e510 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e4f0:	1040      	asrs	r0, r0, #1
 801e4f2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e4f6:	0080      	lsls	r0, r0, #2
 801e4f8:	0064      	lsls	r4, r4, #1
 801e4fa:	42a9      	cmp	r1, r5
 801e4fc:	d208      	bcs.n	801e510 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e4fe:	180e      	adds	r6, r1, r0
 801e500:	460a      	mov	r2, r1
 801e502:	42b2      	cmp	r2, r6
 801e504:	d202      	bcs.n	801e50c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801e506:	f842 3b04 	str.w	r3, [r2], #4
 801e50a:	e7fa      	b.n	801e502 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801e50c:	4421      	add	r1, r4
 801e50e:	e7f4      	b.n	801e4fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801e510:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e514:	00fff800 	.word	0x00fff800

0801e518 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e518:	2200      	movs	r2, #0
 801e51a:	4912      	ldr	r1, [pc, #72]	; (801e564 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801e51c:	6042      	str	r2, [r0, #4]
 801e51e:	6001      	str	r1, [r0, #0]
 801e520:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e524:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801e528:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801e52c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801e530:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801e534:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801e538:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801e53c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801e540:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801e544:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801e548:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801e54c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801e550:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801e554:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801e558:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801e55c:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801e560:	4770      	bx	lr
 801e562:	bf00      	nop
 801e564:	0803044c 	.word	0x0803044c

0801e568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e56c:	460d      	mov	r5, r1
 801e56e:	b08d      	sub	sp, #52	; 0x34
 801e570:	4604      	mov	r4, r0
 801e572:	6808      	ldr	r0, [r1, #0]
 801e574:	6849      	ldr	r1, [r1, #4]
 801e576:	4699      	mov	r9, r3
 801e578:	ab08      	add	r3, sp, #32
 801e57a:	c303      	stmia	r3!, {r0, r1}
 801e57c:	6810      	ldr	r0, [r2, #0]
 801e57e:	6851      	ldr	r1, [r2, #4]
 801e580:	ab0a      	add	r3, sp, #40	; 0x28
 801e582:	c303      	stmia	r3!, {r0, r1}
 801e584:	a808      	add	r0, sp, #32
 801e586:	f7f7 ff0b 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e58a:	4629      	mov	r1, r5
 801e58c:	a80a      	add	r0, sp, #40	; 0x28
 801e58e:	f7f7 ff4b 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e592:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801e596:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801e59a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801e59e:	4d63      	ldr	r5, [pc, #396]	; (801e72c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e5a0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801e5a4:	6828      	ldr	r0, [r5, #0]
 801e5a6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e5aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e5ae:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e5b2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e5b6:	440a      	add	r2, r1
 801e5b8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e5bc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801e5c0:	4413      	add	r3, r2
 801e5c2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e5c6:	6803      	ldr	r3, [r0, #0]
 801e5c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e5ca:	4798      	blx	r3
 801e5cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e5d0:	d119      	bne.n	801e606 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e5d2:	f010 0f20 	tst.w	r0, #32
 801e5d6:	6828      	ldr	r0, [r5, #0]
 801e5d8:	d018      	beq.n	801e60c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e5da:	2500      	movs	r5, #0
 801e5dc:	6801      	ldr	r1, [r0, #0]
 801e5de:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e5e2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801e5e6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e5ea:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801e5ee:	9502      	str	r5, [sp, #8]
 801e5f0:	b2b6      	uxth	r6, r6
 801e5f2:	fa1f f588 	uxth.w	r5, r8
 801e5f6:	9601      	str	r6, [sp, #4]
 801e5f8:	9500      	str	r5, [sp, #0]
 801e5fa:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801e5fc:	4621      	mov	r1, r4
 801e5fe:	47a8      	blx	r5
 801e600:	b00d      	add	sp, #52	; 0x34
 801e602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e606:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e60a:	e7e4      	b.n	801e5d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e60c:	6803      	ldr	r3, [r0, #0]
 801e60e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e610:	4798      	blx	r3
 801e612:	4947      	ldr	r1, [pc, #284]	; (801e730 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e614:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e618:	880b      	ldrh	r3, [r1, #0]
 801e61a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801e61e:	fb03 5202 	mla	r2, r3, r2, r5
 801e622:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e626:	4373      	muls	r3, r6
 801e628:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e62c:	9307      	str	r3, [sp, #28]
 801e62e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e632:	9306      	str	r3, [sp, #24]
 801e634:	468a      	mov	sl, r1
 801e636:	9b07      	ldr	r3, [sp, #28]
 801e638:	4298      	cmp	r0, r3
 801e63a:	d270      	bcs.n	801e71e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e63c:	9b06      	ldr	r3, [sp, #24]
 801e63e:	4621      	mov	r1, r4
 801e640:	eb00 0b03 	add.w	fp, r0, r3
 801e644:	4558      	cmp	r0, fp
 801e646:	d25d      	bcs.n	801e704 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e648:	f851 4b04 	ldr.w	r4, [r1], #4
 801e64c:	0e23      	lsrs	r3, r4, #24
 801e64e:	d014      	beq.n	801e67a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e650:	2bff      	cmp	r3, #255	; 0xff
 801e652:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e656:	d112      	bne.n	801e67e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e658:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e65c:	d10f      	bne.n	801e67e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e65e:	0963      	lsrs	r3, r4, #5
 801e660:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e664:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e668:	f02c 0c07 	bic.w	ip, ip, #7
 801e66c:	ea43 0c0c 	orr.w	ip, r3, ip
 801e670:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e674:	ea4c 0404 	orr.w	r4, ip, r4
 801e678:	8004      	strh	r4, [r0, #0]
 801e67a:	3002      	adds	r0, #2
 801e67c:	e7e2      	b.n	801e644 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e67e:	fb09 f303 	mul.w	r3, r9, r3
 801e682:	8807      	ldrh	r7, [r0, #0]
 801e684:	1c5a      	adds	r2, r3, #1
 801e686:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e68a:	1212      	asrs	r2, r2, #8
 801e68c:	123e      	asrs	r6, r7, #8
 801e68e:	b293      	uxth	r3, r2
 801e690:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e694:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e698:	43d2      	mvns	r2, r2
 801e69a:	b2d2      	uxtb	r2, r2
 801e69c:	10fd      	asrs	r5, r7, #3
 801e69e:	fb1e fe03 	smulbb	lr, lr, r3
 801e6a2:	00ff      	lsls	r7, r7, #3
 801e6a4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e6a8:	fb06 e602 	mla	r6, r6, r2, lr
 801e6ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e6b0:	b2ff      	uxtb	r7, r7
 801e6b2:	fa5f fc8c 	uxtb.w	ip, ip
 801e6b6:	b2e4      	uxtb	r4, r4
 801e6b8:	b2b6      	uxth	r6, r6
 801e6ba:	fb1c fc03 	smulbb	ip, ip, r3
 801e6be:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e6c2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e6c6:	fb14 f403 	smulbb	r4, r4, r3
 801e6ca:	fb05 c502 	mla	r5, r5, r2, ip
 801e6ce:	f106 0e01 	add.w	lr, r6, #1
 801e6d2:	fb07 4702 	mla	r7, r7, r2, r4
 801e6d6:	b2ad      	uxth	r5, r5
 801e6d8:	b2bf      	uxth	r7, r7
 801e6da:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e6de:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801e6e2:	f105 0c01 	add.w	ip, r5, #1
 801e6e6:	1c7e      	adds	r6, r7, #1
 801e6e8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e6ec:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e6f0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e6f4:	096d      	lsrs	r5, r5, #5
 801e6f6:	ea46 060e 	orr.w	r6, r6, lr
 801e6fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e6fe:	432e      	orrs	r6, r5
 801e700:	8006      	strh	r6, [r0, #0]
 801e702:	e7ba      	b.n	801e67a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e704:	f8ba 3000 	ldrh.w	r3, [sl]
 801e708:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801e70c:	eba3 0308 	sub.w	r3, r3, r8
 801e710:	eba4 0408 	sub.w	r4, r4, r8
 801e714:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e718:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e71c:	e78b      	b.n	801e636 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e71e:	4b03      	ldr	r3, [pc, #12]	; (801e72c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e720:	6818      	ldr	r0, [r3, #0]
 801e722:	6803      	ldr	r3, [r0, #0]
 801e724:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e726:	4798      	blx	r3
 801e728:	e76a      	b.n	801e600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e72a:	bf00      	nop
 801e72c:	200138b4 	.word	0x200138b4
 801e730:	200138ae 	.word	0x200138ae

0801e734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e734:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e738:	460c      	mov	r4, r1
 801e73a:	b085      	sub	sp, #20
 801e73c:	6810      	ldr	r0, [r2, #0]
 801e73e:	6851      	ldr	r1, [r2, #4]
 801e740:	466d      	mov	r5, sp
 801e742:	c503      	stmia	r5!, {r0, r1}
 801e744:	6818      	ldr	r0, [r3, #0]
 801e746:	6859      	ldr	r1, [r3, #4]
 801e748:	4616      	mov	r6, r2
 801e74a:	c503      	stmia	r5!, {r0, r1}
 801e74c:	4668      	mov	r0, sp
 801e74e:	f7f7 fe27 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e752:	4631      	mov	r1, r6
 801e754:	a802      	add	r0, sp, #8
 801e756:	f7f7 fe67 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e75a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801e75e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801e762:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e766:	4d28      	ldr	r5, [pc, #160]	; (801e808 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801e768:	4e28      	ldr	r6, [pc, #160]	; (801e80c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801e76a:	6828      	ldr	r0, [r5, #0]
 801e76c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801e770:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801e774:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e778:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e77c:	f8bd 1000 	ldrh.w	r1, [sp]
 801e780:	440a      	add	r2, r1
 801e782:	f8ad 2008 	strh.w	r2, [sp, #8]
 801e786:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e78a:	4413      	add	r3, r2
 801e78c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e790:	6803      	ldr	r3, [r0, #0]
 801e792:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e794:	4798      	blx	r3
 801e796:	8833      	ldrh	r3, [r6, #0]
 801e798:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e79c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e7a0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e810 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e7a4:	fb03 1202 	mla	r2, r3, r2, r1
 801e7a8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e7ac:	fb08 f303 	mul.w	r3, r8, r3
 801e7b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e7b4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e7b8:	4298      	cmp	r0, r3
 801e7ba:	d21d      	bcs.n	801e7f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e7bc:	eb00 080c 	add.w	r8, r0, ip
 801e7c0:	4540      	cmp	r0, r8
 801e7c2:	d20f      	bcs.n	801e7e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e7c4:	f854 1b04 	ldr.w	r1, [r4], #4
 801e7c8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e7cc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e7d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e7d4:	ea42 0209 	orr.w	r2, r2, r9
 801e7d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e7dc:	430a      	orrs	r2, r1
 801e7de:	f820 2b02 	strh.w	r2, [r0], #2
 801e7e2:	e7ed      	b.n	801e7c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e7e4:	8832      	ldrh	r2, [r6, #0]
 801e7e6:	1bd2      	subs	r2, r2, r7
 801e7e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e7ec:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e7f0:	1bd2      	subs	r2, r2, r7
 801e7f2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e7f6:	e7df      	b.n	801e7b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e7f8:	6828      	ldr	r0, [r5, #0]
 801e7fa:	6803      	ldr	r3, [r0, #0]
 801e7fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e7fe:	4798      	blx	r3
 801e800:	b005      	add	sp, #20
 801e802:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e806:	bf00      	nop
 801e808:	200138b4 	.word	0x200138b4
 801e80c:	200138ae 	.word	0x200138ae
 801e810:	fffff800 	.word	0xfffff800

0801e814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e818:	460e      	mov	r6, r1
 801e81a:	b08e      	sub	sp, #56	; 0x38
 801e81c:	4604      	mov	r4, r0
 801e81e:	6808      	ldr	r0, [r1, #0]
 801e820:	6849      	ldr	r1, [r1, #4]
 801e822:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e9fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e826:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801ea00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e82a:	461d      	mov	r5, r3
 801e82c:	ab0a      	add	r3, sp, #40	; 0x28
 801e82e:	c303      	stmia	r3!, {r0, r1}
 801e830:	6810      	ldr	r0, [r2, #0]
 801e832:	6851      	ldr	r1, [r2, #4]
 801e834:	ab0c      	add	r3, sp, #48	; 0x30
 801e836:	c303      	stmia	r3!, {r0, r1}
 801e838:	a80a      	add	r0, sp, #40	; 0x28
 801e83a:	f7f7 fdb1 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e83e:	4631      	mov	r1, r6
 801e840:	a80c      	add	r0, sp, #48	; 0x30
 801e842:	f7f7 fdf1 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e846:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e84a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e84e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e852:	f8d8 0000 	ldr.w	r0, [r8]
 801e856:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801e85a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e85e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e862:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e866:	440c      	add	r4, r1
 801e868:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801e86c:	440a      	add	r2, r1
 801e86e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801e872:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801e876:	4413      	add	r3, r2
 801e878:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e87c:	6803      	ldr	r3, [r0, #0]
 801e87e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e880:	4798      	blx	r3
 801e882:	2dff      	cmp	r5, #255	; 0xff
 801e884:	d124      	bne.n	801e8d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e886:	f010 0f01 	tst.w	r0, #1
 801e88a:	f8d8 0000 	ldr.w	r0, [r8]
 801e88e:	d022      	beq.n	801e8d6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e890:	2100      	movs	r1, #0
 801e892:	f8d0 c000 	ldr.w	ip, [r0]
 801e896:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801e89a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801e89e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e8a2:	f04f 0e01 	mov.w	lr, #1
 801e8a6:	f8cd e018 	str.w	lr, [sp, #24]
 801e8aa:	f8b9 e000 	ldrh.w	lr, [r9]
 801e8ae:	9503      	str	r5, [sp, #12]
 801e8b0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e8b4:	b2b6      	uxth	r6, r6
 801e8b6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e8ba:	9102      	str	r1, [sp, #8]
 801e8bc:	b2bf      	uxth	r7, r7
 801e8be:	9601      	str	r6, [sp, #4]
 801e8c0:	9700      	str	r7, [sp, #0]
 801e8c2:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801e8c6:	4621      	mov	r1, r4
 801e8c8:	47a8      	blx	r5
 801e8ca:	b00e      	add	sp, #56	; 0x38
 801e8cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e8d0:	f010 0f04 	tst.w	r0, #4
 801e8d4:	e7d9      	b.n	801e88a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e8d6:	6803      	ldr	r3, [r0, #0]
 801e8d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e8da:	4798      	blx	r3
 801e8dc:	f8b9 3000 	ldrh.w	r3, [r9]
 801e8e0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e8e4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801e8e8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e8ec:	fb03 1202 	mla	r2, r3, r2, r1
 801e8f0:	ebac 0c07 	sub.w	ip, ip, r7
 801e8f4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e8f8:	435e      	muls	r6, r3
 801e8fa:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e8fe:	2dff      	cmp	r5, #255	; 0xff
 801e900:	eba3 0707 	sub.w	r7, r3, r7
 801e904:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e908:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e90c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e910:	d049      	beq.n	801e9a6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e912:	43eb      	mvns	r3, r5
 801e914:	fa1f f985 	uxth.w	r9, r5
 801e918:	b2db      	uxtb	r3, r3
 801e91a:	42b0      	cmp	r0, r6
 801e91c:	d266      	bcs.n	801e9ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e91e:	eb00 0a0e 	add.w	sl, r0, lr
 801e922:	4550      	cmp	r0, sl
 801e924:	4621      	mov	r1, r4
 801e926:	f104 0403 	add.w	r4, r4, #3
 801e92a:	d25b      	bcs.n	801e9e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e92c:	8802      	ldrh	r2, [r0, #0]
 801e92e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e932:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e936:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e93a:	fb11 f109 	smulbb	r1, r1, r9
 801e93e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e942:	10d5      	asrs	r5, r2, #3
 801e944:	fb08 1803 	mla	r8, r8, r3, r1
 801e948:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e94c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e950:	fb11 f109 	smulbb	r1, r1, r9
 801e954:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e958:	fb05 1503 	mla	r5, r5, r3, r1
 801e95c:	00d2      	lsls	r2, r2, #3
 801e95e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e962:	b2d2      	uxtb	r2, r2
 801e964:	fb11 f109 	smulbb	r1, r1, r9
 801e968:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e96c:	fa1f f888 	uxth.w	r8, r8
 801e970:	fb02 1203 	mla	r2, r2, r3, r1
 801e974:	b292      	uxth	r2, r2
 801e976:	f108 0101 	add.w	r1, r8, #1
 801e97a:	b2ad      	uxth	r5, r5
 801e97c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e980:	1c51      	adds	r1, r2, #1
 801e982:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e986:	1c69      	adds	r1, r5, #1
 801e988:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e98c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e990:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e994:	096d      	lsrs	r5, r5, #5
 801e996:	ea42 0208 	orr.w	r2, r2, r8
 801e99a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e99e:	432a      	orrs	r2, r5
 801e9a0:	f820 2b02 	strh.w	r2, [r0], #2
 801e9a4:	e7bd      	b.n	801e922 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e9a6:	4a14      	ldr	r2, [pc, #80]	; (801e9f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e9a8:	42b0      	cmp	r0, r6
 801e9aa:	d21f      	bcs.n	801e9ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e9ac:	eb00 050e 	add.w	r5, r0, lr
 801e9b0:	42a8      	cmp	r0, r5
 801e9b2:	4621      	mov	r1, r4
 801e9b4:	f104 0403 	add.w	r4, r4, #3
 801e9b8:	d210      	bcs.n	801e9dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e9ba:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e9be:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e9c2:	00db      	lsls	r3, r3, #3
 801e9c4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e9c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e9cc:	430b      	orrs	r3, r1
 801e9ce:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e9d2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e9d6:	f820 3b02 	strh.w	r3, [r0], #2
 801e9da:	e7e9      	b.n	801e9b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e9dc:	4438      	add	r0, r7
 801e9de:	eb01 040c 	add.w	r4, r1, ip
 801e9e2:	e7e1      	b.n	801e9a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e9e4:	4438      	add	r0, r7
 801e9e6:	eb01 040c 	add.w	r4, r1, ip
 801e9ea:	e796      	b.n	801e91a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e9ec:	4b03      	ldr	r3, [pc, #12]	; (801e9fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e9ee:	6818      	ldr	r0, [r3, #0]
 801e9f0:	6803      	ldr	r3, [r0, #0]
 801e9f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e9f4:	4798      	blx	r3
 801e9f6:	e768      	b.n	801e8ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e9f8:	fffff800 	.word	0xfffff800
 801e9fc:	200138b4 	.word	0x200138b4
 801ea00:	200138ae 	.word	0x200138ae

0801ea04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ea04:	b4f0      	push	{r4, r5, r6, r7}
 801ea06:	4616      	mov	r6, r2
 801ea08:	2e01      	cmp	r6, #1
 801ea0a:	461c      	mov	r4, r3
 801ea0c:	460d      	mov	r5, r1
 801ea0e:	9a04      	ldr	r2, [sp, #16]
 801ea10:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ea14:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ea18:	d012      	beq.n	801ea40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ea1a:	d303      	bcc.n	801ea24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ea1c:	2e02      	cmp	r6, #2
 801ea1e:	d00a      	beq.n	801ea36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ea20:	bcf0      	pop	{r4, r5, r6, r7}
 801ea22:	4770      	bx	lr
 801ea24:	6805      	ldr	r5, [r0, #0]
 801ea26:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ea2a:	68ed      	ldr	r5, [r5, #12]
 801ea2c:	4613      	mov	r3, r2
 801ea2e:	46ac      	mov	ip, r5
 801ea30:	4622      	mov	r2, r4
 801ea32:	bcf0      	pop	{r4, r5, r6, r7}
 801ea34:	4760      	bx	ip
 801ea36:	4621      	mov	r1, r4
 801ea38:	4628      	mov	r0, r5
 801ea3a:	bcf0      	pop	{r4, r5, r6, r7}
 801ea3c:	f7ff bd94 	b.w	801e568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ea40:	4621      	mov	r1, r4
 801ea42:	4628      	mov	r0, r5
 801ea44:	bcf0      	pop	{r4, r5, r6, r7}
 801ea46:	f7ff bee5 	b.w	801e814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ea4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ea4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea50:	4681      	mov	r9, r0
 801ea52:	b093      	sub	sp, #76	; 0x4c
 801ea54:	6810      	ldr	r0, [r2, #0]
 801ea56:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ea5a:	4f6d      	ldr	r7, [pc, #436]	; (801ec10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ea5c:	4688      	mov	r8, r1
 801ea5e:	6851      	ldr	r1, [r2, #4]
 801ea60:	ac0e      	add	r4, sp, #56	; 0x38
 801ea62:	c403      	stmia	r4!, {r0, r1}
 801ea64:	6818      	ldr	r0, [r3, #0]
 801ea66:	6859      	ldr	r1, [r3, #4]
 801ea68:	ac10      	add	r4, sp, #64	; 0x40
 801ea6a:	4616      	mov	r6, r2
 801ea6c:	c403      	stmia	r4!, {r0, r1}
 801ea6e:	a80e      	add	r0, sp, #56	; 0x38
 801ea70:	f7f7 fc96 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea74:	4631      	mov	r1, r6
 801ea76:	a810      	add	r0, sp, #64	; 0x40
 801ea78:	f7f7 fcd6 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ea7c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ea80:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ea84:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ea88:	4e62      	ldr	r6, [pc, #392]	; (801ec14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ea8a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ea8e:	6830      	ldr	r0, [r6, #0]
 801ea90:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ea94:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ea98:	4489      	add	r9, r1
 801ea9a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ea9e:	440a      	add	r2, r1
 801eaa0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801eaa4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801eaa8:	4413      	add	r3, r2
 801eaaa:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801eaae:	6803      	ldr	r3, [r0, #0]
 801eab0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eab2:	4798      	blx	r3
 801eab4:	f010 0f80 	tst.w	r0, #128	; 0x80
 801eab8:	6830      	ldr	r0, [r6, #0]
 801eaba:	d01d      	beq.n	801eaf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801eabc:	2200      	movs	r2, #0
 801eabe:	6801      	ldr	r1, [r0, #0]
 801eac0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801eac4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801eac8:	220b      	movs	r2, #11
 801eaca:	9207      	str	r2, [sp, #28]
 801eacc:	883a      	ldrh	r2, [r7, #0]
 801eace:	9206      	str	r2, [sp, #24]
 801ead0:	2201      	movs	r2, #1
 801ead2:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ead6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801eada:	9203      	str	r2, [sp, #12]
 801eadc:	b2a4      	uxth	r4, r4
 801eade:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801eae2:	9200      	str	r2, [sp, #0]
 801eae4:	b2ad      	uxth	r5, r5
 801eae6:	9502      	str	r5, [sp, #8]
 801eae8:	9401      	str	r4, [sp, #4]
 801eaea:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801eaec:	4642      	mov	r2, r8
 801eaee:	4649      	mov	r1, r9
 801eaf0:	47a0      	blx	r4
 801eaf2:	b013      	add	sp, #76	; 0x4c
 801eaf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eaf8:	6803      	ldr	r3, [r0, #0]
 801eafa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eafc:	4798      	blx	r3
 801eafe:	883b      	ldrh	r3, [r7, #0]
 801eb00:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801eb04:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801eb08:	fb03 1202 	mla	r2, r3, r2, r1
 801eb0c:	435d      	muls	r5, r3
 801eb0e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eb12:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801eb16:	920c      	str	r2, [sp, #48]	; 0x30
 801eb18:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801eb1c:	1b12      	subs	r2, r2, r4
 801eb1e:	920d      	str	r2, [sp, #52]	; 0x34
 801eb20:	0062      	lsls	r2, r4, #1
 801eb22:	1b1c      	subs	r4, r3, r4
 801eb24:	0063      	lsls	r3, r4, #1
 801eb26:	920a      	str	r2, [sp, #40]	; 0x28
 801eb28:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb2a:	f04f 0e04 	mov.w	lr, #4
 801eb2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb30:	4298      	cmp	r0, r3
 801eb32:	d266      	bcs.n	801ec02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801eb34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eb36:	eb00 0b03 	add.w	fp, r0, r3
 801eb3a:	4558      	cmp	r0, fp
 801eb3c:	d25c      	bcs.n	801ebf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801eb3e:	f819 3b01 	ldrb.w	r3, [r9], #1
 801eb42:	fb1e e303 	smlabb	r3, lr, r3, lr
 801eb46:	f858 2003 	ldr.w	r2, [r8, r3]
 801eb4a:	0e11      	lsrs	r1, r2, #24
 801eb4c:	d012      	beq.n	801eb74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801eb4e:	29ff      	cmp	r1, #255	; 0xff
 801eb50:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801eb54:	d110      	bne.n	801eb78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801eb56:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801eb5a:	d10d      	bne.n	801eb78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801eb5c:	0953      	lsrs	r3, r2, #5
 801eb5e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801eb62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb66:	f027 0707 	bic.w	r7, r7, #7
 801eb6a:	431f      	orrs	r7, r3
 801eb6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801eb70:	433a      	orrs	r2, r7
 801eb72:	8002      	strh	r2, [r0, #0]
 801eb74:	3002      	adds	r0, #2
 801eb76:	e7e0      	b.n	801eb3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801eb78:	fb0a f101 	mul.w	r1, sl, r1
 801eb7c:	8806      	ldrh	r6, [r0, #0]
 801eb7e:	1c4b      	adds	r3, r1, #1
 801eb80:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801eb84:	1235      	asrs	r5, r6, #8
 801eb86:	10f4      	asrs	r4, r6, #3
 801eb88:	121b      	asrs	r3, r3, #8
 801eb8a:	00f6      	lsls	r6, r6, #3
 801eb8c:	b299      	uxth	r1, r3
 801eb8e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801eb92:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eb96:	b2f6      	uxtb	r6, r6
 801eb98:	43db      	mvns	r3, r3
 801eb9a:	b2d2      	uxtb	r2, r2
 801eb9c:	b2db      	uxtb	r3, r3
 801eb9e:	fb1c fc01 	smulbb	ip, ip, r1
 801eba2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801eba6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ebaa:	fb12 f201 	smulbb	r2, r2, r1
 801ebae:	fb05 c503 	mla	r5, r5, r3, ip
 801ebb2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ebb6:	b2ff      	uxtb	r7, r7
 801ebb8:	fb06 2203 	mla	r2, r6, r3, r2
 801ebbc:	b2ad      	uxth	r5, r5
 801ebbe:	fb17 f701 	smulbb	r7, r7, r1
 801ebc2:	b292      	uxth	r2, r2
 801ebc4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ebc8:	fb04 7403 	mla	r4, r4, r3, r7
 801ebcc:	f105 0c01 	add.w	ip, r5, #1
 801ebd0:	1c57      	adds	r7, r2, #1
 801ebd2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ebd6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ebda:	b2a4      	uxth	r4, r4
 801ebdc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ebe0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ebe4:	433d      	orrs	r5, r7
 801ebe6:	1c67      	adds	r7, r4, #1
 801ebe8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801ebec:	0964      	lsrs	r4, r4, #5
 801ebee:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ebf2:	4325      	orrs	r5, r4
 801ebf4:	8005      	strh	r5, [r0, #0]
 801ebf6:	e7bd      	b.n	801eb74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ebf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ebfa:	4418      	add	r0, r3
 801ebfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ebfe:	4499      	add	r9, r3
 801ec00:	e795      	b.n	801eb2e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ec02:	4b04      	ldr	r3, [pc, #16]	; (801ec14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ec04:	6818      	ldr	r0, [r3, #0]
 801ec06:	6803      	ldr	r3, [r0, #0]
 801ec08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec0a:	4798      	blx	r3
 801ec0c:	e771      	b.n	801eaf2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ec0e:	bf00      	nop
 801ec10:	200138ae 	.word	0x200138ae
 801ec14:	200138b4 	.word	0x200138b4

0801ec18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ec18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec1c:	b087      	sub	sp, #28
 801ec1e:	4680      	mov	r8, r0
 801ec20:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ec24:	460d      	mov	r5, r1
 801ec26:	4614      	mov	r4, r2
 801ec28:	2e00      	cmp	r6, #0
 801ec2a:	f000 80b9 	beq.w	801eda0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ec2e:	6810      	ldr	r0, [r2, #0]
 801ec30:	6851      	ldr	r1, [r2, #4]
 801ec32:	af02      	add	r7, sp, #8
 801ec34:	c703      	stmia	r7!, {r0, r1}
 801ec36:	6818      	ldr	r0, [r3, #0]
 801ec38:	6859      	ldr	r1, [r3, #4]
 801ec3a:	af04      	add	r7, sp, #16
 801ec3c:	c703      	stmia	r7!, {r0, r1}
 801ec3e:	a802      	add	r0, sp, #8
 801ec40:	f7f7 fbae 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ec44:	4621      	mov	r1, r4
 801ec46:	a804      	add	r0, sp, #16
 801ec48:	f7f7 fbee 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ec4c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ec50:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ec54:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ec58:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ec5c:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ec60:	eb08 0401 	add.w	r4, r8, r1
 801ec64:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ec68:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ec6c:	440a      	add	r2, r1
 801ec6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ec72:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ec76:	4413      	add	r3, r2
 801ec78:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ec7c:	4b4a      	ldr	r3, [pc, #296]	; (801eda8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ec7e:	6818      	ldr	r0, [r3, #0]
 801ec80:	6803      	ldr	r3, [r0, #0]
 801ec82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec84:	4798      	blx	r3
 801ec86:	4b49      	ldr	r3, [pc, #292]	; (801edac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ec88:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ec8c:	881a      	ldrh	r2, [r3, #0]
 801ec8e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ec92:	2eff      	cmp	r6, #255	; 0xff
 801ec94:	fb02 c101 	mla	r1, r2, r1, ip
 801ec98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ec9c:	fb02 f207 	mul.w	r2, r2, r7
 801eca0:	f105 0104 	add.w	r1, r5, #4
 801eca4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801eca8:	461d      	mov	r5, r3
 801ecaa:	d05a      	beq.n	801ed62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801ecac:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801ecb0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ecb4:	b2b6      	uxth	r6, r6
 801ecb6:	fa1f fe8e 	uxth.w	lr, lr
 801ecba:	9301      	str	r3, [sp, #4]
 801ecbc:	4282      	cmp	r2, r0
 801ecbe:	d96a      	bls.n	801ed96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ecc0:	eb00 0b0a 	add.w	fp, r0, sl
 801ecc4:	4583      	cmp	fp, r0
 801ecc6:	d940      	bls.n	801ed4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ecc8:	f814 3b01 	ldrb.w	r3, [r4], #1
 801eccc:	8805      	ldrh	r5, [r0, #0]
 801ecce:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ecd2:	122f      	asrs	r7, r5, #8
 801ecd4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ecd8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ecdc:	fb17 f70e 	smulbb	r7, r7, lr
 801ece0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ece4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ece8:	00ed      	lsls	r5, r5, #3
 801ecea:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ecee:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ecf2:	10df      	asrs	r7, r3, #3
 801ecf4:	b2ed      	uxtb	r5, r5
 801ecf6:	00db      	lsls	r3, r3, #3
 801ecf8:	fa1f fc8c 	uxth.w	ip, ip
 801ecfc:	fb19 f90e 	smulbb	r9, r9, lr
 801ed00:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ed04:	b2db      	uxtb	r3, r3
 801ed06:	fb15 f50e 	smulbb	r5, r5, lr
 801ed0a:	fb07 9706 	mla	r7, r7, r6, r9
 801ed0e:	fb03 5306 	mla	r3, r3, r6, r5
 801ed12:	f10c 0901 	add.w	r9, ip, #1
 801ed16:	b29b      	uxth	r3, r3
 801ed18:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ed1c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801ed20:	f103 0c01 	add.w	ip, r3, #1
 801ed24:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ed28:	b2bf      	uxth	r7, r7
 801ed2a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ed2e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ed32:	f107 0901 	add.w	r9, r7, #1
 801ed36:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ed3a:	097f      	lsrs	r7, r7, #5
 801ed3c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ed40:	ea4c 0c07 	orr.w	ip, ip, r7
 801ed44:	f820 cb02 	strh.w	ip, [r0], #2
 801ed48:	e7bc      	b.n	801ecc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ed4a:	9b01      	ldr	r3, [sp, #4]
 801ed4c:	881b      	ldrh	r3, [r3, #0]
 801ed4e:	eba3 0308 	sub.w	r3, r3, r8
 801ed52:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ed56:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ed5a:	eba3 0308 	sub.w	r3, r3, r8
 801ed5e:	441c      	add	r4, r3
 801ed60:	e7ac      	b.n	801ecbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ed62:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ed66:	4282      	cmp	r2, r0
 801ed68:	d915      	bls.n	801ed96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ed6a:	eb00 060a 	add.w	r6, r0, sl
 801ed6e:	4286      	cmp	r6, r0
 801ed70:	d906      	bls.n	801ed80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ed72:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ed76:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ed7a:	f820 3b02 	strh.w	r3, [r0], #2
 801ed7e:	e7f6      	b.n	801ed6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ed80:	882b      	ldrh	r3, [r5, #0]
 801ed82:	eba3 0308 	sub.w	r3, r3, r8
 801ed86:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ed8a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ed8e:	eba3 0308 	sub.w	r3, r3, r8
 801ed92:	441c      	add	r4, r3
 801ed94:	e7e7      	b.n	801ed66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ed96:	4b04      	ldr	r3, [pc, #16]	; (801eda8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ed98:	6818      	ldr	r0, [r3, #0]
 801ed9a:	6803      	ldr	r3, [r0, #0]
 801ed9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ed9e:	4798      	blx	r3
 801eda0:	b007      	add	sp, #28
 801eda2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eda6:	bf00      	nop
 801eda8:	200138b4 	.word	0x200138b4
 801edac:	200138ae 	.word	0x200138ae

0801edb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801edb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edb4:	b091      	sub	sp, #68	; 0x44
 801edb6:	4680      	mov	r8, r0
 801edb8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801edbc:	460f      	mov	r7, r1
 801edbe:	4614      	mov	r4, r2
 801edc0:	2d00      	cmp	r5, #0
 801edc2:	d051      	beq.n	801ee68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801edc4:	6810      	ldr	r0, [r2, #0]
 801edc6:	6851      	ldr	r1, [r2, #4]
 801edc8:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801efcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801edcc:	ae0c      	add	r6, sp, #48	; 0x30
 801edce:	c603      	stmia	r6!, {r0, r1}
 801edd0:	6818      	ldr	r0, [r3, #0]
 801edd2:	6859      	ldr	r1, [r3, #4]
 801edd4:	ae0e      	add	r6, sp, #56	; 0x38
 801edd6:	c603      	stmia	r6!, {r0, r1}
 801edd8:	a80c      	add	r0, sp, #48	; 0x30
 801edda:	f7f7 fae1 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edde:	4621      	mov	r1, r4
 801ede0:	a80e      	add	r0, sp, #56	; 0x38
 801ede2:	f7f7 fb21 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ede6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801edea:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801edee:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801edf2:	f8d9 0000 	ldr.w	r0, [r9]
 801edf6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801edfa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801edfe:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ee02:	eb08 0401 	add.w	r4, r8, r1
 801ee06:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801ee0a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801efd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801ee0e:	440a      	add	r2, r1
 801ee10:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801ee14:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801ee18:	4413      	add	r3, r2
 801ee1a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801ee1e:	6803      	ldr	r3, [r0, #0]
 801ee20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee22:	4798      	blx	r3
 801ee24:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ee28:	f8d9 0000 	ldr.w	r0, [r9]
 801ee2c:	d01f      	beq.n	801ee6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801ee2e:	2200      	movs	r2, #0
 801ee30:	6801      	ldr	r1, [r0, #0]
 801ee32:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ee36:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ee3a:	220b      	movs	r2, #11
 801ee3c:	9207      	str	r2, [sp, #28]
 801ee3e:	f8b8 2000 	ldrh.w	r2, [r8]
 801ee42:	9206      	str	r2, [sp, #24]
 801ee44:	2201      	movs	r2, #1
 801ee46:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801ee4a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801ee4e:	9203      	str	r2, [sp, #12]
 801ee50:	fa1f f28a 	uxth.w	r2, sl
 801ee54:	9202      	str	r2, [sp, #8]
 801ee56:	b2b6      	uxth	r6, r6
 801ee58:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ee5c:	9200      	str	r2, [sp, #0]
 801ee5e:	9601      	str	r6, [sp, #4]
 801ee60:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801ee62:	463a      	mov	r2, r7
 801ee64:	4621      	mov	r1, r4
 801ee66:	47a8      	blx	r5
 801ee68:	b011      	add	sp, #68	; 0x44
 801ee6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee6e:	6803      	ldr	r3, [r0, #0]
 801ee70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee72:	4798      	blx	r3
 801ee74:	f8b8 2000 	ldrh.w	r2, [r8]
 801ee78:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ee7c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801ee80:	2dff      	cmp	r5, #255	; 0xff
 801ee82:	fb02 1303 	mla	r3, r2, r3, r1
 801ee86:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee8a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801ee8e:	fb0a fa02 	mul.w	sl, sl, r2
 801ee92:	d062      	beq.n	801ef5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801ee94:	ea6f 0c05 	mvn.w	ip, r5
 801ee98:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801ee9c:	930a      	str	r3, [sp, #40]	; 0x28
 801ee9e:	b2ad      	uxth	r5, r5
 801eea0:	fa5f fc8c 	uxtb.w	ip, ip
 801eea4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801eea8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eeaa:	4298      	cmp	r0, r3
 801eeac:	f080 8085 	bcs.w	801efba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801eeb0:	eb00 0b09 	add.w	fp, r0, r9
 801eeb4:	4558      	cmp	r0, fp
 801eeb6:	d246      	bcs.n	801ef46 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801eeb8:	f814 eb01 	ldrb.w	lr, [r4], #1
 801eebc:	2303      	movs	r3, #3
 801eebe:	2204      	movs	r2, #4
 801eec0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801eec4:	eb07 0a0e 	add.w	sl, r7, lr
 801eec8:	8803      	ldrh	r3, [r0, #0]
 801eeca:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801eece:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801eed2:	1219      	asrs	r1, r3, #8
 801eed4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801eed8:	fb18 f805 	smulbb	r8, r8, r5
 801eedc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801eee0:	10da      	asrs	r2, r3, #3
 801eee2:	fb01 810c 	mla	r1, r1, ip, r8
 801eee6:	00db      	lsls	r3, r3, #3
 801eee8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801eeec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eef0:	b2db      	uxtb	r3, r3
 801eef2:	fb18 f805 	smulbb	r8, r8, r5
 801eef6:	fb1e fe05 	smulbb	lr, lr, r5
 801eefa:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801eefe:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801ef02:	b289      	uxth	r1, r1
 801ef04:	fb02 820c 	mla	r2, r2, ip, r8
 801ef08:	fb03 e30c 	mla	r3, r3, ip, lr
 801ef0c:	b292      	uxth	r2, r2
 801ef0e:	b29b      	uxth	r3, r3
 801ef10:	f101 0801 	add.w	r8, r1, #1
 801ef14:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801ef18:	f103 0e01 	add.w	lr, r3, #1
 801ef1c:	f102 0801 	add.w	r8, r2, #1
 801ef20:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801ef24:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801ef28:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ef2c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ef30:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ef34:	ea4e 0101 	orr.w	r1, lr, r1
 801ef38:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ef3c:	ea41 0108 	orr.w	r1, r1, r8
 801ef40:	f820 1b02 	strh.w	r1, [r0], #2
 801ef44:	e7b6      	b.n	801eeb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ef46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ef48:	881b      	ldrh	r3, [r3, #0]
 801ef4a:	1b9b      	subs	r3, r3, r6
 801ef4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef50:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ef54:	1b9b      	subs	r3, r3, r6
 801ef56:	441c      	add	r4, r3
 801ef58:	e7a6      	b.n	801eea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ef5a:	491b      	ldr	r1, [pc, #108]	; (801efc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ef5c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ef60:	2203      	movs	r2, #3
 801ef62:	2504      	movs	r5, #4
 801ef64:	4550      	cmp	r0, sl
 801ef66:	d228      	bcs.n	801efba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ef68:	eb00 0c09 	add.w	ip, r0, r9
 801ef6c:	4560      	cmp	r0, ip
 801ef6e:	4623      	mov	r3, r4
 801ef70:	d219      	bcs.n	801efa6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801ef72:	f893 e000 	ldrb.w	lr, [r3]
 801ef76:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801ef7a:	eb07 0b0e 	add.w	fp, r7, lr
 801ef7e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ef82:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ef86:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ef8a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801ef8e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801ef92:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ef96:	ea43 030b 	orr.w	r3, r3, fp
 801ef9a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801ef9e:	3401      	adds	r4, #1
 801efa0:	f820 3b02 	strh.w	r3, [r0], #2
 801efa4:	e7e2      	b.n	801ef6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801efa6:	f8b8 3000 	ldrh.w	r3, [r8]
 801efaa:	1b9b      	subs	r3, r3, r6
 801efac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801efb0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801efb4:	1b9b      	subs	r3, r3, r6
 801efb6:	441c      	add	r4, r3
 801efb8:	e7d4      	b.n	801ef64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801efba:	4b04      	ldr	r3, [pc, #16]	; (801efcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801efbc:	6818      	ldr	r0, [r3, #0]
 801efbe:	6803      	ldr	r3, [r0, #0]
 801efc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801efc2:	4798      	blx	r3
 801efc4:	e750      	b.n	801ee68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801efc6:	bf00      	nop
 801efc8:	fffff800 	.word	0xfffff800
 801efcc:	200138b4 	.word	0x200138b4
 801efd0:	200138ae 	.word	0x200138ae

0801efd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801efd4:	b4f0      	push	{r4, r5, r6, r7}
 801efd6:	460c      	mov	r4, r1
 801efd8:	4611      	mov	r1, r2
 801efda:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801efde:	780f      	ldrb	r7, [r1, #0]
 801efe0:	784e      	ldrb	r6, [r1, #1]
 801efe2:	2f01      	cmp	r7, #1
 801efe4:	461a      	mov	r2, r3
 801efe6:	9b04      	ldr	r3, [sp, #16]
 801efe8:	d036      	beq.n	801f058 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801efea:	d31e      	bcc.n	801f02a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801efec:	2f02      	cmp	r7, #2
 801efee:	d14a      	bne.n	801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801eff0:	2e03      	cmp	r6, #3
 801eff2:	d848      	bhi.n	801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801eff4:	e8df f006 	tbb	[pc, r6]
 801eff8:	16140702 	.word	0x16140702
 801effc:	9504      	str	r5, [sp, #16]
 801effe:	4620      	mov	r0, r4
 801f000:	bcf0      	pop	{r4, r5, r6, r7}
 801f002:	f7ff be09 	b.w	801ec18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f006:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f008:	2800      	cmp	r0, #0
 801f00a:	d03c      	beq.n	801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f00c:	6806      	ldr	r6, [r0, #0]
 801f00e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f012:	68b5      	ldr	r5, [r6, #8]
 801f014:	4613      	mov	r3, r2
 801f016:	46ac      	mov	ip, r5
 801f018:	460a      	mov	r2, r1
 801f01a:	4621      	mov	r1, r4
 801f01c:	bcf0      	pop	{r4, r5, r6, r7}
 801f01e:	4760      	bx	ip
 801f020:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f022:	e7f1      	b.n	801f008 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f024:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f028:	e7ee      	b.n	801f008 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f02a:	2e03      	cmp	r6, #3
 801f02c:	d82b      	bhi.n	801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f02e:	e8df f006 	tbb	[pc, r6]
 801f032:	0702      	.short	0x0702
 801f034:	100e      	.short	0x100e
 801f036:	9504      	str	r5, [sp, #16]
 801f038:	4620      	mov	r0, r4
 801f03a:	bcf0      	pop	{r4, r5, r6, r7}
 801f03c:	f7ff bd06 	b.w	801ea4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f040:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f042:	b300      	cbz	r0, 801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f044:	6806      	ldr	r6, [r0, #0]
 801f046:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f04a:	68f5      	ldr	r5, [r6, #12]
 801f04c:	e7e2      	b.n	801f014 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f04e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f050:	e7f7      	b.n	801f042 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f052:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f056:	e7f4      	b.n	801f042 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f058:	2e03      	cmp	r6, #3
 801f05a:	d814      	bhi.n	801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f05c:	e8df f006 	tbb	[pc, r6]
 801f060:	100e0702 	.word	0x100e0702
 801f064:	9504      	str	r5, [sp, #16]
 801f066:	4620      	mov	r0, r4
 801f068:	bcf0      	pop	{r4, r5, r6, r7}
 801f06a:	f7ff bea1 	b.w	801edb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f06e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f070:	b148      	cbz	r0, 801f086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f072:	6806      	ldr	r6, [r0, #0]
 801f074:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f078:	6935      	ldr	r5, [r6, #16]
 801f07a:	e7cb      	b.n	801f014 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f07c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f07e:	e7f7      	b.n	801f070 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f080:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f084:	e7f4      	b.n	801f070 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f086:	bcf0      	pop	{r4, r5, r6, r7}
 801f088:	4770      	bx	lr
	...

0801f08c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f090:	4604      	mov	r4, r0
 801f092:	b087      	sub	sp, #28
 801f094:	6810      	ldr	r0, [r2, #0]
 801f096:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f09a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f2d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f09e:	460e      	mov	r6, r1
 801f0a0:	6851      	ldr	r1, [r2, #4]
 801f0a2:	ad02      	add	r5, sp, #8
 801f0a4:	c503      	stmia	r5!, {r0, r1}
 801f0a6:	6818      	ldr	r0, [r3, #0]
 801f0a8:	6859      	ldr	r1, [r3, #4]
 801f0aa:	ad04      	add	r5, sp, #16
 801f0ac:	4617      	mov	r7, r2
 801f0ae:	c503      	stmia	r5!, {r0, r1}
 801f0b0:	a802      	add	r0, sp, #8
 801f0b2:	f7f7 f975 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f0b6:	4639      	mov	r1, r7
 801f0b8:	a804      	add	r0, sp, #16
 801f0ba:	f7f7 f9b5 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f0be:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f0c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f0c6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f0ca:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f0ce:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f0d2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f0d6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f0da:	440e      	add	r6, r1
 801f0dc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f0e0:	440a      	add	r2, r1
 801f0e2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f0e6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f0ea:	4413      	add	r3, r2
 801f0ec:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f0f0:	4b77      	ldr	r3, [pc, #476]	; (801f2d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f0f2:	6818      	ldr	r0, [r3, #0]
 801f0f4:	6803      	ldr	r3, [r0, #0]
 801f0f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0f8:	4798      	blx	r3
 801f0fa:	f8b9 b000 	ldrh.w	fp, [r9]
 801f0fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f102:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f106:	fb0b 2303 	mla	r3, fp, r3, r2
 801f10a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f10e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f112:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f116:	fb05 f50b 	mul.w	r5, r5, fp
 801f11a:	9300      	str	r3, [sp, #0]
 801f11c:	d069      	beq.n	801f1f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f11e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f122:	4558      	cmp	r0, fp
 801f124:	f080 80cc 	bcs.w	801f2c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f128:	9b00      	ldr	r3, [sp, #0]
 801f12a:	18c3      	adds	r3, r0, r3
 801f12c:	9301      	str	r3, [sp, #4]
 801f12e:	4631      	mov	r1, r6
 801f130:	9b01      	ldr	r3, [sp, #4]
 801f132:	4298      	cmp	r0, r3
 801f134:	d24f      	bcs.n	801f1d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f136:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f13a:	2a00      	cmp	r2, #0
 801f13c:	d048      	beq.n	801f1d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f13e:	fb0a f202 	mul.w	r2, sl, r2
 801f142:	1c53      	adds	r3, r2, #1
 801f144:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f148:	121b      	asrs	r3, r3, #8
 801f14a:	d041      	beq.n	801f1d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f14c:	8802      	ldrh	r2, [r0, #0]
 801f14e:	f8b4 c000 	ldrh.w	ip, [r4]
 801f152:	b29e      	uxth	r6, r3
 801f154:	1215      	asrs	r5, r2, #8
 801f156:	43db      	mvns	r3, r3
 801f158:	b2db      	uxtb	r3, r3
 801f15a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f15e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f162:	fb15 f503 	smulbb	r5, r5, r3
 801f166:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f16a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f16e:	00d2      	lsls	r2, r2, #3
 801f170:	fb07 5706 	mla	r7, r7, r6, r5
 801f174:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f178:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f17c:	b2d2      	uxtb	r2, r2
 801f17e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f182:	b2bf      	uxth	r7, r7
 801f184:	fb1e fe03 	smulbb	lr, lr, r3
 801f188:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f18c:	fa5f fc8c 	uxtb.w	ip, ip
 801f190:	fb12 f203 	smulbb	r2, r2, r3
 801f194:	fb05 e506 	mla	r5, r5, r6, lr
 801f198:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f19c:	f107 0e01 	add.w	lr, r7, #1
 801f1a0:	fa1f fc8c 	uxth.w	ip, ip
 801f1a4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f1a8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f1ac:	f10c 0701 	add.w	r7, ip, #1
 801f1b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f1b4:	b2ad      	uxth	r5, r5
 801f1b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f1ba:	ea47 070e 	orr.w	r7, r7, lr
 801f1be:	f105 0e01 	add.w	lr, r5, #1
 801f1c2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f1c6:	096d      	lsrs	r5, r5, #5
 801f1c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f1cc:	432f      	orrs	r7, r5
 801f1ce:	8007      	strh	r7, [r0, #0]
 801f1d0:	3002      	adds	r0, #2
 801f1d2:	3402      	adds	r4, #2
 801f1d4:	e7ac      	b.n	801f130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f1d6:	f8b9 3000 	ldrh.w	r3, [r9]
 801f1da:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f1de:	eba3 0308 	sub.w	r3, r3, r8
 801f1e2:	eba6 0608 	sub.w	r6, r6, r8
 801f1e6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f1ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f1ee:	440e      	add	r6, r1
 801f1f0:	e797      	b.n	801f122 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f1f2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f1f6:	42a8      	cmp	r0, r5
 801f1f8:	d262      	bcs.n	801f2c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f1fa:	9b00      	ldr	r3, [sp, #0]
 801f1fc:	4631      	mov	r1, r6
 801f1fe:	eb00 0b03 	add.w	fp, r0, r3
 801f202:	4558      	cmp	r0, fp
 801f204:	d24e      	bcs.n	801f2a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f206:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f20a:	b12b      	cbz	r3, 801f218 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f20c:	2bff      	cmp	r3, #255	; 0xff
 801f20e:	f8b4 e000 	ldrh.w	lr, [r4]
 801f212:	d104      	bne.n	801f21e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f214:	f8a0 e000 	strh.w	lr, [r0]
 801f218:	3002      	adds	r0, #2
 801f21a:	3402      	adds	r4, #2
 801f21c:	e7f1      	b.n	801f202 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f21e:	8802      	ldrh	r2, [r0, #0]
 801f220:	b29f      	uxth	r7, r3
 801f222:	1216      	asrs	r6, r2, #8
 801f224:	43db      	mvns	r3, r3
 801f226:	b2db      	uxtb	r3, r3
 801f228:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f22c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f230:	fb16 f603 	smulbb	r6, r6, r3
 801f234:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f238:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f23c:	00d2      	lsls	r2, r2, #3
 801f23e:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f242:	b2d2      	uxtb	r2, r2
 801f244:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f248:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f24c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f250:	fb1a fa03 	smulbb	sl, sl, r3
 801f254:	fa1f fc8c 	uxth.w	ip, ip
 801f258:	fb12 f303 	smulbb	r3, r2, r3
 801f25c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f260:	fa5f fe8e 	uxtb.w	lr, lr
 801f264:	fb06 a607 	mla	r6, r6, r7, sl
 801f268:	f10c 0201 	add.w	r2, ip, #1
 801f26c:	fb0e 3307 	mla	r3, lr, r7, r3
 801f270:	b2b6      	uxth	r6, r6
 801f272:	b29b      	uxth	r3, r3
 801f274:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f278:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f27c:	f106 0a01 	add.w	sl, r6, #1
 801f280:	f103 0c01 	add.w	ip, r3, #1
 801f284:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f288:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f28c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f290:	0976      	lsrs	r6, r6, #5
 801f292:	ea4c 0c02 	orr.w	ip, ip, r2
 801f296:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f29a:	ea4c 0c06 	orr.w	ip, ip, r6
 801f29e:	f8a0 c000 	strh.w	ip, [r0]
 801f2a2:	e7b9      	b.n	801f218 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f2a4:	f8b9 3000 	ldrh.w	r3, [r9]
 801f2a8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f2ac:	eba3 0308 	sub.w	r3, r3, r8
 801f2b0:	eba6 0608 	sub.w	r6, r6, r8
 801f2b4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f2b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f2bc:	440e      	add	r6, r1
 801f2be:	e79a      	b.n	801f1f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f2c0:	4b03      	ldr	r3, [pc, #12]	; (801f2d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f2c2:	6818      	ldr	r0, [r3, #0]
 801f2c4:	6803      	ldr	r3, [r0, #0]
 801f2c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f2c8:	4798      	blx	r3
 801f2ca:	b007      	add	sp, #28
 801f2cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2d0:	200138b4 	.word	0x200138b4
 801f2d4:	200138ae 	.word	0x200138ae

0801f2d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f2d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2dc:	b089      	sub	sp, #36	; 0x24
 801f2de:	4682      	mov	sl, r0
 801f2e0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f2e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f2e6:	460f      	mov	r7, r1
 801f2e8:	4691      	mov	r9, r2
 801f2ea:	4698      	mov	r8, r3
 801f2ec:	2e00      	cmp	r6, #0
 801f2ee:	d03d      	beq.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f2f0:	4608      	mov	r0, r1
 801f2f2:	f7fa fe59 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f2f6:	4605      	mov	r5, r0
 801f2f8:	4638      	mov	r0, r7
 801f2fa:	f7fa fe89 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f2fe:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f302:	4638      	mov	r0, r7
 801f304:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f308:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f30c:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f310:	f7fa ff36 	bl	801a180 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f314:	4605      	mov	r5, r0
 801f316:	4638      	mov	r0, r7
 801f318:	f7fa ff62 	bl	801a1e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f31c:	4681      	mov	r9, r0
 801f31e:	4638      	mov	r0, r7
 801f320:	f7fa ffb2 	bl	801a288 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f324:	280b      	cmp	r0, #11
 801f326:	d821      	bhi.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f328:	e8df f000 	tbb	[pc, r0]
 801f32c:	2006aebe 	.word	0x2006aebe
 801f330:	20202020 	.word	0x20202020
 801f334:	b5202020 	.word	0xb5202020
 801f338:	4bb0      	ldr	r3, [pc, #704]	; (801f5fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f33a:	6818      	ldr	r0, [r3, #0]
 801f33c:	6803      	ldr	r3, [r0, #0]
 801f33e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f340:	4798      	blx	r3
 801f342:	2eff      	cmp	r6, #255	; 0xff
 801f344:	d101      	bne.n	801f34a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f346:	0683      	lsls	r3, r0, #26
 801f348:	d506      	bpl.n	801f358 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f34a:	4633      	mov	r3, r6
 801f34c:	4622      	mov	r2, r4
 801f34e:	a902      	add	r1, sp, #8
 801f350:	4628      	mov	r0, r5
 801f352:	f7ff f909 	bl	801e568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f356:	e009      	b.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f358:	4638      	mov	r0, r7
 801f35a:	f7fa fed9 	bl	801a110 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f35e:	b940      	cbnz	r0, 801f372 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f360:	4623      	mov	r3, r4
 801f362:	aa02      	add	r2, sp, #8
 801f364:	4629      	mov	r1, r5
 801f366:	4650      	mov	r0, sl
 801f368:	f7ff f9e4 	bl	801e734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f36c:	b009      	add	sp, #36	; 0x24
 801f36e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f372:	f10d 0818 	add.w	r8, sp, #24
 801f376:	4639      	mov	r1, r7
 801f378:	4640      	mov	r0, r8
 801f37a:	f7fa fe7d 	bl	801a078 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f37e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f382:	af04      	add	r7, sp, #16
 801f384:	e887 0003 	stmia.w	r7, {r0, r1}
 801f388:	4638      	mov	r0, r7
 801f38a:	4621      	mov	r1, r4
 801f38c:	f7f2 f8aa 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801f390:	4638      	mov	r0, r7
 801f392:	f7f2 f8ea 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f396:	2800      	cmp	r0, #0
 801f398:	d1d7      	bne.n	801f34a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f39a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f39e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f3a2:	4293      	cmp	r3, r2
 801f3a4:	dd12      	ble.n	801f3cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f3a6:	1a9b      	subs	r3, r3, r2
 801f3a8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f3ac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f3b0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f3b4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f3b8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f3bc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f3c0:	4642      	mov	r2, r8
 801f3c2:	4633      	mov	r3, r6
 801f3c4:	a902      	add	r1, sp, #8
 801f3c6:	4628      	mov	r0, r5
 801f3c8:	f7ff f8ce 	bl	801e568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f3cc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f3d0:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f3d4:	4293      	cmp	r3, r2
 801f3d6:	dd12      	ble.n	801f3fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f3d8:	1a9b      	subs	r3, r3, r2
 801f3da:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f3de:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f3e2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f3e6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f3ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f3ee:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f3f2:	23ff      	movs	r3, #255	; 0xff
 801f3f4:	4642      	mov	r2, r8
 801f3f6:	a902      	add	r1, sp, #8
 801f3f8:	4628      	mov	r0, r5
 801f3fa:	f7ff f8b5 	bl	801e568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f3fe:	463b      	mov	r3, r7
 801f400:	aa02      	add	r2, sp, #8
 801f402:	4629      	mov	r1, r5
 801f404:	4650      	mov	r0, sl
 801f406:	f7ff f995 	bl	801e734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f40a:	88a2      	ldrh	r2, [r4, #4]
 801f40c:	8823      	ldrh	r3, [r4, #0]
 801f40e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f412:	4413      	add	r3, r2
 801f414:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f418:	440a      	add	r2, r1
 801f41a:	b29b      	uxth	r3, r3
 801f41c:	b292      	uxth	r2, r2
 801f41e:	b211      	sxth	r1, r2
 801f420:	b218      	sxth	r0, r3
 801f422:	4288      	cmp	r0, r1
 801f424:	dd12      	ble.n	801f44c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f426:	1a9b      	subs	r3, r3, r2
 801f428:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f42c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f430:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f434:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f438:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f43c:	23ff      	movs	r3, #255	; 0xff
 801f43e:	4642      	mov	r2, r8
 801f440:	a902      	add	r1, sp, #8
 801f442:	4628      	mov	r0, r5
 801f444:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f448:	f7ff f88e 	bl	801e568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f44c:	88e2      	ldrh	r2, [r4, #6]
 801f44e:	8863      	ldrh	r3, [r4, #2]
 801f450:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f454:	4413      	add	r3, r2
 801f456:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f45a:	440a      	add	r2, r1
 801f45c:	b29b      	uxth	r3, r3
 801f45e:	b292      	uxth	r2, r2
 801f460:	b211      	sxth	r1, r2
 801f462:	b218      	sxth	r0, r3
 801f464:	4288      	cmp	r0, r1
 801f466:	dd81      	ble.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f468:	1a9b      	subs	r3, r3, r2
 801f46a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f46e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f472:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f476:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f47a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f47e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f482:	23ff      	movs	r3, #255	; 0xff
 801f484:	4642      	mov	r2, r8
 801f486:	e762      	b.n	801f34e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801f488:	4633      	mov	r3, r6
 801f48a:	4622      	mov	r2, r4
 801f48c:	a902      	add	r1, sp, #8
 801f48e:	4628      	mov	r0, r5
 801f490:	f7ff f9c0 	bl	801e814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f494:	e76a      	b.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f496:	e9cd 4600 	strd	r4, r6, [sp]
 801f49a:	ab02      	add	r3, sp, #8
 801f49c:	464a      	mov	r2, r9
 801f49e:	4629      	mov	r1, r5
 801f4a0:	4650      	mov	r0, sl
 801f4a2:	f7ff fd97 	bl	801efd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f4a6:	e761      	b.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f4a8:	4638      	mov	r0, r7
 801f4aa:	f7fa fe31 	bl	801a110 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f4ae:	b950      	cbnz	r0, 801f4c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801f4b0:	e9cd 6000 	strd	r6, r0, [sp]
 801f4b4:	f8da 3000 	ldr.w	r3, [sl]
 801f4b8:	aa02      	add	r2, sp, #8
 801f4ba:	68de      	ldr	r6, [r3, #12]
 801f4bc:	4629      	mov	r1, r5
 801f4be:	4623      	mov	r3, r4
 801f4c0:	4650      	mov	r0, sl
 801f4c2:	47b0      	blx	r6
 801f4c4:	e752      	b.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f4c6:	f10d 0818 	add.w	r8, sp, #24
 801f4ca:	4639      	mov	r1, r7
 801f4cc:	4640      	mov	r0, r8
 801f4ce:	f7fa fdd3 	bl	801a078 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f4d2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f4d6:	af04      	add	r7, sp, #16
 801f4d8:	e887 0003 	stmia.w	r7, {r0, r1}
 801f4dc:	4638      	mov	r0, r7
 801f4de:	4621      	mov	r1, r4
 801f4e0:	f7f2 f800 	bl	80114e4 <_ZN8touchgfx4RectaNERKS0_>
 801f4e4:	4638      	mov	r0, r7
 801f4e6:	f7f2 f840 	bl	801156a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f4ea:	b138      	cbz	r0, 801f4fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801f4ec:	9600      	str	r6, [sp, #0]
 801f4ee:	4623      	mov	r3, r4
 801f4f0:	aa02      	add	r2, sp, #8
 801f4f2:	4649      	mov	r1, r9
 801f4f4:	4628      	mov	r0, r5
 801f4f6:	f7ff fdc9 	bl	801f08c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f4fa:	e737      	b.n	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f4fc:	e9cd 6000 	strd	r6, r0, [sp]
 801f500:	f8da 3000 	ldr.w	r3, [sl]
 801f504:	aa02      	add	r2, sp, #8
 801f506:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f50a:	4629      	mov	r1, r5
 801f50c:	463b      	mov	r3, r7
 801f50e:	4650      	mov	r0, sl
 801f510:	47d8      	blx	fp
 801f512:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f516:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f51a:	4293      	cmp	r3, r2
 801f51c:	dd13      	ble.n	801f546 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801f51e:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f522:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f526:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f52a:	1a9b      	subs	r3, r3, r2
 801f52c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f530:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f534:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f538:	9600      	str	r6, [sp, #0]
 801f53a:	4643      	mov	r3, r8
 801f53c:	aa02      	add	r2, sp, #8
 801f53e:	4649      	mov	r1, r9
 801f540:	4628      	mov	r0, r5
 801f542:	f7ff fda3 	bl	801f08c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f546:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f54a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f54e:	4293      	cmp	r3, r2
 801f550:	dd13      	ble.n	801f57a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801f552:	1a9b      	subs	r3, r3, r2
 801f554:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f558:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f55c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f560:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f564:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f568:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f56c:	9600      	str	r6, [sp, #0]
 801f56e:	4643      	mov	r3, r8
 801f570:	aa02      	add	r2, sp, #8
 801f572:	4649      	mov	r1, r9
 801f574:	4628      	mov	r0, r5
 801f576:	f7ff fd89 	bl	801f08c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f57a:	88a2      	ldrh	r2, [r4, #4]
 801f57c:	8823      	ldrh	r3, [r4, #0]
 801f57e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f582:	4413      	add	r3, r2
 801f584:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f588:	440a      	add	r2, r1
 801f58a:	b29b      	uxth	r3, r3
 801f58c:	b292      	uxth	r2, r2
 801f58e:	b211      	sxth	r1, r2
 801f590:	b218      	sxth	r0, r3
 801f592:	4288      	cmp	r0, r1
 801f594:	dd13      	ble.n	801f5be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801f596:	1a9b      	subs	r3, r3, r2
 801f598:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f59c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f5a0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f5a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f5a8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f5ac:	9600      	str	r6, [sp, #0]
 801f5ae:	4643      	mov	r3, r8
 801f5b0:	aa02      	add	r2, sp, #8
 801f5b2:	4649      	mov	r1, r9
 801f5b4:	4628      	mov	r0, r5
 801f5b6:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f5ba:	f7ff fd67 	bl	801f08c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f5be:	88e2      	ldrh	r2, [r4, #6]
 801f5c0:	8863      	ldrh	r3, [r4, #2]
 801f5c2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f5c6:	4413      	add	r3, r2
 801f5c8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f5cc:	440a      	add	r2, r1
 801f5ce:	b29b      	uxth	r3, r3
 801f5d0:	b292      	uxth	r2, r2
 801f5d2:	b211      	sxth	r1, r2
 801f5d4:	b218      	sxth	r0, r3
 801f5d6:	4288      	cmp	r0, r1
 801f5d8:	f77f aec8 	ble.w	801f36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f5dc:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f5e0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f5e4:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f5e8:	1a9b      	subs	r3, r3, r2
 801f5ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f5ee:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f5f2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f5f6:	9600      	str	r6, [sp, #0]
 801f5f8:	4643      	mov	r3, r8
 801f5fa:	e779      	b.n	801f4f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801f5fc:	200138b4 	.word	0x200138b4

0801f600 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f600:	b180      	cbz	r0, 801f624 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801f602:	2903      	cmp	r1, #3
 801f604:	d81c      	bhi.n	801f640 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f606:	e8df f001 	tbb	[pc, r1]
 801f60a:	1d02      	.short	0x1d02
 801f60c:	1f08      	.short	0x1f08
 801f60e:	4b10      	ldr	r3, [pc, #64]	; (801f650 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f610:	8818      	ldrh	r0, [r3, #0]
 801f612:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f616:	4240      	negs	r0, r0
 801f618:	4770      	bx	lr
 801f61a:	4b0d      	ldr	r3, [pc, #52]	; (801f650 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f61c:	8818      	ldrh	r0, [r3, #0]
 801f61e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f622:	4770      	bx	lr
 801f624:	2903      	cmp	r1, #3
 801f626:	d80b      	bhi.n	801f640 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f628:	a301      	add	r3, pc, #4	; (adr r3, 801f630 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801f62a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f62e:	bf00      	nop
 801f630:	0801f645 	.word	0x0801f645
 801f634:	0801f61b 	.word	0x0801f61b
 801f638:	0801f649 	.word	0x0801f649
 801f63c:	0801f60f 	.word	0x0801f60f
 801f640:	2000      	movs	r0, #0
 801f642:	4770      	bx	lr
 801f644:	2001      	movs	r0, #1
 801f646:	4770      	bx	lr
 801f648:	f04f 30ff 	mov.w	r0, #4294967295
 801f64c:	4770      	bx	lr
 801f64e:	bf00      	nop
 801f650:	200138ae 	.word	0x200138ae

0801f654 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f654:	b180      	cbz	r0, 801f678 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801f656:	2903      	cmp	r1, #3
 801f658:	d81c      	bhi.n	801f694 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f65a:	e8df f001 	tbb	[pc, r1]
 801f65e:	021d      	.short	0x021d
 801f660:	071f      	.short	0x071f
 801f662:	4b10      	ldr	r3, [pc, #64]	; (801f6a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f664:	8818      	ldrh	r0, [r3, #0]
 801f666:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f66a:	4770      	bx	lr
 801f66c:	4b0d      	ldr	r3, [pc, #52]	; (801f6a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f66e:	8818      	ldrh	r0, [r3, #0]
 801f670:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f674:	4240      	negs	r0, r0
 801f676:	4770      	bx	lr
 801f678:	2903      	cmp	r1, #3
 801f67a:	d80b      	bhi.n	801f694 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f67c:	a301      	add	r3, pc, #4	; (adr r3, 801f684 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801f67e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f682:	bf00      	nop
 801f684:	0801f663 	.word	0x0801f663
 801f688:	0801f69d 	.word	0x0801f69d
 801f68c:	0801f66d 	.word	0x0801f66d
 801f690:	0801f699 	.word	0x0801f699
 801f694:	2000      	movs	r0, #0
 801f696:	4770      	bx	lr
 801f698:	2001      	movs	r0, #1
 801f69a:	4770      	bx	lr
 801f69c:	f04f 30ff 	mov.w	r0, #4294967295
 801f6a0:	4770      	bx	lr
 801f6a2:	bf00      	nop
 801f6a4:	200138ae 	.word	0x200138ae

0801f6a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6ac:	b099      	sub	sp, #100	; 0x64
 801f6ae:	910b      	str	r1, [sp, #44]	; 0x2c
 801f6b0:	a914      	add	r1, sp, #80	; 0x50
 801f6b2:	e881 000c 	stmia.w	r1, {r2, r3}
 801f6b6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801f6ba:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801f6be:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f6c2:	9309      	str	r3, [sp, #36]	; 0x24
 801f6c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f6c8:	9310      	str	r3, [sp, #64]	; 0x40
 801f6ca:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801f6ce:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801f6d2:	930c      	str	r3, [sp, #48]	; 0x30
 801f6d4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801f6d8:	798f      	ldrb	r7, [r1, #6]
 801f6da:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801f6de:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801f6e2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801f6e6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801f6ea:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801f6ee:	431f      	orrs	r7, r3
 801f6f0:	f000 8195 	beq.w	801fa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f6f4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f6f8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801f6fc:	f891 9007 	ldrb.w	r9, [r1, #7]
 801f700:	ea59 0903 	orrs.w	r9, r9, r3
 801f704:	f000 818b 	beq.w	801fa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f708:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801f70c:	b29b      	uxth	r3, r3
 801f70e:	2d00      	cmp	r5, #0
 801f710:	f000 812e 	beq.w	801f970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801f714:	1aed      	subs	r5, r5, r3
 801f716:	b2ad      	uxth	r5, r5
 801f718:	042b      	lsls	r3, r5, #16
 801f71a:	d502      	bpl.n	801f722 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f71c:	1b64      	subs	r4, r4, r5
 801f71e:	b224      	sxth	r4, r4
 801f720:	2500      	movs	r5, #0
 801f722:	f9b2 1000 	ldrsh.w	r1, [r2]
 801f726:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801f72a:	428c      	cmp	r4, r1
 801f72c:	b28b      	uxth	r3, r1
 801f72e:	bfbf      	itttt	lt
 801f730:	18ed      	addlt	r5, r5, r3
 801f732:	1b2c      	sublt	r4, r5, r4
 801f734:	b2a5      	uxthlt	r5, r4
 801f736:	460c      	movlt	r4, r1
 801f738:	8891      	ldrh	r1, [r2, #4]
 801f73a:	440b      	add	r3, r1
 801f73c:	b21b      	sxth	r3, r3
 801f73e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f740:	88d3      	ldrh	r3, [r2, #6]
 801f742:	8852      	ldrh	r2, [r2, #2]
 801f744:	4413      	add	r3, r2
 801f746:	b21b      	sxth	r3, r3
 801f748:	930d      	str	r3, [sp, #52]	; 0x34
 801f74a:	4bbe      	ldr	r3, [pc, #760]	; (801fa44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801f74c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f74e:	f893 b000 	ldrb.w	fp, [r3]
 801f752:	f10b 3cff 	add.w	ip, fp, #4294967295
 801f756:	f1dc 0300 	rsbs	r3, ip, #0
 801f75a:	eb43 030c 	adc.w	r3, r3, ip
 801f75e:	930e      	str	r3, [sp, #56]	; 0x38
 801f760:	4621      	mov	r1, r4
 801f762:	4653      	mov	r3, sl
 801f764:	a814      	add	r0, sp, #80	; 0x50
 801f766:	f7f6 fc90 	bl	801608a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801f76a:	4621      	mov	r1, r4
 801f76c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801f770:	4653      	mov	r3, sl
 801f772:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f774:	a814      	add	r0, sp, #80	; 0x50
 801f776:	f7f6 fca5 	bl	80160c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801f77a:	a918      	add	r1, sp, #96	; 0x60
 801f77c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801f780:	a817      	add	r0, sp, #92	; 0x5c
 801f782:	f7f6 fdcb 	bl	801631c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801f786:	f1ba 0f00 	cmp.w	sl, #0
 801f78a:	f040 80f4 	bne.w	801f976 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801f78e:	f1bb 0f01 	cmp.w	fp, #1
 801f792:	f040 80f8 	bne.w	801f986 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f796:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f798:	2b00      	cmp	r3, #0
 801f79a:	f040 8145 	bne.w	801fa28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f79e:	b2ba      	uxth	r2, r7
 801f7a0:	b905      	cbnz	r5, 801f7a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f7a2:	b16e      	cbz	r6, 801f7c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f7a4:	fb06 5302 	mla	r3, r6, r2, r5
 801f7a8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f7aa:	fb08 f303 	mul.w	r3, r8, r3
 801f7ae:	4631      	mov	r1, r6
 801f7b0:	f003 0607 	and.w	r6, r3, #7
 801f7b4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f7b8:	9328      	str	r3, [sp, #160]	; 0xa0
 801f7ba:	eba9 0301 	sub.w	r3, r9, r1
 801f7be:	930a      	str	r3, [sp, #40]	; 0x28
 801f7c0:	4651      	mov	r1, sl
 801f7c2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f7c4:	f7ff ff1c 	bl	801f600 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f7c8:	4681      	mov	r9, r0
 801f7ca:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f7cc:	f7ff ff42 	bl	801f654 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f7d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f7d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f7d4:	eba3 0a01 	sub.w	sl, r3, r1
 801f7d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7da:	459a      	cmp	sl, r3
 801f7dc:	bfa8      	it	ge
 801f7de:	469a      	movge	sl, r3
 801f7e0:	f1ba 0f00 	cmp.w	sl, #0
 801f7e4:	4683      	mov	fp, r0
 801f7e6:	f340 811a 	ble.w	801fa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f7ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f7ec:	1b64      	subs	r4, r4, r5
 801f7ee:	1b1c      	subs	r4, r3, r4
 801f7f0:	42bc      	cmp	r4, r7
 801f7f2:	bfd4      	ite	le
 801f7f4:	ebc5 0504 	rsble	r5, r5, r4
 801f7f8:	ebc5 0507 	rsbgt	r5, r5, r7
 801f7fc:	2d00      	cmp	r5, #0
 801f7fe:	f340 810e 	ble.w	801fa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f802:	1b52      	subs	r2, r2, r5
 801f804:	fb08 f302 	mul.w	r3, r8, r2
 801f808:	930f      	str	r3, [sp, #60]	; 0x3c
 801f80a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f80c:	2b00      	cmp	r3, #0
 801f80e:	f040 8116 	bne.w	801fa3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f812:	4b8d      	ldr	r3, [pc, #564]	; (801fa48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f814:	6818      	ldr	r0, [r3, #0]
 801f816:	6803      	ldr	r3, [r0, #0]
 801f818:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f81a:	4798      	blx	r3
 801f81c:	2301      	movs	r3, #1
 801f81e:	fa03 f308 	lsl.w	r3, r3, r8
 801f822:	4a8a      	ldr	r2, [pc, #552]	; (801fa4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f824:	3b01      	subs	r3, #1
 801f826:	b2db      	uxtb	r3, r3
 801f828:	8811      	ldrh	r1, [r2, #0]
 801f82a:	930e      	str	r3, [sp, #56]	; 0x38
 801f82c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f830:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f834:	fb01 2303 	mla	r3, r1, r3, r2
 801f838:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f83c:	930a      	str	r3, [sp, #40]	; 0x28
 801f83e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f840:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f844:	9313      	str	r3, [sp, #76]	; 0x4c
 801f846:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f848:	0a19      	lsrs	r1, r3, #8
 801f84a:	b2cb      	uxtb	r3, r1
 801f84c:	9312      	str	r3, [sp, #72]	; 0x48
 801f84e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f850:	b2db      	uxtb	r3, r3
 801f852:	9311      	str	r3, [sp, #68]	; 0x44
 801f854:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f856:	095a      	lsrs	r2, r3, #5
 801f858:	4b7d      	ldr	r3, [pc, #500]	; (801fa50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f85a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f85e:	400b      	ands	r3, r1
 801f860:	4313      	orrs	r3, r2
 801f862:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f864:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f868:	4313      	orrs	r3, r2
 801f86a:	b29b      	uxth	r3, r3
 801f86c:	9310      	str	r3, [sp, #64]	; 0x40
 801f86e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f870:	781a      	ldrb	r2, [r3, #0]
 801f872:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f876:	4132      	asrs	r2, r6
 801f878:	fb05 b919 	mls	r9, r5, r9, fp
 801f87c:	fb03 fb05 	mul.w	fp, r3, r5
 801f880:	b2d2      	uxtb	r2, r2
 801f882:	930d      	str	r3, [sp, #52]	; 0x34
 801f884:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f888:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f88c:	f0c0 80f5 	bcc.w	801fa7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f890:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801f894:	46ae      	mov	lr, r5
 801f896:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f89a:	f0c0 80dd 	bcc.w	801fa58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f89e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f8a0:	4013      	ands	r3, r2
 801f8a2:	d055      	beq.n	801f950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f8a4:	20ff      	movs	r0, #255	; 0xff
 801f8a6:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f8a8:	fb90 f1f1 	sdiv	r1, r0, r1
 801f8ac:	434b      	muls	r3, r1
 801f8ae:	2bfe      	cmp	r3, #254	; 0xfe
 801f8b0:	dd03      	ble.n	801f8ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f8b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f8b4:	4281      	cmp	r1, r0
 801f8b6:	f000 80cd 	beq.w	801fa54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801f8ba:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f8bc:	f8bc 4000 	ldrh.w	r4, [ip]
 801f8c0:	fb11 f303 	smulbb	r3, r1, r3
 801f8c4:	b29b      	uxth	r3, r3
 801f8c6:	1c59      	adds	r1, r3, #1
 801f8c8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f8cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8d0:	b29f      	uxth	r7, r3
 801f8d2:	43db      	mvns	r3, r3
 801f8d4:	b2db      	uxtb	r3, r3
 801f8d6:	9309      	str	r3, [sp, #36]	; 0x24
 801f8d8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f8da:	1220      	asrs	r0, r4, #8
 801f8dc:	fb13 f907 	smulbb	r9, r3, r7
 801f8e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f8e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8e6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f8ea:	fb00 9003 	mla	r0, r0, r3, r9
 801f8ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f8f0:	10e1      	asrs	r1, r4, #3
 801f8f2:	fb13 f907 	smulbb	r9, r3, r7
 801f8f6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f8fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8fc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f900:	fb01 9103 	mla	r1, r1, r3, r9
 801f904:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f906:	00e4      	lsls	r4, r4, #3
 801f908:	fb13 f707 	smulbb	r7, r3, r7
 801f90c:	b2e4      	uxtb	r4, r4
 801f90e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f910:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f914:	fb04 7403 	mla	r4, r4, r3, r7
 801f918:	b280      	uxth	r0, r0
 801f91a:	b2a4      	uxth	r4, r4
 801f91c:	1c43      	adds	r3, r0, #1
 801f91e:	f104 0901 	add.w	r9, r4, #1
 801f922:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f926:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f92a:	b289      	uxth	r1, r1
 801f92c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f930:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f934:	ea49 0000 	orr.w	r0, r9, r0
 801f938:	f101 0901 	add.w	r9, r1, #1
 801f93c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f940:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f944:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f948:	ea40 0009 	orr.w	r0, r0, r9
 801f94c:	f8ac 0000 	strh.w	r0, [ip]
 801f950:	4446      	add	r6, r8
 801f952:	b2b6      	uxth	r6, r6
 801f954:	2e07      	cmp	r6, #7
 801f956:	bf81      	itttt	hi
 801f958:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801f95a:	785a      	ldrbhi	r2, [r3, #1]
 801f95c:	3301      	addhi	r3, #1
 801f95e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801f960:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f962:	bf9a      	itte	ls
 801f964:	fa42 f208 	asrls.w	r2, r2, r8
 801f968:	b2d2      	uxtbls	r2, r2
 801f96a:	2600      	movhi	r6, #0
 801f96c:	449c      	add	ip, r3
 801f96e:	e792      	b.n	801f896 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f970:	441c      	add	r4, r3
 801f972:	b224      	sxth	r4, r4
 801f974:	e6d5      	b.n	801f722 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f976:	f1ba 0f01 	cmp.w	sl, #1
 801f97a:	f47f af0c 	bne.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f97e:	f1bb 0f01 	cmp.w	fp, #1
 801f982:	f47f af08 	bne.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f986:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801fa48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801f98a:	f8db 0000 	ldr.w	r0, [fp]
 801f98e:	6803      	ldr	r3, [r0, #0]
 801f990:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f992:	4798      	blx	r3
 801f994:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801f998:	465a      	mov	r2, fp
 801f99a:	d006      	beq.n	801f9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f99c:	f1b8 0f04 	cmp.w	r8, #4
 801f9a0:	d140      	bne.n	801fa24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f9a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f9a4:	3300      	adds	r3, #0
 801f9a6:	bf18      	it	ne
 801f9a8:	2301      	movne	r3, #1
 801f9aa:	0580      	lsls	r0, r0, #22
 801f9ac:	d56e      	bpl.n	801fa8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f9ae:	f1b8 0f08 	cmp.w	r8, #8
 801f9b2:	d16b      	bne.n	801fa8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f9b4:	2b00      	cmp	r3, #0
 801f9b6:	bf0c      	ite	eq
 801f9b8:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801f9bc:	f44f 7180 	movne.w	r1, #256	; 0x100
 801f9c0:	2d00      	cmp	r5, #0
 801f9c2:	f47f aee8 	bne.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f9c6:	2e00      	cmp	r6, #0
 801f9c8:	f47f aee5 	bne.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f9cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f9ce:	19e3      	adds	r3, r4, r7
 801f9d0:	4283      	cmp	r3, r0
 801f9d2:	f73f aee0 	bgt.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f9d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9d8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f9da:	444b      	add	r3, r9
 801f9dc:	4283      	cmp	r3, r0
 801f9de:	f73f aeda 	bgt.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f9e2:	6810      	ldr	r0, [r2, #0]
 801f9e4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f9e8:	6804      	ldr	r4, [r0, #0]
 801f9ea:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f9ee:	b2bf      	uxth	r7, r7
 801f9f0:	f1b8 0f08 	cmp.w	r8, #8
 801f9f4:	f04f 0500 	mov.w	r5, #0
 801f9f8:	bf18      	it	ne
 801f9fa:	3701      	addne	r7, #1
 801f9fc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fa00:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fa02:	9104      	str	r1, [sp, #16]
 801fa04:	bf18      	it	ne
 801fa06:	f027 0701 	bicne.w	r7, r7, #1
 801fa0a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801fa0c:	bf18      	it	ne
 801fa0e:	b2bf      	uxthne	r7, r7
 801fa10:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801fa14:	e9cd 7900 	strd	r7, r9, [sp]
 801fa18:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fa1a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801fa1c:	47a0      	blx	r4
 801fa1e:	b019      	add	sp, #100	; 0x64
 801fa20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa24:	2300      	movs	r3, #0
 801fa26:	e7c0      	b.n	801f9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801fa28:	2208      	movs	r2, #8
 801fa2a:	fb92 f3f8 	sdiv	r3, r2, r8
 801fa2e:	1e5a      	subs	r2, r3, #1
 801fa30:	443a      	add	r2, r7
 801fa32:	fb92 f2f3 	sdiv	r2, r2, r3
 801fa36:	fb12 f203 	smulbb	r2, r2, r3
 801fa3a:	b292      	uxth	r2, r2
 801fa3c:	e6b0      	b.n	801f7a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801fa3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fa40:	e6ec      	b.n	801f81c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801fa42:	bf00      	nop
 801fa44:	200138ac 	.word	0x200138ac
 801fa48:	200138b4 	.word	0x200138b4
 801fa4c:	200138ae 	.word	0x200138ae
 801fa50:	00fff800 	.word	0x00fff800
 801fa54:	9810      	ldr	r0, [sp, #64]	; 0x40
 801fa56:	e779      	b.n	801f94c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801fa58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fa5a:	b153      	cbz	r3, 801fa72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801fa5c:	441e      	add	r6, r3
 801fa5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa60:	b2b6      	uxth	r6, r6
 801fa62:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801fa66:	f006 0607 	and.w	r6, r6, #7
 801fa6a:	781a      	ldrb	r2, [r3, #0]
 801fa6c:	9328      	str	r3, [sp, #160]	; 0xa0
 801fa6e:	4132      	asrs	r2, r6
 801fa70:	b2d2      	uxtb	r2, r2
 801fa72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa74:	445b      	add	r3, fp
 801fa76:	930a      	str	r3, [sp, #40]	; 0x28
 801fa78:	e706      	b.n	801f888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801fa7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa7c:	2b00      	cmp	r3, #0
 801fa7e:	d1ce      	bne.n	801fa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fa80:	4b05      	ldr	r3, [pc, #20]	; (801fa98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801fa82:	6818      	ldr	r0, [r3, #0]
 801fa84:	6803      	ldr	r3, [r0, #0]
 801fa86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fa88:	4798      	blx	r3
 801fa8a:	e7c8      	b.n	801fa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fa8c:	2b00      	cmp	r3, #0
 801fa8e:	f43f ae82 	beq.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fa92:	f44f 7180 	mov.w	r1, #256	; 0x100
 801fa96:	e793      	b.n	801f9c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801fa98:	200138b4 	.word	0x200138b4

0801fa9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801fa9c:	b538      	push	{r3, r4, r5, lr}
 801fa9e:	4c15      	ldr	r4, [pc, #84]	; (801faf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801faa0:	7823      	ldrb	r3, [r4, #0]
 801faa2:	f3bf 8f5b 	dmb	ish
 801faa6:	07da      	lsls	r2, r3, #31
 801faa8:	4605      	mov	r5, r0
 801faaa:	d40b      	bmi.n	801fac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801faac:	4620      	mov	r0, r4
 801faae:	f00a fee2 	bl	802a876 <__cxa_guard_acquire>
 801fab2:	b138      	cbz	r0, 801fac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fab4:	4620      	mov	r0, r4
 801fab6:	f00a feea 	bl	802a88e <__cxa_guard_release>
 801faba:	4a0f      	ldr	r2, [pc, #60]	; (801faf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fabc:	490f      	ldr	r1, [pc, #60]	; (801fafc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801fabe:	4810      	ldr	r0, [pc, #64]	; (801fb00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fac0:	f00a fed2 	bl	802a868 <__aeabi_atexit>
 801fac4:	4c0f      	ldr	r4, [pc, #60]	; (801fb04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801fac6:	7823      	ldrb	r3, [r4, #0]
 801fac8:	f3bf 8f5b 	dmb	ish
 801facc:	07db      	lsls	r3, r3, #31
 801face:	d40b      	bmi.n	801fae8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fad0:	4620      	mov	r0, r4
 801fad2:	f00a fed0 	bl	802a876 <__cxa_guard_acquire>
 801fad6:	b138      	cbz	r0, 801fae8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fad8:	4620      	mov	r0, r4
 801fada:	f00a fed8 	bl	802a88e <__cxa_guard_release>
 801fade:	4a06      	ldr	r2, [pc, #24]	; (801faf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fae0:	4909      	ldr	r1, [pc, #36]	; (801fb08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801fae2:	480a      	ldr	r0, [pc, #40]	; (801fb0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fae4:	f00a fec0 	bl	802a868 <__aeabi_atexit>
 801fae8:	4b05      	ldr	r3, [pc, #20]	; (801fb00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801faea:	612b      	str	r3, [r5, #16]
 801faec:	4b07      	ldr	r3, [pc, #28]	; (801fb0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801faee:	616b      	str	r3, [r5, #20]
 801faf0:	bd38      	pop	{r3, r4, r5, pc}
 801faf2:	bf00      	nop
 801faf4:	20013994 	.word	0x20013994
 801faf8:	20000000 	.word	0x20000000
 801fafc:	0801c89f 	.word	0x0801c89f
 801fb00:	200000ec 	.word	0x200000ec
 801fb04:	20013998 	.word	0x20013998
 801fb08:	0801c89d 	.word	0x0801c89d
 801fb0c:	200000f0 	.word	0x200000f0

0801fb10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801fb10:	b538      	push	{r3, r4, r5, lr}
 801fb12:	4c15      	ldr	r4, [pc, #84]	; (801fb68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801fb14:	7823      	ldrb	r3, [r4, #0]
 801fb16:	f3bf 8f5b 	dmb	ish
 801fb1a:	07da      	lsls	r2, r3, #31
 801fb1c:	4605      	mov	r5, r0
 801fb1e:	d40b      	bmi.n	801fb38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fb20:	4620      	mov	r0, r4
 801fb22:	f00a fea8 	bl	802a876 <__cxa_guard_acquire>
 801fb26:	b138      	cbz	r0, 801fb38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fb28:	4620      	mov	r0, r4
 801fb2a:	f00a feb0 	bl	802a88e <__cxa_guard_release>
 801fb2e:	4a0f      	ldr	r2, [pc, #60]	; (801fb6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fb30:	490f      	ldr	r1, [pc, #60]	; (801fb70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801fb32:	4810      	ldr	r0, [pc, #64]	; (801fb74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fb34:	f00a fe98 	bl	802a868 <__aeabi_atexit>
 801fb38:	4c0f      	ldr	r4, [pc, #60]	; (801fb78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801fb3a:	7823      	ldrb	r3, [r4, #0]
 801fb3c:	f3bf 8f5b 	dmb	ish
 801fb40:	07db      	lsls	r3, r3, #31
 801fb42:	d40b      	bmi.n	801fb5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fb44:	4620      	mov	r0, r4
 801fb46:	f00a fe96 	bl	802a876 <__cxa_guard_acquire>
 801fb4a:	b138      	cbz	r0, 801fb5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fb4c:	4620      	mov	r0, r4
 801fb4e:	f00a fe9e 	bl	802a88e <__cxa_guard_release>
 801fb52:	4a06      	ldr	r2, [pc, #24]	; (801fb6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fb54:	4909      	ldr	r1, [pc, #36]	; (801fb7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801fb56:	480a      	ldr	r0, [pc, #40]	; (801fb80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fb58:	f00a fe86 	bl	802a868 <__aeabi_atexit>
 801fb5c:	4b05      	ldr	r3, [pc, #20]	; (801fb74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fb5e:	60ab      	str	r3, [r5, #8]
 801fb60:	4b07      	ldr	r3, [pc, #28]	; (801fb80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fb62:	60eb      	str	r3, [r5, #12]
 801fb64:	bd38      	pop	{r3, r4, r5, pc}
 801fb66:	bf00      	nop
 801fb68:	2001396c 	.word	0x2001396c
 801fb6c:	20000000 	.word	0x20000000
 801fb70:	0801c8a3 	.word	0x0801c8a3
 801fb74:	200000c4 	.word	0x200000c4
 801fb78:	20013970 	.word	0x20013970
 801fb7c:	0801c8a1 	.word	0x0801c8a1
 801fb80:	200000c8 	.word	0x200000c8

0801fb84 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801fb84:	b510      	push	{r4, lr}
 801fb86:	4604      	mov	r4, r0
 801fb88:	f7ff ff88 	bl	801fa9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801fb8c:	4620      	mov	r0, r4
 801fb8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fb92:	f7ff bfbd 	b.w	801fb10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801fb98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801fb98:	b538      	push	{r3, r4, r5, lr}
 801fb9a:	4c15      	ldr	r4, [pc, #84]	; (801fbf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801fb9c:	7823      	ldrb	r3, [r4, #0]
 801fb9e:	f3bf 8f5b 	dmb	ish
 801fba2:	07da      	lsls	r2, r3, #31
 801fba4:	4605      	mov	r5, r0
 801fba6:	d40b      	bmi.n	801fbc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fba8:	4620      	mov	r0, r4
 801fbaa:	f00a fe64 	bl	802a876 <__cxa_guard_acquire>
 801fbae:	b138      	cbz	r0, 801fbc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fbb0:	4620      	mov	r0, r4
 801fbb2:	f00a fe6c 	bl	802a88e <__cxa_guard_release>
 801fbb6:	4a0f      	ldr	r2, [pc, #60]	; (801fbf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fbb8:	490f      	ldr	r1, [pc, #60]	; (801fbf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801fbba:	4810      	ldr	r0, [pc, #64]	; (801fbfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fbbc:	f00a fe54 	bl	802a868 <__aeabi_atexit>
 801fbc0:	4c0f      	ldr	r4, [pc, #60]	; (801fc00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801fbc2:	7823      	ldrb	r3, [r4, #0]
 801fbc4:	f3bf 8f5b 	dmb	ish
 801fbc8:	07db      	lsls	r3, r3, #31
 801fbca:	d40b      	bmi.n	801fbe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fbcc:	4620      	mov	r0, r4
 801fbce:	f00a fe52 	bl	802a876 <__cxa_guard_acquire>
 801fbd2:	b138      	cbz	r0, 801fbe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fbd4:	4620      	mov	r0, r4
 801fbd6:	f00a fe5a 	bl	802a88e <__cxa_guard_release>
 801fbda:	4a06      	ldr	r2, [pc, #24]	; (801fbf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fbdc:	4909      	ldr	r1, [pc, #36]	; (801fc04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801fbde:	480a      	ldr	r0, [pc, #40]	; (801fc08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fbe0:	f00a fe42 	bl	802a868 <__aeabi_atexit>
 801fbe4:	4b05      	ldr	r3, [pc, #20]	; (801fbfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fbe6:	622b      	str	r3, [r5, #32]
 801fbe8:	4b07      	ldr	r3, [pc, #28]	; (801fc08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fbea:	626b      	str	r3, [r5, #36]	; 0x24
 801fbec:	bd38      	pop	{r3, r4, r5, pc}
 801fbee:	bf00      	nop
 801fbf0:	2001399c 	.word	0x2001399c
 801fbf4:	20000000 	.word	0x20000000
 801fbf8:	0801c897 	.word	0x0801c897
 801fbfc:	200000f4 	.word	0x200000f4
 801fc00:	200139a0 	.word	0x200139a0
 801fc04:	0801c895 	.word	0x0801c895
 801fc08:	200000f8 	.word	0x200000f8

0801fc0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801fc0c:	b538      	push	{r3, r4, r5, lr}
 801fc0e:	4c15      	ldr	r4, [pc, #84]	; (801fc64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801fc10:	7823      	ldrb	r3, [r4, #0]
 801fc12:	f3bf 8f5b 	dmb	ish
 801fc16:	07da      	lsls	r2, r3, #31
 801fc18:	4605      	mov	r5, r0
 801fc1a:	d40b      	bmi.n	801fc34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fc1c:	4620      	mov	r0, r4
 801fc1e:	f00a fe2a 	bl	802a876 <__cxa_guard_acquire>
 801fc22:	b138      	cbz	r0, 801fc34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fc24:	4620      	mov	r0, r4
 801fc26:	f00a fe32 	bl	802a88e <__cxa_guard_release>
 801fc2a:	4a0f      	ldr	r2, [pc, #60]	; (801fc68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fc2c:	490f      	ldr	r1, [pc, #60]	; (801fc6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801fc2e:	4810      	ldr	r0, [pc, #64]	; (801fc70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fc30:	f00a fe1a 	bl	802a868 <__aeabi_atexit>
 801fc34:	4c0f      	ldr	r4, [pc, #60]	; (801fc74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801fc36:	7823      	ldrb	r3, [r4, #0]
 801fc38:	f3bf 8f5b 	dmb	ish
 801fc3c:	07db      	lsls	r3, r3, #31
 801fc3e:	d40b      	bmi.n	801fc58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fc40:	4620      	mov	r0, r4
 801fc42:	f00a fe18 	bl	802a876 <__cxa_guard_acquire>
 801fc46:	b138      	cbz	r0, 801fc58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fc48:	4620      	mov	r0, r4
 801fc4a:	f00a fe20 	bl	802a88e <__cxa_guard_release>
 801fc4e:	4a06      	ldr	r2, [pc, #24]	; (801fc68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fc50:	4909      	ldr	r1, [pc, #36]	; (801fc78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801fc52:	480a      	ldr	r0, [pc, #40]	; (801fc7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fc54:	f00a fe08 	bl	802a868 <__aeabi_atexit>
 801fc58:	4b05      	ldr	r3, [pc, #20]	; (801fc70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fc5a:	61ab      	str	r3, [r5, #24]
 801fc5c:	4b07      	ldr	r3, [pc, #28]	; (801fc7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fc5e:	61eb      	str	r3, [r5, #28]
 801fc60:	bd38      	pop	{r3, r4, r5, pc}
 801fc62:	bf00      	nop
 801fc64:	20013974 	.word	0x20013974
 801fc68:	20000000 	.word	0x20000000
 801fc6c:	0801c89b 	.word	0x0801c89b
 801fc70:	200000cc 	.word	0x200000cc
 801fc74:	20013978 	.word	0x20013978
 801fc78:	0801c899 	.word	0x0801c899
 801fc7c:	200000d0 	.word	0x200000d0

0801fc80 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801fc80:	b510      	push	{r4, lr}
 801fc82:	4604      	mov	r4, r0
 801fc84:	f7ff ff88 	bl	801fb98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801fc88:	4620      	mov	r0, r4
 801fc8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fc8e:	f7ff bfbd 	b.w	801fc0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801fc94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801fc94:	b538      	push	{r3, r4, r5, lr}
 801fc96:	4c15      	ldr	r4, [pc, #84]	; (801fcec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801fc98:	7823      	ldrb	r3, [r4, #0]
 801fc9a:	f3bf 8f5b 	dmb	ish
 801fc9e:	07da      	lsls	r2, r3, #31
 801fca0:	4605      	mov	r5, r0
 801fca2:	d40b      	bmi.n	801fcbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fca4:	4620      	mov	r0, r4
 801fca6:	f00a fde6 	bl	802a876 <__cxa_guard_acquire>
 801fcaa:	b138      	cbz	r0, 801fcbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fcac:	4620      	mov	r0, r4
 801fcae:	f00a fdee 	bl	802a88e <__cxa_guard_release>
 801fcb2:	4a0f      	ldr	r2, [pc, #60]	; (801fcf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fcb4:	490f      	ldr	r1, [pc, #60]	; (801fcf4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801fcb6:	4810      	ldr	r0, [pc, #64]	; (801fcf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fcb8:	f00a fdd6 	bl	802a868 <__aeabi_atexit>
 801fcbc:	4c0f      	ldr	r4, [pc, #60]	; (801fcfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801fcbe:	7823      	ldrb	r3, [r4, #0]
 801fcc0:	f3bf 8f5b 	dmb	ish
 801fcc4:	07db      	lsls	r3, r3, #31
 801fcc6:	d40b      	bmi.n	801fce0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fcc8:	4620      	mov	r0, r4
 801fcca:	f00a fdd4 	bl	802a876 <__cxa_guard_acquire>
 801fcce:	b138      	cbz	r0, 801fce0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fcd0:	4620      	mov	r0, r4
 801fcd2:	f00a fddc 	bl	802a88e <__cxa_guard_release>
 801fcd6:	4a06      	ldr	r2, [pc, #24]	; (801fcf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fcd8:	4909      	ldr	r1, [pc, #36]	; (801fd00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801fcda:	480a      	ldr	r0, [pc, #40]	; (801fd04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fcdc:	f00a fdc4 	bl	802a868 <__aeabi_atexit>
 801fce0:	4b05      	ldr	r3, [pc, #20]	; (801fcf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fce2:	632b      	str	r3, [r5, #48]	; 0x30
 801fce4:	4b07      	ldr	r3, [pc, #28]	; (801fd04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fce6:	636b      	str	r3, [r5, #52]	; 0x34
 801fce8:	bd38      	pop	{r3, r4, r5, pc}
 801fcea:	bf00      	nop
 801fcec:	200139ac 	.word	0x200139ac
 801fcf0:	20000000 	.word	0x20000000
 801fcf4:	0801c88f 	.word	0x0801c88f
 801fcf8:	20000104 	.word	0x20000104
 801fcfc:	200139b0 	.word	0x200139b0
 801fd00:	0801c88d 	.word	0x0801c88d
 801fd04:	20000108 	.word	0x20000108

0801fd08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801fd08:	b538      	push	{r3, r4, r5, lr}
 801fd0a:	4c15      	ldr	r4, [pc, #84]	; (801fd60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801fd0c:	7823      	ldrb	r3, [r4, #0]
 801fd0e:	f3bf 8f5b 	dmb	ish
 801fd12:	07da      	lsls	r2, r3, #31
 801fd14:	4605      	mov	r5, r0
 801fd16:	d40b      	bmi.n	801fd30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fd18:	4620      	mov	r0, r4
 801fd1a:	f00a fdac 	bl	802a876 <__cxa_guard_acquire>
 801fd1e:	b138      	cbz	r0, 801fd30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fd20:	4620      	mov	r0, r4
 801fd22:	f00a fdb4 	bl	802a88e <__cxa_guard_release>
 801fd26:	4a0f      	ldr	r2, [pc, #60]	; (801fd64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fd28:	490f      	ldr	r1, [pc, #60]	; (801fd68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801fd2a:	4810      	ldr	r0, [pc, #64]	; (801fd6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fd2c:	f00a fd9c 	bl	802a868 <__aeabi_atexit>
 801fd30:	4c0f      	ldr	r4, [pc, #60]	; (801fd70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801fd32:	7823      	ldrb	r3, [r4, #0]
 801fd34:	f3bf 8f5b 	dmb	ish
 801fd38:	07db      	lsls	r3, r3, #31
 801fd3a:	d40b      	bmi.n	801fd54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fd3c:	4620      	mov	r0, r4
 801fd3e:	f00a fd9a 	bl	802a876 <__cxa_guard_acquire>
 801fd42:	b138      	cbz	r0, 801fd54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fd44:	4620      	mov	r0, r4
 801fd46:	f00a fda2 	bl	802a88e <__cxa_guard_release>
 801fd4a:	4a06      	ldr	r2, [pc, #24]	; (801fd64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fd4c:	4909      	ldr	r1, [pc, #36]	; (801fd74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801fd4e:	480a      	ldr	r0, [pc, #40]	; (801fd78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fd50:	f00a fd8a 	bl	802a868 <__aeabi_atexit>
 801fd54:	4b05      	ldr	r3, [pc, #20]	; (801fd6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fd56:	62ab      	str	r3, [r5, #40]	; 0x28
 801fd58:	4b07      	ldr	r3, [pc, #28]	; (801fd78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fd5a:	62eb      	str	r3, [r5, #44]	; 0x2c
 801fd5c:	bd38      	pop	{r3, r4, r5, pc}
 801fd5e:	bf00      	nop
 801fd60:	2001397c 	.word	0x2001397c
 801fd64:	20000000 	.word	0x20000000
 801fd68:	0801c893 	.word	0x0801c893
 801fd6c:	200000d4 	.word	0x200000d4
 801fd70:	20013980 	.word	0x20013980
 801fd74:	0801c891 	.word	0x0801c891
 801fd78:	200000d8 	.word	0x200000d8

0801fd7c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801fd7c:	b510      	push	{r4, lr}
 801fd7e:	4604      	mov	r4, r0
 801fd80:	f7ff ff88 	bl	801fc94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801fd84:	4620      	mov	r0, r4
 801fd86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fd8a:	f7ff bfbd 	b.w	801fd08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801fd90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801fd90:	b538      	push	{r3, r4, r5, lr}
 801fd92:	4c15      	ldr	r4, [pc, #84]	; (801fde8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801fd94:	7823      	ldrb	r3, [r4, #0]
 801fd96:	f3bf 8f5b 	dmb	ish
 801fd9a:	07da      	lsls	r2, r3, #31
 801fd9c:	4605      	mov	r5, r0
 801fd9e:	d40b      	bmi.n	801fdb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fda0:	4620      	mov	r0, r4
 801fda2:	f00a fd68 	bl	802a876 <__cxa_guard_acquire>
 801fda6:	b138      	cbz	r0, 801fdb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fda8:	4620      	mov	r0, r4
 801fdaa:	f00a fd70 	bl	802a88e <__cxa_guard_release>
 801fdae:	4a0f      	ldr	r2, [pc, #60]	; (801fdec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fdb0:	490f      	ldr	r1, [pc, #60]	; (801fdf0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801fdb2:	4810      	ldr	r0, [pc, #64]	; (801fdf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fdb4:	f00a fd58 	bl	802a868 <__aeabi_atexit>
 801fdb8:	4c0f      	ldr	r4, [pc, #60]	; (801fdf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801fdba:	7823      	ldrb	r3, [r4, #0]
 801fdbc:	f3bf 8f5b 	dmb	ish
 801fdc0:	07db      	lsls	r3, r3, #31
 801fdc2:	d40b      	bmi.n	801fddc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fdc4:	4620      	mov	r0, r4
 801fdc6:	f00a fd56 	bl	802a876 <__cxa_guard_acquire>
 801fdca:	b138      	cbz	r0, 801fddc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fdcc:	4620      	mov	r0, r4
 801fdce:	f00a fd5e 	bl	802a88e <__cxa_guard_release>
 801fdd2:	4a06      	ldr	r2, [pc, #24]	; (801fdec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fdd4:	4909      	ldr	r1, [pc, #36]	; (801fdfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801fdd6:	480a      	ldr	r0, [pc, #40]	; (801fe00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fdd8:	f00a fd46 	bl	802a868 <__aeabi_atexit>
 801fddc:	4b05      	ldr	r3, [pc, #20]	; (801fdf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fdde:	652b      	str	r3, [r5, #80]	; 0x50
 801fde0:	4b07      	ldr	r3, [pc, #28]	; (801fe00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fde2:	656b      	str	r3, [r5, #84]	; 0x54
 801fde4:	bd38      	pop	{r3, r4, r5, pc}
 801fde6:	bf00      	nop
 801fde8:	200139b4 	.word	0x200139b4
 801fdec:	20000000 	.word	0x20000000
 801fdf0:	0801c87f 	.word	0x0801c87f
 801fdf4:	2000010c 	.word	0x2000010c
 801fdf8:	200139b8 	.word	0x200139b8
 801fdfc:	0801c87d 	.word	0x0801c87d
 801fe00:	20000110 	.word	0x20000110

0801fe04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801fe04:	b538      	push	{r3, r4, r5, lr}
 801fe06:	4c15      	ldr	r4, [pc, #84]	; (801fe5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801fe08:	7823      	ldrb	r3, [r4, #0]
 801fe0a:	f3bf 8f5b 	dmb	ish
 801fe0e:	07da      	lsls	r2, r3, #31
 801fe10:	4605      	mov	r5, r0
 801fe12:	d40b      	bmi.n	801fe2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fe14:	4620      	mov	r0, r4
 801fe16:	f00a fd2e 	bl	802a876 <__cxa_guard_acquire>
 801fe1a:	b138      	cbz	r0, 801fe2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fe1c:	4620      	mov	r0, r4
 801fe1e:	f00a fd36 	bl	802a88e <__cxa_guard_release>
 801fe22:	4a0f      	ldr	r2, [pc, #60]	; (801fe60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fe24:	490f      	ldr	r1, [pc, #60]	; (801fe64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801fe26:	4810      	ldr	r0, [pc, #64]	; (801fe68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fe28:	f00a fd1e 	bl	802a868 <__aeabi_atexit>
 801fe2c:	4c0f      	ldr	r4, [pc, #60]	; (801fe6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801fe2e:	7823      	ldrb	r3, [r4, #0]
 801fe30:	f3bf 8f5b 	dmb	ish
 801fe34:	07db      	lsls	r3, r3, #31
 801fe36:	d40b      	bmi.n	801fe50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fe38:	4620      	mov	r0, r4
 801fe3a:	f00a fd1c 	bl	802a876 <__cxa_guard_acquire>
 801fe3e:	b138      	cbz	r0, 801fe50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fe40:	4620      	mov	r0, r4
 801fe42:	f00a fd24 	bl	802a88e <__cxa_guard_release>
 801fe46:	4a06      	ldr	r2, [pc, #24]	; (801fe60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fe48:	4909      	ldr	r1, [pc, #36]	; (801fe70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801fe4a:	480a      	ldr	r0, [pc, #40]	; (801fe74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fe4c:	f00a fd0c 	bl	802a868 <__aeabi_atexit>
 801fe50:	4b05      	ldr	r3, [pc, #20]	; (801fe68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fe52:	64ab      	str	r3, [r5, #72]	; 0x48
 801fe54:	4b07      	ldr	r3, [pc, #28]	; (801fe74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fe56:	64eb      	str	r3, [r5, #76]	; 0x4c
 801fe58:	bd38      	pop	{r3, r4, r5, pc}
 801fe5a:	bf00      	nop
 801fe5c:	200139bc 	.word	0x200139bc
 801fe60:	20000000 	.word	0x20000000
 801fe64:	0801c883 	.word	0x0801c883
 801fe68:	20000114 	.word	0x20000114
 801fe6c:	200139c0 	.word	0x200139c0
 801fe70:	0801c881 	.word	0x0801c881
 801fe74:	20000118 	.word	0x20000118

0801fe78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801fe78:	b538      	push	{r3, r4, r5, lr}
 801fe7a:	4c15      	ldr	r4, [pc, #84]	; (801fed0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801fe7c:	7823      	ldrb	r3, [r4, #0]
 801fe7e:	f3bf 8f5b 	dmb	ish
 801fe82:	07da      	lsls	r2, r3, #31
 801fe84:	4605      	mov	r5, r0
 801fe86:	d40b      	bmi.n	801fea0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fe88:	4620      	mov	r0, r4
 801fe8a:	f00a fcf4 	bl	802a876 <__cxa_guard_acquire>
 801fe8e:	b138      	cbz	r0, 801fea0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fe90:	4620      	mov	r0, r4
 801fe92:	f00a fcfc 	bl	802a88e <__cxa_guard_release>
 801fe96:	4a0f      	ldr	r2, [pc, #60]	; (801fed4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fe98:	490f      	ldr	r1, [pc, #60]	; (801fed8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801fe9a:	4810      	ldr	r0, [pc, #64]	; (801fedc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fe9c:	f00a fce4 	bl	802a868 <__aeabi_atexit>
 801fea0:	4c0f      	ldr	r4, [pc, #60]	; (801fee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801fea2:	7823      	ldrb	r3, [r4, #0]
 801fea4:	f3bf 8f5b 	dmb	ish
 801fea8:	07db      	lsls	r3, r3, #31
 801feaa:	d40b      	bmi.n	801fec4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801feac:	4620      	mov	r0, r4
 801feae:	f00a fce2 	bl	802a876 <__cxa_guard_acquire>
 801feb2:	b138      	cbz	r0, 801fec4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801feb4:	4620      	mov	r0, r4
 801feb6:	f00a fcea 	bl	802a88e <__cxa_guard_release>
 801feba:	4a06      	ldr	r2, [pc, #24]	; (801fed4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801febc:	4909      	ldr	r1, [pc, #36]	; (801fee4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801febe:	480a      	ldr	r0, [pc, #40]	; (801fee8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801fec0:	f00a fcd2 	bl	802a868 <__aeabi_atexit>
 801fec4:	4b05      	ldr	r3, [pc, #20]	; (801fedc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fec6:	642b      	str	r3, [r5, #64]	; 0x40
 801fec8:	4b07      	ldr	r3, [pc, #28]	; (801fee8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801feca:	646b      	str	r3, [r5, #68]	; 0x44
 801fecc:	bd38      	pop	{r3, r4, r5, pc}
 801fece:	bf00      	nop
 801fed0:	20013984 	.word	0x20013984
 801fed4:	20000000 	.word	0x20000000
 801fed8:	0801c887 	.word	0x0801c887
 801fedc:	200000dc 	.word	0x200000dc
 801fee0:	20013988 	.word	0x20013988
 801fee4:	0801c885 	.word	0x0801c885
 801fee8:	200000e0 	.word	0x200000e0

0801feec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801feec:	b538      	push	{r3, r4, r5, lr}
 801feee:	4c15      	ldr	r4, [pc, #84]	; (801ff44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801fef0:	7823      	ldrb	r3, [r4, #0]
 801fef2:	f3bf 8f5b 	dmb	ish
 801fef6:	07da      	lsls	r2, r3, #31
 801fef8:	4605      	mov	r5, r0
 801fefa:	d40b      	bmi.n	801ff14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fefc:	4620      	mov	r0, r4
 801fefe:	f00a fcba 	bl	802a876 <__cxa_guard_acquire>
 801ff02:	b138      	cbz	r0, 801ff14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801ff04:	4620      	mov	r0, r4
 801ff06:	f00a fcc2 	bl	802a88e <__cxa_guard_release>
 801ff0a:	4a0f      	ldr	r2, [pc, #60]	; (801ff48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801ff0c:	490f      	ldr	r1, [pc, #60]	; (801ff4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801ff0e:	4810      	ldr	r0, [pc, #64]	; (801ff50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801ff10:	f00a fcaa 	bl	802a868 <__aeabi_atexit>
 801ff14:	4c0f      	ldr	r4, [pc, #60]	; (801ff54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801ff16:	7823      	ldrb	r3, [r4, #0]
 801ff18:	f3bf 8f5b 	dmb	ish
 801ff1c:	07db      	lsls	r3, r3, #31
 801ff1e:	d40b      	bmi.n	801ff38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801ff20:	4620      	mov	r0, r4
 801ff22:	f00a fca8 	bl	802a876 <__cxa_guard_acquire>
 801ff26:	b138      	cbz	r0, 801ff38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801ff28:	4620      	mov	r0, r4
 801ff2a:	f00a fcb0 	bl	802a88e <__cxa_guard_release>
 801ff2e:	4a06      	ldr	r2, [pc, #24]	; (801ff48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801ff30:	4909      	ldr	r1, [pc, #36]	; (801ff58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801ff32:	480a      	ldr	r0, [pc, #40]	; (801ff5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801ff34:	f00a fc98 	bl	802a868 <__aeabi_atexit>
 801ff38:	4b05      	ldr	r3, [pc, #20]	; (801ff50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801ff3a:	63ab      	str	r3, [r5, #56]	; 0x38
 801ff3c:	4b07      	ldr	r3, [pc, #28]	; (801ff5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801ff3e:	63eb      	str	r3, [r5, #60]	; 0x3c
 801ff40:	bd38      	pop	{r3, r4, r5, pc}
 801ff42:	bf00      	nop
 801ff44:	200139a4 	.word	0x200139a4
 801ff48:	20000000 	.word	0x20000000
 801ff4c:	0801c88b 	.word	0x0801c88b
 801ff50:	200000fc 	.word	0x200000fc
 801ff54:	200139a8 	.word	0x200139a8
 801ff58:	0801c889 	.word	0x0801c889
 801ff5c:	20000100 	.word	0x20000100

0801ff60 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801ff60:	b510      	push	{r4, lr}
 801ff62:	4604      	mov	r4, r0
 801ff64:	f7ff ff14 	bl	801fd90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801ff68:	4620      	mov	r0, r4
 801ff6a:	f7ff ff85 	bl	801fe78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801ff6e:	4620      	mov	r0, r4
 801ff70:	f7ff ff48 	bl	801fe04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801ff74:	4620      	mov	r0, r4
 801ff76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ff7a:	f7ff bfb7 	b.w	801feec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ff80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ff80:	b538      	push	{r3, r4, r5, lr}
 801ff82:	4c15      	ldr	r4, [pc, #84]	; (801ffd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ff84:	7823      	ldrb	r3, [r4, #0]
 801ff86:	f3bf 8f5b 	dmb	ish
 801ff8a:	07da      	lsls	r2, r3, #31
 801ff8c:	4605      	mov	r5, r0
 801ff8e:	d40b      	bmi.n	801ffa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ff90:	4620      	mov	r0, r4
 801ff92:	f00a fc70 	bl	802a876 <__cxa_guard_acquire>
 801ff96:	b138      	cbz	r0, 801ffa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ff98:	4620      	mov	r0, r4
 801ff9a:	f00a fc78 	bl	802a88e <__cxa_guard_release>
 801ff9e:	4a0f      	ldr	r2, [pc, #60]	; (801ffdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ffa0:	490f      	ldr	r1, [pc, #60]	; (801ffe0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ffa2:	4810      	ldr	r0, [pc, #64]	; (801ffe4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ffa4:	f00a fc60 	bl	802a868 <__aeabi_atexit>
 801ffa8:	4c0f      	ldr	r4, [pc, #60]	; (801ffe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801ffaa:	7823      	ldrb	r3, [r4, #0]
 801ffac:	f3bf 8f5b 	dmb	ish
 801ffb0:	07db      	lsls	r3, r3, #31
 801ffb2:	d40b      	bmi.n	801ffcc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ffb4:	4620      	mov	r0, r4
 801ffb6:	f00a fc5e 	bl	802a876 <__cxa_guard_acquire>
 801ffba:	b138      	cbz	r0, 801ffcc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ffbc:	4620      	mov	r0, r4
 801ffbe:	f00a fc66 	bl	802a88e <__cxa_guard_release>
 801ffc2:	4a06      	ldr	r2, [pc, #24]	; (801ffdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ffc4:	4909      	ldr	r1, [pc, #36]	; (801ffec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ffc6:	480a      	ldr	r0, [pc, #40]	; (801fff0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ffc8:	f00a fc4e 	bl	802a868 <__aeabi_atexit>
 801ffcc:	4b05      	ldr	r3, [pc, #20]	; (801ffe4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ffce:	662b      	str	r3, [r5, #96]	; 0x60
 801ffd0:	4b07      	ldr	r3, [pc, #28]	; (801fff0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ffd2:	666b      	str	r3, [r5, #100]	; 0x64
 801ffd4:	bd38      	pop	{r3, r4, r5, pc}
 801ffd6:	bf00      	nop
 801ffd8:	2001398c 	.word	0x2001398c
 801ffdc:	20000000 	.word	0x20000000
 801ffe0:	0801c877 	.word	0x0801c877
 801ffe4:	200000e4 	.word	0x200000e4
 801ffe8:	20013990 	.word	0x20013990
 801ffec:	0801c875 	.word	0x0801c875
 801fff0:	200000e8 	.word	0x200000e8

0801fff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801fff4:	b538      	push	{r3, r4, r5, lr}
 801fff6:	4c15      	ldr	r4, [pc, #84]	; (802004c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801fff8:	7823      	ldrb	r3, [r4, #0]
 801fffa:	f3bf 8f5b 	dmb	ish
 801fffe:	07da      	lsls	r2, r3, #31
 8020000:	4605      	mov	r5, r0
 8020002:	d40b      	bmi.n	802001c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8020004:	4620      	mov	r0, r4
 8020006:	f00a fc36 	bl	802a876 <__cxa_guard_acquire>
 802000a:	b138      	cbz	r0, 802001c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802000c:	4620      	mov	r0, r4
 802000e:	f00a fc3e 	bl	802a88e <__cxa_guard_release>
 8020012:	4a0f      	ldr	r2, [pc, #60]	; (8020050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020014:	490f      	ldr	r1, [pc, #60]	; (8020054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8020016:	4810      	ldr	r0, [pc, #64]	; (8020058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8020018:	f00a fc26 	bl	802a868 <__aeabi_atexit>
 802001c:	4c0f      	ldr	r4, [pc, #60]	; (802005c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 802001e:	7823      	ldrb	r3, [r4, #0]
 8020020:	f3bf 8f5b 	dmb	ish
 8020024:	07db      	lsls	r3, r3, #31
 8020026:	d40b      	bmi.n	8020040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8020028:	4620      	mov	r0, r4
 802002a:	f00a fc24 	bl	802a876 <__cxa_guard_acquire>
 802002e:	b138      	cbz	r0, 8020040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8020030:	4620      	mov	r0, r4
 8020032:	f00a fc2c 	bl	802a88e <__cxa_guard_release>
 8020036:	4a06      	ldr	r2, [pc, #24]	; (8020050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020038:	4909      	ldr	r1, [pc, #36]	; (8020060 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 802003a:	480a      	ldr	r0, [pc, #40]	; (8020064 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802003c:	f00a fc14 	bl	802a868 <__aeabi_atexit>
 8020040:	4b05      	ldr	r3, [pc, #20]	; (8020058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8020042:	65ab      	str	r3, [r5, #88]	; 0x58
 8020044:	4b07      	ldr	r3, [pc, #28]	; (8020064 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8020046:	65eb      	str	r3, [r5, #92]	; 0x5c
 8020048:	bd38      	pop	{r3, r4, r5, pc}
 802004a:	bf00      	nop
 802004c:	20013964 	.word	0x20013964
 8020050:	20000000 	.word	0x20000000
 8020054:	0801c87b 	.word	0x0801c87b
 8020058:	200000bc 	.word	0x200000bc
 802005c:	20013968 	.word	0x20013968
 8020060:	0801c879 	.word	0x0801c879
 8020064:	200000c0 	.word	0x200000c0

08020068 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020068:	b510      	push	{r4, lr}
 802006a:	4604      	mov	r4, r0
 802006c:	f7ff ff88 	bl	801ff80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020070:	4620      	mov	r0, r4
 8020072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020076:	f7ff bfbd 	b.w	801fff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0802007c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 802007c:	b538      	push	{r3, r4, r5, lr}
 802007e:	4c15      	ldr	r4, [pc, #84]	; (80200d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020080:	7823      	ldrb	r3, [r4, #0]
 8020082:	f3bf 8f5b 	dmb	ish
 8020086:	07da      	lsls	r2, r3, #31
 8020088:	4605      	mov	r5, r0
 802008a:	d40b      	bmi.n	80200a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802008c:	4620      	mov	r0, r4
 802008e:	f00a fbf2 	bl	802a876 <__cxa_guard_acquire>
 8020092:	b138      	cbz	r0, 80200a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020094:	4620      	mov	r0, r4
 8020096:	f00a fbfa 	bl	802a88e <__cxa_guard_release>
 802009a:	4a0f      	ldr	r2, [pc, #60]	; (80200d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 802009c:	490f      	ldr	r1, [pc, #60]	; (80200dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 802009e:	4810      	ldr	r0, [pc, #64]	; (80200e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80200a0:	f00a fbe2 	bl	802a868 <__aeabi_atexit>
 80200a4:	4c0f      	ldr	r4, [pc, #60]	; (80200e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80200a6:	7823      	ldrb	r3, [r4, #0]
 80200a8:	f3bf 8f5b 	dmb	ish
 80200ac:	07db      	lsls	r3, r3, #31
 80200ae:	d40b      	bmi.n	80200c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80200b0:	4620      	mov	r0, r4
 80200b2:	f00a fbe0 	bl	802a876 <__cxa_guard_acquire>
 80200b6:	b138      	cbz	r0, 80200c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80200b8:	4620      	mov	r0, r4
 80200ba:	f00a fbe8 	bl	802a88e <__cxa_guard_release>
 80200be:	4a06      	ldr	r2, [pc, #24]	; (80200d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80200c0:	4909      	ldr	r1, [pc, #36]	; (80200e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80200c2:	480a      	ldr	r0, [pc, #40]	; (80200ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80200c4:	f00a fbd0 	bl	802a868 <__aeabi_atexit>
 80200c8:	4b05      	ldr	r3, [pc, #20]	; (80200e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80200ca:	672b      	str	r3, [r5, #112]	; 0x70
 80200cc:	4b07      	ldr	r3, [pc, #28]	; (80200ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80200ce:	676b      	str	r3, [r5, #116]	; 0x74
 80200d0:	bd38      	pop	{r3, r4, r5, pc}
 80200d2:	bf00      	nop
 80200d4:	2001395c 	.word	0x2001395c
 80200d8:	20000000 	.word	0x20000000
 80200dc:	0801c86f 	.word	0x0801c86f
 80200e0:	200000b4 	.word	0x200000b4
 80200e4:	20013960 	.word	0x20013960
 80200e8:	0801c86d 	.word	0x0801c86d
 80200ec:	200000b8 	.word	0x200000b8

080200f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80200f0:	b538      	push	{r3, r4, r5, lr}
 80200f2:	4c15      	ldr	r4, [pc, #84]	; (8020148 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80200f4:	7823      	ldrb	r3, [r4, #0]
 80200f6:	f3bf 8f5b 	dmb	ish
 80200fa:	07da      	lsls	r2, r3, #31
 80200fc:	4605      	mov	r5, r0
 80200fe:	d40b      	bmi.n	8020118 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020100:	4620      	mov	r0, r4
 8020102:	f00a fbb8 	bl	802a876 <__cxa_guard_acquire>
 8020106:	b138      	cbz	r0, 8020118 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020108:	4620      	mov	r0, r4
 802010a:	f00a fbc0 	bl	802a88e <__cxa_guard_release>
 802010e:	4a0f      	ldr	r2, [pc, #60]	; (802014c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020110:	490f      	ldr	r1, [pc, #60]	; (8020150 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8020112:	4810      	ldr	r0, [pc, #64]	; (8020154 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020114:	f00a fba8 	bl	802a868 <__aeabi_atexit>
 8020118:	4c0f      	ldr	r4, [pc, #60]	; (8020158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 802011a:	7823      	ldrb	r3, [r4, #0]
 802011c:	f3bf 8f5b 	dmb	ish
 8020120:	07db      	lsls	r3, r3, #31
 8020122:	d40b      	bmi.n	802013c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8020124:	4620      	mov	r0, r4
 8020126:	f00a fba6 	bl	802a876 <__cxa_guard_acquire>
 802012a:	b138      	cbz	r0, 802013c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802012c:	4620      	mov	r0, r4
 802012e:	f00a fbae 	bl	802a88e <__cxa_guard_release>
 8020132:	4a06      	ldr	r2, [pc, #24]	; (802014c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020134:	4909      	ldr	r1, [pc, #36]	; (802015c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8020136:	480a      	ldr	r0, [pc, #40]	; (8020160 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020138:	f00a fb96 	bl	802a868 <__aeabi_atexit>
 802013c:	4b05      	ldr	r3, [pc, #20]	; (8020154 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802013e:	66ab      	str	r3, [r5, #104]	; 0x68
 8020140:	4b07      	ldr	r3, [pc, #28]	; (8020160 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020142:	66eb      	str	r3, [r5, #108]	; 0x6c
 8020144:	bd38      	pop	{r3, r4, r5, pc}
 8020146:	bf00      	nop
 8020148:	20013954 	.word	0x20013954
 802014c:	20000000 	.word	0x20000000
 8020150:	0801c873 	.word	0x0801c873
 8020154:	200000ac 	.word	0x200000ac
 8020158:	20013958 	.word	0x20013958
 802015c:	0801c871 	.word	0x0801c871
 8020160:	200000b0 	.word	0x200000b0

08020164 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8020164:	b510      	push	{r4, lr}
 8020166:	4604      	mov	r4, r0
 8020168:	f7ff ff88 	bl	802007c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 802016c:	4620      	mov	r0, r4
 802016e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020172:	f7ff bfbd 	b.w	80200f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08020176 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8020176:	b510      	push	{r4, lr}
 8020178:	4604      	mov	r4, r0
 802017a:	f7ff fff3 	bl	8020164 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 802017e:	4620      	mov	r0, r4
 8020180:	f7ff ff72 	bl	8020068 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8020184:	4620      	mov	r0, r4
 8020186:	f7ff fdf9 	bl	801fd7c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 802018a:	4620      	mov	r0, r4
 802018c:	f7ff fcfa 	bl	801fb84 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020190:	4620      	mov	r0, r4
 8020192:	f7ff fd75 	bl	801fc80 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8020196:	4620      	mov	r0, r4
 8020198:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802019c:	f7ff bee0 	b.w	801ff60 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080201a0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80201a0:	b538      	push	{r3, r4, r5, lr}
 80201a2:	4c0b      	ldr	r4, [pc, #44]	; (80201d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80201a4:	7823      	ldrb	r3, [r4, #0]
 80201a6:	f3bf 8f5b 	dmb	ish
 80201aa:	07db      	lsls	r3, r3, #31
 80201ac:	4605      	mov	r5, r0
 80201ae:	d40b      	bmi.n	80201c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80201b0:	4620      	mov	r0, r4
 80201b2:	f00a fb60 	bl	802a876 <__cxa_guard_acquire>
 80201b6:	b138      	cbz	r0, 80201c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80201b8:	4620      	mov	r0, r4
 80201ba:	f00a fb68 	bl	802a88e <__cxa_guard_release>
 80201be:	4a05      	ldr	r2, [pc, #20]	; (80201d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80201c0:	4905      	ldr	r1, [pc, #20]	; (80201d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80201c2:	4806      	ldr	r0, [pc, #24]	; (80201dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80201c4:	f00a fb50 	bl	802a868 <__aeabi_atexit>
 80201c8:	4b04      	ldr	r3, [pc, #16]	; (80201dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80201ca:	67ab      	str	r3, [r5, #120]	; 0x78
 80201cc:	bd38      	pop	{r3, r4, r5, pc}
 80201ce:	bf00      	nop
 80201d0:	20013948 	.word	0x20013948
 80201d4:	20000000 	.word	0x20000000
 80201d8:	0801c86b 	.word	0x0801c86b
 80201dc:	200000a4 	.word	0x200000a4

080201e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80201e0:	b538      	push	{r3, r4, r5, lr}
 80201e2:	4c0b      	ldr	r4, [pc, #44]	; (8020210 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80201e4:	7823      	ldrb	r3, [r4, #0]
 80201e6:	f3bf 8f5b 	dmb	ish
 80201ea:	07db      	lsls	r3, r3, #31
 80201ec:	4605      	mov	r5, r0
 80201ee:	d40b      	bmi.n	8020208 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80201f0:	4620      	mov	r0, r4
 80201f2:	f00a fb40 	bl	802a876 <__cxa_guard_acquire>
 80201f6:	b138      	cbz	r0, 8020208 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80201f8:	4620      	mov	r0, r4
 80201fa:	f00a fb48 	bl	802a88e <__cxa_guard_release>
 80201fe:	4a05      	ldr	r2, [pc, #20]	; (8020214 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8020200:	4905      	ldr	r1, [pc, #20]	; (8020218 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8020202:	4806      	ldr	r0, [pc, #24]	; (802021c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8020204:	f00a fb30 	bl	802a868 <__aeabi_atexit>
 8020208:	4b04      	ldr	r3, [pc, #16]	; (802021c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802020a:	67eb      	str	r3, [r5, #124]	; 0x7c
 802020c:	bd38      	pop	{r3, r4, r5, pc}
 802020e:	bf00      	nop
 8020210:	2001394c 	.word	0x2001394c
 8020214:	20000000 	.word	0x20000000
 8020218:	0801c869 	.word	0x0801c869
 802021c:	200000a8 	.word	0x200000a8

08020220 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8020220:	b570      	push	{r4, r5, r6, lr}
 8020222:	4d0d      	ldr	r5, [pc, #52]	; (8020258 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8020224:	4c0d      	ldr	r4, [pc, #52]	; (802025c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8020226:	782b      	ldrb	r3, [r5, #0]
 8020228:	f3bf 8f5b 	dmb	ish
 802022c:	f013 0f01 	tst.w	r3, #1
 8020230:	4606      	mov	r6, r0
 8020232:	d10d      	bne.n	8020250 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020234:	4628      	mov	r0, r5
 8020236:	f00a fb1e 	bl	802a876 <__cxa_guard_acquire>
 802023a:	b148      	cbz	r0, 8020250 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802023c:	4b08      	ldr	r3, [pc, #32]	; (8020260 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 802023e:	6023      	str	r3, [r4, #0]
 8020240:	4628      	mov	r0, r5
 8020242:	f00a fb24 	bl	802a88e <__cxa_guard_release>
 8020246:	4a07      	ldr	r2, [pc, #28]	; (8020264 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020248:	4907      	ldr	r1, [pc, #28]	; (8020268 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 802024a:	4620      	mov	r0, r4
 802024c:	f00a fb0c 	bl	802a868 <__aeabi_atexit>
 8020250:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8020254:	bd70      	pop	{r4, r5, r6, pc}
 8020256:	bf00      	nop
 8020258:	20013950 	.word	0x20013950
 802025c:	200139c4 	.word	0x200139c4
 8020260:	08030200 	.word	0x08030200
 8020264:	20000000 	.word	0x20000000
 8020268:	0801c867 	.word	0x0801c867

0802026c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 802026c:	b510      	push	{r4, lr}
 802026e:	4604      	mov	r4, r0
 8020270:	f7ff ff96 	bl	80201a0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8020274:	4620      	mov	r0, r4
 8020276:	f7ff ffb3 	bl	80201e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 802027a:	4620      	mov	r0, r4
 802027c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020280:	f7ff bfce 	b.w	8020220 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08020284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8020284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020288:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 802028c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020290:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8020294:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020298:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 802029c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80202a0:	8808      	ldrh	r0, [r1, #0]
 80202a2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80202a6:	2d00      	cmp	r5, #0
 80202a8:	eb02 0a0c 	add.w	sl, r2, ip
 80202ac:	f2c0 80b0 	blt.w	8020410 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80202b0:	45ab      	cmp	fp, r5
 80202b2:	f340 80ad 	ble.w	8020410 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80202b6:	2c00      	cmp	r4, #0
 80202b8:	f2c0 80a8 	blt.w	802040c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80202bc:	45a6      	cmp	lr, r4
 80202be:	f340 80a5 	ble.w	802040c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80202c2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80202c6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80202ca:	1c62      	adds	r2, r4, #1
 80202cc:	f100 80a3 	bmi.w	8020416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80202d0:	4596      	cmp	lr, r2
 80202d2:	f340 80a0 	ble.w	8020416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80202d6:	f1b9 0f00 	cmp.w	r9, #0
 80202da:	f000 809c 	beq.w	8020416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80202de:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80202e2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80202e6:	3501      	adds	r5, #1
 80202e8:	f100 8099 	bmi.w	802041e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80202ec:	45ab      	cmp	fp, r5
 80202ee:	f340 8096 	ble.w	802041e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80202f2:	2f00      	cmp	r7, #0
 80202f4:	f000 8093 	beq.w	802041e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80202f8:	2c00      	cmp	r4, #0
 80202fa:	f2c0 808e 	blt.w	802041a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80202fe:	45a6      	cmp	lr, r4
 8020300:	f340 808b 	ble.w	802041a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020304:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8020308:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 802030c:	3401      	adds	r4, #1
 802030e:	f100 8089 	bmi.w	8020424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020312:	45a6      	cmp	lr, r4
 8020314:	f340 8086 	ble.w	8020424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020318:	f1b9 0f00 	cmp.w	r9, #0
 802031c:	f000 8082 	beq.w	8020424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020320:	44d6      	add	lr, sl
 8020322:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020326:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 802032a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802032e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020332:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8020336:	fb19 fe07 	smulbb	lr, r9, r7
 802033a:	ea44 0808 	orr.w	r8, r4, r8
 802033e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8020342:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8020346:	f1c7 0210 	rsb	r2, r7, #16
 802034a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802034e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020352:	ea44 0c0c 	orr.w	ip, r4, ip
 8020356:	eba2 0209 	sub.w	r2, r2, r9
 802035a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802035e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8020362:	fb04 f40c 	mul.w	r4, r4, ip
 8020366:	fb02 4808 	mla	r8, r2, r8, r4
 802036a:	041a      	lsls	r2, r3, #16
 802036c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020370:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020374:	4313      	orrs	r3, r2
 8020376:	042a      	lsls	r2, r5, #16
 8020378:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802037c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020380:	fb0e 8303 	mla	r3, lr, r3, r8
 8020384:	432a      	orrs	r2, r5
 8020386:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802038a:	fb07 3202 	mla	r2, r7, r2, r3
 802038e:	0d53      	lsrs	r3, r2, #21
 8020390:	0952      	lsrs	r2, r2, #5
 8020392:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020396:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802039a:	431a      	orrs	r2, r3
 802039c:	b293      	uxth	r3, r2
 802039e:	b2b4      	uxth	r4, r6
 80203a0:	1202      	asrs	r2, r0, #8
 80203a2:	43f6      	mvns	r6, r6
 80203a4:	b2f6      	uxtb	r6, r6
 80203a6:	121d      	asrs	r5, r3, #8
 80203a8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80203ac:	fb12 f206 	smulbb	r2, r2, r6
 80203b0:	10c7      	asrs	r7, r0, #3
 80203b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80203b6:	00c0      	lsls	r0, r0, #3
 80203b8:	fb05 2504 	mla	r5, r5, r4, r2
 80203bc:	b2c0      	uxtb	r0, r0
 80203be:	10da      	asrs	r2, r3, #3
 80203c0:	00db      	lsls	r3, r3, #3
 80203c2:	b2db      	uxtb	r3, r3
 80203c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80203c8:	fb10 f006 	smulbb	r0, r0, r6
 80203cc:	b2ad      	uxth	r5, r5
 80203ce:	fb03 0004 	mla	r0, r3, r4, r0
 80203d2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80203d6:	fb17 f706 	smulbb	r7, r7, r6
 80203da:	b280      	uxth	r0, r0
 80203dc:	1c6b      	adds	r3, r5, #1
 80203de:	fb02 7204 	mla	r2, r2, r4, r7
 80203e2:	b292      	uxth	r2, r2
 80203e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80203e8:	1c43      	adds	r3, r0, #1
 80203ea:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80203ee:	1c50      	adds	r0, r2, #1
 80203f0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80203f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80203f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80203fc:	0952      	lsrs	r2, r2, #5
 80203fe:	432b      	orrs	r3, r5
 8020400:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020404:	4313      	orrs	r3, r2
 8020406:	800b      	strh	r3, [r1, #0]
 8020408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802040c:	4680      	mov	r8, r0
 802040e:	e75c      	b.n	80202ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8020410:	4684      	mov	ip, r0
 8020412:	4680      	mov	r8, r0
 8020414:	e767      	b.n	80202e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020416:	4684      	mov	ip, r0
 8020418:	e765      	b.n	80202e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802041a:	4605      	mov	r5, r0
 802041c:	e776      	b.n	802030c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 802041e:	4603      	mov	r3, r0
 8020420:	4605      	mov	r5, r0
 8020422:	e782      	b.n	802032a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8020424:	4603      	mov	r3, r0
 8020426:	e780      	b.n	802032a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08020428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802042c:	b099      	sub	sp, #100	; 0x64
 802042e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8020432:	9215      	str	r2, [sp, #84]	; 0x54
 8020434:	9309      	str	r3, [sp, #36]	; 0x24
 8020436:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020438:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 802043c:	930d      	str	r3, [sp, #52]	; 0x34
 802043e:	910c      	str	r1, [sp, #48]	; 0x30
 8020440:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8020444:	9016      	str	r0, [sp, #88]	; 0x58
 8020446:	6850      	ldr	r0, [r2, #4]
 8020448:	6812      	ldr	r2, [r2, #0]
 802044a:	fb00 1303 	mla	r3, r0, r3, r1
 802044e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020452:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020454:	681b      	ldr	r3, [r3, #0]
 8020456:	930b      	str	r3, [sp, #44]	; 0x2c
 8020458:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802045a:	685e      	ldr	r6, [r3, #4]
 802045c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802045e:	43db      	mvns	r3, r3
 8020460:	b2db      	uxtb	r3, r3
 8020462:	3604      	adds	r6, #4
 8020464:	930a      	str	r3, [sp, #40]	; 0x28
 8020466:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020468:	2b00      	cmp	r3, #0
 802046a:	dc03      	bgt.n	8020474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802046c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802046e:	2b00      	cmp	r3, #0
 8020470:	f340 8225 	ble.w	80208be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020474:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020476:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802047a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802047e:	1e48      	subs	r0, r1, #1
 8020480:	1e57      	subs	r7, r2, #1
 8020482:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020484:	2b00      	cmp	r3, #0
 8020486:	f340 80e3 	ble.w	8020650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802048a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 802048e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020492:	d406      	bmi.n	80204a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020494:	4584      	cmp	ip, r0
 8020496:	da04      	bge.n	80204a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020498:	2b00      	cmp	r3, #0
 802049a:	db02      	blt.n	80204a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802049c:	42bb      	cmp	r3, r7
 802049e:	f2c0 80d8 	blt.w	8020652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80204a2:	f11c 0c01 	adds.w	ip, ip, #1
 80204a6:	f100 80c9 	bmi.w	802063c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80204aa:	4561      	cmp	r1, ip
 80204ac:	f2c0 80c6 	blt.w	802063c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80204b0:	3301      	adds	r3, #1
 80204b2:	f100 80c3 	bmi.w	802063c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80204b6:	429a      	cmp	r2, r3
 80204b8:	f2c0 80c0 	blt.w	802063c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80204bc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80204c0:	4647      	mov	r7, r8
 80204c2:	f1bb 0f00 	cmp.w	fp, #0
 80204c6:	f340 80e3 	ble.w	8020690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80204ca:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80204cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80204ce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80204d2:	689b      	ldr	r3, [r3, #8]
 80204d4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80204d8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80204dc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80204e0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80204e4:	f100 8121 	bmi.w	802072a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80204e8:	f103 39ff 	add.w	r9, r3, #4294967295
 80204ec:	454a      	cmp	r2, r9
 80204ee:	f280 811c 	bge.w	802072a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80204f2:	f1bc 0f00 	cmp.w	ip, #0
 80204f6:	f2c0 8118 	blt.w	802072a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80204fa:	f10e 39ff 	add.w	r9, lr, #4294967295
 80204fe:	45cc      	cmp	ip, r9
 8020500:	f280 8113 	bge.w	802072a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020504:	b21b      	sxth	r3, r3
 8020506:	fb0c 2203 	mla	r2, ip, r3, r2
 802050a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802050c:	eb04 0902 	add.w	r9, r4, r2
 8020510:	5ca2      	ldrb	r2, [r4, r2]
 8020512:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020516:	2800      	cmp	r0, #0
 8020518:	f000 80fe 	beq.w	8020718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802051c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020520:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020524:	9211      	str	r2, [sp, #68]	; 0x44
 8020526:	b151      	cbz	r1, 802053e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020528:	eb09 0203 	add.w	r2, r9, r3
 802052c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020530:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020534:	930f      	str	r3, [sp, #60]	; 0x3c
 8020536:	7853      	ldrb	r3, [r2, #1]
 8020538:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802053c:	9312      	str	r3, [sp, #72]	; 0x48
 802053e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020540:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020542:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020546:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802054a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802054e:	ea4c 0c03 	orr.w	ip, ip, r3
 8020552:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020554:	041b      	lsls	r3, r3, #16
 8020556:	fb10 f201 	smulbb	r2, r0, r1
 802055a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802055e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020562:	10d2      	asrs	r2, r2, #3
 8020564:	4323      	orrs	r3, r4
 8020566:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 802056a:	4353      	muls	r3, r2
 802056c:	fb09 330c 	mla	r3, r9, ip, r3
 8020570:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020574:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020578:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802057c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020580:	f1c1 0c10 	rsb	ip, r1, #16
 8020584:	ebac 0c00 	sub.w	ip, ip, r0
 8020588:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802058c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020590:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020592:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020594:	0418      	lsls	r0, r3, #16
 8020596:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802059a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802059e:	4318      	orrs	r0, r3
 80205a0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80205a4:	fb02 c200 	mla	r2, r2, r0, ip
 80205a8:	0d53      	lsrs	r3, r2, #21
 80205aa:	0952      	lsrs	r2, r2, #5
 80205ac:	8838      	ldrh	r0, [r7, #0]
 80205ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80205b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80205b6:	431a      	orrs	r2, r3
 80205b8:	b292      	uxth	r2, r2
 80205ba:	1201      	asrs	r1, r0, #8
 80205bc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80205c0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80205c4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80205c8:	fb11 f104 	smulbb	r1, r1, r4
 80205cc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80205d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80205d4:	00c0      	lsls	r0, r0, #3
 80205d6:	fb0c 1c03 	mla	ip, ip, r3, r1
 80205da:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80205de:	10d1      	asrs	r1, r2, #3
 80205e0:	b2c0      	uxtb	r0, r0
 80205e2:	00d2      	lsls	r2, r2, #3
 80205e4:	b2d2      	uxtb	r2, r2
 80205e6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80205ea:	fb1e fe04 	smulbb	lr, lr, r4
 80205ee:	fb10 f004 	smulbb	r0, r0, r4
 80205f2:	fa1f fc8c 	uxth.w	ip, ip
 80205f6:	fb01 e103 	mla	r1, r1, r3, lr
 80205fa:	fb02 0303 	mla	r3, r2, r3, r0
 80205fe:	b29a      	uxth	r2, r3
 8020600:	f10c 0301 	add.w	r3, ip, #1
 8020604:	b289      	uxth	r1, r1
 8020606:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802060a:	1c53      	adds	r3, r2, #1
 802060c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020610:	1c4a      	adds	r2, r1, #1
 8020612:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020616:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802061a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802061e:	0949      	lsrs	r1, r1, #5
 8020620:	ea43 030c 	orr.w	r3, r3, ip
 8020624:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020628:	430b      	orrs	r3, r1
 802062a:	803b      	strh	r3, [r7, #0]
 802062c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802062e:	449a      	add	sl, r3
 8020630:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020632:	3702      	adds	r7, #2
 8020634:	441d      	add	r5, r3
 8020636:	f10b 3bff 	add.w	fp, fp, #4294967295
 802063a:	e742      	b.n	80204c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802063c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802063e:	449a      	add	sl, r3
 8020640:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020642:	441d      	add	r5, r3
 8020644:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020646:	3b01      	subs	r3, #1
 8020648:	9309      	str	r3, [sp, #36]	; 0x24
 802064a:	f108 0802 	add.w	r8, r8, #2
 802064e:	e718      	b.n	8020482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020650:	d023      	beq.n	802069a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020652:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020654:	9825      	ldr	r0, [sp, #148]	; 0x94
 8020656:	3b01      	subs	r3, #1
 8020658:	fb00 a003 	mla	r0, r0, r3, sl
 802065c:	1400      	asrs	r0, r0, #16
 802065e:	f53f af2d 	bmi.w	80204bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020662:	3901      	subs	r1, #1
 8020664:	4288      	cmp	r0, r1
 8020666:	f6bf af29 	bge.w	80204bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802066a:	9926      	ldr	r1, [sp, #152]	; 0x98
 802066c:	fb01 5303 	mla	r3, r1, r3, r5
 8020670:	141b      	asrs	r3, r3, #16
 8020672:	f53f af23 	bmi.w	80204bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020676:	3a01      	subs	r2, #1
 8020678:	4293      	cmp	r3, r2
 802067a:	f6bf af1f 	bge.w	80204bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802067e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020682:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8020686:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802068a:	f1be 0f00 	cmp.w	lr, #0
 802068e:	dc6c      	bgt.n	802076a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020690:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020692:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020696:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 802069a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802069c:	2b00      	cmp	r3, #0
 802069e:	f340 810e 	ble.w	80208be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80206a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80206a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80206aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80206ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80206b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80206b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80206b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80206bc:	eef0 6a62 	vmov.f32	s13, s5
 80206c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80206c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80206cc:	ee16 aa90 	vmov	sl, s13
 80206d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80206d4:	eef0 6a43 	vmov.f32	s13, s6
 80206d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80206dc:	ee12 2a90 	vmov	r2, s5
 80206e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80206e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80206e8:	ee13 2a10 	vmov	r2, s6
 80206ec:	9325      	str	r3, [sp, #148]	; 0x94
 80206ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80206f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80206f4:	9326      	str	r3, [sp, #152]	; 0x98
 80206f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206f8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80206fa:	3b01      	subs	r3, #1
 80206fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020700:	930c      	str	r3, [sp, #48]	; 0x30
 8020702:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020704:	bf08      	it	eq
 8020706:	4613      	moveq	r3, r2
 8020708:	ee16 5a90 	vmov	r5, s13
 802070c:	9309      	str	r3, [sp, #36]	; 0x24
 802070e:	eeb0 3a67 	vmov.f32	s6, s15
 8020712:	eef0 2a47 	vmov.f32	s5, s14
 8020716:	e6a6      	b.n	8020466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020718:	2900      	cmp	r1, #0
 802071a:	f43f af10 	beq.w	802053e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802071e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020722:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020726:	930f      	str	r3, [sp, #60]	; 0x3c
 8020728:	e709      	b.n	802053e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802072a:	f112 0901 	adds.w	r9, r2, #1
 802072e:	f53f af7d 	bmi.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020732:	454b      	cmp	r3, r9
 8020734:	f6ff af7a 	blt.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020738:	f11c 0901 	adds.w	r9, ip, #1
 802073c:	f53f af76 	bmi.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020740:	45ce      	cmp	lr, r9
 8020742:	f6ff af73 	blt.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020746:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020748:	9202      	str	r2, [sp, #8]
 802074a:	b21b      	sxth	r3, r3
 802074c:	fa0f f28e 	sxth.w	r2, lr
 8020750:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020754:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020758:	9201      	str	r2, [sp, #4]
 802075a:	9300      	str	r3, [sp, #0]
 802075c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802075e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020760:	4633      	mov	r3, r6
 8020762:	4639      	mov	r1, r7
 8020764:	f7ff fd8e 	bl	8020284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020768:	e760      	b.n	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802076a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802076c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802076e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020772:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020776:	1429      	asrs	r1, r5, #16
 8020778:	fb03 2101 	mla	r1, r3, r1, r2
 802077c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802077e:	440a      	add	r2, r1
 8020780:	5c61      	ldrb	r1, [r4, r1]
 8020782:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8020786:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802078a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 802078e:	f1bc 0f00 	cmp.w	ip, #0
 8020792:	f000 808c 	beq.w	80208ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020796:	7857      	ldrb	r7, [r2, #1]
 8020798:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 802079c:	9413      	str	r4, [sp, #76]	; 0x4c
 802079e:	b140      	cbz	r0, 80207b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80207a0:	18d7      	adds	r7, r2, r3
 80207a2:	5cd3      	ldrb	r3, [r2, r3]
 80207a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207a8:	9310      	str	r3, [sp, #64]	; 0x40
 80207aa:	787b      	ldrb	r3, [r7, #1]
 80207ac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207b0:	9314      	str	r3, [sp, #80]	; 0x50
 80207b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80207b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80207b6:	fb1c f200 	smulbb	r2, ip, r0
 80207ba:	041f      	lsls	r7, r3, #16
 80207bc:	10d2      	asrs	r2, r2, #3
 80207be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80207c2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80207c6:	431f      	orrs	r7, r3
 80207c8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80207cc:	9317      	str	r3, [sp, #92]	; 0x5c
 80207ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80207d0:	041b      	lsls	r3, r3, #16
 80207d2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80207d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80207da:	ea43 030b 	orr.w	r3, r3, fp
 80207de:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80207e0:	4353      	muls	r3, r2
 80207e2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80207e6:	fb04 3707 	mla	r7, r4, r7, r3
 80207ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80207ee:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80207f2:	ea43 0b01 	orr.w	fp, r3, r1
 80207f6:	f1c0 0110 	rsb	r1, r0, #16
 80207fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80207fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80207fe:	eba1 0c0c 	sub.w	ip, r1, ip
 8020802:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020806:	fb0c 770b 	mla	r7, ip, fp, r7
 802080a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802080e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020812:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020816:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802081a:	ea4c 0c0b 	orr.w	ip, ip, fp
 802081e:	fb02 770c 	mla	r7, r2, ip, r7
 8020822:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020824:	0d79      	lsrs	r1, r7, #21
 8020826:	097f      	lsrs	r7, r7, #5
 8020828:	8812      	ldrh	r2, [r2, #0]
 802082a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802082e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020832:	430f      	orrs	r7, r1
 8020834:	b2bb      	uxth	r3, r7
 8020836:	1211      	asrs	r1, r2, #8
 8020838:	1218      	asrs	r0, r3, #8
 802083a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802083e:	fb11 f104 	smulbb	r1, r1, r4
 8020842:	10d7      	asrs	r7, r2, #3
 8020844:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020848:	00d2      	lsls	r2, r2, #3
 802084a:	fb00 1009 	mla	r0, r0, r9, r1
 802084e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020852:	10d9      	asrs	r1, r3, #3
 8020854:	b2d2      	uxtb	r2, r2
 8020856:	00db      	lsls	r3, r3, #3
 8020858:	fb17 f704 	smulbb	r7, r7, r4
 802085c:	fb12 f204 	smulbb	r2, r2, r4
 8020860:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020864:	b2db      	uxtb	r3, r3
 8020866:	b280      	uxth	r0, r0
 8020868:	fb01 7109 	mla	r1, r1, r9, r7
 802086c:	fb03 2309 	mla	r3, r3, r9, r2
 8020870:	b29b      	uxth	r3, r3
 8020872:	b289      	uxth	r1, r1
 8020874:	1c42      	adds	r2, r0, #1
 8020876:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802087a:	1c4f      	adds	r7, r1, #1
 802087c:	1c5a      	adds	r2, r3, #1
 802087e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020882:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020886:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802088a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802088e:	0949      	lsrs	r1, r1, #5
 8020890:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020892:	4310      	orrs	r0, r2
 8020894:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020898:	4308      	orrs	r0, r1
 802089a:	f823 0b02 	strh.w	r0, [r3], #2
 802089e:	930e      	str	r3, [sp, #56]	; 0x38
 80208a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80208a2:	449a      	add	sl, r3
 80208a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80208a6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80208aa:	441d      	add	r5, r3
 80208ac:	e6ed      	b.n	802068a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80208ae:	2800      	cmp	r0, #0
 80208b0:	f43f af7f 	beq.w	80207b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80208b4:	5cd3      	ldrb	r3, [r2, r3]
 80208b6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80208ba:	9310      	str	r3, [sp, #64]	; 0x40
 80208bc:	e779      	b.n	80207b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80208be:	b019      	add	sp, #100	; 0x64
 80208c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080208c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80208c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80208c8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80208cc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80208d0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80208d4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80208d8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80208dc:	8808      	ldrh	r0, [r1, #0]
 80208de:	fb08 470e 	mla	r7, r8, lr, r4
 80208e2:	f1b8 0f00 	cmp.w	r8, #0
 80208e6:	eb02 0907 	add.w	r9, r2, r7
 80208ea:	db67      	blt.n	80209bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80208ec:	45c2      	cmp	sl, r8
 80208ee:	dd65      	ble.n	80209bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80208f0:	2c00      	cmp	r4, #0
 80208f2:	db61      	blt.n	80209b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80208f4:	45a6      	cmp	lr, r4
 80208f6:	dd5f      	ble.n	80209b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80208f8:	5dd2      	ldrb	r2, [r2, r7]
 80208fa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80208fe:	1c62      	adds	r2, r4, #1
 8020900:	d45f      	bmi.n	80209c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020902:	4596      	cmp	lr, r2
 8020904:	dd5d      	ble.n	80209c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020906:	2d00      	cmp	r5, #0
 8020908:	d05b      	beq.n	80209c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802090a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802090e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020912:	f118 0801 	adds.w	r8, r8, #1
 8020916:	d458      	bmi.n	80209ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020918:	45c2      	cmp	sl, r8
 802091a:	dd56      	ble.n	80209ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802091c:	2e00      	cmp	r6, #0
 802091e:	d054      	beq.n	80209ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020920:	2c00      	cmp	r4, #0
 8020922:	db50      	blt.n	80209c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020924:	45a6      	cmp	lr, r4
 8020926:	dd4e      	ble.n	80209c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020928:	f819 200e 	ldrb.w	r2, [r9, lr]
 802092c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020930:	3401      	adds	r4, #1
 8020932:	d407      	bmi.n	8020944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020934:	45a6      	cmp	lr, r4
 8020936:	dd05      	ble.n	8020944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020938:	b125      	cbz	r5, 8020944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802093a:	44ce      	add	lr, r9
 802093c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020940:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020944:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020948:	fb15 f406 	smulbb	r4, r5, r6
 802094c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020950:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020954:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020958:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802095c:	ea43 0c0c 	orr.w	ip, r3, ip
 8020960:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020964:	f1c6 0310 	rsb	r3, r6, #16
 8020968:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802096c:	1b5b      	subs	r3, r3, r5
 802096e:	ea4e 0707 	orr.w	r7, lr, r7
 8020972:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020976:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802097a:	437d      	muls	r5, r7
 802097c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020980:	0403      	lsls	r3, r0, #16
 8020982:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020986:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802098a:	4318      	orrs	r0, r3
 802098c:	0413      	lsls	r3, r2, #16
 802098e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020992:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020996:	4313      	orrs	r3, r2
 8020998:	fb04 c000 	mla	r0, r4, r0, ip
 802099c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80209a0:	fb06 0003 	mla	r0, r6, r3, r0
 80209a4:	0d43      	lsrs	r3, r0, #21
 80209a6:	0940      	lsrs	r0, r0, #5
 80209a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80209b0:	4318      	orrs	r0, r3
 80209b2:	8008      	strh	r0, [r1, #0]
 80209b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80209b8:	4684      	mov	ip, r0
 80209ba:	e7a0      	b.n	80208fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80209bc:	4607      	mov	r7, r0
 80209be:	4684      	mov	ip, r0
 80209c0:	e7a7      	b.n	8020912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80209c2:	4607      	mov	r7, r0
 80209c4:	e7a5      	b.n	8020912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80209c6:	4602      	mov	r2, r0
 80209c8:	e7b2      	b.n	8020930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80209ca:	4602      	mov	r2, r0
 80209cc:	e7ba      	b.n	8020944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080209ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80209ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209d2:	b093      	sub	sp, #76	; 0x4c
 80209d4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80209d8:	920f      	str	r2, [sp, #60]	; 0x3c
 80209da:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80209dc:	9108      	str	r1, [sp, #32]
 80209de:	9306      	str	r3, [sp, #24]
 80209e0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80209e4:	9010      	str	r0, [sp, #64]	; 0x40
 80209e6:	6850      	ldr	r0, [r2, #4]
 80209e8:	6812      	ldr	r2, [r2, #0]
 80209ea:	fb00 1303 	mla	r3, r0, r3, r1
 80209ee:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80209f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209f4:	681b      	ldr	r3, [r3, #0]
 80209f6:	9307      	str	r3, [sp, #28]
 80209f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209fa:	685f      	ldr	r7, [r3, #4]
 80209fc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020a00:	3704      	adds	r7, #4
 8020a02:	9b08      	ldr	r3, [sp, #32]
 8020a04:	2b00      	cmp	r3, #0
 8020a06:	dc03      	bgt.n	8020a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020a08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020a0a:	2b00      	cmp	r3, #0
 8020a0c:	f340 81b2 	ble.w	8020d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020a10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a16:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a1a:	1e48      	subs	r0, r1, #1
 8020a1c:	f102 3cff 	add.w	ip, r2, #4294967295
 8020a20:	9b06      	ldr	r3, [sp, #24]
 8020a22:	2b00      	cmp	r3, #0
 8020a24:	f340 80a9 	ble.w	8020b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020a28:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020a2c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020a30:	d406      	bmi.n	8020a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020a32:	4586      	cmp	lr, r0
 8020a34:	da04      	bge.n	8020a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020a36:	2b00      	cmp	r3, #0
 8020a38:	db02      	blt.n	8020a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020a3a:	4563      	cmp	r3, ip
 8020a3c:	f2c0 809e 	blt.w	8020b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a40:	f11e 0e01 	adds.w	lr, lr, #1
 8020a44:	f100 808f 	bmi.w	8020b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020a48:	4571      	cmp	r1, lr
 8020a4a:	f2c0 808c 	blt.w	8020b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020a4e:	3301      	adds	r3, #1
 8020a50:	f100 8089 	bmi.w	8020b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020a54:	429a      	cmp	r2, r3
 8020a56:	f2c0 8086 	blt.w	8020b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020a5a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020a5e:	46c8      	mov	r8, r9
 8020a60:	f1bb 0f00 	cmp.w	fp, #0
 8020a64:	f340 80a6 	ble.w	8020bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020a68:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020a6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a6c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020a70:	689b      	ldr	r3, [r3, #8]
 8020a72:	1422      	asrs	r2, r4, #16
 8020a74:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020a78:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020a7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020a80:	f100 80e3 	bmi.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020a84:	f103 3aff 	add.w	sl, r3, #4294967295
 8020a88:	4552      	cmp	r2, sl
 8020a8a:	f280 80de 	bge.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020a8e:	f1bc 0f00 	cmp.w	ip, #0
 8020a92:	f2c0 80da 	blt.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020a96:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020a9a:	45d4      	cmp	ip, sl
 8020a9c:	f280 80d5 	bge.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020aa0:	b21b      	sxth	r3, r3
 8020aa2:	fb0c 2203 	mla	r2, ip, r3, r2
 8020aa6:	9d07      	ldr	r5, [sp, #28]
 8020aa8:	eb05 0a02 	add.w	sl, r5, r2
 8020aac:	5caa      	ldrb	r2, [r5, r2]
 8020aae:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8020ab2:	2800      	cmp	r0, #0
 8020ab4:	f000 80c0 	beq.w	8020c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020ab8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020abc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020ac0:	920b      	str	r2, [sp, #44]	; 0x2c
 8020ac2:	b151      	cbz	r1, 8020ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020ac4:	eb0a 0203 	add.w	r2, sl, r3
 8020ac8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020acc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020ad0:	9309      	str	r3, [sp, #36]	; 0x24
 8020ad2:	7853      	ldrb	r3, [r2, #1]
 8020ad4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020ad8:	930c      	str	r3, [sp, #48]	; 0x30
 8020ada:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020adc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020ade:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020ae2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020ae6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020aea:	ea4c 0c03 	orr.w	ip, ip, r3
 8020aee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020af0:	041b      	lsls	r3, r3, #16
 8020af2:	fb10 f201 	smulbb	r2, r0, r1
 8020af6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020afa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020afe:	10d2      	asrs	r2, r2, #3
 8020b00:	432b      	orrs	r3, r5
 8020b02:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020b06:	4353      	muls	r3, r2
 8020b08:	fb0a 330c 	mla	r3, sl, ip, r3
 8020b0c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020b10:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020b14:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020b18:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020b1c:	f1c1 0c10 	rsb	ip, r1, #16
 8020b20:	ebac 0c00 	sub.w	ip, ip, r0
 8020b24:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020b28:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020b2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b2e:	0418      	lsls	r0, r3, #16
 8020b30:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020b34:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b38:	4318      	orrs	r0, r3
 8020b3a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020b3e:	fb02 c200 	mla	r2, r2, r0, ip
 8020b42:	0d53      	lsrs	r3, r2, #21
 8020b44:	0952      	lsrs	r2, r2, #5
 8020b46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020b4e:	431a      	orrs	r2, r3
 8020b50:	f8a8 2000 	strh.w	r2, [r8]
 8020b54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020b56:	441c      	add	r4, r3
 8020b58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b5a:	f108 0802 	add.w	r8, r8, #2
 8020b5e:	441e      	add	r6, r3
 8020b60:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020b64:	e77c      	b.n	8020a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020b66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020b68:	441c      	add	r4, r3
 8020b6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b6c:	441e      	add	r6, r3
 8020b6e:	9b06      	ldr	r3, [sp, #24]
 8020b70:	3b01      	subs	r3, #1
 8020b72:	9306      	str	r3, [sp, #24]
 8020b74:	f109 0902 	add.w	r9, r9, #2
 8020b78:	e752      	b.n	8020a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020b7a:	d020      	beq.n	8020bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020b7c:	9b06      	ldr	r3, [sp, #24]
 8020b7e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020b80:	3b01      	subs	r3, #1
 8020b82:	fb00 4003 	mla	r0, r0, r3, r4
 8020b86:	1400      	asrs	r0, r0, #16
 8020b88:	f53f af67 	bmi.w	8020a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020b8c:	3901      	subs	r1, #1
 8020b8e:	4288      	cmp	r0, r1
 8020b90:	f6bf af63 	bge.w	8020a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020b94:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020b96:	fb01 6303 	mla	r3, r1, r3, r6
 8020b9a:	141b      	asrs	r3, r3, #16
 8020b9c:	f53f af5d 	bmi.w	8020a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020ba0:	3a01      	subs	r2, #1
 8020ba2:	4293      	cmp	r3, r2
 8020ba4:	f6bf af59 	bge.w	8020a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020ba8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020bac:	46ca      	mov	sl, r9
 8020bae:	f1b8 0f00 	cmp.w	r8, #0
 8020bb2:	dc67      	bgt.n	8020c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020bb4:	9b06      	ldr	r3, [sp, #24]
 8020bb6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020bba:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020bbe:	9b08      	ldr	r3, [sp, #32]
 8020bc0:	2b00      	cmp	r3, #0
 8020bc2:	f340 80d7 	ble.w	8020d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020bc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020bca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020bce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020bd2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020bd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020bd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020bdc:	eeb0 6a62 	vmov.f32	s12, s5
 8020be0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020be4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020be8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020bec:	ee16 4a10 	vmov	r4, s12
 8020bf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020bf4:	eeb0 6a43 	vmov.f32	s12, s6
 8020bf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020bfc:	ee12 2a90 	vmov	r2, s5
 8020c00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c04:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c08:	ee13 2a10 	vmov	r2, s6
 8020c0c:	931f      	str	r3, [sp, #124]	; 0x7c
 8020c0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c10:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c14:	9320      	str	r3, [sp, #128]	; 0x80
 8020c16:	9b08      	ldr	r3, [sp, #32]
 8020c18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020c1a:	3b01      	subs	r3, #1
 8020c1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020c20:	9308      	str	r3, [sp, #32]
 8020c22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c24:	bf08      	it	eq
 8020c26:	4613      	moveq	r3, r2
 8020c28:	ee16 6a10 	vmov	r6, s12
 8020c2c:	9306      	str	r3, [sp, #24]
 8020c2e:	eeb0 3a67 	vmov.f32	s6, s15
 8020c32:	eef0 2a47 	vmov.f32	s5, s14
 8020c36:	e6e4      	b.n	8020a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020c38:	2900      	cmp	r1, #0
 8020c3a:	f43f af4e 	beq.w	8020ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020c3e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020c42:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020c46:	9309      	str	r3, [sp, #36]	; 0x24
 8020c48:	e747      	b.n	8020ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020c4a:	f112 0a01 	adds.w	sl, r2, #1
 8020c4e:	d481      	bmi.n	8020b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020c50:	4553      	cmp	r3, sl
 8020c52:	f6ff af7f 	blt.w	8020b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020c56:	f11c 0a01 	adds.w	sl, ip, #1
 8020c5a:	f53f af7b 	bmi.w	8020b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020c5e:	45d6      	cmp	lr, sl
 8020c60:	f6ff af78 	blt.w	8020b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020c64:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020c68:	b21b      	sxth	r3, r3
 8020c6a:	fa0f f28e 	sxth.w	r2, lr
 8020c6e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8020c72:	9201      	str	r2, [sp, #4]
 8020c74:	9300      	str	r3, [sp, #0]
 8020c76:	9a07      	ldr	r2, [sp, #28]
 8020c78:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020c7a:	463b      	mov	r3, r7
 8020c7c:	4641      	mov	r1, r8
 8020c7e:	f7ff fe21 	bl	80208c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020c82:	e767      	b.n	8020b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020c84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020c86:	9d07      	ldr	r5, [sp, #28]
 8020c88:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020c8c:	1422      	asrs	r2, r4, #16
 8020c8e:	1431      	asrs	r1, r6, #16
 8020c90:	fb03 2101 	mla	r1, r3, r1, r2
 8020c94:	9a07      	ldr	r2, [sp, #28]
 8020c96:	440a      	add	r2, r1
 8020c98:	5c69      	ldrb	r1, [r5, r1]
 8020c9a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8020c9e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020ca2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020ca6:	f1be 0f00 	cmp.w	lr, #0
 8020caa:	d05c      	beq.n	8020d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020cac:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020cb0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020cb4:	950d      	str	r5, [sp, #52]	; 0x34
 8020cb6:	b150      	cbz	r0, 8020cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020cb8:	eb02 0c03 	add.w	ip, r2, r3
 8020cbc:	5cd3      	ldrb	r3, [r2, r3]
 8020cbe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020cc2:	930a      	str	r3, [sp, #40]	; 0x28
 8020cc4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020cc8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020ccc:	930e      	str	r3, [sp, #56]	; 0x38
 8020cce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020cd0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020cd2:	fb1e f200 	smulbb	r2, lr, r0
 8020cd6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020cda:	10d2      	asrs	r2, r2, #3
 8020cdc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020ce0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020ce4:	ea4c 0c03 	orr.w	ip, ip, r3
 8020ce8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020cec:	9311      	str	r3, [sp, #68]	; 0x44
 8020cee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020cf0:	041b      	lsls	r3, r3, #16
 8020cf2:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020cf6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020cfa:	ea43 030b 	orr.w	r3, r3, fp
 8020cfe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020d00:	4353      	muls	r3, r2
 8020d02:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020d06:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020d0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020d0e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020d12:	ea43 0b01 	orr.w	fp, r3, r1
 8020d16:	f1c0 0110 	rsb	r1, r0, #16
 8020d1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d1c:	eba1 0e0e 	sub.w	lr, r1, lr
 8020d20:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020d24:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020d28:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020d2c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020d30:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020d34:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020d38:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020d3c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020d40:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020d44:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020d48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d4c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020d50:	ea43 0c0c 	orr.w	ip, r3, ip
 8020d54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020d56:	f82a cb02 	strh.w	ip, [sl], #2
 8020d5a:	441c      	add	r4, r3
 8020d5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020d5e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020d62:	441e      	add	r6, r3
 8020d64:	e723      	b.n	8020bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020d66:	2800      	cmp	r0, #0
 8020d68:	d0b1      	beq.n	8020cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020d6a:	5cd3      	ldrb	r3, [r2, r3]
 8020d6c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020d70:	930a      	str	r3, [sp, #40]	; 0x28
 8020d72:	e7ac      	b.n	8020cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020d74:	b013      	add	sp, #76	; 0x4c
 8020d76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020d7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020d7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d7e:	880d      	ldrh	r5, [r1, #0]
 8020d80:	b087      	sub	sp, #28
 8020d82:	10ef      	asrs	r7, r5, #3
 8020d84:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020d88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020d8c:	00ed      	lsls	r5, r5, #3
 8020d8e:	9701      	str	r7, [sp, #4]
 8020d90:	b2ed      	uxtb	r5, r5
 8020d92:	9502      	str	r5, [sp, #8]
 8020d94:	9d01      	ldr	r5, [sp, #4]
 8020d96:	9103      	str	r1, [sp, #12]
 8020d98:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020d9c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020da0:	9902      	ldr	r1, [sp, #8]
 8020da2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020da6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020daa:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8020dae:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8020db2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020db6:	022d      	lsls	r5, r5, #8
 8020db8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020dbc:	fb06 0709 	mla	r7, r6, r9, r0
 8020dc0:	430d      	orrs	r5, r1
 8020dc2:	2e00      	cmp	r6, #0
 8020dc4:	eb02 0c07 	add.w	ip, r2, r7
 8020dc8:	9505      	str	r5, [sp, #20]
 8020dca:	f2c0 80b6 	blt.w	8020f3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020dce:	45b3      	cmp	fp, r6
 8020dd0:	f340 80b3 	ble.w	8020f3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020dd4:	2800      	cmp	r0, #0
 8020dd6:	f2c0 80ae 	blt.w	8020f36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020dda:	4581      	cmp	r9, r0
 8020ddc:	f340 80ab 	ble.w	8020f36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020de0:	5dd7      	ldrb	r7, [r2, r7]
 8020de2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020de6:	441f      	add	r7, r3
 8020de8:	1c42      	adds	r2, r0, #1
 8020dea:	f100 80a9 	bmi.w	8020f40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020dee:	4591      	cmp	r9, r2
 8020df0:	f340 80a6 	ble.w	8020f40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020df4:	2c00      	cmp	r4, #0
 8020df6:	f000 80a3 	beq.w	8020f40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020dfa:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020dfe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020e02:	441d      	add	r5, r3
 8020e04:	3601      	adds	r6, #1
 8020e06:	f100 809f 	bmi.w	8020f48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020e0a:	45b3      	cmp	fp, r6
 8020e0c:	f340 809c 	ble.w	8020f48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020e10:	f1be 0f00 	cmp.w	lr, #0
 8020e14:	f000 8098 	beq.w	8020f48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020e18:	2800      	cmp	r0, #0
 8020e1a:	f2c0 8093 	blt.w	8020f44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020e1e:	4581      	cmp	r9, r0
 8020e20:	f340 8090 	ble.w	8020f44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020e24:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020e28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020e2c:	441e      	add	r6, r3
 8020e2e:	3001      	adds	r0, #1
 8020e30:	f100 808d 	bmi.w	8020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020e34:	4581      	cmp	r9, r0
 8020e36:	f340 808a 	ble.w	8020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020e3a:	2c00      	cmp	r4, #0
 8020e3c:	f000 8087 	beq.w	8020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020e40:	44e1      	add	r9, ip
 8020e42:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020e46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020e4a:	4413      	add	r3, r2
 8020e4c:	b2a4      	uxth	r4, r4
 8020e4e:	fa1f fe8e 	uxth.w	lr, lr
 8020e52:	fb04 fb0e 	mul.w	fp, r4, lr
 8020e56:	0124      	lsls	r4, r4, #4
 8020e58:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020e5c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020e60:	eba4 040b 	sub.w	r4, r4, fp
 8020e64:	fa1f f08e 	uxth.w	r0, lr
 8020e68:	b2a2      	uxth	r2, r4
 8020e6a:	78ac      	ldrb	r4, [r5, #2]
 8020e6c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020e70:	9901      	ldr	r1, [sp, #4]
 8020e72:	eba9 0900 	sub.w	r9, r9, r0
 8020e76:	fa1f f989 	uxth.w	r9, r9
 8020e7a:	4354      	muls	r4, r2
 8020e7c:	fb09 440c 	mla	r4, r9, ip, r4
 8020e80:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020e84:	fb00 440c 	mla	r4, r0, ip, r4
 8020e88:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020e8c:	fa1f fe88 	uxth.w	lr, r8
 8020e90:	ea6f 0808 	mvn.w	r8, r8
 8020e94:	fa5f f888 	uxtb.w	r8, r8
 8020e98:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020e9c:	fb1a fa08 	smulbb	sl, sl, r8
 8020ea0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020ea4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020ea8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020eac:	787c      	ldrb	r4, [r7, #1]
 8020eae:	782d      	ldrb	r5, [r5, #0]
 8020eb0:	783f      	ldrb	r7, [r7, #0]
 8020eb2:	fb02 fa0a 	mul.w	sl, r2, sl
 8020eb6:	fb09 aa04 	mla	sl, r9, r4, sl
 8020eba:	7874      	ldrb	r4, [r6, #1]
 8020ebc:	436a      	muls	r2, r5
 8020ebe:	7835      	ldrb	r5, [r6, #0]
 8020ec0:	fb00 aa04 	mla	sl, r0, r4, sl
 8020ec4:	fb09 2207 	mla	r2, r9, r7, r2
 8020ec8:	785c      	ldrb	r4, [r3, #1]
 8020eca:	781b      	ldrb	r3, [r3, #0]
 8020ecc:	fb00 2005 	mla	r0, r0, r5, r2
 8020ed0:	fb0b a404 	mla	r4, fp, r4, sl
 8020ed4:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020ed8:	9b02      	ldr	r3, [sp, #8]
 8020eda:	fb11 fa08 	smulbb	sl, r1, r8
 8020ede:	fa1f fc8c 	uxth.w	ip, ip
 8020ee2:	fb13 f808 	smulbb	r8, r3, r8
 8020ee6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020eea:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020eee:	fb04 a40e 	mla	r4, r4, lr, sl
 8020ef2:	f10c 0301 	add.w	r3, ip, #1
 8020ef6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020efa:	fa1f fe8e 	uxth.w	lr, lr
 8020efe:	b2a4      	uxth	r4, r4
 8020f00:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020f04:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020f08:	f104 0a01 	add.w	sl, r4, #1
 8020f0c:	f10e 0c01 	add.w	ip, lr, #1
 8020f10:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020f14:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020f18:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020f1c:	0964      	lsrs	r4, r4, #5
 8020f1e:	ea4c 0c03 	orr.w	ip, ip, r3
 8020f22:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020f26:	9b03      	ldr	r3, [sp, #12]
 8020f28:	ea4c 0c04 	orr.w	ip, ip, r4
 8020f2c:	f8a3 c000 	strh.w	ip, [r3]
 8020f30:	b007      	add	sp, #28
 8020f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f36:	af05      	add	r7, sp, #20
 8020f38:	e756      	b.n	8020de8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020f3a:	ad05      	add	r5, sp, #20
 8020f3c:	462f      	mov	r7, r5
 8020f3e:	e761      	b.n	8020e04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020f40:	ad05      	add	r5, sp, #20
 8020f42:	e75f      	b.n	8020e04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020f44:	ae05      	add	r6, sp, #20
 8020f46:	e772      	b.n	8020e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020f48:	ab05      	add	r3, sp, #20
 8020f4a:	461e      	mov	r6, r3
 8020f4c:	e77e      	b.n	8020e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8020f4e:	ab05      	add	r3, sp, #20
 8020f50:	e77c      	b.n	8020e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08020f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f56:	b095      	sub	sp, #84	; 0x54
 8020f58:	9212      	str	r2, [sp, #72]	; 0x48
 8020f5a:	9309      	str	r3, [sp, #36]	; 0x24
 8020f5c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020f5e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8020f62:	930f      	str	r3, [sp, #60]	; 0x3c
 8020f64:	910e      	str	r1, [sp, #56]	; 0x38
 8020f66:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020f6a:	9013      	str	r0, [sp, #76]	; 0x4c
 8020f6c:	6850      	ldr	r0, [r2, #4]
 8020f6e:	6812      	ldr	r2, [r2, #0]
 8020f70:	fb00 1303 	mla	r3, r0, r3, r1
 8020f74:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020f78:	930a      	str	r3, [sp, #40]	; 0x28
 8020f7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020f7c:	681b      	ldr	r3, [r3, #0]
 8020f7e:	930d      	str	r3, [sp, #52]	; 0x34
 8020f80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020f82:	685c      	ldr	r4, [r3, #4]
 8020f84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020f86:	43db      	mvns	r3, r3
 8020f88:	b2db      	uxtb	r3, r3
 8020f8a:	3404      	adds	r4, #4
 8020f8c:	930b      	str	r3, [sp, #44]	; 0x2c
 8020f8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020f90:	2b00      	cmp	r3, #0
 8020f92:	dc03      	bgt.n	8020f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020f94:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020f96:	2b00      	cmp	r3, #0
 8020f98:	f340 8255 	ble.w	8021446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020f9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020f9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fa2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fa6:	1e48      	subs	r0, r1, #1
 8020fa8:	1e55      	subs	r5, r2, #1
 8020faa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020fac:	2b00      	cmp	r3, #0
 8020fae:	f340 80f9 	ble.w	80211a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8020fb2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020fb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020fb6:	1436      	asrs	r6, r6, #16
 8020fb8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020fbc:	d406      	bmi.n	8020fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fbe:	4286      	cmp	r6, r0
 8020fc0:	da04      	bge.n	8020fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fc2:	2b00      	cmp	r3, #0
 8020fc4:	db02      	blt.n	8020fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fc6:	42ab      	cmp	r3, r5
 8020fc8:	f2c0 80ed 	blt.w	80211a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020fcc:	3601      	adds	r6, #1
 8020fce:	f100 80da 	bmi.w	8021186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020fd2:	42b1      	cmp	r1, r6
 8020fd4:	f2c0 80d7 	blt.w	8021186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020fd8:	3301      	adds	r3, #1
 8020fda:	f100 80d4 	bmi.w	8021186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020fde:	429a      	cmp	r2, r3
 8020fe0:	f2c0 80d1 	blt.w	8021186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020fe4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020fe6:	9311      	str	r3, [sp, #68]	; 0x44
 8020fe8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020fea:	930c      	str	r3, [sp, #48]	; 0x30
 8020fec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020fee:	2b00      	cmp	r3, #0
 8020ff0:	f340 80fa 	ble.w	80211e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020ff4:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020ff6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ff8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020ffa:	68c6      	ldr	r6, [r0, #12]
 8020ffc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020ffe:	141d      	asrs	r5, r3, #16
 8021000:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8021004:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021006:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021008:	1400      	asrs	r0, r0, #16
 802100a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802100e:	6892      	ldr	r2, [r2, #8]
 8021010:	f100 813e 	bmi.w	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021014:	1e57      	subs	r7, r2, #1
 8021016:	42b8      	cmp	r0, r7
 8021018:	f280 813a 	bge.w	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802101c:	2d00      	cmp	r5, #0
 802101e:	f2c0 8137 	blt.w	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021022:	1e77      	subs	r7, r6, #1
 8021024:	42bd      	cmp	r5, r7
 8021026:	f280 8133 	bge.w	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802102a:	b212      	sxth	r2, r2
 802102c:	fb05 0002 	mla	r0, r5, r2, r0
 8021030:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021032:	f815 a000 	ldrb.w	sl, [r5, r0]
 8021036:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802103a:	182e      	adds	r6, r5, r0
 802103c:	eb04 050a 	add.w	r5, r4, sl
 8021040:	2b00      	cmp	r3, #0
 8021042:	f000 8117 	beq.w	8021274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8021046:	f896 c001 	ldrb.w	ip, [r6, #1]
 802104a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802104e:	44a4      	add	ip, r4
 8021050:	2900      	cmp	r1, #0
 8021052:	f000 8117 	beq.w	8021284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8021056:	18b0      	adds	r0, r6, r2
 8021058:	5cb2      	ldrb	r2, [r6, r2]
 802105a:	7840      	ldrb	r0, [r0, #1]
 802105c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021060:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021064:	4422      	add	r2, r4
 8021066:	4420      	add	r0, r4
 8021068:	b29b      	uxth	r3, r3
 802106a:	b289      	uxth	r1, r1
 802106c:	fb03 f901 	mul.w	r9, r3, r1
 8021070:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021074:	011b      	lsls	r3, r3, #4
 8021076:	b289      	uxth	r1, r1
 8021078:	f89c 7002 	ldrb.w	r7, [ip, #2]
 802107c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021080:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8021082:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8021086:	f8b6 e000 	ldrh.w	lr, [r6]
 802108a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802108e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8021092:	eba3 0309 	sub.w	r3, r3, r9
 8021096:	b29b      	uxth	r3, r3
 8021098:	eba8 0801 	sub.w	r8, r8, r1
 802109c:	fa1f f888 	uxth.w	r8, r8
 80210a0:	435f      	muls	r7, r3
 80210a2:	fb08 770b 	mla	r7, r8, fp, r7
 80210a6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80210aa:	9310      	str	r3, [sp, #64]	; 0x40
 80210ac:	fb01 770b 	mla	r7, r1, fp, r7
 80210b0:	f890 b002 	ldrb.w	fp, [r0, #2]
 80210b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210b6:	fb09 770b 	mla	r7, r9, fp, r7
 80210ba:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80210be:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80210c2:	fb1b fb03 	smulbb	fp, fp, r3
 80210c6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80210ca:	fb07 b706 	mla	r7, r7, r6, fp
 80210ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80210d0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80210d4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80210d8:	f89c c000 	ldrb.w	ip, [ip]
 80210dc:	435d      	muls	r5, r3
 80210de:	fb08 550b 	mla	r5, r8, fp, r5
 80210e2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80210e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210e8:	fb01 550b 	mla	r5, r1, fp, r5
 80210ec:	f890 b001 	ldrb.w	fp, [r0, #1]
 80210f0:	fb09 550b 	mla	r5, r9, fp, r5
 80210f4:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80210f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80210fc:	fb1b fb03 	smulbb	fp, fp, r3
 8021100:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021102:	fb03 f30c 	mul.w	r3, r3, ip
 8021106:	f892 c000 	ldrb.w	ip, [r2]
 802110a:	fb08 330a 	mla	r3, r8, sl, r3
 802110e:	fb01 330c 	mla	r3, r1, ip, r3
 8021112:	f890 c000 	ldrb.w	ip, [r0]
 8021116:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802111a:	fb09 3c0c 	mla	ip, r9, ip, r3
 802111e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021120:	fa5f fe8e 	uxtb.w	lr, lr
 8021124:	b2bf      	uxth	r7, r7
 8021126:	fb1e fe03 	smulbb	lr, lr, r3
 802112a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802112e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8021132:	fb05 b506 	mla	r5, r5, r6, fp
 8021136:	1c7b      	adds	r3, r7, #1
 8021138:	fb0c e606 	mla	r6, ip, r6, lr
 802113c:	b2ad      	uxth	r5, r5
 802113e:	b2b6      	uxth	r6, r6
 8021140:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021144:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021148:	f105 0b01 	add.w	fp, r5, #1
 802114c:	1c77      	adds	r7, r6, #1
 802114e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8021152:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021156:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802115a:	096d      	lsrs	r5, r5, #5
 802115c:	431f      	orrs	r7, r3
 802115e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021162:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021164:	433d      	orrs	r5, r7
 8021166:	801d      	strh	r5, [r3, #0]
 8021168:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802116a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802116c:	3302      	adds	r3, #2
 802116e:	930c      	str	r3, [sp, #48]	; 0x30
 8021170:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021172:	4413      	add	r3, r2
 8021174:	931f      	str	r3, [sp, #124]	; 0x7c
 8021176:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021178:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802117a:	4413      	add	r3, r2
 802117c:	9320      	str	r3, [sp, #128]	; 0x80
 802117e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021180:	3b01      	subs	r3, #1
 8021182:	9311      	str	r3, [sp, #68]	; 0x44
 8021184:	e732      	b.n	8020fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021186:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021188:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802118a:	4433      	add	r3, r6
 802118c:	931f      	str	r3, [sp, #124]	; 0x7c
 802118e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021190:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021192:	4433      	add	r3, r6
 8021194:	9320      	str	r3, [sp, #128]	; 0x80
 8021196:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021198:	3b01      	subs	r3, #1
 802119a:	9309      	str	r3, [sp, #36]	; 0x24
 802119c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802119e:	3302      	adds	r3, #2
 80211a0:	930a      	str	r3, [sp, #40]	; 0x28
 80211a2:	e702      	b.n	8020faa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80211a4:	d027      	beq.n	80211f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80211a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211a8:	9821      	ldr	r0, [sp, #132]	; 0x84
 80211aa:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80211ac:	3b01      	subs	r3, #1
 80211ae:	fb00 5003 	mla	r0, r0, r3, r5
 80211b2:	1400      	asrs	r0, r0, #16
 80211b4:	f53f af16 	bmi.w	8020fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80211b8:	3901      	subs	r1, #1
 80211ba:	4288      	cmp	r0, r1
 80211bc:	f6bf af12 	bge.w	8020fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80211c0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80211c2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80211c4:	fb01 0303 	mla	r3, r1, r3, r0
 80211c8:	141b      	asrs	r3, r3, #16
 80211ca:	f53f af0b 	bmi.w	8020fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80211ce:	3a01      	subs	r2, #1
 80211d0:	4293      	cmp	r3, r2
 80211d2:	f6bf af07 	bge.w	8020fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80211d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211d8:	9311      	str	r3, [sp, #68]	; 0x44
 80211da:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80211de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80211e0:	930c      	str	r3, [sp, #48]	; 0x30
 80211e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80211e4:	2b00      	cmp	r3, #0
 80211e6:	dc70      	bgt.n	80212ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80211e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80211ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80211f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80211f4:	930a      	str	r3, [sp, #40]	; 0x28
 80211f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80211f8:	2b00      	cmp	r3, #0
 80211fa:	f340 8124 	ble.w	8021446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80211fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021202:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021206:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802120a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802120c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021210:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021214:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021218:	eef0 6a62 	vmov.f32	s13, s5
 802121c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021220:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021224:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021228:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802122c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021230:	eef0 6a43 	vmov.f32	s13, s6
 8021234:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021238:	ee12 2a90 	vmov	r2, s5
 802123c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021240:	fb92 f3f3 	sdiv	r3, r2, r3
 8021244:	ee13 2a10 	vmov	r2, s6
 8021248:	9321      	str	r3, [sp, #132]	; 0x84
 802124a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802124c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021250:	9322      	str	r3, [sp, #136]	; 0x88
 8021252:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021254:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021256:	3b01      	subs	r3, #1
 8021258:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802125c:	930e      	str	r3, [sp, #56]	; 0x38
 802125e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021260:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8021264:	bf08      	it	eq
 8021266:	4613      	moveq	r3, r2
 8021268:	9309      	str	r3, [sp, #36]	; 0x24
 802126a:	eeb0 3a67 	vmov.f32	s6, s15
 802126e:	eef0 2a47 	vmov.f32	s5, s14
 8021272:	e68c      	b.n	8020f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021274:	b149      	cbz	r1, 802128a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8021276:	5cb2      	ldrb	r2, [r6, r2]
 8021278:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802127c:	4422      	add	r2, r4
 802127e:	4628      	mov	r0, r5
 8021280:	46ac      	mov	ip, r5
 8021282:	e6f1      	b.n	8021068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021284:	4628      	mov	r0, r5
 8021286:	462a      	mov	r2, r5
 8021288:	e6ee      	b.n	8021068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802128a:	4628      	mov	r0, r5
 802128c:	462a      	mov	r2, r5
 802128e:	e7f7      	b.n	8021280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021290:	1c47      	adds	r7, r0, #1
 8021292:	f53f af69 	bmi.w	8021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021296:	42ba      	cmp	r2, r7
 8021298:	f6ff af66 	blt.w	8021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802129c:	1c6f      	adds	r7, r5, #1
 802129e:	f53f af63 	bmi.w	8021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80212a2:	42be      	cmp	r6, r7
 80212a4:	f6ff af60 	blt.w	8021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80212a8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80212aa:	9002      	str	r0, [sp, #8]
 80212ac:	b236      	sxth	r6, r6
 80212ae:	b212      	sxth	r2, r2
 80212b0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80212b4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80212b8:	9200      	str	r2, [sp, #0]
 80212ba:	9601      	str	r6, [sp, #4]
 80212bc:	4623      	mov	r3, r4
 80212be:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80212c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80212c4:	f7ff fd59 	bl	8020d7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80212c8:	e74e      	b.n	8021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80212ca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80212cc:	9820      	ldr	r0, [sp, #128]	; 0x80
 80212ce:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80212d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80212d2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80212d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80212d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80212dc:	142d      	asrs	r5, r5, #16
 80212de:	1400      	asrs	r0, r0, #16
 80212e0:	fb02 5000 	mla	r0, r2, r0, r5
 80212e4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80212e6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80212ea:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80212ee:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80212f2:	182e      	adds	r6, r5, r0
 80212f4:	eb04 0509 	add.w	r5, r4, r9
 80212f8:	2b00      	cmp	r3, #0
 80212fa:	f000 8096 	beq.w	802142a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80212fe:	7877      	ldrb	r7, [r6, #1]
 8021300:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021304:	4427      	add	r7, r4
 8021306:	2900      	cmp	r1, #0
 8021308:	f000 8097 	beq.w	802143a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 802130c:	18b0      	adds	r0, r6, r2
 802130e:	5cb2      	ldrb	r2, [r6, r2]
 8021310:	7840      	ldrb	r0, [r0, #1]
 8021312:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021316:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802131a:	4422      	add	r2, r4
 802131c:	4420      	add	r0, r4
 802131e:	b29b      	uxth	r3, r3
 8021320:	b289      	uxth	r1, r1
 8021322:	fb03 f801 	mul.w	r8, r3, r1
 8021326:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8021328:	f895 b002 	ldrb.w	fp, [r5, #2]
 802132c:	f8b6 c000 	ldrh.w	ip, [r6]
 8021330:	78be      	ldrb	r6, [r7, #2]
 8021332:	f814 9009 	ldrb.w	r9, [r4, r9]
 8021336:	011b      	lsls	r3, r3, #4
 8021338:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802133c:	b289      	uxth	r1, r1
 802133e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021342:	eba3 0308 	sub.w	r3, r3, r8
 8021346:	b29b      	uxth	r3, r3
 8021348:	ebae 0e01 	sub.w	lr, lr, r1
 802134c:	fa1f fe8e 	uxth.w	lr, lr
 8021350:	435e      	muls	r6, r3
 8021352:	fb0e 660b 	mla	r6, lr, fp, r6
 8021356:	f892 b002 	ldrb.w	fp, [r2, #2]
 802135a:	9310      	str	r3, [sp, #64]	; 0x40
 802135c:	fb01 660b 	mla	r6, r1, fp, r6
 8021360:	f890 b002 	ldrb.w	fp, [r0, #2]
 8021364:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021366:	fb08 660b 	mla	r6, r8, fp, r6
 802136a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802136e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8021372:	fb1b fb03 	smulbb	fp, fp, r3
 8021376:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802137a:	fb06 b60a 	mla	r6, r6, sl, fp
 802137e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021380:	f895 b001 	ldrb.w	fp, [r5, #1]
 8021384:	787d      	ldrb	r5, [r7, #1]
 8021386:	783f      	ldrb	r7, [r7, #0]
 8021388:	435d      	muls	r5, r3
 802138a:	fb0e 550b 	mla	r5, lr, fp, r5
 802138e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8021392:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021394:	fb01 550b 	mla	r5, r1, fp, r5
 8021398:	f890 b001 	ldrb.w	fp, [r0, #1]
 802139c:	fb08 550b 	mla	r5, r8, fp, r5
 80213a0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80213a4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80213a8:	fb1b fb03 	smulbb	fp, fp, r3
 80213ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80213ae:	437b      	muls	r3, r7
 80213b0:	7817      	ldrb	r7, [r2, #0]
 80213b2:	fb0e 3309 	mla	r3, lr, r9, r3
 80213b6:	fb01 3307 	mla	r3, r1, r7, r3
 80213ba:	7807      	ldrb	r7, [r0, #0]
 80213bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80213c0:	fb08 3707 	mla	r7, r8, r7, r3
 80213c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80213c6:	fa5f fc8c 	uxtb.w	ip, ip
 80213ca:	fb1c fc03 	smulbb	ip, ip, r3
 80213ce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80213d2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80213d6:	fb05 b50a 	mla	r5, r5, sl, fp
 80213da:	fb07 c70a 	mla	r7, r7, sl, ip
 80213de:	b2b6      	uxth	r6, r6
 80213e0:	b2ad      	uxth	r5, r5
 80213e2:	b2bf      	uxth	r7, r7
 80213e4:	1c73      	adds	r3, r6, #1
 80213e6:	1c7a      	adds	r2, r7, #1
 80213e8:	f105 0b01 	add.w	fp, r5, #1
 80213ec:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80213f0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80213f4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80213f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80213fc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8021400:	096d      	lsrs	r5, r5, #5
 8021402:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021404:	4316      	orrs	r6, r2
 8021406:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802140a:	432e      	orrs	r6, r5
 802140c:	f823 6b02 	strh.w	r6, [r3], #2
 8021410:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021412:	930c      	str	r3, [sp, #48]	; 0x30
 8021414:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021416:	4413      	add	r3, r2
 8021418:	931f      	str	r3, [sp, #124]	; 0x7c
 802141a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802141c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802141e:	4413      	add	r3, r2
 8021420:	9320      	str	r3, [sp, #128]	; 0x80
 8021422:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021424:	3b01      	subs	r3, #1
 8021426:	9311      	str	r3, [sp, #68]	; 0x44
 8021428:	e6db      	b.n	80211e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 802142a:	b149      	cbz	r1, 8021440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802142c:	5cb2      	ldrb	r2, [r6, r2]
 802142e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021432:	4422      	add	r2, r4
 8021434:	4628      	mov	r0, r5
 8021436:	462f      	mov	r7, r5
 8021438:	e771      	b.n	802131e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802143a:	4628      	mov	r0, r5
 802143c:	462a      	mov	r2, r5
 802143e:	e76e      	b.n	802131e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021440:	4628      	mov	r0, r5
 8021442:	462a      	mov	r2, r5
 8021444:	e7f7      	b.n	8021436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021446:	b015      	add	sp, #84	; 0x54
 8021448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802144c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802144c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021450:	880f      	ldrh	r7, [r1, #0]
 8021452:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8021456:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802145a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 802145e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021462:	023c      	lsls	r4, r7, #8
 8021464:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021468:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 802146c:	017c      	lsls	r4, r7, #5
 802146e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8021472:	00ff      	lsls	r7, r7, #3
 8021474:	ea4b 0404 	orr.w	r4, fp, r4
 8021478:	b2ff      	uxtb	r7, r7
 802147a:	fb05 ca0e 	mla	sl, r5, lr, ip
 802147e:	4327      	orrs	r7, r4
 8021480:	2d00      	cmp	r5, #0
 8021482:	eb02 080a 	add.w	r8, r2, sl
 8021486:	9701      	str	r7, [sp, #4]
 8021488:	db7e      	blt.n	8021588 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802148a:	45a9      	cmp	r9, r5
 802148c:	dd7c      	ble.n	8021588 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802148e:	f1bc 0f00 	cmp.w	ip, #0
 8021492:	db77      	blt.n	8021584 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021494:	45e6      	cmp	lr, ip
 8021496:	dd75      	ble.n	8021584 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021498:	f812 700a 	ldrb.w	r7, [r2, sl]
 802149c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80214a0:	441f      	add	r7, r3
 80214a2:	f11c 0201 	adds.w	r2, ip, #1
 80214a6:	d472      	bmi.n	802158e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80214a8:	4596      	cmp	lr, r2
 80214aa:	dd70      	ble.n	802158e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80214ac:	2800      	cmp	r0, #0
 80214ae:	d06e      	beq.n	802158e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80214b0:	f898 4001 	ldrb.w	r4, [r8, #1]
 80214b4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80214b8:	441c      	add	r4, r3
 80214ba:	3501      	adds	r5, #1
 80214bc:	d46b      	bmi.n	8021596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80214be:	45a9      	cmp	r9, r5
 80214c0:	dd69      	ble.n	8021596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80214c2:	2e00      	cmp	r6, #0
 80214c4:	d067      	beq.n	8021596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80214c6:	f1bc 0f00 	cmp.w	ip, #0
 80214ca:	db62      	blt.n	8021592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80214cc:	45e6      	cmp	lr, ip
 80214ce:	dd60      	ble.n	8021592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80214d0:	f818 500e 	ldrb.w	r5, [r8, lr]
 80214d4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80214d8:	441d      	add	r5, r3
 80214da:	f11c 0201 	adds.w	r2, ip, #1
 80214de:	d45d      	bmi.n	802159c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80214e0:	4596      	cmp	lr, r2
 80214e2:	dd5b      	ble.n	802159c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80214e4:	2800      	cmp	r0, #0
 80214e6:	d059      	beq.n	802159c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80214e8:	44c6      	add	lr, r8
 80214ea:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80214ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80214f2:	4413      	add	r3, r2
 80214f4:	b280      	uxth	r0, r0
 80214f6:	b2b2      	uxth	r2, r6
 80214f8:	fb00 f602 	mul.w	r6, r0, r2
 80214fc:	0100      	lsls	r0, r0, #4
 80214fe:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021502:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8021506:	1b80      	subs	r0, r0, r6
 8021508:	fa1f fc82 	uxth.w	ip, r2
 802150c:	b282      	uxth	r2, r0
 802150e:	78a0      	ldrb	r0, [r4, #2]
 8021510:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021514:	f897 9000 	ldrb.w	r9, [r7]
 8021518:	787f      	ldrb	r7, [r7, #1]
 802151a:	eba8 080c 	sub.w	r8, r8, ip
 802151e:	fa1f f888 	uxth.w	r8, r8
 8021522:	4350      	muls	r0, r2
 8021524:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021528:	78a8      	ldrb	r0, [r5, #2]
 802152a:	fb0c e000 	mla	r0, ip, r0, lr
 802152e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021532:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021536:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 802153a:	f894 e000 	ldrb.w	lr, [r4]
 802153e:	fb02 fe0e 	mul.w	lr, r2, lr
 8021542:	fb08 e909 	mla	r9, r8, r9, lr
 8021546:	f895 e000 	ldrb.w	lr, [r5]
 802154a:	fb0c 990e 	mla	r9, ip, lr, r9
 802154e:	f893 e000 	ldrb.w	lr, [r3]
 8021552:	785b      	ldrb	r3, [r3, #1]
 8021554:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021558:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802155c:	ea4e 0e00 	orr.w	lr, lr, r0
 8021560:	7860      	ldrb	r0, [r4, #1]
 8021562:	4350      	muls	r0, r2
 8021564:	786a      	ldrb	r2, [r5, #1]
 8021566:	fb08 0007 	mla	r0, r8, r7, r0
 802156a:	fb0c 0202 	mla	r2, ip, r2, r0
 802156e:	fb06 2303 	mla	r3, r6, r3, r2
 8021572:	095b      	lsrs	r3, r3, #5
 8021574:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021578:	ea4e 0303 	orr.w	r3, lr, r3
 802157c:	800b      	strh	r3, [r1, #0]
 802157e:	b003      	add	sp, #12
 8021580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021584:	af01      	add	r7, sp, #4
 8021586:	e78c      	b.n	80214a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021588:	ac01      	add	r4, sp, #4
 802158a:	4627      	mov	r7, r4
 802158c:	e795      	b.n	80214ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802158e:	ac01      	add	r4, sp, #4
 8021590:	e793      	b.n	80214ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021592:	ad01      	add	r5, sp, #4
 8021594:	e7a1      	b.n	80214da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021596:	ab01      	add	r3, sp, #4
 8021598:	461d      	mov	r5, r3
 802159a:	e7ab      	b.n	80214f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 802159c:	ab01      	add	r3, sp, #4
 802159e:	e7a9      	b.n	80214f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080215a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80215a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215a4:	b08f      	sub	sp, #60	; 0x3c
 80215a6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80215aa:	920c      	str	r2, [sp, #48]	; 0x30
 80215ac:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80215ae:	910a      	str	r1, [sp, #40]	; 0x28
 80215b0:	9306      	str	r3, [sp, #24]
 80215b2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80215b6:	900d      	str	r0, [sp, #52]	; 0x34
 80215b8:	6850      	ldr	r0, [r2, #4]
 80215ba:	6812      	ldr	r2, [r2, #0]
 80215bc:	fb00 1303 	mla	r3, r0, r3, r1
 80215c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80215c4:	9307      	str	r3, [sp, #28]
 80215c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215c8:	681b      	ldr	r3, [r3, #0]
 80215ca:	9308      	str	r3, [sp, #32]
 80215cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215ce:	685c      	ldr	r4, [r3, #4]
 80215d0:	3404      	adds	r4, #4
 80215d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80215d4:	2b00      	cmp	r3, #0
 80215d6:	dc03      	bgt.n	80215e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80215d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80215da:	2b00      	cmp	r3, #0
 80215dc:	f340 81d6 	ble.w	802198c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80215e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80215ea:	1e48      	subs	r0, r1, #1
 80215ec:	1e56      	subs	r6, r2, #1
 80215ee:	9b06      	ldr	r3, [sp, #24]
 80215f0:	2b00      	cmp	r3, #0
 80215f2:	f340 80b7 	ble.w	8021764 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80215f6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80215fa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80215fe:	d406      	bmi.n	802160e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021600:	4287      	cmp	r7, r0
 8021602:	da04      	bge.n	802160e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021604:	2b00      	cmp	r3, #0
 8021606:	db02      	blt.n	802160e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021608:	42b3      	cmp	r3, r6
 802160a:	f2c0 80ac 	blt.w	8021766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802160e:	3701      	adds	r7, #1
 8021610:	f100 809d 	bmi.w	802174e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021614:	42b9      	cmp	r1, r7
 8021616:	f2c0 809a 	blt.w	802174e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802161a:	3301      	adds	r3, #1
 802161c:	f100 8097 	bmi.w	802174e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021620:	429a      	cmp	r2, r3
 8021622:	f2c0 8094 	blt.w	802174e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021626:	9b06      	ldr	r3, [sp, #24]
 8021628:	930b      	str	r3, [sp, #44]	; 0x2c
 802162a:	9b07      	ldr	r3, [sp, #28]
 802162c:	9309      	str	r3, [sp, #36]	; 0x24
 802162e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021630:	2b00      	cmp	r3, #0
 8021632:	f340 80b5 	ble.w	80217a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021636:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021638:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802163a:	68c7      	ldr	r7, [r0, #12]
 802163c:	6892      	ldr	r2, [r2, #8]
 802163e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021642:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021646:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802164a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802164e:	f100 80fb 	bmi.w	8021848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021652:	f102 3cff 	add.w	ip, r2, #4294967295
 8021656:	4560      	cmp	r0, ip
 8021658:	f280 80f6 	bge.w	8021848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802165c:	2e00      	cmp	r6, #0
 802165e:	f2c0 80f3 	blt.w	8021848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021662:	f107 3cff 	add.w	ip, r7, #4294967295
 8021666:	4566      	cmp	r6, ip
 8021668:	f280 80ee 	bge.w	8021848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802166c:	b212      	sxth	r2, r2
 802166e:	fb06 0002 	mla	r0, r6, r2, r0
 8021672:	9e08      	ldr	r6, [sp, #32]
 8021674:	1837      	adds	r7, r6, r0
 8021676:	5c30      	ldrb	r0, [r6, r0]
 8021678:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 802167c:	eb04 0c08 	add.w	ip, r4, r8
 8021680:	2b00      	cmp	r3, #0
 8021682:	f000 80d3 	beq.w	802182c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021686:	787e      	ldrb	r6, [r7, #1]
 8021688:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802168c:	4426      	add	r6, r4
 802168e:	2900      	cmp	r1, #0
 8021690:	f000 80d4 	beq.w	802183c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021694:	18b8      	adds	r0, r7, r2
 8021696:	5cba      	ldrb	r2, [r7, r2]
 8021698:	7840      	ldrb	r0, [r0, #1]
 802169a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802169e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80216a2:	4422      	add	r2, r4
 80216a4:	4420      	add	r0, r4
 80216a6:	b29b      	uxth	r3, r3
 80216a8:	b289      	uxth	r1, r1
 80216aa:	fb03 f901 	mul.w	r9, r3, r1
 80216ae:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80216b2:	011b      	lsls	r3, r3, #4
 80216b4:	b289      	uxth	r1, r1
 80216b6:	78b7      	ldrb	r7, [r6, #2]
 80216b8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80216bc:	f89c c001 	ldrb.w	ip, [ip, #1]
 80216c0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80216c4:	eba3 0309 	sub.w	r3, r3, r9
 80216c8:	b29b      	uxth	r3, r3
 80216ca:	ebae 0e01 	sub.w	lr, lr, r1
 80216ce:	fa1f fe8e 	uxth.w	lr, lr
 80216d2:	435f      	muls	r7, r3
 80216d4:	fb0e 770a 	mla	r7, lr, sl, r7
 80216d8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80216dc:	fb01 770a 	mla	r7, r1, sl, r7
 80216e0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80216e4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80216e8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80216ec:	f896 8000 	ldrb.w	r8, [r6]
 80216f0:	7876      	ldrb	r6, [r6, #1]
 80216f2:	fb03 f808 	mul.w	r8, r3, r8
 80216f6:	fb0e 8807 	mla	r8, lr, r7, r8
 80216fa:	7817      	ldrb	r7, [r2, #0]
 80216fc:	fb01 8807 	mla	r8, r1, r7, r8
 8021700:	7807      	ldrb	r7, [r0, #0]
 8021702:	fb09 8707 	mla	r7, r9, r7, r8
 8021706:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 802170a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802170e:	ea47 070a 	orr.w	r7, r7, sl
 8021712:	4373      	muls	r3, r6
 8021714:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021718:	fb0e 330c 	mla	r3, lr, ip, r3
 802171c:	fb01 310a 	mla	r1, r1, sl, r3
 8021720:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021724:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021726:	fb09 1a0a 	mla	sl, r9, sl, r1
 802172a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802172e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021732:	ea47 070a 	orr.w	r7, r7, sl
 8021736:	801f      	strh	r7, [r3, #0]
 8021738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802173a:	3302      	adds	r3, #2
 802173c:	9309      	str	r3, [sp, #36]	; 0x24
 802173e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021740:	449b      	add	fp, r3
 8021742:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021744:	441d      	add	r5, r3
 8021746:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021748:	3b01      	subs	r3, #1
 802174a:	930b      	str	r3, [sp, #44]	; 0x2c
 802174c:	e76f      	b.n	802162e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802174e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021750:	449b      	add	fp, r3
 8021752:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021754:	441d      	add	r5, r3
 8021756:	9b06      	ldr	r3, [sp, #24]
 8021758:	3b01      	subs	r3, #1
 802175a:	9306      	str	r3, [sp, #24]
 802175c:	9b07      	ldr	r3, [sp, #28]
 802175e:	3302      	adds	r3, #2
 8021760:	9307      	str	r3, [sp, #28]
 8021762:	e744      	b.n	80215ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021764:	d023      	beq.n	80217ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021766:	9b06      	ldr	r3, [sp, #24]
 8021768:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802176a:	3b01      	subs	r3, #1
 802176c:	fb00 b003 	mla	r0, r0, r3, fp
 8021770:	1400      	asrs	r0, r0, #16
 8021772:	f53f af58 	bmi.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021776:	3901      	subs	r1, #1
 8021778:	4288      	cmp	r0, r1
 802177a:	f6bf af54 	bge.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802177e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021780:	fb01 5303 	mla	r3, r1, r3, r5
 8021784:	141b      	asrs	r3, r3, #16
 8021786:	f53f af4e 	bmi.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802178a:	3a01      	subs	r2, #1
 802178c:	4293      	cmp	r3, r2
 802178e:	f6bf af4a 	bge.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021792:	9b06      	ldr	r3, [sp, #24]
 8021794:	9309      	str	r3, [sp, #36]	; 0x24
 8021796:	9b07      	ldr	r3, [sp, #28]
 8021798:	930b      	str	r3, [sp, #44]	; 0x2c
 802179a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802179c:	2b00      	cmp	r3, #0
 802179e:	dc70      	bgt.n	8021882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80217a0:	9b06      	ldr	r3, [sp, #24]
 80217a2:	9a07      	ldr	r2, [sp, #28]
 80217a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80217a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80217ac:	9307      	str	r3, [sp, #28]
 80217ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80217b0:	2b00      	cmp	r3, #0
 80217b2:	f340 80eb 	ble.w	802198c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80217b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80217ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80217be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80217c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80217c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80217c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80217cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80217d0:	eef0 6a62 	vmov.f32	s13, s5
 80217d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80217d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80217e0:	ee16 ba90 	vmov	fp, s13
 80217e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80217e8:	eef0 6a43 	vmov.f32	s13, s6
 80217ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80217f0:	ee12 2a90 	vmov	r2, s5
 80217f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80217f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80217fc:	ee13 2a10 	vmov	r2, s6
 8021800:	931b      	str	r3, [sp, #108]	; 0x6c
 8021802:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021804:	fb92 f3f3 	sdiv	r3, r2, r3
 8021808:	931c      	str	r3, [sp, #112]	; 0x70
 802180a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802180c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802180e:	3b01      	subs	r3, #1
 8021810:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021814:	930a      	str	r3, [sp, #40]	; 0x28
 8021816:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021818:	bf08      	it	eq
 802181a:	4613      	moveq	r3, r2
 802181c:	ee16 5a90 	vmov	r5, s13
 8021820:	9306      	str	r3, [sp, #24]
 8021822:	eeb0 3a67 	vmov.f32	s6, s15
 8021826:	eef0 2a47 	vmov.f32	s5, s14
 802182a:	e6d2      	b.n	80215d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 802182c:	b149      	cbz	r1, 8021842 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802182e:	5cba      	ldrb	r2, [r7, r2]
 8021830:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021834:	4422      	add	r2, r4
 8021836:	4660      	mov	r0, ip
 8021838:	4666      	mov	r6, ip
 802183a:	e734      	b.n	80216a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802183c:	4660      	mov	r0, ip
 802183e:	4662      	mov	r2, ip
 8021840:	e731      	b.n	80216a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021842:	4660      	mov	r0, ip
 8021844:	4662      	mov	r2, ip
 8021846:	e7f7      	b.n	8021838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021848:	f110 0c01 	adds.w	ip, r0, #1
 802184c:	f53f af74 	bmi.w	8021738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021850:	4562      	cmp	r2, ip
 8021852:	f6ff af71 	blt.w	8021738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021856:	f116 0c01 	adds.w	ip, r6, #1
 802185a:	f53f af6d 	bmi.w	8021738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802185e:	4567      	cmp	r7, ip
 8021860:	f6ff af6a 	blt.w	8021738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021864:	b23f      	sxth	r7, r7
 8021866:	b212      	sxth	r2, r2
 8021868:	e9cd 3104 	strd	r3, r1, [sp, #16]
 802186c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021870:	9200      	str	r2, [sp, #0]
 8021872:	9701      	str	r7, [sp, #4]
 8021874:	4623      	mov	r3, r4
 8021876:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802187a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802187c:	f7ff fde6 	bl	802144c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021880:	e75a      	b.n	8021738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021882:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021884:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021888:	ea4f 462b 	mov.w	r6, fp, asr #16
 802188c:	1428      	asrs	r0, r5, #16
 802188e:	fb02 6000 	mla	r0, r2, r0, r6
 8021892:	9e08      	ldr	r6, [sp, #32]
 8021894:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021898:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802189c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80218a0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80218a4:	1837      	adds	r7, r6, r0
 80218a6:	eb04 0c08 	add.w	ip, r4, r8
 80218aa:	2b00      	cmp	r3, #0
 80218ac:	d060      	beq.n	8021970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80218ae:	787e      	ldrb	r6, [r7, #1]
 80218b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80218b4:	4426      	add	r6, r4
 80218b6:	2900      	cmp	r1, #0
 80218b8:	d062      	beq.n	8021980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80218ba:	18b8      	adds	r0, r7, r2
 80218bc:	5cba      	ldrb	r2, [r7, r2]
 80218be:	7840      	ldrb	r0, [r0, #1]
 80218c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80218c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80218c8:	4422      	add	r2, r4
 80218ca:	4420      	add	r0, r4
 80218cc:	b29b      	uxth	r3, r3
 80218ce:	b289      	uxth	r1, r1
 80218d0:	fb03 f901 	mul.w	r9, r3, r1
 80218d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80218d8:	011b      	lsls	r3, r3, #4
 80218da:	b289      	uxth	r1, r1
 80218dc:	78b7      	ldrb	r7, [r6, #2]
 80218de:	f89c a002 	ldrb.w	sl, [ip, #2]
 80218e2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80218e6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80218ea:	eba3 0309 	sub.w	r3, r3, r9
 80218ee:	b29b      	uxth	r3, r3
 80218f0:	ebae 0e01 	sub.w	lr, lr, r1
 80218f4:	fa1f fe8e 	uxth.w	lr, lr
 80218f8:	435f      	muls	r7, r3
 80218fa:	fb0e 770a 	mla	r7, lr, sl, r7
 80218fe:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021902:	fb01 770a 	mla	r7, r1, sl, r7
 8021906:	f890 a002 	ldrb.w	sl, [r0, #2]
 802190a:	fb09 7a0a 	mla	sl, r9, sl, r7
 802190e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021912:	f896 8000 	ldrb.w	r8, [r6]
 8021916:	7876      	ldrb	r6, [r6, #1]
 8021918:	fb03 f808 	mul.w	r8, r3, r8
 802191c:	fb0e 8807 	mla	r8, lr, r7, r8
 8021920:	7817      	ldrb	r7, [r2, #0]
 8021922:	fb01 8807 	mla	r8, r1, r7, r8
 8021926:	7807      	ldrb	r7, [r0, #0]
 8021928:	fb09 8707 	mla	r7, r9, r7, r8
 802192c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021930:	4373      	muls	r3, r6
 8021932:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021936:	7856      	ldrb	r6, [r2, #1]
 8021938:	ea47 070a 	orr.w	r7, r7, sl
 802193c:	fb0e 330c 	mla	r3, lr, ip, r3
 8021940:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021944:	fb01 3306 	mla	r3, r1, r6, r3
 8021948:	fb09 3a0a 	mla	sl, r9, sl, r3
 802194c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021950:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021956:	ea47 070a 	orr.w	r7, r7, sl
 802195a:	f823 7b02 	strh.w	r7, [r3], #2
 802195e:	930b      	str	r3, [sp, #44]	; 0x2c
 8021960:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021962:	449b      	add	fp, r3
 8021964:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021966:	441d      	add	r5, r3
 8021968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802196a:	3b01      	subs	r3, #1
 802196c:	9309      	str	r3, [sp, #36]	; 0x24
 802196e:	e714      	b.n	802179a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021970:	b149      	cbz	r1, 8021986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021972:	5cba      	ldrb	r2, [r7, r2]
 8021974:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021978:	4422      	add	r2, r4
 802197a:	4660      	mov	r0, ip
 802197c:	4666      	mov	r6, ip
 802197e:	e7a5      	b.n	80218cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021980:	4660      	mov	r0, ip
 8021982:	4662      	mov	r2, ip
 8021984:	e7a2      	b.n	80218cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021986:	4660      	mov	r0, ip
 8021988:	4662      	mov	r2, ip
 802198a:	e7f7      	b.n	802197c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 802198c:	b00f      	add	sp, #60	; 0x3c
 802198e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021992 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021992:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021996:	b085      	sub	sp, #20
 8021998:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 802199c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80219a0:	9102      	str	r1, [sp, #8]
 80219a2:	2c00      	cmp	r4, #0
 80219a4:	fb04 710c 	mla	r1, r4, ip, r7
 80219a8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80219ac:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80219b0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80219b4:	eb02 0e01 	add.w	lr, r2, r1
 80219b8:	f2c0 8122 	blt.w	8021c00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80219bc:	45a0      	cmp	r8, r4
 80219be:	f340 811f 	ble.w	8021c00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80219c2:	2f00      	cmp	r7, #0
 80219c4:	f2c0 811a 	blt.w	8021bfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80219c8:	45bc      	cmp	ip, r7
 80219ca:	f340 8117 	ble.w	8021bfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80219ce:	5c52      	ldrb	r2, [r2, r1]
 80219d0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80219d4:	1c7a      	adds	r2, r7, #1
 80219d6:	f100 8116 	bmi.w	8021c06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80219da:	4594      	cmp	ip, r2
 80219dc:	f340 8113 	ble.w	8021c06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80219e0:	2e00      	cmp	r6, #0
 80219e2:	f000 8112 	beq.w	8021c0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80219e6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80219ea:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80219ee:	3401      	adds	r4, #1
 80219f0:	f100 810f 	bmi.w	8021c12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80219f4:	45a0      	cmp	r8, r4
 80219f6:	f340 810c 	ble.w	8021c12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80219fa:	2800      	cmp	r0, #0
 80219fc:	f000 810c 	beq.w	8021c18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021a00:	2f00      	cmp	r7, #0
 8021a02:	f2c0 8104 	blt.w	8021c0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021a06:	45bc      	cmp	ip, r7
 8021a08:	f340 8101 	ble.w	8021c0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021a0c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021a10:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021a14:	3701      	adds	r7, #1
 8021a16:	f100 8102 	bmi.w	8021c1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021a1a:	45bc      	cmp	ip, r7
 8021a1c:	f340 80ff 	ble.w	8021c1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021a20:	2e00      	cmp	r6, #0
 8021a22:	f000 80fe 	beq.w	8021c22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021a26:	44f4      	add	ip, lr
 8021a28:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021a2c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021a30:	b2b6      	uxth	r6, r6
 8021a32:	b280      	uxth	r0, r0
 8021a34:	fb00 fe06 	mul.w	lr, r0, r6
 8021a38:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021a3c:	0136      	lsls	r6, r6, #4
 8021a3e:	eba6 070e 	sub.w	r7, r6, lr
 8021a42:	b280      	uxth	r0, r0
 8021a44:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021a48:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021a4c:	b2bf      	uxth	r7, r7
 8021a4e:	1a1b      	subs	r3, r3, r0
 8021a50:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021a54:	b29b      	uxth	r3, r3
 8021a56:	fb0a f607 	mul.w	r6, sl, r7
 8021a5a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021a5e:	fb0b 6603 	mla	r6, fp, r3, r6
 8021a62:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021a66:	fb00 6609 	mla	r6, r0, r9, r6
 8021a6a:	fb0e 6608 	mla	r6, lr, r8, r6
 8021a6e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021a72:	9600      	str	r6, [sp, #0]
 8021a74:	2e00      	cmp	r6, #0
 8021a76:	f000 80be 	beq.w	8021bf6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021a7a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021a7e:	fb0b fc0c 	mul.w	ip, fp, ip
 8021a82:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021a86:	fb0b f505 	mul.w	r5, fp, r5
 8021a8a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021a8e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021a92:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021a96:	44dc      	add	ip, fp
 8021a98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a9c:	9501      	str	r5, [sp, #4]
 8021a9e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021aa2:	9503      	str	r5, [sp, #12]
 8021aa4:	9d01      	ldr	r5, [sp, #4]
 8021aa6:	9e02      	ldr	r6, [sp, #8]
 8021aa8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021aac:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021ab0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021ab4:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ab8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021abc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021ac0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021ac4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021ac8:	4465      	add	r5, ip
 8021aca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021ace:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021ad2:	fb09 fc0c 	mul.w	ip, r9, ip
 8021ad6:	fb09 f904 	mul.w	r9, r9, r4
 8021ada:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021ade:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021ae2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021ae6:	fb08 f404 	mul.w	r4, r8, r4
 8021aea:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021aee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021af2:	fb08 f802 	mul.w	r8, r8, r2
 8021af6:	fb0a fa01 	mul.w	sl, sl, r1
 8021afa:	0a22      	lsrs	r2, r4, #8
 8021afc:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021b00:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021b04:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021b08:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021b0c:	4414      	add	r4, r2
 8021b0e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021b12:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021b16:	0a2d      	lsrs	r5, r5, #8
 8021b18:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021b1c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021b20:	9a03      	ldr	r2, [sp, #12]
 8021b22:	8836      	ldrh	r6, [r6, #0]
 8021b24:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021b28:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021b2c:	437d      	muls	r5, r7
 8021b2e:	4461      	add	r1, ip
 8021b30:	0a24      	lsrs	r4, r4, #8
 8021b32:	fb02 5503 	mla	r5, r2, r3, r5
 8021b36:	0a09      	lsrs	r1, r1, #8
 8021b38:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021b3c:	fb04 540e 	mla	r4, r4, lr, r5
 8021b40:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021b44:	fb01 4100 	mla	r1, r1, r0, r4
 8021b48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b4c:	0a09      	lsrs	r1, r1, #8
 8021b4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021b52:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021b56:	fb07 f70a 	mul.w	r7, r7, sl
 8021b5a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021b5e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8021b62:	fb03 7101 	mla	r1, r3, r1, r7
 8021b66:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021b6a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021b6e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021b72:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021b76:	fb00 e101 	mla	r1, r0, r1, lr
 8021b7a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8021b7e:	9a00      	ldr	r2, [sp, #0]
 8021b80:	b287      	uxth	r7, r0
 8021b82:	437a      	muls	r2, r7
 8021b84:	0a09      	lsrs	r1, r1, #8
 8021b86:	1c53      	adds	r3, r2, #1
 8021b88:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021b8c:	4321      	orrs	r1, r4
 8021b8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021b92:	1235      	asrs	r5, r6, #8
 8021b94:	0c0a      	lsrs	r2, r1, #16
 8021b96:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021b9a:	b2db      	uxtb	r3, r3
 8021b9c:	fb12 f207 	smulbb	r2, r2, r7
 8021ba0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021ba4:	fb05 2503 	mla	r5, r5, r3, r2
 8021ba8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021bac:	10f2      	asrs	r2, r6, #3
 8021bae:	b2c8      	uxtb	r0, r1
 8021bb0:	00f6      	lsls	r6, r6, #3
 8021bb2:	fb14 f407 	smulbb	r4, r4, r7
 8021bb6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021bba:	b2f6      	uxtb	r6, r6
 8021bbc:	fb10 f007 	smulbb	r0, r0, r7
 8021bc0:	fb02 4203 	mla	r2, r2, r3, r4
 8021bc4:	b2ad      	uxth	r5, r5
 8021bc6:	fb06 0303 	mla	r3, r6, r3, r0
 8021bca:	b299      	uxth	r1, r3
 8021bcc:	b294      	uxth	r4, r2
 8021bce:	1c6b      	adds	r3, r5, #1
 8021bd0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021bd4:	1c62      	adds	r2, r4, #1
 8021bd6:	1c4b      	adds	r3, r1, #1
 8021bd8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021bdc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021be0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021be4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021be8:	0952      	lsrs	r2, r2, #5
 8021bea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bee:	432b      	orrs	r3, r5
 8021bf0:	4313      	orrs	r3, r2
 8021bf2:	9a02      	ldr	r2, [sp, #8]
 8021bf4:	8013      	strh	r3, [r2, #0]
 8021bf6:	b005      	add	sp, #20
 8021bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bfc:	2500      	movs	r5, #0
 8021bfe:	e6e9      	b.n	80219d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021c00:	2100      	movs	r1, #0
 8021c02:	460d      	mov	r5, r1
 8021c04:	e6f3      	b.n	80219ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021c06:	2100      	movs	r1, #0
 8021c08:	e6f1      	b.n	80219ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021c0a:	4631      	mov	r1, r6
 8021c0c:	e6ef      	b.n	80219ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021c0e:	2400      	movs	r4, #0
 8021c10:	e700      	b.n	8021a14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021c12:	2200      	movs	r2, #0
 8021c14:	4614      	mov	r4, r2
 8021c16:	e70b      	b.n	8021a30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021c18:	4602      	mov	r2, r0
 8021c1a:	4604      	mov	r4, r0
 8021c1c:	e708      	b.n	8021a30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021c1e:	2200      	movs	r2, #0
 8021c20:	e706      	b.n	8021a30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021c22:	4632      	mov	r2, r6
 8021c24:	e704      	b.n	8021a30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021c26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021c26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c2a:	b09f      	sub	sp, #124	; 0x7c
 8021c2c:	921b      	str	r2, [sp, #108]	; 0x6c
 8021c2e:	9309      	str	r3, [sp, #36]	; 0x24
 8021c30:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021c32:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021c36:	931c      	str	r3, [sp, #112]	; 0x70
 8021c38:	9119      	str	r1, [sp, #100]	; 0x64
 8021c3a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021c3e:	901d      	str	r0, [sp, #116]	; 0x74
 8021c40:	6850      	ldr	r0, [r2, #4]
 8021c42:	6812      	ldr	r2, [r2, #0]
 8021c44:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021c46:	fb00 1303 	mla	r3, r0, r3, r1
 8021c4a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021c4e:	930c      	str	r3, [sp, #48]	; 0x30
 8021c50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021c52:	681b      	ldr	r3, [r3, #0]
 8021c54:	9312      	str	r3, [sp, #72]	; 0x48
 8021c56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021c58:	685e      	ldr	r6, [r3, #4]
 8021c5a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021c5e:	930d      	str	r3, [sp, #52]	; 0x34
 8021c60:	3604      	adds	r6, #4
 8021c62:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021c64:	2b00      	cmp	r3, #0
 8021c66:	dc03      	bgt.n	8021c70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021c68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021c6a:	2b00      	cmp	r3, #0
 8021c6c:	f340 8388 	ble.w	8022380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021c70:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021c72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c7a:	1e48      	subs	r0, r1, #1
 8021c7c:	1e57      	subs	r7, r2, #1
 8021c7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c80:	2b00      	cmp	r3, #0
 8021c82:	f340 8195 	ble.w	8021fb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021c86:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021c88:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021c8c:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021c90:	d406      	bmi.n	8021ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021c92:	4584      	cmp	ip, r0
 8021c94:	da04      	bge.n	8021ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021c96:	2b00      	cmp	r3, #0
 8021c98:	db02      	blt.n	8021ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021c9a:	42bb      	cmp	r3, r7
 8021c9c:	f2c0 8189 	blt.w	8021fb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8021ca0:	f11c 0c01 	adds.w	ip, ip, #1
 8021ca4:	f100 8177 	bmi.w	8021f96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021ca8:	4561      	cmp	r1, ip
 8021caa:	f2c0 8174 	blt.w	8021f96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021cae:	3301      	adds	r3, #1
 8021cb0:	f100 8171 	bmi.w	8021f96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021cb4:	429a      	cmp	r2, r3
 8021cb6:	f2c0 816e 	blt.w	8021f96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021cba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cbc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8021cbe:	931a      	str	r3, [sp, #104]	; 0x68
 8021cc0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021cc2:	2b00      	cmp	r3, #0
 8021cc4:	f340 8193 	ble.w	8021fee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021cc8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021cca:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021cce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021cd0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021cd4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021cd6:	141b      	asrs	r3, r3, #16
 8021cd8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021cdc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021ce0:	f100 81d6 	bmi.w	8022090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021ce4:	f100 38ff 	add.w	r8, r0, #4294967295
 8021ce8:	4543      	cmp	r3, r8
 8021cea:	f280 81d1 	bge.w	8022090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021cee:	f1bc 0f00 	cmp.w	ip, #0
 8021cf2:	f2c0 81cd 	blt.w	8022090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021cf6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021cfa:	45c4      	cmp	ip, r8
 8021cfc:	f280 81c8 	bge.w	8022090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021d00:	b200      	sxth	r0, r0
 8021d02:	fb0c 3300 	mla	r3, ip, r0, r3
 8021d06:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d08:	eb04 0803 	add.w	r8, r4, r3
 8021d0c:	5ce3      	ldrb	r3, [r4, r3]
 8021d0e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021d12:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021d16:	2a00      	cmp	r2, #0
 8021d18:	f000 81af 	beq.w	802207a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021d1c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021d20:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021d24:	940e      	str	r4, [sp, #56]	; 0x38
 8021d26:	0e24      	lsrs	r4, r4, #24
 8021d28:	9415      	str	r4, [sp, #84]	; 0x54
 8021d2a:	b179      	cbz	r1, 8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021d2c:	eb08 0c00 	add.w	ip, r8, r0
 8021d30:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021d34:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021d38:	900a      	str	r0, [sp, #40]	; 0x28
 8021d3a:	0e00      	lsrs	r0, r0, #24
 8021d3c:	9013      	str	r0, [sp, #76]	; 0x4c
 8021d3e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021d42:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021d46:	900f      	str	r0, [sp, #60]	; 0x3c
 8021d48:	0e00      	lsrs	r0, r0, #24
 8021d4a:	9016      	str	r0, [sp, #88]	; 0x58
 8021d4c:	b292      	uxth	r2, r2
 8021d4e:	b289      	uxth	r1, r1
 8021d50:	fb02 f901 	mul.w	r9, r2, r1
 8021d54:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021d58:	0112      	lsls	r2, r2, #4
 8021d5a:	eba2 0809 	sub.w	r8, r2, r9
 8021d5e:	b289      	uxth	r1, r1
 8021d60:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021d64:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021d66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021d68:	fa1f f888 	uxth.w	r8, r8
 8021d6c:	1a52      	subs	r2, r2, r1
 8021d6e:	b292      	uxth	r2, r2
 8021d70:	fb08 f000 	mul.w	r0, r8, r0
 8021d74:	fb02 000e 	mla	r0, r2, lr, r0
 8021d78:	fb01 0004 	mla	r0, r1, r4, r0
 8021d7c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021d7e:	fb09 0004 	mla	r0, r9, r4, r0
 8021d82:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021d86:	2800      	cmp	r0, #0
 8021d88:	f000 80fa 	beq.w	8021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021d8c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021d90:	d01b      	beq.n	8021dca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021d92:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021d96:	fb0e fa0a 	mul.w	sl, lr, sl
 8021d9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021d9e:	fb0e fe03 	mul.w	lr, lr, r3
 8021da2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021da6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021daa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021dae:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021db2:	4453      	add	r3, sl
 8021db4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021db8:	0a1b      	lsrs	r3, r3, #8
 8021dba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021dbe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021dc2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021dc6:	ea43 030c 	orr.w	r3, r3, ip
 8021dca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021dcc:	2cff      	cmp	r4, #255	; 0xff
 8021dce:	d021      	beq.n	8021e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021dd0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021dd2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021dd6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021dd8:	fb04 fb0b 	mul.w	fp, r4, fp
 8021ddc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021dde:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021de2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021de4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021de8:	fb04 fa0a 	mul.w	sl, r4, sl
 8021dec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021df0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021df4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021df8:	44de      	add	lr, fp
 8021dfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021dfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e0e:	ea4e 040a 	orr.w	r4, lr, sl
 8021e12:	940e      	str	r4, [sp, #56]	; 0x38
 8021e14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e16:	2cff      	cmp	r4, #255	; 0xff
 8021e18:	d021      	beq.n	8021e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021e1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021e1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e22:	fb04 fb0b 	mul.w	fp, r4, fp
 8021e26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021e28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021e2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e32:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021e3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021e42:	44de      	add	lr, fp
 8021e44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e58:	ea4e 040a 	orr.w	r4, lr, sl
 8021e5c:	940a      	str	r4, [sp, #40]	; 0x28
 8021e5e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021e60:	2cff      	cmp	r4, #255	; 0xff
 8021e62:	d021      	beq.n	8021ea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021e64:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021e66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e6a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021e6c:	fb04 fb0b 	mul.w	fp, r4, fp
 8021e70:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021e72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021e76:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021e78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e7c:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021e88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021e8c:	44de      	add	lr, fp
 8021e8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021ea2:	ea4e 040a 	orr.w	r4, lr, sl
 8021ea6:	940f      	str	r4, [sp, #60]	; 0x3c
 8021ea8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021eaa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021eae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021eb0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021eb4:	fb08 fc0c 	mul.w	ip, r8, ip
 8021eb8:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021ebc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021ec0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021ec2:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021ec6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021eca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021ecc:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021ed0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021ed4:	fb08 f80e 	mul.w	r8, r8, lr
 8021ed8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021edc:	fb02 8303 	mla	r3, r2, r3, r8
 8021ee0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021ee2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021ee4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021ee8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021eea:	fb01 330a 	mla	r3, r1, sl, r3
 8021eee:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8021ef2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021ef4:	fb09 3901 	mla	r9, r9, r1, r3
 8021ef8:	4342      	muls	r2, r0
 8021efa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021efe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021f02:	883b      	ldrh	r3, [r7, #0]
 8021f04:	1c50      	adds	r0, r2, #1
 8021f06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f0a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021f0e:	ea4c 0c09 	orr.w	ip, ip, r9
 8021f12:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021f16:	1219      	asrs	r1, r3, #8
 8021f18:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021f1c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021f20:	b2c0      	uxtb	r0, r0
 8021f22:	fb12 f204 	smulbb	r2, r2, r4
 8021f26:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021f2a:	fb01 2100 	mla	r1, r1, r0, r2
 8021f2e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8021f32:	10da      	asrs	r2, r3, #3
 8021f34:	fa5f fc8c 	uxtb.w	ip, ip
 8021f38:	00db      	lsls	r3, r3, #3
 8021f3a:	fb1c fc04 	smulbb	ip, ip, r4
 8021f3e:	b2db      	uxtb	r3, r3
 8021f40:	b289      	uxth	r1, r1
 8021f42:	fb03 c300 	mla	r3, r3, r0, ip
 8021f46:	fa1f fc83 	uxth.w	ip, r3
 8021f4a:	1c4b      	adds	r3, r1, #1
 8021f4c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021f50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021f54:	fb1e fe04 	smulbb	lr, lr, r4
 8021f58:	f10c 0301 	add.w	r3, ip, #1
 8021f5c:	fb02 e200 	mla	r2, r2, r0, lr
 8021f60:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021f64:	b292      	uxth	r2, r2
 8021f66:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021f6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021f6e:	430b      	orrs	r3, r1
 8021f70:	1c51      	adds	r1, r2, #1
 8021f72:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021f76:	0952      	lsrs	r2, r2, #5
 8021f78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021f7c:	4313      	orrs	r3, r2
 8021f7e:	803b      	strh	r3, [r7, #0]
 8021f80:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021f82:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021f84:	441a      	add	r2, r3
 8021f86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021f88:	9229      	str	r2, [sp, #164]	; 0xa4
 8021f8a:	441d      	add	r5, r3
 8021f8c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021f8e:	3b01      	subs	r3, #1
 8021f90:	3702      	adds	r7, #2
 8021f92:	931a      	str	r3, [sp, #104]	; 0x68
 8021f94:	e694      	b.n	8021cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021f96:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021f98:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021f9a:	441c      	add	r4, r3
 8021f9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021f9e:	9429      	str	r4, [sp, #164]	; 0xa4
 8021fa0:	441d      	add	r5, r3
 8021fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021fa4:	3b01      	subs	r3, #1
 8021fa6:	9309      	str	r3, [sp, #36]	; 0x24
 8021fa8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021faa:	3302      	adds	r3, #2
 8021fac:	930c      	str	r3, [sp, #48]	; 0x30
 8021fae:	e666      	b.n	8021c7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021fb0:	d024      	beq.n	8021ffc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8021fb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021fb4:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021fb6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021fb8:	3b01      	subs	r3, #1
 8021fba:	fb00 4003 	mla	r0, r0, r3, r4
 8021fbe:	1400      	asrs	r0, r0, #16
 8021fc0:	f53f ae7b 	bmi.w	8021cba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021fc4:	3901      	subs	r1, #1
 8021fc6:	4288      	cmp	r0, r1
 8021fc8:	f6bf ae77 	bge.w	8021cba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021fcc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8021fce:	fb01 5303 	mla	r3, r1, r3, r5
 8021fd2:	141b      	asrs	r3, r3, #16
 8021fd4:	f53f ae71 	bmi.w	8021cba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021fd8:	3a01      	subs	r2, #1
 8021fda:	4293      	cmp	r3, r2
 8021fdc:	f6bf ae6d 	bge.w	8021cba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021fe0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021fe4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021fe8:	f1bb 0f00 	cmp.w	fp, #0
 8021fec:	dc70      	bgt.n	80220d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021fee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ff0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021ff4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021ff6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021ffa:	930c      	str	r3, [sp, #48]	; 0x30
 8021ffc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021ffe:	2b00      	cmp	r3, #0
 8022000:	f340 81be 	ble.w	8022380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022004:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022008:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802200c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022010:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022012:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022016:	ee31 1a05 	vadd.f32	s2, s2, s10
 802201a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802201e:	eef0 6a62 	vmov.f32	s13, s5
 8022022:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022026:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802202a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802202e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8022032:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022036:	eef0 6a43 	vmov.f32	s13, s6
 802203a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802203e:	ee12 2a90 	vmov	r2, s5
 8022042:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022046:	fb92 f3f3 	sdiv	r3, r2, r3
 802204a:	ee13 2a10 	vmov	r2, s6
 802204e:	932b      	str	r3, [sp, #172]	; 0xac
 8022050:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022052:	fb92 f3f3 	sdiv	r3, r2, r3
 8022056:	932c      	str	r3, [sp, #176]	; 0xb0
 8022058:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802205a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802205c:	3b01      	subs	r3, #1
 802205e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022062:	9319      	str	r3, [sp, #100]	; 0x64
 8022064:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022066:	bf08      	it	eq
 8022068:	4613      	moveq	r3, r2
 802206a:	ee16 5a90 	vmov	r5, s13
 802206e:	9309      	str	r3, [sp, #36]	; 0x24
 8022070:	eeb0 3a67 	vmov.f32	s6, s15
 8022074:	eef0 2a47 	vmov.f32	s5, s14
 8022078:	e5f3      	b.n	8021c62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802207a:	2900      	cmp	r1, #0
 802207c:	f43f ae66 	beq.w	8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022080:	f818 0000 	ldrb.w	r0, [r8, r0]
 8022084:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022088:	900a      	str	r0, [sp, #40]	; 0x28
 802208a:	0e00      	lsrs	r0, r0, #24
 802208c:	9013      	str	r0, [sp, #76]	; 0x4c
 802208e:	e65d      	b.n	8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022090:	f113 0801 	adds.w	r8, r3, #1
 8022094:	f53f af74 	bmi.w	8021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022098:	4540      	cmp	r0, r8
 802209a:	f6ff af71 	blt.w	8021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802209e:	f11c 0801 	adds.w	r8, ip, #1
 80220a2:	f53f af6d 	bmi.w	8021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80220a6:	45c6      	cmp	lr, r8
 80220a8:	f6ff af6a 	blt.w	8021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80220ac:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80220ae:	9302      	str	r3, [sp, #8]
 80220b0:	b200      	sxth	r0, r0
 80220b2:	fa0f f38e 	sxth.w	r3, lr
 80220b6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80220ba:	e9cd c203 	strd	ip, r2, [sp, #12]
 80220be:	9301      	str	r3, [sp, #4]
 80220c0:	9000      	str	r0, [sp, #0]
 80220c2:	4633      	mov	r3, r6
 80220c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80220c6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80220c8:	4639      	mov	r1, r7
 80220ca:	f7ff fc62 	bl	8021992 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80220ce:	e757      	b.n	8021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80220d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80220d2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80220d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80220d8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80220da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80220de:	1427      	asrs	r7, r4, #16
 80220e0:	142b      	asrs	r3, r5, #16
 80220e2:	fb01 7303 	mla	r3, r1, r3, r7
 80220e6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80220e8:	18e7      	adds	r7, r4, r3
 80220ea:	5ce3      	ldrb	r3, [r4, r3]
 80220ec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80220f0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80220f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80220f8:	2a00      	cmp	r2, #0
 80220fa:	f000 8137 	beq.w	802236c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80220fe:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022102:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022106:	9410      	str	r4, [sp, #64]	; 0x40
 8022108:	0e24      	lsrs	r4, r4, #24
 802210a:	9417      	str	r4, [sp, #92]	; 0x5c
 802210c:	b170      	cbz	r0, 802212c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802210e:	eb07 0e01 	add.w	lr, r7, r1
 8022112:	5c79      	ldrb	r1, [r7, r1]
 8022114:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022118:	910b      	str	r1, [sp, #44]	; 0x2c
 802211a:	0e09      	lsrs	r1, r1, #24
 802211c:	9114      	str	r1, [sp, #80]	; 0x50
 802211e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022122:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022126:	9111      	str	r1, [sp, #68]	; 0x44
 8022128:	0e09      	lsrs	r1, r1, #24
 802212a:	9118      	str	r1, [sp, #96]	; 0x60
 802212c:	b292      	uxth	r2, r2
 802212e:	b280      	uxth	r0, r0
 8022130:	fb02 f800 	mul.w	r8, r2, r0
 8022134:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022138:	0112      	lsls	r2, r2, #4
 802213a:	eba2 0e08 	sub.w	lr, r2, r8
 802213e:	b280      	uxth	r0, r0
 8022140:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022144:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8022146:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022148:	fa1f fe8e 	uxth.w	lr, lr
 802214c:	1a12      	subs	r2, r2, r0
 802214e:	b292      	uxth	r2, r2
 8022150:	fb0e f101 	mul.w	r1, lr, r1
 8022154:	fb02 110c 	mla	r1, r2, ip, r1
 8022158:	fb00 1104 	mla	r1, r0, r4, r1
 802215c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802215e:	fb08 1104 	mla	r1, r8, r4, r1
 8022162:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022166:	2900      	cmp	r1, #0
 8022168:	f000 80f5 	beq.w	8022356 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802216c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022170:	d019      	beq.n	80221a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8022172:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022176:	fb0c fa0a 	mul.w	sl, ip, sl
 802217a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802217e:	fb0c fc03 	mul.w	ip, ip, r3
 8022182:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022186:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802218a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802218e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022192:	4453      	add	r3, sl
 8022194:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022198:	0a1b      	lsrs	r3, r3, #8
 802219a:	0a3f      	lsrs	r7, r7, #8
 802219c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80221a0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80221a4:	433b      	orrs	r3, r7
 80221a6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80221a8:	2cff      	cmp	r4, #255	; 0xff
 80221aa:	d020      	beq.n	80221ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80221ac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80221ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221b2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80221b4:	4367      	muls	r7, r4
 80221b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80221b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221bc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80221be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80221c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80221ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221ce:	44bc      	add	ip, r7
 80221d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80221d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80221d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80221e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80221e8:	ea4c 040a 	orr.w	r4, ip, sl
 80221ec:	9410      	str	r4, [sp, #64]	; 0x40
 80221ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80221f0:	2cff      	cmp	r4, #255	; 0xff
 80221f2:	d020      	beq.n	8022236 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80221f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80221f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80221fc:	4367      	muls	r7, r4
 80221fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022200:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022204:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022206:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802220a:	fb04 fa0a 	mul.w	sl, r4, sl
 802220e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022212:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022216:	44bc      	add	ip, r7
 8022218:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802221c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022220:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022224:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022228:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802222c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022230:	ea4c 040a 	orr.w	r4, ip, sl
 8022234:	940b      	str	r4, [sp, #44]	; 0x2c
 8022236:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022238:	2cff      	cmp	r4, #255	; 0xff
 802223a:	d020      	beq.n	802227e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 802223c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802223e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022242:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022244:	4367      	muls	r7, r4
 8022246:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022248:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802224c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802224e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022252:	fb04 fa0a 	mul.w	sl, r4, sl
 8022256:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802225a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802225e:	44bc      	add	ip, r7
 8022260:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022264:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802226c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022270:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022274:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022278:	ea4c 040a 	orr.w	r4, ip, sl
 802227c:	9411      	str	r4, [sp, #68]	; 0x44
 802227e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022280:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022284:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022286:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802228a:	fb0e f707 	mul.w	r7, lr, r7
 802228e:	fb02 770c 	mla	r7, r2, ip, r7
 8022292:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022296:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022298:	fb00 770c 	mla	r7, r0, ip, r7
 802229c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80222a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80222a2:	fb08 770c 	mla	r7, r8, ip, r7
 80222a6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80222aa:	fb0e fe0c 	mul.w	lr, lr, ip
 80222ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80222b2:	fb02 e303 	mla	r3, r2, r3, lr
 80222b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80222b8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80222ba:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80222be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80222c0:	fb00 330a 	mla	r3, r0, sl, r3
 80222c4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80222c8:	fb08 3c0c 	mla	ip, r8, ip, r3
 80222cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80222ce:	f8b9 0000 	ldrh.w	r0, [r9]
 80222d2:	434b      	muls	r3, r1
 80222d4:	0a3f      	lsrs	r7, r7, #8
 80222d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222da:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80222de:	1c59      	adds	r1, r3, #1
 80222e0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80222e4:	ea47 070c 	orr.w	r7, r7, ip
 80222e8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80222ec:	1202      	asrs	r2, r0, #8
 80222ee:	0c3b      	lsrs	r3, r7, #16
 80222f0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80222f4:	b2c9      	uxtb	r1, r1
 80222f6:	fb13 f304 	smulbb	r3, r3, r4
 80222fa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80222fe:	fb02 3201 	mla	r2, r2, r1, r3
 8022302:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022306:	10c3      	asrs	r3, r0, #3
 8022308:	b2ff      	uxtb	r7, r7
 802230a:	00c0      	lsls	r0, r0, #3
 802230c:	b292      	uxth	r2, r2
 802230e:	fb1c fc04 	smulbb	ip, ip, r4
 8022312:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022316:	b2c0      	uxtb	r0, r0
 8022318:	fb17 f704 	smulbb	r7, r7, r4
 802231c:	fb03 c301 	mla	r3, r3, r1, ip
 8022320:	fb00 7001 	mla	r0, r0, r1, r7
 8022324:	f102 0c01 	add.w	ip, r2, #1
 8022328:	b280      	uxth	r0, r0
 802232a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802232e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8022332:	1c42      	adds	r2, r0, #1
 8022334:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022338:	b29b      	uxth	r3, r3
 802233a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802233e:	ea42 020c 	orr.w	r2, r2, ip
 8022342:	f103 0c01 	add.w	ip, r3, #1
 8022346:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802234a:	095b      	lsrs	r3, r3, #5
 802234c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022350:	431a      	orrs	r2, r3
 8022352:	f8a9 2000 	strh.w	r2, [r9]
 8022356:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022358:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802235a:	441a      	add	r2, r3
 802235c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802235e:	9229      	str	r2, [sp, #164]	; 0xa4
 8022360:	f109 0902 	add.w	r9, r9, #2
 8022364:	441d      	add	r5, r3
 8022366:	f10b 3bff 	add.w	fp, fp, #4294967295
 802236a:	e63d      	b.n	8021fe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802236c:	2800      	cmp	r0, #0
 802236e:	f43f aedd 	beq.w	802212c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022372:	5c79      	ldrb	r1, [r7, r1]
 8022374:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022378:	910b      	str	r1, [sp, #44]	; 0x2c
 802237a:	0e09      	lsrs	r1, r1, #24
 802237c:	9114      	str	r1, [sp, #80]	; 0x50
 802237e:	e6d5      	b.n	802212c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022380:	b01f      	add	sp, #124	; 0x7c
 8022382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8022386:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802238a:	b089      	sub	sp, #36	; 0x24
 802238c:	9101      	str	r1, [sp, #4]
 802238e:	9801      	ldr	r0, [sp, #4]
 8022390:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8022394:	8800      	ldrh	r0, [r0, #0]
 8022396:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 802239a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802239e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80223a2:	1206      	asrs	r6, r0, #8
 80223a4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80223a8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80223ac:	9602      	str	r6, [sp, #8]
 80223ae:	10c6      	asrs	r6, r0, #3
 80223b0:	00c0      	lsls	r0, r0, #3
 80223b2:	b2c0      	uxtb	r0, r0
 80223b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80223b8:	9004      	str	r0, [sp, #16]
 80223ba:	2f00      	cmp	r7, #0
 80223bc:	fb07 100c 	mla	r0, r7, ip, r1
 80223c0:	9603      	str	r6, [sp, #12]
 80223c2:	eb02 0e00 	add.w	lr, r2, r0
 80223c6:	f2c0 810a 	blt.w	80225de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80223ca:	45b8      	cmp	r8, r7
 80223cc:	f340 8107 	ble.w	80225de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80223d0:	2900      	cmp	r1, #0
 80223d2:	f2c0 8102 	blt.w	80225da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80223d6:	458c      	cmp	ip, r1
 80223d8:	f340 80ff 	ble.w	80225da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80223dc:	5c12      	ldrb	r2, [r2, r0]
 80223de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80223e2:	1c4a      	adds	r2, r1, #1
 80223e4:	f100 80fe 	bmi.w	80225e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80223e8:	4594      	cmp	ip, r2
 80223ea:	f340 80fb 	ble.w	80225e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80223ee:	2d00      	cmp	r5, #0
 80223f0:	f000 80fa 	beq.w	80225e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80223f4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80223f8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80223fc:	3701      	adds	r7, #1
 80223fe:	f100 80f7 	bmi.w	80225f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022402:	45b8      	cmp	r8, r7
 8022404:	f340 80f4 	ble.w	80225f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022408:	2c00      	cmp	r4, #0
 802240a:	f000 80f4 	beq.w	80225f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802240e:	2900      	cmp	r1, #0
 8022410:	eb0e 020c 	add.w	r2, lr, ip
 8022414:	f2c0 80ea 	blt.w	80225ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022418:	458c      	cmp	ip, r1
 802241a:	f340 80e7 	ble.w	80225ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802241e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8022422:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8022426:	3101      	adds	r1, #1
 8022428:	f100 80e8 	bmi.w	80225fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802242c:	458c      	cmp	ip, r1
 802242e:	f340 80e5 	ble.w	80225fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022432:	2d00      	cmp	r5, #0
 8022434:	f000 80e4 	beq.w	8022600 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022438:	7852      	ldrb	r2, [r2, #1]
 802243a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802243e:	0e0b      	lsrs	r3, r1, #24
 8022440:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8022444:	9300      	str	r3, [sp, #0]
 8022446:	b2a4      	uxth	r4, r4
 8022448:	b2ab      	uxth	r3, r5
 802244a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802244e:	fb03 f904 	mul.w	r9, r3, r4
 8022452:	fb0a f505 	mul.w	r5, sl, r5
 8022456:	011b      	lsls	r3, r3, #4
 8022458:	eba3 0e09 	sub.w	lr, r3, r9
 802245c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022460:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8022464:	0a28      	lsrs	r0, r5, #8
 8022466:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802246a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802246e:	4405      	add	r5, r0
 8022470:	0a2d      	lsrs	r5, r5, #8
 8022472:	fb0a f303 	mul.w	r3, sl, r3
 8022476:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 802247a:	9005      	str	r0, [sp, #20]
 802247c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022480:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022484:	0a1b      	lsrs	r3, r3, #8
 8022486:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802248a:	9306      	str	r3, [sp, #24]
 802248c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022490:	fb0b f303 	mul.w	r3, fp, r3
 8022494:	0a1d      	lsrs	r5, r3, #8
 8022496:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802249a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802249e:	fb0b f606 	mul.w	r6, fp, r6
 80224a2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80224a6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80224aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80224ae:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80224b2:	fb08 f707 	mul.w	r7, r8, r7
 80224b6:	441d      	add	r5, r3
 80224b8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80224bc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80224c0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80224c4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80224c8:	fb08 fc0c 	mul.w	ip, r8, ip
 80224cc:	0a1b      	lsrs	r3, r3, #8
 80224ce:	9307      	str	r3, [sp, #28]
 80224d0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80224d4:	0e0b      	lsrs	r3, r1, #24
 80224d6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80224da:	435f      	muls	r7, r3
 80224dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80224e0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80224e4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80224e8:	4460      	add	r0, ip
 80224ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80224ee:	b2a4      	uxth	r4, r4
 80224f0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80224f4:	0a2d      	lsrs	r5, r5, #8
 80224f6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80224fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224fe:	fa1f fe8e 	uxth.w	lr, lr
 8022502:	4359      	muls	r1, r3
 8022504:	1b12      	subs	r2, r2, r4
 8022506:	9b05      	ldr	r3, [sp, #20]
 8022508:	44bc      	add	ip, r7
 802250a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802250e:	b292      	uxth	r2, r2
 8022510:	fb05 f50e 	mul.w	r5, r5, lr
 8022514:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022518:	fb03 5502 	mla	r5, r3, r2, r5
 802251c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022520:	9b06      	ldr	r3, [sp, #24]
 8022522:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8022526:	0a36      	lsrs	r6, r6, #8
 8022528:	0a00      	lsrs	r0, r0, #8
 802252a:	fb0c 5509 	mla	r5, ip, r9, r5
 802252e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022532:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022536:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802253a:	fb00 5504 	mla	r5, r0, r4, r5
 802253e:	fb0e f606 	mul.w	r6, lr, r6
 8022542:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022546:	0a09      	lsrs	r1, r1, #8
 8022548:	9b07      	ldr	r3, [sp, #28]
 802254a:	fb02 6000 	mla	r0, r2, r0, r6
 802254e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022552:	fb09 0001 	mla	r0, r9, r1, r0
 8022556:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802255a:	fb0e fe0b 	mul.w	lr, lr, fp
 802255e:	fb04 0003 	mla	r0, r4, r3, r0
 8022562:	fb02 e20a 	mla	r2, r2, sl, lr
 8022566:	9b00      	ldr	r3, [sp, #0]
 8022568:	fb04 2408 	mla	r4, r4, r8, r2
 802256c:	fb09 4903 	mla	r9, r9, r3, r4
 8022570:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022574:	9b02      	ldr	r3, [sp, #8]
 8022576:	9a04      	ldr	r2, [sp, #16]
 8022578:	fa5f f989 	uxtb.w	r9, r9
 802257c:	fb03 f109 	mul.w	r1, r3, r9
 8022580:	9b03      	ldr	r3, [sp, #12]
 8022582:	0a2d      	lsrs	r5, r5, #8
 8022584:	0a00      	lsrs	r0, r0, #8
 8022586:	fb03 f309 	mul.w	r3, r3, r9
 802258a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802258e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022592:	4305      	orrs	r5, r0
 8022594:	fb02 f909 	mul.w	r9, r2, r9
 8022598:	1c58      	adds	r0, r3, #1
 802259a:	1c4a      	adds	r2, r1, #1
 802259c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80225a0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80225a4:	0a2b      	lsrs	r3, r5, #8
 80225a6:	0c2a      	lsrs	r2, r5, #16
 80225a8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80225ac:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80225b0:	00db      	lsls	r3, r3, #3
 80225b2:	0212      	lsls	r2, r2, #8
 80225b4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80225b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80225bc:	4313      	orrs	r3, r2
 80225be:	f109 0201 	add.w	r2, r9, #1
 80225c2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80225c6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80225ca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80225ce:	431d      	orrs	r5, r3
 80225d0:	9b01      	ldr	r3, [sp, #4]
 80225d2:	801d      	strh	r5, [r3, #0]
 80225d4:	b009      	add	sp, #36	; 0x24
 80225d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80225da:	2000      	movs	r0, #0
 80225dc:	e701      	b.n	80223e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80225de:	2600      	movs	r6, #0
 80225e0:	4630      	mov	r0, r6
 80225e2:	e70b      	b.n	80223fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80225e4:	2600      	movs	r6, #0
 80225e6:	e709      	b.n	80223fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80225e8:	462e      	mov	r6, r5
 80225ea:	e707      	b.n	80223fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80225ec:	2700      	movs	r7, #0
 80225ee:	e71a      	b.n	8022426 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80225f0:	2100      	movs	r1, #0
 80225f2:	460f      	mov	r7, r1
 80225f4:	e723      	b.n	802243e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80225f6:	4621      	mov	r1, r4
 80225f8:	4627      	mov	r7, r4
 80225fa:	e720      	b.n	802243e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80225fc:	2100      	movs	r1, #0
 80225fe:	e71e      	b.n	802243e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022600:	4629      	mov	r1, r5
 8022602:	e71c      	b.n	802243e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022608:	b09b      	sub	sp, #108	; 0x6c
 802260a:	9218      	str	r2, [sp, #96]	; 0x60
 802260c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802260e:	9116      	str	r1, [sp, #88]	; 0x58
 8022610:	9307      	str	r3, [sp, #28]
 8022612:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022616:	9019      	str	r0, [sp, #100]	; 0x64
 8022618:	6850      	ldr	r0, [r2, #4]
 802261a:	6812      	ldr	r2, [r2, #0]
 802261c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 802261e:	fb00 1303 	mla	r3, r0, r3, r1
 8022622:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022626:	930a      	str	r3, [sp, #40]	; 0x28
 8022628:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802262a:	681b      	ldr	r3, [r3, #0]
 802262c:	930f      	str	r3, [sp, #60]	; 0x3c
 802262e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022630:	685e      	ldr	r6, [r3, #4]
 8022632:	3604      	adds	r6, #4
 8022634:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022636:	2b00      	cmp	r3, #0
 8022638:	dc03      	bgt.n	8022642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802263a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802263c:	2b00      	cmp	r3, #0
 802263e:	f340 8373 	ble.w	8022d28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022642:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022644:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022648:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802264c:	1e48      	subs	r0, r1, #1
 802264e:	1e57      	subs	r7, r2, #1
 8022650:	9b07      	ldr	r3, [sp, #28]
 8022652:	2b00      	cmp	r3, #0
 8022654:	f340 8190 	ble.w	8022978 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022658:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802265a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802265e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022662:	d406      	bmi.n	8022672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022664:	4584      	cmp	ip, r0
 8022666:	da04      	bge.n	8022672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022668:	2b00      	cmp	r3, #0
 802266a:	db02      	blt.n	8022672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802266c:	42bb      	cmp	r3, r7
 802266e:	f2c0 8184 	blt.w	802297a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022672:	f11c 0c01 	adds.w	ip, ip, #1
 8022676:	f100 8172 	bmi.w	802295e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802267a:	4561      	cmp	r1, ip
 802267c:	f2c0 816f 	blt.w	802295e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022680:	3301      	adds	r3, #1
 8022682:	f100 816c 	bmi.w	802295e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022686:	429a      	cmp	r2, r3
 8022688:	f2c0 8169 	blt.w	802295e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802268c:	9b07      	ldr	r3, [sp, #28]
 802268e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022690:	9317      	str	r3, [sp, #92]	; 0x5c
 8022692:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022694:	2b00      	cmp	r3, #0
 8022696:	f340 818e 	ble.w	80229b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 802269a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802269c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80226a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80226a2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80226a6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80226a8:	141b      	asrs	r3, r3, #16
 80226aa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80226ae:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80226b2:	f100 81d1 	bmi.w	8022a58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80226b6:	f101 38ff 	add.w	r8, r1, #4294967295
 80226ba:	4543      	cmp	r3, r8
 80226bc:	f280 81cc 	bge.w	8022a58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80226c0:	f1bc 0f00 	cmp.w	ip, #0
 80226c4:	f2c0 81c8 	blt.w	8022a58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80226c8:	f10e 38ff 	add.w	r8, lr, #4294967295
 80226cc:	45c4      	cmp	ip, r8
 80226ce:	f280 81c3 	bge.w	8022a58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80226d2:	b209      	sxth	r1, r1
 80226d4:	fb0c 3301 	mla	r3, ip, r1, r3
 80226d8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80226da:	eb04 0803 	add.w	r8, r4, r3
 80226de:	5ce3      	ldrb	r3, [r4, r3]
 80226e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80226e4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80226e8:	2a00      	cmp	r2, #0
 80226ea:	f000 81aa 	beq.w	8022a42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80226ee:	f898 c001 	ldrb.w	ip, [r8, #1]
 80226f2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80226f6:	940b      	str	r4, [sp, #44]	; 0x2c
 80226f8:	0e24      	lsrs	r4, r4, #24
 80226fa:	9412      	str	r4, [sp, #72]	; 0x48
 80226fc:	b178      	cbz	r0, 802271e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80226fe:	eb08 0c01 	add.w	ip, r8, r1
 8022702:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022706:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802270a:	9108      	str	r1, [sp, #32]
 802270c:	0e09      	lsrs	r1, r1, #24
 802270e:	9110      	str	r1, [sp, #64]	; 0x40
 8022710:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022714:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022718:	910c      	str	r1, [sp, #48]	; 0x30
 802271a:	0e09      	lsrs	r1, r1, #24
 802271c:	9113      	str	r1, [sp, #76]	; 0x4c
 802271e:	b292      	uxth	r2, r2
 8022720:	b280      	uxth	r0, r0
 8022722:	fb02 f900 	mul.w	r9, r2, r0
 8022726:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802272a:	0112      	lsls	r2, r2, #4
 802272c:	eba2 0809 	sub.w	r8, r2, r9
 8022730:	b280      	uxth	r0, r0
 8022732:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022736:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022738:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802273a:	fa1f f888 	uxth.w	r8, r8
 802273e:	1a12      	subs	r2, r2, r0
 8022740:	b292      	uxth	r2, r2
 8022742:	fb08 f101 	mul.w	r1, r8, r1
 8022746:	fb02 110e 	mla	r1, r2, lr, r1
 802274a:	fb00 1104 	mla	r1, r0, r4, r1
 802274e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022750:	fb09 1104 	mla	r1, r9, r4, r1
 8022754:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022758:	2900      	cmp	r1, #0
 802275a:	f000 80f5 	beq.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802275e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022762:	d01b      	beq.n	802279c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022764:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022768:	fb0e fa0a 	mul.w	sl, lr, sl
 802276c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022770:	fb0e fe03 	mul.w	lr, lr, r3
 8022774:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022778:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802277c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022780:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022784:	4453      	add	r3, sl
 8022786:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802278a:	0a1b      	lsrs	r3, r3, #8
 802278c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022790:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022794:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022798:	ea43 030c 	orr.w	r3, r3, ip
 802279c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802279e:	2cff      	cmp	r4, #255	; 0xff
 80227a0:	d021      	beq.n	80227e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80227a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227a4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80227a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80227aa:	fb04 fb0b 	mul.w	fp, r4, fp
 80227ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80227b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80227b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80227ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80227be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80227c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80227c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80227ca:	44de      	add	lr, fp
 80227cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80227d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80227d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80227dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227e0:	ea4e 040a 	orr.w	r4, lr, sl
 80227e4:	940b      	str	r4, [sp, #44]	; 0x2c
 80227e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80227e8:	2cff      	cmp	r4, #255	; 0xff
 80227ea:	d021      	beq.n	8022830 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80227ec:	9c08      	ldr	r4, [sp, #32]
 80227ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80227f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80227f4:	fb04 fb0b 	mul.w	fp, r4, fp
 80227f8:	9c08      	ldr	r4, [sp, #32]
 80227fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80227fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022800:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022804:	fb04 fa0a 	mul.w	sl, r4, sl
 8022808:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802280c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022810:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022814:	44de      	add	lr, fp
 8022816:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802281a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802281e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022822:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022826:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802282a:	ea4e 040a 	orr.w	r4, lr, sl
 802282e:	9408      	str	r4, [sp, #32]
 8022830:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022832:	2cff      	cmp	r4, #255	; 0xff
 8022834:	d021      	beq.n	802287a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022836:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022838:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802283c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802283e:	fb04 fb0b 	mul.w	fp, r4, fp
 8022842:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022844:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022848:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802284a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802284e:	fb04 fa0a 	mul.w	sl, r4, sl
 8022852:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022856:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802285a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802285e:	44de      	add	lr, fp
 8022860:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022864:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022868:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802286c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022870:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022874:	ea4e 040a 	orr.w	r4, lr, sl
 8022878:	940c      	str	r4, [sp, #48]	; 0x30
 802287a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802287c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022880:	9c08      	ldr	r4, [sp, #32]
 8022882:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022886:	fb08 fc0c 	mul.w	ip, r8, ip
 802288a:	fb02 cc0e 	mla	ip, r2, lr, ip
 802288e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022892:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022894:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022898:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802289c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802289e:	fb09 cc0e 	mla	ip, r9, lr, ip
 80228a2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80228a6:	fb08 f80e 	mul.w	r8, r8, lr
 80228aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80228ae:	fb02 8303 	mla	r3, r2, r3, r8
 80228b2:	9a08      	ldr	r2, [sp, #32]
 80228b4:	f8b7 8000 	ldrh.w	r8, [r7]
 80228b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80228bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80228be:	fb00 330a 	mla	r3, r0, sl, r3
 80228c2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80228c6:	fb09 3900 	mla	r9, r9, r0, r3
 80228ca:	43c9      	mvns	r1, r1
 80228cc:	ea4f 2228 	mov.w	r2, r8, asr #8
 80228d0:	fa5f fe81 	uxtb.w	lr, r1
 80228d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80228dc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80228e0:	fb02 f20e 	mul.w	r2, r2, lr
 80228e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80228e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80228ec:	ea4c 0c09 	orr.w	ip, ip, r9
 80228f0:	1c53      	adds	r3, r2, #1
 80228f2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80228f6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80228fa:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80228fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022902:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022906:	4a63      	ldr	r2, [pc, #396]	; (8022a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022908:	fb00 f00e 	mul.w	r0, r0, lr
 802290c:	b2db      	uxtb	r3, r3
 802290e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022912:	1c43      	adds	r3, r0, #1
 8022914:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022918:	ea4f 231c 	mov.w	r3, ip, lsr #8
 802291c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022920:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022924:	b2c9      	uxtb	r1, r1
 8022926:	00db      	lsls	r3, r3, #3
 8022928:	fb01 f10e 	mul.w	r1, r1, lr
 802292c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022930:	4313      	orrs	r3, r2
 8022932:	1c4a      	adds	r2, r1, #1
 8022934:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022938:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802293c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022940:	ea4c 0c03 	orr.w	ip, ip, r3
 8022944:	f8a7 c000 	strh.w	ip, [r7]
 8022948:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802294a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802294c:	441a      	add	r2, r3
 802294e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022950:	9225      	str	r2, [sp, #148]	; 0x94
 8022952:	441d      	add	r5, r3
 8022954:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022956:	3b01      	subs	r3, #1
 8022958:	3702      	adds	r7, #2
 802295a:	9317      	str	r3, [sp, #92]	; 0x5c
 802295c:	e699      	b.n	8022692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802295e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022960:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022962:	441c      	add	r4, r3
 8022964:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022966:	9425      	str	r4, [sp, #148]	; 0x94
 8022968:	441d      	add	r5, r3
 802296a:	9b07      	ldr	r3, [sp, #28]
 802296c:	3b01      	subs	r3, #1
 802296e:	9307      	str	r3, [sp, #28]
 8022970:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022972:	3302      	adds	r3, #2
 8022974:	930a      	str	r3, [sp, #40]	; 0x28
 8022976:	e66b      	b.n	8022650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022978:	d024      	beq.n	80229c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802297a:	9b07      	ldr	r3, [sp, #28]
 802297c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802297e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022980:	3b01      	subs	r3, #1
 8022982:	fb00 4003 	mla	r0, r0, r3, r4
 8022986:	1400      	asrs	r0, r0, #16
 8022988:	f53f ae80 	bmi.w	802268c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802298c:	3901      	subs	r1, #1
 802298e:	4288      	cmp	r0, r1
 8022990:	f6bf ae7c 	bge.w	802268c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022994:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022996:	fb01 5303 	mla	r3, r1, r3, r5
 802299a:	141b      	asrs	r3, r3, #16
 802299c:	f53f ae76 	bmi.w	802268c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80229a0:	3a01      	subs	r2, #1
 80229a2:	4293      	cmp	r3, r2
 80229a4:	f6bf ae72 	bge.w	802268c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80229a8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80229ac:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80229b0:	f1bb 0f00 	cmp.w	fp, #0
 80229b4:	dc70      	bgt.n	8022a98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80229b6:	9b07      	ldr	r3, [sp, #28]
 80229b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80229bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80229be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80229c2:	930a      	str	r3, [sp, #40]	; 0x28
 80229c4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80229c6:	2b00      	cmp	r3, #0
 80229c8:	f340 81ae 	ble.w	8022d28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80229cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80229d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80229d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80229d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80229de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80229e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80229e6:	eef0 6a62 	vmov.f32	s13, s5
 80229ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80229ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80229f6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80229fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80229fe:	eef0 6a43 	vmov.f32	s13, s6
 8022a02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a06:	ee12 2a90 	vmov	r2, s5
 8022a0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a12:	ee13 2a10 	vmov	r2, s6
 8022a16:	9327      	str	r3, [sp, #156]	; 0x9c
 8022a18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a1e:	9328      	str	r3, [sp, #160]	; 0xa0
 8022a20:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022a22:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022a24:	3b01      	subs	r3, #1
 8022a26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a2a:	9316      	str	r3, [sp, #88]	; 0x58
 8022a2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a2e:	bf08      	it	eq
 8022a30:	4613      	moveq	r3, r2
 8022a32:	ee16 5a90 	vmov	r5, s13
 8022a36:	9307      	str	r3, [sp, #28]
 8022a38:	eeb0 3a67 	vmov.f32	s6, s15
 8022a3c:	eef0 2a47 	vmov.f32	s5, s14
 8022a40:	e5f8      	b.n	8022634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022a42:	2800      	cmp	r0, #0
 8022a44:	f43f ae6b 	beq.w	802271e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022a48:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022a4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022a50:	9108      	str	r1, [sp, #32]
 8022a52:	0e09      	lsrs	r1, r1, #24
 8022a54:	9110      	str	r1, [sp, #64]	; 0x40
 8022a56:	e662      	b.n	802271e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022a58:	f113 0801 	adds.w	r8, r3, #1
 8022a5c:	f53f af74 	bmi.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022a60:	4541      	cmp	r1, r8
 8022a62:	f6ff af71 	blt.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022a66:	f11c 0801 	adds.w	r8, ip, #1
 8022a6a:	f53f af6d 	bmi.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022a6e:	45c6      	cmp	lr, r8
 8022a70:	f6ff af6a 	blt.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022a74:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022a78:	b209      	sxth	r1, r1
 8022a7a:	fa0f f38e 	sxth.w	r3, lr
 8022a7e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8022a82:	9301      	str	r3, [sp, #4]
 8022a84:	9100      	str	r1, [sp, #0]
 8022a86:	4633      	mov	r3, r6
 8022a88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022a8a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022a8c:	4639      	mov	r1, r7
 8022a8e:	f7ff fc7a 	bl	8022386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8022a92:	e759      	b.n	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022a94:	fffff800 	.word	0xfffff800
 8022a98:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022a9a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022a9c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022aa0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022aa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022aa6:	1427      	asrs	r7, r4, #16
 8022aa8:	142b      	asrs	r3, r5, #16
 8022aaa:	fb01 7303 	mla	r3, r1, r3, r7
 8022aae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022ab0:	18e7      	adds	r7, r4, r3
 8022ab2:	5ce3      	ldrb	r3, [r4, r3]
 8022ab4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022ab8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022abc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022ac0:	2a00      	cmp	r2, #0
 8022ac2:	f000 8127 	beq.w	8022d14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022ac6:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022aca:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022ace:	940d      	str	r4, [sp, #52]	; 0x34
 8022ad0:	0e24      	lsrs	r4, r4, #24
 8022ad2:	9414      	str	r4, [sp, #80]	; 0x50
 8022ad4:	b170      	cbz	r0, 8022af4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022ad6:	eb07 0e01 	add.w	lr, r7, r1
 8022ada:	5c79      	ldrb	r1, [r7, r1]
 8022adc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ae0:	9109      	str	r1, [sp, #36]	; 0x24
 8022ae2:	0e09      	lsrs	r1, r1, #24
 8022ae4:	9111      	str	r1, [sp, #68]	; 0x44
 8022ae6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022aea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022aee:	910e      	str	r1, [sp, #56]	; 0x38
 8022af0:	0e09      	lsrs	r1, r1, #24
 8022af2:	9115      	str	r1, [sp, #84]	; 0x54
 8022af4:	b292      	uxth	r2, r2
 8022af6:	b280      	uxth	r0, r0
 8022af8:	fb02 f800 	mul.w	r8, r2, r0
 8022afc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022b00:	0112      	lsls	r2, r2, #4
 8022b02:	eba2 0e08 	sub.w	lr, r2, r8
 8022b06:	b280      	uxth	r0, r0
 8022b08:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022b0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022b0e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022b10:	fa1f fe8e 	uxth.w	lr, lr
 8022b14:	1a09      	subs	r1, r1, r0
 8022b16:	b289      	uxth	r1, r1
 8022b18:	fb0e f202 	mul.w	r2, lr, r2
 8022b1c:	fb01 220c 	mla	r2, r1, ip, r2
 8022b20:	fb00 2204 	mla	r2, r0, r4, r2
 8022b24:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022b26:	fb08 2204 	mla	r2, r8, r4, r2
 8022b2a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022b2e:	2a00      	cmp	r2, #0
 8022b30:	f000 80e5 	beq.w	8022cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022b34:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022b38:	d019      	beq.n	8022b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022b3a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022b3e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022b42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b46:	fb0c fc03 	mul.w	ip, ip, r3
 8022b4a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022b4e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022b52:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022b56:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022b5a:	4453      	add	r3, sl
 8022b5c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022b60:	0a1b      	lsrs	r3, r3, #8
 8022b62:	0a3f      	lsrs	r7, r7, #8
 8022b64:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022b68:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022b6c:	433b      	orrs	r3, r7
 8022b6e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022b70:	2cff      	cmp	r4, #255	; 0xff
 8022b72:	d020      	beq.n	8022bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022b74:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b76:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022b7a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022b7c:	4367      	muls	r7, r4
 8022b7e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022b84:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022b86:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022b8a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022b8e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022b92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022b96:	44bc      	add	ip, r7
 8022b98:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022b9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022ba0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ba4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022ba8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022bac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022bb0:	ea4c 040a 	orr.w	r4, ip, sl
 8022bb4:	940d      	str	r4, [sp, #52]	; 0x34
 8022bb6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022bb8:	2cff      	cmp	r4, #255	; 0xff
 8022bba:	d020      	beq.n	8022bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022bbc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022bbe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022bc2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022bc4:	4367      	muls	r7, r4
 8022bc6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022bc8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022bcc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022bce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022bd2:	fb04 fa0a 	mul.w	sl, r4, sl
 8022bd6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022bda:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022bde:	44bc      	add	ip, r7
 8022be0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022be4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022be8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022bec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022bf0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022bf4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022bf8:	ea4c 040a 	orr.w	r4, ip, sl
 8022bfc:	9409      	str	r4, [sp, #36]	; 0x24
 8022bfe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022c00:	2cff      	cmp	r4, #255	; 0xff
 8022c02:	d020      	beq.n	8022c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022c04:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022c06:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022c0a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022c0c:	4367      	muls	r7, r4
 8022c0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022c10:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022c14:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022c16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022c1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022c1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022c22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c26:	44bc      	add	ip, r7
 8022c28:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022c2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022c30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022c38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022c40:	ea4c 040a 	orr.w	r4, ip, sl
 8022c44:	940e      	str	r4, [sp, #56]	; 0x38
 8022c46:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022c48:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022c4c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022c4e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022c52:	fb0e f707 	mul.w	r7, lr, r7
 8022c56:	fb01 770c 	mla	r7, r1, ip, r7
 8022c5a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022c5e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022c60:	fb00 770c 	mla	r7, r0, ip, r7
 8022c64:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022c68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022c6a:	fb08 770c 	mla	r7, r8, ip, r7
 8022c6e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022c72:	fb0e fe0c 	mul.w	lr, lr, ip
 8022c76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022c7a:	fb01 e303 	mla	r3, r1, r3, lr
 8022c7e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022c80:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022c84:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022c86:	fb00 330a 	mla	r3, r0, sl, r3
 8022c8a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022c8e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022c92:	f8b9 3000 	ldrh.w	r3, [r9]
 8022c96:	43d2      	mvns	r2, r2
 8022c98:	1218      	asrs	r0, r3, #8
 8022c9a:	b2d2      	uxtb	r2, r2
 8022c9c:	10d9      	asrs	r1, r3, #3
 8022c9e:	0a3f      	lsrs	r7, r7, #8
 8022ca0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ca4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022ca8:	00db      	lsls	r3, r3, #3
 8022caa:	4350      	muls	r0, r2
 8022cac:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022cb0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022cb4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022cb8:	b2db      	uxtb	r3, r3
 8022cba:	ea47 070c 	orr.w	r7, r7, ip
 8022cbe:	4351      	muls	r1, r2
 8022cc0:	4353      	muls	r3, r2
 8022cc2:	1c42      	adds	r2, r0, #1
 8022cc4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022cc8:	0c3a      	lsrs	r2, r7, #16
 8022cca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022cce:	4a18      	ldr	r2, [pc, #96]	; (8022d30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022cd0:	b2c0      	uxtb	r0, r0
 8022cd2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022cd6:	1c4a      	adds	r2, r1, #1
 8022cd8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022cdc:	0a3a      	lsrs	r2, r7, #8
 8022cde:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ce2:	00c9      	lsls	r1, r1, #3
 8022ce4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ce8:	4301      	orrs	r1, r0
 8022cea:	1c58      	adds	r0, r3, #1
 8022cec:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022cf0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022cf4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022cf8:	4308      	orrs	r0, r1
 8022cfa:	f8a9 0000 	strh.w	r0, [r9]
 8022cfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022d00:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022d02:	441a      	add	r2, r3
 8022d04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022d06:	9225      	str	r2, [sp, #148]	; 0x94
 8022d08:	f109 0902 	add.w	r9, r9, #2
 8022d0c:	441d      	add	r5, r3
 8022d0e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022d12:	e64d      	b.n	80229b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022d14:	2800      	cmp	r0, #0
 8022d16:	f43f aeed 	beq.w	8022af4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022d1a:	5c79      	ldrb	r1, [r7, r1]
 8022d1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022d20:	9109      	str	r1, [sp, #36]	; 0x24
 8022d22:	0e09      	lsrs	r1, r1, #24
 8022d24:	9111      	str	r1, [sp, #68]	; 0x44
 8022d26:	e6e5      	b.n	8022af4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022d28:	b01b      	add	sp, #108	; 0x6c
 8022d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d2e:	bf00      	nop
 8022d30:	fffff800 	.word	0xfffff800

08022d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d38:	b085      	sub	sp, #20
 8022d3a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022d3e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022d42:	9103      	str	r1, [sp, #12]
 8022d44:	fb00 7406 	mla	r4, r0, r6, r7
 8022d48:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022d4c:	2800      	cmp	r0, #0
 8022d4e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022d52:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022d56:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022d5a:	9501      	str	r5, [sp, #4]
 8022d5c:	eb03 0904 	add.w	r9, r3, r4
 8022d60:	f2c0 8150 	blt.w	8023004 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022d64:	4583      	cmp	fp, r0
 8022d66:	f340 814d 	ble.w	8023004 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022d6a:	2f00      	cmp	r7, #0
 8022d6c:	f2c0 8146 	blt.w	8022ffc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022d70:	42be      	cmp	r6, r7
 8022d72:	f340 8143 	ble.w	8022ffc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022d76:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022d7a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022d7e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022d82:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022d86:	4355      	muls	r5, r2
 8022d88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d8c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022d90:	fb0c f203 	mul.w	r2, ip, r3
 8022d94:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022d98:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022d9c:	441d      	add	r5, r3
 8022d9e:	f102 0320 	add.w	r3, r2, #32
 8022da2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022da6:	0a1b      	lsrs	r3, r3, #8
 8022da8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022dac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022db0:	431c      	orrs	r4, r3
 8022db2:	1c7b      	adds	r3, r7, #1
 8022db4:	f100 812b 	bmi.w	802300e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022db8:	429e      	cmp	r6, r3
 8022dba:	f340 8128 	ble.w	802300e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022dbe:	2900      	cmp	r1, #0
 8022dc0:	f000 8128 	beq.w	8023014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022dc4:	9a01      	ldr	r2, [sp, #4]
 8022dc6:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022dca:	8855      	ldrh	r5, [r2, #2]
 8022dcc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022dd0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022dd4:	fb08 f802 	mul.w	r8, r8, r2
 8022dd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ddc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022de0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022de4:	435d      	muls	r5, r3
 8022de6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022dea:	44d0      	add	r8, sl
 8022dec:	f105 0a20 	add.w	sl, r5, #32
 8022df0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022df4:	0a2d      	lsrs	r5, r5, #8
 8022df6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022dfa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022dfe:	432a      	orrs	r2, r5
 8022e00:	3001      	adds	r0, #1
 8022e02:	f100 810d 	bmi.w	8023020 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022e06:	4583      	cmp	fp, r0
 8022e08:	f340 810a 	ble.w	8023020 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022e0c:	f1be 0f00 	cmp.w	lr, #0
 8022e10:	f000 810b 	beq.w	802302a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022e14:	2f00      	cmp	r7, #0
 8022e16:	f2c0 8100 	blt.w	802301a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022e1a:	42be      	cmp	r6, r7
 8022e1c:	f340 80fd 	ble.w	802301a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022e20:	9801      	ldr	r0, [sp, #4]
 8022e22:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022e26:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022e2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022e2e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022e32:	fb0a fa00 	mul.w	sl, sl, r0
 8022e36:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022e3a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022e3e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022e42:	fb05 f808 	mul.w	r8, r5, r8
 8022e46:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022e4a:	4482      	add	sl, r0
 8022e4c:	f108 0020 	add.w	r0, r8, #32
 8022e50:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022e54:	0a00      	lsrs	r0, r0, #8
 8022e56:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022e5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e5e:	ea4b 0b00 	orr.w	fp, fp, r0
 8022e62:	3701      	adds	r7, #1
 8022e64:	f100 80e6 	bmi.w	8023034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022e68:	42be      	cmp	r6, r7
 8022e6a:	f340 80e3 	ble.w	8023034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022e6e:	2900      	cmp	r1, #0
 8022e70:	f000 80e3 	beq.w	802303a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022e74:	3601      	adds	r6, #1
 8022e76:	9801      	ldr	r0, [sp, #4]
 8022e78:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022e7c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022e80:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022e84:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022e88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e8c:	fb09 f906 	mul.w	r9, r9, r6
 8022e90:	fb07 f800 	mul.w	r8, r7, r0
 8022e94:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022e98:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022e9c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022ea0:	44d1      	add	r9, sl
 8022ea2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022ea6:	f108 0020 	add.w	r0, r8, #32
 8022eaa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022eae:	0a00      	lsrs	r0, r0, #8
 8022eb0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022eb4:	4330      	orrs	r0, r6
 8022eb6:	b28e      	uxth	r6, r1
 8022eb8:	fa1f f98e 	uxth.w	r9, lr
 8022ebc:	fb06 f809 	mul.w	r8, r6, r9
 8022ec0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022ec4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022ec8:	0136      	lsls	r6, r6, #4
 8022eca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022ece:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022ed2:	9601      	str	r6, [sp, #4]
 8022ed4:	ea4a 0404 	orr.w	r4, sl, r4
 8022ed8:	fa1f f689 	uxth.w	r6, r9
 8022edc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022ee0:	fb11 f90e 	smulbb	r9, r1, lr
 8022ee4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022ee8:	9602      	str	r6, [sp, #8]
 8022eea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022eee:	4626      	mov	r6, r4
 8022ef0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ef4:	f1ce 0410 	rsb	r4, lr, #16
 8022ef8:	1a64      	subs	r4, r4, r1
 8022efa:	ea4a 0202 	orr.w	r2, sl, r2
 8022efe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022f02:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022f06:	434a      	muls	r2, r1
 8022f08:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022f0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f14:	fb04 2406 	mla	r4, r4, r6, r2
 8022f18:	ea4a 0000 	orr.w	r0, sl, r0
 8022f1c:	fb09 4200 	mla	r2, r9, r0, r4
 8022f20:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022f24:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022f28:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022f2c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022f30:	9c01      	ldr	r4, [sp, #4]
 8022f32:	9e02      	ldr	r6, [sp, #8]
 8022f34:	9903      	ldr	r1, [sp, #12]
 8022f36:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022f3a:	1ba4      	subs	r4, r4, r6
 8022f3c:	9e01      	ldr	r6, [sp, #4]
 8022f3e:	8808      	ldrh	r0, [r1, #0]
 8022f40:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022f44:	eba6 0608 	sub.w	r6, r6, r8
 8022f48:	b2b6      	uxth	r6, r6
 8022f4a:	b2a4      	uxth	r4, r4
 8022f4c:	4373      	muls	r3, r6
 8022f4e:	fb0c 3304 	mla	r3, ip, r4, r3
 8022f52:	9c02      	ldr	r4, [sp, #8]
 8022f54:	fb04 3505 	mla	r5, r4, r5, r3
 8022f58:	fb08 5707 	mla	r7, r8, r7, r5
 8022f5c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022f60:	b289      	uxth	r1, r1
 8022f62:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022f66:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022f6a:	434f      	muls	r7, r1
 8022f6c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022f70:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022f74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f78:	1c7b      	adds	r3, r7, #1
 8022f7a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022f7e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022f82:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022f86:	fa1f f28e 	uxth.w	r2, lr
 8022f8a:	1203      	asrs	r3, r0, #8
 8022f8c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022f90:	b2ff      	uxtb	r7, r7
 8022f92:	1215      	asrs	r5, r2, #8
 8022f94:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022f98:	fb13 f307 	smulbb	r3, r3, r7
 8022f9c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022fa0:	fb05 3501 	mla	r5, r5, r1, r3
 8022fa4:	10c3      	asrs	r3, r0, #3
 8022fa6:	10d4      	asrs	r4, r2, #3
 8022fa8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022fac:	fb13 f307 	smulbb	r3, r3, r7
 8022fb0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022fb4:	fb04 3401 	mla	r4, r4, r1, r3
 8022fb8:	00c3      	lsls	r3, r0, #3
 8022fba:	00d2      	lsls	r2, r2, #3
 8022fbc:	b2db      	uxtb	r3, r3
 8022fbe:	fb13 f307 	smulbb	r3, r3, r7
 8022fc2:	b2d2      	uxtb	r2, r2
 8022fc4:	fb02 3101 	mla	r1, r2, r1, r3
 8022fc8:	b2ad      	uxth	r5, r5
 8022fca:	b289      	uxth	r1, r1
 8022fcc:	b2a4      	uxth	r4, r4
 8022fce:	1c6b      	adds	r3, r5, #1
 8022fd0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022fd4:	1c62      	adds	r2, r4, #1
 8022fd6:	1c4b      	adds	r3, r1, #1
 8022fd8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022fdc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022fe0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022fe4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022fe8:	0964      	lsrs	r4, r4, #5
 8022fea:	432b      	orrs	r3, r5
 8022fec:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022ff0:	9a03      	ldr	r2, [sp, #12]
 8022ff2:	4323      	orrs	r3, r4
 8022ff4:	8013      	strh	r3, [r2, #0]
 8022ff6:	b005      	add	sp, #20
 8022ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ffc:	f04f 0c00 	mov.w	ip, #0
 8023000:	4664      	mov	r4, ip
 8023002:	e6d6      	b.n	8022db2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8023004:	2300      	movs	r3, #0
 8023006:	469c      	mov	ip, r3
 8023008:	461a      	mov	r2, r3
 802300a:	461c      	mov	r4, r3
 802300c:	e6f8      	b.n	8022e00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802300e:	2300      	movs	r3, #0
 8023010:	461a      	mov	r2, r3
 8023012:	e6f5      	b.n	8022e00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023014:	460b      	mov	r3, r1
 8023016:	460a      	mov	r2, r1
 8023018:	e6f2      	b.n	8022e00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802301a:	2500      	movs	r5, #0
 802301c:	46ab      	mov	fp, r5
 802301e:	e720      	b.n	8022e62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8023020:	2700      	movs	r7, #0
 8023022:	463d      	mov	r5, r7
 8023024:	4638      	mov	r0, r7
 8023026:	46bb      	mov	fp, r7
 8023028:	e745      	b.n	8022eb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802302a:	4677      	mov	r7, lr
 802302c:	4675      	mov	r5, lr
 802302e:	4670      	mov	r0, lr
 8023030:	46f3      	mov	fp, lr
 8023032:	e740      	b.n	8022eb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023034:	2700      	movs	r7, #0
 8023036:	4638      	mov	r0, r7
 8023038:	e73d      	b.n	8022eb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802303a:	460f      	mov	r7, r1
 802303c:	4608      	mov	r0, r1
 802303e:	e73a      	b.n	8022eb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08023040 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023044:	b097      	sub	sp, #92	; 0x5c
 8023046:	9214      	str	r2, [sp, #80]	; 0x50
 8023048:	9308      	str	r3, [sp, #32]
 802304a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802304c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023050:	9312      	str	r3, [sp, #72]	; 0x48
 8023052:	9111      	str	r1, [sp, #68]	; 0x44
 8023054:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023058:	9015      	str	r0, [sp, #84]	; 0x54
 802305a:	6850      	ldr	r0, [r2, #4]
 802305c:	6812      	ldr	r2, [r2, #0]
 802305e:	fb00 1303 	mla	r3, r0, r3, r1
 8023062:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023066:	9309      	str	r3, [sp, #36]	; 0x24
 8023068:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802306a:	681b      	ldr	r3, [r3, #0]
 802306c:	930b      	str	r3, [sp, #44]	; 0x2c
 802306e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023070:	685b      	ldr	r3, [r3, #4]
 8023072:	930c      	str	r3, [sp, #48]	; 0x30
 8023074:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8023078:	930a      	str	r3, [sp, #40]	; 0x28
 802307a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802307c:	2b00      	cmp	r3, #0
 802307e:	dc03      	bgt.n	8023088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023080:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8023082:	2b00      	cmp	r3, #0
 8023084:	f340 83cb 	ble.w	802381e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802308a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802308e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023092:	1e48      	subs	r0, r1, #1
 8023094:	1e55      	subs	r5, r2, #1
 8023096:	9b08      	ldr	r3, [sp, #32]
 8023098:	2b00      	cmp	r3, #0
 802309a:	f340 81a3 	ble.w	80233e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802309e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80230a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80230a2:	1436      	asrs	r6, r6, #16
 80230a4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80230a8:	d406      	bmi.n	80230b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80230aa:	4286      	cmp	r6, r0
 80230ac:	da04      	bge.n	80230b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80230ae:	2b00      	cmp	r3, #0
 80230b0:	db02      	blt.n	80230b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80230b2:	42ab      	cmp	r3, r5
 80230b4:	f2c0 8197 	blt.w	80233e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80230b8:	3601      	adds	r6, #1
 80230ba:	f100 8184 	bmi.w	80233c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80230be:	42b1      	cmp	r1, r6
 80230c0:	f2c0 8181 	blt.w	80233c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80230c4:	3301      	adds	r3, #1
 80230c6:	f100 817e 	bmi.w	80233c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80230ca:	429a      	cmp	r2, r3
 80230cc:	f2c0 817b 	blt.w	80233c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80230d0:	9b08      	ldr	r3, [sp, #32]
 80230d2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80230d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80230d6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80230da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80230dc:	2b00      	cmp	r3, #0
 80230de:	f340 81a4 	ble.w	802342a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80230e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80230e4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80230e6:	1418      	asrs	r0, r3, #16
 80230e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80230ea:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80230ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80230f0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80230f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80230f6:	142d      	asrs	r5, r5, #16
 80230f8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80230fc:	f100 81f8 	bmi.w	80234f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023100:	f102 3eff 	add.w	lr, r2, #4294967295
 8023104:	4575      	cmp	r5, lr
 8023106:	f280 81f3 	bge.w	80234f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802310a:	2800      	cmp	r0, #0
 802310c:	f2c0 81f0 	blt.w	80234f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023110:	f103 3eff 	add.w	lr, r3, #4294967295
 8023114:	4570      	cmp	r0, lr
 8023116:	f280 81eb 	bge.w	80234f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802311a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802311c:	b212      	sxth	r2, r2
 802311e:	fb00 5002 	mla	r0, r0, r2, r5
 8023122:	fa1f fe81 	uxth.w	lr, r1
 8023126:	eb03 0a00 	add.w	sl, r3, r0
 802312a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802312e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023132:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023136:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802313a:	b29b      	uxth	r3, r3
 802313c:	f1bc 0f00 	cmp.w	ip, #0
 8023140:	f000 81b9 	beq.w	80234b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023144:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023148:	940d      	str	r4, [sp, #52]	; 0x34
 802314a:	eb0a 0b02 	add.w	fp, sl, r2
 802314e:	fa1f fa8c 	uxth.w	sl, ip
 8023152:	fb0a fe0e 	mul.w	lr, sl, lr
 8023156:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802315a:	fa1f fa8a 	uxth.w	sl, sl
 802315e:	eba5 050e 	sub.w	r5, r5, lr
 8023162:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023166:	940e      	str	r4, [sp, #56]	; 0x38
 8023168:	eba3 030a 	sub.w	r3, r3, sl
 802316c:	b2ad      	uxth	r5, r5
 802316e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023170:	b29b      	uxth	r3, r3
 8023172:	fb08 f505 	mul.w	r5, r8, r5
 8023176:	fb09 5303 	mla	r3, r9, r3, r5
 802317a:	fb0a 3304 	mla	r3, sl, r4, r3
 802317e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023180:	fb0e 3304 	mla	r3, lr, r4, r3
 8023184:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023188:	2b00      	cmp	r3, #0
 802318a:	f000 810f 	beq.w	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802318e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023190:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023194:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023198:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802319c:	f000 8190 	beq.w	80234c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80231a0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80231a4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80231a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231ac:	fb09 f000 	mul.w	r0, r9, r0
 80231b0:	fb0a fe0e 	mul.w	lr, sl, lr
 80231b4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80231b8:	f100 0b20 	add.w	fp, r0, #32
 80231bc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80231c0:	44ce      	add	lr, r9
 80231c2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80231c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80231ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80231ce:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80231d2:	ea4e 0909 	orr.w	r9, lr, r9
 80231d6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80231da:	8868      	ldrh	r0, [r5, #2]
 80231dc:	d019      	beq.n	8023212 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80231de:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80231e2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80231e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231ea:	fb08 f800 	mul.w	r8, r8, r0
 80231ee:	fb0a fe0e 	mul.w	lr, sl, lr
 80231f2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80231f6:	f108 0b20 	add.w	fp, r8, #32
 80231fa:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80231fe:	4486      	add	lr, r0
 8023200:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023204:	0a00      	lsrs	r0, r0, #8
 8023206:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802320a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802320e:	ea4e 0000 	orr.w	r0, lr, r0
 8023212:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023216:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802321a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802321e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023222:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023226:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802322a:	ea4e 0909 	orr.w	r9, lr, r9
 802322e:	ea4a 0000 	orr.w	r0, sl, r0
 8023232:	f1bc 0f00 	cmp.w	ip, #0
 8023236:	f000 8145 	beq.w	80234c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802323a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802323e:	3a01      	subs	r2, #1
 8023240:	0052      	lsls	r2, r2, #1
 8023242:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023244:	3202      	adds	r2, #2
 8023246:	2cff      	cmp	r4, #255	; 0xff
 8023248:	eb05 0e02 	add.w	lr, r5, r2
 802324c:	5aaa      	ldrh	r2, [r5, r2]
 802324e:	d018      	beq.n	8023282 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023250:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023254:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023258:	fb04 fa02 	mul.w	sl, r4, r2
 802325c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023260:	fb08 f805 	mul.w	r8, r8, r5
 8023264:	f10a 0520 	add.w	r5, sl, #32
 8023268:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802326c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023270:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023274:	4442      	add	r2, r8
 8023276:	0a2d      	lsrs	r5, r5, #8
 8023278:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802327c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023280:	432a      	orrs	r2, r5
 8023282:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023284:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023288:	2cff      	cmp	r4, #255	; 0xff
 802328a:	d01a      	beq.n	80232c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802328c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023290:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023294:	fb04 fa05 	mul.w	sl, r4, r5
 8023298:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802329c:	fb08 f80e 	mul.w	r8, r8, lr
 80232a0:	f10a 0e20 	add.w	lr, sl, #32
 80232a4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80232a8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80232ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80232b0:	4445      	add	r5, r8
 80232b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80232b6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80232ba:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80232be:	ea45 050e 	orr.w	r5, r5, lr
 80232c2:	fb1c fe01 	smulbb	lr, ip, r1
 80232c6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80232ca:	f1cc 0810 	rsb	r8, ip, #16
 80232ce:	eba8 0801 	sub.w	r8, r8, r1
 80232d2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80232d6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80232da:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80232de:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80232e2:	4341      	muls	r1, r0
 80232e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80232e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80232ec:	ea4a 0202 	orr.w	r2, sl, r2
 80232f0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80232f4:	fb09 1108 	mla	r1, r9, r8, r1
 80232f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80232fc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023300:	fb0c 1102 	mla	r1, ip, r2, r1
 8023304:	ea4b 0505 	orr.w	r5, fp, r5
 8023308:	fb0e 1e05 	mla	lr, lr, r5, r1
 802330c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023310:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023314:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023318:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802331c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023320:	fa1f f28e 	uxth.w	r2, lr
 8023324:	2bff      	cmp	r3, #255	; 0xff
 8023326:	d103      	bne.n	8023330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8023328:	9912      	ldr	r1, [sp, #72]	; 0x48
 802332a:	29ff      	cmp	r1, #255	; 0xff
 802332c:	f000 80de 	beq.w	80234ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8023330:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023332:	8838      	ldrh	r0, [r7, #0]
 8023334:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023336:	434b      	muls	r3, r1
 8023338:	f103 0c01 	add.w	ip, r3, #1
 802333c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023340:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023344:	fa5f fc83 	uxtb.w	ip, r3
 8023348:	1203      	asrs	r3, r0, #8
 802334a:	1215      	asrs	r5, r2, #8
 802334c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023350:	fb13 f30c 	smulbb	r3, r3, ip
 8023354:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023358:	fb05 3501 	mla	r5, r5, r1, r3
 802335c:	10c3      	asrs	r3, r0, #3
 802335e:	10d1      	asrs	r1, r2, #3
 8023360:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023364:	fb13 f30c 	smulbb	r3, r3, ip
 8023368:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802336c:	fb01 3104 	mla	r1, r1, r4, r3
 8023370:	00c3      	lsls	r3, r0, #3
 8023372:	00d2      	lsls	r2, r2, #3
 8023374:	b2db      	uxtb	r3, r3
 8023376:	b2d2      	uxtb	r2, r2
 8023378:	fb13 f30c 	smulbb	r3, r3, ip
 802337c:	b2ad      	uxth	r5, r5
 802337e:	fb02 3304 	mla	r3, r2, r4, r3
 8023382:	b29a      	uxth	r2, r3
 8023384:	1c6b      	adds	r3, r5, #1
 8023386:	b289      	uxth	r1, r1
 8023388:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802338c:	1c53      	adds	r3, r2, #1
 802338e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023392:	1c4a      	adds	r2, r1, #1
 8023394:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023398:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802339c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80233a0:	0949      	lsrs	r1, r1, #5
 80233a2:	432b      	orrs	r3, r5
 80233a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80233a8:	430b      	orrs	r3, r1
 80233aa:	803b      	strh	r3, [r7, #0]
 80233ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80233ae:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80233b0:	4413      	add	r3, r2
 80233b2:	9321      	str	r3, [sp, #132]	; 0x84
 80233b4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80233b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233b8:	441a      	add	r2, r3
 80233ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80233bc:	9222      	str	r2, [sp, #136]	; 0x88
 80233be:	3b01      	subs	r3, #1
 80233c0:	3702      	adds	r7, #2
 80233c2:	9313      	str	r3, [sp, #76]	; 0x4c
 80233c4:	e689      	b.n	80230da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80233c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80233c8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80233ca:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80233cc:	4433      	add	r3, r6
 80233ce:	9321      	str	r3, [sp, #132]	; 0x84
 80233d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233d2:	441c      	add	r4, r3
 80233d4:	9b08      	ldr	r3, [sp, #32]
 80233d6:	9422      	str	r4, [sp, #136]	; 0x88
 80233d8:	3b01      	subs	r3, #1
 80233da:	9308      	str	r3, [sp, #32]
 80233dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233de:	3302      	adds	r3, #2
 80233e0:	9309      	str	r3, [sp, #36]	; 0x24
 80233e2:	e658      	b.n	8023096 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80233e4:	d028      	beq.n	8023438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80233e6:	9b08      	ldr	r3, [sp, #32]
 80233e8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80233ea:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80233ec:	3b01      	subs	r3, #1
 80233ee:	fb00 5003 	mla	r0, r0, r3, r5
 80233f2:	1400      	asrs	r0, r0, #16
 80233f4:	f53f ae6c 	bmi.w	80230d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80233f8:	3901      	subs	r1, #1
 80233fa:	4288      	cmp	r0, r1
 80233fc:	f6bf ae68 	bge.w	80230d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023400:	9924      	ldr	r1, [sp, #144]	; 0x90
 8023402:	9822      	ldr	r0, [sp, #136]	; 0x88
 8023404:	fb01 0303 	mla	r3, r1, r3, r0
 8023408:	141b      	asrs	r3, r3, #16
 802340a:	f53f ae61 	bmi.w	80230d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802340e:	3a01      	subs	r2, #1
 8023410:	4293      	cmp	r3, r2
 8023412:	f6bf ae5d 	bge.w	80230d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023416:	9b08      	ldr	r3, [sp, #32]
 8023418:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802341c:	9313      	str	r3, [sp, #76]	; 0x4c
 802341e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023422:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023424:	2b00      	cmp	r3, #0
 8023426:	f300 8082 	bgt.w	802352e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802342a:	9b08      	ldr	r3, [sp, #32]
 802342c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023430:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023432:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023436:	9309      	str	r3, [sp, #36]	; 0x24
 8023438:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802343a:	2b00      	cmp	r3, #0
 802343c:	f340 81ef 	ble.w	802381e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023440:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023444:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023448:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802344c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802344e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023452:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023456:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802345a:	eef0 6a62 	vmov.f32	s13, s5
 802345e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023466:	ee77 2a62 	vsub.f32	s5, s14, s5
 802346a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802346e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023472:	eef0 6a43 	vmov.f32	s13, s6
 8023476:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802347a:	ee12 2a90 	vmov	r2, s5
 802347e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023482:	fb92 f3f3 	sdiv	r3, r2, r3
 8023486:	ee13 2a10 	vmov	r2, s6
 802348a:	9323      	str	r3, [sp, #140]	; 0x8c
 802348c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802348e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023492:	9324      	str	r3, [sp, #144]	; 0x90
 8023494:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023496:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023498:	3b01      	subs	r3, #1
 802349a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802349e:	9311      	str	r3, [sp, #68]	; 0x44
 80234a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80234a2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80234a6:	bf08      	it	eq
 80234a8:	4613      	moveq	r3, r2
 80234aa:	9308      	str	r3, [sp, #32]
 80234ac:	eeb0 3a67 	vmov.f32	s6, s15
 80234b0:	eef0 2a47 	vmov.f32	s5, s14
 80234b4:	e5e1      	b.n	802307a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80234b6:	fb08 f505 	mul.w	r5, r8, r5
 80234ba:	fb09 5303 	mla	r3, r9, r3, r5
 80234be:	e661      	b.n	8023184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80234c0:	4681      	mov	r9, r0
 80234c2:	e688      	b.n	80231d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80234c4:	f1c1 0210 	rsb	r2, r1, #16
 80234c8:	4341      	muls	r1, r0
 80234ca:	fb09 1902 	mla	r9, r9, r2, r1
 80234ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80234d2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80234d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80234da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234de:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80234e2:	ea42 0909 	orr.w	r9, r2, r9
 80234e6:	fa1f f289 	uxth.w	r2, r9
 80234ea:	e71b      	b.n	8023324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80234ec:	803a      	strh	r2, [r7, #0]
 80234ee:	e75d      	b.n	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80234f0:	f115 0e01 	adds.w	lr, r5, #1
 80234f4:	f53f af5a 	bmi.w	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80234f8:	4572      	cmp	r2, lr
 80234fa:	f6ff af57 	blt.w	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80234fe:	f110 0e01 	adds.w	lr, r0, #1
 8023502:	f53f af53 	bmi.w	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023506:	4573      	cmp	r3, lr
 8023508:	f6ff af50 	blt.w	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802350c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802350e:	9502      	str	r5, [sp, #8]
 8023510:	b21b      	sxth	r3, r3
 8023512:	b212      	sxth	r2, r2
 8023514:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023518:	9301      	str	r3, [sp, #4]
 802351a:	9200      	str	r2, [sp, #0]
 802351c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023520:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023524:	4639      	mov	r1, r7
 8023526:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023528:	f7ff fc04 	bl	8022d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 802352c:	e73e      	b.n	80233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802352e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023530:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023534:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023536:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802353a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802353c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023540:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023542:	141f      	asrs	r7, r3, #16
 8023544:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023546:	141b      	asrs	r3, r3, #16
 8023548:	fb01 3707 	mla	r7, r1, r7, r3
 802354c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802354e:	fa1f fc82 	uxth.w	ip, r2
 8023552:	eb03 0a07 	add.w	sl, r3, r7
 8023556:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802355a:	f813 9007 	ldrb.w	r9, [r3, r7]
 802355e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023562:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023566:	b29b      	uxth	r3, r3
 8023568:	2d00      	cmp	r5, #0
 802356a:	f000 813d 	beq.w	80237e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802356e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023572:	940f      	str	r4, [sp, #60]	; 0x3c
 8023574:	eb0a 0b01 	add.w	fp, sl, r1
 8023578:	fa1f fa85 	uxth.w	sl, r5
 802357c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023580:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023584:	fa1f fa8a 	uxth.w	sl, sl
 8023588:	eba0 000c 	sub.w	r0, r0, ip
 802358c:	eba3 030a 	sub.w	r3, r3, sl
 8023590:	b280      	uxth	r0, r0
 8023592:	fb08 f000 	mul.w	r0, r8, r0
 8023596:	b29b      	uxth	r3, r3
 8023598:	fb09 0303 	mla	r3, r9, r3, r0
 802359c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802359e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80235a2:	9410      	str	r4, [sp, #64]	; 0x40
 80235a4:	fb0a 3300 	mla	r3, sl, r0, r3
 80235a8:	fb0c 3304 	mla	r3, ip, r4, r3
 80235ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80235b0:	2b00      	cmp	r3, #0
 80235b2:	f000 810b 	beq.w	80237cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80235b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80235b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80235ba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80235be:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80235c2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80235c6:	f000 8114 	beq.w	80237f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80235ca:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80235ce:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80235d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80235d6:	fb09 f707 	mul.w	r7, r9, r7
 80235da:	fb0a fc0c 	mul.w	ip, sl, ip
 80235de:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80235e2:	f107 0b20 	add.w	fp, r7, #32
 80235e6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80235ea:	44cc      	add	ip, r9
 80235ec:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80235f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80235f8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80235fc:	ea4c 0909 	orr.w	r9, ip, r9
 8023600:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023604:	8847      	ldrh	r7, [r0, #2]
 8023606:	d019      	beq.n	802363c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023608:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802360c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023610:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023614:	fb08 f807 	mul.w	r8, r8, r7
 8023618:	fb0a fc0c 	mul.w	ip, sl, ip
 802361c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023620:	f108 0b20 	add.w	fp, r8, #32
 8023624:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023628:	44bc      	add	ip, r7
 802362a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802362e:	0a3f      	lsrs	r7, r7, #8
 8023630:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023634:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023638:	ea4c 0707 	orr.w	r7, ip, r7
 802363c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023640:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023644:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023648:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802364c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023650:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023654:	ea4c 0909 	orr.w	r9, ip, r9
 8023658:	ea4a 0707 	orr.w	r7, sl, r7
 802365c:	2d00      	cmp	r5, #0
 802365e:	f000 80ca 	beq.w	80237f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023662:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023666:	3901      	subs	r1, #1
 8023668:	0049      	lsls	r1, r1, #1
 802366a:	3102      	adds	r1, #2
 802366c:	eb00 0c01 	add.w	ip, r0, r1
 8023670:	5a41      	ldrh	r1, [r0, r1]
 8023672:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023674:	28ff      	cmp	r0, #255	; 0xff
 8023676:	d019      	beq.n	80236ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023678:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802367a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802367e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023682:	fb04 fa01 	mul.w	sl, r4, r1
 8023686:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802368a:	fb08 f800 	mul.w	r8, r8, r0
 802368e:	f10a 0020 	add.w	r0, sl, #32
 8023692:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023696:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802369a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802369e:	4441      	add	r1, r8
 80236a0:	0a00      	lsrs	r0, r0, #8
 80236a2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80236a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236aa:	4301      	orrs	r1, r0
 80236ac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80236ae:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80236b2:	2cff      	cmp	r4, #255	; 0xff
 80236b4:	d01a      	beq.n	80236ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80236b6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80236ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236be:	fb04 fa00 	mul.w	sl, r4, r0
 80236c2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80236c6:	fb08 f80c 	mul.w	r8, r8, ip
 80236ca:	f10a 0c20 	add.w	ip, sl, #32
 80236ce:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80236d2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80236d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80236da:	4440      	add	r0, r8
 80236dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236e0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80236e4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80236e8:	ea40 000c 	orr.w	r0, r0, ip
 80236ec:	fb15 fc02 	smulbb	ip, r5, r2
 80236f0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80236f4:	f1c5 0810 	rsb	r8, r5, #16
 80236f8:	eba8 0802 	sub.w	r8, r8, r2
 80236fc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023700:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023704:	437a      	muls	r2, r7
 8023706:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802370a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802370e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023712:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023716:	fb09 2208 	mla	r2, r9, r8, r2
 802371a:	ea4a 0101 	orr.w	r1, sl, r1
 802371e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023722:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023726:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802372a:	fb05 2201 	mla	r2, r5, r1, r2
 802372e:	ea4b 0000 	orr.w	r0, fp, r0
 8023732:	fb0c 2200 	mla	r2, ip, r0, r2
 8023736:	0d57      	lsrs	r7, r2, #21
 8023738:	0952      	lsrs	r2, r2, #5
 802373a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802373e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023742:	433a      	orrs	r2, r7
 8023744:	2bff      	cmp	r3, #255	; 0xff
 8023746:	b292      	uxth	r2, r2
 8023748:	d102      	bne.n	8023750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802374a:	9912      	ldr	r1, [sp, #72]	; 0x48
 802374c:	29ff      	cmp	r1, #255	; 0xff
 802374e:	d063      	beq.n	8023818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023750:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023752:	f8be 1000 	ldrh.w	r1, [lr]
 8023756:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023758:	4343      	muls	r3, r0
 802375a:	1c58      	adds	r0, r3, #1
 802375c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023760:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023764:	1208      	asrs	r0, r1, #8
 8023766:	b2db      	uxtb	r3, r3
 8023768:	1215      	asrs	r5, r2, #8
 802376a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802376e:	fb10 f003 	smulbb	r0, r0, r3
 8023772:	10cf      	asrs	r7, r1, #3
 8023774:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023778:	00c9      	lsls	r1, r1, #3
 802377a:	fb05 0504 	mla	r5, r5, r4, r0
 802377e:	b2c9      	uxtb	r1, r1
 8023780:	10d0      	asrs	r0, r2, #3
 8023782:	00d2      	lsls	r2, r2, #3
 8023784:	fb11 f103 	smulbb	r1, r1, r3
 8023788:	b2d2      	uxtb	r2, r2
 802378a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802378e:	fb02 1204 	mla	r2, r2, r4, r1
 8023792:	fb17 f703 	smulbb	r7, r7, r3
 8023796:	b2ad      	uxth	r5, r5
 8023798:	b292      	uxth	r2, r2
 802379a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802379e:	fb00 7004 	mla	r0, r0, r4, r7
 80237a2:	1c6b      	adds	r3, r5, #1
 80237a4:	1c57      	adds	r7, r2, #1
 80237a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80237aa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80237ae:	b280      	uxth	r0, r0
 80237b0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80237b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80237b8:	433d      	orrs	r5, r7
 80237ba:	1c47      	adds	r7, r0, #1
 80237bc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80237c0:	097f      	lsrs	r7, r7, #5
 80237c2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80237c6:	433d      	orrs	r5, r7
 80237c8:	f8ae 5000 	strh.w	r5, [lr]
 80237cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80237ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80237d0:	4413      	add	r3, r2
 80237d2:	9321      	str	r3, [sp, #132]	; 0x84
 80237d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80237d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80237d8:	441a      	add	r2, r3
 80237da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80237dc:	9222      	str	r2, [sp, #136]	; 0x88
 80237de:	3b01      	subs	r3, #1
 80237e0:	f10e 0e02 	add.w	lr, lr, #2
 80237e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80237e6:	e61c      	b.n	8023422 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80237e8:	fb08 f000 	mul.w	r0, r8, r0
 80237ec:	fb09 0303 	mla	r3, r9, r3, r0
 80237f0:	e6dc      	b.n	80235ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80237f2:	46b9      	mov	r9, r7
 80237f4:	e704      	b.n	8023600 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80237f6:	f1c2 0110 	rsb	r1, r2, #16
 80237fa:	437a      	muls	r2, r7
 80237fc:	fb09 2901 	mla	r9, r9, r1, r2
 8023800:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023804:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023808:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802380c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023810:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023814:	4302      	orrs	r2, r0
 8023816:	e795      	b.n	8023744 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023818:	f8ae 2000 	strh.w	r2, [lr]
 802381c:	e7d6      	b.n	80237cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802381e:	b017      	add	sp, #92	; 0x5c
 8023820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023828:	b085      	sub	sp, #20
 802382a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802382e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023832:	9103      	str	r1, [sp, #12]
 8023834:	fb00 7406 	mla	r4, r0, r6, r7
 8023838:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 802383c:	2800      	cmp	r0, #0
 802383e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8023842:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8023846:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802384a:	9501      	str	r5, [sp, #4]
 802384c:	eb02 0904 	add.w	r9, r2, r4
 8023850:	f2c0 8141 	blt.w	8023ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023854:	4583      	cmp	fp, r0
 8023856:	f340 813e 	ble.w	8023ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802385a:	2f00      	cmp	r7, #0
 802385c:	f2c0 8137 	blt.w	8023ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023860:	42be      	cmp	r6, r7
 8023862:	f340 8134 	ble.w	8023ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023866:	f812 c004 	ldrb.w	ip, [r2, r4]
 802386a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 802386e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023872:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8023876:	4355      	muls	r5, r2
 8023878:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802387c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023880:	fb0c f203 	mul.w	r2, ip, r3
 8023884:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023888:	f605 0501 	addw	r5, r5, #2049	; 0x801
 802388c:	441d      	add	r5, r3
 802388e:	f102 0320 	add.w	r3, r2, #32
 8023892:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023896:	0a1b      	lsrs	r3, r3, #8
 8023898:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 802389c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238a0:	431c      	orrs	r4, r3
 80238a2:	1c7b      	adds	r3, r7, #1
 80238a4:	f100 811c 	bmi.w	8023ae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80238a8:	429e      	cmp	r6, r3
 80238aa:	f340 8119 	ble.w	8023ae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80238ae:	2900      	cmp	r1, #0
 80238b0:	f000 8119 	beq.w	8023ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80238b4:	9a01      	ldr	r2, [sp, #4]
 80238b6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80238ba:	8855      	ldrh	r5, [r2, #2]
 80238bc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80238c0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80238c4:	fb08 f802 	mul.w	r8, r8, r2
 80238c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80238cc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80238d0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80238d4:	435d      	muls	r5, r3
 80238d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80238da:	44d0      	add	r8, sl
 80238dc:	f105 0a20 	add.w	sl, r5, #32
 80238e0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80238e4:	0a2d      	lsrs	r5, r5, #8
 80238e6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80238ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80238ee:	432a      	orrs	r2, r5
 80238f0:	3001      	adds	r0, #1
 80238f2:	f100 80fe 	bmi.w	8023af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80238f6:	4583      	cmp	fp, r0
 80238f8:	f340 80fb 	ble.w	8023af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80238fc:	f1be 0f00 	cmp.w	lr, #0
 8023900:	f000 80fc 	beq.w	8023afc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023904:	2f00      	cmp	r7, #0
 8023906:	f2c0 80f1 	blt.w	8023aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802390a:	42be      	cmp	r6, r7
 802390c:	f340 80ee 	ble.w	8023aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023910:	9801      	ldr	r0, [sp, #4]
 8023912:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023916:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802391a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802391e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023922:	fb0a fa00 	mul.w	sl, sl, r0
 8023926:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802392a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802392e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8023932:	fb05 f808 	mul.w	r8, r5, r8
 8023936:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802393a:	4482      	add	sl, r0
 802393c:	f108 0020 	add.w	r0, r8, #32
 8023940:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023944:	0a00      	lsrs	r0, r0, #8
 8023946:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802394a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802394e:	ea4b 0b00 	orr.w	fp, fp, r0
 8023952:	3701      	adds	r7, #1
 8023954:	f100 80d7 	bmi.w	8023b06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023958:	42be      	cmp	r6, r7
 802395a:	f340 80d4 	ble.w	8023b06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802395e:	2900      	cmp	r1, #0
 8023960:	f000 80d4 	beq.w	8023b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023964:	3601      	adds	r6, #1
 8023966:	9801      	ldr	r0, [sp, #4]
 8023968:	f819 7006 	ldrb.w	r7, [r9, r6]
 802396c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023970:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023974:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023978:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802397c:	fb09 f906 	mul.w	r9, r9, r6
 8023980:	fb07 f800 	mul.w	r8, r7, r0
 8023984:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023988:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 802398c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023990:	44d1      	add	r9, sl
 8023992:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023996:	f108 0020 	add.w	r0, r8, #32
 802399a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802399e:	0a00      	lsrs	r0, r0, #8
 80239a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80239a4:	4330      	orrs	r0, r6
 80239a6:	b28e      	uxth	r6, r1
 80239a8:	fa1f f98e 	uxth.w	r9, lr
 80239ac:	fb06 f809 	mul.w	r8, r6, r9
 80239b0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80239b4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80239b8:	0136      	lsls	r6, r6, #4
 80239ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80239be:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80239c2:	9601      	str	r6, [sp, #4]
 80239c4:	ea4a 0404 	orr.w	r4, sl, r4
 80239c8:	fa1f f689 	uxth.w	r6, r9
 80239cc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80239d0:	fb11 f90e 	smulbb	r9, r1, lr
 80239d4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80239d8:	9602      	str	r6, [sp, #8]
 80239da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80239de:	4626      	mov	r6, r4
 80239e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80239e4:	f1ce 0410 	rsb	r4, lr, #16
 80239e8:	1a64      	subs	r4, r4, r1
 80239ea:	ea4a 0202 	orr.w	r2, sl, r2
 80239ee:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80239f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80239f6:	434a      	muls	r2, r1
 80239f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80239fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a00:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023a04:	fb04 2406 	mla	r4, r4, r6, r2
 8023a08:	ea4a 0000 	orr.w	r0, sl, r0
 8023a0c:	fb09 4200 	mla	r2, r9, r0, r4
 8023a10:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023a14:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023a18:	9801      	ldr	r0, [sp, #4]
 8023a1a:	9903      	ldr	r1, [sp, #12]
 8023a1c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023a20:	ea44 0b0b 	orr.w	fp, r4, fp
 8023a24:	9c02      	ldr	r4, [sp, #8]
 8023a26:	8809      	ldrh	r1, [r1, #0]
 8023a28:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023a2c:	1b00      	subs	r0, r0, r4
 8023a2e:	9c01      	ldr	r4, [sp, #4]
 8023a30:	eba4 0608 	sub.w	r6, r4, r8
 8023a34:	b2b6      	uxth	r6, r6
 8023a36:	b280      	uxth	r0, r0
 8023a38:	4373      	muls	r3, r6
 8023a3a:	fb0c 3300 	mla	r3, ip, r0, r3
 8023a3e:	9802      	ldr	r0, [sp, #8]
 8023a40:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023a44:	fb00 3505 	mla	r5, r0, r5, r3
 8023a48:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023a4c:	fb08 5707 	mla	r7, r8, r7, r5
 8023a50:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023a54:	120b      	asrs	r3, r1, #8
 8023a56:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023a5a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023a5e:	b2ff      	uxtb	r7, r7
 8023a60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a64:	10c8      	asrs	r0, r1, #3
 8023a66:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023a6a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023a6e:	00c9      	lsls	r1, r1, #3
 8023a70:	437b      	muls	r3, r7
 8023a72:	ea42 0e0e 	orr.w	lr, r2, lr
 8023a76:	b2c9      	uxtb	r1, r1
 8023a78:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023a7c:	fa1f f28e 	uxth.w	r2, lr
 8023a80:	4378      	muls	r0, r7
 8023a82:	434f      	muls	r7, r1
 8023a84:	1c59      	adds	r1, r3, #1
 8023a86:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023a8a:	1213      	asrs	r3, r2, #8
 8023a8c:	f023 0307 	bic.w	r3, r3, #7
 8023a90:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023a94:	1c41      	adds	r1, r0, #1
 8023a96:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023a9a:	10d1      	asrs	r1, r2, #3
 8023a9c:	f021 0103 	bic.w	r1, r1, #3
 8023aa0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023aa4:	021b      	lsls	r3, r3, #8
 8023aa6:	00c9      	lsls	r1, r1, #3
 8023aa8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023aac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023ab0:	430b      	orrs	r3, r1
 8023ab2:	1c79      	adds	r1, r7, #1
 8023ab4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023ab8:	00d2      	lsls	r2, r2, #3
 8023aba:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023abe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023ac2:	431a      	orrs	r2, r3
 8023ac4:	9b03      	ldr	r3, [sp, #12]
 8023ac6:	801a      	strh	r2, [r3, #0]
 8023ac8:	b005      	add	sp, #20
 8023aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ace:	f04f 0c00 	mov.w	ip, #0
 8023ad2:	4664      	mov	r4, ip
 8023ad4:	e6e5      	b.n	80238a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8023ad6:	2300      	movs	r3, #0
 8023ad8:	469c      	mov	ip, r3
 8023ada:	461a      	mov	r2, r3
 8023adc:	461c      	mov	r4, r3
 8023ade:	e707      	b.n	80238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023ae0:	2300      	movs	r3, #0
 8023ae2:	461a      	mov	r2, r3
 8023ae4:	e704      	b.n	80238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023ae6:	460b      	mov	r3, r1
 8023ae8:	460a      	mov	r2, r1
 8023aea:	e701      	b.n	80238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023aec:	2500      	movs	r5, #0
 8023aee:	46ab      	mov	fp, r5
 8023af0:	e72f      	b.n	8023952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8023af2:	2700      	movs	r7, #0
 8023af4:	463d      	mov	r5, r7
 8023af6:	4638      	mov	r0, r7
 8023af8:	46bb      	mov	fp, r7
 8023afa:	e754      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023afc:	4677      	mov	r7, lr
 8023afe:	4675      	mov	r5, lr
 8023b00:	4670      	mov	r0, lr
 8023b02:	46f3      	mov	fp, lr
 8023b04:	e74f      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023b06:	2700      	movs	r7, #0
 8023b08:	4638      	mov	r0, r7
 8023b0a:	e74c      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023b0c:	460f      	mov	r7, r1
 8023b0e:	4608      	mov	r0, r1
 8023b10:	e749      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b18:	b093      	sub	sp, #76	; 0x4c
 8023b1a:	9210      	str	r2, [sp, #64]	; 0x40
 8023b1c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023b1e:	910e      	str	r1, [sp, #56]	; 0x38
 8023b20:	9306      	str	r3, [sp, #24]
 8023b22:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023b26:	9011      	str	r0, [sp, #68]	; 0x44
 8023b28:	6850      	ldr	r0, [r2, #4]
 8023b2a:	6812      	ldr	r2, [r2, #0]
 8023b2c:	fb00 1303 	mla	r3, r0, r3, r1
 8023b30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b34:	9307      	str	r3, [sp, #28]
 8023b36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b38:	681b      	ldr	r3, [r3, #0]
 8023b3a:	9308      	str	r3, [sp, #32]
 8023b3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b3e:	685b      	ldr	r3, [r3, #4]
 8023b40:	9309      	str	r3, [sp, #36]	; 0x24
 8023b42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023b44:	2b00      	cmp	r3, #0
 8023b46:	dc03      	bgt.n	8023b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023b48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023b4a:	2b00      	cmp	r3, #0
 8023b4c:	f340 83b4 	ble.w	80242b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023b50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b5a:	1e48      	subs	r0, r1, #1
 8023b5c:	1e55      	subs	r5, r2, #1
 8023b5e:	9b06      	ldr	r3, [sp, #24]
 8023b60:	2b00      	cmp	r3, #0
 8023b62:	f340 8163 	ble.w	8023e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023b66:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023b68:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023b6a:	1436      	asrs	r6, r6, #16
 8023b6c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023b70:	d406      	bmi.n	8023b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023b72:	4286      	cmp	r6, r0
 8023b74:	da04      	bge.n	8023b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023b76:	2b00      	cmp	r3, #0
 8023b78:	db02      	blt.n	8023b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023b7a:	42ab      	cmp	r3, r5
 8023b7c:	f2c0 8157 	blt.w	8023e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023b80:	3601      	adds	r6, #1
 8023b82:	f100 8144 	bmi.w	8023e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023b86:	42b1      	cmp	r1, r6
 8023b88:	f2c0 8141 	blt.w	8023e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023b8c:	3301      	adds	r3, #1
 8023b8e:	f100 813e 	bmi.w	8023e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023b92:	429a      	cmp	r2, r3
 8023b94:	f2c0 813b 	blt.w	8023e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023b98:	9b06      	ldr	r3, [sp, #24]
 8023b9a:	9f07      	ldr	r7, [sp, #28]
 8023b9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8023b9e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023ba2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023ba4:	2b00      	cmp	r3, #0
 8023ba6:	f340 8164 	ble.w	8023e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023baa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023bac:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023bae:	1418      	asrs	r0, r3, #16
 8023bb0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023bb2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023bb6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023bb8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023bbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bbe:	142d      	asrs	r5, r5, #16
 8023bc0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023bc4:	f100 81ee 	bmi.w	8023fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023bc8:	f102 3eff 	add.w	lr, r2, #4294967295
 8023bcc:	4575      	cmp	r5, lr
 8023bce:	f280 81e9 	bge.w	8023fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023bd2:	2800      	cmp	r0, #0
 8023bd4:	f2c0 81e6 	blt.w	8023fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023bd8:	f103 3eff 	add.w	lr, r3, #4294967295
 8023bdc:	4570      	cmp	r0, lr
 8023bde:	f280 81e1 	bge.w	8023fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023be4:	b212      	sxth	r2, r2
 8023be6:	fb00 5002 	mla	r0, r0, r2, r5
 8023bea:	fa1f fe81 	uxth.w	lr, r1
 8023bee:	eb03 0a00 	add.w	sl, r3, r0
 8023bf2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023bf6:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023bfa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023bfe:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023c02:	b29b      	uxth	r3, r3
 8023c04:	f1bc 0f00 	cmp.w	ip, #0
 8023c08:	f000 8179 	beq.w	8023efe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023c0c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023c10:	940a      	str	r4, [sp, #40]	; 0x28
 8023c12:	eb0a 0b02 	add.w	fp, sl, r2
 8023c16:	fa1f fa8c 	uxth.w	sl, ip
 8023c1a:	fb0a fe0e 	mul.w	lr, sl, lr
 8023c1e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023c22:	fa1f fa8a 	uxth.w	sl, sl
 8023c26:	eba5 050e 	sub.w	r5, r5, lr
 8023c2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023c2e:	940b      	str	r4, [sp, #44]	; 0x2c
 8023c30:	eba3 030a 	sub.w	r3, r3, sl
 8023c34:	b2ad      	uxth	r5, r5
 8023c36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023c38:	b29b      	uxth	r3, r3
 8023c3a:	fb08 f505 	mul.w	r5, r8, r5
 8023c3e:	fb09 5303 	mla	r3, r9, r3, r5
 8023c42:	fb0a 3304 	mla	r3, sl, r4, r3
 8023c46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023c48:	fb0e 3304 	mla	r3, lr, r4, r3
 8023c4c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023c50:	2b00      	cmp	r3, #0
 8023c52:	f000 80cf 	beq.w	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023c56:	9c08      	ldr	r4, [sp, #32]
 8023c58:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023c5c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023c60:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023c64:	f000 8150 	beq.w	8023f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023c68:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023c6c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023c70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c74:	fb09 f000 	mul.w	r0, r9, r0
 8023c78:	fb0a fe0e 	mul.w	lr, sl, lr
 8023c7c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023c80:	f100 0b20 	add.w	fp, r0, #32
 8023c84:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023c88:	44ce      	add	lr, r9
 8023c8a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023c8e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c92:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023c96:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023c9a:	ea4e 0909 	orr.w	r9, lr, r9
 8023c9e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023ca2:	8868      	ldrh	r0, [r5, #2]
 8023ca4:	d019      	beq.n	8023cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023ca6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023caa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023cae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023cb2:	fb08 f800 	mul.w	r8, r8, r0
 8023cb6:	fb0a fe0e 	mul.w	lr, sl, lr
 8023cba:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023cbe:	f108 0b20 	add.w	fp, r8, #32
 8023cc2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023cc6:	4486      	add	lr, r0
 8023cc8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023ccc:	0a00      	lsrs	r0, r0, #8
 8023cce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023cd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023cd6:	ea4e 0000 	orr.w	r0, lr, r0
 8023cda:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023cde:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023ce2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023ce6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023cea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023cee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023cf2:	ea4e 0909 	orr.w	r9, lr, r9
 8023cf6:	ea4a 0000 	orr.w	r0, sl, r0
 8023cfa:	f1bc 0f00 	cmp.w	ip, #0
 8023cfe:	f000 8105 	beq.w	8023f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023d02:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023d06:	3a01      	subs	r2, #1
 8023d08:	0052      	lsls	r2, r2, #1
 8023d0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023d0c:	3202      	adds	r2, #2
 8023d0e:	2cff      	cmp	r4, #255	; 0xff
 8023d10:	eb05 0e02 	add.w	lr, r5, r2
 8023d14:	5aaa      	ldrh	r2, [r5, r2]
 8023d16:	d018      	beq.n	8023d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023d18:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023d1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023d20:	fb04 fa02 	mul.w	sl, r4, r2
 8023d24:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023d28:	fb08 f805 	mul.w	r8, r8, r5
 8023d2c:	f10a 0520 	add.w	r5, sl, #32
 8023d30:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023d34:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023d38:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023d3c:	4442      	add	r2, r8
 8023d3e:	0a2d      	lsrs	r5, r5, #8
 8023d40:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023d44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023d48:	432a      	orrs	r2, r5
 8023d4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023d4c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023d50:	2cff      	cmp	r4, #255	; 0xff
 8023d52:	d01a      	beq.n	8023d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023d54:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023d58:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023d5c:	fb04 fa05 	mul.w	sl, r4, r5
 8023d60:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023d64:	fb08 f80e 	mul.w	r8, r8, lr
 8023d68:	f10a 0e20 	add.w	lr, sl, #32
 8023d6c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023d70:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023d74:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023d78:	4445      	add	r5, r8
 8023d7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d7e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023d82:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023d86:	ea45 050e 	orr.w	r5, r5, lr
 8023d8a:	fb1c fe01 	smulbb	lr, ip, r1
 8023d8e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023d92:	f1cc 0810 	rsb	r8, ip, #16
 8023d96:	eba8 0801 	sub.w	r8, r8, r1
 8023d9a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023d9e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023da2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023da6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023daa:	4341      	muls	r1, r0
 8023dac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023db0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023db4:	ea4a 0202 	orr.w	r2, sl, r2
 8023db8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023dbc:	fb09 1108 	mla	r1, r9, r8, r1
 8023dc0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023dc4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023dc8:	fb0c 1102 	mla	r1, ip, r2, r1
 8023dcc:	ea4b 0505 	orr.w	r5, fp, r5
 8023dd0:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023dd4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023dd8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023ddc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023de0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023de4:	ea42 0e0e 	orr.w	lr, r2, lr
 8023de8:	fa1f f28e 	uxth.w	r2, lr
 8023dec:	2bff      	cmp	r3, #255	; 0xff
 8023dee:	f040 80a1 	bne.w	8023f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023df2:	803a      	strh	r2, [r7, #0]
 8023df4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023df6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023df8:	4413      	add	r3, r2
 8023dfa:	931d      	str	r3, [sp, #116]	; 0x74
 8023dfc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023dfe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e00:	441a      	add	r2, r3
 8023e02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023e04:	921e      	str	r2, [sp, #120]	; 0x78
 8023e06:	3b01      	subs	r3, #1
 8023e08:	3702      	adds	r7, #2
 8023e0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023e0c:	e6c9      	b.n	8023ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023e0e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023e10:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023e12:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023e14:	4433      	add	r3, r6
 8023e16:	931d      	str	r3, [sp, #116]	; 0x74
 8023e18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e1a:	441c      	add	r4, r3
 8023e1c:	9b06      	ldr	r3, [sp, #24]
 8023e1e:	941e      	str	r4, [sp, #120]	; 0x78
 8023e20:	3b01      	subs	r3, #1
 8023e22:	9306      	str	r3, [sp, #24]
 8023e24:	9b07      	ldr	r3, [sp, #28]
 8023e26:	3302      	adds	r3, #2
 8023e28:	9307      	str	r3, [sp, #28]
 8023e2a:	e698      	b.n	8023b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023e2c:	d028      	beq.n	8023e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023e2e:	9b06      	ldr	r3, [sp, #24]
 8023e30:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023e32:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023e34:	3b01      	subs	r3, #1
 8023e36:	fb00 5003 	mla	r0, r0, r3, r5
 8023e3a:	1400      	asrs	r0, r0, #16
 8023e3c:	f53f aeac 	bmi.w	8023b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023e40:	3901      	subs	r1, #1
 8023e42:	4288      	cmp	r0, r1
 8023e44:	f6bf aea8 	bge.w	8023b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023e48:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023e4a:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023e4c:	fb01 0303 	mla	r3, r1, r3, r0
 8023e50:	141b      	asrs	r3, r3, #16
 8023e52:	f53f aea1 	bmi.w	8023b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023e56:	3a01      	subs	r2, #1
 8023e58:	4293      	cmp	r3, r2
 8023e5a:	f6bf ae9d 	bge.w	8023b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023e5e:	9b06      	ldr	r3, [sp, #24]
 8023e60:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023e64:	930f      	str	r3, [sp, #60]	; 0x3c
 8023e66:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023e6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023e6c:	2b00      	cmp	r3, #0
 8023e6e:	f300 80b6 	bgt.w	8023fde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8023e72:	9b06      	ldr	r3, [sp, #24]
 8023e74:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023e78:	9b07      	ldr	r3, [sp, #28]
 8023e7a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023e7e:	9307      	str	r3, [sp, #28]
 8023e80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023e82:	2b00      	cmp	r3, #0
 8023e84:	f340 8218 	ble.w	80242b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023e88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023e8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023e90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023e94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023e96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023e9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023e9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023ea2:	eef0 6a62 	vmov.f32	s13, s5
 8023ea6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023eaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023eae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023eb2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023eb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023eba:	eef0 6a43 	vmov.f32	s13, s6
 8023ebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023ec2:	ee12 2a90 	vmov	r2, s5
 8023ec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023eca:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ece:	ee13 2a10 	vmov	r2, s6
 8023ed2:	931f      	str	r3, [sp, #124]	; 0x7c
 8023ed4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ed6:	fb92 f3f3 	sdiv	r3, r2, r3
 8023eda:	9320      	str	r3, [sp, #128]	; 0x80
 8023edc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023ede:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023ee0:	3b01      	subs	r3, #1
 8023ee2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ee6:	930e      	str	r3, [sp, #56]	; 0x38
 8023ee8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023eea:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8023eee:	bf08      	it	eq
 8023ef0:	4613      	moveq	r3, r2
 8023ef2:	9306      	str	r3, [sp, #24]
 8023ef4:	eeb0 3a67 	vmov.f32	s6, s15
 8023ef8:	eef0 2a47 	vmov.f32	s5, s14
 8023efc:	e621      	b.n	8023b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023efe:	fb08 f505 	mul.w	r5, r8, r5
 8023f02:	fb09 5303 	mla	r3, r9, r3, r5
 8023f06:	e6a1      	b.n	8023c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023f08:	4681      	mov	r9, r0
 8023f0a:	e6c8      	b.n	8023c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023f0c:	f1c1 0210 	rsb	r2, r1, #16
 8023f10:	4341      	muls	r1, r0
 8023f12:	fb09 1902 	mla	r9, r9, r2, r1
 8023f16:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023f1a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023f1e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023f22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023f26:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023f2a:	ea42 0909 	orr.w	r9, r2, r9
 8023f2e:	fa1f f289 	uxth.w	r2, r9
 8023f32:	e75b      	b.n	8023dec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023f34:	f8b7 c000 	ldrh.w	ip, [r7]
 8023f38:	43db      	mvns	r3, r3
 8023f3a:	ea4f 202c 	mov.w	r0, ip, asr #8
 8023f3e:	fa5f fe83 	uxtb.w	lr, r3
 8023f42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023f46:	fb00 f00e 	mul.w	r0, r0, lr
 8023f4a:	1c41      	adds	r1, r0, #1
 8023f4c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023f50:	1211      	asrs	r1, r2, #8
 8023f52:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023f56:	f021 0107 	bic.w	r1, r1, #7
 8023f5a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023f5e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023f62:	48d7      	ldr	r0, [pc, #860]	; (80242c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023f64:	fb05 f50e 	mul.w	r5, r5, lr
 8023f68:	b2c9      	uxtb	r1, r1
 8023f6a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8023f6e:	1c69      	adds	r1, r5, #1
 8023f70:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023f74:	10d1      	asrs	r1, r2, #3
 8023f76:	f021 0103 	bic.w	r1, r1, #3
 8023f7a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8023f7e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023f82:	b2db      	uxtb	r3, r3
 8023f84:	00c9      	lsls	r1, r1, #3
 8023f86:	fb03 f30e 	mul.w	r3, r3, lr
 8023f8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023f8e:	4301      	orrs	r1, r0
 8023f90:	1c58      	adds	r0, r3, #1
 8023f92:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023f96:	00d2      	lsls	r2, r2, #3
 8023f98:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023f9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023fa0:	430a      	orrs	r2, r1
 8023fa2:	e726      	b.n	8023df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023fa4:	f115 0e01 	adds.w	lr, r5, #1
 8023fa8:	f53f af24 	bmi.w	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023fac:	4572      	cmp	r2, lr
 8023fae:	f6ff af21 	blt.w	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023fb2:	f110 0e01 	adds.w	lr, r0, #1
 8023fb6:	f53f af1d 	bmi.w	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023fba:	4573      	cmp	r3, lr
 8023fbc:	f6ff af1a 	blt.w	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023fc0:	b21b      	sxth	r3, r3
 8023fc2:	b212      	sxth	r2, r2
 8023fc4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023fc8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023fcc:	9301      	str	r3, [sp, #4]
 8023fce:	9200      	str	r2, [sp, #0]
 8023fd0:	4639      	mov	r1, r7
 8023fd2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023fd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023fd8:	f7ff fc24 	bl	8023824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023fdc:	e70a      	b.n	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023fde:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023fe0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023fe4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023fe6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023fea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023fec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ff0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023ff2:	141f      	asrs	r7, r3, #16
 8023ff4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023ff6:	141b      	asrs	r3, r3, #16
 8023ff8:	fb01 3707 	mla	r7, r1, r7, r3
 8023ffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ffe:	fa1f fc82 	uxth.w	ip, r2
 8024002:	eb03 0a07 	add.w	sl, r3, r7
 8024006:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802400a:	f813 9007 	ldrb.w	r9, [r3, r7]
 802400e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024012:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024016:	b29b      	uxth	r3, r3
 8024018:	2d00      	cmp	r5, #0
 802401a:	f000 80fe 	beq.w	802421a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802401e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8024022:	940c      	str	r4, [sp, #48]	; 0x30
 8024024:	eb0a 0b01 	add.w	fp, sl, r1
 8024028:	fa1f fa85 	uxth.w	sl, r5
 802402c:	fb0a fc0c 	mul.w	ip, sl, ip
 8024030:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8024034:	fa1f fa8a 	uxth.w	sl, sl
 8024038:	eba0 000c 	sub.w	r0, r0, ip
 802403c:	eba3 030a 	sub.w	r3, r3, sl
 8024040:	b280      	uxth	r0, r0
 8024042:	fb08 f000 	mul.w	r0, r8, r0
 8024046:	b29b      	uxth	r3, r3
 8024048:	fb09 0303 	mla	r3, r9, r3, r0
 802404c:	980c      	ldr	r0, [sp, #48]	; 0x30
 802404e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024052:	940d      	str	r4, [sp, #52]	; 0x34
 8024054:	fb0a 3300 	mla	r3, sl, r0, r3
 8024058:	fb0c 3304 	mla	r3, ip, r4, r3
 802405c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024060:	2b00      	cmp	r3, #0
 8024062:	f000 80cc 	beq.w	80241fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024066:	9808      	ldr	r0, [sp, #32]
 8024068:	9c08      	ldr	r4, [sp, #32]
 802406a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802406e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8024072:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8024076:	f000 80d5 	beq.w	8024224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802407a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802407e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024082:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024086:	fb09 f707 	mul.w	r7, r9, r7
 802408a:	fb0a fc0c 	mul.w	ip, sl, ip
 802408e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8024092:	f107 0b20 	add.w	fp, r7, #32
 8024096:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802409a:	44cc      	add	ip, r9
 802409c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80240a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80240a4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80240a8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80240ac:	ea4c 0909 	orr.w	r9, ip, r9
 80240b0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80240b4:	8847      	ldrh	r7, [r0, #2]
 80240b6:	d019      	beq.n	80240ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80240b8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80240bc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80240c0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80240c4:	fb08 f807 	mul.w	r8, r8, r7
 80240c8:	fb0a fc0c 	mul.w	ip, sl, ip
 80240cc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80240d0:	f108 0b20 	add.w	fp, r8, #32
 80240d4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80240d8:	44bc      	add	ip, r7
 80240da:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80240de:	0a3f      	lsrs	r7, r7, #8
 80240e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80240e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80240e8:	ea4c 0707 	orr.w	r7, ip, r7
 80240ec:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80240f0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80240f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80240f8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80240fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024100:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024104:	ea4c 0909 	orr.w	r9, ip, r9
 8024108:	ea4a 0707 	orr.w	r7, sl, r7
 802410c:	2d00      	cmp	r5, #0
 802410e:	f000 808b 	beq.w	8024228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8024112:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024116:	3901      	subs	r1, #1
 8024118:	0049      	lsls	r1, r1, #1
 802411a:	3102      	adds	r1, #2
 802411c:	eb00 0c01 	add.w	ip, r0, r1
 8024120:	5a41      	ldrh	r1, [r0, r1]
 8024122:	980c      	ldr	r0, [sp, #48]	; 0x30
 8024124:	28ff      	cmp	r0, #255	; 0xff
 8024126:	d019      	beq.n	802415c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8024128:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802412a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802412e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024132:	fb04 fa01 	mul.w	sl, r4, r1
 8024136:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802413a:	fb08 f800 	mul.w	r8, r8, r0
 802413e:	f10a 0020 	add.w	r0, sl, #32
 8024142:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8024146:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802414a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802414e:	4441      	add	r1, r8
 8024150:	0a00      	lsrs	r0, r0, #8
 8024152:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8024156:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802415a:	4301      	orrs	r1, r0
 802415c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802415e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8024162:	2cff      	cmp	r4, #255	; 0xff
 8024164:	d01a      	beq.n	802419c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8024166:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802416a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802416e:	fb04 fa00 	mul.w	sl, r4, r0
 8024172:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024176:	fb08 f80c 	mul.w	r8, r8, ip
 802417a:	f10a 0c20 	add.w	ip, sl, #32
 802417e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8024182:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8024186:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802418a:	4440      	add	r0, r8
 802418c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024190:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8024194:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024198:	ea40 000c 	orr.w	r0, r0, ip
 802419c:	fb15 fc02 	smulbb	ip, r5, r2
 80241a0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80241a4:	f1c5 0810 	rsb	r8, r5, #16
 80241a8:	eba8 0802 	sub.w	r8, r8, r2
 80241ac:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80241b0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80241b4:	437a      	muls	r2, r7
 80241b6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80241ba:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80241be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80241c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80241c6:	fb09 2208 	mla	r2, r9, r8, r2
 80241ca:	ea4a 0101 	orr.w	r1, sl, r1
 80241ce:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80241d2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80241d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80241da:	fb05 2201 	mla	r2, r5, r1, r2
 80241de:	ea4b 0000 	orr.w	r0, fp, r0
 80241e2:	fb0c 2200 	mla	r2, ip, r0, r2
 80241e6:	0d57      	lsrs	r7, r2, #21
 80241e8:	0952      	lsrs	r2, r2, #5
 80241ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80241ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80241f2:	433a      	orrs	r2, r7
 80241f4:	2bff      	cmp	r3, #255	; 0xff
 80241f6:	b292      	uxth	r2, r2
 80241f8:	d127      	bne.n	802424a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80241fa:	f8ae 2000 	strh.w	r2, [lr]
 80241fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024200:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8024202:	4413      	add	r3, r2
 8024204:	931d      	str	r3, [sp, #116]	; 0x74
 8024206:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024208:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802420a:	441a      	add	r2, r3
 802420c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802420e:	921e      	str	r2, [sp, #120]	; 0x78
 8024210:	3b01      	subs	r3, #1
 8024212:	f10e 0e02 	add.w	lr, lr, #2
 8024216:	930f      	str	r3, [sp, #60]	; 0x3c
 8024218:	e627      	b.n	8023e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802421a:	fb08 f000 	mul.w	r0, r8, r0
 802421e:	fb09 0303 	mla	r3, r9, r3, r0
 8024222:	e71b      	b.n	802405c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8024224:	46b9      	mov	r9, r7
 8024226:	e743      	b.n	80240b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8024228:	f1c2 0110 	rsb	r1, r2, #16
 802422c:	437a      	muls	r2, r7
 802422e:	fb09 2901 	mla	r9, r9, r1, r2
 8024232:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024236:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802423a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802423e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024242:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024246:	4302      	orrs	r2, r0
 8024248:	e7d4      	b.n	80241f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802424a:	f8be 7000 	ldrh.w	r7, [lr]
 802424e:	4c1c      	ldr	r4, [pc, #112]	; (80242c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024250:	43db      	mvns	r3, r3
 8024252:	1238      	asrs	r0, r7, #8
 8024254:	fa5f fc83 	uxtb.w	ip, r3
 8024258:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802425c:	10fd      	asrs	r5, r7, #3
 802425e:	fb00 f00c 	mul.w	r0, r0, ip
 8024262:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8024266:	fb05 f10c 	mul.w	r1, r5, ip
 802426a:	1c45      	adds	r5, r0, #1
 802426c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024270:	1215      	asrs	r5, r2, #8
 8024272:	f025 0507 	bic.w	r5, r5, #7
 8024276:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802427a:	1c4d      	adds	r5, r1, #1
 802427c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024280:	10d1      	asrs	r1, r2, #3
 8024282:	f021 0103 	bic.w	r1, r1, #3
 8024286:	00fb      	lsls	r3, r7, #3
 8024288:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802428c:	b2db      	uxtb	r3, r3
 802428e:	b2c0      	uxtb	r0, r0
 8024290:	00c9      	lsls	r1, r1, #3
 8024292:	fb03 f30c 	mul.w	r3, r3, ip
 8024296:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802429a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802429e:	4308      	orrs	r0, r1
 80242a0:	1c59      	adds	r1, r3, #1
 80242a2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80242a6:	00d2      	lsls	r2, r2, #3
 80242a8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80242ac:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80242b0:	4318      	orrs	r0, r3
 80242b2:	f8ae 0000 	strh.w	r0, [lr]
 80242b6:	e7a2      	b.n	80241fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80242b8:	b013      	add	sp, #76	; 0x4c
 80242ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242be:	bf00      	nop
 80242c0:	fffff800 	.word	0xfffff800

080242c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80242c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80242c8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80242cc:	fb05 4c03 	mla	ip, r5, r3, r4
 80242d0:	2d00      	cmp	r5, #0
 80242d2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80242d6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80242da:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80242de:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80242e2:	8808      	ldrh	r0, [r1, #0]
 80242e4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80242e8:	f2c0 80a7 	blt.w	802443a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80242ec:	45aa      	cmp	sl, r5
 80242ee:	f340 80a4 	ble.w	802443a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80242f2:	2c00      	cmp	r4, #0
 80242f4:	f2c0 809f 	blt.w	8024436 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80242f8:	42a3      	cmp	r3, r4
 80242fa:	f340 809c 	ble.w	8024436 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80242fe:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8024302:	1c62      	adds	r2, r4, #1
 8024304:	f100 809c 	bmi.w	8024440 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024308:	4293      	cmp	r3, r2
 802430a:	f340 8099 	ble.w	8024440 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802430e:	f1b9 0f00 	cmp.w	r9, #0
 8024312:	f000 8095 	beq.w	8024440 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024316:	f8be c002 	ldrh.w	ip, [lr, #2]
 802431a:	3501      	adds	r5, #1
 802431c:	f100 8094 	bmi.w	8024448 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024320:	45aa      	cmp	sl, r5
 8024322:	f340 8091 	ble.w	8024448 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024326:	2f00      	cmp	r7, #0
 8024328:	f000 808e 	beq.w	8024448 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802432c:	2c00      	cmp	r4, #0
 802432e:	f2c0 8089 	blt.w	8024444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024332:	42a3      	cmp	r3, r4
 8024334:	f340 8086 	ble.w	8024444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024338:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 802433c:	3401      	adds	r4, #1
 802433e:	f100 8086 	bmi.w	802444e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024342:	42a3      	cmp	r3, r4
 8024344:	f340 8083 	ble.w	802444e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024348:	f1b9 0f00 	cmp.w	r9, #0
 802434c:	d07f      	beq.n	802444e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802434e:	3301      	adds	r3, #1
 8024350:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8024354:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024358:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802435c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024360:	fb19 fe07 	smulbb	lr, r9, r7
 8024364:	ea44 0808 	orr.w	r8, r4, r8
 8024368:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802436c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024370:	f1c7 0210 	rsb	r2, r7, #16
 8024374:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024378:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802437c:	ea44 0c0c 	orr.w	ip, r4, ip
 8024380:	eba2 0209 	sub.w	r2, r2, r9
 8024384:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024388:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802438c:	fb04 f40c 	mul.w	r4, r4, ip
 8024390:	fb02 4808 	mla	r8, r2, r8, r4
 8024394:	041a      	lsls	r2, r3, #16
 8024396:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802439a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802439e:	4313      	orrs	r3, r2
 80243a0:	042a      	lsls	r2, r5, #16
 80243a2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80243a6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80243aa:	fb0e 8303 	mla	r3, lr, r3, r8
 80243ae:	432a      	orrs	r2, r5
 80243b0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80243b4:	fb07 3202 	mla	r2, r7, r2, r3
 80243b8:	0d53      	lsrs	r3, r2, #21
 80243ba:	0952      	lsrs	r2, r2, #5
 80243bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80243c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80243c4:	431a      	orrs	r2, r3
 80243c6:	b293      	uxth	r3, r2
 80243c8:	b2b4      	uxth	r4, r6
 80243ca:	1202      	asrs	r2, r0, #8
 80243cc:	43f6      	mvns	r6, r6
 80243ce:	b2f6      	uxtb	r6, r6
 80243d0:	121d      	asrs	r5, r3, #8
 80243d2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80243d6:	fb12 f206 	smulbb	r2, r2, r6
 80243da:	10c7      	asrs	r7, r0, #3
 80243dc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80243e0:	00c0      	lsls	r0, r0, #3
 80243e2:	fb05 2504 	mla	r5, r5, r4, r2
 80243e6:	b2c0      	uxtb	r0, r0
 80243e8:	10da      	asrs	r2, r3, #3
 80243ea:	00db      	lsls	r3, r3, #3
 80243ec:	b2db      	uxtb	r3, r3
 80243ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80243f2:	fb10 f006 	smulbb	r0, r0, r6
 80243f6:	b2ad      	uxth	r5, r5
 80243f8:	fb03 0004 	mla	r0, r3, r4, r0
 80243fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024400:	fb17 f706 	smulbb	r7, r7, r6
 8024404:	b280      	uxth	r0, r0
 8024406:	1c6b      	adds	r3, r5, #1
 8024408:	fb02 7204 	mla	r2, r2, r4, r7
 802440c:	b292      	uxth	r2, r2
 802440e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024412:	1c43      	adds	r3, r0, #1
 8024414:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024418:	1c50      	adds	r0, r2, #1
 802441a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802441e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024422:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024426:	0952      	lsrs	r2, r2, #5
 8024428:	432b      	orrs	r3, r5
 802442a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802442e:	4313      	orrs	r3, r2
 8024430:	800b      	strh	r3, [r1, #0]
 8024432:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024436:	4680      	mov	r8, r0
 8024438:	e763      	b.n	8024302 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802443a:	4684      	mov	ip, r0
 802443c:	4680      	mov	r8, r0
 802443e:	e76c      	b.n	802431a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024440:	4684      	mov	ip, r0
 8024442:	e76a      	b.n	802431a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024444:	4605      	mov	r5, r0
 8024446:	e779      	b.n	802433c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024448:	4603      	mov	r3, r0
 802444a:	4605      	mov	r5, r0
 802444c:	e782      	b.n	8024354 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802444e:	4603      	mov	r3, r0
 8024450:	e780      	b.n	8024354 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08024452 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024452:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024456:	b093      	sub	sp, #76	; 0x4c
 8024458:	461d      	mov	r5, r3
 802445a:	9210      	str	r2, [sp, #64]	; 0x40
 802445c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802445e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8024462:	920b      	str	r2, [sp, #44]	; 0x2c
 8024464:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024468:	910a      	str	r1, [sp, #40]	; 0x28
 802446a:	6859      	ldr	r1, [r3, #4]
 802446c:	681b      	ldr	r3, [r3, #0]
 802446e:	9011      	str	r0, [sp, #68]	; 0x44
 8024470:	fb01 2707 	mla	r7, r1, r7, r2
 8024474:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024478:	9307      	str	r3, [sp, #28]
 802447a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802447c:	681b      	ldr	r3, [r3, #0]
 802447e:	9309      	str	r3, [sp, #36]	; 0x24
 8024480:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024482:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024486:	43db      	mvns	r3, r3
 8024488:	b2db      	uxtb	r3, r3
 802448a:	9308      	str	r3, [sp, #32]
 802448c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802448e:	2b00      	cmp	r3, #0
 8024490:	dc03      	bgt.n	802449a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024492:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024494:	2b00      	cmp	r3, #0
 8024496:	f340 8203 	ble.w	80248a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802449a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802449c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80244a4:	1e48      	subs	r0, r1, #1
 80244a6:	f102 3cff 	add.w	ip, r2, #4294967295
 80244aa:	2d00      	cmp	r5, #0
 80244ac:	f340 80da 	ble.w	8024664 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80244b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80244b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80244b8:	d406      	bmi.n	80244c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80244ba:	4586      	cmp	lr, r0
 80244bc:	da04      	bge.n	80244c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80244be:	2b00      	cmp	r3, #0
 80244c0:	db02      	blt.n	80244c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80244c2:	4563      	cmp	r3, ip
 80244c4:	f2c0 80cf 	blt.w	8024666 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80244c8:	f11e 0e01 	adds.w	lr, lr, #1
 80244cc:	f100 80c1 	bmi.w	8024652 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80244d0:	4571      	cmp	r1, lr
 80244d2:	f2c0 80be 	blt.w	8024652 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80244d6:	3301      	adds	r3, #1
 80244d8:	f100 80bb 	bmi.w	8024652 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80244dc:	429a      	cmp	r2, r3
 80244de:	f2c0 80b8 	blt.w	8024652 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80244e2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80244e6:	46a9      	mov	r9, r5
 80244e8:	f1b9 0f00 	cmp.w	r9, #0
 80244ec:	f340 80d8 	ble.w	80246a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80244f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80244f2:	1421      	asrs	r1, r4, #16
 80244f4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80244f8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80244fc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024500:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024504:	f100 8111 	bmi.w	802472a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024508:	f10e 3aff 	add.w	sl, lr, #4294967295
 802450c:	4551      	cmp	r1, sl
 802450e:	f280 810c 	bge.w	802472a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024512:	2800      	cmp	r0, #0
 8024514:	f2c0 8109 	blt.w	802472a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024518:	f103 3aff 	add.w	sl, r3, #4294967295
 802451c:	4550      	cmp	r0, sl
 802451e:	f280 8104 	bge.w	802472a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024522:	fa0f f38e 	sxth.w	r3, lr
 8024526:	fb00 1103 	mla	r1, r0, r3, r1
 802452a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802452c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024530:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024534:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024538:	f1bc 0f00 	cmp.w	ip, #0
 802453c:	d007      	beq.n	802454e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802453e:	005b      	lsls	r3, r3, #1
 8024540:	eb0a 0003 	add.w	r0, sl, r3
 8024544:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024548:	930c      	str	r3, [sp, #48]	; 0x30
 802454a:	8843      	ldrh	r3, [r0, #2]
 802454c:	930d      	str	r3, [sp, #52]	; 0x34
 802454e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024552:	fb12 f30c 	smulbb	r3, r2, ip
 8024556:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802455a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802455e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024562:	10db      	asrs	r3, r3, #3
 8024564:	ea40 000e 	orr.w	r0, r0, lr
 8024568:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802456c:	f1cc 0e10 	rsb	lr, ip, #16
 8024570:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024574:	ebae 0e02 	sub.w	lr, lr, r2
 8024578:	ea4a 0101 	orr.w	r1, sl, r1
 802457c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024580:	4351      	muls	r1, r2
 8024582:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024584:	9f08      	ldr	r7, [sp, #32]
 8024586:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802458a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802458e:	0410      	lsls	r0, r2, #16
 8024590:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024594:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024598:	4310      	orrs	r0, r2
 802459a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802459c:	990c      	ldr	r1, [sp, #48]	; 0x30
 802459e:	0412      	lsls	r2, r2, #16
 80245a0:	fb03 e000 	mla	r0, r3, r0, lr
 80245a4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80245a8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80245ac:	ea42 020e 	orr.w	r2, r2, lr
 80245b0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80245b4:	fb03 0302 	mla	r3, r3, r2, r0
 80245b8:	0d5a      	lsrs	r2, r3, #21
 80245ba:	095b      	lsrs	r3, r3, #5
 80245bc:	f8b8 0000 	ldrh.w	r0, [r8]
 80245c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80245c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80245c8:	4313      	orrs	r3, r2
 80245ca:	b29b      	uxth	r3, r3
 80245cc:	1201      	asrs	r1, r0, #8
 80245ce:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80245d2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80245d6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80245da:	fb11 f107 	smulbb	r1, r1, r7
 80245de:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80245e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80245e6:	00c0      	lsls	r0, r0, #3
 80245e8:	fb0c 1c02 	mla	ip, ip, r2, r1
 80245ec:	b2c0      	uxtb	r0, r0
 80245ee:	10d9      	asrs	r1, r3, #3
 80245f0:	00db      	lsls	r3, r3, #3
 80245f2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80245f6:	b2db      	uxtb	r3, r3
 80245f8:	fb10 f007 	smulbb	r0, r0, r7
 80245fc:	fa1f fc8c 	uxth.w	ip, ip
 8024600:	fb03 0302 	mla	r3, r3, r2, r0
 8024604:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024608:	fb1e fe07 	smulbb	lr, lr, r7
 802460c:	fb01 e102 	mla	r1, r1, r2, lr
 8024610:	b29a      	uxth	r2, r3
 8024612:	f10c 0301 	add.w	r3, ip, #1
 8024616:	b289      	uxth	r1, r1
 8024618:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802461c:	1c53      	adds	r3, r2, #1
 802461e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024622:	1c4a      	adds	r2, r1, #1
 8024624:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024628:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802462c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024630:	0949      	lsrs	r1, r1, #5
 8024632:	ea43 030c 	orr.w	r3, r3, ip
 8024636:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802463a:	430b      	orrs	r3, r1
 802463c:	f8a8 3000 	strh.w	r3, [r8]
 8024640:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024642:	441c      	add	r4, r3
 8024644:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024646:	f108 0802 	add.w	r8, r8, #2
 802464a:	441e      	add	r6, r3
 802464c:	f109 39ff 	add.w	r9, r9, #4294967295
 8024650:	e74a      	b.n	80244e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024652:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024654:	441c      	add	r4, r3
 8024656:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024658:	441e      	add	r6, r3
 802465a:	9b07      	ldr	r3, [sp, #28]
 802465c:	3302      	adds	r3, #2
 802465e:	3d01      	subs	r5, #1
 8024660:	9307      	str	r3, [sp, #28]
 8024662:	e722      	b.n	80244aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024664:	d022      	beq.n	80246ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024666:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024668:	1e6b      	subs	r3, r5, #1
 802466a:	fb00 4003 	mla	r0, r0, r3, r4
 802466e:	1400      	asrs	r0, r0, #16
 8024670:	f53f af37 	bmi.w	80244e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024674:	3901      	subs	r1, #1
 8024676:	4288      	cmp	r0, r1
 8024678:	f6bf af33 	bge.w	80244e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802467c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802467e:	fb01 6303 	mla	r3, r1, r3, r6
 8024682:	141b      	asrs	r3, r3, #16
 8024684:	f53f af2d 	bmi.w	80244e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024688:	3a01      	subs	r2, #1
 802468a:	4293      	cmp	r3, r2
 802468c:	f6bf af29 	bge.w	80244e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024690:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024694:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024698:	46a8      	mov	r8, r5
 802469a:	f1b8 0f00 	cmp.w	r8, #0
 802469e:	dc5e      	bgt.n	802475e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80246a0:	9b07      	ldr	r3, [sp, #28]
 80246a2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80246a6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80246aa:	9307      	str	r3, [sp, #28]
 80246ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80246ae:	2b00      	cmp	r3, #0
 80246b0:	f340 80f6 	ble.w	80248a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80246b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80246b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80246bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80246c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80246c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80246c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80246ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80246ce:	eef0 6a62 	vmov.f32	s13, s5
 80246d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80246d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80246de:	ee16 4a90 	vmov	r4, s13
 80246e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80246e6:	eef0 6a43 	vmov.f32	s13, s6
 80246ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80246ee:	ee12 2a90 	vmov	r2, s5
 80246f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80246f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80246fa:	ee13 2a10 	vmov	r2, s6
 80246fe:	931f      	str	r3, [sp, #124]	; 0x7c
 8024700:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024702:	fb92 f3f3 	sdiv	r3, r2, r3
 8024706:	9320      	str	r3, [sp, #128]	; 0x80
 8024708:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802470a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802470c:	3b01      	subs	r3, #1
 802470e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024712:	930a      	str	r3, [sp, #40]	; 0x28
 8024714:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024716:	ee16 6a90 	vmov	r6, s13
 802471a:	bf14      	ite	ne
 802471c:	461d      	movne	r5, r3
 802471e:	4615      	moveq	r5, r2
 8024720:	eeb0 3a67 	vmov.f32	s6, s15
 8024724:	eef0 2a47 	vmov.f32	s5, s14
 8024728:	e6b0      	b.n	802448c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802472a:	f111 0a01 	adds.w	sl, r1, #1
 802472e:	d487      	bmi.n	8024640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024730:	45d6      	cmp	lr, sl
 8024732:	db85      	blt.n	8024640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024734:	f110 0a01 	adds.w	sl, r0, #1
 8024738:	d482      	bmi.n	8024640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802473a:	4553      	cmp	r3, sl
 802473c:	db80      	blt.n	8024640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802473e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024740:	9101      	str	r1, [sp, #4]
 8024742:	b21b      	sxth	r3, r3
 8024744:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024748:	9300      	str	r3, [sp, #0]
 802474a:	e9cd c704 	strd	ip, r7, [sp, #16]
 802474e:	fa0f f38e 	sxth.w	r3, lr
 8024752:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024754:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024756:	4641      	mov	r1, r8
 8024758:	f7ff fdb4 	bl	80242c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 802475c:	e770      	b.n	8024640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802475e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024760:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024762:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024766:	1430      	asrs	r0, r6, #16
 8024768:	1423      	asrs	r3, r4, #16
 802476a:	fb01 3000 	mla	r0, r1, r0, r3
 802476e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024770:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024774:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024778:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802477c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024780:	8858      	ldrh	r0, [r3, #2]
 8024782:	f1be 0f00 	cmp.w	lr, #0
 8024786:	d00b      	beq.n	80247a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024788:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802478c:	3901      	subs	r1, #1
 802478e:	0049      	lsls	r1, r1, #1
 8024790:	3102      	adds	r1, #2
 8024792:	eb03 0b01 	add.w	fp, r3, r1
 8024796:	5a5b      	ldrh	r3, [r3, r1]
 8024798:	930e      	str	r3, [sp, #56]	; 0x38
 802479a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802479e:	930f      	str	r3, [sp, #60]	; 0x3c
 80247a0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80247a4:	fb12 f30e 	smulbb	r3, r2, lr
 80247a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80247ac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80247b0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80247b4:	10db      	asrs	r3, r3, #3
 80247b6:	ea41 010c 	orr.w	r1, r1, ip
 80247ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80247be:	f1ce 0c10 	rsb	ip, lr, #16
 80247c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80247c6:	ebac 0c02 	sub.w	ip, ip, r2
 80247ca:	ea4b 0000 	orr.w	r0, fp, r0
 80247ce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80247d2:	4350      	muls	r0, r2
 80247d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80247d6:	9f08      	ldr	r7, [sp, #32]
 80247d8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80247dc:	fb0c 0c01 	mla	ip, ip, r1, r0
 80247e0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80247e4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80247e8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80247ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80247ec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80247f0:	0412      	lsls	r2, r2, #16
 80247f2:	ea4b 0101 	orr.w	r1, fp, r1
 80247f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80247fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80247fe:	fb03 c101 	mla	r1, r3, r1, ip
 8024802:	4302      	orrs	r2, r0
 8024804:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024808:	fb03 1202 	mla	r2, r3, r2, r1
 802480c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024810:	0952      	lsrs	r2, r2, #5
 8024812:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024816:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802481a:	f8b9 2000 	ldrh.w	r2, [r9]
 802481e:	ea4b 0303 	orr.w	r3, fp, r3
 8024822:	b29b      	uxth	r3, r3
 8024824:	1211      	asrs	r1, r2, #8
 8024826:	1218      	asrs	r0, r3, #8
 8024828:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802482c:	fb11 f107 	smulbb	r1, r1, r7
 8024830:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024834:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024838:	00d2      	lsls	r2, r2, #3
 802483a:	fb00 100a 	mla	r0, r0, sl, r1
 802483e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8024842:	10d9      	asrs	r1, r3, #3
 8024844:	b2d2      	uxtb	r2, r2
 8024846:	00db      	lsls	r3, r3, #3
 8024848:	fb1c fc07 	smulbb	ip, ip, r7
 802484c:	fb12 f207 	smulbb	r2, r2, r7
 8024850:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024854:	b2db      	uxtb	r3, r3
 8024856:	b280      	uxth	r0, r0
 8024858:	fb01 c10a 	mla	r1, r1, sl, ip
 802485c:	fb03 230a 	mla	r3, r3, sl, r2
 8024860:	b29b      	uxth	r3, r3
 8024862:	b289      	uxth	r1, r1
 8024864:	1c42      	adds	r2, r0, #1
 8024866:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802486a:	f101 0c01 	add.w	ip, r1, #1
 802486e:	1c5a      	adds	r2, r3, #1
 8024870:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024874:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024878:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802487a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802487e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024882:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024886:	4310      	orrs	r0, r2
 8024888:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802488c:	441c      	add	r4, r3
 802488e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024890:	ea40 000c 	orr.w	r0, r0, ip
 8024894:	f829 0b02 	strh.w	r0, [r9], #2
 8024898:	441e      	add	r6, r3
 802489a:	f108 38ff 	add.w	r8, r8, #4294967295
 802489e:	e6fc      	b.n	802469a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80248a0:	b013      	add	sp, #76	; 0x4c
 80248a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080248a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80248a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80248aa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80248ae:	fb0e 4703 	mla	r7, lr, r3, r4
 80248b2:	f1be 0f00 	cmp.w	lr, #0
 80248b6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80248ba:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80248be:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80248c2:	8808      	ldrh	r0, [r1, #0]
 80248c4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80248c8:	db60      	blt.n	802498c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80248ca:	45f1      	cmp	r9, lr
 80248cc:	dd5e      	ble.n	802498c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80248ce:	2c00      	cmp	r4, #0
 80248d0:	db5a      	blt.n	8024988 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80248d2:	42a3      	cmp	r3, r4
 80248d4:	dd58      	ble.n	8024988 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80248d6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80248da:	1c62      	adds	r2, r4, #1
 80248dc:	d459      	bmi.n	8024992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80248de:	4293      	cmp	r3, r2
 80248e0:	dd57      	ble.n	8024992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80248e2:	2d00      	cmp	r5, #0
 80248e4:	d055      	beq.n	8024992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80248e6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80248ea:	f11e 0e01 	adds.w	lr, lr, #1
 80248ee:	d454      	bmi.n	802499a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80248f0:	45f1      	cmp	r9, lr
 80248f2:	dd52      	ble.n	802499a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80248f4:	2e00      	cmp	r6, #0
 80248f6:	d050      	beq.n	802499a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80248f8:	2c00      	cmp	r4, #0
 80248fa:	db4c      	blt.n	8024996 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80248fc:	42a3      	cmp	r3, r4
 80248fe:	dd4a      	ble.n	8024996 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024900:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024904:	3401      	adds	r4, #1
 8024906:	d405      	bmi.n	8024914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024908:	42a3      	cmp	r3, r4
 802490a:	dd03      	ble.n	8024914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802490c:	b115      	cbz	r5, 8024914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802490e:	3301      	adds	r3, #1
 8024910:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024914:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024918:	fb15 f406 	smulbb	r4, r5, r6
 802491c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024920:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024924:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024928:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802492c:	ea43 0c0c 	orr.w	ip, r3, ip
 8024930:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024934:	f1c6 0310 	rsb	r3, r6, #16
 8024938:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802493c:	1b5b      	subs	r3, r3, r5
 802493e:	ea4e 0707 	orr.w	r7, lr, r7
 8024942:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024946:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802494a:	437d      	muls	r5, r7
 802494c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024950:	0403      	lsls	r3, r0, #16
 8024952:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024956:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802495a:	4318      	orrs	r0, r3
 802495c:	0413      	lsls	r3, r2, #16
 802495e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024962:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024966:	4313      	orrs	r3, r2
 8024968:	fb04 c000 	mla	r0, r4, r0, ip
 802496c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024970:	fb06 0003 	mla	r0, r6, r3, r0
 8024974:	0d43      	lsrs	r3, r0, #21
 8024976:	0940      	lsrs	r0, r0, #5
 8024978:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802497c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024980:	4318      	orrs	r0, r3
 8024982:	8008      	strh	r0, [r1, #0]
 8024984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024988:	4684      	mov	ip, r0
 802498a:	e7a6      	b.n	80248da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 802498c:	4607      	mov	r7, r0
 802498e:	4684      	mov	ip, r0
 8024990:	e7ab      	b.n	80248ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024992:	4607      	mov	r7, r0
 8024994:	e7a9      	b.n	80248ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024996:	4602      	mov	r2, r0
 8024998:	e7b4      	b.n	8024904 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802499a:	4602      	mov	r2, r0
 802499c:	e7ba      	b.n	8024914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802499e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802499e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249a2:	b08f      	sub	sp, #60	; 0x3c
 80249a4:	461d      	mov	r5, r3
 80249a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80249a8:	920c      	str	r2, [sp, #48]	; 0x30
 80249aa:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80249ae:	9107      	str	r1, [sp, #28]
 80249b0:	6859      	ldr	r1, [r3, #4]
 80249b2:	681b      	ldr	r3, [r3, #0]
 80249b4:	900d      	str	r0, [sp, #52]	; 0x34
 80249b6:	fb01 2707 	mla	r7, r1, r7, r2
 80249ba:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80249be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80249c0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80249c4:	f8d3 8000 	ldr.w	r8, [r3]
 80249c8:	9b07      	ldr	r3, [sp, #28]
 80249ca:	2b00      	cmp	r3, #0
 80249cc:	dc03      	bgt.n	80249d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80249ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80249d0:	2b00      	cmp	r3, #0
 80249d2:	f340 8181 	ble.w	8024cd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80249d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80249d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80249dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80249e0:	1e48      	subs	r0, r1, #1
 80249e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80249e6:	2d00      	cmp	r5, #0
 80249e8:	f340 809b 	ble.w	8024b22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80249ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80249f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80249f4:	d406      	bmi.n	8024a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80249f6:	4586      	cmp	lr, r0
 80249f8:	da04      	bge.n	8024a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80249fa:	2b00      	cmp	r3, #0
 80249fc:	db02      	blt.n	8024a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80249fe:	4563      	cmp	r3, ip
 8024a00:	f2c0 8090 	blt.w	8024b24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024a04:	f11e 0e01 	adds.w	lr, lr, #1
 8024a08:	f100 8084 	bmi.w	8024b14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024a0c:	4571      	cmp	r1, lr
 8024a0e:	f2c0 8081 	blt.w	8024b14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024a12:	3301      	adds	r3, #1
 8024a14:	d47e      	bmi.n	8024b14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024a16:	429a      	cmp	r2, r3
 8024a18:	db7c      	blt.n	8024b14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024a1a:	46aa      	mov	sl, r5
 8024a1c:	46b9      	mov	r9, r7
 8024a1e:	f1ba 0f00 	cmp.w	sl, #0
 8024a22:	f340 8099 	ble.w	8024b58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024a26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a28:	1421      	asrs	r1, r4, #16
 8024a2a:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024a2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024a32:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024a36:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024a3a:	f100 80d0 	bmi.w	8024bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024a3e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024a42:	4559      	cmp	r1, fp
 8024a44:	f280 80cb 	bge.w	8024bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024a48:	2800      	cmp	r0, #0
 8024a4a:	f2c0 80c8 	blt.w	8024bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024a4e:	f103 3bff 	add.w	fp, r3, #4294967295
 8024a52:	4558      	cmp	r0, fp
 8024a54:	f280 80c3 	bge.w	8024bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024a58:	fa0f fe8e 	sxth.w	lr, lr
 8024a5c:	fb00 110e 	mla	r1, r0, lr, r1
 8024a60:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024a64:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024a68:	8841      	ldrh	r1, [r0, #2]
 8024a6a:	f1bc 0f00 	cmp.w	ip, #0
 8024a6e:	d00b      	beq.n	8024a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024a70:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024a74:	3b01      	subs	r3, #1
 8024a76:	005b      	lsls	r3, r3, #1
 8024a78:	3302      	adds	r3, #2
 8024a7a:	eb00 0e03 	add.w	lr, r0, r3
 8024a7e:	5ac3      	ldrh	r3, [r0, r3]
 8024a80:	9308      	str	r3, [sp, #32]
 8024a82:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8024a86:	9309      	str	r3, [sp, #36]	; 0x24
 8024a88:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024a8c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024a90:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024a94:	ea40 000b 	orr.w	r0, r0, fp
 8024a98:	fb12 f30c 	smulbb	r3, r2, ip
 8024a9c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024aa0:	10db      	asrs	r3, r3, #3
 8024aa2:	f1cc 0e10 	rsb	lr, ip, #16
 8024aa6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024aaa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024aae:	ebae 0e02 	sub.w	lr, lr, r2
 8024ab2:	ea4b 0101 	orr.w	r1, fp, r1
 8024ab6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024aba:	4351      	muls	r1, r2
 8024abc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024abe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024ac2:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024ac6:	0410      	lsls	r0, r2, #16
 8024ac8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024acc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024ad0:	4310      	orrs	r0, r2
 8024ad2:	9a08      	ldr	r2, [sp, #32]
 8024ad4:	9908      	ldr	r1, [sp, #32]
 8024ad6:	0412      	lsls	r2, r2, #16
 8024ad8:	fb03 e000 	mla	r0, r3, r0, lr
 8024adc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ae0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024ae4:	ea42 020e 	orr.w	r2, r2, lr
 8024ae8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024aec:	fb03 0302 	mla	r3, r3, r2, r0
 8024af0:	0d5a      	lsrs	r2, r3, #21
 8024af2:	095b      	lsrs	r3, r3, #5
 8024af4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024af8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024afc:	4313      	orrs	r3, r2
 8024afe:	f8a9 3000 	strh.w	r3, [r9]
 8024b02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024b04:	441c      	add	r4, r3
 8024b06:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024b08:	f109 0902 	add.w	r9, r9, #2
 8024b0c:	441e      	add	r6, r3
 8024b0e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024b12:	e784      	b.n	8024a1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024b14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024b16:	441c      	add	r4, r3
 8024b18:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024b1a:	3d01      	subs	r5, #1
 8024b1c:	441e      	add	r6, r3
 8024b1e:	3702      	adds	r7, #2
 8024b20:	e761      	b.n	80249e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024b22:	d01d      	beq.n	8024b60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b24:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024b26:	1e6b      	subs	r3, r5, #1
 8024b28:	fb00 4003 	mla	r0, r0, r3, r4
 8024b2c:	1400      	asrs	r0, r0, #16
 8024b2e:	f53f af74 	bmi.w	8024a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024b32:	3901      	subs	r1, #1
 8024b34:	4288      	cmp	r0, r1
 8024b36:	f6bf af70 	bge.w	8024a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024b3a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024b3c:	fb01 6303 	mla	r3, r1, r3, r6
 8024b40:	141b      	asrs	r3, r3, #16
 8024b42:	f53f af6a 	bmi.w	8024a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024b46:	3a01      	subs	r2, #1
 8024b48:	4293      	cmp	r3, r2
 8024b4a:	f6bf af66 	bge.w	8024a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024b4e:	46a9      	mov	r9, r5
 8024b50:	46ba      	mov	sl, r7
 8024b52:	f1b9 0f00 	cmp.w	r9, #0
 8024b56:	dc5a      	bgt.n	8024c0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024b58:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024b5c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024b60:	9b07      	ldr	r3, [sp, #28]
 8024b62:	2b00      	cmp	r3, #0
 8024b64:	f340 80b8 	ble.w	8024cd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024b68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024b6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024b70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024b74:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024b76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024b7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024b7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024b82:	eef0 6a62 	vmov.f32	s13, s5
 8024b86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024b8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024b92:	ee16 4a90 	vmov	r4, s13
 8024b96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024b9a:	eef0 6a43 	vmov.f32	s13, s6
 8024b9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024ba2:	ee12 2a90 	vmov	r2, s5
 8024ba6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024baa:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bae:	ee13 2a10 	vmov	r2, s6
 8024bb2:	931b      	str	r3, [sp, #108]	; 0x6c
 8024bb4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024bb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bba:	931c      	str	r3, [sp, #112]	; 0x70
 8024bbc:	9b07      	ldr	r3, [sp, #28]
 8024bbe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024bc0:	3b01      	subs	r3, #1
 8024bc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bc6:	9307      	str	r3, [sp, #28]
 8024bc8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024bca:	ee16 6a90 	vmov	r6, s13
 8024bce:	bf14      	ite	ne
 8024bd0:	461d      	movne	r5, r3
 8024bd2:	4615      	moveq	r5, r2
 8024bd4:	eeb0 3a67 	vmov.f32	s6, s15
 8024bd8:	eef0 2a47 	vmov.f32	s5, s14
 8024bdc:	e6f4      	b.n	80249c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024bde:	f111 0b01 	adds.w	fp, r1, #1
 8024be2:	d48e      	bmi.n	8024b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024be4:	45de      	cmp	lr, fp
 8024be6:	db8c      	blt.n	8024b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024be8:	f110 0b01 	adds.w	fp, r0, #1
 8024bec:	d489      	bmi.n	8024b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024bee:	455b      	cmp	r3, fp
 8024bf0:	db87      	blt.n	8024b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024bf2:	b21b      	sxth	r3, r3
 8024bf4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024bf8:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024bfc:	9300      	str	r3, [sp, #0]
 8024bfe:	4642      	mov	r2, r8
 8024c00:	fa0f f38e 	sxth.w	r3, lr
 8024c04:	4649      	mov	r1, r9
 8024c06:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024c08:	f7ff fe4d 	bl	80248a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024c0c:	e779      	b.n	8024b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024c0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c10:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024c14:	1420      	asrs	r0, r4, #16
 8024c16:	1431      	asrs	r1, r6, #16
 8024c18:	fb03 0101 	mla	r1, r3, r1, r0
 8024c1c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024c20:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024c24:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024c28:	8841      	ldrh	r1, [r0, #2]
 8024c2a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024c2e:	f1be 0f00 	cmp.w	lr, #0
 8024c32:	d00b      	beq.n	8024c4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024c34:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024c38:	3b01      	subs	r3, #1
 8024c3a:	005b      	lsls	r3, r3, #1
 8024c3c:	3302      	adds	r3, #2
 8024c3e:	eb00 0b03 	add.w	fp, r0, r3
 8024c42:	5ac3      	ldrh	r3, [r0, r3]
 8024c44:	930a      	str	r3, [sp, #40]	; 0x28
 8024c46:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024c4a:	930b      	str	r3, [sp, #44]	; 0x2c
 8024c4c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024c50:	fb12 f30e 	smulbb	r3, r2, lr
 8024c54:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024c58:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024c5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024c60:	10db      	asrs	r3, r3, #3
 8024c62:	ea40 000c 	orr.w	r0, r0, ip
 8024c66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024c6a:	f1ce 0c10 	rsb	ip, lr, #16
 8024c6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024c72:	ebac 0c02 	sub.w	ip, ip, r2
 8024c76:	ea4b 0101 	orr.w	r1, fp, r1
 8024c7a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024c7e:	4351      	muls	r1, r2
 8024c80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024c82:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024c86:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024c8a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024c8e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8024c92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024c94:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024c96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024c9a:	0412      	lsls	r2, r2, #16
 8024c9c:	ea4b 0000 	orr.w	r0, fp, r0
 8024ca0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ca4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024ca8:	fb03 c000 	mla	r0, r3, r0, ip
 8024cac:	ea42 0b0b 	orr.w	fp, r2, fp
 8024cb0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024cb4:	fb03 000b 	mla	r0, r3, fp, r0
 8024cb8:	0d43      	lsrs	r3, r0, #21
 8024cba:	0940      	lsrs	r0, r0, #5
 8024cbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024cc0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024cc4:	4318      	orrs	r0, r3
 8024cc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024cc8:	f82a 0b02 	strh.w	r0, [sl], #2
 8024ccc:	441c      	add	r4, r3
 8024cce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cd0:	f109 39ff 	add.w	r9, r9, #4294967295
 8024cd4:	441e      	add	r6, r3
 8024cd6:	e73c      	b.n	8024b52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024cd8:	b00f      	add	sp, #60	; 0x3c
 8024cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024cde <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024cde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ce2:	b085      	sub	sp, #20
 8024ce4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024ce8:	9102      	str	r1, [sp, #8]
 8024cea:	2c00      	cmp	r4, #0
 8024cec:	fb04 7103 	mla	r1, r4, r3, r7
 8024cf0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024cf4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024cf8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024cfc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024d00:	f2c0 811b 	blt.w	8024f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024d04:	45a6      	cmp	lr, r4
 8024d06:	f340 8118 	ble.w	8024f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024d0a:	2f00      	cmp	r7, #0
 8024d0c:	f2c0 8113 	blt.w	8024f36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024d10:	42bb      	cmp	r3, r7
 8024d12:	f340 8110 	ble.w	8024f36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024d16:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024d1a:	1c7a      	adds	r2, r7, #1
 8024d1c:	f100 8110 	bmi.w	8024f40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024d20:	4293      	cmp	r3, r2
 8024d22:	f340 810d 	ble.w	8024f40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024d26:	2e00      	cmp	r6, #0
 8024d28:	f000 810c 	beq.w	8024f44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024d2c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024d30:	3401      	adds	r4, #1
 8024d32:	f100 810b 	bmi.w	8024f4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024d36:	45a6      	cmp	lr, r4
 8024d38:	f340 8108 	ble.w	8024f4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024d3c:	2800      	cmp	r0, #0
 8024d3e:	f000 8108 	beq.w	8024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024d42:	2f00      	cmp	r7, #0
 8024d44:	f2c0 8100 	blt.w	8024f48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024d48:	42bb      	cmp	r3, r7
 8024d4a:	f340 80fd 	ble.w	8024f48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024d4e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024d52:	3701      	adds	r7, #1
 8024d54:	f100 8100 	bmi.w	8024f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024d58:	42bb      	cmp	r3, r7
 8024d5a:	f340 80fd 	ble.w	8024f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024d5e:	2e00      	cmp	r6, #0
 8024d60:	f000 80fc 	beq.w	8024f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024d64:	3301      	adds	r3, #1
 8024d66:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024d6a:	b2b6      	uxth	r6, r6
 8024d6c:	b280      	uxth	r0, r0
 8024d6e:	fb00 fe06 	mul.w	lr, r0, r6
 8024d72:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024d76:	0136      	lsls	r6, r6, #4
 8024d78:	eba6 070e 	sub.w	r7, r6, lr
 8024d7c:	b280      	uxth	r0, r0
 8024d7e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024d82:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024d86:	b2bf      	uxth	r7, r7
 8024d88:	1a1b      	subs	r3, r3, r0
 8024d8a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024d8e:	b29b      	uxth	r3, r3
 8024d90:	fb0a f607 	mul.w	r6, sl, r7
 8024d94:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024d98:	fb0b 6603 	mla	r6, fp, r3, r6
 8024d9c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024da0:	fb00 6609 	mla	r6, r0, r9, r6
 8024da4:	fb0e 6608 	mla	r6, lr, r8, r6
 8024da8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024dac:	9600      	str	r6, [sp, #0]
 8024dae:	2e00      	cmp	r6, #0
 8024db0:	f000 80be 	beq.w	8024f30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024db4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024db8:	fb0b fc0c 	mul.w	ip, fp, ip
 8024dbc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024dc0:	fb0b f505 	mul.w	r5, fp, r5
 8024dc4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024dc8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024dcc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024dd0:	44dc      	add	ip, fp
 8024dd2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024dd6:	9501      	str	r5, [sp, #4]
 8024dd8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024ddc:	9503      	str	r5, [sp, #12]
 8024dde:	9d01      	ldr	r5, [sp, #4]
 8024de0:	9e02      	ldr	r6, [sp, #8]
 8024de2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024de6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024dea:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024dee:	fb0a fc0c 	mul.w	ip, sl, ip
 8024df2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024df6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024dfa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024dfe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e02:	4465      	add	r5, ip
 8024e04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024e08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024e0c:	fb09 fc0c 	mul.w	ip, r9, ip
 8024e10:	fb09 f904 	mul.w	r9, r9, r4
 8024e14:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024e18:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024e1c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024e20:	fb08 f404 	mul.w	r4, r8, r4
 8024e24:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024e28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024e2c:	fb08 f802 	mul.w	r8, r8, r2
 8024e30:	fb0a fa01 	mul.w	sl, sl, r1
 8024e34:	0a22      	lsrs	r2, r4, #8
 8024e36:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024e3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e3e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024e42:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024e46:	4414      	add	r4, r2
 8024e48:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024e4c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024e50:	0a2d      	lsrs	r5, r5, #8
 8024e52:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024e56:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e5a:	9a03      	ldr	r2, [sp, #12]
 8024e5c:	8836      	ldrh	r6, [r6, #0]
 8024e5e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024e62:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e66:	437d      	muls	r5, r7
 8024e68:	4461      	add	r1, ip
 8024e6a:	0a24      	lsrs	r4, r4, #8
 8024e6c:	fb02 5503 	mla	r5, r2, r3, r5
 8024e70:	0a09      	lsrs	r1, r1, #8
 8024e72:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024e76:	fb04 540e 	mla	r4, r4, lr, r5
 8024e7a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024e7e:	fb01 4100 	mla	r1, r1, r0, r4
 8024e82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e86:	0a09      	lsrs	r1, r1, #8
 8024e88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e8c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024e90:	fb07 f70a 	mul.w	r7, r7, sl
 8024e94:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024e98:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024e9c:	fb03 7101 	mla	r1, r3, r1, r7
 8024ea0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024ea4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024ea8:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024eac:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024eb0:	fb00 e101 	mla	r1, r0, r1, lr
 8024eb4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024eb8:	9a00      	ldr	r2, [sp, #0]
 8024eba:	b287      	uxth	r7, r0
 8024ebc:	437a      	muls	r2, r7
 8024ebe:	0a09      	lsrs	r1, r1, #8
 8024ec0:	1c53      	adds	r3, r2, #1
 8024ec2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024ec6:	4321      	orrs	r1, r4
 8024ec8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ecc:	1235      	asrs	r5, r6, #8
 8024ece:	0c0a      	lsrs	r2, r1, #16
 8024ed0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024ed4:	b2db      	uxtb	r3, r3
 8024ed6:	fb12 f207 	smulbb	r2, r2, r7
 8024eda:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024ede:	fb05 2503 	mla	r5, r5, r3, r2
 8024ee2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024ee6:	10f2      	asrs	r2, r6, #3
 8024ee8:	b2c8      	uxtb	r0, r1
 8024eea:	00f6      	lsls	r6, r6, #3
 8024eec:	fb14 f407 	smulbb	r4, r4, r7
 8024ef0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024ef4:	b2f6      	uxtb	r6, r6
 8024ef6:	fb10 f007 	smulbb	r0, r0, r7
 8024efa:	fb02 4203 	mla	r2, r2, r3, r4
 8024efe:	b2ad      	uxth	r5, r5
 8024f00:	fb06 0303 	mla	r3, r6, r3, r0
 8024f04:	b299      	uxth	r1, r3
 8024f06:	b294      	uxth	r4, r2
 8024f08:	1c6b      	adds	r3, r5, #1
 8024f0a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024f0e:	1c62      	adds	r2, r4, #1
 8024f10:	1c4b      	adds	r3, r1, #1
 8024f12:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024f16:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024f1a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024f1e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024f22:	0952      	lsrs	r2, r2, #5
 8024f24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024f28:	432b      	orrs	r3, r5
 8024f2a:	4313      	orrs	r3, r2
 8024f2c:	9a02      	ldr	r2, [sp, #8]
 8024f2e:	8013      	strh	r3, [r2, #0]
 8024f30:	b005      	add	sp, #20
 8024f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024f36:	2500      	movs	r5, #0
 8024f38:	e6ef      	b.n	8024d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024f3a:	2100      	movs	r1, #0
 8024f3c:	460d      	mov	r5, r1
 8024f3e:	e6f7      	b.n	8024d30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024f40:	2100      	movs	r1, #0
 8024f42:	e6f5      	b.n	8024d30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024f44:	4631      	mov	r1, r6
 8024f46:	e6f3      	b.n	8024d30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024f48:	2400      	movs	r4, #0
 8024f4a:	e702      	b.n	8024d52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024f4c:	2200      	movs	r2, #0
 8024f4e:	4614      	mov	r4, r2
 8024f50:	e70b      	b.n	8024d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024f52:	4602      	mov	r2, r0
 8024f54:	4604      	mov	r4, r0
 8024f56:	e708      	b.n	8024d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024f58:	2200      	movs	r2, #0
 8024f5a:	e706      	b.n	8024d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024f5c:	4632      	mov	r2, r6
 8024f5e:	e704      	b.n	8024d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f64:	b09d      	sub	sp, #116	; 0x74
 8024f66:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024f6a:	9219      	str	r2, [sp, #100]	; 0x64
 8024f6c:	9307      	str	r3, [sp, #28]
 8024f6e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024f70:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024f74:	931a      	str	r3, [sp, #104]	; 0x68
 8024f76:	9117      	str	r1, [sp, #92]	; 0x5c
 8024f78:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024f7c:	901b      	str	r0, [sp, #108]	; 0x6c
 8024f7e:	6850      	ldr	r0, [r2, #4]
 8024f80:	6812      	ldr	r2, [r2, #0]
 8024f82:	fb00 1303 	mla	r3, r0, r3, r1
 8024f86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024f8a:	930a      	str	r3, [sp, #40]	; 0x28
 8024f8c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024f8e:	681b      	ldr	r3, [r3, #0]
 8024f90:	9310      	str	r3, [sp, #64]	; 0x40
 8024f92:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024f96:	930b      	str	r3, [sp, #44]	; 0x2c
 8024f98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024f9a:	2b00      	cmp	r3, #0
 8024f9c:	dc03      	bgt.n	8024fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8024f9e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024fa0:	2b00      	cmp	r3, #0
 8024fa2:	f340 8375 	ble.w	8025690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024fa6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024fa8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024fac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024fb0:	1e48      	subs	r0, r1, #1
 8024fb2:	1e57      	subs	r7, r2, #1
 8024fb4:	9b07      	ldr	r3, [sp, #28]
 8024fb6:	2b00      	cmp	r3, #0
 8024fb8:	f340 818e 	ble.w	80252d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024fbc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024fc0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024fc4:	d406      	bmi.n	8024fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024fc6:	4584      	cmp	ip, r0
 8024fc8:	da04      	bge.n	8024fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024fca:	2b00      	cmp	r3, #0
 8024fcc:	db02      	blt.n	8024fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024fce:	42bb      	cmp	r3, r7
 8024fd0:	f2c0 8183 	blt.w	80252da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024fd4:	f11c 0c01 	adds.w	ip, ip, #1
 8024fd8:	f100 8173 	bmi.w	80252c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024fdc:	4561      	cmp	r1, ip
 8024fde:	f2c0 8170 	blt.w	80252c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024fe2:	3301      	adds	r3, #1
 8024fe4:	f100 816d 	bmi.w	80252c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024fe8:	429a      	cmp	r2, r3
 8024fea:	f2c0 816a 	blt.w	80252c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024fee:	9b07      	ldr	r3, [sp, #28]
 8024ff0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024ff2:	9318      	str	r3, [sp, #96]	; 0x60
 8024ff4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024ff6:	2b00      	cmp	r3, #0
 8024ff8:	f340 818c 	ble.w	8025314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024ffc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024ffe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025000:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025004:	689b      	ldr	r3, [r3, #8]
 8025006:	1422      	asrs	r2, r4, #16
 8025008:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802500c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025010:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025014:	f100 81cd 	bmi.w	80253b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025018:	f103 38ff 	add.w	r8, r3, #4294967295
 802501c:	4542      	cmp	r2, r8
 802501e:	f280 81c8 	bge.w	80253b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025022:	f1bc 0f00 	cmp.w	ip, #0
 8025026:	f2c0 81c4 	blt.w	80253b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802502a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802502e:	45c4      	cmp	ip, r8
 8025030:	f280 81bf 	bge.w	80253b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025034:	b21b      	sxth	r3, r3
 8025036:	fb0c 2203 	mla	r2, ip, r3, r2
 802503a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802503c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025040:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025044:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025048:	2800      	cmp	r0, #0
 802504a:	f000 81a9 	beq.w	80253a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802504e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025052:	950c      	str	r5, [sp, #48]	; 0x30
 8025054:	0e2d      	lsrs	r5, r5, #24
 8025056:	9513      	str	r5, [sp, #76]	; 0x4c
 8025058:	b181      	cbz	r1, 802507c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802505a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802505e:	3b01      	subs	r3, #1
 8025060:	009b      	lsls	r3, r3, #2
 8025062:	3304      	adds	r3, #4
 8025064:	eb08 0c03 	add.w	ip, r8, r3
 8025068:	f858 3003 	ldr.w	r3, [r8, r3]
 802506c:	9308      	str	r3, [sp, #32]
 802506e:	0e1b      	lsrs	r3, r3, #24
 8025070:	9311      	str	r3, [sp, #68]	; 0x44
 8025072:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025076:	930d      	str	r3, [sp, #52]	; 0x34
 8025078:	0e1b      	lsrs	r3, r3, #24
 802507a:	9314      	str	r3, [sp, #80]	; 0x50
 802507c:	b280      	uxth	r0, r0
 802507e:	b289      	uxth	r1, r1
 8025080:	fb00 f901 	mul.w	r9, r0, r1
 8025084:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025088:	0100      	lsls	r0, r0, #4
 802508a:	eba0 0809 	sub.w	r8, r0, r9
 802508e:	b289      	uxth	r1, r1
 8025090:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8025094:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8025096:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025098:	fa1f f888 	uxth.w	r8, r8
 802509c:	1a5b      	subs	r3, r3, r1
 802509e:	b29b      	uxth	r3, r3
 80250a0:	fb08 f000 	mul.w	r0, r8, r0
 80250a4:	fb03 000e 	mla	r0, r3, lr, r0
 80250a8:	fb01 0005 	mla	r0, r1, r5, r0
 80250ac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80250ae:	fb09 0005 	mla	r0, r9, r5, r0
 80250b2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80250b6:	2800      	cmp	r0, #0
 80250b8:	f000 80fa 	beq.w	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80250bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80250c0:	d01b      	beq.n	80250fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80250c2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80250c6:	fb0e fa0a 	mul.w	sl, lr, sl
 80250ca:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80250ce:	fb0e fe02 	mul.w	lr, lr, r2
 80250d2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80250d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80250da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80250de:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80250e2:	4452      	add	r2, sl
 80250e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80250e8:	0a12      	lsrs	r2, r2, #8
 80250ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80250ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80250f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80250f6:	ea42 020c 	orr.w	r2, r2, ip
 80250fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250fc:	2dff      	cmp	r5, #255	; 0xff
 80250fe:	d021      	beq.n	8025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025100:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025102:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025106:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025108:	fb05 fb0b 	mul.w	fp, r5, fp
 802510c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802510e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025112:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025114:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025118:	fb05 fa0a 	mul.w	sl, r5, sl
 802511c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025120:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025124:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025128:	44de      	add	lr, fp
 802512a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802512e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025132:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025136:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802513a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802513e:	ea4e 050a 	orr.w	r5, lr, sl
 8025142:	950c      	str	r5, [sp, #48]	; 0x30
 8025144:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025146:	2dff      	cmp	r5, #255	; 0xff
 8025148:	d021      	beq.n	802518e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802514a:	9d08      	ldr	r5, [sp, #32]
 802514c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025150:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025152:	fb05 fb0b 	mul.w	fp, r5, fp
 8025156:	9d08      	ldr	r5, [sp, #32]
 8025158:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802515c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802515e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025162:	fb05 fa0a 	mul.w	sl, r5, sl
 8025166:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802516a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802516e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025172:	44de      	add	lr, fp
 8025174:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025178:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802517c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025180:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025184:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025188:	ea4e 050a 	orr.w	r5, lr, sl
 802518c:	9508      	str	r5, [sp, #32]
 802518e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025190:	2dff      	cmp	r5, #255	; 0xff
 8025192:	d021      	beq.n	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8025194:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025196:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802519a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802519c:	fb05 fb0b 	mul.w	fp, r5, fp
 80251a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80251a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80251a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80251a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80251ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80251b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80251b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80251bc:	44de      	add	lr, fp
 80251be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80251c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80251c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80251ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80251d2:	ea4e 050a 	orr.w	r5, lr, sl
 80251d6:	950d      	str	r5, [sp, #52]	; 0x34
 80251d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80251da:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80251de:	9d08      	ldr	r5, [sp, #32]
 80251e0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80251e4:	fb08 fc0c 	mul.w	ip, r8, ip
 80251e8:	fb03 cc0e 	mla	ip, r3, lr, ip
 80251ec:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80251f0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80251f2:	fb01 cc0e 	mla	ip, r1, lr, ip
 80251f6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80251fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80251fc:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025200:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025204:	fb08 f80e 	mul.w	r8, r8, lr
 8025208:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802520c:	fb03 8202 	mla	r2, r3, r2, r8
 8025210:	9b08      	ldr	r3, [sp, #32]
 8025212:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025214:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8025218:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802521a:	fb01 220a 	mla	r2, r1, sl, r2
 802521e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8025222:	fb09 2901 	mla	r9, r9, r1, r2
 8025226:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025228:	883b      	ldrh	r3, [r7, #0]
 802522a:	4342      	muls	r2, r0
 802522c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025230:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025234:	1c50      	adds	r0, r2, #1
 8025236:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802523a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802523e:	ea4c 0c09 	orr.w	ip, ip, r9
 8025242:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8025246:	1219      	asrs	r1, r3, #8
 8025248:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802524c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025250:	b2c0      	uxtb	r0, r0
 8025252:	fb12 f205 	smulbb	r2, r2, r5
 8025256:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802525a:	fb01 2100 	mla	r1, r1, r0, r2
 802525e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8025262:	10da      	asrs	r2, r3, #3
 8025264:	fa5f fc8c 	uxtb.w	ip, ip
 8025268:	00db      	lsls	r3, r3, #3
 802526a:	fb1c fc05 	smulbb	ip, ip, r5
 802526e:	b2db      	uxtb	r3, r3
 8025270:	b289      	uxth	r1, r1
 8025272:	fb03 c300 	mla	r3, r3, r0, ip
 8025276:	fa1f fc83 	uxth.w	ip, r3
 802527a:	1c4b      	adds	r3, r1, #1
 802527c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025280:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025284:	fb1e fe05 	smulbb	lr, lr, r5
 8025288:	f10c 0301 	add.w	r3, ip, #1
 802528c:	fb02 e200 	mla	r2, r2, r0, lr
 8025290:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8025294:	b292      	uxth	r2, r2
 8025296:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802529a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802529e:	430b      	orrs	r3, r1
 80252a0:	1c51      	adds	r1, r2, #1
 80252a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80252a6:	0952      	lsrs	r2, r2, #5
 80252a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80252ac:	4313      	orrs	r3, r2
 80252ae:	803b      	strh	r3, [r7, #0]
 80252b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80252b2:	441c      	add	r4, r3
 80252b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80252b6:	441e      	add	r6, r3
 80252b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80252ba:	3b01      	subs	r3, #1
 80252bc:	3702      	adds	r7, #2
 80252be:	9318      	str	r3, [sp, #96]	; 0x60
 80252c0:	e698      	b.n	8024ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80252c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80252c4:	441c      	add	r4, r3
 80252c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80252c8:	441e      	add	r6, r3
 80252ca:	9b07      	ldr	r3, [sp, #28]
 80252cc:	3b01      	subs	r3, #1
 80252ce:	9307      	str	r3, [sp, #28]
 80252d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80252d2:	3302      	adds	r3, #2
 80252d4:	930a      	str	r3, [sp, #40]	; 0x28
 80252d6:	e66d      	b.n	8024fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80252d8:	d023      	beq.n	8025322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80252da:	9b07      	ldr	r3, [sp, #28]
 80252dc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80252de:	3b01      	subs	r3, #1
 80252e0:	fb00 4003 	mla	r0, r0, r3, r4
 80252e4:	1400      	asrs	r0, r0, #16
 80252e6:	f53f ae82 	bmi.w	8024fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80252ea:	3901      	subs	r1, #1
 80252ec:	4288      	cmp	r0, r1
 80252ee:	f6bf ae7e 	bge.w	8024fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80252f2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80252f4:	fb01 6303 	mla	r3, r1, r3, r6
 80252f8:	141b      	asrs	r3, r3, #16
 80252fa:	f53f ae78 	bmi.w	8024fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80252fe:	3a01      	subs	r2, #1
 8025300:	4293      	cmp	r3, r2
 8025302:	f6bf ae74 	bge.w	8024fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025306:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802530a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802530e:	f1bb 0f00 	cmp.w	fp, #0
 8025312:	dc6c      	bgt.n	80253ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025314:	9b07      	ldr	r3, [sp, #28]
 8025316:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802531a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802531c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025320:	930a      	str	r3, [sp, #40]	; 0x28
 8025322:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025324:	2b00      	cmp	r3, #0
 8025326:	f340 81b3 	ble.w	8025690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802532a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802532e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025332:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025336:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025338:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802533c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025340:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025344:	eef0 6a62 	vmov.f32	s13, s5
 8025348:	ee61 7a27 	vmul.f32	s15, s2, s15
 802534c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025350:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025354:	ee16 4a90 	vmov	r4, s13
 8025358:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802535c:	eef0 6a43 	vmov.f32	s13, s6
 8025360:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025364:	ee12 2a90 	vmov	r2, s5
 8025368:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802536c:	fb92 f3f3 	sdiv	r3, r2, r3
 8025370:	ee13 2a10 	vmov	r2, s6
 8025374:	9329      	str	r3, [sp, #164]	; 0xa4
 8025376:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025378:	fb92 f3f3 	sdiv	r3, r2, r3
 802537c:	932a      	str	r3, [sp, #168]	; 0xa8
 802537e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025380:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8025382:	3b01      	subs	r3, #1
 8025384:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025388:	9317      	str	r3, [sp, #92]	; 0x5c
 802538a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802538c:	bf08      	it	eq
 802538e:	4613      	moveq	r3, r2
 8025390:	ee16 6a90 	vmov	r6, s13
 8025394:	9307      	str	r3, [sp, #28]
 8025396:	eeb0 3a67 	vmov.f32	s6, s15
 802539a:	eef0 2a47 	vmov.f32	s5, s14
 802539e:	e5fb      	b.n	8024f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80253a0:	2900      	cmp	r1, #0
 80253a2:	f43f ae6b 	beq.w	802507c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80253a6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80253aa:	9308      	str	r3, [sp, #32]
 80253ac:	0e1b      	lsrs	r3, r3, #24
 80253ae:	9311      	str	r3, [sp, #68]	; 0x44
 80253b0:	e664      	b.n	802507c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80253b2:	f112 0801 	adds.w	r8, r2, #1
 80253b6:	f53f af7b 	bmi.w	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80253ba:	4543      	cmp	r3, r8
 80253bc:	f6ff af78 	blt.w	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80253c0:	f11c 0801 	adds.w	r8, ip, #1
 80253c4:	f53f af74 	bmi.w	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80253c8:	45c6      	cmp	lr, r8
 80253ca:	f6ff af71 	blt.w	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80253ce:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80253d0:	9201      	str	r2, [sp, #4]
 80253d2:	fa0f f28e 	sxth.w	r2, lr
 80253d6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80253da:	e9cd c002 	strd	ip, r0, [sp, #8]
 80253de:	9200      	str	r2, [sp, #0]
 80253e0:	b21b      	sxth	r3, r3
 80253e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80253e4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80253e6:	4639      	mov	r1, r7
 80253e8:	f7ff fc79 	bl	8024cde <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80253ec:	e760      	b.n	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80253ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80253f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80253f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80253f6:	1427      	asrs	r7, r4, #16
 80253f8:	1433      	asrs	r3, r6, #16
 80253fa:	fb01 7303 	mla	r3, r1, r3, r7
 80253fe:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8025402:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025406:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802540a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802540e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025412:	2a00      	cmp	r2, #0
 8025414:	f000 8133 	beq.w	802567e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8025418:	687d      	ldr	r5, [r7, #4]
 802541a:	950e      	str	r5, [sp, #56]	; 0x38
 802541c:	0e2d      	lsrs	r5, r5, #24
 802541e:	9515      	str	r5, [sp, #84]	; 0x54
 8025420:	b178      	cbz	r0, 8025442 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025422:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8025426:	3901      	subs	r1, #1
 8025428:	0089      	lsls	r1, r1, #2
 802542a:	3104      	adds	r1, #4
 802542c:	eb07 0e01 	add.w	lr, r7, r1
 8025430:	5879      	ldr	r1, [r7, r1]
 8025432:	9109      	str	r1, [sp, #36]	; 0x24
 8025434:	0e09      	lsrs	r1, r1, #24
 8025436:	9112      	str	r1, [sp, #72]	; 0x48
 8025438:	f8de 1004 	ldr.w	r1, [lr, #4]
 802543c:	910f      	str	r1, [sp, #60]	; 0x3c
 802543e:	0e09      	lsrs	r1, r1, #24
 8025440:	9116      	str	r1, [sp, #88]	; 0x58
 8025442:	b292      	uxth	r2, r2
 8025444:	b280      	uxth	r0, r0
 8025446:	fb02 f800 	mul.w	r8, r2, r0
 802544a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802544e:	0112      	lsls	r2, r2, #4
 8025450:	eba2 0e08 	sub.w	lr, r2, r8
 8025454:	b280      	uxth	r0, r0
 8025456:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802545a:	9915      	ldr	r1, [sp, #84]	; 0x54
 802545c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802545e:	fa1f fe8e 	uxth.w	lr, lr
 8025462:	1a12      	subs	r2, r2, r0
 8025464:	b292      	uxth	r2, r2
 8025466:	fb0e f101 	mul.w	r1, lr, r1
 802546a:	fb02 110c 	mla	r1, r2, ip, r1
 802546e:	fb00 1105 	mla	r1, r0, r5, r1
 8025472:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025474:	fb08 1105 	mla	r1, r8, r5, r1
 8025478:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802547c:	2900      	cmp	r1, #0
 802547e:	f000 80f5 	beq.w	802566c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025482:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025486:	d019      	beq.n	80254bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025488:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802548c:	fb0c fa0a 	mul.w	sl, ip, sl
 8025490:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025494:	fb0c fc03 	mul.w	ip, ip, r3
 8025498:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802549c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80254a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80254a4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80254a8:	4453      	add	r3, sl
 80254aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80254ae:	0a1b      	lsrs	r3, r3, #8
 80254b0:	0a3f      	lsrs	r7, r7, #8
 80254b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80254b6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80254ba:	433b      	orrs	r3, r7
 80254bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80254be:	2dff      	cmp	r5, #255	; 0xff
 80254c0:	d020      	beq.n	8025504 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80254c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80254c4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80254c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80254ca:	436f      	muls	r7, r5
 80254cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80254ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80254d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80254d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80254d8:	fb05 fa0a 	mul.w	sl, r5, sl
 80254dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80254e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254e4:	44bc      	add	ip, r7
 80254e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254fe:	ea4c 050a 	orr.w	r5, ip, sl
 8025502:	950e      	str	r5, [sp, #56]	; 0x38
 8025504:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025506:	2dff      	cmp	r5, #255	; 0xff
 8025508:	d020      	beq.n	802554c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802550a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802550c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025510:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025512:	436f      	muls	r7, r5
 8025514:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025516:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802551a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802551c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025520:	fb05 fa0a 	mul.w	sl, r5, sl
 8025524:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025528:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802552c:	44bc      	add	ip, r7
 802552e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025532:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025536:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802553a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802553e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025542:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025546:	ea4c 050a 	orr.w	r5, ip, sl
 802554a:	9509      	str	r5, [sp, #36]	; 0x24
 802554c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802554e:	2dff      	cmp	r5, #255	; 0xff
 8025550:	d020      	beq.n	8025594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025552:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025554:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025558:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802555a:	436f      	muls	r7, r5
 802555c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802555e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025562:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025564:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025568:	fb05 fa0a 	mul.w	sl, r5, sl
 802556c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025570:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025574:	44bc      	add	ip, r7
 8025576:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802557a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802557e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025582:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025586:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802558a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802558e:	ea4c 050a 	orr.w	r5, ip, sl
 8025592:	950f      	str	r5, [sp, #60]	; 0x3c
 8025594:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025596:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802559a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802559c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80255a0:	fb0e f707 	mul.w	r7, lr, r7
 80255a4:	fb02 770c 	mla	r7, r2, ip, r7
 80255a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80255ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80255ae:	fb00 770c 	mla	r7, r0, ip, r7
 80255b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80255b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80255b8:	fb08 770c 	mla	r7, r8, ip, r7
 80255bc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80255c0:	fb0e fe0c 	mul.w	lr, lr, ip
 80255c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80255c8:	fb02 e303 	mla	r3, r2, r3, lr
 80255cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80255ce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80255d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80255d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80255d6:	fb00 330a 	mla	r3, r0, sl, r3
 80255da:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80255de:	fb08 3c0c 	mla	ip, r8, ip, r3
 80255e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80255e4:	f8b9 0000 	ldrh.w	r0, [r9]
 80255e8:	4359      	muls	r1, r3
 80255ea:	0a3f      	lsrs	r7, r7, #8
 80255ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80255f4:	1c4b      	adds	r3, r1, #1
 80255f6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80255fa:	ea47 070c 	orr.w	r7, r7, ip
 80255fe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025602:	1202      	asrs	r2, r0, #8
 8025604:	0c3b      	lsrs	r3, r7, #16
 8025606:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802560a:	b2c9      	uxtb	r1, r1
 802560c:	fb13 f305 	smulbb	r3, r3, r5
 8025610:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025614:	fb02 3201 	mla	r2, r2, r1, r3
 8025618:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802561c:	10c3      	asrs	r3, r0, #3
 802561e:	b2ff      	uxtb	r7, r7
 8025620:	00c0      	lsls	r0, r0, #3
 8025622:	b2c0      	uxtb	r0, r0
 8025624:	fb17 f705 	smulbb	r7, r7, r5
 8025628:	fb00 7001 	mla	r0, r0, r1, r7
 802562c:	b292      	uxth	r2, r2
 802562e:	fb1c fc05 	smulbb	ip, ip, r5
 8025632:	b280      	uxth	r0, r0
 8025634:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025638:	fb03 c301 	mla	r3, r3, r1, ip
 802563c:	1c51      	adds	r1, r2, #1
 802563e:	f100 0c01 	add.w	ip, r0, #1
 8025642:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025646:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802564a:	b29b      	uxth	r3, r3
 802564c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025650:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025654:	ea4c 0202 	orr.w	r2, ip, r2
 8025658:	f103 0c01 	add.w	ip, r3, #1
 802565c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025660:	095b      	lsrs	r3, r3, #5
 8025662:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025666:	431a      	orrs	r2, r3
 8025668:	f8a9 2000 	strh.w	r2, [r9]
 802566c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802566e:	441c      	add	r4, r3
 8025670:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025672:	f109 0902 	add.w	r9, r9, #2
 8025676:	441e      	add	r6, r3
 8025678:	f10b 3bff 	add.w	fp, fp, #4294967295
 802567c:	e647      	b.n	802530e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802567e:	2800      	cmp	r0, #0
 8025680:	f43f aedf 	beq.w	8025442 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025684:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025688:	9109      	str	r1, [sp, #36]	; 0x24
 802568a:	0e09      	lsrs	r1, r1, #24
 802568c:	9112      	str	r1, [sp, #72]	; 0x48
 802568e:	e6d8      	b.n	8025442 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025690:	b01d      	add	sp, #116	; 0x74
 8025692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025696 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802569a:	b085      	sub	sp, #20
 802569c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80256a0:	9102      	str	r1, [sp, #8]
 80256a2:	2c00      	cmp	r4, #0
 80256a4:	fb04 7103 	mla	r1, r4, r3, r7
 80256a8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80256ac:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80256b0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80256b4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80256b8:	f2c0 810c 	blt.w	80258d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80256bc:	45a6      	cmp	lr, r4
 80256be:	f340 8109 	ble.w	80258d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80256c2:	2f00      	cmp	r7, #0
 80256c4:	f2c0 8104 	blt.w	80258d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80256c8:	42bb      	cmp	r3, r7
 80256ca:	f340 8101 	ble.w	80258d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80256ce:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80256d2:	1c7a      	adds	r2, r7, #1
 80256d4:	f100 8101 	bmi.w	80258da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80256d8:	4293      	cmp	r3, r2
 80256da:	f340 80fe 	ble.w	80258da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80256de:	2e00      	cmp	r6, #0
 80256e0:	f000 80fd 	beq.w	80258de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80256e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80256e8:	3401      	adds	r4, #1
 80256ea:	f100 80fc 	bmi.w	80258e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80256ee:	45a6      	cmp	lr, r4
 80256f0:	f340 80f9 	ble.w	80258e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80256f4:	2800      	cmp	r0, #0
 80256f6:	f000 80f9 	beq.w	80258ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80256fa:	2f00      	cmp	r7, #0
 80256fc:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025700:	f2c0 80ef 	blt.w	80258e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025704:	42bb      	cmp	r3, r7
 8025706:	f340 80ec 	ble.w	80258e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802570a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802570e:	3701      	adds	r7, #1
 8025710:	f100 80ef 	bmi.w	80258f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025714:	42bb      	cmp	r3, r7
 8025716:	f340 80ec 	ble.w	80258f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802571a:	2e00      	cmp	r6, #0
 802571c:	f000 80eb 	beq.w	80258f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025720:	6852      	ldr	r2, [r2, #4]
 8025722:	b2b6      	uxth	r6, r6
 8025724:	b280      	uxth	r0, r0
 8025726:	fb00 fe06 	mul.w	lr, r0, r6
 802572a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802572e:	0136      	lsls	r6, r6, #4
 8025730:	eba6 070e 	sub.w	r7, r6, lr
 8025734:	b280      	uxth	r0, r0
 8025736:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802573a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802573e:	b2bf      	uxth	r7, r7
 8025740:	1a1b      	subs	r3, r3, r0
 8025742:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025746:	b29b      	uxth	r3, r3
 8025748:	fb07 f60a 	mul.w	r6, r7, sl
 802574c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025750:	fb0b 6603 	mla	r6, fp, r3, r6
 8025754:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025758:	fb00 6609 	mla	r6, r0, r9, r6
 802575c:	fb0e 6608 	mla	r6, lr, r8, r6
 8025760:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025764:	9600      	str	r6, [sp, #0]
 8025766:	2e00      	cmp	r6, #0
 8025768:	f000 80af 	beq.w	80258ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802576c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025770:	fb0b fc0c 	mul.w	ip, fp, ip
 8025774:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025778:	fb0b f505 	mul.w	r5, fp, r5
 802577c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025780:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025784:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025788:	44dc      	add	ip, fp
 802578a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802578e:	9501      	str	r5, [sp, #4]
 8025790:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025794:	9503      	str	r5, [sp, #12]
 8025796:	9d01      	ldr	r5, [sp, #4]
 8025798:	9e02      	ldr	r6, [sp, #8]
 802579a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802579e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80257a2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80257a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80257aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80257ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80257b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80257b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80257ba:	4465      	add	r5, ip
 80257bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80257c0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80257c4:	fb09 fc0c 	mul.w	ip, r9, ip
 80257c8:	fb09 f904 	mul.w	r9, r9, r4
 80257cc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80257d0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80257d4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80257d8:	fb08 f404 	mul.w	r4, r8, r4
 80257dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80257e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80257e4:	fb08 f802 	mul.w	r8, r8, r2
 80257e8:	fb0a fa01 	mul.w	sl, sl, r1
 80257ec:	0a22      	lsrs	r2, r4, #8
 80257ee:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80257f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80257f6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80257fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80257fe:	4414      	add	r4, r2
 8025800:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025804:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025808:	0a2d      	lsrs	r5, r5, #8
 802580a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802580e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025812:	9a03      	ldr	r2, [sp, #12]
 8025814:	8836      	ldrh	r6, [r6, #0]
 8025816:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802581a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802581e:	437d      	muls	r5, r7
 8025820:	4461      	add	r1, ip
 8025822:	0a24      	lsrs	r4, r4, #8
 8025824:	fb02 5503 	mla	r5, r2, r3, r5
 8025828:	0a09      	lsrs	r1, r1, #8
 802582a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802582e:	fb04 540e 	mla	r4, r4, lr, r5
 8025832:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025836:	fb01 4100 	mla	r1, r1, r0, r4
 802583a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802583e:	0a09      	lsrs	r1, r1, #8
 8025840:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025844:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025848:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802584c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025850:	fb07 f70a 	mul.w	r7, r7, sl
 8025854:	fb03 7101 	mla	r1, r3, r1, r7
 8025858:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802585c:	9b00      	ldr	r3, [sp, #0]
 802585e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025862:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025866:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802586a:	fb00 e101 	mla	r1, r0, r1, lr
 802586e:	43da      	mvns	r2, r3
 8025870:	1233      	asrs	r3, r6, #8
 8025872:	b2d2      	uxtb	r2, r2
 8025874:	10f0      	asrs	r0, r6, #3
 8025876:	0a09      	lsrs	r1, r1, #8
 8025878:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802587c:	00f6      	lsls	r6, r6, #3
 802587e:	4353      	muls	r3, r2
 8025880:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025884:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025888:	b2f6      	uxtb	r6, r6
 802588a:	4321      	orrs	r1, r4
 802588c:	4350      	muls	r0, r2
 802588e:	4356      	muls	r6, r2
 8025890:	1c5a      	adds	r2, r3, #1
 8025892:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025896:	0c0b      	lsrs	r3, r1, #16
 8025898:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802589c:	1c42      	adds	r2, r0, #1
 802589e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80258a2:	0a0a      	lsrs	r2, r1, #8
 80258a4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80258a8:	021b      	lsls	r3, r3, #8
 80258aa:	00d2      	lsls	r2, r2, #3
 80258ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80258b0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80258b4:	4313      	orrs	r3, r2
 80258b6:	1c72      	adds	r2, r6, #1
 80258b8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80258bc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80258c0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80258c4:	4319      	orrs	r1, r3
 80258c6:	9b02      	ldr	r3, [sp, #8]
 80258c8:	8019      	strh	r1, [r3, #0]
 80258ca:	b005      	add	sp, #20
 80258cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80258d0:	2500      	movs	r5, #0
 80258d2:	e6fe      	b.n	80256d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80258d4:	2100      	movs	r1, #0
 80258d6:	460d      	mov	r5, r1
 80258d8:	e706      	b.n	80256e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80258da:	2100      	movs	r1, #0
 80258dc:	e704      	b.n	80256e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80258de:	4631      	mov	r1, r6
 80258e0:	e702      	b.n	80256e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80258e2:	2400      	movs	r4, #0
 80258e4:	e713      	b.n	802570e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80258e6:	2200      	movs	r2, #0
 80258e8:	4614      	mov	r4, r2
 80258ea:	e71a      	b.n	8025722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80258ec:	4602      	mov	r2, r0
 80258ee:	4604      	mov	r4, r0
 80258f0:	e717      	b.n	8025722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80258f2:	2200      	movs	r2, #0
 80258f4:	e715      	b.n	8025722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80258f6:	4632      	mov	r2, r6
 80258f8:	e713      	b.n	8025722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080258fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80258fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025900:	b09b      	sub	sp, #108	; 0x6c
 8025902:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025906:	9218      	str	r2, [sp, #96]	; 0x60
 8025908:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802590a:	9116      	str	r1, [sp, #88]	; 0x58
 802590c:	9307      	str	r3, [sp, #28]
 802590e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025912:	9019      	str	r0, [sp, #100]	; 0x64
 8025914:	6850      	ldr	r0, [r2, #4]
 8025916:	6812      	ldr	r2, [r2, #0]
 8025918:	fb00 1303 	mla	r3, r0, r3, r1
 802591c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025920:	930a      	str	r3, [sp, #40]	; 0x28
 8025922:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025924:	681b      	ldr	r3, [r3, #0]
 8025926:	930f      	str	r3, [sp, #60]	; 0x3c
 8025928:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802592a:	2b00      	cmp	r3, #0
 802592c:	dc03      	bgt.n	8025936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802592e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025930:	2b00      	cmp	r3, #0
 8025932:	f340 8386 	ble.w	8026042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025936:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025938:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802593c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025940:	1e48      	subs	r0, r1, #1
 8025942:	1e57      	subs	r7, r2, #1
 8025944:	9b07      	ldr	r3, [sp, #28]
 8025946:	2b00      	cmp	r3, #0
 8025948:	f340 8166 	ble.w	8025c18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802594c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025950:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025954:	d406      	bmi.n	8025964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025956:	4584      	cmp	ip, r0
 8025958:	da04      	bge.n	8025964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802595a:	2b00      	cmp	r3, #0
 802595c:	db02      	blt.n	8025964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802595e:	42bb      	cmp	r3, r7
 8025960:	f2c0 815b 	blt.w	8025c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025964:	f11c 0c01 	adds.w	ip, ip, #1
 8025968:	f100 814b 	bmi.w	8025c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802596c:	4561      	cmp	r1, ip
 802596e:	f2c0 8148 	blt.w	8025c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025972:	3301      	adds	r3, #1
 8025974:	f100 8145 	bmi.w	8025c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025978:	429a      	cmp	r2, r3
 802597a:	f2c0 8142 	blt.w	8025c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802597e:	9b07      	ldr	r3, [sp, #28]
 8025980:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025982:	9317      	str	r3, [sp, #92]	; 0x5c
 8025984:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025986:	2b00      	cmp	r3, #0
 8025988:	f340 8165 	ble.w	8025c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802598c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802598e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025990:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025994:	689b      	ldr	r3, [r3, #8]
 8025996:	1422      	asrs	r2, r4, #16
 8025998:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802599c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80259a0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259a4:	f100 81d5 	bmi.w	8025d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80259a8:	f103 38ff 	add.w	r8, r3, #4294967295
 80259ac:	4542      	cmp	r2, r8
 80259ae:	f280 81d0 	bge.w	8025d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80259b2:	f1bc 0f00 	cmp.w	ip, #0
 80259b6:	f2c0 81cc 	blt.w	8025d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80259ba:	f10e 38ff 	add.w	r8, lr, #4294967295
 80259be:	45c4      	cmp	ip, r8
 80259c0:	f280 81c7 	bge.w	8025d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80259c4:	b21b      	sxth	r3, r3
 80259c6:	fb0c 2203 	mla	r2, ip, r3, r2
 80259ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80259cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80259d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80259d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80259d8:	2900      	cmp	r1, #0
 80259da:	f000 8182 	beq.w	8025ce2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80259de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80259e2:	950b      	str	r5, [sp, #44]	; 0x2c
 80259e4:	0e2d      	lsrs	r5, r5, #24
 80259e6:	9512      	str	r5, [sp, #72]	; 0x48
 80259e8:	b180      	cbz	r0, 8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80259ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80259ee:	3b01      	subs	r3, #1
 80259f0:	009b      	lsls	r3, r3, #2
 80259f2:	3304      	adds	r3, #4
 80259f4:	eb08 0c03 	add.w	ip, r8, r3
 80259f8:	f858 3003 	ldr.w	r3, [r8, r3]
 80259fc:	9308      	str	r3, [sp, #32]
 80259fe:	0e1b      	lsrs	r3, r3, #24
 8025a00:	9310      	str	r3, [sp, #64]	; 0x40
 8025a02:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025a06:	930c      	str	r3, [sp, #48]	; 0x30
 8025a08:	0e1b      	lsrs	r3, r3, #24
 8025a0a:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a0c:	b289      	uxth	r1, r1
 8025a0e:	b280      	uxth	r0, r0
 8025a10:	fb01 f900 	mul.w	r9, r1, r0
 8025a14:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025a18:	0109      	lsls	r1, r1, #4
 8025a1a:	eba1 0809 	sub.w	r8, r1, r9
 8025a1e:	b280      	uxth	r0, r0
 8025a20:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025a24:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025a26:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025a28:	fa1f f888 	uxth.w	r8, r8
 8025a2c:	1a09      	subs	r1, r1, r0
 8025a2e:	b289      	uxth	r1, r1
 8025a30:	fb08 f303 	mul.w	r3, r8, r3
 8025a34:	fb01 330e 	mla	r3, r1, lr, r3
 8025a38:	fb00 3305 	mla	r3, r0, r5, r3
 8025a3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025a3e:	fb09 3305 	mla	r3, r9, r5, r3
 8025a42:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025a46:	2b00      	cmp	r3, #0
 8025a48:	f000 80d2 	beq.w	8025bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025a4c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025a50:	d01b      	beq.n	8025a8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8025a52:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8025a56:	fb0e fa0a 	mul.w	sl, lr, sl
 8025a5a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025a5e:	fb0e fe02 	mul.w	lr, lr, r2
 8025a62:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025a66:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025a6a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025a6e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8025a72:	4452      	add	r2, sl
 8025a74:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025a78:	0a12      	lsrs	r2, r2, #8
 8025a7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025a82:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025a86:	ea42 020c 	orr.w	r2, r2, ip
 8025a8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a8c:	2dff      	cmp	r5, #255	; 0xff
 8025a8e:	d021      	beq.n	8025ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025a90:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025a92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025a96:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a98:	fb05 fb0b 	mul.w	fp, r5, fp
 8025a9c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025a9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025aa2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025aa4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025aa8:	fb05 fa0a 	mul.w	sl, r5, sl
 8025aac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025ab0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025ab4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025ab8:	44de      	add	lr, fp
 8025aba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025abe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025ac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025ac6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025aca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ace:	ea4e 050a 	orr.w	r5, lr, sl
 8025ad2:	950b      	str	r5, [sp, #44]	; 0x2c
 8025ad4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025ad6:	2dff      	cmp	r5, #255	; 0xff
 8025ad8:	d021      	beq.n	8025b1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025ada:	9d08      	ldr	r5, [sp, #32]
 8025adc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025ae0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025ae2:	fb05 fb0b 	mul.w	fp, r5, fp
 8025ae6:	9d08      	ldr	r5, [sp, #32]
 8025ae8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025aec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025aee:	fb05 fa0e 	mul.w	sl, r5, lr
 8025af2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025af6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025afa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025afe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025b02:	44de      	add	lr, fp
 8025b04:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025b08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025b0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b10:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025b14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b18:	ea4e 050a 	orr.w	r5, lr, sl
 8025b1c:	9508      	str	r5, [sp, #32]
 8025b1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025b20:	2dff      	cmp	r5, #255	; 0xff
 8025b22:	d021      	beq.n	8025b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025b24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025b26:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025b2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025b2c:	fb05 fb0b 	mul.w	fp, r5, fp
 8025b30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025b32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025b36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025b38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025b3c:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025b44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025b48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025b4c:	44de      	add	lr, fp
 8025b4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025b52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025b56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025b5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b62:	ea4e 050a 	orr.w	r5, lr, sl
 8025b66:	950c      	str	r5, [sp, #48]	; 0x30
 8025b68:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b6a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b6e:	9d08      	ldr	r5, [sp, #32]
 8025b70:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025b74:	fb08 fc0c 	mul.w	ip, r8, ip
 8025b78:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025b7c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025b80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025b82:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025b86:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025b8a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b8c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025b90:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025b94:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025b98:	fb08 f80e 	mul.w	r8, r8, lr
 8025b9c:	fb01 8202 	mla	r2, r1, r2, r8
 8025ba0:	9908      	ldr	r1, [sp, #32]
 8025ba2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025ba6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025ba8:	fb00 220a 	mla	r2, r0, sl, r2
 8025bac:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025bb0:	fb09 2900 	mla	r9, r9, r0, r2
 8025bb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025bb8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025bbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025bc0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025bc4:	ea4c 0c09 	orr.w	ip, ip, r9
 8025bc8:	2bff      	cmp	r3, #255	; 0xff
 8025bca:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8025bce:	f040 8091 	bne.w	8025cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025bd2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025bd6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025bda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025bde:	f022 0207 	bic.w	r2, r2, #7
 8025be2:	431a      	orrs	r2, r3
 8025be4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025be8:	ea4c 0c02 	orr.w	ip, ip, r2
 8025bec:	f8a7 c000 	strh.w	ip, [r7]
 8025bf0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025bf2:	441c      	add	r4, r3
 8025bf4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025bf6:	441e      	add	r6, r3
 8025bf8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025bfa:	3b01      	subs	r3, #1
 8025bfc:	3702      	adds	r7, #2
 8025bfe:	9317      	str	r3, [sp, #92]	; 0x5c
 8025c00:	e6c0      	b.n	8025984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025c02:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025c04:	441c      	add	r4, r3
 8025c06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025c08:	441e      	add	r6, r3
 8025c0a:	9b07      	ldr	r3, [sp, #28]
 8025c0c:	3b01      	subs	r3, #1
 8025c0e:	9307      	str	r3, [sp, #28]
 8025c10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025c12:	3302      	adds	r3, #2
 8025c14:	930a      	str	r3, [sp, #40]	; 0x28
 8025c16:	e695      	b.n	8025944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025c18:	d024      	beq.n	8025c64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025c1a:	9b07      	ldr	r3, [sp, #28]
 8025c1c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025c1e:	3b01      	subs	r3, #1
 8025c20:	fb00 4003 	mla	r0, r0, r3, r4
 8025c24:	1400      	asrs	r0, r0, #16
 8025c26:	f53f aeaa 	bmi.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025c2a:	3901      	subs	r1, #1
 8025c2c:	4288      	cmp	r0, r1
 8025c2e:	f6bf aea6 	bge.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025c32:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025c34:	fb01 6303 	mla	r3, r1, r3, r6
 8025c38:	141b      	asrs	r3, r3, #16
 8025c3a:	f53f aea0 	bmi.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025c3e:	3a01      	subs	r2, #1
 8025c40:	4293      	cmp	r3, r2
 8025c42:	f6bf ae9c 	bge.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025c46:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025c4a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8025c4e:	f1bb 0f00 	cmp.w	fp, #0
 8025c52:	f300 809a 	bgt.w	8025d8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025c56:	9b07      	ldr	r3, [sp, #28]
 8025c58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025c5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025c5e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025c62:	930a      	str	r3, [sp, #40]	; 0x28
 8025c64:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025c66:	2b00      	cmp	r3, #0
 8025c68:	f340 81eb 	ble.w	8026042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025c6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025c70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025c74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025c78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025c7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025c82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025c86:	eef0 6a62 	vmov.f32	s13, s5
 8025c8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025c8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025c92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025c96:	ee16 4a90 	vmov	r4, s13
 8025c9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025c9e:	eef0 6a43 	vmov.f32	s13, s6
 8025ca2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025ca6:	ee12 2a90 	vmov	r2, s5
 8025caa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025cae:	fb92 f3f3 	sdiv	r3, r2, r3
 8025cb2:	ee13 2a10 	vmov	r2, s6
 8025cb6:	9327      	str	r3, [sp, #156]	; 0x9c
 8025cb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cba:	fb92 f3f3 	sdiv	r3, r2, r3
 8025cbe:	9328      	str	r3, [sp, #160]	; 0xa0
 8025cc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025cc2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025cc4:	3b01      	subs	r3, #1
 8025cc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025cca:	9316      	str	r3, [sp, #88]	; 0x58
 8025ccc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cce:	bf08      	it	eq
 8025cd0:	4613      	moveq	r3, r2
 8025cd2:	ee16 6a90 	vmov	r6, s13
 8025cd6:	9307      	str	r3, [sp, #28]
 8025cd8:	eeb0 3a67 	vmov.f32	s6, s15
 8025cdc:	eef0 2a47 	vmov.f32	s5, s14
 8025ce0:	e622      	b.n	8025928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8025ce2:	2800      	cmp	r0, #0
 8025ce4:	f43f ae92 	beq.w	8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025ce8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025cec:	9308      	str	r3, [sp, #32]
 8025cee:	0e1b      	lsrs	r3, r3, #24
 8025cf0:	9310      	str	r3, [sp, #64]	; 0x40
 8025cf2:	e68b      	b.n	8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025cf4:	8839      	ldrh	r1, [r7, #0]
 8025cf6:	4dd4      	ldr	r5, [pc, #848]	; (8026048 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025cf8:	43db      	mvns	r3, r3
 8025cfa:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025cfe:	fa5f f883 	uxtb.w	r8, r3
 8025d02:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025d06:	fb0e fe08 	mul.w	lr, lr, r8
 8025d0a:	10c8      	asrs	r0, r1, #3
 8025d0c:	00cb      	lsls	r3, r1, #3
 8025d0e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025d12:	f10e 0101 	add.w	r1, lr, #1
 8025d16:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025d1a:	fb00 f008 	mul.w	r0, r0, r8
 8025d1e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025d22:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025d26:	f100 0e01 	add.w	lr, r0, #1
 8025d2a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025d2e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025d32:	b2db      	uxtb	r3, r3
 8025d34:	b2c9      	uxtb	r1, r1
 8025d36:	00d2      	lsls	r2, r2, #3
 8025d38:	fb03 f308 	mul.w	r3, r3, r8
 8025d3c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025d40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025d44:	430a      	orrs	r2, r1
 8025d46:	1c59      	adds	r1, r3, #1
 8025d48:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025d4c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025d50:	e748      	b.n	8025be4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8025d52:	f112 0801 	adds.w	r8, r2, #1
 8025d56:	f53f af4b 	bmi.w	8025bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025d5a:	4543      	cmp	r3, r8
 8025d5c:	f6ff af48 	blt.w	8025bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025d60:	f11c 0801 	adds.w	r8, ip, #1
 8025d64:	f53f af44 	bmi.w	8025bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025d68:	45c6      	cmp	lr, r8
 8025d6a:	f6ff af41 	blt.w	8025bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025d6e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8025d72:	fa0f f28e 	sxth.w	r2, lr
 8025d76:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025d7a:	9200      	str	r2, [sp, #0]
 8025d7c:	b21b      	sxth	r3, r3
 8025d7e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025d80:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025d82:	4639      	mov	r1, r7
 8025d84:	f7ff fc87 	bl	8025696 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025d88:	e732      	b.n	8025bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025d8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025d8c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025d8e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8025d92:	1421      	asrs	r1, r4, #16
 8025d94:	1433      	asrs	r3, r6, #16
 8025d96:	fb07 1303 	mla	r3, r7, r3, r1
 8025d9a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025d9c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025da0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025da4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025da8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025dac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025db0:	2a00      	cmp	r2, #0
 8025db2:	f000 8107 	beq.w	8025fc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025db6:	684d      	ldr	r5, [r1, #4]
 8025db8:	950d      	str	r5, [sp, #52]	; 0x34
 8025dba:	0e2d      	lsrs	r5, r5, #24
 8025dbc:	9514      	str	r5, [sp, #80]	; 0x50
 8025dbe:	b178      	cbz	r0, 8025de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025dc0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025dc4:	3f01      	subs	r7, #1
 8025dc6:	00bf      	lsls	r7, r7, #2
 8025dc8:	3704      	adds	r7, #4
 8025dca:	eb01 0e07 	add.w	lr, r1, r7
 8025dce:	59c9      	ldr	r1, [r1, r7]
 8025dd0:	9109      	str	r1, [sp, #36]	; 0x24
 8025dd2:	0e09      	lsrs	r1, r1, #24
 8025dd4:	9111      	str	r1, [sp, #68]	; 0x44
 8025dd6:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025dda:	910e      	str	r1, [sp, #56]	; 0x38
 8025ddc:	0e09      	lsrs	r1, r1, #24
 8025dde:	9115      	str	r1, [sp, #84]	; 0x54
 8025de0:	b292      	uxth	r2, r2
 8025de2:	b280      	uxth	r0, r0
 8025de4:	fb02 f900 	mul.w	r9, r2, r0
 8025de8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025dec:	0112      	lsls	r2, r2, #4
 8025dee:	eba2 0e09 	sub.w	lr, r2, r9
 8025df2:	b280      	uxth	r0, r0
 8025df4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025df8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025dfa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025dfc:	fa1f fe8e 	uxth.w	lr, lr
 8025e00:	1a09      	subs	r1, r1, r0
 8025e02:	b289      	uxth	r1, r1
 8025e04:	fb0e f202 	mul.w	r2, lr, r2
 8025e08:	fb01 220c 	mla	r2, r1, ip, r2
 8025e0c:	fb00 2205 	mla	r2, r0, r5, r2
 8025e10:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025e12:	fb09 2205 	mla	r2, r9, r5, r2
 8025e16:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025e1a:	2a00      	cmp	r2, #0
 8025e1c:	f000 80c9 	beq.w	8025fb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025e20:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025e24:	d019      	beq.n	8025e5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025e26:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025e2a:	fb0c fa0a 	mul.w	sl, ip, sl
 8025e2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025e32:	fb0c fc03 	mul.w	ip, ip, r3
 8025e36:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025e3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025e3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025e42:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025e46:	4453      	add	r3, sl
 8025e48:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025e4c:	0a1b      	lsrs	r3, r3, #8
 8025e4e:	0a3f      	lsrs	r7, r7, #8
 8025e50:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025e54:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025e58:	433b      	orrs	r3, r7
 8025e5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025e5c:	2dff      	cmp	r5, #255	; 0xff
 8025e5e:	d020      	beq.n	8025ea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025e60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025e62:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025e66:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025e68:	436f      	muls	r7, r5
 8025e6a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025e6c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025e70:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025e72:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025e76:	fb05 fa0a 	mul.w	sl, r5, sl
 8025e7a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025e7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025e82:	44bc      	add	ip, r7
 8025e84:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025e88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025e8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025e90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025e94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025e98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025e9c:	ea4c 050a 	orr.w	r5, ip, sl
 8025ea0:	950d      	str	r5, [sp, #52]	; 0x34
 8025ea2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025ea4:	2dff      	cmp	r5, #255	; 0xff
 8025ea6:	d020      	beq.n	8025eea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025ea8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025eaa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025eae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025eb0:	436f      	muls	r7, r5
 8025eb2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025eb4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025eb8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025eba:	fb05 fa0c 	mul.w	sl, r5, ip
 8025ebe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025ec2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ec6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025eca:	44bc      	add	ip, r7
 8025ecc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025ed0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025ed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ed8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025edc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ee0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ee4:	ea4c 050a 	orr.w	r5, ip, sl
 8025ee8:	9509      	str	r5, [sp, #36]	; 0x24
 8025eea:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025eec:	2dff      	cmp	r5, #255	; 0xff
 8025eee:	d020      	beq.n	8025f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025ef0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025ef2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025ef6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025ef8:	436f      	muls	r7, r5
 8025efa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025efc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025f00:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025f02:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025f06:	fb05 fa0a 	mul.w	sl, r5, sl
 8025f0a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025f0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025f12:	44bc      	add	ip, r7
 8025f14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025f18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025f1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025f20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025f24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025f28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025f2c:	ea4c 050a 	orr.w	r5, ip, sl
 8025f30:	950e      	str	r5, [sp, #56]	; 0x38
 8025f32:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025f34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025f38:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025f3a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025f3e:	fb0e f707 	mul.w	r7, lr, r7
 8025f42:	fb01 770c 	mla	r7, r1, ip, r7
 8025f46:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025f4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025f4c:	fb00 770c 	mla	r7, r0, ip, r7
 8025f50:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025f54:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025f56:	fb09 770c 	mla	r7, r9, ip, r7
 8025f5a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025f5e:	fb0e fe0c 	mul.w	lr, lr, ip
 8025f62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025f66:	fb01 e303 	mla	r3, r1, r3, lr
 8025f6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025f6c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025f70:	990e      	ldr	r1, [sp, #56]	; 0x38
 8025f72:	fb00 330a 	mla	r3, r0, sl, r3
 8025f76:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025f7a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8025f7e:	0a3f      	lsrs	r7, r7, #8
 8025f80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025f84:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025f88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025f8c:	ea47 070c 	orr.w	r7, r7, ip
 8025f90:	2aff      	cmp	r2, #255	; 0xff
 8025f92:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025f96:	d11e      	bne.n	8025fd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025f98:	097a      	lsrs	r2, r7, #5
 8025f9a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8025f9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fa2:	f023 0307 	bic.w	r3, r3, #7
 8025fa6:	4313      	orrs	r3, r2
 8025fa8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025fac:	431f      	orrs	r7, r3
 8025fae:	f8a8 7000 	strh.w	r7, [r8]
 8025fb2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025fb4:	441c      	add	r4, r3
 8025fb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025fb8:	f108 0802 	add.w	r8, r8, #2
 8025fbc:	441e      	add	r6, r3
 8025fbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025fc2:	e644      	b.n	8025c4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025fc4:	2800      	cmp	r0, #0
 8025fc6:	f43f af0b 	beq.w	8025de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025fca:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8025fce:	9109      	str	r1, [sp, #36]	; 0x24
 8025fd0:	0e09      	lsrs	r1, r1, #24
 8025fd2:	9111      	str	r1, [sp, #68]	; 0x44
 8025fd4:	e704      	b.n	8025de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025fd6:	f8b8 1000 	ldrh.w	r1, [r8]
 8025fda:	43d2      	mvns	r2, r2
 8025fdc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025fe0:	fa5f fe82 	uxtb.w	lr, r2
 8025fe4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025fe8:	fb0c fc0e 	mul.w	ip, ip, lr
 8025fec:	10c8      	asrs	r0, r1, #3
 8025fee:	00ca      	lsls	r2, r1, #3
 8025ff0:	f10c 0101 	add.w	r1, ip, #1
 8025ff4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ff8:	0c39      	lsrs	r1, r7, #16
 8025ffa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ffe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026002:	4911      	ldr	r1, [pc, #68]	; (8026048 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8026004:	fb00 f00e 	mul.w	r0, r0, lr
 8026008:	fa5f fc8c 	uxtb.w	ip, ip
 802600c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8026010:	b2d2      	uxtb	r2, r2
 8026012:	1c41      	adds	r1, r0, #1
 8026014:	fb02 f20e 	mul.w	r2, r2, lr
 8026018:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802601c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026020:	1c51      	adds	r1, r2, #1
 8026022:	00c0      	lsls	r0, r0, #3
 8026024:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026028:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802602c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8026030:	ea4c 0c00 	orr.w	ip, ip, r0
 8026034:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026038:	ea47 0c0c 	orr.w	ip, r7, ip
 802603c:	f8a8 c000 	strh.w	ip, [r8]
 8026040:	e7b7      	b.n	8025fb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8026042:	b01b      	add	sp, #108	; 0x6c
 8026044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026048:	fffff800 	.word	0xfffff800

0802604c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802604c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026050:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026054:	2d00      	cmp	r5, #0
 8026056:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802605a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802605e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026062:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026066:	fb05 0e03 	mla	lr, r5, r3, r0
 802606a:	f2c0 808c 	blt.w	8026186 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802606e:	45a9      	cmp	r9, r5
 8026070:	f340 8089 	ble.w	8026186 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026074:	2800      	cmp	r0, #0
 8026076:	f2c0 8084 	blt.w	8026182 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802607a:	4580      	cmp	r8, r0
 802607c:	f340 8081 	ble.w	8026182 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026080:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026084:	f01e 0f01 	tst.w	lr, #1
 8026088:	5d16      	ldrb	r6, [r2, r4]
 802608a:	bf0c      	ite	eq
 802608c:	f006 060f 	andeq.w	r6, r6, #15
 8026090:	1136      	asrne	r6, r6, #4
 8026092:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026096:	b2f6      	uxtb	r6, r6
 8026098:	1c44      	adds	r4, r0, #1
 802609a:	d477      	bmi.n	802618c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802609c:	45a0      	cmp	r8, r4
 802609e:	dd75      	ble.n	802618c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80260a0:	2f00      	cmp	r7, #0
 80260a2:	d075      	beq.n	8026190 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80260a4:	f10e 0a01 	add.w	sl, lr, #1
 80260a8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80260ac:	f01a 0f01 	tst.w	sl, #1
 80260b0:	5d14      	ldrb	r4, [r2, r4]
 80260b2:	bf0c      	ite	eq
 80260b4:	f004 040f 	andeq.w	r4, r4, #15
 80260b8:	1124      	asrne	r4, r4, #4
 80260ba:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80260be:	b2e4      	uxtb	r4, r4
 80260c0:	3501      	adds	r5, #1
 80260c2:	d469      	bmi.n	8026198 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80260c4:	45a9      	cmp	r9, r5
 80260c6:	dd67      	ble.n	8026198 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80260c8:	f1bc 0f00 	cmp.w	ip, #0
 80260cc:	d067      	beq.n	802619e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80260ce:	2800      	cmp	r0, #0
 80260d0:	db60      	blt.n	8026194 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80260d2:	4580      	cmp	r8, r0
 80260d4:	dd5e      	ble.n	8026194 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80260d6:	eb03 090e 	add.w	r9, r3, lr
 80260da:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80260de:	f019 0f01 	tst.w	r9, #1
 80260e2:	5d55      	ldrb	r5, [r2, r5]
 80260e4:	bf0c      	ite	eq
 80260e6:	f005 050f 	andeq.w	r5, r5, #15
 80260ea:	112d      	asrne	r5, r5, #4
 80260ec:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80260f0:	b2ed      	uxtb	r5, r5
 80260f2:	3001      	adds	r0, #1
 80260f4:	d456      	bmi.n	80261a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80260f6:	4580      	cmp	r8, r0
 80260f8:	dd54      	ble.n	80261a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80260fa:	2f00      	cmp	r7, #0
 80260fc:	d054      	beq.n	80261a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80260fe:	3301      	adds	r3, #1
 8026100:	449e      	add	lr, r3
 8026102:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026106:	f01e 0f01 	tst.w	lr, #1
 802610a:	5cd0      	ldrb	r0, [r2, r3]
 802610c:	bf0c      	ite	eq
 802610e:	f000 000f 	andeq.w	r0, r0, #15
 8026112:	1100      	asrne	r0, r0, #4
 8026114:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026118:	b2c3      	uxtb	r3, r0
 802611a:	b2ba      	uxth	r2, r7
 802611c:	fa1f fc8c 	uxth.w	ip, ip
 8026120:	fb02 f00c 	mul.w	r0, r2, ip
 8026124:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026128:	0112      	lsls	r2, r2, #4
 802612a:	fa1f fc8c 	uxth.w	ip, ip
 802612e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026132:	1a12      	subs	r2, r2, r0
 8026134:	eba7 070c 	sub.w	r7, r7, ip
 8026138:	b292      	uxth	r2, r2
 802613a:	b2bf      	uxth	r7, r7
 802613c:	4362      	muls	r2, r4
 802613e:	fb06 2207 	mla	r2, r6, r7, r2
 8026142:	fb0c 2505 	mla	r5, ip, r5, r2
 8026146:	fb00 5303 	mla	r3, r0, r3, r5
 802614a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802614e:	b1b3      	cbz	r3, 802617e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026150:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8026154:	435a      	muls	r2, r3
 8026156:	1c53      	adds	r3, r2, #1
 8026158:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802615c:	4a2d      	ldr	r2, [pc, #180]	; (8026214 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802615e:	121b      	asrs	r3, r3, #8
 8026160:	6812      	ldr	r2, [r2, #0]
 8026162:	2bff      	cmp	r3, #255	; 0xff
 8026164:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026168:	d120      	bne.n	80261ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802616a:	4b2b      	ldr	r3, [pc, #172]	; (8026218 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802616c:	0950      	lsrs	r0, r2, #5
 802616e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026172:	4033      	ands	r3, r6
 8026174:	4318      	orrs	r0, r3
 8026176:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802617a:	4302      	orrs	r2, r0
 802617c:	800a      	strh	r2, [r1, #0]
 802617e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026182:	2600      	movs	r6, #0
 8026184:	e788      	b.n	8026098 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8026186:	2400      	movs	r4, #0
 8026188:	4626      	mov	r6, r4
 802618a:	e799      	b.n	80260c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802618c:	2400      	movs	r4, #0
 802618e:	e797      	b.n	80260c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026190:	463c      	mov	r4, r7
 8026192:	e795      	b.n	80260c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026194:	2500      	movs	r5, #0
 8026196:	e7ac      	b.n	80260f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026198:	2300      	movs	r3, #0
 802619a:	461d      	mov	r5, r3
 802619c:	e7bd      	b.n	802611a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802619e:	4663      	mov	r3, ip
 80261a0:	4665      	mov	r5, ip
 80261a2:	e7ba      	b.n	802611a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80261a4:	2300      	movs	r3, #0
 80261a6:	e7b8      	b.n	802611a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80261a8:	463b      	mov	r3, r7
 80261aa:	e7b6      	b.n	802611a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80261ac:	880d      	ldrh	r5, [r1, #0]
 80261ae:	b29f      	uxth	r7, r3
 80261b0:	122c      	asrs	r4, r5, #8
 80261b2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80261b6:	43db      	mvns	r3, r3
 80261b8:	b2db      	uxtb	r3, r3
 80261ba:	fb10 f007 	smulbb	r0, r0, r7
 80261be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80261c2:	fb04 0403 	mla	r4, r4, r3, r0
 80261c6:	b2f6      	uxtb	r6, r6
 80261c8:	10e8      	asrs	r0, r5, #3
 80261ca:	b2d2      	uxtb	r2, r2
 80261cc:	00ed      	lsls	r5, r5, #3
 80261ce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80261d2:	fb12 f207 	smulbb	r2, r2, r7
 80261d6:	fb16 f607 	smulbb	r6, r6, r7
 80261da:	b2ed      	uxtb	r5, r5
 80261dc:	b2a4      	uxth	r4, r4
 80261de:	fb00 6603 	mla	r6, r0, r3, r6
 80261e2:	fb05 2303 	mla	r3, r5, r3, r2
 80261e6:	b29a      	uxth	r2, r3
 80261e8:	1c63      	adds	r3, r4, #1
 80261ea:	b2b0      	uxth	r0, r6
 80261ec:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80261f0:	1c53      	adds	r3, r2, #1
 80261f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80261f6:	1c42      	adds	r2, r0, #1
 80261f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80261fc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026200:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026204:	0940      	lsrs	r0, r0, #5
 8026206:	4323      	orrs	r3, r4
 8026208:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802620c:	4303      	orrs	r3, r0
 802620e:	800b      	strh	r3, [r1, #0]
 8026210:	e7b5      	b.n	802617e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026212:	bf00      	nop
 8026214:	200138c4 	.word	0x200138c4
 8026218:	00fff800 	.word	0x00fff800

0802621c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802621c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026220:	b097      	sub	sp, #92	; 0x5c
 8026222:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8026226:	9214      	str	r2, [sp, #80]	; 0x50
 8026228:	9309      	str	r3, [sp, #36]	; 0x24
 802622a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802622c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8026230:	910d      	str	r1, [sp, #52]	; 0x34
 8026232:	930f      	str	r3, [sp, #60]	; 0x3c
 8026234:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8026238:	9015      	str	r0, [sp, #84]	; 0x54
 802623a:	6850      	ldr	r0, [r2, #4]
 802623c:	6812      	ldr	r2, [r2, #0]
 802623e:	fb00 1303 	mla	r3, r0, r3, r1
 8026242:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026246:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026248:	689b      	ldr	r3, [r3, #8]
 802624a:	3301      	adds	r3, #1
 802624c:	f023 0301 	bic.w	r3, r3, #1
 8026250:	930a      	str	r3, [sp, #40]	; 0x28
 8026252:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026254:	681f      	ldr	r7, [r3, #0]
 8026256:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026258:	2b00      	cmp	r3, #0
 802625a:	dc03      	bgt.n	8026264 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802625c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802625e:	2b00      	cmp	r3, #0
 8026260:	f340 8287 	ble.w	8026772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026264:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026266:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802626a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802626e:	1e48      	subs	r0, r1, #1
 8026270:	f102 3cff 	add.w	ip, r2, #4294967295
 8026274:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026276:	2b00      	cmp	r3, #0
 8026278:	f340 80c4 	ble.w	8026404 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802627c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026280:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026284:	d406      	bmi.n	8026294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026286:	4586      	cmp	lr, r0
 8026288:	da04      	bge.n	8026294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802628a:	2b00      	cmp	r3, #0
 802628c:	db02      	blt.n	8026294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802628e:	4563      	cmp	r3, ip
 8026290:	f2c0 80b9 	blt.w	8026406 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8026294:	f11e 0e01 	adds.w	lr, lr, #1
 8026298:	f100 80aa 	bmi.w	80263f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802629c:	4571      	cmp	r1, lr
 802629e:	f2c0 80a7 	blt.w	80263f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80262a2:	3301      	adds	r3, #1
 80262a4:	f100 80a4 	bmi.w	80263f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80262a8:	429a      	cmp	r2, r3
 80262aa:	f2c0 80a1 	blt.w	80263f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80262ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80262b0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80262b4:	930e      	str	r3, [sp, #56]	; 0x38
 80262b6:	46c8      	mov	r8, r9
 80262b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80262ba:	2b00      	cmp	r3, #0
 80262bc:	f340 80c3 	ble.w	8026446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80262c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80262c2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80262c6:	1423      	asrs	r3, r4, #16
 80262c8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80262cc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80262d0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80262d4:	f100 814d 	bmi.w	8026572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80262d8:	f10c 3bff 	add.w	fp, ip, #4294967295
 80262dc:	455b      	cmp	r3, fp
 80262de:	f280 8148 	bge.w	8026572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80262e2:	2800      	cmp	r0, #0
 80262e4:	f2c0 8145 	blt.w	8026572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80262e8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80262ec:	4558      	cmp	r0, fp
 80262ee:	f280 8140 	bge.w	8026572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80262f2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80262f4:	fb00 3305 	mla	r3, r0, r5, r3
 80262f8:	0858      	lsrs	r0, r3, #1
 80262fa:	07dd      	lsls	r5, r3, #31
 80262fc:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026300:	bf54      	ite	pl
 8026302:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026306:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802630a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802630e:	fa5f fc8c 	uxtb.w	ip, ip
 8026312:	2a00      	cmp	r2, #0
 8026314:	f000 80db 	beq.w	80264ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8026318:	1c58      	adds	r0, r3, #1
 802631a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802631e:	07c0      	lsls	r0, r0, #31
 8026320:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026324:	bf54      	ite	pl
 8026326:	f00e 0e0f 	andpl.w	lr, lr, #15
 802632a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802632e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026332:	fa5f f08e 	uxtb.w	r0, lr
 8026336:	9010      	str	r0, [sp, #64]	; 0x40
 8026338:	b1c9      	cbz	r1, 802636e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802633a:	4453      	add	r3, sl
 802633c:	0858      	lsrs	r0, r3, #1
 802633e:	07dd      	lsls	r5, r3, #31
 8026340:	5c38      	ldrb	r0, [r7, r0]
 8026342:	bf54      	ite	pl
 8026344:	f000 000f 	andpl.w	r0, r0, #15
 8026348:	1100      	asrmi	r0, r0, #4
 802634a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802634e:	3301      	adds	r3, #1
 8026350:	b2c0      	uxtb	r0, r0
 8026352:	900b      	str	r0, [sp, #44]	; 0x2c
 8026354:	0858      	lsrs	r0, r3, #1
 8026356:	07dd      	lsls	r5, r3, #31
 8026358:	f817 e000 	ldrb.w	lr, [r7, r0]
 802635c:	bf54      	ite	pl
 802635e:	f00e 030f 	andpl.w	r3, lr, #15
 8026362:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8026366:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802636a:	b2db      	uxtb	r3, r3
 802636c:	9311      	str	r3, [sp, #68]	; 0x44
 802636e:	b292      	uxth	r2, r2
 8026370:	b289      	uxth	r1, r1
 8026372:	fb02 f301 	mul.w	r3, r2, r1
 8026376:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802637a:	0112      	lsls	r2, r2, #4
 802637c:	b289      	uxth	r1, r1
 802637e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026382:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026384:	1ad2      	subs	r2, r2, r3
 8026386:	1a40      	subs	r0, r0, r1
 8026388:	b292      	uxth	r2, r2
 802638a:	436a      	muls	r2, r5
 802638c:	b280      	uxth	r0, r0
 802638e:	fb0c 2c00 	mla	ip, ip, r0, r2
 8026392:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026394:	fb01 c102 	mla	r1, r1, r2, ip
 8026398:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802639a:	fb03 1302 	mla	r3, r3, r2, r1
 802639e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80263a2:	b1db      	cbz	r3, 80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80263a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80263a6:	4353      	muls	r3, r2
 80263a8:	1c5a      	adds	r2, r3, #1
 80263aa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80263ae:	4ac6      	ldr	r2, [pc, #792]	; (80266c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80263b0:	121b      	asrs	r3, r3, #8
 80263b2:	6812      	ldr	r2, [r2, #0]
 80263b4:	2bff      	cmp	r3, #255	; 0xff
 80263b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80263ba:	f040 8099 	bne.w	80264f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80263be:	0953      	lsrs	r3, r2, #5
 80263c0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80263c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80263c8:	f02c 0c07 	bic.w	ip, ip, #7
 80263cc:	ea43 0c0c 	orr.w	ip, r3, ip
 80263d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80263d4:	ea4c 0202 	orr.w	r2, ip, r2
 80263d8:	f8a8 2000 	strh.w	r2, [r8]
 80263dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80263de:	441c      	add	r4, r3
 80263e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80263e2:	441e      	add	r6, r3
 80263e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80263e6:	3b01      	subs	r3, #1
 80263e8:	f108 0802 	add.w	r8, r8, #2
 80263ec:	930e      	str	r3, [sp, #56]	; 0x38
 80263ee:	e763      	b.n	80262b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80263f0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80263f2:	441c      	add	r4, r3
 80263f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80263f6:	441e      	add	r6, r3
 80263f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80263fa:	3b01      	subs	r3, #1
 80263fc:	9309      	str	r3, [sp, #36]	; 0x24
 80263fe:	f109 0902 	add.w	r9, r9, #2
 8026402:	e737      	b.n	8026274 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026404:	d024      	beq.n	8026450 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026406:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026408:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802640a:	3b01      	subs	r3, #1
 802640c:	fb00 4003 	mla	r0, r0, r3, r4
 8026410:	1400      	asrs	r0, r0, #16
 8026412:	f53f af4c 	bmi.w	80262ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026416:	3901      	subs	r1, #1
 8026418:	4288      	cmp	r0, r1
 802641a:	f6bf af48 	bge.w	80262ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802641e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8026420:	fb01 6303 	mla	r3, r1, r3, r6
 8026424:	141b      	asrs	r3, r3, #16
 8026426:	f53f af42 	bmi.w	80262ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802642a:	3a01      	subs	r2, #1
 802642c:	4293      	cmp	r3, r2
 802642e:	f6bf af3e 	bge.w	80262ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026432:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8026436:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802643a:	930e      	str	r3, [sp, #56]	; 0x38
 802643c:	46c8      	mov	r8, r9
 802643e:	f1bb 0f00 	cmp.w	fp, #0
 8026442:	f300 80b7 	bgt.w	80265b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8026446:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026448:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802644c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026450:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026452:	2b00      	cmp	r3, #0
 8026454:	f340 818d 	ble.w	8026772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026458:	ee30 0a04 	vadd.f32	s0, s0, s8
 802645c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026460:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026464:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026466:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802646a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802646e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026472:	eef0 6a62 	vmov.f32	s13, s5
 8026476:	ee61 7a27 	vmul.f32	s15, s2, s15
 802647a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802647e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026482:	ee16 4a90 	vmov	r4, s13
 8026486:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802648a:	eef0 6a43 	vmov.f32	s13, s6
 802648e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026492:	ee12 2a90 	vmov	r2, s5
 8026496:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802649a:	fb92 f3f3 	sdiv	r3, r2, r3
 802649e:	ee13 2a10 	vmov	r2, s6
 80264a2:	9323      	str	r3, [sp, #140]	; 0x8c
 80264a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80264a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80264aa:	9324      	str	r3, [sp, #144]	; 0x90
 80264ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80264ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80264b0:	3b01      	subs	r3, #1
 80264b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80264b6:	930d      	str	r3, [sp, #52]	; 0x34
 80264b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80264ba:	bf08      	it	eq
 80264bc:	4613      	moveq	r3, r2
 80264be:	ee16 6a90 	vmov	r6, s13
 80264c2:	9309      	str	r3, [sp, #36]	; 0x24
 80264c4:	eeb0 3a67 	vmov.f32	s6, s15
 80264c8:	eef0 2a47 	vmov.f32	s5, s14
 80264cc:	e6c3      	b.n	8026256 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80264ce:	2900      	cmp	r1, #0
 80264d0:	f43f af4d 	beq.w	802636e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80264d4:	eb0a 0003 	add.w	r0, sl, r3
 80264d8:	0843      	lsrs	r3, r0, #1
 80264da:	07c0      	lsls	r0, r0, #31
 80264dc:	5cfb      	ldrb	r3, [r7, r3]
 80264de:	bf54      	ite	pl
 80264e0:	f003 030f 	andpl.w	r3, r3, #15
 80264e4:	111b      	asrmi	r3, r3, #4
 80264e6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80264ea:	b2db      	uxtb	r3, r3
 80264ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80264ee:	e73e      	b.n	802636e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80264f0:	f8b8 e000 	ldrh.w	lr, [r8]
 80264f4:	fa1f fb83 	uxth.w	fp, r3
 80264f8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80264fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026500:	43db      	mvns	r3, r3
 8026502:	b2db      	uxtb	r3, r3
 8026504:	fb11 f10b 	smulbb	r1, r1, fp
 8026508:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802650c:	fb00 1003 	mla	r0, r0, r3, r1
 8026510:	fa5f fc8c 	uxtb.w	ip, ip
 8026514:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026518:	b2d2      	uxtb	r2, r2
 802651a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802651e:	b280      	uxth	r0, r0
 8026520:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026524:	fb1c fc0b 	smulbb	ip, ip, fp
 8026528:	fa5f fe8e 	uxtb.w	lr, lr
 802652c:	fb12 fb0b 	smulbb	fp, r2, fp
 8026530:	fb01 cc03 	mla	ip, r1, r3, ip
 8026534:	fb0e bb03 	mla	fp, lr, r3, fp
 8026538:	1c43      	adds	r3, r0, #1
 802653a:	fa1f fc8c 	uxth.w	ip, ip
 802653e:	fa1f fb8b 	uxth.w	fp, fp
 8026542:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026546:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802654a:	f10c 0101 	add.w	r1, ip, #1
 802654e:	f10b 0001 	add.w	r0, fp, #1
 8026552:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026556:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802655a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802655e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026562:	4318      	orrs	r0, r3
 8026564:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026568:	ea40 000c 	orr.w	r0, r0, ip
 802656c:	f8a8 0000 	strh.w	r0, [r8]
 8026570:	e734      	b.n	80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026572:	f113 0b01 	adds.w	fp, r3, #1
 8026576:	f53f af31 	bmi.w	80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802657a:	45dc      	cmp	ip, fp
 802657c:	f6ff af2e 	blt.w	80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026580:	f110 0b01 	adds.w	fp, r0, #1
 8026584:	f53f af2a 	bmi.w	80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026588:	45de      	cmp	lr, fp
 802658a:	f6ff af27 	blt.w	80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802658e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026590:	9302      	str	r3, [sp, #8]
 8026592:	fa0f f38e 	sxth.w	r3, lr
 8026596:	9301      	str	r3, [sp, #4]
 8026598:	fa0f f38c 	sxth.w	r3, ip
 802659c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80265a0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80265a4:	9300      	str	r3, [sp, #0]
 80265a6:	463a      	mov	r2, r7
 80265a8:	4653      	mov	r3, sl
 80265aa:	4641      	mov	r1, r8
 80265ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 80265ae:	f7ff fd4d 	bl	802604c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80265b2:	e713      	b.n	80263dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80265b4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80265b6:	1422      	asrs	r2, r4, #16
 80265b8:	1433      	asrs	r3, r6, #16
 80265ba:	fb05 2303 	mla	r3, r5, r3, r2
 80265be:	085a      	lsrs	r2, r3, #1
 80265c0:	07dd      	lsls	r5, r3, #31
 80265c2:	5cba      	ldrb	r2, [r7, r2]
 80265c4:	bf54      	ite	pl
 80265c6:	f002 020f 	andpl.w	r2, r2, #15
 80265ca:	1112      	asrmi	r2, r2, #4
 80265cc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80265d0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80265d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80265d8:	b2d2      	uxtb	r2, r2
 80265da:	2900      	cmp	r1, #0
 80265dc:	d076      	beq.n	80266cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80265de:	f103 0e01 	add.w	lr, r3, #1
 80265e2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80265e6:	f01e 0f01 	tst.w	lr, #1
 80265ea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80265ee:	bf0c      	ite	eq
 80265f0:	f00c 0c0f 	andeq.w	ip, ip, #15
 80265f4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80265f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80265fc:	fa5f f58c 	uxtb.w	r5, ip
 8026600:	9512      	str	r5, [sp, #72]	; 0x48
 8026602:	b300      	cbz	r0, 8026646 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026604:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026606:	442b      	add	r3, r5
 8026608:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802660c:	07dd      	lsls	r5, r3, #31
 802660e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026612:	bf54      	ite	pl
 8026614:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026618:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802661c:	3301      	adds	r3, #1
 802661e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026622:	fa5f f58c 	uxtb.w	r5, ip
 8026626:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802662a:	950c      	str	r5, [sp, #48]	; 0x30
 802662c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026630:	07dd      	lsls	r5, r3, #31
 8026632:	bf54      	ite	pl
 8026634:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026638:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802663c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026640:	fa5f f38c 	uxtb.w	r3, ip
 8026644:	9313      	str	r3, [sp, #76]	; 0x4c
 8026646:	b289      	uxth	r1, r1
 8026648:	b280      	uxth	r0, r0
 802664a:	fb01 f300 	mul.w	r3, r1, r0
 802664e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026652:	0109      	lsls	r1, r1, #4
 8026654:	b280      	uxth	r0, r0
 8026656:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802665a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802665c:	1ac9      	subs	r1, r1, r3
 802665e:	ebac 0c00 	sub.w	ip, ip, r0
 8026662:	b289      	uxth	r1, r1
 8026664:	4369      	muls	r1, r5
 8026666:	fa1f fc8c 	uxth.w	ip, ip
 802666a:	fb02 120c 	mla	r2, r2, ip, r1
 802666e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026670:	fb00 2001 	mla	r0, r0, r1, r2
 8026674:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026676:	fb03 0302 	mla	r3, r3, r2, r0
 802667a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802667e:	b1d3      	cbz	r3, 80266b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026680:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026682:	4353      	muls	r3, r2
 8026684:	1c5a      	adds	r2, r3, #1
 8026686:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802668a:	4a0f      	ldr	r2, [pc, #60]	; (80266c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802668c:	121b      	asrs	r3, r3, #8
 802668e:	6812      	ldr	r2, [r2, #0]
 8026690:	2bff      	cmp	r3, #255	; 0xff
 8026692:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026696:	d12d      	bne.n	80266f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026698:	0953      	lsrs	r3, r2, #5
 802669a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802669e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80266a2:	f02c 0c07 	bic.w	ip, ip, #7
 80266a6:	ea43 0c0c 	orr.w	ip, r3, ip
 80266aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80266ae:	ea4c 0202 	orr.w	r2, ip, r2
 80266b2:	f8a8 2000 	strh.w	r2, [r8]
 80266b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80266b8:	441c      	add	r4, r3
 80266ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80266bc:	f108 0802 	add.w	r8, r8, #2
 80266c0:	441e      	add	r6, r3
 80266c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80266c6:	e6ba      	b.n	802643e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80266c8:	200138c4 	.word	0x200138c4
 80266cc:	2800      	cmp	r0, #0
 80266ce:	d0ba      	beq.n	8026646 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80266d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80266d2:	442b      	add	r3, r5
 80266d4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80266d8:	07db      	lsls	r3, r3, #31
 80266da:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80266de:	bf54      	ite	pl
 80266e0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80266e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80266e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80266ec:	fa5f f38c 	uxtb.w	r3, ip
 80266f0:	930c      	str	r3, [sp, #48]	; 0x30
 80266f2:	e7a8      	b.n	8026646 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80266f4:	f8b8 e000 	ldrh.w	lr, [r8]
 80266f8:	fa1f fa83 	uxth.w	sl, r3
 80266fc:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026700:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026704:	43db      	mvns	r3, r3
 8026706:	b2db      	uxtb	r3, r3
 8026708:	fb11 f10a 	smulbb	r1, r1, sl
 802670c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026710:	fb00 1003 	mla	r0, r0, r3, r1
 8026714:	b2d2      	uxtb	r2, r2
 8026716:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802671a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802671e:	fa5f fe8e 	uxtb.w	lr, lr
 8026722:	fb12 f20a 	smulbb	r2, r2, sl
 8026726:	fb0e 2203 	mla	r2, lr, r3, r2
 802672a:	fa5f fc8c 	uxtb.w	ip, ip
 802672e:	b280      	uxth	r0, r0
 8026730:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026734:	b292      	uxth	r2, r2
 8026736:	fb1c fc0a 	smulbb	ip, ip, sl
 802673a:	fb01 cc03 	mla	ip, r1, r3, ip
 802673e:	1c43      	adds	r3, r0, #1
 8026740:	1c51      	adds	r1, r2, #1
 8026742:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026746:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802674a:	fa1f fc8c 	uxth.w	ip, ip
 802674e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026752:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026756:	4308      	orrs	r0, r1
 8026758:	f10c 0101 	add.w	r1, ip, #1
 802675c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026760:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026764:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026768:	ea40 000c 	orr.w	r0, r0, ip
 802676c:	f8a8 0000 	strh.w	r0, [r8]
 8026770:	e7a1      	b.n	80266b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026772:	b017      	add	sp, #92	; 0x5c
 8026774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026778 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026778:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802677c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026780:	2d00      	cmp	r5, #0
 8026782:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026786:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802678a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802678e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026792:	fb05 0e03 	mla	lr, r5, r3, r0
 8026796:	f2c0 80b0 	blt.w	80268fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802679a:	45a9      	cmp	r9, r5
 802679c:	f340 80ad 	ble.w	80268fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80267a0:	2800      	cmp	r0, #0
 80267a2:	f2c0 80a8 	blt.w	80268f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80267a6:	4580      	cmp	r8, r0
 80267a8:	f340 80a5 	ble.w	80268f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80267ac:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80267b0:	f01e 0f01 	tst.w	lr, #1
 80267b4:	5d16      	ldrb	r6, [r2, r4]
 80267b6:	bf0c      	ite	eq
 80267b8:	f006 060f 	andeq.w	r6, r6, #15
 80267bc:	1136      	asrne	r6, r6, #4
 80267be:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80267c2:	b2f6      	uxtb	r6, r6
 80267c4:	1c44      	adds	r4, r0, #1
 80267c6:	f100 809b 	bmi.w	8026900 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80267ca:	45a0      	cmp	r8, r4
 80267cc:	f340 8098 	ble.w	8026900 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80267d0:	2f00      	cmp	r7, #0
 80267d2:	f000 8097 	beq.w	8026904 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80267d6:	f10e 0a01 	add.w	sl, lr, #1
 80267da:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80267de:	f01a 0f01 	tst.w	sl, #1
 80267e2:	5d14      	ldrb	r4, [r2, r4]
 80267e4:	bf0c      	ite	eq
 80267e6:	f004 040f 	andeq.w	r4, r4, #15
 80267ea:	1124      	asrne	r4, r4, #4
 80267ec:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80267f0:	b2e4      	uxtb	r4, r4
 80267f2:	3501      	adds	r5, #1
 80267f4:	f100 808a 	bmi.w	802690c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80267f8:	45a9      	cmp	r9, r5
 80267fa:	f340 8087 	ble.w	802690c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80267fe:	f1bc 0f00 	cmp.w	ip, #0
 8026802:	f000 8086 	beq.w	8026912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8026806:	2800      	cmp	r0, #0
 8026808:	db7e      	blt.n	8026908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802680a:	4580      	cmp	r8, r0
 802680c:	dd7c      	ble.n	8026908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802680e:	eb03 090e 	add.w	r9, r3, lr
 8026812:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026816:	f019 0f01 	tst.w	r9, #1
 802681a:	5d55      	ldrb	r5, [r2, r5]
 802681c:	bf0c      	ite	eq
 802681e:	f005 050f 	andeq.w	r5, r5, #15
 8026822:	112d      	asrne	r5, r5, #4
 8026824:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026828:	b2ed      	uxtb	r5, r5
 802682a:	3001      	adds	r0, #1
 802682c:	d474      	bmi.n	8026918 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802682e:	4580      	cmp	r8, r0
 8026830:	dd72      	ble.n	8026918 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026832:	2f00      	cmp	r7, #0
 8026834:	d072      	beq.n	802691c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8026836:	3301      	adds	r3, #1
 8026838:	449e      	add	lr, r3
 802683a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802683e:	f01e 0f01 	tst.w	lr, #1
 8026842:	5cd0      	ldrb	r0, [r2, r3]
 8026844:	bf0c      	ite	eq
 8026846:	f000 000f 	andeq.w	r0, r0, #15
 802684a:	1100      	asrne	r0, r0, #4
 802684c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026850:	b2c3      	uxtb	r3, r0
 8026852:	b2ba      	uxth	r2, r7
 8026854:	fa1f fc8c 	uxth.w	ip, ip
 8026858:	fb02 f00c 	mul.w	r0, r2, ip
 802685c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026860:	0112      	lsls	r2, r2, #4
 8026862:	fa1f fc8c 	uxth.w	ip, ip
 8026866:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802686a:	1a12      	subs	r2, r2, r0
 802686c:	eba7 070c 	sub.w	r7, r7, ip
 8026870:	b292      	uxth	r2, r2
 8026872:	b2bf      	uxth	r7, r7
 8026874:	4362      	muls	r2, r4
 8026876:	fb06 2207 	mla	r2, r6, r7, r2
 802687a:	fb0c 2505 	mla	r5, ip, r5, r2
 802687e:	fb00 5303 	mla	r3, r0, r3, r5
 8026882:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026886:	b3a3      	cbz	r3, 80268f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026888:	4a25      	ldr	r2, [pc, #148]	; (8026920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802688a:	880e      	ldrh	r6, [r1, #0]
 802688c:	6815      	ldr	r5, [r2, #0]
 802688e:	1234      	asrs	r4, r6, #8
 8026890:	b29a      	uxth	r2, r3
 8026892:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026896:	43db      	mvns	r3, r3
 8026898:	b2db      	uxtb	r3, r3
 802689a:	fb10 f002 	smulbb	r0, r0, r2
 802689e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80268a2:	fb04 0403 	mla	r4, r4, r3, r0
 80268a6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80268aa:	10f0      	asrs	r0, r6, #3
 80268ac:	b2ed      	uxtb	r5, r5
 80268ae:	00f6      	lsls	r6, r6, #3
 80268b0:	fb17 f702 	smulbb	r7, r7, r2
 80268b4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80268b8:	fb15 f202 	smulbb	r2, r5, r2
 80268bc:	b2f6      	uxtb	r6, r6
 80268be:	b2a4      	uxth	r4, r4
 80268c0:	fb00 7003 	mla	r0, r0, r3, r7
 80268c4:	fb06 2303 	mla	r3, r6, r3, r2
 80268c8:	b29a      	uxth	r2, r3
 80268ca:	1c63      	adds	r3, r4, #1
 80268cc:	b280      	uxth	r0, r0
 80268ce:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80268d2:	1c53      	adds	r3, r2, #1
 80268d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80268d8:	1c42      	adds	r2, r0, #1
 80268da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80268de:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80268e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80268e6:	0940      	lsrs	r0, r0, #5
 80268e8:	4323      	orrs	r3, r4
 80268ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80268ee:	4303      	orrs	r3, r0
 80268f0:	800b      	strh	r3, [r1, #0]
 80268f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80268f6:	2600      	movs	r6, #0
 80268f8:	e764      	b.n	80267c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80268fa:	2400      	movs	r4, #0
 80268fc:	4626      	mov	r6, r4
 80268fe:	e778      	b.n	80267f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026900:	2400      	movs	r4, #0
 8026902:	e776      	b.n	80267f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026904:	463c      	mov	r4, r7
 8026906:	e774      	b.n	80267f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026908:	2500      	movs	r5, #0
 802690a:	e78e      	b.n	802682a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802690c:	2300      	movs	r3, #0
 802690e:	461d      	mov	r5, r3
 8026910:	e79f      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026912:	4663      	mov	r3, ip
 8026914:	4665      	mov	r5, ip
 8026916:	e79c      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026918:	2300      	movs	r3, #0
 802691a:	e79a      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802691c:	463b      	mov	r3, r7
 802691e:	e798      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026920:	200138c4 	.word	0x200138c4

08026924 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026928:	b093      	sub	sp, #76	; 0x4c
 802692a:	461d      	mov	r5, r3
 802692c:	920c      	str	r2, [sp, #48]	; 0x30
 802692e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026930:	9107      	str	r1, [sp, #28]
 8026932:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026936:	9011      	str	r0, [sp, #68]	; 0x44
 8026938:	6850      	ldr	r0, [r2, #4]
 802693a:	6812      	ldr	r2, [r2, #0]
 802693c:	fb00 1303 	mla	r3, r0, r3, r1
 8026940:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026944:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026946:	689b      	ldr	r3, [r3, #8]
 8026948:	3301      	adds	r3, #1
 802694a:	f023 0301 	bic.w	r3, r3, #1
 802694e:	9306      	str	r3, [sp, #24]
 8026950:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026952:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026956:	681f      	ldr	r7, [r3, #0]
 8026958:	9b07      	ldr	r3, [sp, #28]
 802695a:	2b00      	cmp	r3, #0
 802695c:	dc03      	bgt.n	8026966 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802695e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026960:	2b00      	cmp	r3, #0
 8026962:	f340 8267 	ble.w	8026e34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026966:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026968:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802696c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026970:	1e48      	subs	r0, r1, #1
 8026972:	f102 3cff 	add.w	ip, r2, #4294967295
 8026976:	2d00      	cmp	r5, #0
 8026978:	f340 80b8 	ble.w	8026aec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802697c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026980:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026984:	d406      	bmi.n	8026994 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026986:	4586      	cmp	lr, r0
 8026988:	da04      	bge.n	8026994 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802698a:	2b00      	cmp	r3, #0
 802698c:	db02      	blt.n	8026994 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802698e:	4563      	cmp	r3, ip
 8026990:	f2c0 80ad 	blt.w	8026aee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026994:	f11e 0e01 	adds.w	lr, lr, #1
 8026998:	f100 80a0 	bmi.w	8026adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802699c:	4571      	cmp	r1, lr
 802699e:	f2c0 809d 	blt.w	8026adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80269a2:	3301      	adds	r3, #1
 80269a4:	f100 809a 	bmi.w	8026adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80269a8:	429a      	cmp	r2, r3
 80269aa:	f2c0 8097 	blt.w	8026adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80269ae:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80269b2:	9509      	str	r5, [sp, #36]	; 0x24
 80269b4:	46c8      	mov	r8, r9
 80269b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269b8:	2b00      	cmp	r3, #0
 80269ba:	f340 80b6 	ble.w	8026b2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80269be:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80269c2:	9308      	str	r3, [sp, #32]
 80269c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269c6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80269ca:	1423      	asrs	r3, r4, #16
 80269cc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80269d0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80269d4:	f100 813e 	bmi.w	8026c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80269d8:	f10c 3bff 	add.w	fp, ip, #4294967295
 80269dc:	455b      	cmp	r3, fp
 80269de:	f280 8139 	bge.w	8026c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80269e2:	2800      	cmp	r0, #0
 80269e4:	f2c0 8136 	blt.w	8026c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80269e8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80269ec:	4558      	cmp	r0, fp
 80269ee:	f280 8131 	bge.w	8026c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80269f2:	9a06      	ldr	r2, [sp, #24]
 80269f4:	fb00 3302 	mla	r3, r0, r2, r3
 80269f8:	0858      	lsrs	r0, r3, #1
 80269fa:	07da      	lsls	r2, r3, #31
 80269fc:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026a00:	9a08      	ldr	r2, [sp, #32]
 8026a02:	bf54      	ite	pl
 8026a04:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026a08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026a0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026a10:	fa5f fc8c 	uxtb.w	ip, ip
 8026a14:	2a00      	cmp	r2, #0
 8026a16:	f000 80cb 	beq.w	8026bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026a1a:	1c58      	adds	r0, r3, #1
 8026a1c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026a20:	07c0      	lsls	r0, r0, #31
 8026a22:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026a26:	bf54      	ite	pl
 8026a28:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026a2c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026a30:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026a34:	fa5f fe8e 	uxtb.w	lr, lr
 8026a38:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026a3c:	b1b9      	cbz	r1, 8026a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026a3e:	4453      	add	r3, sl
 8026a40:	0858      	lsrs	r0, r3, #1
 8026a42:	07da      	lsls	r2, r3, #31
 8026a44:	5c38      	ldrb	r0, [r7, r0]
 8026a46:	bf54      	ite	pl
 8026a48:	f000 000f 	andpl.w	r0, r0, #15
 8026a4c:	1100      	asrmi	r0, r0, #4
 8026a4e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026a52:	b2c0      	uxtb	r0, r0
 8026a54:	900a      	str	r0, [sp, #40]	; 0x28
 8026a56:	1c58      	adds	r0, r3, #1
 8026a58:	0843      	lsrs	r3, r0, #1
 8026a5a:	07c2      	lsls	r2, r0, #31
 8026a5c:	5cfb      	ldrb	r3, [r7, r3]
 8026a5e:	bf54      	ite	pl
 8026a60:	f003 030f 	andpl.w	r3, r3, #15
 8026a64:	111b      	asrmi	r3, r3, #4
 8026a66:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026a6a:	b2db      	uxtb	r3, r3
 8026a6c:	930e      	str	r3, [sp, #56]	; 0x38
 8026a6e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8026a72:	b289      	uxth	r1, r1
 8026a74:	fb02 f301 	mul.w	r3, r2, r1
 8026a78:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026a7c:	0112      	lsls	r2, r2, #4
 8026a7e:	b289      	uxth	r1, r1
 8026a80:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026a84:	1a40      	subs	r0, r0, r1
 8026a86:	fa1f fe80 	uxth.w	lr, r0
 8026a8a:	1ad2      	subs	r2, r2, r3
 8026a8c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026a8e:	b292      	uxth	r2, r2
 8026a90:	4342      	muls	r2, r0
 8026a92:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8026a96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026a98:	fb01 c102 	mla	r1, r1, r2, ip
 8026a9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026a9e:	fb03 1302 	mla	r3, r3, r2, r1
 8026aa2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026aa6:	2bff      	cmp	r3, #255	; 0xff
 8026aa8:	f040 8093 	bne.w	8026bd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026aac:	4bbe      	ldr	r3, [pc, #760]	; (8026da8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026aae:	681a      	ldr	r2, [r3, #0]
 8026ab0:	4bbe      	ldr	r3, [pc, #760]	; (8026dac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026ab2:	0951      	lsrs	r1, r2, #5
 8026ab4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026ab8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026abc:	430b      	orrs	r3, r1
 8026abe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026ac2:	4313      	orrs	r3, r2
 8026ac4:	f8a8 3000 	strh.w	r3, [r8]
 8026ac8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026aca:	441c      	add	r4, r3
 8026acc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ace:	441e      	add	r6, r3
 8026ad0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026ad2:	3b01      	subs	r3, #1
 8026ad4:	f108 0802 	add.w	r8, r8, #2
 8026ad8:	9309      	str	r3, [sp, #36]	; 0x24
 8026ada:	e76c      	b.n	80269b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026adc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026ade:	441c      	add	r4, r3
 8026ae0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ae2:	3d01      	subs	r5, #1
 8026ae4:	441e      	add	r6, r3
 8026ae6:	f109 0902 	add.w	r9, r9, #2
 8026aea:	e744      	b.n	8026976 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026aec:	d021      	beq.n	8026b32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026aee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026af0:	1e6b      	subs	r3, r5, #1
 8026af2:	fb00 4003 	mla	r0, r0, r3, r4
 8026af6:	1400      	asrs	r0, r0, #16
 8026af8:	f53f af59 	bmi.w	80269ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026afc:	3901      	subs	r1, #1
 8026afe:	4288      	cmp	r0, r1
 8026b00:	f6bf af55 	bge.w	80269ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026b04:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026b06:	fb01 6303 	mla	r3, r1, r3, r6
 8026b0a:	141b      	asrs	r3, r3, #16
 8026b0c:	f53f af4f 	bmi.w	80269ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026b10:	3a01      	subs	r2, #1
 8026b12:	4293      	cmp	r3, r2
 8026b14:	f6bf af4b 	bge.w	80269ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026b18:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026b1c:	9308      	str	r3, [sp, #32]
 8026b1e:	46a8      	mov	r8, r5
 8026b20:	46ce      	mov	lr, r9
 8026b22:	f1b8 0f00 	cmp.w	r8, #0
 8026b26:	f300 80b5 	bgt.w	8026c94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026b2a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026b2e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026b32:	9b07      	ldr	r3, [sp, #28]
 8026b34:	2b00      	cmp	r3, #0
 8026b36:	f340 817d 	ble.w	8026e34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026b3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026b3e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026b42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026b46:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026b48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026b4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026b50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026b54:	eef0 6a62 	vmov.f32	s13, s5
 8026b58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026b5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026b64:	ee16 4a90 	vmov	r4, s13
 8026b68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026b6c:	eef0 6a43 	vmov.f32	s13, s6
 8026b70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026b74:	ee12 2a90 	vmov	r2, s5
 8026b78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026b7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026b80:	ee13 2a10 	vmov	r2, s6
 8026b84:	931f      	str	r3, [sp, #124]	; 0x7c
 8026b86:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026b88:	fb92 f3f3 	sdiv	r3, r2, r3
 8026b8c:	9320      	str	r3, [sp, #128]	; 0x80
 8026b8e:	9b07      	ldr	r3, [sp, #28]
 8026b90:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026b92:	3b01      	subs	r3, #1
 8026b94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b98:	9307      	str	r3, [sp, #28]
 8026b9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026b9c:	ee16 6a90 	vmov	r6, s13
 8026ba0:	bf14      	ite	ne
 8026ba2:	461d      	movne	r5, r3
 8026ba4:	4615      	moveq	r5, r2
 8026ba6:	eeb0 3a67 	vmov.f32	s6, s15
 8026baa:	eef0 2a47 	vmov.f32	s5, s14
 8026bae:	e6d3      	b.n	8026958 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026bb0:	2900      	cmp	r1, #0
 8026bb2:	f43f af5c 	beq.w	8026a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026bb6:	eb0a 0003 	add.w	r0, sl, r3
 8026bba:	0843      	lsrs	r3, r0, #1
 8026bbc:	07c0      	lsls	r0, r0, #31
 8026bbe:	5cfb      	ldrb	r3, [r7, r3]
 8026bc0:	bf54      	ite	pl
 8026bc2:	f003 030f 	andpl.w	r3, r3, #15
 8026bc6:	111b      	asrmi	r3, r3, #4
 8026bc8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026bcc:	b2db      	uxtb	r3, r3
 8026bce:	930a      	str	r3, [sp, #40]	; 0x28
 8026bd0:	e74d      	b.n	8026a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026bd2:	2b00      	cmp	r3, #0
 8026bd4:	f43f af78 	beq.w	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026bd8:	4a73      	ldr	r2, [pc, #460]	; (8026da8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026bda:	f8b8 c000 	ldrh.w	ip, [r8]
 8026bde:	6810      	ldr	r0, [r2, #0]
 8026be0:	fa1f fe83 	uxth.w	lr, r3
 8026be4:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026be8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026bec:	43db      	mvns	r3, r3
 8026bee:	b2db      	uxtb	r3, r3
 8026bf0:	fb12 f20e 	smulbb	r2, r2, lr
 8026bf4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026bf8:	fb01 2103 	mla	r1, r1, r3, r2
 8026bfc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026c00:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026c04:	b2c0      	uxtb	r0, r0
 8026c06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026c0a:	fb1b fb0e 	smulbb	fp, fp, lr
 8026c0e:	b289      	uxth	r1, r1
 8026c10:	fb10 fe0e 	smulbb	lr, r0, lr
 8026c14:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026c18:	fa5f fc8c 	uxtb.w	ip, ip
 8026c1c:	fb02 b203 	mla	r2, r2, r3, fp
 8026c20:	1c48      	adds	r0, r1, #1
 8026c22:	fb0c e303 	mla	r3, ip, r3, lr
 8026c26:	b292      	uxth	r2, r2
 8026c28:	b29b      	uxth	r3, r3
 8026c2a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026c2e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8026c32:	f102 0b01 	add.w	fp, r2, #1
 8026c36:	1c59      	adds	r1, r3, #1
 8026c38:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026c3c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026c40:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026c44:	0952      	lsrs	r2, r2, #5
 8026c46:	4301      	orrs	r1, r0
 8026c48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026c4c:	4311      	orrs	r1, r2
 8026c4e:	f8a8 1000 	strh.w	r1, [r8]
 8026c52:	e739      	b.n	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c54:	f113 0b01 	adds.w	fp, r3, #1
 8026c58:	f53f af36 	bmi.w	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c5c:	45dc      	cmp	ip, fp
 8026c5e:	f6ff af33 	blt.w	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c62:	f110 0b01 	adds.w	fp, r0, #1
 8026c66:	f53f af2f 	bmi.w	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c6a:	45de      	cmp	lr, fp
 8026c6c:	f6ff af2c 	blt.w	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c70:	9a08      	ldr	r2, [sp, #32]
 8026c72:	9302      	str	r3, [sp, #8]
 8026c74:	fa0f f38e 	sxth.w	r3, lr
 8026c78:	9301      	str	r3, [sp, #4]
 8026c7a:	fa0f f38c 	sxth.w	r3, ip
 8026c7e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026c82:	9105      	str	r1, [sp, #20]
 8026c84:	9300      	str	r3, [sp, #0]
 8026c86:	463a      	mov	r2, r7
 8026c88:	4653      	mov	r3, sl
 8026c8a:	4641      	mov	r1, r8
 8026c8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026c8e:	f7ff fd73 	bl	8026778 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8026c92:	e719      	b.n	8026ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c94:	9906      	ldr	r1, [sp, #24]
 8026c96:	1422      	asrs	r2, r4, #16
 8026c98:	1433      	asrs	r3, r6, #16
 8026c9a:	fb01 2303 	mla	r3, r1, r3, r2
 8026c9e:	085a      	lsrs	r2, r3, #1
 8026ca0:	07d9      	lsls	r1, r3, #31
 8026ca2:	5cba      	ldrb	r2, [r7, r2]
 8026ca4:	bf54      	ite	pl
 8026ca6:	f002 020f 	andpl.w	r2, r2, #15
 8026caa:	1112      	asrmi	r2, r2, #4
 8026cac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026cb0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026cb4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026cb8:	b2d2      	uxtb	r2, r2
 8026cba:	2800      	cmp	r0, #0
 8026cbc:	d062      	beq.n	8026d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8026cbe:	f103 0a01 	add.w	sl, r3, #1
 8026cc2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026cc6:	f01a 0f01 	tst.w	sl, #1
 8026cca:	5c79      	ldrb	r1, [r7, r1]
 8026ccc:	bf0c      	ite	eq
 8026cce:	f001 010f 	andeq.w	r1, r1, #15
 8026cd2:	1109      	asrne	r1, r1, #4
 8026cd4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026cd8:	b2c9      	uxtb	r1, r1
 8026cda:	910f      	str	r1, [sp, #60]	; 0x3c
 8026cdc:	f1bc 0f00 	cmp.w	ip, #0
 8026ce0:	d019      	beq.n	8026d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026ce2:	9908      	ldr	r1, [sp, #32]
 8026ce4:	440b      	add	r3, r1
 8026ce6:	0859      	lsrs	r1, r3, #1
 8026ce8:	f013 0f01 	tst.w	r3, #1
 8026cec:	5c79      	ldrb	r1, [r7, r1]
 8026cee:	bf0c      	ite	eq
 8026cf0:	f001 010f 	andeq.w	r1, r1, #15
 8026cf4:	1109      	asrne	r1, r1, #4
 8026cf6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026cfa:	b2c9      	uxtb	r1, r1
 8026cfc:	3301      	adds	r3, #1
 8026cfe:	910b      	str	r1, [sp, #44]	; 0x2c
 8026d00:	0859      	lsrs	r1, r3, #1
 8026d02:	07db      	lsls	r3, r3, #31
 8026d04:	5c79      	ldrb	r1, [r7, r1]
 8026d06:	bf54      	ite	pl
 8026d08:	f001 010f 	andpl.w	r1, r1, #15
 8026d0c:	1109      	asrmi	r1, r1, #4
 8026d0e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026d12:	b2c9      	uxtb	r1, r1
 8026d14:	9110      	str	r1, [sp, #64]	; 0x40
 8026d16:	b280      	uxth	r0, r0
 8026d18:	fa1f fc8c 	uxth.w	ip, ip
 8026d1c:	fb00 f30c 	mul.w	r3, r0, ip
 8026d20:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026d24:	0100      	lsls	r0, r0, #4
 8026d26:	fa1f fc8c 	uxth.w	ip, ip
 8026d2a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026d2e:	eba1 010c 	sub.w	r1, r1, ip
 8026d32:	fa1f fa81 	uxth.w	sl, r1
 8026d36:	1ac0      	subs	r0, r0, r3
 8026d38:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026d3a:	b280      	uxth	r0, r0
 8026d3c:	4348      	muls	r0, r1
 8026d3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026d40:	fb02 020a 	mla	r2, r2, sl, r0
 8026d44:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026d48:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026d4a:	fb03 c302 	mla	r3, r3, r2, ip
 8026d4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026d52:	2bff      	cmp	r3, #255	; 0xff
 8026d54:	d12c      	bne.n	8026db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026d56:	4b14      	ldr	r3, [pc, #80]	; (8026da8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026d58:	681a      	ldr	r2, [r3, #0]
 8026d5a:	4b14      	ldr	r3, [pc, #80]	; (8026dac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026d5c:	0951      	lsrs	r1, r2, #5
 8026d5e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026d62:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026d66:	430b      	orrs	r3, r1
 8026d68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026d6c:	4313      	orrs	r3, r2
 8026d6e:	f8ae 3000 	strh.w	r3, [lr]
 8026d72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026d74:	441c      	add	r4, r3
 8026d76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d78:	f10e 0e02 	add.w	lr, lr, #2
 8026d7c:	441e      	add	r6, r3
 8026d7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8026d82:	e6ce      	b.n	8026b22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026d84:	f1bc 0f00 	cmp.w	ip, #0
 8026d88:	d0c5      	beq.n	8026d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026d8a:	9908      	ldr	r1, [sp, #32]
 8026d8c:	440b      	add	r3, r1
 8026d8e:	0859      	lsrs	r1, r3, #1
 8026d90:	07db      	lsls	r3, r3, #31
 8026d92:	5c79      	ldrb	r1, [r7, r1]
 8026d94:	bf54      	ite	pl
 8026d96:	f001 010f 	andpl.w	r1, r1, #15
 8026d9a:	1109      	asrmi	r1, r1, #4
 8026d9c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026da0:	b2c9      	uxtb	r1, r1
 8026da2:	910b      	str	r1, [sp, #44]	; 0x2c
 8026da4:	e7b7      	b.n	8026d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026da6:	bf00      	nop
 8026da8:	200138c4 	.word	0x200138c4
 8026dac:	fffff800 	.word	0xfffff800
 8026db0:	2b00      	cmp	r3, #0
 8026db2:	d0de      	beq.n	8026d72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026db4:	4a21      	ldr	r2, [pc, #132]	; (8026e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026db6:	f8be c000 	ldrh.w	ip, [lr]
 8026dba:	6810      	ldr	r0, [r2, #0]
 8026dbc:	fa1f fa83 	uxth.w	sl, r3
 8026dc0:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026dc4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026dc8:	43db      	mvns	r3, r3
 8026dca:	b2db      	uxtb	r3, r3
 8026dcc:	fb12 f20a 	smulbb	r2, r2, sl
 8026dd0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026dd4:	fb01 2103 	mla	r1, r1, r3, r2
 8026dd8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026ddc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026de0:	b2c0      	uxtb	r0, r0
 8026de2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026de6:	fa5f fc8c 	uxtb.w	ip, ip
 8026dea:	fb10 f00a 	smulbb	r0, r0, sl
 8026dee:	fb0c 0003 	mla	r0, ip, r3, r0
 8026df2:	b289      	uxth	r1, r1
 8026df4:	fb1b fb0a 	smulbb	fp, fp, sl
 8026df8:	b280      	uxth	r0, r0
 8026dfa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026dfe:	fb02 b203 	mla	r2, r2, r3, fp
 8026e02:	1c4b      	adds	r3, r1, #1
 8026e04:	f100 0b01 	add.w	fp, r0, #1
 8026e08:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026e0c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026e10:	b292      	uxth	r2, r2
 8026e12:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026e16:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026e1a:	ea4b 0101 	orr.w	r1, fp, r1
 8026e1e:	f102 0b01 	add.w	fp, r2, #1
 8026e22:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026e26:	0952      	lsrs	r2, r2, #5
 8026e28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026e2c:	4311      	orrs	r1, r2
 8026e2e:	f8ae 1000 	strh.w	r1, [lr]
 8026e32:	e79e      	b.n	8026d72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026e34:	b013      	add	sp, #76	; 0x4c
 8026e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e3a:	bf00      	nop
 8026e3c:	200138c4 	.word	0x200138c4

08026e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026e40:	b570      	push	{r4, r5, r6, lr}
 8026e42:	1208      	asrs	r0, r1, #8
 8026e44:	b29e      	uxth	r6, r3
 8026e46:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026e4a:	1213      	asrs	r3, r2, #8
 8026e4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026e50:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026e54:	fb13 f305 	smulbb	r3, r3, r5
 8026e58:	fb10 f006 	smulbb	r0, r0, r6
 8026e5c:	4418      	add	r0, r3
 8026e5e:	10cc      	asrs	r4, r1, #3
 8026e60:	10d3      	asrs	r3, r2, #3
 8026e62:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026e66:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026e6a:	fb13 f305 	smulbb	r3, r3, r5
 8026e6e:	fb14 f406 	smulbb	r4, r4, r6
 8026e72:	00c9      	lsls	r1, r1, #3
 8026e74:	00d2      	lsls	r2, r2, #3
 8026e76:	441c      	add	r4, r3
 8026e78:	b2d2      	uxtb	r2, r2
 8026e7a:	b2cb      	uxtb	r3, r1
 8026e7c:	fb12 f205 	smulbb	r2, r2, r5
 8026e80:	b280      	uxth	r0, r0
 8026e82:	fb13 f306 	smulbb	r3, r3, r6
 8026e86:	4413      	add	r3, r2
 8026e88:	1c42      	adds	r2, r0, #1
 8026e8a:	b29b      	uxth	r3, r3
 8026e8c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026e90:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026e94:	1c58      	adds	r0, r3, #1
 8026e96:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026e9a:	b2a4      	uxth	r4, r4
 8026e9c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026ea0:	4310      	orrs	r0, r2
 8026ea2:	1c62      	adds	r2, r4, #1
 8026ea4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026ea8:	0964      	lsrs	r4, r4, #5
 8026eaa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026eae:	4320      	orrs	r0, r4
 8026eb0:	bd70      	pop	{r4, r5, r6, pc}
	...

08026eb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026eb8:	b08f      	sub	sp, #60	; 0x3c
 8026eba:	461c      	mov	r4, r3
 8026ebc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026ec0:	9004      	str	r0, [sp, #16]
 8026ec2:	460d      	mov	r5, r1
 8026ec4:	4616      	mov	r6, r2
 8026ec6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026ec8:	2f00      	cmp	r7, #0
 8026eca:	f000 80f6 	beq.w	80270ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8026ece:	6820      	ldr	r0, [r4, #0]
 8026ed0:	6861      	ldr	r1, [r4, #4]
 8026ed2:	aa0a      	add	r2, sp, #40	; 0x28
 8026ed4:	c203      	stmia	r2!, {r0, r1}
 8026ed6:	6818      	ldr	r0, [r3, #0]
 8026ed8:	6859      	ldr	r1, [r3, #4]
 8026eda:	aa0c      	add	r2, sp, #48	; 0x30
 8026edc:	c203      	stmia	r2!, {r0, r1}
 8026ede:	a80a      	add	r0, sp, #40	; 0x28
 8026ee0:	f7ef fa5e 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026ee4:	4621      	mov	r1, r4
 8026ee6:	a80c      	add	r0, sp, #48	; 0x30
 8026ee8:	f7ef fa9e 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026eec:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026ef0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026ef4:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026ef8:	f002 0301 	and.w	r3, r2, #1
 8026efc:	9306      	str	r3, [sp, #24]
 8026efe:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026f02:	f003 0101 	and.w	r1, r3, #1
 8026f06:	9105      	str	r1, [sp, #20]
 8026f08:	9805      	ldr	r0, [sp, #20]
 8026f0a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026f0e:	4403      	add	r3, r0
 8026f10:	fb01 2303 	mla	r3, r1, r3, r2
 8026f14:	f04f 0802 	mov.w	r8, #2
 8026f18:	fb93 f3f8 	sdiv	r3, r3, r8
 8026f1c:	441d      	add	r5, r3
 8026f1e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026f22:	441a      	add	r2, r3
 8026f24:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026f28:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026f2c:	4419      	add	r1, r3
 8026f2e:	4b64      	ldr	r3, [pc, #400]	; (80270c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026f30:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026f34:	6818      	ldr	r0, [r3, #0]
 8026f36:	6803      	ldr	r3, [r0, #0]
 8026f38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026f3a:	4798      	blx	r3
 8026f3c:	4a61      	ldr	r2, [pc, #388]	; (80270c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8026f3e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026f42:	8813      	ldrh	r3, [r2, #0]
 8026f44:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026f48:	2fff      	cmp	r7, #255	; 0xff
 8026f4a:	fb03 a404 	mla	r4, r3, r4, sl
 8026f4e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026f52:	f106 0604 	add.w	r6, r6, #4
 8026f56:	4611      	mov	r1, r2
 8026f58:	fb03 fb0b 	mul.w	fp, r3, fp
 8026f5c:	d06b      	beq.n	8027036 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8026f5e:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8026f62:	9303      	str	r3, [sp, #12]
 8026f64:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026f68:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026f6c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026f70:	9b07      	ldr	r3, [sp, #28]
 8026f72:	42a3      	cmp	r3, r4
 8026f74:	f240 809c 	bls.w	80270b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026f78:	9b06      	ldr	r3, [sp, #24]
 8026f7a:	2b00      	cmp	r3, #0
 8026f7c:	d039      	beq.n	8026ff2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8026f7e:	782b      	ldrb	r3, [r5, #0]
 8026f80:	8822      	ldrh	r2, [r4, #0]
 8026f82:	9804      	ldr	r0, [sp, #16]
 8026f84:	f003 030f 	and.w	r3, r3, #15
 8026f88:	f105 0801 	add.w	r8, r5, #1
 8026f8c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026f90:	9b03      	ldr	r3, [sp, #12]
 8026f92:	9300      	str	r3, [sp, #0]
 8026f94:	463b      	mov	r3, r7
 8026f96:	f7ff ff53 	bl	8026e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026f9a:	f824 0b02 	strh.w	r0, [r4], #2
 8026f9e:	f109 3bff 	add.w	fp, r9, #4294967295
 8026fa2:	f1bb 0f01 	cmp.w	fp, #1
 8026fa6:	46a2      	mov	sl, r4
 8026fa8:	f104 0404 	add.w	r4, r4, #4
 8026fac:	dd24      	ble.n	8026ff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8026fae:	f898 3000 	ldrb.w	r3, [r8]
 8026fb2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026fb6:	9804      	ldr	r0, [sp, #16]
 8026fb8:	091b      	lsrs	r3, r3, #4
 8026fba:	f1ab 0b02 	sub.w	fp, fp, #2
 8026fbe:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026fc2:	9b03      	ldr	r3, [sp, #12]
 8026fc4:	9300      	str	r3, [sp, #0]
 8026fc6:	463b      	mov	r3, r7
 8026fc8:	f7ff ff3a 	bl	8026e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026fcc:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026fd0:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026fd4:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026fd8:	9804      	ldr	r0, [sp, #16]
 8026fda:	f003 030f 	and.w	r3, r3, #15
 8026fde:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026fe2:	9b03      	ldr	r3, [sp, #12]
 8026fe4:	9300      	str	r3, [sp, #0]
 8026fe6:	463b      	mov	r3, r7
 8026fe8:	f7ff ff2a 	bl	8026e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026fec:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026ff0:	e7d7      	b.n	8026fa2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026ff2:	46a8      	mov	r8, r5
 8026ff4:	46cb      	mov	fp, r9
 8026ff6:	e7d4      	b.n	8026fa2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026ff8:	d10e      	bne.n	8027018 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026ffa:	f898 3000 	ldrb.w	r3, [r8]
 8026ffe:	f8ba 2000 	ldrh.w	r2, [sl]
 8027002:	9804      	ldr	r0, [sp, #16]
 8027004:	091b      	lsrs	r3, r3, #4
 8027006:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802700a:	9b03      	ldr	r3, [sp, #12]
 802700c:	9300      	str	r3, [sp, #0]
 802700e:	463b      	mov	r3, r7
 8027010:	f7ff ff16 	bl	8026e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027014:	f82a 0b02 	strh.w	r0, [sl], #2
 8027018:	9b08      	ldr	r3, [sp, #32]
 802701a:	9a05      	ldr	r2, [sp, #20]
 802701c:	881c      	ldrh	r4, [r3, #0]
 802701e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027022:	eba4 0409 	sub.w	r4, r4, r9
 8027026:	4413      	add	r3, r2
 8027028:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802702c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802702e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027032:	441d      	add	r5, r3
 8027034:	e79c      	b.n	8026f70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8027036:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802703a:	45a3      	cmp	fp, r4
 802703c:	d938      	bls.n	80270b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802703e:	9b06      	ldr	r3, [sp, #24]
 8027040:	b1f3      	cbz	r3, 8027080 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8027042:	782b      	ldrb	r3, [r5, #0]
 8027044:	f003 030f 	and.w	r3, r3, #15
 8027048:	1c6a      	adds	r2, r5, #1
 802704a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802704e:	8023      	strh	r3, [r4, #0]
 8027050:	f109 30ff 	add.w	r0, r9, #4294967295
 8027054:	3402      	adds	r4, #2
 8027056:	2801      	cmp	r0, #1
 8027058:	4623      	mov	r3, r4
 802705a:	f104 0404 	add.w	r4, r4, #4
 802705e:	dd12      	ble.n	8027086 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027060:	7813      	ldrb	r3, [r2, #0]
 8027062:	091b      	lsrs	r3, r3, #4
 8027064:	3802      	subs	r0, #2
 8027066:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802706a:	f824 3c04 	strh.w	r3, [r4, #-4]
 802706e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8027072:	f003 030f 	and.w	r3, r3, #15
 8027076:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802707a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802707e:	e7ea      	b.n	8027056 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027080:	462a      	mov	r2, r5
 8027082:	4648      	mov	r0, r9
 8027084:	e7e7      	b.n	8027056 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027086:	d106      	bne.n	8027096 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027088:	7812      	ldrb	r2, [r2, #0]
 802708a:	0912      	lsrs	r2, r2, #4
 802708c:	3302      	adds	r3, #2
 802708e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8027092:	f823 2c02 	strh.w	r2, [r3, #-2]
 8027096:	880c      	ldrh	r4, [r1, #0]
 8027098:	9a05      	ldr	r2, [sp, #20]
 802709a:	eba4 0409 	sub.w	r4, r4, r9
 802709e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80270a2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80270a6:	4413      	add	r3, r2
 80270a8:	fb93 f3f8 	sdiv	r3, r3, r8
 80270ac:	441d      	add	r5, r3
 80270ae:	e7c4      	b.n	802703a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80270b0:	4b03      	ldr	r3, [pc, #12]	; (80270c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80270b2:	6818      	ldr	r0, [r3, #0]
 80270b4:	6803      	ldr	r3, [r0, #0]
 80270b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80270b8:	4798      	blx	r3
 80270ba:	b00f      	add	sp, #60	; 0x3c
 80270bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80270c0:	200138b4 	.word	0x200138b4
 80270c4:	200138ae 	.word	0x200138ae

080270c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80270c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80270ca:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80270ce:	2dff      	cmp	r5, #255	; 0xff
 80270d0:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80270d4:	d10c      	bne.n	80270f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80270d6:	2bff      	cmp	r3, #255	; 0xff
 80270d8:	d10a      	bne.n	80270f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80270da:	4b25      	ldr	r3, [pc, #148]	; (8027170 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80270dc:	0948      	lsrs	r0, r1, #5
 80270de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80270e2:	403b      	ands	r3, r7
 80270e4:	4318      	orrs	r0, r3
 80270e6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80270ea:	4308      	orrs	r0, r1
 80270ec:	b280      	uxth	r0, r0
 80270ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80270f0:	fb15 f503 	smulbb	r5, r5, r3
 80270f4:	b2ab      	uxth	r3, r5
 80270f6:	1c5d      	adds	r5, r3, #1
 80270f8:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80270fc:	1214      	asrs	r4, r2, #8
 80270fe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8027102:	fa1f fc85 	uxth.w	ip, r5
 8027106:	10d6      	asrs	r6, r2, #3
 8027108:	00d0      	lsls	r0, r2, #3
 802710a:	43ed      	mvns	r5, r5
 802710c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027110:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8027114:	b2eb      	uxtb	r3, r5
 8027116:	b2c0      	uxtb	r0, r0
 8027118:	fb12 f20c 	smulbb	r2, r2, ip
 802711c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027120:	fb04 2403 	mla	r4, r4, r3, r2
 8027124:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8027128:	b2c8      	uxtb	r0, r1
 802712a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802712e:	b2fd      	uxtb	r5, r7
 8027130:	fb10 f00c 	smulbb	r0, r0, ip
 8027134:	b2a4      	uxth	r4, r4
 8027136:	fb02 0003 	mla	r0, r2, r3, r0
 802713a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802713e:	fb15 f50c 	smulbb	r5, r5, ip
 8027142:	fb06 5503 	mla	r5, r6, r3, r5
 8027146:	b283      	uxth	r3, r0
 8027148:	1c60      	adds	r0, r4, #1
 802714a:	b2ad      	uxth	r5, r5
 802714c:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027150:	1c58      	adds	r0, r3, #1
 8027152:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027156:	1c6b      	adds	r3, r5, #1
 8027158:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802715c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027160:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027164:	096d      	lsrs	r5, r5, #5
 8027166:	4320      	orrs	r0, r4
 8027168:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802716c:	4328      	orrs	r0, r5
 802716e:	e7be      	b.n	80270ee <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027170:	00fff800 	.word	0x00fff800

08027174 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8027174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027178:	461c      	mov	r4, r3
 802717a:	b08d      	sub	sp, #52	; 0x34
 802717c:	460d      	mov	r5, r1
 802717e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027180:	6861      	ldr	r1, [r4, #4]
 8027182:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8027186:	4680      	mov	r8, r0
 8027188:	6820      	ldr	r0, [r4, #0]
 802718a:	4616      	mov	r6, r2
 802718c:	aa08      	add	r2, sp, #32
 802718e:	c203      	stmia	r2!, {r0, r1}
 8027190:	6818      	ldr	r0, [r3, #0]
 8027192:	6859      	ldr	r1, [r3, #4]
 8027194:	aa0a      	add	r2, sp, #40	; 0x28
 8027196:	c203      	stmia	r2!, {r0, r1}
 8027198:	a808      	add	r0, sp, #32
 802719a:	f7ef f901 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802719e:	4621      	mov	r1, r4
 80271a0:	a80a      	add	r0, sp, #40	; 0x28
 80271a2:	f7ef f941 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80271a6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80271aa:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80271ae:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80271b2:	f002 0301 	and.w	r3, r2, #1
 80271b6:	9303      	str	r3, [sp, #12]
 80271b8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80271bc:	f003 0101 	and.w	r1, r3, #1
 80271c0:	9102      	str	r1, [sp, #8]
 80271c2:	9802      	ldr	r0, [sp, #8]
 80271c4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80271c8:	4403      	add	r3, r0
 80271ca:	fb01 2303 	mla	r3, r1, r3, r2
 80271ce:	f04f 0a02 	mov.w	sl, #2
 80271d2:	fb93 f3fa 	sdiv	r3, r3, sl
 80271d6:	441d      	add	r5, r3
 80271d8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80271dc:	441a      	add	r2, r3
 80271de:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80271e2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80271e6:	4a3f      	ldr	r2, [pc, #252]	; (80272e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80271e8:	9205      	str	r2, [sp, #20]
 80271ea:	4419      	add	r1, r3
 80271ec:	6810      	ldr	r0, [r2, #0]
 80271ee:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80271f2:	6803      	ldr	r3, [r0, #0]
 80271f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80271f6:	4798      	blx	r3
 80271f8:	4b3b      	ldr	r3, [pc, #236]	; (80272e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80271fa:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80271fe:	8819      	ldrh	r1, [r3, #0]
 8027200:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8027204:	fb01 c404 	mla	r4, r1, r4, ip
 8027208:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802720c:	434f      	muls	r7, r1
 802720e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8027212:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8027216:	3604      	adds	r6, #4
 8027218:	9204      	str	r2, [sp, #16]
 802721a:	9b04      	ldr	r3, [sp, #16]
 802721c:	429c      	cmp	r4, r3
 802721e:	d258      	bcs.n	80272d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8027220:	9b03      	ldr	r3, [sp, #12]
 8027222:	2b00      	cmp	r3, #0
 8027224:	d034      	beq.n	8027290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8027226:	782b      	ldrb	r3, [r5, #0]
 8027228:	f003 030f 	and.w	r3, r3, #15
 802722c:	1c6f      	adds	r7, r5, #1
 802722e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027232:	0e0b      	lsrs	r3, r1, #24
 8027234:	d006      	beq.n	8027244 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8027236:	8822      	ldrh	r2, [r4, #0]
 8027238:	9300      	str	r3, [sp, #0]
 802723a:	4640      	mov	r0, r8
 802723c:	464b      	mov	r3, r9
 802723e:	f7ff ff43 	bl	80270c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027242:	8020      	strh	r0, [r4, #0]
 8027244:	3402      	adds	r4, #2
 8027246:	f10b 3aff 	add.w	sl, fp, #4294967295
 802724a:	f1ba 0f01 	cmp.w	sl, #1
 802724e:	dd22      	ble.n	8027296 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027250:	783b      	ldrb	r3, [r7, #0]
 8027252:	091b      	lsrs	r3, r3, #4
 8027254:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027258:	0e0b      	lsrs	r3, r1, #24
 802725a:	d006      	beq.n	802726a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802725c:	8822      	ldrh	r2, [r4, #0]
 802725e:	9300      	str	r3, [sp, #0]
 8027260:	4640      	mov	r0, r8
 8027262:	464b      	mov	r3, r9
 8027264:	f7ff ff30 	bl	80270c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027268:	8020      	strh	r0, [r4, #0]
 802726a:	f817 3b01 	ldrb.w	r3, [r7], #1
 802726e:	f003 030f 	and.w	r3, r3, #15
 8027272:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027276:	0e0b      	lsrs	r3, r1, #24
 8027278:	d006      	beq.n	8027288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802727a:	8862      	ldrh	r2, [r4, #2]
 802727c:	9300      	str	r3, [sp, #0]
 802727e:	4640      	mov	r0, r8
 8027280:	464b      	mov	r3, r9
 8027282:	f7ff ff21 	bl	80270c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027286:	8060      	strh	r0, [r4, #2]
 8027288:	3404      	adds	r4, #4
 802728a:	f1aa 0a02 	sub.w	sl, sl, #2
 802728e:	e7dc      	b.n	802724a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027290:	462f      	mov	r7, r5
 8027292:	46da      	mov	sl, fp
 8027294:	e7d9      	b.n	802724a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027296:	d10d      	bne.n	80272b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027298:	783b      	ldrb	r3, [r7, #0]
 802729a:	091b      	lsrs	r3, r3, #4
 802729c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80272a0:	0e0b      	lsrs	r3, r1, #24
 80272a2:	d006      	beq.n	80272b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80272a4:	8822      	ldrh	r2, [r4, #0]
 80272a6:	9300      	str	r3, [sp, #0]
 80272a8:	4640      	mov	r0, r8
 80272aa:	464b      	mov	r3, r9
 80272ac:	f7ff ff0c 	bl	80270c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80272b0:	8020      	strh	r0, [r4, #0]
 80272b2:	3402      	adds	r4, #2
 80272b4:	9b06      	ldr	r3, [sp, #24]
 80272b6:	9a02      	ldr	r2, [sp, #8]
 80272b8:	881b      	ldrh	r3, [r3, #0]
 80272ba:	eba3 030b 	sub.w	r3, r3, fp
 80272be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80272c2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80272c6:	4413      	add	r3, r2
 80272c8:	9a07      	ldr	r2, [sp, #28]
 80272ca:	fb93 f3f2 	sdiv	r3, r3, r2
 80272ce:	441d      	add	r5, r3
 80272d0:	e7a3      	b.n	802721a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80272d2:	9b05      	ldr	r3, [sp, #20]
 80272d4:	6818      	ldr	r0, [r3, #0]
 80272d6:	6803      	ldr	r3, [r0, #0]
 80272d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80272da:	4798      	blx	r3
 80272dc:	b00d      	add	sp, #52	; 0x34
 80272de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80272e2:	bf00      	nop
 80272e4:	200138b4 	.word	0x200138b4
 80272e8:	200138ae 	.word	0x200138ae

080272ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80272ec:	b570      	push	{r4, r5, r6, lr}
 80272ee:	1214      	asrs	r4, r2, #8
 80272f0:	788d      	ldrb	r5, [r1, #2]
 80272f2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80272f6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80272fa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80272fe:	fb15 f503 	smulbb	r5, r5, r3
 8027302:	fb04 5506 	mla	r5, r4, r6, r5
 8027306:	10d0      	asrs	r0, r2, #3
 8027308:	784c      	ldrb	r4, [r1, #1]
 802730a:	7809      	ldrb	r1, [r1, #0]
 802730c:	00d2      	lsls	r2, r2, #3
 802730e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027312:	b2d2      	uxtb	r2, r2
 8027314:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8027318:	fb14 f403 	smulbb	r4, r4, r3
 802731c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8027320:	fb11 f303 	smulbb	r3, r1, r3
 8027324:	fb00 4406 	mla	r4, r0, r6, r4
 8027328:	fb02 3306 	mla	r3, r2, r6, r3
 802732c:	b2ad      	uxth	r5, r5
 802732e:	b29b      	uxth	r3, r3
 8027330:	b2a4      	uxth	r4, r4
 8027332:	1c68      	adds	r0, r5, #1
 8027334:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027338:	1c62      	adds	r2, r4, #1
 802733a:	1c58      	adds	r0, r3, #1
 802733c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027340:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027344:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027348:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802734c:	0964      	lsrs	r4, r4, #5
 802734e:	4328      	orrs	r0, r5
 8027350:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027354:	4320      	orrs	r0, r4
 8027356:	bd70      	pop	{r4, r5, r6, pc}

08027358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802735c:	b08f      	sub	sp, #60	; 0x3c
 802735e:	461c      	mov	r4, r3
 8027360:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027364:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027366:	4682      	mov	sl, r0
 8027368:	460e      	mov	r6, r1
 802736a:	4615      	mov	r5, r2
 802736c:	2f00      	cmp	r7, #0
 802736e:	f000 8142 	beq.w	80275f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8027372:	6820      	ldr	r0, [r4, #0]
 8027374:	6861      	ldr	r1, [r4, #4]
 8027376:	aa0a      	add	r2, sp, #40	; 0x28
 8027378:	c203      	stmia	r2!, {r0, r1}
 802737a:	6818      	ldr	r0, [r3, #0]
 802737c:	6859      	ldr	r1, [r3, #4]
 802737e:	aa0c      	add	r2, sp, #48	; 0x30
 8027380:	c203      	stmia	r2!, {r0, r1}
 8027382:	a80a      	add	r0, sp, #40	; 0x28
 8027384:	f7ef f80c 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027388:	4621      	mov	r1, r4
 802738a:	a80c      	add	r0, sp, #48	; 0x30
 802738c:	f7ef f84c 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027390:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027394:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027398:	f002 0301 	and.w	r3, r2, #1
 802739c:	9306      	str	r3, [sp, #24]
 802739e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80273a2:	f003 0101 	and.w	r1, r3, #1
 80273a6:	9105      	str	r1, [sp, #20]
 80273a8:	9805      	ldr	r0, [sp, #20]
 80273aa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80273ae:	4403      	add	r3, r0
 80273b0:	fb01 2303 	mla	r3, r1, r3, r2
 80273b4:	f04f 0802 	mov.w	r8, #2
 80273b8:	fb93 f3f8 	sdiv	r3, r3, r8
 80273bc:	441e      	add	r6, r3
 80273be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80273c2:	441a      	add	r2, r3
 80273c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80273c8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80273cc:	4419      	add	r1, r3
 80273ce:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80273d2:	9303      	str	r3, [sp, #12]
 80273d4:	4b89      	ldr	r3, [pc, #548]	; (80275fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80273d6:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80273da:	6818      	ldr	r0, [r3, #0]
 80273dc:	6803      	ldr	r3, [r0, #0]
 80273de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80273e0:	4798      	blx	r3
 80273e2:	4a87      	ldr	r2, [pc, #540]	; (8027600 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80273e4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80273e8:	8813      	ldrh	r3, [r2, #0]
 80273ea:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80273ee:	2fff      	cmp	r7, #255	; 0xff
 80273f0:	fb03 9404 	mla	r4, r3, r4, r9
 80273f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80273f8:	f105 0504 	add.w	r5, r5, #4
 80273fc:	4694      	mov	ip, r2
 80273fe:	fb03 f30b 	mul.w	r3, r3, fp
 8027402:	d071      	beq.n	80274e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8027404:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027408:	43f9      	mvns	r1, r7
 802740a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802740e:	b2c9      	uxtb	r1, r1
 8027410:	9104      	str	r1, [sp, #16]
 8027412:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027416:	9b07      	ldr	r3, [sp, #28]
 8027418:	42a3      	cmp	r3, r4
 802741a:	f240 80e7 	bls.w	80275ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802741e:	9b06      	ldr	r3, [sp, #24]
 8027420:	2b00      	cmp	r3, #0
 8027422:	d03d      	beq.n	80274a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8027424:	7831      	ldrb	r1, [r6, #0]
 8027426:	9b04      	ldr	r3, [sp, #16]
 8027428:	8822      	ldrh	r2, [r4, #0]
 802742a:	9300      	str	r3, [sp, #0]
 802742c:	f001 010f 	and.w	r1, r1, #15
 8027430:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027434:	463b      	mov	r3, r7
 8027436:	4429      	add	r1, r5
 8027438:	4650      	mov	r0, sl
 802743a:	f7ff ff57 	bl	80272ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802743e:	9b03      	ldr	r3, [sp, #12]
 8027440:	f824 0b02 	strh.w	r0, [r4], #2
 8027444:	f106 0801 	add.w	r8, r6, #1
 8027448:	f103 3bff 	add.w	fp, r3, #4294967295
 802744c:	f1bb 0f01 	cmp.w	fp, #1
 8027450:	46a1      	mov	r9, r4
 8027452:	f104 0404 	add.w	r4, r4, #4
 8027456:	dd27      	ble.n	80274a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027458:	f898 1000 	ldrb.w	r1, [r8]
 802745c:	9b04      	ldr	r3, [sp, #16]
 802745e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8027462:	9300      	str	r3, [sp, #0]
 8027464:	0909      	lsrs	r1, r1, #4
 8027466:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802746a:	463b      	mov	r3, r7
 802746c:	4429      	add	r1, r5
 802746e:	4650      	mov	r0, sl
 8027470:	f7ff ff3c 	bl	80272ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027474:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027478:	f818 1b01 	ldrb.w	r1, [r8], #1
 802747c:	9b04      	ldr	r3, [sp, #16]
 802747e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027482:	9300      	str	r3, [sp, #0]
 8027484:	f001 010f 	and.w	r1, r1, #15
 8027488:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802748c:	463b      	mov	r3, r7
 802748e:	4429      	add	r1, r5
 8027490:	4650      	mov	r0, sl
 8027492:	f7ff ff2b 	bl	80272ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027496:	f1ab 0b02 	sub.w	fp, fp, #2
 802749a:	f824 0c02 	strh.w	r0, [r4, #-2]
 802749e:	e7d5      	b.n	802744c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80274a0:	46b0      	mov	r8, r6
 80274a2:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80274a6:	e7d1      	b.n	802744c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80274a8:	d10f      	bne.n	80274ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80274aa:	f898 1000 	ldrb.w	r1, [r8]
 80274ae:	9b04      	ldr	r3, [sp, #16]
 80274b0:	f8b9 2000 	ldrh.w	r2, [r9]
 80274b4:	9300      	str	r3, [sp, #0]
 80274b6:	0909      	lsrs	r1, r1, #4
 80274b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80274bc:	463b      	mov	r3, r7
 80274be:	4429      	add	r1, r5
 80274c0:	4650      	mov	r0, sl
 80274c2:	f7ff ff13 	bl	80272ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80274c6:	f829 0b02 	strh.w	r0, [r9], #2
 80274ca:	9b08      	ldr	r3, [sp, #32]
 80274cc:	9a05      	ldr	r2, [sp, #20]
 80274ce:	881c      	ldrh	r4, [r3, #0]
 80274d0:	9b03      	ldr	r3, [sp, #12]
 80274d2:	1ae4      	subs	r4, r4, r3
 80274d4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80274d8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80274dc:	4413      	add	r3, r2
 80274de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80274e0:	fb93 f3f2 	sdiv	r3, r3, r2
 80274e4:	441e      	add	r6, r3
 80274e6:	e796      	b.n	8027416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80274e8:	4f46      	ldr	r7, [pc, #280]	; (8027604 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80274ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80274ee:	42a3      	cmp	r3, r4
 80274f0:	d97c      	bls.n	80275ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80274f2:	9a06      	ldr	r2, [sp, #24]
 80274f4:	2a00      	cmp	r2, #0
 80274f6:	d054      	beq.n	80275a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80274f8:	7830      	ldrb	r0, [r6, #0]
 80274fa:	f000 000f 	and.w	r0, r0, #15
 80274fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027502:	eb05 0e00 	add.w	lr, r5, r0
 8027506:	5c28      	ldrb	r0, [r5, r0]
 8027508:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802750c:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027510:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027514:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027518:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802751c:	ea42 020e 	orr.w	r2, r2, lr
 8027520:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027524:	f824 2b02 	strh.w	r2, [r4], #2
 8027528:	9a03      	ldr	r2, [sp, #12]
 802752a:	1c71      	adds	r1, r6, #1
 802752c:	f102 3eff 	add.w	lr, r2, #4294967295
 8027530:	f1be 0f01 	cmp.w	lr, #1
 8027534:	4620      	mov	r0, r4
 8027536:	f104 0404 	add.w	r4, r4, #4
 802753a:	dd36      	ble.n	80275aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 802753c:	7808      	ldrb	r0, [r1, #0]
 802753e:	0900      	lsrs	r0, r0, #4
 8027540:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027544:	eb05 0a00 	add.w	sl, r5, r0
 8027548:	f1ae 0e02 	sub.w	lr, lr, #2
 802754c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027550:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027554:	00d2      	lsls	r2, r2, #3
 8027556:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802755a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802755e:	ea49 0202 	orr.w	r2, r9, r2
 8027562:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027566:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802756a:	f824 2c04 	strh.w	r2, [r4, #-4]
 802756e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027572:	f000 000f 	and.w	r0, r0, #15
 8027576:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802757a:	eb05 0a00 	add.w	sl, r5, r0
 802757e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027582:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027586:	00d2      	lsls	r2, r2, #3
 8027588:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802758c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027590:	ea49 0202 	orr.w	r2, r9, r2
 8027594:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027598:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802759c:	f824 2c02 	strh.w	r2, [r4, #-2]
 80275a0:	e7c6      	b.n	8027530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80275a2:	4631      	mov	r1, r6
 80275a4:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80275a8:	e7c2      	b.n	8027530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80275aa:	d111      	bne.n	80275d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80275ac:	7809      	ldrb	r1, [r1, #0]
 80275ae:	0909      	lsrs	r1, r1, #4
 80275b0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80275b4:	186c      	adds	r4, r5, r1
 80275b6:	5c69      	ldrb	r1, [r5, r1]
 80275b8:	78a2      	ldrb	r2, [r4, #2]
 80275ba:	7864      	ldrb	r4, [r4, #1]
 80275bc:	00e4      	lsls	r4, r4, #3
 80275be:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80275c2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80275c6:	4322      	orrs	r2, r4
 80275c8:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80275cc:	f820 2b02 	strh.w	r2, [r0], #2
 80275d0:	9a03      	ldr	r2, [sp, #12]
 80275d2:	f8bc 4000 	ldrh.w	r4, [ip]
 80275d6:	9905      	ldr	r1, [sp, #20]
 80275d8:	1aa4      	subs	r4, r4, r2
 80275da:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80275de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80275e2:	440a      	add	r2, r1
 80275e4:	fb92 f2f8 	sdiv	r2, r2, r8
 80275e8:	4416      	add	r6, r2
 80275ea:	e780      	b.n	80274ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80275ec:	4b03      	ldr	r3, [pc, #12]	; (80275fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80275ee:	6818      	ldr	r0, [r3, #0]
 80275f0:	6803      	ldr	r3, [r0, #0]
 80275f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80275f4:	4798      	blx	r3
 80275f6:	b00f      	add	sp, #60	; 0x3c
 80275f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80275fc:	200138b4 	.word	0x200138b4
 8027600:	200138ae 	.word	0x200138ae
 8027604:	fffff800 	.word	0xfffff800

08027608 <CRC_Lock>:
 8027608:	b530      	push	{r4, r5, lr}
 802760a:	4a20      	ldr	r2, [pc, #128]	; (802768c <CRC_Lock+0x84>)
 802760c:	6813      	ldr	r3, [r2, #0]
 802760e:	f023 0301 	bic.w	r3, r3, #1
 8027612:	6013      	str	r3, [r2, #0]
 8027614:	4b1e      	ldr	r3, [pc, #120]	; (8027690 <CRC_Lock+0x88>)
 8027616:	681a      	ldr	r2, [r3, #0]
 8027618:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 802761c:	4022      	ands	r2, r4
 802761e:	f24c 2540 	movw	r5, #49728	; 0xc240
 8027622:	42aa      	cmp	r2, r5
 8027624:	d005      	beq.n	8027632 <CRC_Lock+0x2a>
 8027626:	681b      	ldr	r3, [r3, #0]
 8027628:	f24c 2270 	movw	r2, #49776	; 0xc270
 802762c:	4023      	ands	r3, r4
 802762e:	4293      	cmp	r3, r2
 8027630:	d124      	bne.n	802767c <CRC_Lock+0x74>
 8027632:	4b18      	ldr	r3, [pc, #96]	; (8027694 <CRC_Lock+0x8c>)
 8027634:	681b      	ldr	r3, [r3, #0]
 8027636:	bb0b      	cbnz	r3, 802767c <CRC_Lock+0x74>
 8027638:	4b17      	ldr	r3, [pc, #92]	; (8027698 <CRC_Lock+0x90>)
 802763a:	681a      	ldr	r2, [r3, #0]
 802763c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027640:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027644:	d00d      	beq.n	8027662 <CRC_Lock+0x5a>
 8027646:	681a      	ldr	r2, [r3, #0]
 8027648:	f240 4483 	movw	r4, #1155	; 0x483
 802764c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027650:	42a2      	cmp	r2, r4
 8027652:	d006      	beq.n	8027662 <CRC_Lock+0x5a>
 8027654:	681b      	ldr	r3, [r3, #0]
 8027656:	f240 4285 	movw	r2, #1157	; 0x485
 802765a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802765e:	4293      	cmp	r3, r2
 8027660:	d10c      	bne.n	802767c <CRC_Lock+0x74>
 8027662:	4b0e      	ldr	r3, [pc, #56]	; (802769c <CRC_Lock+0x94>)
 8027664:	2201      	movs	r2, #1
 8027666:	601a      	str	r2, [r3, #0]
 8027668:	681a      	ldr	r2, [r3, #0]
 802766a:	2a00      	cmp	r2, #0
 802766c:	d1fc      	bne.n	8027668 <CRC_Lock+0x60>
 802766e:	4b0c      	ldr	r3, [pc, #48]	; (80276a0 <CRC_Lock+0x98>)
 8027670:	6018      	str	r0, [r3, #0]
 8027672:	6818      	ldr	r0, [r3, #0]
 8027674:	1a43      	subs	r3, r0, r1
 8027676:	4258      	negs	r0, r3
 8027678:	4158      	adcs	r0, r3
 802767a:	bd30      	pop	{r4, r5, pc}
 802767c:	4b09      	ldr	r3, [pc, #36]	; (80276a4 <CRC_Lock+0x9c>)
 802767e:	2201      	movs	r2, #1
 8027680:	601a      	str	r2, [r3, #0]
 8027682:	681a      	ldr	r2, [r3, #0]
 8027684:	2a00      	cmp	r2, #0
 8027686:	d1fc      	bne.n	8027682 <CRC_Lock+0x7a>
 8027688:	4b07      	ldr	r3, [pc, #28]	; (80276a8 <CRC_Lock+0xa0>)
 802768a:	e7f1      	b.n	8027670 <CRC_Lock+0x68>
 802768c:	e0002000 	.word	0xe0002000
 8027690:	e000ed00 	.word	0xe000ed00
 8027694:	e0042000 	.word	0xe0042000
 8027698:	5c001000 	.word	0x5c001000
 802769c:	58024c08 	.word	0x58024c08
 80276a0:	58024c00 	.word	0x58024c00
 80276a4:	40023008 	.word	0x40023008
 80276a8:	40023000 	.word	0x40023000

080276ac <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80276ac:	6101      	str	r1, [r0, #16]
 80276ae:	4770      	bx	lr

080276b0 <_ZN8touchgfx8Gestures4tickEv>:
 80276b0:	7b83      	ldrb	r3, [r0, #14]
 80276b2:	b14b      	cbz	r3, 80276c8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80276b4:	8903      	ldrh	r3, [r0, #8]
 80276b6:	3301      	adds	r3, #1
 80276b8:	b29b      	uxth	r3, r3
 80276ba:	2b07      	cmp	r3, #7
 80276bc:	8103      	strh	r3, [r0, #8]
 80276be:	bf81      	itttt	hi
 80276c0:	2300      	movhi	r3, #0
 80276c2:	8143      	strhhi	r3, [r0, #10]
 80276c4:	8183      	strhhi	r3, [r0, #12]
 80276c6:	7383      	strbhi	r3, [r0, #14]
 80276c8:	4770      	bx	lr
	...

080276cc <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80276cc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80276d0:	4698      	mov	r8, r3
 80276d2:	8883      	ldrh	r3, [r0, #4]
 80276d4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80276d8:	eba8 0303 	sub.w	r3, r8, r3
 80276dc:	b21b      	sxth	r3, r3
 80276de:	4604      	mov	r4, r0
 80276e0:	2b00      	cmp	r3, #0
 80276e2:	4617      	mov	r7, r2
 80276e4:	4a18      	ldr	r2, [pc, #96]	; (8027748 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80276e6:	9200      	str	r2, [sp, #0]
 80276e8:	bfb8      	it	lt
 80276ea:	425b      	neglt	r3, r3
 80276ec:	8aa2      	ldrh	r2, [r4, #20]
 80276ee:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80276f2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80276f6:	b21b      	sxth	r3, r3
 80276f8:	460e      	mov	r6, r1
 80276fa:	4293      	cmp	r3, r2
 80276fc:	88c1      	ldrh	r1, [r0, #6]
 80276fe:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027702:	f04f 0000 	mov.w	r0, #0
 8027706:	f88d 0004 	strb.w	r0, [sp, #4]
 802770a:	f8ad 500c 	strh.w	r5, [sp, #12]
 802770e:	dc07      	bgt.n	8027720 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027710:	1a69      	subs	r1, r5, r1
 8027712:	b209      	sxth	r1, r1
 8027714:	2900      	cmp	r1, #0
 8027716:	bfb8      	it	lt
 8027718:	4249      	neglt	r1, r1
 802771a:	b209      	sxth	r1, r1
 802771c:	428a      	cmp	r2, r1
 802771e:	da10      	bge.n	8027742 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027720:	6920      	ldr	r0, [r4, #16]
 8027722:	6803      	ldr	r3, [r0, #0]
 8027724:	4669      	mov	r1, sp
 8027726:	685b      	ldr	r3, [r3, #4]
 8027728:	4798      	blx	r3
 802772a:	eba8 0606 	sub.w	r6, r8, r6
 802772e:	2300      	movs	r3, #0
 8027730:	1bef      	subs	r7, r5, r7
 8027732:	2001      	movs	r0, #1
 8027734:	8123      	strh	r3, [r4, #8]
 8027736:	8166      	strh	r6, [r4, #10]
 8027738:	81a7      	strh	r7, [r4, #12]
 802773a:	f8a4 8004 	strh.w	r8, [r4, #4]
 802773e:	80e5      	strh	r5, [r4, #6]
 8027740:	73a0      	strb	r0, [r4, #14]
 8027742:	b004      	add	sp, #16
 8027744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027748:	0803016c 	.word	0x0803016c

0802774c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802774c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802774e:	461e      	mov	r6, r3
 8027750:	1e4b      	subs	r3, r1, #1
 8027752:	2b01      	cmp	r3, #1
 8027754:	b085      	sub	sp, #20
 8027756:	4604      	mov	r4, r0
 8027758:	460d      	mov	r5, r1
 802775a:	4617      	mov	r7, r2
 802775c:	d84b      	bhi.n	80277f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802775e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8027762:	1cd3      	adds	r3, r2, #3
 8027764:	b29b      	uxth	r3, r3
 8027766:	2b06      	cmp	r3, #6
 8027768:	d916      	bls.n	8027798 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802776a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802780c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802776e:	f8cd c004 	str.w	ip, [sp, #4]
 8027772:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027776:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802777a:	6900      	ldr	r0, [r0, #16]
 802777c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027780:	f04f 0c00 	mov.w	ip, #0
 8027784:	f88d c008 	strb.w	ip, [sp, #8]
 8027788:	f8ad 200a 	strh.w	r2, [sp, #10]
 802778c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027790:	6803      	ldr	r3, [r0, #0]
 8027792:	a901      	add	r1, sp, #4
 8027794:	689b      	ldr	r3, [r3, #8]
 8027796:	4798      	blx	r3
 8027798:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802779c:	1cd3      	adds	r3, r2, #3
 802779e:	b29b      	uxth	r3, r3
 80277a0:	2b06      	cmp	r3, #6
 80277a2:	d916      	bls.n	80277d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80277a4:	f8df c064 	ldr.w	ip, [pc, #100]	; 802780c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80277a8:	f8cd c004 	str.w	ip, [sp, #4]
 80277ac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80277b0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80277b4:	6920      	ldr	r0, [r4, #16]
 80277b6:	f8ad 100c 	strh.w	r1, [sp, #12]
 80277ba:	f04f 0c01 	mov.w	ip, #1
 80277be:	f88d c008 	strb.w	ip, [sp, #8]
 80277c2:	f8ad 200a 	strh.w	r2, [sp, #10]
 80277c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80277ca:	6803      	ldr	r3, [r0, #0]
 80277cc:	a901      	add	r1, sp, #4
 80277ce:	689b      	ldr	r3, [r3, #8]
 80277d0:	4798      	blx	r3
 80277d2:	4b0d      	ldr	r3, [pc, #52]	; (8027808 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80277d4:	9301      	str	r3, [sp, #4]
 80277d6:	6920      	ldr	r0, [r4, #16]
 80277d8:	f88d 5008 	strb.w	r5, [sp, #8]
 80277dc:	2300      	movs	r3, #0
 80277de:	f8ad 700a 	strh.w	r7, [sp, #10]
 80277e2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80277e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80277ea:	6803      	ldr	r3, [r0, #0]
 80277ec:	a901      	add	r1, sp, #4
 80277ee:	681b      	ldr	r3, [r3, #0]
 80277f0:	4798      	blx	r3
 80277f2:	b005      	add	sp, #20
 80277f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80277f6:	2900      	cmp	r1, #0
 80277f8:	d1eb      	bne.n	80277d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80277fa:	80a2      	strh	r2, [r4, #4]
 80277fc:	80c6      	strh	r6, [r0, #6]
 80277fe:	60a1      	str	r1, [r4, #8]
 8027800:	81a1      	strh	r1, [r4, #12]
 8027802:	73a1      	strb	r1, [r4, #14]
 8027804:	e7e5      	b.n	80277d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027806:	bf00      	nop
 8027808:	08030158 	.word	0x08030158
 802780c:	08030180 	.word	0x08030180

08027810 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027810:	10c9      	asrs	r1, r1, #3
 8027812:	2900      	cmp	r1, #0
 8027814:	bfb8      	it	lt
 8027816:	4249      	neglt	r1, r1
 8027818:	2801      	cmp	r0, #1
 802781a:	d108      	bne.n	802782e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802781c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027820:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8027824:	4601      	mov	r1, r0
 8027826:	dd02      	ble.n	802782e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027828:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802782c:	4770      	bx	lr
 802782e:	29ff      	cmp	r1, #255	; 0xff
 8027830:	bfa8      	it	ge
 8027832:	21ff      	movge	r1, #255	; 0xff
 8027834:	4608      	mov	r0, r1
 8027836:	4770      	bx	lr

08027838 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027838:	b410      	push	{r4}
 802783a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802783e:	429c      	cmp	r4, r3
 8027840:	d803      	bhi.n	802784a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8027842:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027846:	f7ed b8b1 	b.w	80149ac <_ZN8touchgfx7Outline6lineToEii>
 802784a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802784e:	4770      	bx	lr

08027850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027854:	b08b      	sub	sp, #44	; 0x2c
 8027856:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802785a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802785e:	9308      	str	r3, [sp, #32]
 8027860:	4606      	mov	r6, r0
 8027862:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8027866:	9309      	str	r3, [sp, #36]	; 0x24
 8027868:	468a      	mov	sl, r1
 802786a:	f7ed fa0c 	bl	8014c86 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802786e:	68b5      	ldr	r5, [r6, #8]
 8027870:	4604      	mov	r4, r0
 8027872:	2d00      	cmp	r5, #0
 8027874:	d044      	beq.n	8027900 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027876:	6873      	ldr	r3, [r6, #4]
 8027878:	42ab      	cmp	r3, r5
 802787a:	d33d      	bcc.n	80278f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802787c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027880:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8027884:	eb02 0b03 	add.w	fp, r2, r3
 8027888:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802788c:	fb02 1203 	mla	r2, r2, r3, r1
 8027890:	9205      	str	r2, [sp, #20]
 8027892:	1e6a      	subs	r2, r5, #1
 8027894:	9204      	str	r2, [sp, #16]
 8027896:	f04f 0800 	mov.w	r8, #0
 802789a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802789e:	f9b4 7000 	ldrsh.w	r7, [r4]
 80278a2:	454b      	cmp	r3, r9
 80278a4:	463a      	mov	r2, r7
 80278a6:	d008      	beq.n	80278ba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80278a8:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80278ac:	eb03 0b09 	add.w	fp, r3, r9
 80278b0:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80278b4:	fb03 1309 	mla	r3, r3, r9, r1
 80278b8:	9305      	str	r3, [sp, #20]
 80278ba:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80278be:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80278c2:	4498      	add	r8, r3
 80278c4:	9b04      	ldr	r3, [sp, #16]
 80278c6:	3b01      	subs	r3, #1
 80278c8:	9304      	str	r3, [sp, #16]
 80278ca:	9b04      	ldr	r3, [sp, #16]
 80278cc:	3301      	adds	r3, #1
 80278ce:	d015      	beq.n	80278fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80278d0:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80278d4:	42bb      	cmp	r3, r7
 80278d6:	d117      	bne.n	8027908 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80278d8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80278dc:	9b04      	ldr	r3, [sp, #16]
 80278de:	4548      	cmp	r0, r9
 80278e0:	f103 33ff 	add.w	r3, r3, #4294967295
 80278e4:	d17f      	bne.n	80279e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80278e6:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80278ea:	4401      	add	r1, r0
 80278ec:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80278f0:	4480      	add	r8, r0
 80278f2:	e7e9      	b.n	80278c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80278f4:	461f      	mov	r7, r3
 80278f6:	e044      	b.n	8027982 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80278f8:	2000      	movs	r0, #0
 80278fa:	e002      	b.n	8027902 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80278fc:	2900      	cmp	r1, #0
 80278fe:	d16f      	bne.n	80279e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027900:	2001      	movs	r0, #1
 8027902:	b00b      	add	sp, #44	; 0x2c
 8027904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027908:	2900      	cmp	r1, #0
 802790a:	d030      	beq.n	802796e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802790c:	2f00      	cmp	r7, #0
 802790e:	db29      	blt.n	8027964 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027910:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027914:	42bb      	cmp	r3, r7
 8027916:	dd25      	ble.n	8027964 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027918:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802791c:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027920:	f7ff ff76 	bl	8027810 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027924:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027926:	fb10 f003 	smulbb	r0, r0, r3
 802792a:	b280      	uxth	r0, r0
 802792c:	1c41      	adds	r1, r0, #1
 802792e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027932:	1209      	asrs	r1, r1, #8
 8027934:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027938:	d014      	beq.n	8027964 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802793a:	9808      	ldr	r0, [sp, #32]
 802793c:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802793e:	b2c9      	uxtb	r1, r1
 8027940:	b2ba      	uxth	r2, r7
 8027942:	9102      	str	r1, [sp, #8]
 8027944:	2101      	movs	r1, #1
 8027946:	4413      	add	r3, r2
 8027948:	9101      	str	r1, [sp, #4]
 802794a:	4402      	add	r2, r0
 802794c:	fa0f f18b 	sxth.w	r1, fp
 8027950:	f8da 0000 	ldr.w	r0, [sl]
 8027954:	9100      	str	r1, [sp, #0]
 8027956:	6941      	ldr	r1, [r0, #20]
 8027958:	b21b      	sxth	r3, r3
 802795a:	460d      	mov	r5, r1
 802795c:	b212      	sxth	r2, r2
 802795e:	9905      	ldr	r1, [sp, #20]
 8027960:	4650      	mov	r0, sl
 8027962:	47a8      	blx	r5
 8027964:	9b04      	ldr	r3, [sp, #16]
 8027966:	3301      	adds	r3, #1
 8027968:	f107 0201 	add.w	r2, r7, #1
 802796c:	d0c8      	beq.n	8027900 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802796e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027972:	1abb      	subs	r3, r7, r2
 8027974:	2b00      	cmp	r3, #0
 8027976:	dd31      	ble.n	80279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027978:	2a00      	cmp	r2, #0
 802797a:	dabb      	bge.n	80278f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802797c:	2f00      	cmp	r7, #0
 802797e:	dd2d      	ble.n	80279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027980:	2200      	movs	r2, #0
 8027982:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027986:	19d1      	adds	r1, r2, r7
 8027988:	4299      	cmp	r1, r3
 802798a:	db02      	blt.n	8027992 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802798c:	1a9f      	subs	r7, r3, r2
 802798e:	2f00      	cmp	r7, #0
 8027990:	dd24      	ble.n	80279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027992:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027996:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802799a:	f7ff ff39 	bl	8027810 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802799e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80279a0:	fb10 f003 	smulbb	r0, r0, r3
 80279a4:	b280      	uxth	r0, r0
 80279a6:	1c41      	adds	r1, r0, #1
 80279a8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80279ac:	1209      	asrs	r1, r1, #8
 80279ae:	f011 0fff 	tst.w	r1, #255	; 0xff
 80279b2:	d013      	beq.n	80279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80279b4:	9808      	ldr	r0, [sp, #32]
 80279b6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80279b8:	b292      	uxth	r2, r2
 80279ba:	b2c9      	uxtb	r1, r1
 80279bc:	4413      	add	r3, r2
 80279be:	9102      	str	r1, [sp, #8]
 80279c0:	4402      	add	r2, r0
 80279c2:	b23f      	sxth	r7, r7
 80279c4:	f8da 0000 	ldr.w	r0, [sl]
 80279c8:	9701      	str	r7, [sp, #4]
 80279ca:	fa0f f18b 	sxth.w	r1, fp
 80279ce:	9100      	str	r1, [sp, #0]
 80279d0:	6947      	ldr	r7, [r0, #20]
 80279d2:	9905      	ldr	r1, [sp, #20]
 80279d4:	b21b      	sxth	r3, r3
 80279d6:	b212      	sxth	r2, r2
 80279d8:	4650      	mov	r0, sl
 80279da:	47b8      	blx	r7
 80279dc:	464b      	mov	r3, r9
 80279de:	e75c      	b.n	802789a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80279e0:	2f00      	cmp	r7, #0
 80279e2:	da95      	bge.n	8027910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80279e4:	e78c      	b.n	8027900 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80279e6:	2900      	cmp	r1, #0
 80279e8:	d0f8      	beq.n	80279dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80279ea:	e78f      	b.n	802790c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080279ec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80279ec:	4b4b      	ldr	r3, [pc, #300]	; (8027b1c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80279ee:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80279f2:	2500      	movs	r5, #0
 80279f4:	f100 0620 	add.w	r6, r0, #32
 80279f8:	4604      	mov	r4, r0
 80279fa:	e9c0 3100 	strd	r3, r1, [r0]
 80279fe:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027a02:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027a06:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027a0a:	f100 0718 	add.w	r7, r0, #24
 8027a0e:	4630      	mov	r0, r6
 8027a10:	4690      	mov	r8, r2
 8027a12:	f7ec fb03 	bl	801401c <_ZN8touchgfx7OutlineC1Ev>
 8027a16:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027a1a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027a1e:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027a22:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027a26:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027a2a:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027a2e:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027a32:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027a36:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027a3a:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027a3e:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8027a42:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027a46:	9500      	str	r5, [sp, #0]
 8027a48:	4410      	add	r0, r2
 8027a4a:	b280      	uxth	r0, r0
 8027a4c:	fa0f fa80 	sxth.w	sl, r0
 8027a50:	45aa      	cmp	sl, r5
 8027a52:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8027a56:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027a5a:	dd5c      	ble.n	8027b16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027a5c:	4591      	cmp	r9, r2
 8027a5e:	dd5a      	ble.n	8027b16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027a60:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8027a64:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027a68:	440b      	add	r3, r1
 8027a6a:	b29b      	uxth	r3, r3
 8027a6c:	b21d      	sxth	r5, r3
 8027a6e:	2d00      	cmp	r5, #0
 8027a70:	dd51      	ble.n	8027b16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027a72:	458e      	cmp	lr, r1
 8027a74:	dd4f      	ble.n	8027b16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027a76:	45d1      	cmp	r9, sl
 8027a78:	bfb8      	it	lt
 8027a7a:	fa1f f089 	uxthlt.w	r0, r9
 8027a7e:	45ae      	cmp	lr, r5
 8027a80:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8027a84:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027a88:	bfb8      	it	lt
 8027a8a:	fa1f f38e 	uxthlt.w	r3, lr
 8027a8e:	1a80      	subs	r0, r0, r2
 8027a90:	1a5b      	subs	r3, r3, r1
 8027a92:	f8ad 0004 	strh.w	r0, [sp, #4]
 8027a96:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027a9a:	f8ad 2000 	strh.w	r2, [sp]
 8027a9e:	f8ad 1002 	strh.w	r1, [sp, #2]
 8027aa2:	466d      	mov	r5, sp
 8027aa4:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027aa8:	e887 0003 	stmia.w	r7, {r0, r1}
 8027aac:	f8dc 3000 	ldr.w	r3, [ip]
 8027ab0:	4660      	mov	r0, ip
 8027ab2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027ab4:	4639      	mov	r1, r7
 8027ab6:	4798      	blx	r3
 8027ab8:	6861      	ldr	r1, [r4, #4]
 8027aba:	4628      	mov	r0, r5
 8027abc:	3104      	adds	r1, #4
 8027abe:	f7ee fcb3 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027ac2:	4638      	mov	r0, r7
 8027ac4:	f7ee fc6c 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027ac8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027acc:	f8bd 2000 	ldrh.w	r2, [sp]
 8027ad0:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8027ad4:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027ad8:	4630      	mov	r0, r6
 8027ada:	f7ec fa83 	bl	8013fe4 <_ZN8touchgfx7Outline5resetEv>
 8027ade:	f9bd 3000 	ldrsh.w	r3, [sp]
 8027ae2:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8027ae6:	015b      	lsls	r3, r3, #5
 8027ae8:	60a3      	str	r3, [r4, #8]
 8027aea:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027aee:	015b      	lsls	r3, r3, #5
 8027af0:	60e3      	str	r3, [r4, #12]
 8027af2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027af6:	015b      	lsls	r3, r3, #5
 8027af8:	6123      	str	r3, [r4, #16]
 8027afa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027afe:	015b      	lsls	r3, r3, #5
 8027b00:	6163      	str	r3, [r4, #20]
 8027b02:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027b06:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027b0a:	4620      	mov	r0, r4
 8027b0c:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027b10:	b002      	add	sp, #8
 8027b12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027b16:	2300      	movs	r3, #0
 8027b18:	9301      	str	r3, [sp, #4]
 8027b1a:	e7c2      	b.n	8027aa2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027b1c:	080304a4 	.word	0x080304a4

08027b20 <_ZN8touchgfx6Canvas5closeEv>:
 8027b20:	b538      	push	{r3, r4, r5, lr}
 8027b22:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027b26:	4604      	mov	r4, r0
 8027b28:	b193      	cbz	r3, 8027b50 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027b2a:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8027b2e:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8027b32:	4213      	tst	r3, r2
 8027b34:	d10c      	bne.n	8027b50 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027b36:	f100 0520 	add.w	r5, r0, #32
 8027b3a:	b123      	cbz	r3, 8027b46 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027b3c:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027b40:	4628      	mov	r0, r5
 8027b42:	f7ff fe79 	bl	8027838 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027b46:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027b4a:	4628      	mov	r0, r5
 8027b4c:	f7ff fe74 	bl	8027838 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027b50:	2300      	movs	r3, #0
 8027b52:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027b56:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027b5a:	4298      	cmp	r0, r3
 8027b5c:	bf34      	ite	cc
 8027b5e:	2000      	movcc	r0, #0
 8027b60:	2001      	movcs	r0, #1
 8027b62:	bd38      	pop	{r3, r4, r5, pc}

08027b64 <_ZN8touchgfx6Canvas6renderEh>:
 8027b64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027b68:	4604      	mov	r4, r0
 8027b6a:	6840      	ldr	r0, [r0, #4]
 8027b6c:	6803      	ldr	r3, [r0, #0]
 8027b6e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8027b70:	460d      	mov	r5, r1
 8027b72:	4798      	blx	r3
 8027b74:	fb10 f105 	smulbb	r1, r0, r5
 8027b78:	b289      	uxth	r1, r1
 8027b7a:	1c4d      	adds	r5, r1, #1
 8027b7c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027b80:	122d      	asrs	r5, r5, #8
 8027b82:	f000 809d 	beq.w	8027cc0 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027b86:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027b8a:	2b00      	cmp	r3, #0
 8027b8c:	f000 8098 	beq.w	8027cc0 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027b90:	4620      	mov	r0, r4
 8027b92:	f7ff ffc5 	bl	8027b20 <_ZN8touchgfx6Canvas5closeEv>
 8027b96:	4607      	mov	r7, r0
 8027b98:	2800      	cmp	r0, #0
 8027b9a:	d048      	beq.n	8027c2e <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027b9c:	6863      	ldr	r3, [r4, #4]
 8027b9e:	4e49      	ldr	r6, [pc, #292]	; (8027cc4 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8027ba0:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027ba2:	6837      	ldr	r7, [r6, #0]
 8027ba4:	6803      	ldr	r3, [r0, #0]
 8027ba6:	689b      	ldr	r3, [r3, #8]
 8027ba8:	4798      	blx	r3
 8027baa:	4601      	mov	r1, r0
 8027bac:	4638      	mov	r0, r7
 8027bae:	f7ea fb87 	bl	80122c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8027bb2:	4607      	mov	r7, r0
 8027bb4:	f7dc fc9c 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8027bb8:	6803      	ldr	r3, [r0, #0]
 8027bba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027bbc:	4798      	blx	r3
 8027bbe:	4680      	mov	r8, r0
 8027bc0:	f7dc fc96 	bl	80044f0 <_ZN8touchgfx3HAL3lcdEv>
 8027bc4:	6803      	ldr	r3, [r0, #0]
 8027bc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027bc8:	4798      	blx	r3
 8027bca:	280b      	cmp	r0, #11
 8027bcc:	d85d      	bhi.n	8027c8a <_ZN8touchgfx6Canvas6renderEh+0x126>
 8027bce:	e8df f000 	tbb	[pc, r0]
 8027bd2:	5e53      	.short	0x5e53
 8027bd4:	325c066e 	.word	0x325c066e
 8027bd8:	67676742 	.word	0x67676742
 8027bdc:	6767      	.short	0x6767
 8027bde:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027be2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027be6:	2208      	movs	r2, #8
 8027be8:	fb91 f2f2 	sdiv	r2, r1, r2
 8027bec:	fb08 2303 	mla	r3, r8, r3, r2
 8027bf0:	441f      	add	r7, r3
 8027bf2:	424b      	negs	r3, r1
 8027bf4:	f003 0307 	and.w	r3, r3, #7
 8027bf8:	f001 0107 	and.w	r1, r1, #7
 8027bfc:	bf58      	it	pl
 8027bfe:	4259      	negpl	r1, r3
 8027c00:	b2c9      	uxtb	r1, r1
 8027c02:	b2ed      	uxtb	r5, r5
 8027c04:	e9cd 1500 	strd	r1, r5, [sp]
 8027c08:	6860      	ldr	r0, [r4, #4]
 8027c0a:	463a      	mov	r2, r7
 8027c0c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027c0e:	fa0f f388 	sxth.w	r3, r8
 8027c12:	f104 0020 	add.w	r0, r4, #32
 8027c16:	f7ff fe1b 	bl	8027850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027c1a:	6863      	ldr	r3, [r4, #4]
 8027c1c:	4607      	mov	r7, r0
 8027c1e:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027c20:	6803      	ldr	r3, [r0, #0]
 8027c22:	691b      	ldr	r3, [r3, #16]
 8027c24:	4798      	blx	r3
 8027c26:	6830      	ldr	r0, [r6, #0]
 8027c28:	6803      	ldr	r3, [r0, #0]
 8027c2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027c2c:	4798      	blx	r3
 8027c2e:	4638      	mov	r0, r7
 8027c30:	b002      	add	sp, #8
 8027c32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027c36:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027c3a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027c3e:	2204      	movs	r2, #4
 8027c40:	fb91 f2f2 	sdiv	r2, r1, r2
 8027c44:	fb08 2303 	mla	r3, r8, r3, r2
 8027c48:	441f      	add	r7, r3
 8027c4a:	424b      	negs	r3, r1
 8027c4c:	f003 0303 	and.w	r3, r3, #3
 8027c50:	f001 0103 	and.w	r1, r1, #3
 8027c54:	e7d2      	b.n	8027bfc <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027c56:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027c5a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027c5e:	2900      	cmp	r1, #0
 8027c60:	f04f 0202 	mov.w	r2, #2
 8027c64:	fb91 f2f2 	sdiv	r2, r1, r2
 8027c68:	f001 0101 	and.w	r1, r1, #1
 8027c6c:	fb08 2303 	mla	r3, r8, r3, r2
 8027c70:	441f      	add	r7, r3
 8027c72:	bfb8      	it	lt
 8027c74:	4249      	neglt	r1, r1
 8027c76:	e7c3      	b.n	8027c00 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027c78:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027c7c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027c80:	fb08 f303 	mul.w	r3, r8, r3
 8027c84:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027c88:	441f      	add	r7, r3
 8027c8a:	2100      	movs	r1, #0
 8027c8c:	e7b9      	b.n	8027c02 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8027c8e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027c92:	fb08 f203 	mul.w	r2, r8, r3
 8027c96:	8b23      	ldrh	r3, [r4, #24]
 8027c98:	2103      	movs	r1, #3
 8027c9a:	fb13 2301 	smlabb	r3, r3, r1, r2
 8027c9e:	e7f3      	b.n	8027c88 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027ca0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027ca4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027ca8:	fb08 2303 	mla	r3, r8, r3, r2
 8027cac:	e7ec      	b.n	8027c88 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027cae:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027cb2:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027cb6:	fb08 f303 	mul.w	r3, r8, r3
 8027cba:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027cbe:	e7e3      	b.n	8027c88 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027cc0:	2701      	movs	r7, #1
 8027cc2:	e7b4      	b.n	8027c2e <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027cc4:	200138b4 	.word	0x200138b4

08027cc8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027cc8:	b510      	push	{r4, lr}
 8027cca:	4b07      	ldr	r3, [pc, #28]	; (8027ce8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027ccc:	781b      	ldrb	r3, [r3, #0]
 8027cce:	2b01      	cmp	r3, #1
 8027cd0:	d108      	bne.n	8027ce4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8027cd2:	6843      	ldr	r3, [r0, #4]
 8027cd4:	6814      	ldr	r4, [r2, #0]
 8027cd6:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027cda:	680b      	ldr	r3, [r1, #0]
 8027cdc:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027ce0:	6013      	str	r3, [r2, #0]
 8027ce2:	600c      	str	r4, [r1, #0]
 8027ce4:	bd10      	pop	{r4, pc}
 8027ce6:	bf00      	nop
 8027ce8:	200138ac 	.word	0x200138ac

08027cec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027cec:	b513      	push	{r0, r1, r4, lr}
 8027cee:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027cf2:	4604      	mov	r4, r0
 8027cf4:	e9cd 2100 	strd	r2, r1, [sp]
 8027cf8:	b9a3      	cbnz	r3, 8027d24 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027cfa:	466a      	mov	r2, sp
 8027cfc:	a901      	add	r1, sp, #4
 8027cfe:	4620      	mov	r0, r4
 8027d00:	f7ff ffe2 	bl	8027cc8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027d04:	68a3      	ldr	r3, [r4, #8]
 8027d06:	9901      	ldr	r1, [sp, #4]
 8027d08:	9a00      	ldr	r2, [sp, #0]
 8027d0a:	1ac9      	subs	r1, r1, r3
 8027d0c:	68e3      	ldr	r3, [r4, #12]
 8027d0e:	9101      	str	r1, [sp, #4]
 8027d10:	1ad2      	subs	r2, r2, r3
 8027d12:	2a00      	cmp	r2, #0
 8027d14:	9200      	str	r2, [sp, #0]
 8027d16:	da0b      	bge.n	8027d30 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027d18:	2301      	movs	r3, #1
 8027d1a:	2900      	cmp	r1, #0
 8027d1c:	da0e      	bge.n	8027d3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027d1e:	f043 0304 	orr.w	r3, r3, #4
 8027d22:	e013      	b.n	8027d4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027d24:	f7ff fefc 	bl	8027b20 <_ZN8touchgfx6Canvas5closeEv>
 8027d28:	2800      	cmp	r0, #0
 8027d2a:	d1e6      	bne.n	8027cfa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027d2c:	b002      	add	sp, #8
 8027d2e:	bd10      	pop	{r4, pc}
 8027d30:	6963      	ldr	r3, [r4, #20]
 8027d32:	429a      	cmp	r2, r3
 8027d34:	bfac      	ite	ge
 8027d36:	2302      	movge	r3, #2
 8027d38:	2300      	movlt	r3, #0
 8027d3a:	e7ee      	b.n	8027d1a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027d3c:	6920      	ldr	r0, [r4, #16]
 8027d3e:	4281      	cmp	r1, r0
 8027d40:	bfac      	ite	ge
 8027d42:	2008      	movge	r0, #8
 8027d44:	2000      	movlt	r0, #0
 8027d46:	4318      	orrs	r0, r3
 8027d48:	b2c3      	uxtb	r3, r0
 8027d4a:	b158      	cbz	r0, 8027d64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027d4c:	2200      	movs	r2, #0
 8027d4e:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8027d52:	9901      	ldr	r1, [sp, #4]
 8027d54:	9a00      	ldr	r2, [sp, #0]
 8027d56:	66a1      	str	r1, [r4, #104]	; 0x68
 8027d58:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027d5a:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8027d5e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8027d62:	e7e3      	b.n	8027d2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027d64:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027d68:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027d6c:	4298      	cmp	r0, r3
 8027d6e:	d803      	bhi.n	8027d78 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027d70:	f104 0020 	add.w	r0, r4, #32
 8027d74:	f7ec fe34 	bl	80149e0 <_ZN8touchgfx7Outline6moveToEii>
 8027d78:	2301      	movs	r3, #1
 8027d7a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027d7e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027d82:	2300      	movs	r3, #0
 8027d84:	e7e5      	b.n	8027d52 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027d86:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027d88:	ab02      	add	r3, sp, #8
 8027d8a:	4604      	mov	r4, r0
 8027d8c:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027d90:	9101      	str	r1, [sp, #4]
 8027d92:	461a      	mov	r2, r3
 8027d94:	a901      	add	r1, sp, #4
 8027d96:	f7ff ff97 	bl	8027cc8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027d9a:	68a3      	ldr	r3, [r4, #8]
 8027d9c:	9901      	ldr	r1, [sp, #4]
 8027d9e:	9a00      	ldr	r2, [sp, #0]
 8027da0:	1ac9      	subs	r1, r1, r3
 8027da2:	68e3      	ldr	r3, [r4, #12]
 8027da4:	9101      	str	r1, [sp, #4]
 8027da6:	1ad2      	subs	r2, r2, r3
 8027da8:	2a00      	cmp	r2, #0
 8027daa:	9200      	str	r2, [sp, #0]
 8027dac:	db1c      	blt.n	8027de8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8027dae:	6963      	ldr	r3, [r4, #20]
 8027db0:	429a      	cmp	r2, r3
 8027db2:	bfac      	ite	ge
 8027db4:	2002      	movge	r0, #2
 8027db6:	2000      	movlt	r0, #0
 8027db8:	2900      	cmp	r1, #0
 8027dba:	db17      	blt.n	8027dec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027dbc:	6923      	ldr	r3, [r4, #16]
 8027dbe:	4299      	cmp	r1, r3
 8027dc0:	bfac      	ite	ge
 8027dc2:	2308      	movge	r3, #8
 8027dc4:	2300      	movlt	r3, #0
 8027dc6:	4303      	orrs	r3, r0
 8027dc8:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027dcc:	b2dd      	uxtb	r5, r3
 8027dce:	b978      	cbnz	r0, 8027df0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027dd0:	f104 0020 	add.w	r0, r4, #32
 8027dd4:	f7ff fd30 	bl	8027838 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027dd8:	9b01      	ldr	r3, [sp, #4]
 8027dda:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027ddc:	9b00      	ldr	r3, [sp, #0]
 8027dde:	6623      	str	r3, [r4, #96]	; 0x60
 8027de0:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027de4:	b002      	add	sp, #8
 8027de6:	bd70      	pop	{r4, r5, r6, pc}
 8027de8:	2001      	movs	r0, #1
 8027dea:	e7e5      	b.n	8027db8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027dec:	2304      	movs	r3, #4
 8027dee:	e7ea      	b.n	8027dc6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027df0:	b113      	cbz	r3, 8027df8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027df2:	ea10 0305 	ands.w	r3, r0, r5
 8027df6:	d11c      	bne.n	8027e32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027df8:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027dfc:	f104 0620 	add.w	r6, r4, #32
 8027e00:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027e04:	b98b      	cbnz	r3, 8027e2a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027e06:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027e0a:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027e0e:	4298      	cmp	r0, r3
 8027e10:	d802      	bhi.n	8027e18 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027e12:	4630      	mov	r0, r6
 8027e14:	f7ec fde4 	bl	80149e0 <_ZN8touchgfx7Outline6moveToEii>
 8027e18:	2301      	movs	r3, #1
 8027e1a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027e1e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027e22:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027e26:	4630      	mov	r0, r6
 8027e28:	e7d4      	b.n	8027dd4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027e2a:	4630      	mov	r0, r6
 8027e2c:	f7ff fd04 	bl	8027838 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027e30:	e7f7      	b.n	8027e22 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027e32:	461d      	mov	r5, r3
 8027e34:	e7d0      	b.n	8027dd8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027e38 <_ZN8touchgfx6CanvasD1Ev>:
 8027e38:	b510      	push	{r4, lr}
 8027e3a:	4b04      	ldr	r3, [pc, #16]	; (8027e4c <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027e3c:	4604      	mov	r4, r0
 8027e3e:	f840 3b20 	str.w	r3, [r0], #32
 8027e42:	f7ec f8c7 	bl	8013fd4 <_ZN8touchgfx7OutlineD1Ev>
 8027e46:	4620      	mov	r0, r4
 8027e48:	bd10      	pop	{r4, pc}
 8027e4a:	bf00      	nop
 8027e4c:	080304a4 	.word	0x080304a4

08027e50 <_ZN8touchgfx6CanvasD0Ev>:
 8027e50:	b510      	push	{r4, lr}
 8027e52:	4604      	mov	r4, r0
 8027e54:	f7ff fff0 	bl	8027e38 <_ZN8touchgfx6CanvasD1Ev>
 8027e58:	4620      	mov	r0, r4
 8027e5a:	2170      	movs	r1, #112	; 0x70
 8027e5c:	f002 fd09 	bl	802a872 <_ZdlPvj>
 8027e60:	4620      	mov	r0, r4
 8027e62:	bd10      	pop	{r4, pc}

08027e64 <_ZN8touchgfx6CircleD1Ev>:
 8027e64:	4770      	bx	lr

08027e66 <_ZN8touchgfx6CircleD0Ev>:
 8027e66:	b510      	push	{r4, lr}
 8027e68:	2148      	movs	r1, #72	; 0x48
 8027e6a:	4604      	mov	r4, r0
 8027e6c:	f002 fd01 	bl	802a872 <_ZdlPvj>
 8027e70:	4620      	mov	r0, r4
 8027e72:	bd10      	pop	{r4, pc}

08027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027e74:	b508      	push	{r3, lr}
 8027e76:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027e7a:	f7ea fd77 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e7e:	bd08      	pop	{r3, pc}

08027e80 <_ZN8touchgfx6CircleC1Ev>:
 8027e80:	b510      	push	{r4, lr}
 8027e82:	4604      	mov	r4, r0
 8027e84:	f7ea fc0e 	bl	80126a4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027e88:	4b08      	ldr	r3, [pc, #32]	; (8027eac <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027e8a:	6023      	str	r3, [r4, #0]
 8027e8c:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8027e90:	2300      	movs	r3, #0
 8027e92:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027e96:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027e9a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8027e9e:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8027ea2:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027ea6:	60a3      	str	r3, [r4, #8]
 8027ea8:	4620      	mov	r0, r4
 8027eaa:	bd10      	pop	{r4, pc}
 8027eac:	080304b8 	.word	0x080304b8

08027eb0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8027eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027eb4:	428a      	cmp	r2, r1
 8027eb6:	4680      	mov	r8, r0
 8027eb8:	4610      	mov	r0, r2
 8027eba:	4699      	mov	r9, r3
 8027ebc:	bfa6      	itte	ge
 8027ebe:	460a      	movge	r2, r1
 8027ec0:	4603      	movge	r3, r0
 8027ec2:	460b      	movlt	r3, r1
 8027ec4:	1a99      	subs	r1, r3, r2
 8027ec6:	b085      	sub	sp, #20
 8027ec8:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027ecc:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8027ed0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027ed2:	bfa4      	itt	ge
 8027ed4:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027ed8:	2200      	movge	r2, #0
 8027eda:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8027ede:	9300      	str	r3, [sp, #0]
 8027ee0:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027ee4:	f102 0b01 	add.w	fp, r2, #1
 8027ee8:	2c00      	cmp	r4, #0
 8027eea:	f040 80af 	bne.w	802804c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8027eee:	4610      	mov	r0, r2
 8027ef0:	9201      	str	r2, [sp, #4]
 8027ef2:	f7ea fd3b 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ef6:	a903      	add	r1, sp, #12
 8027ef8:	9003      	str	r0, [sp, #12]
 8027efa:	4650      	mov	r0, sl
 8027efc:	f7ea fbfe 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f00:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027f04:	9a01      	ldr	r2, [sp, #4]
 8027f06:	4408      	add	r0, r1
 8027f08:	f8d9 1000 	ldr.w	r1, [r9]
 8027f0c:	4281      	cmp	r1, r0
 8027f0e:	bfc8      	it	gt
 8027f10:	f8c9 0000 	strgt.w	r0, [r9]
 8027f14:	6839      	ldr	r1, [r7, #0]
 8027f16:	4288      	cmp	r0, r1
 8027f18:	bfc8      	it	gt
 8027f1a:	6038      	strgt	r0, [r7, #0]
 8027f1c:	4610      	mov	r0, r2
 8027f1e:	f7ff ffa9 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f22:	a903      	add	r1, sp, #12
 8027f24:	9003      	str	r0, [sp, #12]
 8027f26:	4650      	mov	r0, sl
 8027f28:	f7ea fbe8 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f2c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027f30:	1a10      	subs	r0, r2, r0
 8027f32:	6832      	ldr	r2, [r6, #0]
 8027f34:	4282      	cmp	r2, r0
 8027f36:	bfc8      	it	gt
 8027f38:	6030      	strgt	r0, [r6, #0]
 8027f3a:	682a      	ldr	r2, [r5, #0]
 8027f3c:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027f40:	4290      	cmp	r0, r2
 8027f42:	fb9b f2f1 	sdiv	r2, fp, r1
 8027f46:	fb01 b212 	mls	r2, r1, r2, fp
 8027f4a:	eba1 0202 	sub.w	r2, r1, r2
 8027f4e:	bfc8      	it	gt
 8027f50:	6028      	strgt	r0, [r5, #0]
 8027f52:	fb92 f0f1 	sdiv	r0, r2, r1
 8027f56:	fb01 2210 	mls	r2, r1, r0, r2
 8027f5a:	4493      	add	fp, r2
 8027f5c:	9b00      	ldr	r3, [sp, #0]
 8027f5e:	455b      	cmp	r3, fp
 8027f60:	db2a      	blt.n	8027fb8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8027f62:	4658      	mov	r0, fp
 8027f64:	f7ea fd02 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027f68:	a903      	add	r1, sp, #12
 8027f6a:	9003      	str	r0, [sp, #12]
 8027f6c:	4650      	mov	r0, sl
 8027f6e:	f7ea fbc5 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f72:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027f76:	4410      	add	r0, r2
 8027f78:	f8d9 2000 	ldr.w	r2, [r9]
 8027f7c:	4282      	cmp	r2, r0
 8027f7e:	bfc8      	it	gt
 8027f80:	f8c9 0000 	strgt.w	r0, [r9]
 8027f84:	683a      	ldr	r2, [r7, #0]
 8027f86:	4290      	cmp	r0, r2
 8027f88:	bfc8      	it	gt
 8027f8a:	6038      	strgt	r0, [r7, #0]
 8027f8c:	4658      	mov	r0, fp
 8027f8e:	f7ff ff71 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f92:	a903      	add	r1, sp, #12
 8027f94:	9003      	str	r0, [sp, #12]
 8027f96:	4650      	mov	r0, sl
 8027f98:	f7ea fbb0 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f9c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027fa0:	1a10      	subs	r0, r2, r0
 8027fa2:	6832      	ldr	r2, [r6, #0]
 8027fa4:	4282      	cmp	r2, r0
 8027fa6:	bfc8      	it	gt
 8027fa8:	6030      	strgt	r0, [r6, #0]
 8027faa:	682a      	ldr	r2, [r5, #0]
 8027fac:	4290      	cmp	r0, r2
 8027fae:	bfc8      	it	gt
 8027fb0:	6028      	strgt	r0, [r5, #0]
 8027fb2:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027fb6:	e7d1      	b.n	8027f5c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027fb8:	9b00      	ldr	r3, [sp, #0]
 8027fba:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027fbe:	455b      	cmp	r3, fp
 8027fc0:	dd27      	ble.n	8028012 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8027fc2:	4618      	mov	r0, r3
 8027fc4:	f7ea fcd2 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027fc8:	a903      	add	r1, sp, #12
 8027fca:	9003      	str	r0, [sp, #12]
 8027fcc:	4650      	mov	r0, sl
 8027fce:	f7ea fb95 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027fd2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027fd6:	4410      	add	r0, r2
 8027fd8:	f8d9 2000 	ldr.w	r2, [r9]
 8027fdc:	4282      	cmp	r2, r0
 8027fde:	bfc8      	it	gt
 8027fe0:	f8c9 0000 	strgt.w	r0, [r9]
 8027fe4:	683a      	ldr	r2, [r7, #0]
 8027fe6:	4290      	cmp	r0, r2
 8027fe8:	bfc8      	it	gt
 8027fea:	6038      	strgt	r0, [r7, #0]
 8027fec:	9800      	ldr	r0, [sp, #0]
 8027fee:	f7ff ff41 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ff2:	a903      	add	r1, sp, #12
 8027ff4:	9003      	str	r0, [sp, #12]
 8027ff6:	4650      	mov	r0, sl
 8027ff8:	f7ea fb80 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ffc:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028000:	1a10      	subs	r0, r2, r0
 8028002:	6832      	ldr	r2, [r6, #0]
 8028004:	4282      	cmp	r2, r0
 8028006:	bfc8      	it	gt
 8028008:	6030      	strgt	r0, [r6, #0]
 802800a:	682a      	ldr	r2, [r5, #0]
 802800c:	4290      	cmp	r0, r2
 802800e:	bfc8      	it	gt
 8028010:	6028      	strgt	r0, [r5, #0]
 8028012:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8028016:	f8d9 1000 	ldr.w	r1, [r9]
 802801a:	4291      	cmp	r1, r2
 802801c:	bfc8      	it	gt
 802801e:	f8c9 2000 	strgt.w	r2, [r9]
 8028022:	683a      	ldr	r2, [r7, #0]
 8028024:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8028028:	429a      	cmp	r2, r3
 802802a:	bfb8      	it	lt
 802802c:	603b      	strlt	r3, [r7, #0]
 802802e:	6832      	ldr	r2, [r6, #0]
 8028030:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028034:	429a      	cmp	r2, r3
 8028036:	bfc8      	it	gt
 8028038:	6033      	strgt	r3, [r6, #0]
 802803a:	682a      	ldr	r2, [r5, #0]
 802803c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028040:	429a      	cmp	r2, r3
 8028042:	da00      	bge.n	8028046 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8028044:	602b      	str	r3, [r5, #0]
 8028046:	b005      	add	sp, #20
 8028048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802804c:	2002      	movs	r0, #2
 802804e:	3401      	adds	r4, #1
 8028050:	fb94 f4f0 	sdiv	r4, r4, r0
 8028054:	4610      	mov	r0, r2
 8028056:	9201      	str	r2, [sp, #4]
 8028058:	f7ea fc88 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802805c:	a903      	add	r1, sp, #12
 802805e:	9003      	str	r0, [sp, #12]
 8028060:	4650      	mov	r0, sl
 8028062:	f7ea fb4b 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028066:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802806a:	9a01      	ldr	r2, [sp, #4]
 802806c:	4408      	add	r0, r1
 802806e:	f8d9 1000 	ldr.w	r1, [r9]
 8028072:	1b03      	subs	r3, r0, r4
 8028074:	4299      	cmp	r1, r3
 8028076:	bfc8      	it	gt
 8028078:	f8c9 3000 	strgt.w	r3, [r9]
 802807c:	6839      	ldr	r1, [r7, #0]
 802807e:	428b      	cmp	r3, r1
 8028080:	bfc8      	it	gt
 8028082:	603b      	strgt	r3, [r7, #0]
 8028084:	f8d9 1000 	ldr.w	r1, [r9]
 8028088:	4420      	add	r0, r4
 802808a:	4281      	cmp	r1, r0
 802808c:	bfc8      	it	gt
 802808e:	f8c9 0000 	strgt.w	r0, [r9]
 8028092:	6839      	ldr	r1, [r7, #0]
 8028094:	4288      	cmp	r0, r1
 8028096:	bfc8      	it	gt
 8028098:	6038      	strgt	r0, [r7, #0]
 802809a:	4610      	mov	r0, r2
 802809c:	f7ff feea 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80280a0:	a903      	add	r1, sp, #12
 80280a2:	9003      	str	r0, [sp, #12]
 80280a4:	4650      	mov	r0, sl
 80280a6:	f7ea fb29 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80280aa:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80280ae:	1a10      	subs	r0, r2, r0
 80280b0:	6832      	ldr	r2, [r6, #0]
 80280b2:	1b01      	subs	r1, r0, r4
 80280b4:	428a      	cmp	r2, r1
 80280b6:	bfc8      	it	gt
 80280b8:	6031      	strgt	r1, [r6, #0]
 80280ba:	682a      	ldr	r2, [r5, #0]
 80280bc:	4291      	cmp	r1, r2
 80280be:	bfc8      	it	gt
 80280c0:	6029      	strgt	r1, [r5, #0]
 80280c2:	6832      	ldr	r2, [r6, #0]
 80280c4:	4420      	add	r0, r4
 80280c6:	4282      	cmp	r2, r0
 80280c8:	bfc8      	it	gt
 80280ca:	6030      	strgt	r0, [r6, #0]
 80280cc:	682a      	ldr	r2, [r5, #0]
 80280ce:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80280d2:	4290      	cmp	r0, r2
 80280d4:	fb9b f2f1 	sdiv	r2, fp, r1
 80280d8:	fb01 b212 	mls	r2, r1, r2, fp
 80280dc:	eba1 0202 	sub.w	r2, r1, r2
 80280e0:	bfc8      	it	gt
 80280e2:	6028      	strgt	r0, [r5, #0]
 80280e4:	fb92 f0f1 	sdiv	r0, r2, r1
 80280e8:	fb01 2210 	mls	r2, r1, r0, r2
 80280ec:	4493      	add	fp, r2
 80280ee:	9b00      	ldr	r3, [sp, #0]
 80280f0:	455b      	cmp	r3, fp
 80280f2:	db40      	blt.n	8028176 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80280f4:	4658      	mov	r0, fp
 80280f6:	f7ea fc39 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80280fa:	a903      	add	r1, sp, #12
 80280fc:	9003      	str	r0, [sp, #12]
 80280fe:	4650      	mov	r0, sl
 8028100:	f7ea fafc 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028104:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8028108:	4410      	add	r0, r2
 802810a:	f8d9 2000 	ldr.w	r2, [r9]
 802810e:	1b01      	subs	r1, r0, r4
 8028110:	428a      	cmp	r2, r1
 8028112:	bfc8      	it	gt
 8028114:	f8c9 1000 	strgt.w	r1, [r9]
 8028118:	683a      	ldr	r2, [r7, #0]
 802811a:	4291      	cmp	r1, r2
 802811c:	bfc8      	it	gt
 802811e:	6039      	strgt	r1, [r7, #0]
 8028120:	f8d9 2000 	ldr.w	r2, [r9]
 8028124:	4420      	add	r0, r4
 8028126:	4282      	cmp	r2, r0
 8028128:	bfc8      	it	gt
 802812a:	f8c9 0000 	strgt.w	r0, [r9]
 802812e:	683a      	ldr	r2, [r7, #0]
 8028130:	4290      	cmp	r0, r2
 8028132:	bfc8      	it	gt
 8028134:	6038      	strgt	r0, [r7, #0]
 8028136:	4658      	mov	r0, fp
 8028138:	f7ff fe9c 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802813c:	a903      	add	r1, sp, #12
 802813e:	9003      	str	r0, [sp, #12]
 8028140:	4650      	mov	r0, sl
 8028142:	f7ea fadb 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028146:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802814a:	1a10      	subs	r0, r2, r0
 802814c:	6832      	ldr	r2, [r6, #0]
 802814e:	1b01      	subs	r1, r0, r4
 8028150:	428a      	cmp	r2, r1
 8028152:	bfc8      	it	gt
 8028154:	6031      	strgt	r1, [r6, #0]
 8028156:	682a      	ldr	r2, [r5, #0]
 8028158:	4291      	cmp	r1, r2
 802815a:	bfc8      	it	gt
 802815c:	6029      	strgt	r1, [r5, #0]
 802815e:	6832      	ldr	r2, [r6, #0]
 8028160:	4420      	add	r0, r4
 8028162:	4282      	cmp	r2, r0
 8028164:	bfc8      	it	gt
 8028166:	6030      	strgt	r0, [r6, #0]
 8028168:	682a      	ldr	r2, [r5, #0]
 802816a:	4290      	cmp	r0, r2
 802816c:	bfc8      	it	gt
 802816e:	6028      	strgt	r0, [r5, #0]
 8028170:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8028174:	e7bb      	b.n	80280ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8028176:	9b00      	ldr	r3, [sp, #0]
 8028178:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802817c:	455b      	cmp	r3, fp
 802817e:	f77f af62 	ble.w	8028046 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8028182:	4618      	mov	r0, r3
 8028184:	f7ea fbf2 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028188:	a903      	add	r1, sp, #12
 802818a:	9003      	str	r0, [sp, #12]
 802818c:	4650      	mov	r0, sl
 802818e:	f7ea fab5 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028192:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8028196:	4410      	add	r0, r2
 8028198:	f8d9 2000 	ldr.w	r2, [r9]
 802819c:	1b01      	subs	r1, r0, r4
 802819e:	428a      	cmp	r2, r1
 80281a0:	bfc8      	it	gt
 80281a2:	f8c9 1000 	strgt.w	r1, [r9]
 80281a6:	683a      	ldr	r2, [r7, #0]
 80281a8:	4291      	cmp	r1, r2
 80281aa:	bfc8      	it	gt
 80281ac:	6039      	strgt	r1, [r7, #0]
 80281ae:	f8d9 2000 	ldr.w	r2, [r9]
 80281b2:	4420      	add	r0, r4
 80281b4:	4282      	cmp	r2, r0
 80281b6:	bfc8      	it	gt
 80281b8:	f8c9 0000 	strgt.w	r0, [r9]
 80281bc:	683b      	ldr	r3, [r7, #0]
 80281be:	4298      	cmp	r0, r3
 80281c0:	bfc8      	it	gt
 80281c2:	6038      	strgt	r0, [r7, #0]
 80281c4:	9800      	ldr	r0, [sp, #0]
 80281c6:	f7ff fe55 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80281ca:	a903      	add	r1, sp, #12
 80281cc:	9003      	str	r0, [sp, #12]
 80281ce:	4650      	mov	r0, sl
 80281d0:	f7ea fa94 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80281d4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80281d8:	6832      	ldr	r2, [r6, #0]
 80281da:	1a18      	subs	r0, r3, r0
 80281dc:	1b03      	subs	r3, r0, r4
 80281de:	429a      	cmp	r2, r3
 80281e0:	bfc8      	it	gt
 80281e2:	6033      	strgt	r3, [r6, #0]
 80281e4:	682a      	ldr	r2, [r5, #0]
 80281e6:	4293      	cmp	r3, r2
 80281e8:	bfc8      	it	gt
 80281ea:	602b      	strgt	r3, [r5, #0]
 80281ec:	6833      	ldr	r3, [r6, #0]
 80281ee:	4404      	add	r4, r0
 80281f0:	42a3      	cmp	r3, r4
 80281f2:	bfc8      	it	gt
 80281f4:	6034      	strgt	r4, [r6, #0]
 80281f6:	682b      	ldr	r3, [r5, #0]
 80281f8:	429c      	cmp	r4, r3
 80281fa:	bfc8      	it	gt
 80281fc:	602c      	strgt	r4, [r5, #0]
 80281fe:	e722      	b.n	8028046 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08028200 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8028200:	b530      	push	{r4, r5, lr}
 8028202:	4604      	mov	r4, r0
 8028204:	4608      	mov	r0, r1
 8028206:	4611      	mov	r1, r2
 8028208:	461a      	mov	r2, r3
 802820a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802820e:	b089      	sub	sp, #36	; 0x24
 8028210:	015b      	lsls	r3, r3, #5
 8028212:	9304      	str	r3, [sp, #16]
 8028214:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028218:	2500      	movs	r5, #0
 802821a:	015b      	lsls	r3, r3, #5
 802821c:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8028220:	ab07      	add	r3, sp, #28
 8028222:	9302      	str	r3, [sp, #8]
 8028224:	ab06      	add	r3, sp, #24
 8028226:	9301      	str	r3, [sp, #4]
 8028228:	ab05      	add	r3, sp, #20
 802822a:	9300      	str	r3, [sp, #0]
 802822c:	ab04      	add	r3, sp, #16
 802822e:	9505      	str	r5, [sp, #20]
 8028230:	f7ff fe3e 	bl	8027eb0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8028234:	2520      	movs	r5, #32
 8028236:	9a04      	ldr	r2, [sp, #16]
 8028238:	9805      	ldr	r0, [sp, #20]
 802823a:	fb92 f2f5 	sdiv	r2, r2, r5
 802823e:	fb90 f0f5 	sdiv	r0, r0, r5
 8028242:	b292      	uxth	r2, r2
 8028244:	3002      	adds	r0, #2
 8028246:	1a80      	subs	r0, r0, r2
 8028248:	9b06      	ldr	r3, [sp, #24]
 802824a:	9907      	ldr	r1, [sp, #28]
 802824c:	fb93 f3f5 	sdiv	r3, r3, r5
 8028250:	fb91 f1f5 	sdiv	r1, r1, r5
 8028254:	b29b      	uxth	r3, r3
 8028256:	3102      	adds	r1, #2
 8028258:	1ac9      	subs	r1, r1, r3
 802825a:	3a01      	subs	r2, #1
 802825c:	3b01      	subs	r3, #1
 802825e:	80a0      	strh	r0, [r4, #4]
 8028260:	4620      	mov	r0, r4
 8028262:	8022      	strh	r2, [r4, #0]
 8028264:	8063      	strh	r3, [r4, #2]
 8028266:	80e1      	strh	r1, [r4, #6]
 8028268:	b009      	add	sp, #36	; 0x24
 802826a:	bd30      	pop	{r4, r5, pc}

0802826c <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802826c:	b510      	push	{r4, lr}
 802826e:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8028272:	4604      	mov	r4, r0
 8028274:	f7ff ffc4 	bl	8028200 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028278:	4620      	mov	r0, r4
 802827a:	bd10      	pop	{r4, pc}

0802827c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802827c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802827e:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8028282:	4606      	mov	r6, r0
 8028284:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028288:	6813      	ldr	r3, [r2, #0]
 802828a:	42a5      	cmp	r5, r4
 802828c:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028290:	da2b      	bge.n	80282ea <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8028292:	42a3      	cmp	r3, r4
 8028294:	dd14      	ble.n	80282c0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8028296:	b168      	cbz	r0, 80282b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028298:	4267      	negs	r7, r4
 802829a:	fb97 f2f0 	sdiv	r2, r7, r0
 802829e:	fb00 7212 	mls	r2, r0, r2, r7
 80282a2:	1a82      	subs	r2, r0, r2
 80282a4:	fb92 f7f0 	sdiv	r7, r2, r0
 80282a8:	fb00 2017 	mls	r0, r0, r7, r2
 80282ac:	1a24      	subs	r4, r4, r0
 80282ae:	42ac      	cmp	r4, r5
 80282b0:	bfb8      	it	lt
 80282b2:	462c      	movlt	r4, r5
 80282b4:	4630      	mov	r0, r6
 80282b6:	4622      	mov	r2, r4
 80282b8:	f7ff ffa2 	bl	8028200 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80282bc:	4630      	mov	r0, r6
 80282be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80282c0:	42ab      	cmp	r3, r5
 80282c2:	dd0e      	ble.n	80282e2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80282c4:	b168      	cbz	r0, 80282e2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80282c6:	425f      	negs	r7, r3
 80282c8:	fb97 f2f0 	sdiv	r2, r7, r0
 80282cc:	fb00 7212 	mls	r2, r0, r2, r7
 80282d0:	1a82      	subs	r2, r0, r2
 80282d2:	fb92 f7f0 	sdiv	r7, r2, r0
 80282d6:	fb00 2017 	mls	r0, r0, r7, r2
 80282da:	1a1b      	subs	r3, r3, r0
 80282dc:	42ab      	cmp	r3, r5
 80282de:	bfb8      	it	lt
 80282e0:	462b      	movlt	r3, r5
 80282e2:	4622      	mov	r2, r4
 80282e4:	461c      	mov	r4, r3
 80282e6:	4613      	mov	r3, r2
 80282e8:	e7e4      	b.n	80282b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80282ea:	42a3      	cmp	r3, r4
 80282ec:	da10      	bge.n	8028310 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80282ee:	b148      	cbz	r0, 8028304 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80282f0:	fb94 f2f0 	sdiv	r2, r4, r0
 80282f4:	fb00 4212 	mls	r2, r0, r2, r4
 80282f8:	1a82      	subs	r2, r0, r2
 80282fa:	fb92 f7f0 	sdiv	r7, r2, r0
 80282fe:	fb00 2017 	mls	r0, r0, r7, r2
 8028302:	4404      	add	r4, r0
 8028304:	42a5      	cmp	r5, r4
 8028306:	bfa8      	it	ge
 8028308:	4625      	movge	r5, r4
 802830a:	461c      	mov	r4, r3
 802830c:	462b      	mov	r3, r5
 802830e:	e7d1      	b.n	80282b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028310:	42ab      	cmp	r3, r5
 8028312:	dacf      	bge.n	80282b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028314:	2800      	cmp	r0, #0
 8028316:	d0cd      	beq.n	80282b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028318:	fb93 f2f0 	sdiv	r2, r3, r0
 802831c:	fb00 3212 	mls	r2, r0, r2, r3
 8028320:	1a82      	subs	r2, r0, r2
 8028322:	fb92 f7f0 	sdiv	r7, r2, r0
 8028326:	fb00 2017 	mls	r0, r0, r7, r2
 802832a:	4403      	add	r3, r0
 802832c:	42ab      	cmp	r3, r5
 802832e:	bfa8      	it	ge
 8028330:	462b      	movge	r3, r5
 8028332:	e7bf      	b.n	80282b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08028334 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8028334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028338:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802833c:	42ae      	cmp	r6, r5
 802833e:	bfa2      	ittt	ge
 8028340:	4633      	movge	r3, r6
 8028342:	462e      	movge	r6, r5
 8028344:	461d      	movge	r5, r3
 8028346:	1bab      	subs	r3, r5, r6
 8028348:	468b      	mov	fp, r1
 802834a:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802834c:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8028350:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8028354:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028358:	f04f 0220 	mov.w	r2, #32
 802835c:	b0ab      	sub	sp, #172	; 0xac
 802835e:	4604      	mov	r4, r0
 8028360:	bfa4      	itt	ge
 8028362:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8028366:	2600      	movge	r6, #0
 8028368:	fb99 f9f2 	sdiv	r9, r9, r2
 802836c:	fb9a faf2 	sdiv	sl, sl, r2
 8028370:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8028372:	2900      	cmp	r1, #0
 8028374:	f000 80f5 	beq.w	8028562 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028378:	f9bb 0000 	ldrsh.w	r0, [fp]
 802837c:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028380:	eba9 0700 	sub.w	r7, r9, r0
 8028384:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028388:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802838c:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028390:	ebaa 0802 	sub.w	r8, sl, r2
 8028394:	4407      	add	r7, r0
 8028396:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802839a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802839e:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80283a2:	b23f      	sxth	r7, r7
 80283a4:	4490      	add	r8, r2
 80283a6:	eba9 0707 	sub.w	r7, r9, r7
 80283aa:	fa0f f888 	sxth.w	r8, r8
 80283ae:	ebaa 0808 	sub.w	r8, sl, r8
 80283b2:	2f00      	cmp	r7, #0
 80283b4:	bfb8      	it	lt
 80283b6:	427f      	neglt	r7, r7
 80283b8:	f1b8 0f00 	cmp.w	r8, #0
 80283bc:	bfb8      	it	lt
 80283be:	f1c8 0800 	rsblt	r8, r8, #0
 80283c2:	45bc      	cmp	ip, r7
 80283c4:	bfcc      	ite	gt
 80283c6:	f10c 0701 	addgt.w	r7, ip, #1
 80283ca:	3701      	addle	r7, #1
 80283cc:	4540      	cmp	r0, r8
 80283ce:	bfc8      	it	gt
 80283d0:	f100 0801 	addgt.w	r8, r0, #1
 80283d4:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80283d8:	f100 0001 	add.w	r0, r0, #1
 80283dc:	ea4f 0060 	mov.w	r0, r0, asr #1
 80283e0:	f04f 0202 	mov.w	r2, #2
 80283e4:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80283e8:	fb91 f1f2 	sdiv	r1, r1, r2
 80283ec:	eba3 0301 	sub.w	r3, r3, r1
 80283f0:	bfd8      	it	le
 80283f2:	f108 0801 	addle.w	r8, r8, #1
 80283f6:	9201      	str	r2, [sp, #4]
 80283f8:	930d      	str	r3, [sp, #52]	; 0x34
 80283fa:	f7ea fa97 	bl	801292c <_ZN8touchgfx7CWRUtil4sineEi>
 80283fe:	a92a      	add	r1, sp, #168	; 0xa8
 8028400:	fb08 f808 	mul.w	r8, r8, r8
 8028404:	f841 0d70 	str.w	r0, [r1, #-112]!
 8028408:	a80d      	add	r0, sp, #52	; 0x34
 802840a:	f7ea f977 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802840e:	fb07 8707 	mla	r7, r7, r7, r8
 8028412:	f04f 0c20 	mov.w	ip, #32
 8028416:	fb90 f0fc 	sdiv	r0, r0, ip
 802841a:	4340      	muls	r0, r0
 802841c:	4287      	cmp	r7, r0
 802841e:	9a01      	ldr	r2, [sp, #4]
 8028420:	da04      	bge.n	802842c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8028422:	2401      	movs	r4, #1
 8028424:	4620      	mov	r0, r4
 8028426:	b02b      	add	sp, #172	; 0xac
 8028428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802842c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802842e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8028430:	fb91 f3f2 	sdiv	r3, r1, r2
 8028434:	4403      	add	r3, r0
 8028436:	fb93 f3fc 	sdiv	r3, r3, ip
 802843a:	f9bb 1000 	ldrsh.w	r1, [fp]
 802843e:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8028442:	440a      	add	r2, r1
 8028444:	b212      	sxth	r2, r2
 8028446:	454a      	cmp	r2, r9
 8028448:	bfa8      	it	ge
 802844a:	464a      	movge	r2, r9
 802844c:	428a      	cmp	r2, r1
 802844e:	bfac      	ite	ge
 8028450:	eba9 0902 	subge.w	r9, r9, r2
 8028454:	eba9 0901 	sublt.w	r9, r9, r1
 8028458:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802845c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028460:	440a      	add	r2, r1
 8028462:	b212      	sxth	r2, r2
 8028464:	4552      	cmp	r2, sl
 8028466:	bfa8      	it	ge
 8028468:	4652      	movge	r2, sl
 802846a:	428a      	cmp	r2, r1
 802846c:	bfac      	ite	ge
 802846e:	ebaa 0a02 	subge.w	sl, sl, r2
 8028472:	ebaa 0a01 	sublt.w	sl, sl, r1
 8028476:	3301      	adds	r3, #1
 8028478:	fb0a fa0a 	mul.w	sl, sl, sl
 802847c:	fb09 a909 	mla	r9, r9, r9, sl
 8028480:	435b      	muls	r3, r3
 8028482:	4599      	cmp	r9, r3
 8028484:	dccd      	bgt.n	8028422 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8028486:	465a      	mov	r2, fp
 8028488:	4621      	mov	r1, r4
 802848a:	a80e      	add	r0, sp, #56	; 0x38
 802848c:	f7ff faae 	bl	80279ec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028490:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8028492:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028494:	9209      	str	r2, [sp, #36]	; 0x24
 8028496:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802849a:	930a      	str	r3, [sp, #40]	; 0x28
 802849c:	dd07      	ble.n	80284ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802849e:	2102      	movs	r1, #2
 80284a0:	fb93 f3f1 	sdiv	r3, r3, r1
 80284a4:	4413      	add	r3, r2
 80284a6:	930a      	str	r3, [sp, #40]	; 0x28
 80284a8:	fb93 f3f1 	sdiv	r3, r3, r1
 80284ac:	9309      	str	r3, [sp, #36]	; 0x24
 80284ae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80284b2:	4630      	mov	r0, r6
 80284b4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80284b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80284ba:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80284be:	f7ea fa55 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80284c2:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80284c6:	f04f 0a02 	mov.w	sl, #2
 80284ca:	f849 0d74 	str.w	r0, [r9, #-116]!
 80284ce:	a80b      	add	r0, sp, #44	; 0x2c
 80284d0:	4649      	mov	r1, r9
 80284d2:	f7ea f913 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80284d8:	fb90 f0fa 	sdiv	r0, r0, sl
 80284dc:	eb00 0b03 	add.w	fp, r0, r3
 80284e0:	4630      	mov	r0, r6
 80284e2:	f7ff fcc7 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80284e6:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80284ea:	017f      	lsls	r7, r7, #5
 80284ec:	f848 0d78 	str.w	r0, [r8, #-120]!
 80284f0:	a80b      	add	r0, sp, #44	; 0x2c
 80284f2:	4641      	mov	r1, r8
 80284f4:	f7ea f902 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284f8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80284fa:	fb90 f0fa 	sdiv	r0, r0, sl
 80284fe:	4659      	mov	r1, fp
 8028500:	1a12      	subs	r2, r2, r0
 8028502:	a80e      	add	r0, sp, #56	; 0x38
 8028504:	f7ff fbf2 	bl	8027cec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8028508:	f106 0a20 	add.w	sl, r6, #32
 802850c:	bb67      	cbnz	r7, 8028568 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802850e:	46b3      	mov	fp, r6
 8028510:	45aa      	cmp	sl, r5
 8028512:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028514:	dc33      	bgt.n	802857e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8028516:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028518:	4650      	mov	r0, sl
 802851a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802851e:	920b      	str	r2, [sp, #44]	; 0x2c
 8028520:	f7ea fa24 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028524:	4641      	mov	r1, r8
 8028526:	900c      	str	r0, [sp, #48]	; 0x30
 8028528:	a80b      	add	r0, sp, #44	; 0x2c
 802852a:	f7ea f8e7 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802852e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8028530:	2302      	movs	r3, #2
 8028532:	fb90 f0f3 	sdiv	r0, r0, r3
 8028536:	eb00 0b02 	add.w	fp, r0, r2
 802853a:	4650      	mov	r0, sl
 802853c:	f7ff fc9a 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028540:	4649      	mov	r1, r9
 8028542:	900d      	str	r0, [sp, #52]	; 0x34
 8028544:	a80b      	add	r0, sp, #44	; 0x2c
 8028546:	f7ea f8d9 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802854a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802854c:	2302      	movs	r3, #2
 802854e:	4659      	mov	r1, fp
 8028550:	fb90 f0f3 	sdiv	r0, r0, r3
 8028554:	1a12      	subs	r2, r2, r0
 8028556:	a80e      	add	r0, sp, #56	; 0x38
 8028558:	46d3      	mov	fp, sl
 802855a:	f7ff fc14 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802855e:	44ba      	add	sl, r7
 8028560:	e7d6      	b.n	8028510 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8028562:	fb93 f3f2 	sdiv	r3, r3, r2
 8028566:	e768      	b.n	802843a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028568:	fb9a f2f7 	sdiv	r2, sl, r7
 802856c:	fb07 a212 	mls	r2, r7, r2, sl
 8028570:	1aba      	subs	r2, r7, r2
 8028572:	fb92 f1f7 	sdiv	r1, r2, r7
 8028576:	fb07 2211 	mls	r2, r7, r1, r2
 802857a:	4492      	add	sl, r2
 802857c:	e7c7      	b.n	802850e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802857e:	45ab      	cmp	fp, r5
 8028580:	da23      	bge.n	80285ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8028582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028584:	4628      	mov	r0, r5
 8028586:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802858a:	920b      	str	r2, [sp, #44]	; 0x2c
 802858c:	f7ea f9ee 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028590:	4641      	mov	r1, r8
 8028592:	900c      	str	r0, [sp, #48]	; 0x30
 8028594:	a80b      	add	r0, sp, #44	; 0x2c
 8028596:	f7ea f8b1 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802859a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802859c:	f04f 0a02 	mov.w	sl, #2
 80285a0:	fb90 f0fa 	sdiv	r0, r0, sl
 80285a4:	4403      	add	r3, r0
 80285a6:	4628      	mov	r0, r5
 80285a8:	9301      	str	r3, [sp, #4]
 80285aa:	f7ff fc63 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80285ae:	4649      	mov	r1, r9
 80285b0:	900d      	str	r0, [sp, #52]	; 0x34
 80285b2:	a80b      	add	r0, sp, #44	; 0x2c
 80285b4:	f7ea f8a2 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80285ba:	9b01      	ldr	r3, [sp, #4]
 80285bc:	fb90 f0fa 	sdiv	r0, r0, sl
 80285c0:	4619      	mov	r1, r3
 80285c2:	1a12      	subs	r2, r2, r0
 80285c4:	a80e      	add	r0, sp, #56	; 0x38
 80285c6:	f7ff fbde 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80285ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80285cc:	b99b      	cbnz	r3, 80285f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80285ce:	1bad      	subs	r5, r5, r6
 80285d0:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 80285d4:	da04      	bge.n	80285e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80285d6:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80285da:	a80e      	add	r0, sp, #56	; 0x38
 80285dc:	f7ff fbd3 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80285e0:	21ff      	movs	r1, #255	; 0xff
 80285e2:	a80e      	add	r0, sp, #56	; 0x38
 80285e4:	f7ff fabe 	bl	8027b64 <_ZN8touchgfx6Canvas6renderEh>
 80285e8:	4604      	mov	r4, r0
 80285ea:	4b8a      	ldr	r3, [pc, #552]	; (8028814 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80285ec:	930e      	str	r3, [sp, #56]	; 0x38
 80285ee:	a816      	add	r0, sp, #88	; 0x58
 80285f0:	f7eb fcf0 	bl	8013fd4 <_ZN8touchgfx7OutlineD1Ev>
 80285f4:	e716      	b.n	8028424 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80285f6:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80285fa:	429a      	cmp	r2, r3
 80285fc:	f0c0 8107 	bcc.w	802880e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8028600:	1bab      	subs	r3, r5, r6
 8028602:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8028606:	9301      	str	r3, [sp, #4]
 8028608:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802860c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8028610:	da43      	bge.n	802869a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028612:	4628      	mov	r0, r5
 8028614:	f7ea f9aa 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028618:	4649      	mov	r1, r9
 802861a:	900d      	str	r0, [sp, #52]	; 0x34
 802861c:	a809      	add	r0, sp, #36	; 0x24
 802861e:	f7ea f86d 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028622:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028624:	18c3      	adds	r3, r0, r3
 8028626:	4628      	mov	r0, r5
 8028628:	9303      	str	r3, [sp, #12]
 802862a:	f7ff fc23 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802862e:	4649      	mov	r1, r9
 8028630:	900d      	str	r0, [sp, #52]	; 0x34
 8028632:	a809      	add	r0, sp, #36	; 0x24
 8028634:	f7ea f862 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028638:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802863a:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802863e:	1a1b      	subs	r3, r3, r0
 8028640:	9302      	str	r3, [sp, #8]
 8028642:	9204      	str	r2, [sp, #16]
 8028644:	eb0a 0305 	add.w	r3, sl, r5
 8028648:	9a04      	ldr	r2, [sp, #16]
 802864a:	4293      	cmp	r3, r2
 802864c:	da25      	bge.n	802869a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802864e:	4618      	mov	r0, r3
 8028650:	9306      	str	r3, [sp, #24]
 8028652:	f7ea f98b 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028656:	4649      	mov	r1, r9
 8028658:	900d      	str	r0, [sp, #52]	; 0x34
 802865a:	a80a      	add	r0, sp, #40	; 0x28
 802865c:	f7ea f84e 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028660:	9b03      	ldr	r3, [sp, #12]
 8028662:	2202      	movs	r2, #2
 8028664:	fb90 f0f2 	sdiv	r0, r0, r2
 8028668:	18c3      	adds	r3, r0, r3
 802866a:	9305      	str	r3, [sp, #20]
 802866c:	9b06      	ldr	r3, [sp, #24]
 802866e:	9207      	str	r2, [sp, #28]
 8028670:	4618      	mov	r0, r3
 8028672:	f7ff fbff 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028676:	a92a      	add	r1, sp, #168	; 0xa8
 8028678:	f841 0d78 	str.w	r0, [r1, #-120]!
 802867c:	a80a      	add	r0, sp, #40	; 0x28
 802867e:	f7ea f83d 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028682:	9b02      	ldr	r3, [sp, #8]
 8028684:	9a07      	ldr	r2, [sp, #28]
 8028686:	9905      	ldr	r1, [sp, #20]
 8028688:	fb90 f2f2 	sdiv	r2, r0, r2
 802868c:	a80e      	add	r0, sp, #56	; 0x38
 802868e:	1a9a      	subs	r2, r3, r2
 8028690:	f7ff fb79 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028694:	9b06      	ldr	r3, [sp, #24]
 8028696:	4453      	add	r3, sl
 8028698:	e7d6      	b.n	8028648 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802869a:	45ab      	cmp	fp, r5
 802869c:	da25      	bge.n	80286ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802869e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80286a2:	4628      	mov	r0, r5
 80286a4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80286a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80286aa:	f7ea f95f 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286ae:	4641      	mov	r1, r8
 80286b0:	900c      	str	r0, [sp, #48]	; 0x30
 80286b2:	a80b      	add	r0, sp, #44	; 0x2c
 80286b4:	f7ea f822 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80286ba:	2202      	movs	r2, #2
 80286bc:	fb90 f0f2 	sdiv	r0, r0, r2
 80286c0:	eb00 0903 	add.w	r9, r0, r3
 80286c4:	4628      	mov	r0, r5
 80286c6:	9202      	str	r2, [sp, #8]
 80286c8:	f7ff fbd4 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286cc:	a92a      	add	r1, sp, #168	; 0xa8
 80286ce:	f841 0d74 	str.w	r0, [r1, #-116]!
 80286d2:	a80b      	add	r0, sp, #44	; 0x2c
 80286d4:	f7ea f812 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80286da:	9a02      	ldr	r2, [sp, #8]
 80286dc:	fb90 f2f2 	sdiv	r2, r0, r2
 80286e0:	4649      	mov	r1, r9
 80286e2:	1a9a      	subs	r2, r3, r2
 80286e4:	a80e      	add	r0, sp, #56	; 0x38
 80286e6:	f7ff fb4e 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80286ea:	46d9      	mov	r9, fp
 80286ec:	2502      	movs	r5, #2
 80286ee:	45b1      	cmp	r9, r6
 80286f0:	db25      	blt.n	802873e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80286f2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80286f6:	4648      	mov	r0, r9
 80286f8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80286fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80286fe:	f7ea f935 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028702:	4641      	mov	r1, r8
 8028704:	900c      	str	r0, [sp, #48]	; 0x30
 8028706:	a80b      	add	r0, sp, #44	; 0x2c
 8028708:	f7e9 fff8 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802870c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802870e:	fb90 f0f5 	sdiv	r0, r0, r5
 8028712:	eb00 0b03 	add.w	fp, r0, r3
 8028716:	4648      	mov	r0, r9
 8028718:	f7ff fbac 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802871c:	a90d      	add	r1, sp, #52	; 0x34
 802871e:	900d      	str	r0, [sp, #52]	; 0x34
 8028720:	a80b      	add	r0, sp, #44	; 0x2c
 8028722:	f7e9 ffeb 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028726:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028728:	fb90 f0f5 	sdiv	r0, r0, r5
 802872c:	4659      	mov	r1, fp
 802872e:	1a12      	subs	r2, r2, r0
 8028730:	a80e      	add	r0, sp, #56	; 0x38
 8028732:	46cb      	mov	fp, r9
 8028734:	f7ff fb27 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028738:	eba9 0907 	sub.w	r9, r9, r7
 802873c:	e7d7      	b.n	80286ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802873e:	455e      	cmp	r6, fp
 8028740:	da22      	bge.n	8028788 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8028742:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028746:	4630      	mov	r0, r6
 8028748:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802874c:	930b      	str	r3, [sp, #44]	; 0x2c
 802874e:	f7ea f90d 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028752:	4641      	mov	r1, r8
 8028754:	900c      	str	r0, [sp, #48]	; 0x30
 8028756:	a80b      	add	r0, sp, #44	; 0x2c
 8028758:	f7e9 ffd0 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802875c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802875e:	2502      	movs	r5, #2
 8028760:	fb90 f0f5 	sdiv	r0, r0, r5
 8028764:	4407      	add	r7, r0
 8028766:	4630      	mov	r0, r6
 8028768:	f7ff fb84 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802876c:	a92a      	add	r1, sp, #168	; 0xa8
 802876e:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028772:	a80b      	add	r0, sp, #44	; 0x2c
 8028774:	f7e9 ffc2 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028778:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802877a:	fb90 f0f5 	sdiv	r0, r0, r5
 802877e:	4639      	mov	r1, r7
 8028780:	1a12      	subs	r2, r2, r0
 8028782:	a80e      	add	r0, sp, #56	; 0x38
 8028784:	f7ff faff 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028788:	9b01      	ldr	r3, [sp, #4]
 802878a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802878e:	f6bf af27 	bge.w	80285e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028792:	4630      	mov	r0, r6
 8028794:	f7ea f8ea 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028798:	ad2a      	add	r5, sp, #168	; 0xa8
 802879a:	f04f 0b02 	mov.w	fp, #2
 802879e:	f845 0d74 	str.w	r0, [r5, #-116]!
 80287a2:	a809      	add	r0, sp, #36	; 0x24
 80287a4:	4629      	mov	r1, r5
 80287a6:	f7e9 ffa9 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287aa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80287ac:	eb00 0903 	add.w	r9, r0, r3
 80287b0:	4630      	mov	r0, r6
 80287b2:	f7ff fb5f 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80287b6:	4629      	mov	r1, r5
 80287b8:	900d      	str	r0, [sp, #52]	; 0x34
 80287ba:	a809      	add	r0, sp, #36	; 0x24
 80287bc:	f7e9 ff9e 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80287c2:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 80287c6:	eba3 0800 	sub.w	r8, r3, r0
 80287ca:	4454      	add	r4, sl
 80287cc:	42a6      	cmp	r6, r4
 80287ce:	f77f af07 	ble.w	80285e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80287d2:	4620      	mov	r0, r4
 80287d4:	f7ea f8ca 	bl	801296c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80287d8:	4629      	mov	r1, r5
 80287da:	900d      	str	r0, [sp, #52]	; 0x34
 80287dc:	a80a      	add	r0, sp, #40	; 0x28
 80287de:	f7e9 ff8d 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287e2:	fb90 f0fb 	sdiv	r0, r0, fp
 80287e6:	eb00 0709 	add.w	r7, r0, r9
 80287ea:	4620      	mov	r0, r4
 80287ec:	f7ff fb42 	bl	8027e74 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80287f0:	a90c      	add	r1, sp, #48	; 0x30
 80287f2:	900c      	str	r0, [sp, #48]	; 0x30
 80287f4:	a80a      	add	r0, sp, #40	; 0x28
 80287f6:	f7e9 ff81 	bl	80126fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287fa:	4639      	mov	r1, r7
 80287fc:	fb90 f2fb 	sdiv	r2, r0, fp
 8028800:	a80e      	add	r0, sp, #56	; 0x38
 8028802:	eba8 0202 	sub.w	r2, r8, r2
 8028806:	f7ff fabe 	bl	8027d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802880a:	4454      	add	r4, sl
 802880c:	e7de      	b.n	80287cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802880e:	2400      	movs	r4, #0
 8028810:	e6eb      	b.n	80285ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8028812:	bf00      	nop
 8028814:	080304a4 	.word	0x080304a4

08028818 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028818:	b570      	push	{r4, r5, r6, lr}
 802881a:	790b      	ldrb	r3, [r1, #4]
 802881c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028820:	2b00      	cmp	r3, #0
 8028822:	bf0c      	ite	eq
 8028824:	2301      	moveq	r3, #1
 8028826:	2300      	movne	r3, #0
 8028828:	4604      	mov	r4, r0
 802882a:	460e      	mov	r6, r1
 802882c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028830:	d109      	bne.n	8028846 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028832:	b14d      	cbz	r5, 8028848 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028834:	7933      	ldrb	r3, [r6, #4]
 8028836:	2b01      	cmp	r3, #1
 8028838:	d10c      	bne.n	8028854 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802883a:	6823      	ldr	r3, [r4, #0]
 802883c:	4620      	mov	r0, r4
 802883e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028840:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028844:	4718      	bx	r3
 8028846:	b12d      	cbz	r5, 8028854 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028848:	6823      	ldr	r3, [r4, #0]
 802884a:	4620      	mov	r0, r4
 802884c:	695b      	ldr	r3, [r3, #20]
 802884e:	4798      	blx	r3
 8028850:	2d00      	cmp	r5, #0
 8028852:	d1ef      	bne.n	8028834 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8028854:	bd70      	pop	{r4, r5, r6, pc}

08028856 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8028856:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802885a:	4770      	bx	lr

0802885c <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802885c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028860:	4770      	bx	lr

08028862 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8028862:	6802      	ldr	r2, [r0, #0]
 8028864:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028868:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802886a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802886e:	4710      	bx	r2

08028870 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028870:	6802      	ldr	r2, [r0, #0]
 8028872:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028876:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028878:	eef0 0a40 	vmov.f32	s1, s0
 802887c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028880:	4710      	bx	r2

08028882 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8028882:	6802      	ldr	r2, [r0, #0]
 8028884:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028888:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802888a:	eeb0 1a40 	vmov.f32	s2, s0
 802888e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028892:	4710      	bx	r2

08028894 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028894:	6802      	ldr	r2, [r0, #0]
 8028896:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802889a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802889c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80288a0:	4710      	bx	r2

080288a2 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 80288a2:	6802      	ldr	r2, [r0, #0]
 80288a4:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80288a8:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80288aa:	eef0 0a40 	vmov.f32	s1, s0
 80288ae:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80288b2:	4710      	bx	r2

080288b4 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 80288b4:	6802      	ldr	r2, [r0, #0]
 80288b6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80288ba:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80288bc:	eeb0 1a40 	vmov.f32	s2, s0
 80288c0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80288c4:	4710      	bx	r2

080288c6 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 80288c6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80288ca:	4770      	bx	lr

080288cc <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 80288cc:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 80288d0:	4770      	bx	lr

080288d2 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 80288d2:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 80288d6:	4770      	bx	lr

080288d8 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80288d8:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80288dc:	4770      	bx	lr

080288de <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80288de:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80288e2:	4770      	bx	lr

080288e4 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80288e4:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80288e8:	4770      	bx	lr

080288ea <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80288ea:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80288ee:	4770      	bx	lr

080288f0 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80288f0:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80288f4:	4770      	bx	lr

080288f6 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80288f6:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80288fa:	4770      	bx	lr

080288fc <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80288fc:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028900:	4770      	bx	lr

08028902 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028902:	ee07 2a90 	vmov	s15, r2
 8028906:	6803      	ldr	r3, [r0, #0]
 8028908:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802890c:	ee07 1a90 	vmov	s15, r1
 8028910:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028914:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028918:	4718      	bx	r3

0802891a <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802891a:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802891e:	4770      	bx	lr

08028920 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028920:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028924:	4770      	bx	lr

08028926 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028926:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802892a:	4770      	bx	lr

0802892c <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802892c:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028930:	4770      	bx	lr

08028932 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8028932:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8028936:	4770      	bx	lr

08028938 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028938:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802893c:	4770      	bx	lr

0802893e <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802893e:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028942:	4770      	bx	lr

08028944 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028944:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028948:	4770      	bx	lr

0802894a <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802894a:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802894e:	4770      	bx	lr

08028950 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028950:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028954:	4770      	bx	lr

08028956 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028956:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802895a:	4770      	bx	lr

0802895c <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802895c:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028960:	4770      	bx	lr

08028962 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028962:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028966:	4770      	bx	lr

08028968 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028968:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802896c:	4770      	bx	lr

0802896e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802896e:	b510      	push	{r4, lr}
 8028970:	ed2d 8b04 	vpush	{d8-d9}
 8028974:	6803      	ldr	r3, [r0, #0]
 8028976:	4604      	mov	r4, r0
 8028978:	699b      	ldr	r3, [r3, #24]
 802897a:	eeb0 8a40 	vmov.f32	s16, s0
 802897e:	eef0 8a60 	vmov.f32	s17, s1
 8028982:	eeb0 9a41 	vmov.f32	s18, s2
 8028986:	4798      	blx	r3
 8028988:	6823      	ldr	r3, [r4, #0]
 802898a:	4620      	mov	r0, r4
 802898c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802898e:	eeb0 1a49 	vmov.f32	s2, s18
 8028992:	eef0 0a68 	vmov.f32	s1, s17
 8028996:	eeb0 0a48 	vmov.f32	s0, s16
 802899a:	4798      	blx	r3
 802899c:	ecbd 8b04 	vpop	{d8-d9}
 80289a0:	6823      	ldr	r3, [r4, #0]
 80289a2:	4620      	mov	r0, r4
 80289a4:	699b      	ldr	r3, [r3, #24]
 80289a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80289aa:	4718      	bx	r3

080289ac <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80289ac:	b510      	push	{r4, lr}
 80289ae:	ed2d 8b02 	vpush	{d8}
 80289b2:	6803      	ldr	r3, [r0, #0]
 80289b4:	4604      	mov	r4, r0
 80289b6:	699b      	ldr	r3, [r3, #24]
 80289b8:	eeb0 8a40 	vmov.f32	s16, s0
 80289bc:	4798      	blx	r3
 80289be:	6823      	ldr	r3, [r4, #0]
 80289c0:	4620      	mov	r0, r4
 80289c2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80289c6:	eeb0 0a48 	vmov.f32	s0, s16
 80289ca:	4798      	blx	r3
 80289cc:	ecbd 8b02 	vpop	{d8}
 80289d0:	6823      	ldr	r3, [r4, #0]
 80289d2:	4620      	mov	r0, r4
 80289d4:	699b      	ldr	r3, [r3, #24]
 80289d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80289da:	4718      	bx	r3

080289dc <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80289dc:	2200      	movs	r2, #0
 80289de:	8002      	strh	r2, [r0, #0]
 80289e0:	8042      	strh	r2, [r0, #2]
 80289e2:	8082      	strh	r2, [r0, #4]
 80289e4:	80c2      	strh	r2, [r0, #6]
 80289e6:	4770      	bx	lr

080289e8 <_ZN8touchgfx13TextureMapperD1Ev>:
 80289e8:	4770      	bx	lr

080289ea <_ZN8touchgfx13TextureMapperD0Ev>:
 80289ea:	b510      	push	{r4, lr}
 80289ec:	2190      	movs	r1, #144	; 0x90
 80289ee:	4604      	mov	r4, r0
 80289f0:	f001 ff3f 	bl	802a872 <_ZdlPvj>
 80289f4:	4620      	mov	r0, r4
 80289f6:	bd10      	pop	{r4, pc}

080289f8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80289f8:	b538      	push	{r3, r4, r5, lr}
 80289fa:	2500      	movs	r5, #0
 80289fc:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028a00:	2301      	movs	r3, #1
 8028a02:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028a06:	4b1f      	ldr	r3, [pc, #124]	; (8028a84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028a08:	8085      	strh	r5, [r0, #4]
 8028a0a:	80c5      	strh	r5, [r0, #6]
 8028a0c:	8105      	strh	r5, [r0, #8]
 8028a0e:	8145      	strh	r5, [r0, #10]
 8028a10:	8185      	strh	r5, [r0, #12]
 8028a12:	81c5      	strh	r5, [r0, #14]
 8028a14:	8205      	strh	r5, [r0, #16]
 8028a16:	8245      	strh	r5, [r0, #18]
 8028a18:	61c5      	str	r5, [r0, #28]
 8028a1a:	8405      	strh	r5, [r0, #32]
 8028a1c:	8445      	strh	r5, [r0, #34]	; 0x22
 8028a1e:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028a22:	6003      	str	r3, [r0, #0]
 8028a24:	880b      	ldrh	r3, [r1, #0]
 8028a26:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028a28:	23ff      	movs	r3, #255	; 0xff
 8028a2a:	4604      	mov	r4, r0
 8028a2c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028a30:	f7eb f961 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028a34:	4b14      	ldr	r3, [pc, #80]	; (8028a88 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028a36:	6023      	str	r3, [r4, #0]
 8028a38:	2300      	movs	r3, #0
 8028a3a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028a3e:	4913      	ldr	r1, [pc, #76]	; (8028a8c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028a40:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028a42:	6323      	str	r3, [r4, #48]	; 0x30
 8028a44:	6363      	str	r3, [r4, #52]	; 0x34
 8028a46:	63a3      	str	r3, [r4, #56]	; 0x38
 8028a48:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028a4a:	6463      	str	r3, [r4, #68]	; 0x44
 8028a4c:	64a3      	str	r3, [r4, #72]	; 0x48
 8028a4e:	6523      	str	r3, [r4, #80]	; 0x50
 8028a50:	6563      	str	r3, [r4, #84]	; 0x54
 8028a52:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028a54:	6623      	str	r3, [r4, #96]	; 0x60
 8028a56:	66a3      	str	r3, [r4, #104]	; 0x68
 8028a58:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028a5a:	6763      	str	r3, [r4, #116]	; 0x74
 8028a5c:	67a3      	str	r3, [r4, #120]	; 0x78
 8028a5e:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8028a62:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8028a66:	230c      	movs	r3, #12
 8028a68:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8028a6c:	6422      	str	r2, [r4, #64]	; 0x40
 8028a6e:	64e1      	str	r1, [r4, #76]	; 0x4c
 8028a70:	65a1      	str	r1, [r4, #88]	; 0x58
 8028a72:	6662      	str	r2, [r4, #100]	; 0x64
 8028a74:	6722      	str	r2, [r4, #112]	; 0x70
 8028a76:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028a78:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028a7c:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8028a80:	4620      	mov	r0, r4
 8028a82:	bd38      	pop	{r3, r4, r5, pc}
 8028a84:	0802ff4c 	.word	0x0802ff4c
 8028a88:	08030530 	.word	0x08030530
 8028a8c:	447a0000 	.word	0x447a0000

08028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8028a90:	b570      	push	{r4, r5, r6, lr}
 8028a92:	ed2d 8b04 	vpush	{d8-d9}
 8028a96:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8028a9a:	add0      	add	r5, sp, #832	; 0x340
 8028a9c:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8028a9e:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8028aa2:	4604      	mov	r4, r0
 8028aa4:	4628      	mov	r0, r5
 8028aa6:	f7f1 fa7f 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028aaa:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028aac:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028ab0:	4606      	mov	r6, r0
 8028ab2:	4628      	mov	r0, r5
 8028ab4:	f7f1 faac 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028ab8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028abc:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028ac0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8028ac2:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8028ac6:	9312      	str	r3, [sp, #72]	; 0x48
 8028ac8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028acc:	1c72      	adds	r2, r6, #1
 8028ace:	3001      	adds	r0, #1
 8028ad0:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8028ad4:	ee07 2a90 	vmov	s15, r2
 8028ad8:	ee06 0a90 	vmov	s13, r0
 8028adc:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028ae0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028ae4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028ae8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028aec:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028af0:	9316      	str	r3, [sp, #88]	; 0x58
 8028af2:	931a      	str	r3, [sp, #104]	; 0x68
 8028af4:	931e      	str	r3, [sp, #120]	; 0x78
 8028af6:	2300      	movs	r3, #0
 8028af8:	9320      	str	r3, [sp, #128]	; 0x80
 8028afa:	9321      	str	r3, [sp, #132]	; 0x84
 8028afc:	9322      	str	r3, [sp, #136]	; 0x88
 8028afe:	9324      	str	r3, [sp, #144]	; 0x90
 8028b00:	9325      	str	r3, [sp, #148]	; 0x94
 8028b02:	9326      	str	r3, [sp, #152]	; 0x98
 8028b04:	9328      	str	r3, [sp, #160]	; 0xa0
 8028b06:	9329      	str	r3, [sp, #164]	; 0xa4
 8028b08:	932a      	str	r3, [sp, #168]	; 0xa8
 8028b0a:	932c      	str	r3, [sp, #176]	; 0xb0
 8028b0c:	932d      	str	r3, [sp, #180]	; 0xb4
 8028b0e:	932e      	str	r3, [sp, #184]	; 0xb8
 8028b10:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028b14:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028b18:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028b1c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028b20:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028b24:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028b28:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028b2c:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8028b30:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8028b34:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028b38:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028b3c:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028b40:	a830      	add	r0, sp, #192	; 0xc0
 8028b42:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028b46:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028b4a:	f000 fc43 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028b4e:	eeb1 0a49 	vneg.f32	s0, s18
 8028b52:	a830      	add	r0, sp, #192	; 0xc0
 8028b54:	f000 fd12 	bl	802957c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028b58:	eeb1 0a68 	vneg.f32	s0, s17
 8028b5c:	f000 fd1c 	bl	8029598 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028b60:	eeb1 0a48 	vneg.f32	s0, s16
 8028b64:	f000 fd27 	bl	80295b6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028b68:	a840      	add	r0, sp, #256	; 0x100
 8028b6a:	f000 fc33 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028b6e:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8028b72:	a840      	add	r0, sp, #256	; 0x100
 8028b74:	f000 fc86 	bl	8029484 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028b78:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028b7c:	f000 fcac 	bl	80294d8 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8028b80:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028b84:	f000 fcd1 	bl	802952a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028b88:	a850      	add	r0, sp, #320	; 0x140
 8028b8a:	f000 fc23 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028b8e:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028b92:	a850      	add	r0, sp, #320	; 0x140
 8028b94:	f000 fd1e 	bl	80295d4 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028b98:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028b9c:	f000 fd26 	bl	80295ec <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8028ba0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028ba4:	f000 fd2f 	bl	8029606 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028ba8:	a860      	add	r0, sp, #384	; 0x180
 8028baa:	f000 fc13 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028bae:	eeb0 0a49 	vmov.f32	s0, s18
 8028bb2:	a860      	add	r0, sp, #384	; 0x180
 8028bb4:	f000 fce2 	bl	802957c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028bb8:	eeb0 0a68 	vmov.f32	s0, s17
 8028bbc:	f000 fcec 	bl	8029598 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028bc0:	eeb0 0a48 	vmov.f32	s0, s16
 8028bc4:	f000 fcf7 	bl	80295b6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028bc8:	aa50      	add	r2, sp, #320	; 0x140
 8028bca:	a960      	add	r1, sp, #384	; 0x180
 8028bcc:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028bce:	f000 fc1b 	bl	8029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028bd2:	4628      	mov	r0, r5
 8028bd4:	aa40      	add	r2, sp, #256	; 0x100
 8028bd6:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028bd8:	f000 fc16 	bl	8029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028bdc:	4629      	mov	r1, r5
 8028bde:	aa30      	add	r2, sp, #192	; 0xc0
 8028be0:	a870      	add	r0, sp, #448	; 0x1c0
 8028be2:	f000 fc11 	bl	8029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028be6:	a880      	add	r0, sp, #512	; 0x200
 8028be8:	f000 fbf4 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028bec:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028bf0:	a880      	add	r0, sp, #512	; 0x200
 8028bf2:	eeb1 0a40 	vneg.f32	s0, s0
 8028bf6:	f000 fcc1 	bl	802957c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028bfa:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028bfe:	a880      	add	r0, sp, #512	; 0x200
 8028c00:	eeb1 0a40 	vneg.f32	s0, s0
 8028c04:	f000 fcc8 	bl	8029598 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028c08:	a890      	add	r0, sp, #576	; 0x240
 8028c0a:	f000 fbe3 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c0e:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8028c12:	a890      	add	r0, sp, #576	; 0x240
 8028c14:	f000 fc26 	bl	8029464 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028c18:	a8a0      	add	r0, sp, #640	; 0x280
 8028c1a:	f000 fbdb 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c1e:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028c22:	a8a0      	add	r0, sp, #640	; 0x280
 8028c24:	f000 fcaa 	bl	802957c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028c28:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028c2c:	f000 fcb4 	bl	8029598 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028c30:	aa90      	add	r2, sp, #576	; 0x240
 8028c32:	a9a0      	add	r1, sp, #640	; 0x280
 8028c34:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028c36:	f000 fbe7 	bl	8029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028c3a:	4628      	mov	r0, r5
 8028c3c:	aa80      	add	r2, sp, #512	; 0x200
 8028c3e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028c40:	f000 fbe2 	bl	8029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028c44:	4629      	mov	r1, r5
 8028c46:	aa70      	add	r2, sp, #448	; 0x1c0
 8028c48:	4668      	mov	r0, sp
 8028c4a:	466d      	mov	r5, sp
 8028c4c:	f000 fbdc 	bl	8029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028c50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028c52:	ae70      	add	r6, sp, #448	; 0x1c0
 8028c54:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028c56:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028c58:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028c5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028c5c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028c5e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8028c62:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028c66:	2500      	movs	r5, #0
 8028c68:	0129      	lsls	r1, r5, #4
 8028c6a:	ab20      	add	r3, sp, #128	; 0x80
 8028c6c:	185e      	adds	r6, r3, r1
 8028c6e:	ab10      	add	r3, sp, #64	; 0x40
 8028c70:	4419      	add	r1, r3
 8028c72:	a870      	add	r0, sp, #448	; 0x1c0
 8028c74:	f000 fb7e 	bl	8029374 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028c78:	3501      	adds	r5, #1
 8028c7a:	2d04      	cmp	r5, #4
 8028c7c:	ed86 0a00 	vstr	s0, [r6]
 8028c80:	edc6 0a01 	vstr	s1, [r6, #4]
 8028c84:	ed86 1a02 	vstr	s2, [r6, #8]
 8028c88:	edc6 1a03 	vstr	s3, [r6, #12]
 8028c8c:	d1ec      	bne.n	8028c68 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8028c8e:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8028c92:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028c96:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028c9a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028c9e:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8028ca2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028ca6:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028caa:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8028cae:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028cb2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028cb6:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028cba:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8028cbe:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8028cc2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028cc6:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028cca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028cce:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8028cd2:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028cd6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028cda:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028cde:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8028ce2:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028ce6:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028cea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028cee:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028cf2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028cf6:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028cfa:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028cfe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028d02:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028d06:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028d0a:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028d0e:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028d12:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028d16:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028d1a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028d1e:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028d22:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028d26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028d2a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8028d2e:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8028d32:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028d36:	ecbd 8b04 	vpop	{d8-d9}
 8028d3a:	bd70      	pop	{r4, r5, r6, pc}

08028d3c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028d3c:	b510      	push	{r4, lr}
 8028d3e:	4604      	mov	r4, r0
 8028d40:	f7ea ffd9 	bl	8013cf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028d44:	4620      	mov	r0, r4
 8028d46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028d4a:	f7ff bea1 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028d4e <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8028d4e:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8028d52:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028d56:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028d5a:	f7ff be99 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028d5e <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8028d5e:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8028d62:	f7ff be95 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028d66 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028d66:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028d6a:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8028d6e:	f7ff be8f 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028d72 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8028d72:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028d76:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028d7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d7e:	bfd8      	it	le
 8028d80:	eeb0 0a67 	vmovle.f32	s0, s15
 8028d84:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028d88:	f7ff be82 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028d8c <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028d8c:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028d90:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028d94:	f7ff be7c 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028d98 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028d98:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028d9c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028da0:	f7ff be76 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028da4 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028da4:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028da8:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028dac:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028db0:	f7ff be6e 	b.w	8028a90 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028db4 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028db8:	ed2d 8b04 	vpush	{d8-d9}
 8028dbc:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028dc0:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028dc4:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028dc8:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028dcc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028dd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028dd4:	bf54      	ite	pl
 8028dd6:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028dda:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028dde:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028de6:	bfd8      	it	le
 8028de8:	eeb0 0a49 	vmovle.f32	s0, s18
 8028dec:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028df0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028df4:	bfd8      	it	le
 8028df6:	eeb0 0a68 	vmovle.f32	s0, s17
 8028dfa:	460c      	mov	r4, r1
 8028dfc:	4607      	mov	r7, r0
 8028dfe:	f001 fe4f 	bl	802aaa0 <floorf>
 8028e02:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e0a:	bf58      	it	pl
 8028e0c:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028e10:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028e14:	bf56      	itet	pl
 8028e16:	ee10 3a10 	vmovpl	r3, s0
 8028e1a:	2600      	movmi	r6, #0
 8028e1c:	b21e      	sxthpl	r6, r3
 8028e1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e22:	bfd8      	it	le
 8028e24:	eeb0 8a69 	vmovle.f32	s16, s19
 8028e28:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028e2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e30:	bf58      	it	pl
 8028e32:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028e36:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028e3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e3e:	bf54      	ite	pl
 8028e40:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028e44:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028e48:	f001 fde8 	bl	802aa1c <ceilf>
 8028e4c:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028e50:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028e54:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028e58:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028e5c:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8028e60:	ee07 8a90 	vmov	s15, r8
 8028e64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028e68:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e70:	bfd8      	it	le
 8028e72:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028e76:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028e7a:	bfdc      	itt	le
 8028e7c:	ee10 3a10 	vmovle	r3, s0
 8028e80:	fa0f f883 	sxthle.w	r8, r3
 8028e84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e88:	bf54      	ite	pl
 8028e8a:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028e8e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028e92:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028e96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e9a:	bfd8      	it	le
 8028e9c:	eeb0 0a49 	vmovle.f32	s0, s18
 8028ea0:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ea8:	bfd8      	it	le
 8028eaa:	eeb0 0a68 	vmovle.f32	s0, s17
 8028eae:	f001 fdf7 	bl	802aaa0 <floorf>
 8028eb2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028eb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028eba:	bf58      	it	pl
 8028ebc:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028ec0:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028ec4:	bf56      	itet	pl
 8028ec6:	ee10 3a10 	vmovpl	r3, s0
 8028eca:	2500      	movmi	r5, #0
 8028ecc:	b21d      	sxthpl	r5, r3
 8028ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ed2:	bfd8      	it	le
 8028ed4:	eeb0 8a69 	vmovle.f32	s16, s19
 8028ed8:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028edc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ee0:	bf58      	it	pl
 8028ee2:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028ee6:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028eea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028eee:	bf54      	ite	pl
 8028ef0:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028ef4:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028ef8:	f001 fd90 	bl	802aa1c <ceilf>
 8028efc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028f00:	803e      	strh	r6, [r7, #0]
 8028f02:	ee07 3a90 	vmov	s15, r3
 8028f06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028f0a:	807d      	strh	r5, [r7, #2]
 8028f0c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f14:	bfd8      	it	le
 8028f16:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028f1a:	eba8 0606 	sub.w	r6, r8, r6
 8028f1e:	bfdc      	itt	le
 8028f20:	ee10 3a10 	vmovle	r3, s0
 8028f24:	b21b      	sxthle	r3, r3
 8028f26:	1b5d      	subs	r5, r3, r5
 8028f28:	80be      	strh	r6, [r7, #4]
 8028f2a:	80fd      	strh	r5, [r7, #6]
 8028f2c:	ecbd 8b04 	vpop	{d8-d9}
 8028f30:	4638      	mov	r0, r7
 8028f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028f36 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028f36:	b513      	push	{r0, r1, r4, lr}
 8028f38:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028f3c:	4604      	mov	r4, r0
 8028f3e:	b143      	cbz	r3, 8028f52 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8028f40:	4601      	mov	r1, r0
 8028f42:	4668      	mov	r0, sp
 8028f44:	f7ff ff36 	bl	8028db4 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028f48:	6823      	ldr	r3, [r4, #0]
 8028f4a:	4669      	mov	r1, sp
 8028f4c:	691b      	ldr	r3, [r3, #16]
 8028f4e:	4620      	mov	r0, r4
 8028f50:	4798      	blx	r3
 8028f52:	b002      	add	sp, #8
 8028f54:	bd10      	pop	{r4, pc}

08028f56 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028f56:	4603      	mov	r3, r0
 8028f58:	3026      	adds	r0, #38	; 0x26
 8028f5a:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8028f5e:	b90b      	cbnz	r3, 8028f64 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8028f60:	f7ee bdfa 	b.w	8017b58 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028f64:	f7ee be08 	b.w	8017b78 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028f68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028f6c:	ed2d 8b04 	vpush	{d8-d9}
 8028f70:	4604      	mov	r4, r0
 8028f72:	469b      	mov	fp, r3
 8028f74:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028f78:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028f7c:	f9b1 6000 	ldrsh.w	r6, [r1]
 8028f80:	8888      	ldrh	r0, [r1, #4]
 8028f82:	b0b3      	sub	sp, #204	; 0xcc
 8028f84:	4430      	add	r0, r6
 8028f86:	b280      	uxth	r0, r0
 8028f88:	9206      	str	r2, [sp, #24]
 8028f8a:	fa0f fe80 	sxth.w	lr, r0
 8028f8e:	2200      	movs	r2, #0
 8028f90:	4596      	cmp	lr, r2
 8028f92:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028f96:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028f9a:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8028f9e:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8028fa0:	9211      	str	r2, [sp, #68]	; 0x44
 8028fa2:	f340 8129 	ble.w	80291f8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028fa6:	45b4      	cmp	ip, r6
 8028fa8:	f340 8126 	ble.w	80291f8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028fac:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8028fb0:	88ca      	ldrh	r2, [r1, #6]
 8028fb2:	442a      	add	r2, r5
 8028fb4:	b292      	uxth	r2, r2
 8028fb6:	b211      	sxth	r1, r2
 8028fb8:	2900      	cmp	r1, #0
 8028fba:	f340 811d 	ble.w	80291f8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028fbe:	42ab      	cmp	r3, r5
 8028fc0:	f340 811a 	ble.w	80291f8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028fc4:	45f4      	cmp	ip, lr
 8028fc6:	bfb8      	it	lt
 8028fc8:	fa1f f08c 	uxthlt.w	r0, ip
 8028fcc:	428b      	cmp	r3, r1
 8028fce:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8028fd2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028fd6:	bfb8      	it	lt
 8028fd8:	b29a      	uxthlt	r2, r3
 8028fda:	1b80      	subs	r0, r0, r6
 8028fdc:	1b52      	subs	r2, r2, r5
 8028fde:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8028fe2:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028fe6:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028fea:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8028fee:	ab11      	add	r3, sp, #68	; 0x44
 8028ff0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028ff4:	6822      	ldr	r2, [r4, #0]
 8028ff6:	9307      	str	r3, [sp, #28]
 8028ff8:	ad13      	add	r5, sp, #76	; 0x4c
 8028ffa:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028ffc:	e885 0003 	stmia.w	r5, {r0, r1}
 8029000:	4629      	mov	r1, r5
 8029002:	4620      	mov	r0, r4
 8029004:	4790      	blx	r2
 8029006:	4621      	mov	r1, r4
 8029008:	a815      	add	r0, sp, #84	; 0x54
 802900a:	f7ee fd01 	bl	8017a10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802900e:	a815      	add	r0, sp, #84	; 0x54
 8029010:	f7ed f9c6 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029014:	9b07      	ldr	r3, [sp, #28]
 8029016:	1d26      	adds	r6, r4, #4
 8029018:	4618      	mov	r0, r3
 802901a:	4631      	mov	r1, r6
 802901c:	f7ed fa04 	bl	8016428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029020:	4628      	mov	r0, r5
 8029022:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8029026:	f7ed f9bb 	bl	80163a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802902a:	4628      	mov	r0, r5
 802902c:	f7f1 f8a8 	bl	801a180 <_ZNK8touchgfx6Bitmap7getDataEv>
 8029030:	9007      	str	r0, [sp, #28]
 8029032:	2800      	cmp	r0, #0
 8029034:	f000 80db 	beq.w	80291ee <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8029038:	f8db 2000 	ldr.w	r2, [fp]
 802903c:	9209      	str	r2, [sp, #36]	; 0x24
 802903e:	f8db 2004 	ldr.w	r2, [fp, #4]
 8029042:	920a      	str	r2, [sp, #40]	; 0x28
 8029044:	f8db 2008 	ldr.w	r2, [fp, #8]
 8029048:	920b      	str	r2, [sp, #44]	; 0x2c
 802904a:	f8db 200c 	ldr.w	r2, [fp, #12]
 802904e:	920c      	str	r2, [sp, #48]	; 0x30
 8029050:	f8da 2000 	ldr.w	r2, [sl]
 8029054:	920d      	str	r2, [sp, #52]	; 0x34
 8029056:	f8da 2004 	ldr.w	r2, [sl, #4]
 802905a:	920e      	str	r2, [sp, #56]	; 0x38
 802905c:	f8da 2008 	ldr.w	r2, [sl, #8]
 8029060:	920f      	str	r2, [sp, #60]	; 0x3c
 8029062:	f8da 200c 	ldr.w	r2, [sl, #12]
 8029066:	9210      	str	r2, [sp, #64]	; 0x40
 8029068:	a90d      	add	r1, sp, #52	; 0x34
 802906a:	4632      	mov	r2, r6
 802906c:	a809      	add	r0, sp, #36	; 0x24
 802906e:	f7ed f9bf 	bl	80163f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029072:	4632      	mov	r2, r6
 8029074:	a90e      	add	r1, sp, #56	; 0x38
 8029076:	a80a      	add	r0, sp, #40	; 0x28
 8029078:	f7ed f9ba 	bl	80163f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802907c:	4632      	mov	r2, r6
 802907e:	a90f      	add	r1, sp, #60	; 0x3c
 8029080:	a80b      	add	r0, sp, #44	; 0x2c
 8029082:	f7ed f9b5 	bl	80163f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029086:	4632      	mov	r2, r6
 8029088:	a910      	add	r1, sp, #64	; 0x40
 802908a:	a80c      	add	r0, sp, #48	; 0x30
 802908c:	f7ed f9b0 	bl	80163f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029090:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8029094:	edd7 4a00 	vldr	s9, [r7]
 8029098:	edd7 5a01 	vldr	s11, [r7, #4]
 802909c:	ed98 4a00 	vldr	s8, [r8]
 80290a0:	ed98 5a01 	vldr	s10, [r8, #4]
 80290a4:	ed99 9a00 	vldr	s18, [r9]
 80290a8:	ed99 8a01 	vldr	s16, [r9, #4]
 80290ac:	edd9 8a02 	vldr	s17, [r9, #8]
 80290b0:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80290b4:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80290b8:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80290bc:	eef0 6a67 	vmov.f32	s13, s15
 80290c0:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80290c4:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80290c8:	eeb0 7a67 	vmov.f32	s14, s15
 80290cc:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80290d0:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80290d4:	eeb0 6a67 	vmov.f32	s12, s15
 80290d8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80290dc:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80290e0:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80290e4:	ee16 6a10 	vmov	r6, s12
 80290e8:	eeb0 6a67 	vmov.f32	s12, s15
 80290ec:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80290f0:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80290f4:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80290f8:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80290fc:	68ff      	ldr	r7, [r7, #12]
 80290fe:	9624      	str	r6, [sp, #144]	; 0x90
 8029100:	ee16 0a10 	vmov	r0, s12
 8029104:	eeb0 6a67 	vmov.f32	s12, s15
 8029108:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802910c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8029110:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8029114:	ee16 1a10 	vmov	r1, s12
 8029118:	eeb0 6a67 	vmov.f32	s12, s15
 802911c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029120:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8029124:	ee16 2a10 	vmov	r2, s12
 8029128:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802912c:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8029130:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8029134:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8029138:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802913c:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8029140:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8029144:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8029148:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802914c:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8029150:	922d      	str	r2, [sp, #180]	; 0xb4
 8029152:	4a2b      	ldr	r2, [pc, #172]	; (8029200 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8029154:	9b06      	ldr	r3, [sp, #24]
 8029156:	8812      	ldrh	r2, [r2, #0]
 8029158:	9317      	str	r3, [sp, #92]	; 0x5c
 802915a:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802915e:	9b07      	ldr	r3, [sp, #28]
 8029160:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8029164:	4628      	mov	r0, r5
 8029166:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802916a:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802916e:	9218      	str	r2, [sp, #96]	; 0x60
 8029170:	9319      	str	r3, [sp, #100]	; 0x64
 8029172:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8029176:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802917a:	9731      	str	r7, [sp, #196]	; 0xc4
 802917c:	f7f1 f830 	bl	801a1e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029180:	901a      	str	r0, [sp, #104]	; 0x68
 8029182:	4628      	mov	r0, r5
 8029184:	f7f0 ff10 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029188:	901b      	str	r0, [sp, #108]	; 0x6c
 802918a:	4628      	mov	r0, r5
 802918c:	f7f0 ff40 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029190:	901c      	str	r0, [sp, #112]	; 0x70
 8029192:	4628      	mov	r0, r5
 8029194:	f7f0 ff08 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029198:	eeb4 9a48 	vcmp.f32	s18, s16
 802919c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80291a0:	901d      	str	r0, [sp, #116]	; 0x74
 80291a2:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80291a6:	d107      	bne.n	80291b8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80291a8:	eeb4 8a68 	vcmp.f32	s16, s17
 80291ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80291b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80291b4:	bf08      	it	eq
 80291b6:	461e      	moveq	r6, r3
 80291b8:	4b12      	ldr	r3, [pc, #72]	; (8029204 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80291ba:	681b      	ldr	r3, [r3, #0]
 80291bc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80291c0:	b10a      	cbz	r2, 80291c6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80291c2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80291c4:	b905      	cbnz	r5, 80291c8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80291c6:	689d      	ldr	r5, [r3, #8]
 80291c8:	682b      	ldr	r3, [r5, #0]
 80291ca:	4620      	mov	r0, r4
 80291cc:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80291ce:	f7ff fec2 	bl	8028f56 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80291d2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80291d6:	9604      	str	r6, [sp, #16]
 80291d8:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80291dc:	ab13      	add	r3, sp, #76	; 0x4c
 80291de:	9301      	str	r3, [sp, #4]
 80291e0:	ab15      	add	r3, sp, #84	; 0x54
 80291e2:	9300      	str	r3, [sp, #0]
 80291e4:	aa1e      	add	r2, sp, #120	; 0x78
 80291e6:	ab19      	add	r3, sp, #100	; 0x64
 80291e8:	a917      	add	r1, sp, #92	; 0x5c
 80291ea:	4628      	mov	r0, r5
 80291ec:	47b8      	blx	r7
 80291ee:	b033      	add	sp, #204	; 0xcc
 80291f0:	ecbd 8b04 	vpop	{d8-d9}
 80291f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80291f8:	2300      	movs	r3, #0
 80291fa:	9312      	str	r3, [sp, #72]	; 0x48
 80291fc:	e6f7      	b.n	8028fee <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80291fe:	bf00      	nop
 8029200:	200138ae 	.word	0x200138ae
 8029204:	200138b4 	.word	0x200138b4

08029208 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8029208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802920c:	ed2d 8b02 	vpush	{d8}
 8029210:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8029214:	b098      	sub	sp, #96	; 0x60
 8029216:	4604      	mov	r4, r0
 8029218:	4688      	mov	r8, r1
 802921a:	2b00      	cmp	r3, #0
 802921c:	d077      	beq.n	802930e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802921e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8029222:	4628      	mov	r0, r5
 8029224:	f7f0 fec0 	bl	8019fa8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029228:	ee07 0a90 	vmov	s15, r0
 802922c:	4628      	mov	r0, r5
 802922e:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8029232:	f7f0 feed 	bl	801a010 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029236:	4b4e      	ldr	r3, [pc, #312]	; (8029370 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8029238:	781b      	ldrb	r3, [r3, #0]
 802923a:	ee07 0a90 	vmov	s15, r0
 802923e:	2b01      	cmp	r3, #1
 8029240:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029244:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8029248:	d066      	beq.n	8029318 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802924a:	eeb0 6a47 	vmov.f32	s12, s14
 802924e:	ee17 3a10 	vmov	r3, s14
 8029252:	eeb0 4a48 	vmov.f32	s8, s16
 8029256:	eeb0 7a48 	vmov.f32	s14, s16
 802925a:	eef0 4a67 	vmov.f32	s9, s15
 802925e:	eeb0 8a67 	vmov.f32	s16, s15
 8029262:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8029266:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802926a:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802926e:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8029272:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8029276:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802927a:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802927c:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802927e:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029280:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8029284:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029288:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802928c:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029290:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8029294:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029298:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802929c:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80292a0:	eee1 6a21 	vfma.f32	s13, s2, s3
 80292a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80292a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292ac:	dd3d      	ble.n	802932a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80292ae:	ed8d 5a04 	vstr	s10, [sp, #16]
 80292b2:	ed8d 2a05 	vstr	s4, [sp, #20]
 80292b6:	edcd 2a06 	vstr	s5, [sp, #24]
 80292ba:	f8cd c01c 	str.w	ip, [sp, #28]
 80292be:	edcd 5a08 	vstr	s11, [sp, #32]
 80292c2:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80292c6:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80292ca:	970b      	str	r7, [sp, #44]	; 0x2c
 80292cc:	960c      	str	r6, [sp, #48]	; 0x30
 80292ce:	950d      	str	r5, [sp, #52]	; 0x34
 80292d0:	920e      	str	r2, [sp, #56]	; 0x38
 80292d2:	900f      	str	r0, [sp, #60]	; 0x3c
 80292d4:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80292d8:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80292dc:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80292e0:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80292e4:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80292e8:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80292ec:	9316      	str	r3, [sp, #88]	; 0x58
 80292ee:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80292f2:	ab14      	add	r3, sp, #80	; 0x50
 80292f4:	9303      	str	r3, [sp, #12]
 80292f6:	ab10      	add	r3, sp, #64	; 0x40
 80292f8:	9302      	str	r3, [sp, #8]
 80292fa:	ab0c      	add	r3, sp, #48	; 0x30
 80292fc:	9301      	str	r3, [sp, #4]
 80292fe:	ab08      	add	r3, sp, #32
 8029300:	9300      	str	r3, [sp, #0]
 8029302:	2200      	movs	r2, #0
 8029304:	ab04      	add	r3, sp, #16
 8029306:	4641      	mov	r1, r8
 8029308:	4620      	mov	r0, r4
 802930a:	f7ff fe2d 	bl	8028f68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802930e:	b018      	add	sp, #96	; 0x60
 8029310:	ecbd 8b02 	vpop	{d8}
 8029314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029318:	eeb0 6a48 	vmov.f32	s12, s16
 802931c:	eef0 4a47 	vmov.f32	s9, s14
 8029320:	ee17 3a90 	vmov	r3, s15
 8029324:	eeb0 4a67 	vmov.f32	s8, s15
 8029328:	e79b      	b.n	8029262 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802932a:	ed8d 5a05 	vstr	s10, [sp, #20]
 802932e:	ed8d 2a04 	vstr	s4, [sp, #16]
 8029332:	f8cd c018 	str.w	ip, [sp, #24]
 8029336:	edcd 2a07 	vstr	s5, [sp, #28]
 802933a:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802933e:	ed8d 3a08 	vstr	s6, [sp, #32]
 8029342:	970a      	str	r7, [sp, #40]	; 0x28
 8029344:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8029348:	960d      	str	r6, [sp, #52]	; 0x34
 802934a:	950c      	str	r5, [sp, #48]	; 0x30
 802934c:	900e      	str	r0, [sp, #56]	; 0x38
 802934e:	920f      	str	r2, [sp, #60]	; 0x3c
 8029350:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8029354:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029358:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802935c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029360:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8029364:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029368:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802936c:	9317      	str	r3, [sp, #92]	; 0x5c
 802936e:	e7c0      	b.n	80292f2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029370:	200138ac 	.word	0x200138ac

08029374 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8029374:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029376:	b08d      	sub	sp, #52	; 0x34
 8029378:	2300      	movs	r3, #0
 802937a:	9304      	str	r3, [sp, #16]
 802937c:	9305      	str	r3, [sp, #20]
 802937e:	9306      	str	r3, [sp, #24]
 8029380:	aa04      	add	r2, sp, #16
 8029382:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8029386:	9307      	str	r3, [sp, #28]
 8029388:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802938c:	4613      	mov	r3, r2
 802938e:	f101 0710 	add.w	r7, r1, #16
 8029392:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80293d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8029396:	460c      	mov	r4, r1
 8029398:	4605      	mov	r5, r0
 802939a:	ecb4 7a01 	vldmia	r4!, {s14}
 802939e:	ecf5 6a01 	vldmia	r5!, {s13}
 80293a2:	42bc      	cmp	r4, r7
 80293a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80293a8:	d1f7      	bne.n	802939a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80293aa:	3010      	adds	r0, #16
 80293ac:	42b0      	cmp	r0, r6
 80293ae:	ece2 7a01 	vstmia	r2!, {s15}
 80293b2:	d1ee      	bne.n	8029392 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80293b4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80293b6:	ac0c      	add	r4, sp, #48	; 0x30
 80293b8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80293bc:	ed9d 0a08 	vldr	s0, [sp, #32]
 80293c0:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80293c4:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80293c8:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80293cc:	b00d      	add	sp, #52	; 0x34
 80293ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80293d0:	00000000 	.word	0x00000000

080293d4 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80293d4:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8029404 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80293d8:	2300      	movs	r3, #0
 80293da:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80293de:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80293e2:	2200      	movs	r2, #0
 80293e4:	4293      	cmp	r3, r2
 80293e6:	f102 0201 	add.w	r2, r2, #1
 80293ea:	bf14      	ite	ne
 80293ec:	eef0 6a47 	vmovne.f32	s13, s14
 80293f0:	eef0 6a67 	vmoveq.f32	s13, s15
 80293f4:	2a04      	cmp	r2, #4
 80293f6:	ece1 6a01 	vstmia	r1!, {s13}
 80293fa:	d1f3      	bne.n	80293e4 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80293fc:	3301      	adds	r3, #1
 80293fe:	2b04      	cmp	r3, #4
 8029400:	d1ed      	bne.n	80293de <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8029402:	4770      	bx	lr
 8029404:	00000000 	.word	0x00000000

08029408 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8029408:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802940c:	460c      	mov	r4, r1
 802940e:	4605      	mov	r5, r0
 8029410:	4690      	mov	r8, r2
 8029412:	f7ff ffdf 	bl	80293d4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8029416:	4628      	mov	r0, r5
 8029418:	4621      	mov	r1, r4
 802941a:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802941e:	2300      	movs	r3, #0
 8029420:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029460 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8029424:	eb08 0603 	add.w	r6, r8, r3
 8029428:	460f      	mov	r7, r1
 802942a:	2400      	movs	r4, #0
 802942c:	4632      	mov	r2, r6
 802942e:	ecf7 6a01 	vldmia	r7!, {s13}
 8029432:	ed92 7a00 	vldr	s14, [r2]
 8029436:	3401      	adds	r4, #1
 8029438:	2c04      	cmp	r4, #4
 802943a:	f106 0610 	add.w	r6, r6, #16
 802943e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029442:	d1f3      	bne.n	802942c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8029444:	18c2      	adds	r2, r0, r3
 8029446:	3304      	adds	r3, #4
 8029448:	2b10      	cmp	r3, #16
 802944a:	edc2 7a00 	vstr	s15, [r2]
 802944e:	d1e7      	bne.n	8029420 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8029450:	3110      	adds	r1, #16
 8029452:	4561      	cmp	r1, ip
 8029454:	f100 0010 	add.w	r0, r0, #16
 8029458:	d1e1      	bne.n	802941e <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802945a:	4628      	mov	r0, r5
 802945c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029460:	00000000 	.word	0x00000000

08029464 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8029464:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029468:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802946c:	f100 0320 	add.w	r3, r0, #32
 8029470:	3030      	adds	r0, #48	; 0x30
 8029472:	ecf3 7a01 	vldmia	r3!, {s15}
 8029476:	ee60 7a27 	vmul.f32	s15, s0, s15
 802947a:	4283      	cmp	r3, r0
 802947c:	edc3 7a03 	vstr	s15, [r3, #12]
 8029480:	d1f7      	bne.n	8029472 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8029482:	4770      	bx	lr

08029484 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8029484:	b510      	push	{r4, lr}
 8029486:	ed2d 8b02 	vpush	{d8}
 802948a:	4604      	mov	r4, r0
 802948c:	eef0 8a40 	vmov.f32	s17, s0
 8029490:	f001 fa7a 	bl	802a988 <sinf>
 8029494:	eeb0 8a40 	vmov.f32	s16, s0
 8029498:	eeb0 0a68 	vmov.f32	s0, s17
 802949c:	f001 fa30 	bl	802a900 <cosf>
 80294a0:	f104 0310 	add.w	r3, r4, #16
 80294a4:	f104 0220 	add.w	r2, r4, #32
 80294a8:	eeb1 6a48 	vneg.f32	s12, s16
 80294ac:	edd3 7a04 	vldr	s15, [r3, #16]
 80294b0:	edd3 6a00 	vldr	s13, [r3]
 80294b4:	ee26 7a27 	vmul.f32	s14, s12, s15
 80294b8:	ee67 7a80 	vmul.f32	s15, s15, s0
 80294bc:	eea6 7a80 	vfma.f32	s14, s13, s0
 80294c0:	eee6 7a88 	vfma.f32	s15, s13, s16
 80294c4:	eca3 7a01 	vstmia	r3!, {s14}
 80294c8:	429a      	cmp	r2, r3
 80294ca:	edc3 7a03 	vstr	s15, [r3, #12]
 80294ce:	d1ed      	bne.n	80294ac <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80294d0:	ecbd 8b02 	vpop	{d8}
 80294d4:	4620      	mov	r0, r4
 80294d6:	bd10      	pop	{r4, pc}

080294d8 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80294d8:	b510      	push	{r4, lr}
 80294da:	ed2d 8b02 	vpush	{d8}
 80294de:	4604      	mov	r4, r0
 80294e0:	eef0 8a40 	vmov.f32	s17, s0
 80294e4:	f001 fa50 	bl	802a988 <sinf>
 80294e8:	eeb0 8a40 	vmov.f32	s16, s0
 80294ec:	eeb0 0a68 	vmov.f32	s0, s17
 80294f0:	f001 fa06 	bl	802a900 <cosf>
 80294f4:	4623      	mov	r3, r4
 80294f6:	f104 0210 	add.w	r2, r4, #16
 80294fa:	eeb1 6a48 	vneg.f32	s12, s16
 80294fe:	edd3 7a08 	vldr	s15, [r3, #32]
 8029502:	edd3 6a00 	vldr	s13, [r3]
 8029506:	ee27 7a88 	vmul.f32	s14, s15, s16
 802950a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802950e:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029512:	eee6 7a26 	vfma.f32	s15, s12, s13
 8029516:	eca3 7a01 	vstmia	r3!, {s14}
 802951a:	429a      	cmp	r2, r3
 802951c:	edc3 7a07 	vstr	s15, [r3, #28]
 8029520:	d1ed      	bne.n	80294fe <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8029522:	ecbd 8b02 	vpop	{d8}
 8029526:	4620      	mov	r0, r4
 8029528:	bd10      	pop	{r4, pc}

0802952a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802952a:	b510      	push	{r4, lr}
 802952c:	ed2d 8b02 	vpush	{d8}
 8029530:	4604      	mov	r4, r0
 8029532:	eef0 8a40 	vmov.f32	s17, s0
 8029536:	f001 fa27 	bl	802a988 <sinf>
 802953a:	eeb0 8a40 	vmov.f32	s16, s0
 802953e:	eeb0 0a68 	vmov.f32	s0, s17
 8029542:	f001 f9dd 	bl	802a900 <cosf>
 8029546:	4623      	mov	r3, r4
 8029548:	f104 0210 	add.w	r2, r4, #16
 802954c:	eeb1 6a48 	vneg.f32	s12, s16
 8029550:	edd3 7a04 	vldr	s15, [r3, #16]
 8029554:	edd3 6a00 	vldr	s13, [r3]
 8029558:	ee26 7a27 	vmul.f32	s14, s12, s15
 802955c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029560:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029564:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029568:	eca3 7a01 	vstmia	r3!, {s14}
 802956c:	429a      	cmp	r2, r3
 802956e:	edc3 7a03 	vstr	s15, [r3, #12]
 8029572:	d1ed      	bne.n	8029550 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8029574:	ecbd 8b02 	vpop	{d8}
 8029578:	4620      	mov	r0, r4
 802957a:	bd10      	pop	{r4, pc}

0802957c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802957c:	4603      	mov	r3, r0
 802957e:	f100 0210 	add.w	r2, r0, #16
 8029582:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8029586:	edd3 7a00 	vldr	s15, [r3]
 802958a:	eee7 7a00 	vfma.f32	s15, s14, s0
 802958e:	ece3 7a01 	vstmia	r3!, {s15}
 8029592:	4293      	cmp	r3, r2
 8029594:	d1f5      	bne.n	8029582 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8029596:	4770      	bx	lr

08029598 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029598:	f100 0310 	add.w	r3, r0, #16
 802959c:	f100 0220 	add.w	r2, r0, #32
 80295a0:	ed93 7a08 	vldr	s14, [r3, #32]
 80295a4:	edd3 7a00 	vldr	s15, [r3]
 80295a8:	eee7 7a00 	vfma.f32	s15, s14, s0
 80295ac:	ece3 7a01 	vstmia	r3!, {s15}
 80295b0:	4293      	cmp	r3, r2
 80295b2:	d1f5      	bne.n	80295a0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80295b4:	4770      	bx	lr

080295b6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80295b6:	f100 0320 	add.w	r3, r0, #32
 80295ba:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80295be:	ed93 7a04 	vldr	s14, [r3, #16]
 80295c2:	edd3 7a00 	vldr	s15, [r3]
 80295c6:	eee7 7a00 	vfma.f32	s15, s14, s0
 80295ca:	ece3 7a01 	vstmia	r3!, {s15}
 80295ce:	4293      	cmp	r3, r2
 80295d0:	d1f5      	bne.n	80295be <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 80295d2:	4770      	bx	lr

080295d4 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 80295d4:	4603      	mov	r3, r0
 80295d6:	f100 0210 	add.w	r2, r0, #16
 80295da:	edd3 7a00 	vldr	s15, [r3]
 80295de:	ee67 7a80 	vmul.f32	s15, s15, s0
 80295e2:	ece3 7a01 	vstmia	r3!, {s15}
 80295e6:	4293      	cmp	r3, r2
 80295e8:	d1f7      	bne.n	80295da <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 80295ea:	4770      	bx	lr

080295ec <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 80295ec:	f100 0310 	add.w	r3, r0, #16
 80295f0:	f100 0220 	add.w	r2, r0, #32
 80295f4:	edd3 7a00 	vldr	s15, [r3]
 80295f8:	ee67 7a80 	vmul.f32	s15, s15, s0
 80295fc:	ece3 7a01 	vstmia	r3!, {s15}
 8029600:	4293      	cmp	r3, r2
 8029602:	d1f7      	bne.n	80295f4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8029604:	4770      	bx	lr

08029606 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8029606:	f100 0320 	add.w	r3, r0, #32
 802960a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802960e:	edd3 7a00 	vldr	s15, [r3]
 8029612:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029616:	ece3 7a01 	vstmia	r3!, {s15}
 802961a:	4293      	cmp	r3, r2
 802961c:	d1f7      	bne.n	802960e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802961e:	4770      	bx	lr

08029620 <arm_max_f32>:
 8029620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029624:	1e4f      	subs	r7, r1, #1
 8029626:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802962a:	f100 0e04 	add.w	lr, r0, #4
 802962e:	edd0 7a00 	vldr	s15, [r0]
 8029632:	d058      	beq.n	80296e6 <arm_max_f32+0xc6>
 8029634:	3014      	adds	r0, #20
 8029636:	46c4      	mov	ip, r8
 8029638:	2604      	movs	r6, #4
 802963a:	2400      	movs	r4, #0
 802963c:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029640:	ed50 6a03 	vldr	s13, [r0, #-12]
 8029644:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029648:	ed50 5a01 	vldr	s11, [r0, #-4]
 802964c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029654:	bfc8      	it	gt
 8029656:	eef0 7a46 	vmovgt.f32	s15, s12
 802965a:	f1a6 0503 	sub.w	r5, r6, #3
 802965e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8029662:	bfc8      	it	gt
 8029664:	462c      	movgt	r4, r5
 8029666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802966a:	bf48      	it	mi
 802966c:	eef0 7a66 	vmovmi.f32	s15, s13
 8029670:	f1a6 0502 	sub.w	r5, r6, #2
 8029674:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029678:	bf48      	it	mi
 802967a:	462c      	movmi	r4, r5
 802967c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029680:	bf48      	it	mi
 8029682:	eef0 7a47 	vmovmi.f32	s15, s14
 8029686:	f106 35ff 	add.w	r5, r6, #4294967295
 802968a:	eef4 7ae5 	vcmpe.f32	s15, s11
 802968e:	bf48      	it	mi
 8029690:	462c      	movmi	r4, r5
 8029692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029696:	bf48      	it	mi
 8029698:	4634      	movmi	r4, r6
 802969a:	bf48      	it	mi
 802969c:	eef0 7a65 	vmovmi.f32	s15, s11
 80296a0:	f1bc 0c01 	subs.w	ip, ip, #1
 80296a4:	f106 0604 	add.w	r6, r6, #4
 80296a8:	f100 0010 	add.w	r0, r0, #16
 80296ac:	d1c6      	bne.n	802963c <arm_max_f32+0x1c>
 80296ae:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 80296b2:	f017 0003 	ands.w	r0, r7, #3
 80296b6:	d018      	beq.n	80296ea <arm_max_f32+0xca>
 80296b8:	1a08      	subs	r0, r1, r0
 80296ba:	ecbe 7a01 	vldmia	lr!, {s14}
 80296be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80296c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296c6:	bfc8      	it	gt
 80296c8:	4604      	movgt	r4, r0
 80296ca:	f100 0001 	add.w	r0, r0, #1
 80296ce:	bfd8      	it	le
 80296d0:	eeb0 7a67 	vmovle.f32	s14, s15
 80296d4:	4288      	cmp	r0, r1
 80296d6:	eef0 7a47 	vmov.f32	s15, s14
 80296da:	d1ee      	bne.n	80296ba <arm_max_f32+0x9a>
 80296dc:	ed82 7a00 	vstr	s14, [r2]
 80296e0:	601c      	str	r4, [r3, #0]
 80296e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80296e6:	4644      	mov	r4, r8
 80296e8:	e7e3      	b.n	80296b2 <arm_max_f32+0x92>
 80296ea:	eeb0 7a67 	vmov.f32	s14, s15
 80296ee:	e7f5      	b.n	80296dc <arm_max_f32+0xbc>

080296f0 <arm_rfft_fast_init_f32>:
 80296f0:	084b      	lsrs	r3, r1, #1
 80296f2:	2b80      	cmp	r3, #128	; 0x80
 80296f4:	b410      	push	{r4}
 80296f6:	8201      	strh	r1, [r0, #16]
 80296f8:	8003      	strh	r3, [r0, #0]
 80296fa:	d047      	beq.n	802978c <arm_rfft_fast_init_f32+0x9c>
 80296fc:	d917      	bls.n	802972e <arm_rfft_fast_init_f32+0x3e>
 80296fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029702:	d03d      	beq.n	8029780 <arm_rfft_fast_init_f32+0x90>
 8029704:	d929      	bls.n	802975a <arm_rfft_fast_init_f32+0x6a>
 8029706:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802970a:	d020      	beq.n	802974e <arm_rfft_fast_init_f32+0x5e>
 802970c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8029710:	d113      	bne.n	802973a <arm_rfft_fast_init_f32+0x4a>
 8029712:	4921      	ldr	r1, [pc, #132]	; (8029798 <arm_rfft_fast_init_f32+0xa8>)
 8029714:	4a21      	ldr	r2, [pc, #132]	; (802979c <arm_rfft_fast_init_f32+0xac>)
 8029716:	4b22      	ldr	r3, [pc, #136]	; (80297a0 <arm_rfft_fast_init_f32+0xb0>)
 8029718:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802971c:	8184      	strh	r4, [r0, #12]
 802971e:	6081      	str	r1, [r0, #8]
 8029720:	6042      	str	r2, [r0, #4]
 8029722:	6143      	str	r3, [r0, #20]
 8029724:	2000      	movs	r0, #0
 8029726:	b240      	sxtb	r0, r0
 8029728:	f85d 4b04 	ldr.w	r4, [sp], #4
 802972c:	4770      	bx	lr
 802972e:	2b20      	cmp	r3, #32
 8029730:	d01c      	beq.n	802976c <arm_rfft_fast_init_f32+0x7c>
 8029732:	2b40      	cmp	r3, #64	; 0x40
 8029734:	d006      	beq.n	8029744 <arm_rfft_fast_init_f32+0x54>
 8029736:	2b10      	cmp	r3, #16
 8029738:	d01d      	beq.n	8029776 <arm_rfft_fast_init_f32+0x86>
 802973a:	20ff      	movs	r0, #255	; 0xff
 802973c:	b240      	sxtb	r0, r0
 802973e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029742:	4770      	bx	lr
 8029744:	2438      	movs	r4, #56	; 0x38
 8029746:	4917      	ldr	r1, [pc, #92]	; (80297a4 <arm_rfft_fast_init_f32+0xb4>)
 8029748:	4a17      	ldr	r2, [pc, #92]	; (80297a8 <arm_rfft_fast_init_f32+0xb8>)
 802974a:	4b18      	ldr	r3, [pc, #96]	; (80297ac <arm_rfft_fast_init_f32+0xbc>)
 802974c:	e7e6      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 802974e:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8029752:	4917      	ldr	r1, [pc, #92]	; (80297b0 <arm_rfft_fast_init_f32+0xc0>)
 8029754:	4a17      	ldr	r2, [pc, #92]	; (80297b4 <arm_rfft_fast_init_f32+0xc4>)
 8029756:	4b18      	ldr	r3, [pc, #96]	; (80297b8 <arm_rfft_fast_init_f32+0xc8>)
 8029758:	e7e0      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 802975a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802975e:	d1ec      	bne.n	802973a <arm_rfft_fast_init_f32+0x4a>
 8029760:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8029764:	4915      	ldr	r1, [pc, #84]	; (80297bc <arm_rfft_fast_init_f32+0xcc>)
 8029766:	4a16      	ldr	r2, [pc, #88]	; (80297c0 <arm_rfft_fast_init_f32+0xd0>)
 8029768:	4b16      	ldr	r3, [pc, #88]	; (80297c4 <arm_rfft_fast_init_f32+0xd4>)
 802976a:	e7d7      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 802976c:	2430      	movs	r4, #48	; 0x30
 802976e:	4916      	ldr	r1, [pc, #88]	; (80297c8 <arm_rfft_fast_init_f32+0xd8>)
 8029770:	4a16      	ldr	r2, [pc, #88]	; (80297cc <arm_rfft_fast_init_f32+0xdc>)
 8029772:	4b17      	ldr	r3, [pc, #92]	; (80297d0 <arm_rfft_fast_init_f32+0xe0>)
 8029774:	e7d2      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 8029776:	2414      	movs	r4, #20
 8029778:	4916      	ldr	r1, [pc, #88]	; (80297d4 <arm_rfft_fast_init_f32+0xe4>)
 802977a:	4a17      	ldr	r2, [pc, #92]	; (80297d8 <arm_rfft_fast_init_f32+0xe8>)
 802977c:	4b17      	ldr	r3, [pc, #92]	; (80297dc <arm_rfft_fast_init_f32+0xec>)
 802977e:	e7cd      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 8029780:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8029784:	4916      	ldr	r1, [pc, #88]	; (80297e0 <arm_rfft_fast_init_f32+0xf0>)
 8029786:	4a17      	ldr	r2, [pc, #92]	; (80297e4 <arm_rfft_fast_init_f32+0xf4>)
 8029788:	4b17      	ldr	r3, [pc, #92]	; (80297e8 <arm_rfft_fast_init_f32+0xf8>)
 802978a:	e7c7      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 802978c:	24d0      	movs	r4, #208	; 0xd0
 802978e:	4917      	ldr	r1, [pc, #92]	; (80297ec <arm_rfft_fast_init_f32+0xfc>)
 8029790:	4a17      	ldr	r2, [pc, #92]	; (80297f0 <arm_rfft_fast_init_f32+0x100>)
 8029792:	4b18      	ldr	r3, [pc, #96]	; (80297f4 <arm_rfft_fast_init_f32+0x104>)
 8029794:	e7c2      	b.n	802971c <arm_rfft_fast_init_f32+0x2c>
 8029796:	bf00      	nop
 8029798:	0803f444 	.word	0x0803f444
 802979c:	0803063c 	.word	0x0803063c
 80297a0:	080367ac 	.word	0x080367ac
 80297a4:	0803473c 	.word	0x0803473c
 80297a8:	08041204 	.word	0x08041204
 80297ac:	080436f4 	.word	0x080436f4
 80297b0:	0803d12c 	.word	0x0803d12c
 80297b4:	0803b02c 	.word	0x0803b02c
 80297b8:	080347ac 	.word	0x080347ac
 80297bc:	08043384 	.word	0x08043384
 80297c0:	0803a7ac 	.word	0x0803a7ac
 80297c4:	08041404 	.word	0x08041404
 80297c8:	0803dfe4 	.word	0x0803dfe4
 80297cc:	0803d02c 	.word	0x0803d02c
 80297d0:	0803463c 	.word	0x0803463c
 80297d4:	0803df3c 	.word	0x0803df3c
 80297d8:	0803afac 	.word	0x0803afac
 80297dc:	0803df64 	.word	0x0803df64
 80297e0:	08041c04 	.word	0x08041c04
 80297e4:	0803e444 	.word	0x0803e444
 80297e8:	08041f84 	.word	0x08041f84
 80297ec:	080438f4 	.word	0x080438f4
 80297f0:	0803e044 	.word	0x0803e044
 80297f4:	08042f84 	.word	0x08042f84

080297f8 <arm_rfft_fast_f32>:
 80297f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297fc:	8a06      	ldrh	r6, [r0, #16]
 80297fe:	0876      	lsrs	r6, r6, #1
 8029800:	4607      	mov	r7, r0
 8029802:	4615      	mov	r5, r2
 8029804:	8006      	strh	r6, [r0, #0]
 8029806:	460c      	mov	r4, r1
 8029808:	2b00      	cmp	r3, #0
 802980a:	d15c      	bne.n	80298c6 <arm_rfft_fast_f32+0xce>
 802980c:	461a      	mov	r2, r3
 802980e:	2301      	movs	r3, #1
 8029810:	f000 fbe6 	bl	8029fe0 <arm_cfft_f32>
 8029814:	edd4 7a00 	vldr	s15, [r4]
 8029818:	ed94 7a01 	vldr	s14, [r4, #4]
 802981c:	883e      	ldrh	r6, [r7, #0]
 802981e:	6978      	ldr	r0, [r7, #20]
 8029820:	ee37 7a07 	vadd.f32	s14, s14, s14
 8029824:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029828:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802982c:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029830:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029834:	3e01      	subs	r6, #1
 8029836:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802983a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802983e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8029842:	ed85 7a00 	vstr	s14, [r5]
 8029846:	edc5 7a01 	vstr	s15, [r5, #4]
 802984a:	3010      	adds	r0, #16
 802984c:	f105 0210 	add.w	r2, r5, #16
 8029850:	3b08      	subs	r3, #8
 8029852:	f104 0110 	add.w	r1, r4, #16
 8029856:	ed51 4a02 	vldr	s9, [r1, #-8]
 802985a:	ed93 5a02 	vldr	s10, [r3, #8]
 802985e:	ed11 7a01 	vldr	s14, [r1, #-4]
 8029862:	ed10 6a02 	vldr	s12, [r0, #-8]
 8029866:	edd3 5a03 	vldr	s11, [r3, #12]
 802986a:	ed50 6a01 	vldr	s13, [r0, #-4]
 802986e:	ee75 7a64 	vsub.f32	s15, s10, s9
 8029872:	ee35 4a87 	vadd.f32	s8, s11, s14
 8029876:	ee35 5a24 	vadd.f32	s10, s10, s9
 802987a:	ee77 5a65 	vsub.f32	s11, s14, s11
 802987e:	ee66 4a27 	vmul.f32	s9, s12, s15
 8029882:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029886:	ee34 5a85 	vadd.f32	s10, s9, s10
 802988a:	ee26 6a04 	vmul.f32	s12, s12, s8
 802988e:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029892:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029896:	ee76 6a85 	vadd.f32	s13, s13, s10
 802989a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802989e:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80298a2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80298a6:	3e01      	subs	r6, #1
 80298a8:	ed42 6a02 	vstr	s13, [r2, #-8]
 80298ac:	ed42 7a01 	vstr	s15, [r2, #-4]
 80298b0:	f1a3 0308 	sub.w	r3, r3, #8
 80298b4:	f101 0108 	add.w	r1, r1, #8
 80298b8:	f100 0008 	add.w	r0, r0, #8
 80298bc:	f102 0208 	add.w	r2, r2, #8
 80298c0:	d1c9      	bne.n	8029856 <arm_rfft_fast_f32+0x5e>
 80298c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80298c6:	edd1 7a00 	vldr	s15, [r1]
 80298ca:	edd1 6a01 	vldr	s13, [r1, #4]
 80298ce:	6941      	ldr	r1, [r0, #20]
 80298d0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80298d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80298d8:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80298dc:	ee27 7a23 	vmul.f32	s14, s14, s7
 80298e0:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80298e4:	3e01      	subs	r6, #1
 80298e6:	ed82 7a00 	vstr	s14, [r2]
 80298ea:	edc2 7a01 	vstr	s15, [r2, #4]
 80298ee:	00f0      	lsls	r0, r6, #3
 80298f0:	b3ee      	cbz	r6, 802996e <arm_rfft_fast_f32+0x176>
 80298f2:	3808      	subs	r0, #8
 80298f4:	f101 0e10 	add.w	lr, r1, #16
 80298f8:	4420      	add	r0, r4
 80298fa:	f104 0110 	add.w	r1, r4, #16
 80298fe:	f102 0c10 	add.w	ip, r2, #16
 8029902:	ed90 7a02 	vldr	s14, [r0, #8]
 8029906:	ed51 6a02 	vldr	s13, [r1, #-8]
 802990a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802990e:	ed90 4a03 	vldr	s8, [r0, #12]
 8029912:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029916:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802991a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802991e:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029922:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029926:	ee77 6a26 	vadd.f32	s13, s14, s13
 802992a:	ee35 5a44 	vsub.f32	s10, s10, s8
 802992e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8029932:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029936:	ee77 7a05 	vadd.f32	s15, s14, s10
 802993a:	ee26 6a24 	vmul.f32	s12, s12, s9
 802993e:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029942:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029946:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802994a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802994e:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029952:	3e01      	subs	r6, #1
 8029954:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029958:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802995c:	f1a0 0008 	sub.w	r0, r0, #8
 8029960:	f101 0108 	add.w	r1, r1, #8
 8029964:	f10e 0e08 	add.w	lr, lr, #8
 8029968:	f10c 0c08 	add.w	ip, ip, #8
 802996c:	d1c9      	bne.n	8029902 <arm_rfft_fast_f32+0x10a>
 802996e:	4638      	mov	r0, r7
 8029970:	4629      	mov	r1, r5
 8029972:	461a      	mov	r2, r3
 8029974:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029978:	2301      	movs	r3, #1
 802997a:	f000 bb31 	b.w	8029fe0 <arm_cfft_f32>
 802997e:	bf00      	nop

08029980 <arm_cfft_radix8by2_f32>:
 8029980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029984:	ed2d 8b08 	vpush	{d8-d11}
 8029988:	f8b0 e000 	ldrh.w	lr, [r0]
 802998c:	6842      	ldr	r2, [r0, #4]
 802998e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029992:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029996:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802999a:	4607      	mov	r7, r0
 802999c:	ea4f 038c 	mov.w	r3, ip, lsl #2
 80299a0:	f000 80af 	beq.w	8029b02 <arm_cfft_radix8by2_f32+0x182>
 80299a4:	3310      	adds	r3, #16
 80299a6:	18ce      	adds	r6, r1, r3
 80299a8:	3210      	adds	r2, #16
 80299aa:	4443      	add	r3, r8
 80299ac:	f101 0510 	add.w	r5, r1, #16
 80299b0:	f108 0410 	add.w	r4, r8, #16
 80299b4:	ed54 1a04 	vldr	s3, [r4, #-16]
 80299b8:	ed13 4a04 	vldr	s8, [r3, #-16]
 80299bc:	ed53 3a03 	vldr	s7, [r3, #-12]
 80299c0:	ed53 5a02 	vldr	s11, [r3, #-8]
 80299c4:	ed13 5a01 	vldr	s10, [r3, #-4]
 80299c8:	ed54 6a03 	vldr	s13, [r4, #-12]
 80299cc:	ed14 0a02 	vldr	s0, [r4, #-8]
 80299d0:	ed16 2a04 	vldr	s4, [r6, #-16]
 80299d4:	ed56 2a03 	vldr	s5, [r6, #-12]
 80299d8:	ed15 6a03 	vldr	s12, [r5, #-12]
 80299dc:	ed15 7a01 	vldr	s14, [r5, #-4]
 80299e0:	ed15 3a04 	vldr	s6, [r5, #-16]
 80299e4:	ed54 7a01 	vldr	s15, [r4, #-4]
 80299e8:	ed56 0a02 	vldr	s1, [r6, #-8]
 80299ec:	ed16 1a01 	vldr	s2, [r6, #-4]
 80299f0:	ed55 4a02 	vldr	s9, [r5, #-8]
 80299f4:	ee73 ba21 	vadd.f32	s23, s6, s3
 80299f8:	ee36 ba26 	vadd.f32	s22, s12, s13
 80299fc:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029a00:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029a04:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029a08:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029a0c:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029a10:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029a14:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029a18:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029a1c:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029a20:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029a24:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029a28:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029a2c:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029a30:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029a34:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029a38:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029a3c:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029a40:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029a44:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029a48:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029a4c:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029a50:	ee24 2a06 	vmul.f32	s4, s8, s12
 8029a54:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029a58:	ee24 4a22 	vmul.f32	s8, s8, s5
 8029a5c:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029a60:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8029a64:	ee23 6a86 	vmul.f32	s12, s7, s12
 8029a68:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029a6c:	ee36 6a04 	vadd.f32	s12, s12, s8
 8029a70:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029a74:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029a78:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029a7c:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029a80:	ed44 2a04 	vstr	s5, [r4, #-16]
 8029a84:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029a88:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029a8c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029a90:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8029a94:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029a98:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029a9c:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029aa0:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8029aa4:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029aa8:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029aac:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029ab0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029ab4:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029ab8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029abc:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029ac0:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029ac4:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029ac8:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029acc:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029ad0:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029ad4:	f1be 0e01 	subs.w	lr, lr, #1
 8029ad8:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029adc:	f105 0510 	add.w	r5, r5, #16
 8029ae0:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029ae4:	f106 0610 	add.w	r6, r6, #16
 8029ae8:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029aec:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029af0:	f102 0210 	add.w	r2, r2, #16
 8029af4:	f104 0410 	add.w	r4, r4, #16
 8029af8:	f103 0310 	add.w	r3, r3, #16
 8029afc:	f47f af5a 	bne.w	80299b4 <arm_cfft_radix8by2_f32+0x34>
 8029b00:	687a      	ldr	r2, [r7, #4]
 8029b02:	fa1f f48c 	uxth.w	r4, ip
 8029b06:	4608      	mov	r0, r1
 8029b08:	2302      	movs	r3, #2
 8029b0a:	4621      	mov	r1, r4
 8029b0c:	f000 fbca 	bl	802a2a4 <arm_radix8_butterfly_f32>
 8029b10:	ecbd 8b08 	vpop	{d8-d11}
 8029b14:	4640      	mov	r0, r8
 8029b16:	4621      	mov	r1, r4
 8029b18:	687a      	ldr	r2, [r7, #4]
 8029b1a:	2302      	movs	r3, #2
 8029b1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029b20:	f000 bbc0 	b.w	802a2a4 <arm_radix8_butterfly_f32>

08029b24 <arm_cfft_radix8by4_f32>:
 8029b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029b28:	ed2d 8b0a 	vpush	{d8-d12}
 8029b2c:	8802      	ldrh	r2, [r0, #0]
 8029b2e:	ed91 6a00 	vldr	s12, [r1]
 8029b32:	b08f      	sub	sp, #60	; 0x3c
 8029b34:	460f      	mov	r7, r1
 8029b36:	0852      	lsrs	r2, r2, #1
 8029b38:	0093      	lsls	r3, r2, #2
 8029b3a:	900c      	str	r0, [sp, #48]	; 0x30
 8029b3c:	9103      	str	r1, [sp, #12]
 8029b3e:	6841      	ldr	r1, [r0, #4]
 8029b40:	ed97 7a01 	vldr	s14, [r7, #4]
 8029b44:	4638      	mov	r0, r7
 8029b46:	4418      	add	r0, r3
 8029b48:	4606      	mov	r6, r0
 8029b4a:	9009      	str	r0, [sp, #36]	; 0x24
 8029b4c:	4418      	add	r0, r3
 8029b4e:	edd0 6a00 	vldr	s13, [r0]
 8029b52:	edd6 3a00 	vldr	s7, [r6]
 8029b56:	edd6 2a01 	vldr	s5, [r6, #4]
 8029b5a:	edd0 7a01 	vldr	s15, [r0, #4]
 8029b5e:	900a      	str	r0, [sp, #40]	; 0x28
 8029b60:	ee76 5a26 	vadd.f32	s11, s12, s13
 8029b64:	4604      	mov	r4, r0
 8029b66:	4625      	mov	r5, r4
 8029b68:	441c      	add	r4, r3
 8029b6a:	ed94 4a00 	vldr	s8, [r4]
 8029b6e:	ed94 5a01 	vldr	s10, [r4, #4]
 8029b72:	9401      	str	r4, [sp, #4]
 8029b74:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029b78:	4630      	mov	r0, r6
 8029b7a:	ee74 4a24 	vadd.f32	s9, s8, s9
 8029b7e:	463e      	mov	r6, r7
 8029b80:	ee14 ea90 	vmov	lr, s9
 8029b84:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029b88:	f846 eb08 	str.w	lr, [r6], #8
 8029b8c:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029b90:	edd0 4a01 	vldr	s9, [r0, #4]
 8029b94:	9604      	str	r6, [sp, #16]
 8029b96:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029b9a:	9e01      	ldr	r6, [sp, #4]
 8029b9c:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029ba0:	ed96 2a01 	vldr	s4, [r6, #4]
 8029ba4:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029ba8:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029bac:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029bb0:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029bb4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029bb8:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029bbc:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029bc0:	4604      	mov	r4, r0
 8029bc2:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029bc6:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029bca:	46a3      	mov	fp, r4
 8029bcc:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029bd0:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029bd4:	ee13 8a90 	vmov	r8, s7
 8029bd8:	46a4      	mov	ip, r4
 8029bda:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029bde:	ed87 7a01 	vstr	s14, [r7, #4]
 8029be2:	f84b 8b08 	str.w	r8, [fp], #8
 8029be6:	f1ac 0704 	sub.w	r7, ip, #4
 8029bea:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029bee:	f101 0c08 	add.w	ip, r1, #8
 8029bf2:	462c      	mov	r4, r5
 8029bf4:	f8cd c014 	str.w	ip, [sp, #20]
 8029bf8:	ee15 ca90 	vmov	ip, s11
 8029bfc:	f844 cb08 	str.w	ip, [r4], #8
 8029c00:	9407      	str	r4, [sp, #28]
 8029c02:	f101 0410 	add.w	r4, r1, #16
 8029c06:	ed85 6a01 	vstr	s12, [r5, #4]
 8029c0a:	0852      	lsrs	r2, r2, #1
 8029c0c:	9402      	str	r4, [sp, #8]
 8029c0e:	462c      	mov	r4, r5
 8029c10:	f101 0518 	add.w	r5, r1, #24
 8029c14:	920b      	str	r2, [sp, #44]	; 0x2c
 8029c16:	46b2      	mov	sl, r6
 8029c18:	9506      	str	r5, [sp, #24]
 8029c1a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8029c1e:	3a02      	subs	r2, #2
 8029c20:	ee16 5a90 	vmov	r5, s13
 8029c24:	46b6      	mov	lr, r6
 8029c26:	4630      	mov	r0, r6
 8029c28:	0852      	lsrs	r2, r2, #1
 8029c2a:	f84a 5b08 	str.w	r5, [sl], #8
 8029c2e:	f1a0 0604 	sub.w	r6, r0, #4
 8029c32:	edce 7a01 	vstr	s15, [lr, #4]
 8029c36:	9208      	str	r2, [sp, #32]
 8029c38:	f000 8130 	beq.w	8029e9c <arm_cfft_radix8by4_f32+0x378>
 8029c3c:	4691      	mov	r9, r2
 8029c3e:	9a03      	ldr	r2, [sp, #12]
 8029c40:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029c44:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029c48:	3b08      	subs	r3, #8
 8029c4a:	f102 0510 	add.w	r5, r2, #16
 8029c4e:	f101 0c20 	add.w	ip, r1, #32
 8029c52:	f1a4 020c 	sub.w	r2, r4, #12
 8029c56:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8029c5a:	4433      	add	r3, r6
 8029c5c:	3410      	adds	r4, #16
 8029c5e:	4650      	mov	r0, sl
 8029c60:	4659      	mov	r1, fp
 8029c62:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029c66:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029c6a:	ed91 7a00 	vldr	s14, [r1]
 8029c6e:	edd0 7a00 	vldr	s15, [r0]
 8029c72:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029c76:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029c7a:	edd0 6a01 	vldr	s13, [r0, #4]
 8029c7e:	ed91 6a01 	vldr	s12, [r1, #4]
 8029c82:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029c86:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029c8a:	ee78 4a07 	vadd.f32	s9, s16, s14
 8029c8e:	ee74 5a65 	vsub.f32	s11, s8, s11
 8029c92:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029c96:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029c9a:	ed45 4a02 	vstr	s9, [r5, #-8]
 8029c9e:	edd1 4a01 	vldr	s9, [r1, #4]
 8029ca2:	ed90 4a01 	vldr	s8, [r0, #4]
 8029ca6:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029caa:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029cae:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029cb2:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029cb6:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029cba:	edd6 1a00 	vldr	s3, [r6]
 8029cbe:	edd7 0a00 	vldr	s1, [r7]
 8029cc2:	ed92 4a02 	vldr	s8, [r2, #8]
 8029cc6:	edd3 3a02 	vldr	s7, [r3, #8]
 8029cca:	ed93 2a01 	vldr	s4, [r3, #4]
 8029cce:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029cd2:	edd2 2a01 	vldr	s5, [r2, #4]
 8029cd6:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029cda:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029cde:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029ce2:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029ce6:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029cea:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029cee:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029cf2:	ee18 aa90 	vmov	sl, s17
 8029cf6:	f847 a908 	str.w	sl, [r7], #-8
 8029cfa:	edd2 8a01 	vldr	s17, [r2, #4]
 8029cfe:	ed93 9a01 	vldr	s18, [r3, #4]
 8029d02:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029d06:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029d0a:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029d0e:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029d12:	edc7 8a01 	vstr	s17, [r7, #4]
 8029d16:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029d1a:	ed58 8a01 	vldr	s17, [r8, #-4]
 8029d1e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029d22:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029d26:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029d2a:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8029d2e:	ee30 9a81 	vadd.f32	s18, s1, s2
 8029d32:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029d36:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029d3a:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8029d3e:	ee69 baa8 	vmul.f32	s23, s19, s17
 8029d42:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029d46:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029d4a:	ee69 8a28 	vmul.f32	s17, s18, s17
 8029d4e:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8029d52:	ee1c aa10 	vmov	sl, s24
 8029d56:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029d5a:	f841 ab08 	str.w	sl, [r1], #8
 8029d5e:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8029d62:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029d66:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029d6a:	ee33 3a62 	vsub.f32	s6, s6, s5
 8029d6e:	ed01 aa01 	vstr	s20, [r1, #-4]
 8029d72:	edc2 8a01 	vstr	s17, [r2, #4]
 8029d76:	ed82 ba02 	vstr	s22, [r2, #8]
 8029d7a:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029d7e:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029d82:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029d86:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029d8a:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029d8e:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029d92:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029d96:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029d9a:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029d9e:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029da2:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029da6:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029daa:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029dae:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029db2:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029db6:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029dba:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029dbe:	ee14 aa10 	vmov	sl, s8
 8029dc2:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029dc6:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029dca:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029dce:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029dd2:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029dd6:	f846 a908 	str.w	sl, [r6], #-8
 8029dda:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029dde:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029de2:	edc6 3a01 	vstr	s7, [r6, #4]
 8029de6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029dea:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029dee:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029df2:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029df6:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029dfa:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029dfe:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029e02:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029e06:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029e0a:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029e0e:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029e12:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029e16:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029e1a:	ee21 6a06 	vmul.f32	s12, s2, s12
 8029e1e:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029e22:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029e26:	ee15 aa90 	vmov	sl, s11
 8029e2a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029e2e:	f840 ab08 	str.w	sl, [r0], #8
 8029e32:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029e36:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029e3a:	f1b9 0901 	subs.w	r9, r9, #1
 8029e3e:	ed40 7a01 	vstr	s15, [r0, #-4]
 8029e42:	f105 0508 	add.w	r5, r5, #8
 8029e46:	ed83 1a02 	vstr	s2, [r3, #8]
 8029e4a:	edc3 2a01 	vstr	s5, [r3, #4]
 8029e4e:	f108 0808 	add.w	r8, r8, #8
 8029e52:	f1a2 0208 	sub.w	r2, r2, #8
 8029e56:	f10c 0c10 	add.w	ip, ip, #16
 8029e5a:	f104 0408 	add.w	r4, r4, #8
 8029e5e:	f10e 0e18 	add.w	lr, lr, #24
 8029e62:	f1a3 0308 	sub.w	r3, r3, #8
 8029e66:	f47f aefc 	bne.w	8029c62 <arm_cfft_radix8by4_f32+0x13e>
 8029e6a:	9908      	ldr	r1, [sp, #32]
 8029e6c:	9802      	ldr	r0, [sp, #8]
 8029e6e:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8029e72:	00cb      	lsls	r3, r1, #3
 8029e74:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029e78:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029e7c:	9102      	str	r1, [sp, #8]
 8029e7e:	9904      	ldr	r1, [sp, #16]
 8029e80:	4419      	add	r1, r3
 8029e82:	9104      	str	r1, [sp, #16]
 8029e84:	9905      	ldr	r1, [sp, #20]
 8029e86:	4419      	add	r1, r3
 8029e88:	9105      	str	r1, [sp, #20]
 8029e8a:	9907      	ldr	r1, [sp, #28]
 8029e8c:	449b      	add	fp, r3
 8029e8e:	4419      	add	r1, r3
 8029e90:	449a      	add	sl, r3
 8029e92:	9b06      	ldr	r3, [sp, #24]
 8029e94:	9107      	str	r1, [sp, #28]
 8029e96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029e9a:	9306      	str	r3, [sp, #24]
 8029e9c:	9a04      	ldr	r2, [sp, #16]
 8029e9e:	9807      	ldr	r0, [sp, #28]
 8029ea0:	edd2 3a00 	vldr	s7, [r2]
 8029ea4:	ed90 4a00 	vldr	s8, [r0]
 8029ea8:	eddb 7a00 	vldr	s15, [fp]
 8029eac:	ed9a 3a00 	vldr	s6, [sl]
 8029eb0:	edd2 4a01 	vldr	s9, [r2, #4]
 8029eb4:	ed90 7a01 	vldr	s14, [r0, #4]
 8029eb8:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029ebc:	edda 5a01 	vldr	s11, [sl, #4]
 8029ec0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029ec4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029ec6:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029eca:	ee34 6a87 	vadd.f32	s12, s9, s14
 8029ece:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8029ed2:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029ed6:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029eda:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029ede:	ed82 5a00 	vstr	s10, [r2]
 8029ee2:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029ee6:	edda 4a01 	vldr	s9, [sl, #4]
 8029eea:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029eee:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029ef2:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029ef6:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029efa:	ed82 5a01 	vstr	s10, [r2, #4]
 8029efe:	9a05      	ldr	r2, [sp, #20]
 8029f00:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029f04:	edd2 1a00 	vldr	s3, [r2]
 8029f08:	edd2 2a01 	vldr	s5, [r2, #4]
 8029f0c:	9a02      	ldr	r2, [sp, #8]
 8029f0e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029f12:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029f16:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029f1a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029f1e:	ee65 2a22 	vmul.f32	s5, s10, s5
 8029f22:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029f26:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029f2a:	ee35 5a63 	vsub.f32	s10, s10, s7
 8029f2e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8029f32:	edcb 2a00 	vstr	s5, [fp]
 8029f36:	ed8b 5a01 	vstr	s10, [fp, #4]
 8029f3a:	edd2 3a01 	vldr	s7, [r2, #4]
 8029f3e:	ed92 5a00 	vldr	s10, [r2]
 8029f42:	9a06      	ldr	r2, [sp, #24]
 8029f44:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029f48:	ee36 6a65 	vsub.f32	s12, s12, s11
 8029f4c:	ee66 4a85 	vmul.f32	s9, s13, s10
 8029f50:	ee26 5a05 	vmul.f32	s10, s12, s10
 8029f54:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029f58:	ee26 6a23 	vmul.f32	s12, s12, s7
 8029f5c:	ee75 6a66 	vsub.f32	s13, s10, s13
 8029f60:	ee34 6a86 	vadd.f32	s12, s9, s12
 8029f64:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029f68:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029f6c:	edc0 6a01 	vstr	s13, [r0, #4]
 8029f70:	ed80 6a00 	vstr	s12, [r0]
 8029f74:	ed92 6a01 	vldr	s12, [r2, #4]
 8029f78:	9803      	ldr	r0, [sp, #12]
 8029f7a:	ee77 7a43 	vsub.f32	s15, s14, s6
 8029f7e:	ee75 5a84 	vadd.f32	s11, s11, s8
 8029f82:	ed92 7a00 	vldr	s14, [r2]
 8029f86:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029f8a:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029f8e:	ee65 5a86 	vmul.f32	s11, s11, s12
 8029f92:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029f96:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029f9a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8029f9e:	edca 5a01 	vstr	s11, [sl, #4]
 8029fa2:	edca 7a00 	vstr	s15, [sl]
 8029fa6:	6872      	ldr	r2, [r6, #4]
 8029fa8:	4621      	mov	r1, r4
 8029faa:	2304      	movs	r3, #4
 8029fac:	f000 f97a 	bl	802a2a4 <arm_radix8_butterfly_f32>
 8029fb0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029fb2:	6872      	ldr	r2, [r6, #4]
 8029fb4:	4621      	mov	r1, r4
 8029fb6:	2304      	movs	r3, #4
 8029fb8:	f000 f974 	bl	802a2a4 <arm_radix8_butterfly_f32>
 8029fbc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8029fbe:	6872      	ldr	r2, [r6, #4]
 8029fc0:	4621      	mov	r1, r4
 8029fc2:	2304      	movs	r3, #4
 8029fc4:	f000 f96e 	bl	802a2a4 <arm_radix8_butterfly_f32>
 8029fc8:	9801      	ldr	r0, [sp, #4]
 8029fca:	6872      	ldr	r2, [r6, #4]
 8029fcc:	4621      	mov	r1, r4
 8029fce:	2304      	movs	r3, #4
 8029fd0:	b00f      	add	sp, #60	; 0x3c
 8029fd2:	ecbd 8b0a 	vpop	{d8-d12}
 8029fd6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029fda:	f000 b963 	b.w	802a2a4 <arm_radix8_butterfly_f32>
 8029fde:	bf00      	nop

08029fe0 <arm_cfft_f32>:
 8029fe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029fe4:	2a01      	cmp	r2, #1
 8029fe6:	4606      	mov	r6, r0
 8029fe8:	4617      	mov	r7, r2
 8029fea:	460c      	mov	r4, r1
 8029fec:	4698      	mov	r8, r3
 8029fee:	8805      	ldrh	r5, [r0, #0]
 8029ff0:	d054      	beq.n	802a09c <arm_cfft_f32+0xbc>
 8029ff2:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029ff6:	d04c      	beq.n	802a092 <arm_cfft_f32+0xb2>
 8029ff8:	d916      	bls.n	802a028 <arm_cfft_f32+0x48>
 8029ffa:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8029ffe:	d01a      	beq.n	802a036 <arm_cfft_f32+0x56>
 802a000:	d95c      	bls.n	802a0bc <arm_cfft_f32+0xdc>
 802a002:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a006:	d044      	beq.n	802a092 <arm_cfft_f32+0xb2>
 802a008:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a00c:	d105      	bne.n	802a01a <arm_cfft_f32+0x3a>
 802a00e:	4620      	mov	r0, r4
 802a010:	4629      	mov	r1, r5
 802a012:	6872      	ldr	r2, [r6, #4]
 802a014:	2301      	movs	r3, #1
 802a016:	f000 f945 	bl	802a2a4 <arm_radix8_butterfly_f32>
 802a01a:	f1b8 0f00 	cmp.w	r8, #0
 802a01e:	d111      	bne.n	802a044 <arm_cfft_f32+0x64>
 802a020:	2f01      	cmp	r7, #1
 802a022:	d016      	beq.n	802a052 <arm_cfft_f32+0x72>
 802a024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a028:	2d20      	cmp	r5, #32
 802a02a:	d032      	beq.n	802a092 <arm_cfft_f32+0xb2>
 802a02c:	d94a      	bls.n	802a0c4 <arm_cfft_f32+0xe4>
 802a02e:	2d40      	cmp	r5, #64	; 0x40
 802a030:	d0ed      	beq.n	802a00e <arm_cfft_f32+0x2e>
 802a032:	2d80      	cmp	r5, #128	; 0x80
 802a034:	d1f1      	bne.n	802a01a <arm_cfft_f32+0x3a>
 802a036:	4630      	mov	r0, r6
 802a038:	4621      	mov	r1, r4
 802a03a:	f7ff fca1 	bl	8029980 <arm_cfft_radix8by2_f32>
 802a03e:	f1b8 0f00 	cmp.w	r8, #0
 802a042:	d0ed      	beq.n	802a020 <arm_cfft_f32+0x40>
 802a044:	4620      	mov	r0, r4
 802a046:	89b1      	ldrh	r1, [r6, #12]
 802a048:	68b2      	ldr	r2, [r6, #8]
 802a04a:	f7d6 f8d1 	bl	80001f0 <arm_bitreversal_32>
 802a04e:	2f01      	cmp	r7, #1
 802a050:	d1e8      	bne.n	802a024 <arm_cfft_f32+0x44>
 802a052:	ee07 5a90 	vmov	s15, r5
 802a056:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a05a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a05e:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a062:	2d00      	cmp	r5, #0
 802a064:	d0de      	beq.n	802a024 <arm_cfft_f32+0x44>
 802a066:	f104 0108 	add.w	r1, r4, #8
 802a06a:	2300      	movs	r3, #0
 802a06c:	3301      	adds	r3, #1
 802a06e:	429d      	cmp	r5, r3
 802a070:	f101 0108 	add.w	r1, r1, #8
 802a074:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a078:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a07c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a080:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a084:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a088:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a08c:	d1ee      	bne.n	802a06c <arm_cfft_f32+0x8c>
 802a08e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a092:	4630      	mov	r0, r6
 802a094:	4621      	mov	r1, r4
 802a096:	f7ff fd45 	bl	8029b24 <arm_cfft_radix8by4_f32>
 802a09a:	e7be      	b.n	802a01a <arm_cfft_f32+0x3a>
 802a09c:	b1ad      	cbz	r5, 802a0ca <arm_cfft_f32+0xea>
 802a09e:	f101 030c 	add.w	r3, r1, #12
 802a0a2:	2200      	movs	r2, #0
 802a0a4:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a0a8:	3201      	adds	r2, #1
 802a0aa:	eef1 7a67 	vneg.f32	s15, s15
 802a0ae:	4295      	cmp	r5, r2
 802a0b0:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a0b4:	f103 0308 	add.w	r3, r3, #8
 802a0b8:	d1f4      	bne.n	802a0a4 <arm_cfft_f32+0xc4>
 802a0ba:	e79a      	b.n	8029ff2 <arm_cfft_f32+0x12>
 802a0bc:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a0c0:	d0a5      	beq.n	802a00e <arm_cfft_f32+0x2e>
 802a0c2:	e7aa      	b.n	802a01a <arm_cfft_f32+0x3a>
 802a0c4:	2d10      	cmp	r5, #16
 802a0c6:	d0b6      	beq.n	802a036 <arm_cfft_f32+0x56>
 802a0c8:	e7a7      	b.n	802a01a <arm_cfft_f32+0x3a>
 802a0ca:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a0ce:	d894      	bhi.n	8029ffa <arm_cfft_f32+0x1a>
 802a0d0:	e7aa      	b.n	802a028 <arm_cfft_f32+0x48>
 802a0d2:	bf00      	nop

0802a0d4 <arm_cmplx_mag_f32>:
 802a0d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a0d8:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a0dc:	b084      	sub	sp, #16
 802a0de:	d07f      	beq.n	802a1e0 <arm_cmplx_mag_f32+0x10c>
 802a0e0:	2700      	movs	r7, #0
 802a0e2:	f100 0420 	add.w	r4, r0, #32
 802a0e6:	f101 0510 	add.w	r5, r1, #16
 802a0ea:	4646      	mov	r6, r8
 802a0ec:	e05a      	b.n	802a1a4 <arm_cmplx_mag_f32+0xd0>
 802a0ee:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a0f2:	eeb4 0a40 	vcmp.f32	s0, s0
 802a0f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0fa:	f040 80a4 	bne.w	802a246 <arm_cmplx_mag_f32+0x172>
 802a0fe:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a102:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a106:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a10a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a10e:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a112:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a116:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a11a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a11e:	f2c0 808f 	blt.w	802a240 <arm_cmplx_mag_f32+0x16c>
 802a122:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a126:	eeb4 0a40 	vcmp.f32	s0, s0
 802a12a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a12e:	f040 80af 	bne.w	802a290 <arm_cmplx_mag_f32+0x1bc>
 802a132:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a136:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a13a:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a13e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a142:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a146:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a14a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a14e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a152:	db72      	blt.n	802a23a <arm_cmplx_mag_f32+0x166>
 802a154:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a158:	eeb4 0a40 	vcmp.f32	s0, s0
 802a15c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a160:	f040 808c 	bne.w	802a27c <arm_cmplx_mag_f32+0x1a8>
 802a164:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a168:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a16c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a170:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a174:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a178:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a17c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a184:	db20      	blt.n	802a1c8 <arm_cmplx_mag_f32+0xf4>
 802a186:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a18a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a18e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a192:	d169      	bne.n	802a268 <arm_cmplx_mag_f32+0x194>
 802a194:	3e01      	subs	r6, #1
 802a196:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a19a:	f104 0420 	add.w	r4, r4, #32
 802a19e:	f105 0510 	add.w	r5, r5, #16
 802a1a2:	d019      	beq.n	802a1d8 <arm_cmplx_mag_f32+0x104>
 802a1a4:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a1a8:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a1ac:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a1b0:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a1b4:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a1b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a1bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1c0:	da95      	bge.n	802a0ee <arm_cmplx_mag_f32+0x1a>
 802a1c2:	f845 7c10 	str.w	r7, [r5, #-16]
 802a1c6:	e79c      	b.n	802a102 <arm_cmplx_mag_f32+0x2e>
 802a1c8:	3e01      	subs	r6, #1
 802a1ca:	f845 7c04 	str.w	r7, [r5, #-4]
 802a1ce:	f104 0420 	add.w	r4, r4, #32
 802a1d2:	f105 0510 	add.w	r5, r5, #16
 802a1d6:	d1e5      	bne.n	802a1a4 <arm_cmplx_mag_f32+0xd0>
 802a1d8:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a1dc:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a1e0:	f012 0503 	ands.w	r5, r2, #3
 802a1e4:	d026      	beq.n	802a234 <arm_cmplx_mag_f32+0x160>
 802a1e6:	2600      	movs	r6, #0
 802a1e8:	f100 0408 	add.w	r4, r0, #8
 802a1ec:	e00c      	b.n	802a208 <arm_cmplx_mag_f32+0x134>
 802a1ee:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a1f2:	eeb4 0a40 	vcmp.f32	s0, s0
 802a1f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1fa:	d12e      	bne.n	802a25a <arm_cmplx_mag_f32+0x186>
 802a1fc:	3d01      	subs	r5, #1
 802a1fe:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a202:	f104 0408 	add.w	r4, r4, #8
 802a206:	d015      	beq.n	802a234 <arm_cmplx_mag_f32+0x160>
 802a208:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a20c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a210:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a214:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a218:	3104      	adds	r1, #4
 802a21a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a21e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a222:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a226:	dae2      	bge.n	802a1ee <arm_cmplx_mag_f32+0x11a>
 802a228:	3d01      	subs	r5, #1
 802a22a:	f841 6c04 	str.w	r6, [r1, #-4]
 802a22e:	f104 0408 	add.w	r4, r4, #8
 802a232:	d1e9      	bne.n	802a208 <arm_cmplx_mag_f32+0x134>
 802a234:	b004      	add	sp, #16
 802a236:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a23a:	f845 7c08 	str.w	r7, [r5, #-8]
 802a23e:	e793      	b.n	802a168 <arm_cmplx_mag_f32+0x94>
 802a240:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a244:	e777      	b.n	802a136 <arm_cmplx_mag_f32+0x62>
 802a246:	eeb0 0a67 	vmov.f32	s0, s15
 802a24a:	9203      	str	r2, [sp, #12]
 802a24c:	9102      	str	r1, [sp, #8]
 802a24e:	9001      	str	r0, [sp, #4]
 802a250:	f000 fb38 	bl	802a8c4 <sqrtf>
 802a254:	a801      	add	r0, sp, #4
 802a256:	c807      	ldmia	r0, {r0, r1, r2}
 802a258:	e751      	b.n	802a0fe <arm_cmplx_mag_f32+0x2a>
 802a25a:	eeb0 0a67 	vmov.f32	s0, s15
 802a25e:	9101      	str	r1, [sp, #4]
 802a260:	f000 fb30 	bl	802a8c4 <sqrtf>
 802a264:	9901      	ldr	r1, [sp, #4]
 802a266:	e7c9      	b.n	802a1fc <arm_cmplx_mag_f32+0x128>
 802a268:	eeb0 0a67 	vmov.f32	s0, s15
 802a26c:	9203      	str	r2, [sp, #12]
 802a26e:	9102      	str	r1, [sp, #8]
 802a270:	9001      	str	r0, [sp, #4]
 802a272:	f000 fb27 	bl	802a8c4 <sqrtf>
 802a276:	a801      	add	r0, sp, #4
 802a278:	c807      	ldmia	r0, {r0, r1, r2}
 802a27a:	e78b      	b.n	802a194 <arm_cmplx_mag_f32+0xc0>
 802a27c:	eeb0 0a67 	vmov.f32	s0, s15
 802a280:	9203      	str	r2, [sp, #12]
 802a282:	9102      	str	r1, [sp, #8]
 802a284:	9001      	str	r0, [sp, #4]
 802a286:	f000 fb1d 	bl	802a8c4 <sqrtf>
 802a28a:	a801      	add	r0, sp, #4
 802a28c:	c807      	ldmia	r0, {r0, r1, r2}
 802a28e:	e769      	b.n	802a164 <arm_cmplx_mag_f32+0x90>
 802a290:	eeb0 0a67 	vmov.f32	s0, s15
 802a294:	9203      	str	r2, [sp, #12]
 802a296:	9102      	str	r1, [sp, #8]
 802a298:	9001      	str	r0, [sp, #4]
 802a29a:	f000 fb13 	bl	802a8c4 <sqrtf>
 802a29e:	a801      	add	r0, sp, #4
 802a2a0:	c807      	ldmia	r0, {r0, r1, r2}
 802a2a2:	e746      	b.n	802a132 <arm_cmplx_mag_f32+0x5e>

0802a2a4 <arm_radix8_butterfly_f32>:
 802a2a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a2a8:	ed2d 8b10 	vpush	{d8-d15}
 802a2ac:	b09d      	sub	sp, #116	; 0x74
 802a2ae:	461c      	mov	r4, r3
 802a2b0:	ed9f bac8 	vldr	s22, [pc, #800]	; 802a5d4 <arm_radix8_butterfly_f32+0x330>
 802a2b4:	921a      	str	r2, [sp, #104]	; 0x68
 802a2b6:	1d03      	adds	r3, r0, #4
 802a2b8:	4682      	mov	sl, r0
 802a2ba:	4689      	mov	r9, r1
 802a2bc:	468b      	mov	fp, r1
 802a2be:	931b      	str	r3, [sp, #108]	; 0x6c
 802a2c0:	9400      	str	r4, [sp, #0]
 802a2c2:	469e      	mov	lr, r3
 802a2c4:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a2c8:	005a      	lsls	r2, r3, #1
 802a2ca:	18d6      	adds	r6, r2, r3
 802a2cc:	18f5      	adds	r5, r6, r3
 802a2ce:	9203      	str	r2, [sp, #12]
 802a2d0:	195a      	adds	r2, r3, r5
 802a2d2:	18d0      	adds	r0, r2, r3
 802a2d4:	00df      	lsls	r7, r3, #3
 802a2d6:	1819      	adds	r1, r3, r0
 802a2d8:	463c      	mov	r4, r7
 802a2da:	9701      	str	r7, [sp, #4]
 802a2dc:	4457      	add	r7, sl
 802a2de:	930c      	str	r3, [sp, #48]	; 0x30
 802a2e0:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a2e4:	011b      	lsls	r3, r3, #4
 802a2e6:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a2ea:	eb07 0c04 	add.w	ip, r7, r4
 802a2ee:	9c00      	ldr	r4, [sp, #0]
 802a2f0:	9302      	str	r3, [sp, #8]
 802a2f2:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a2f6:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a2fa:	3204      	adds	r2, #4
 802a2fc:	3104      	adds	r1, #4
 802a2fe:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a302:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a306:	f04f 0800 	mov.w	r8, #0
 802a30a:	eddc 7a00 	vldr	s15, [ip]
 802a30e:	edd7 6a00 	vldr	s13, [r7]
 802a312:	edd6 3a00 	vldr	s7, [r6]
 802a316:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a31a:	edd5 4a00 	vldr	s9, [r5]
 802a31e:	ed90 2a00 	vldr	s4, [r0]
 802a322:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a326:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a32a:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a32e:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a332:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a336:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a33a:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a33e:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a342:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a346:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a34a:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a34e:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a352:	ed85 5a00 	vstr	s10, [r5]
 802a356:	ed96 1a01 	vldr	s2, [r6, #4]
 802a35a:	edd7 5a01 	vldr	s11, [r7, #4]
 802a35e:	ed92 aa00 	vldr	s20, [r2]
 802a362:	ed91 6a00 	vldr	s12, [r1]
 802a366:	ed9e 9a00 	vldr	s18, [lr]
 802a36a:	ed95 5a01 	vldr	s10, [r5, #4]
 802a36e:	eddc 6a01 	vldr	s13, [ip, #4]
 802a372:	edd0 9a01 	vldr	s19, [r0, #4]
 802a376:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a37a:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a37e:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a382:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a386:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a38a:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a38e:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a392:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a396:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a39a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a39e:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a3a2:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a3a6:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a3aa:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a3ae:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a3b2:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a3b6:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a3ba:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a3be:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a3c2:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a3c6:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a3ca:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a3ce:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a3d2:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a3d6:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a3da:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a3de:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a3e2:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a3e6:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a3ea:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a3ee:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a3f2:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a3f6:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a3fa:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a3fe:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a402:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a406:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a40a:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a40e:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a412:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a416:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a41a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a41e:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a422:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a426:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a42a:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a42e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a432:	44d8      	add	r8, fp
 802a434:	45c1      	cmp	r9, r8
 802a436:	ed8e 9a00 	vstr	s18, [lr]
 802a43a:	ed85 1a01 	vstr	s2, [r5, #4]
 802a43e:	449e      	add	lr, r3
 802a440:	ed8c 8a00 	vstr	s16, [ip]
 802a444:	441d      	add	r5, r3
 802a446:	ed80 6a00 	vstr	s12, [r0]
 802a44a:	edcc 0a01 	vstr	s1, [ip, #4]
 802a44e:	ed80 4a01 	vstr	s8, [r0, #4]
 802a452:	449c      	add	ip, r3
 802a454:	ed87 2a00 	vstr	s4, [r7]
 802a458:	4418      	add	r0, r3
 802a45a:	ed41 3a01 	vstr	s7, [r1, #-4]
 802a45e:	ed42 2a01 	vstr	s5, [r2, #-4]
 802a462:	ed86 7a00 	vstr	s14, [r6]
 802a466:	ed87 3a01 	vstr	s6, [r7, #4]
 802a46a:	edc1 4a00 	vstr	s9, [r1]
 802a46e:	441f      	add	r7, r3
 802a470:	edc2 5a00 	vstr	s11, [r2]
 802a474:	4419      	add	r1, r3
 802a476:	edc6 6a01 	vstr	s13, [r6, #4]
 802a47a:	441a      	add	r2, r3
 802a47c:	441e      	add	r6, r3
 802a47e:	f63f af44 	bhi.w	802a30a <arm_radix8_butterfly_f32+0x66>
 802a482:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a484:	2907      	cmp	r1, #7
 802a486:	4620      	mov	r0, r4
 802a488:	f240 81e9 	bls.w	802a85e <arm_radix8_butterfly_f32+0x5ba>
 802a48c:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802a490:	193e      	adds	r6, r7, r4
 802a492:	1935      	adds	r5, r6, r4
 802a494:	9c03      	ldr	r4, [sp, #12]
 802a496:	9000      	str	r0, [sp, #0]
 802a498:	4622      	mov	r2, r4
 802a49a:	3201      	adds	r2, #1
 802a49c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802a4a0:	9900      	ldr	r1, [sp, #0]
 802a4a2:	1828      	adds	r0, r5, r0
 802a4a4:	eb00 0e01 	add.w	lr, r0, r1
 802a4a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a4aa:	440a      	add	r2, r1
 802a4ac:	eb04 0c01 	add.w	ip, r4, r1
 802a4b0:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802a4b4:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802a4b8:	9a00      	ldr	r2, [sp, #0]
 802a4ba:	940f      	str	r4, [sp, #60]	; 0x3c
 802a4bc:	00ed      	lsls	r5, r5, #3
 802a4be:	9511      	str	r5, [sp, #68]	; 0x44
 802a4c0:	00d5      	lsls	r5, r2, #3
 802a4c2:	950d      	str	r5, [sp, #52]	; 0x34
 802a4c4:	9d01      	ldr	r5, [sp, #4]
 802a4c6:	3508      	adds	r5, #8
 802a4c8:	9516      	str	r5, [sp, #88]	; 0x58
 802a4ca:	9d02      	ldr	r5, [sp, #8]
 802a4cc:	3508      	adds	r5, #8
 802a4ce:	0114      	lsls	r4, r2, #4
 802a4d0:	9517      	str	r5, [sp, #92]	; 0x5c
 802a4d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802a4d4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802a4d6:	940e      	str	r4, [sp, #56]	; 0x38
 802a4d8:	00c0      	lsls	r0, r0, #3
 802a4da:	9010      	str	r0, [sp, #64]	; 0x40
 802a4dc:	18aa      	adds	r2, r5, r2
 802a4de:	9207      	str	r2, [sp, #28]
 802a4e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802a4e2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802a4e4:	18aa      	adds	r2, r5, r2
 802a4e6:	9208      	str	r2, [sp, #32]
 802a4e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802a4ea:	18aa      	adds	r2, r5, r2
 802a4ec:	9209      	str	r2, [sp, #36]	; 0x24
 802a4ee:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802a4f2:	f10e 0204 	add.w	r2, lr, #4
 802a4f6:	920a      	str	r2, [sp, #40]	; 0x28
 802a4f8:	00c9      	lsls	r1, r1, #3
 802a4fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802a4fc:	310c      	adds	r1, #12
 802a4fe:	00f6      	lsls	r6, r6, #3
 802a500:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802a504:	9114      	str	r1, [sp, #80]	; 0x50
 802a506:	18a9      	adds	r1, r5, r2
 802a508:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802a50a:	9612      	str	r6, [sp, #72]	; 0x48
 802a50c:	00ff      	lsls	r7, r7, #3
 802a50e:	19ae      	adds	r6, r5, r6
 802a510:	3008      	adds	r0, #8
 802a512:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802a516:	9606      	str	r6, [sp, #24]
 802a518:	9019      	str	r0, [sp, #100]	; 0x64
 802a51a:	18aa      	adds	r2, r5, r2
 802a51c:	0164      	lsls	r4, r4, #5
 802a51e:	19ee      	adds	r6, r5, r7
 802a520:	f10c 000c 	add.w	r0, ip, #12
 802a524:	9713      	str	r7, [sp, #76]	; 0x4c
 802a526:	9604      	str	r6, [sp, #16]
 802a528:	9015      	str	r0, [sp, #84]	; 0x54
 802a52a:	9103      	str	r1, [sp, #12]
 802a52c:	9205      	str	r2, [sp, #20]
 802a52e:	f104 0208 	add.w	r2, r4, #8
 802a532:	9218      	str	r2, [sp, #96]	; 0x60
 802a534:	f04f 0801 	mov.w	r8, #1
 802a538:	2200      	movs	r2, #0
 802a53a:	f102 0108 	add.w	r1, r2, #8
 802a53e:	460f      	mov	r7, r1
 802a540:	910b      	str	r1, [sp, #44]	; 0x2c
 802a542:	9918      	ldr	r1, [sp, #96]	; 0x60
 802a544:	188e      	adds	r6, r1, r2
 802a546:	9916      	ldr	r1, [sp, #88]	; 0x58
 802a548:	188d      	adds	r5, r1, r2
 802a54a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802a54c:	188c      	adds	r4, r1, r2
 802a54e:	9919      	ldr	r1, [sp, #100]	; 0x64
 802a550:	1888      	adds	r0, r1, r2
 802a552:	9914      	ldr	r1, [sp, #80]	; 0x50
 802a554:	eb01 0c02 	add.w	ip, r1, r2
 802a558:	9915      	ldr	r1, [sp, #84]	; 0x54
 802a55a:	440a      	add	r2, r1
 802a55c:	9903      	ldr	r1, [sp, #12]
 802a55e:	edd1 fa00 	vldr	s31, [r1]
 802a562:	9905      	ldr	r1, [sp, #20]
 802a564:	ed91 fa00 	vldr	s30, [r1]
 802a568:	9904      	ldr	r1, [sp, #16]
 802a56a:	edd1 ea00 	vldr	s29, [r1]
 802a56e:	9906      	ldr	r1, [sp, #24]
 802a570:	ed91 ea00 	vldr	s28, [r1]
 802a574:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a576:	edd1 da00 	vldr	s27, [r1]
 802a57a:	9908      	ldr	r1, [sp, #32]
 802a57c:	ed91 da00 	vldr	s26, [r1]
 802a580:	9907      	ldr	r1, [sp, #28]
 802a582:	edd1 ca00 	vldr	s25, [r1]
 802a586:	9903      	ldr	r1, [sp, #12]
 802a588:	ed91 ca01 	vldr	s24, [r1, #4]
 802a58c:	9905      	ldr	r1, [sp, #20]
 802a58e:	edd1 ba01 	vldr	s23, [r1, #4]
 802a592:	9904      	ldr	r1, [sp, #16]
 802a594:	edd1 aa01 	vldr	s21, [r1, #4]
 802a598:	9906      	ldr	r1, [sp, #24]
 802a59a:	ed91 aa01 	vldr	s20, [r1, #4]
 802a59e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a5a0:	edd1 7a01 	vldr	s15, [r1, #4]
 802a5a4:	9908      	ldr	r1, [sp, #32]
 802a5a6:	edcd 7a00 	vstr	s15, [sp]
 802a5aa:	edd1 7a01 	vldr	s15, [r1, #4]
 802a5ae:	9907      	ldr	r1, [sp, #28]
 802a5b0:	edcd 7a01 	vstr	s15, [sp, #4]
 802a5b4:	edd1 7a01 	vldr	s15, [r1, #4]
 802a5b8:	eb0a 0e07 	add.w	lr, sl, r7
 802a5bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802a5be:	edcd 7a02 	vstr	s15, [sp, #8]
 802a5c2:	eb0c 010a 	add.w	r1, ip, sl
 802a5c6:	4456      	add	r6, sl
 802a5c8:	4455      	add	r5, sl
 802a5ca:	4454      	add	r4, sl
 802a5cc:	4450      	add	r0, sl
 802a5ce:	4452      	add	r2, sl
 802a5d0:	46c4      	mov	ip, r8
 802a5d2:	e001      	b.n	802a5d8 <arm_radix8_butterfly_f32+0x334>
 802a5d4:	3f3504f3 	.word	0x3f3504f3
 802a5d8:	ed96 5a00 	vldr	s10, [r6]
 802a5dc:	ed52 9a01 	vldr	s19, [r2, #-4]
 802a5e0:	ed11 6a01 	vldr	s12, [r1, #-4]
 802a5e4:	edd0 7a00 	vldr	s15, [r0]
 802a5e8:	ed17 7a01 	vldr	s14, [r7, #-4]
 802a5ec:	edde 3a00 	vldr	s7, [lr]
 802a5f0:	ed94 3a00 	vldr	s6, [r4]
 802a5f4:	ed95 2a00 	vldr	s4, [r5]
 802a5f8:	ed9e 0a01 	vldr	s0, [lr, #4]
 802a5fc:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a600:	ee32 1a06 	vadd.f32	s2, s4, s12
 802a604:	ee33 4a29 	vadd.f32	s8, s6, s19
 802a608:	ee77 4a87 	vadd.f32	s9, s15, s14
 802a60c:	ee78 1a04 	vadd.f32	s3, s16, s8
 802a610:	ee71 6a24 	vadd.f32	s13, s2, s9
 802a614:	ee32 2a46 	vsub.f32	s4, s4, s12
 802a618:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802a61c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a620:	ed8e 6a00 	vstr	s12, [lr]
 802a624:	edd0 8a01 	vldr	s17, [r0, #4]
 802a628:	ed95 9a01 	vldr	s18, [r5, #4]
 802a62c:	edd1 2a00 	vldr	s5, [r1]
 802a630:	ed97 7a00 	vldr	s14, [r7]
 802a634:	edd4 0a01 	vldr	s1, [r4, #4]
 802a638:	ed96 6a01 	vldr	s12, [r6, #4]
 802a63c:	edd2 5a00 	vldr	s11, [r2]
 802a640:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802a644:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a648:	ee39 5a62 	vsub.f32	s10, s18, s5
 802a64c:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802a650:	ee38 4a44 	vsub.f32	s8, s16, s8
 802a654:	ee38 7a87 	vadd.f32	s14, s17, s14
 802a658:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802a65c:	ee79 2a22 	vadd.f32	s5, s18, s5
 802a660:	ee75 8a69 	vsub.f32	s17, s10, s19
 802a664:	ee32 9a27 	vadd.f32	s18, s4, s15
 802a668:	ee35 5a29 	vadd.f32	s10, s10, s19
 802a66c:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a670:	ee30 2a06 	vadd.f32	s4, s0, s12
 802a674:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802a678:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802a67c:	ee32 9a08 	vadd.f32	s18, s4, s16
 802a680:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802a684:	ee32 2a48 	vsub.f32	s4, s4, s16
 802a688:	ee71 4a64 	vsub.f32	s9, s2, s9
 802a68c:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802a690:	ee32 1a87 	vadd.f32	s2, s5, s14
 802a694:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802a698:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802a69c:	ee30 6a46 	vsub.f32	s12, s0, s12
 802a6a0:	ee73 0a29 	vadd.f32	s1, s6, s19
 802a6a4:	ee36 0a28 	vadd.f32	s0, s12, s17
 802a6a8:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a6ac:	ee32 7a64 	vsub.f32	s14, s4, s9
 802a6b0:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802a6b4:	ee36 6a68 	vsub.f32	s12, s12, s17
 802a6b8:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802a6bc:	ee75 8a85 	vadd.f32	s17, s11, s10
 802a6c0:	ee74 3a22 	vadd.f32	s7, s8, s5
 802a6c4:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802a6c8:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802a6cc:	ee79 1a41 	vsub.f32	s3, s18, s2
 802a6d0:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802a6d4:	ee76 5a43 	vsub.f32	s11, s12, s6
 802a6d8:	ee74 2a62 	vsub.f32	s5, s8, s5
 802a6dc:	ee72 4a24 	vadd.f32	s9, s4, s9
 802a6e0:	ee30 4a60 	vsub.f32	s8, s0, s1
 802a6e4:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802a6e8:	ee30 0a20 	vadd.f32	s0, s0, s1
 802a6ec:	ee77 9a85 	vadd.f32	s19, s15, s10
 802a6f0:	ee36 6a03 	vadd.f32	s12, s12, s6
 802a6f4:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802a6f8:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802a6fc:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802a700:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802a704:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802a708:	ee39 1a01 	vadd.f32	s2, s18, s2
 802a70c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802a710:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802a714:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802a718:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802a71c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802a720:	ee35 3a03 	vadd.f32	s6, s10, s6
 802a724:	ee72 6a66 	vsub.f32	s13, s4, s13
 802a728:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802a72c:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802a730:	ed9d 4a02 	vldr	s8, [sp, #8]
 802a734:	ed8e 1a01 	vstr	s2, [lr, #4]
 802a738:	ee77 3a63 	vsub.f32	s7, s14, s7
 802a73c:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802a740:	ed9d 7a01 	vldr	s14, [sp, #4]
 802a744:	ed86 3a00 	vstr	s6, [r6]
 802a748:	ee30 9a89 	vadd.f32	s18, s1, s18
 802a74c:	ee32 2a05 	vadd.f32	s4, s4, s10
 802a750:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802a754:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802a758:	ee67 2a22 	vmul.f32	s5, s14, s5
 802a75c:	ee64 1a00 	vmul.f32	s3, s8, s0
 802a760:	ee27 7a24 	vmul.f32	s14, s14, s9
 802a764:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802a768:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802a76c:	ee64 8a28 	vmul.f32	s17, s8, s17
 802a770:	ed9d 4a00 	vldr	s8, [sp]
 802a774:	edc6 6a01 	vstr	s13, [r6, #4]
 802a778:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802a77c:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802a780:	ee64 9a29 	vmul.f32	s19, s8, s19
 802a784:	ee24 4a25 	vmul.f32	s8, s8, s11
 802a788:	ee30 7a87 	vadd.f32	s14, s1, s14
 802a78c:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a790:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802a794:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802a798:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802a79c:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802a7a0:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802a7a4:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802a7a8:	ee75 1a21 	vadd.f32	s3, s10, s3
 802a7ac:	ee30 0a68 	vsub.f32	s0, s0, s17
 802a7b0:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802a7b4:	ee70 0a84 	vadd.f32	s1, s1, s8
 802a7b8:	ee36 6a67 	vsub.f32	s12, s12, s15
 802a7bc:	44dc      	add	ip, fp
 802a7be:	45e1      	cmp	r9, ip
 802a7c0:	ed84 9a00 	vstr	s18, [r4]
 802a7c4:	edc4 3a01 	vstr	s7, [r4, #4]
 802a7c8:	449e      	add	lr, r3
 802a7ca:	ed02 7a01 	vstr	s14, [r2, #-4]
 802a7ce:	edc2 2a00 	vstr	s5, [r2]
 802a7d2:	441e      	add	r6, r3
 802a7d4:	ed85 2a00 	vstr	s4, [r5]
 802a7d8:	ed85 8a01 	vstr	s16, [r5, #4]
 802a7dc:	441c      	add	r4, r3
 802a7de:	ed47 1a01 	vstr	s3, [r7, #-4]
 802a7e2:	ed87 0a00 	vstr	s0, [r7]
 802a7e6:	441a      	add	r2, r3
 802a7e8:	ed41 4a01 	vstr	s9, [r1, #-4]
 802a7ec:	edc1 9a00 	vstr	s19, [r1]
 802a7f0:	441d      	add	r5, r3
 802a7f2:	edc0 0a00 	vstr	s1, [r0]
 802a7f6:	441f      	add	r7, r3
 802a7f8:	ed80 6a01 	vstr	s12, [r0, #4]
 802a7fc:	4419      	add	r1, r3
 802a7fe:	4418      	add	r0, r3
 802a800:	f63f aeea 	bhi.w	802a5d8 <arm_radix8_butterfly_f32+0x334>
 802a804:	9a03      	ldr	r2, [sp, #12]
 802a806:	990d      	ldr	r1, [sp, #52]	; 0x34
 802a808:	440a      	add	r2, r1
 802a80a:	9203      	str	r2, [sp, #12]
 802a80c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802a80e:	9a05      	ldr	r2, [sp, #20]
 802a810:	440a      	add	r2, r1
 802a812:	9205      	str	r2, [sp, #20]
 802a814:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802a816:	9a04      	ldr	r2, [sp, #16]
 802a818:	440a      	add	r2, r1
 802a81a:	9204      	str	r2, [sp, #16]
 802a81c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802a81e:	9a06      	ldr	r2, [sp, #24]
 802a820:	440a      	add	r2, r1
 802a822:	9206      	str	r2, [sp, #24]
 802a824:	9911      	ldr	r1, [sp, #68]	; 0x44
 802a826:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a828:	440a      	add	r2, r1
 802a82a:	9209      	str	r2, [sp, #36]	; 0x24
 802a82c:	9910      	ldr	r1, [sp, #64]	; 0x40
 802a82e:	9a08      	ldr	r2, [sp, #32]
 802a830:	440a      	add	r2, r1
 802a832:	9208      	str	r2, [sp, #32]
 802a834:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802a836:	9a07      	ldr	r2, [sp, #28]
 802a838:	440a      	add	r2, r1
 802a83a:	9207      	str	r2, [sp, #28]
 802a83c:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a83e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a840:	f108 0801 	add.w	r8, r8, #1
 802a844:	3208      	adds	r2, #8
 802a846:	4588      	cmp	r8, r1
 802a848:	920a      	str	r2, [sp, #40]	; 0x28
 802a84a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802a84c:	f47f ae75 	bne.w	802a53a <arm_radix8_butterfly_f32+0x296>
 802a850:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802a854:	9300      	str	r3, [sp, #0]
 802a856:	46c3      	mov	fp, r8
 802a858:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802a85c:	e532      	b.n	802a2c4 <arm_radix8_butterfly_f32+0x20>
 802a85e:	b01d      	add	sp, #116	; 0x74
 802a860:	ecbd 8b10 	vpop	{d8-d15}
 802a864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a868 <__aeabi_atexit>:
 802a868:	460b      	mov	r3, r1
 802a86a:	4601      	mov	r1, r0
 802a86c:	4618      	mov	r0, r3
 802a86e:	f000 bef3 	b.w	802b658 <__cxa_atexit>

0802a872 <_ZdlPvj>:
 802a872:	f000 b812 	b.w	802a89a <_ZdlPv>

0802a876 <__cxa_guard_acquire>:
 802a876:	6803      	ldr	r3, [r0, #0]
 802a878:	07db      	lsls	r3, r3, #31
 802a87a:	d406      	bmi.n	802a88a <__cxa_guard_acquire+0x14>
 802a87c:	7843      	ldrb	r3, [r0, #1]
 802a87e:	b103      	cbz	r3, 802a882 <__cxa_guard_acquire+0xc>
 802a880:	deff      	udf	#255	; 0xff
 802a882:	2301      	movs	r3, #1
 802a884:	7043      	strb	r3, [r0, #1]
 802a886:	4618      	mov	r0, r3
 802a888:	4770      	bx	lr
 802a88a:	2000      	movs	r0, #0
 802a88c:	4770      	bx	lr

0802a88e <__cxa_guard_release>:
 802a88e:	2301      	movs	r3, #1
 802a890:	6003      	str	r3, [r0, #0]
 802a892:	4770      	bx	lr

0802a894 <__cxa_pure_virtual>:
 802a894:	b508      	push	{r3, lr}
 802a896:	f000 f80f 	bl	802a8b8 <_ZSt9terminatev>

0802a89a <_ZdlPv>:
 802a89a:	f000 be29 	b.w	802b4f0 <free>

0802a89e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a89e:	b508      	push	{r3, lr}
 802a8a0:	4780      	blx	r0
 802a8a2:	f000 fdf1 	bl	802b488 <abort>
	...

0802a8a8 <_ZSt13get_terminatev>:
 802a8a8:	4b02      	ldr	r3, [pc, #8]	; (802a8b4 <_ZSt13get_terminatev+0xc>)
 802a8aa:	6818      	ldr	r0, [r3, #0]
 802a8ac:	f3bf 8f5b 	dmb	ish
 802a8b0:	4770      	bx	lr
 802a8b2:	bf00      	nop
 802a8b4:	2000011c 	.word	0x2000011c

0802a8b8 <_ZSt9terminatev>:
 802a8b8:	b508      	push	{r3, lr}
 802a8ba:	f7ff fff5 	bl	802a8a8 <_ZSt13get_terminatev>
 802a8be:	f7ff ffee 	bl	802a89e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a8c4 <sqrtf>:
 802a8c4:	b508      	push	{r3, lr}
 802a8c6:	ed2d 8b02 	vpush	{d8}
 802a8ca:	eeb0 8a40 	vmov.f32	s16, s0
 802a8ce:	f000 f8a1 	bl	802aa14 <__ieee754_sqrtf>
 802a8d2:	eeb4 8a48 	vcmp.f32	s16, s16
 802a8d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8da:	d60c      	bvs.n	802a8f6 <sqrtf+0x32>
 802a8dc:	eddf 8a07 	vldr	s17, [pc, #28]	; 802a8fc <sqrtf+0x38>
 802a8e0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802a8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8e8:	d505      	bpl.n	802a8f6 <sqrtf+0x32>
 802a8ea:	f001 f8d3 	bl	802ba94 <__errno>
 802a8ee:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802a8f2:	2321      	movs	r3, #33	; 0x21
 802a8f4:	6003      	str	r3, [r0, #0]
 802a8f6:	ecbd 8b02 	vpop	{d8}
 802a8fa:	bd08      	pop	{r3, pc}
 802a8fc:	00000000 	.word	0x00000000

0802a900 <cosf>:
 802a900:	ee10 3a10 	vmov	r3, s0
 802a904:	b507      	push	{r0, r1, r2, lr}
 802a906:	4a1e      	ldr	r2, [pc, #120]	; (802a980 <cosf+0x80>)
 802a908:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a90c:	4293      	cmp	r3, r2
 802a90e:	dc06      	bgt.n	802a91e <cosf+0x1e>
 802a910:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a984 <cosf+0x84>
 802a914:	b003      	add	sp, #12
 802a916:	f85d eb04 	ldr.w	lr, [sp], #4
 802a91a:	f000 b903 	b.w	802ab24 <__kernel_cosf>
 802a91e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a922:	db04      	blt.n	802a92e <cosf+0x2e>
 802a924:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a928:	b003      	add	sp, #12
 802a92a:	f85d fb04 	ldr.w	pc, [sp], #4
 802a92e:	4668      	mov	r0, sp
 802a930:	f000 f99e 	bl	802ac70 <__ieee754_rem_pio2f>
 802a934:	f000 0003 	and.w	r0, r0, #3
 802a938:	2801      	cmp	r0, #1
 802a93a:	d009      	beq.n	802a950 <cosf+0x50>
 802a93c:	2802      	cmp	r0, #2
 802a93e:	d010      	beq.n	802a962 <cosf+0x62>
 802a940:	b9b0      	cbnz	r0, 802a970 <cosf+0x70>
 802a942:	eddd 0a01 	vldr	s1, [sp, #4]
 802a946:	ed9d 0a00 	vldr	s0, [sp]
 802a94a:	f000 f8eb 	bl	802ab24 <__kernel_cosf>
 802a94e:	e7eb      	b.n	802a928 <cosf+0x28>
 802a950:	eddd 0a01 	vldr	s1, [sp, #4]
 802a954:	ed9d 0a00 	vldr	s0, [sp]
 802a958:	f000 f942 	bl	802abe0 <__kernel_sinf>
 802a95c:	eeb1 0a40 	vneg.f32	s0, s0
 802a960:	e7e2      	b.n	802a928 <cosf+0x28>
 802a962:	eddd 0a01 	vldr	s1, [sp, #4]
 802a966:	ed9d 0a00 	vldr	s0, [sp]
 802a96a:	f000 f8db 	bl	802ab24 <__kernel_cosf>
 802a96e:	e7f5      	b.n	802a95c <cosf+0x5c>
 802a970:	eddd 0a01 	vldr	s1, [sp, #4]
 802a974:	ed9d 0a00 	vldr	s0, [sp]
 802a978:	2001      	movs	r0, #1
 802a97a:	f000 f931 	bl	802abe0 <__kernel_sinf>
 802a97e:	e7d3      	b.n	802a928 <cosf+0x28>
 802a980:	3f490fd8 	.word	0x3f490fd8
 802a984:	00000000 	.word	0x00000000

0802a988 <sinf>:
 802a988:	ee10 3a10 	vmov	r3, s0
 802a98c:	b507      	push	{r0, r1, r2, lr}
 802a98e:	4a1f      	ldr	r2, [pc, #124]	; (802aa0c <sinf+0x84>)
 802a990:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a994:	4293      	cmp	r3, r2
 802a996:	dc07      	bgt.n	802a9a8 <sinf+0x20>
 802a998:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802aa10 <sinf+0x88>
 802a99c:	2000      	movs	r0, #0
 802a99e:	b003      	add	sp, #12
 802a9a0:	f85d eb04 	ldr.w	lr, [sp], #4
 802a9a4:	f000 b91c 	b.w	802abe0 <__kernel_sinf>
 802a9a8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a9ac:	db04      	blt.n	802a9b8 <sinf+0x30>
 802a9ae:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a9b2:	b003      	add	sp, #12
 802a9b4:	f85d fb04 	ldr.w	pc, [sp], #4
 802a9b8:	4668      	mov	r0, sp
 802a9ba:	f000 f959 	bl	802ac70 <__ieee754_rem_pio2f>
 802a9be:	f000 0003 	and.w	r0, r0, #3
 802a9c2:	2801      	cmp	r0, #1
 802a9c4:	d00a      	beq.n	802a9dc <sinf+0x54>
 802a9c6:	2802      	cmp	r0, #2
 802a9c8:	d00f      	beq.n	802a9ea <sinf+0x62>
 802a9ca:	b9c0      	cbnz	r0, 802a9fe <sinf+0x76>
 802a9cc:	eddd 0a01 	vldr	s1, [sp, #4]
 802a9d0:	ed9d 0a00 	vldr	s0, [sp]
 802a9d4:	2001      	movs	r0, #1
 802a9d6:	f000 f903 	bl	802abe0 <__kernel_sinf>
 802a9da:	e7ea      	b.n	802a9b2 <sinf+0x2a>
 802a9dc:	eddd 0a01 	vldr	s1, [sp, #4]
 802a9e0:	ed9d 0a00 	vldr	s0, [sp]
 802a9e4:	f000 f89e 	bl	802ab24 <__kernel_cosf>
 802a9e8:	e7e3      	b.n	802a9b2 <sinf+0x2a>
 802a9ea:	eddd 0a01 	vldr	s1, [sp, #4]
 802a9ee:	ed9d 0a00 	vldr	s0, [sp]
 802a9f2:	2001      	movs	r0, #1
 802a9f4:	f000 f8f4 	bl	802abe0 <__kernel_sinf>
 802a9f8:	eeb1 0a40 	vneg.f32	s0, s0
 802a9fc:	e7d9      	b.n	802a9b2 <sinf+0x2a>
 802a9fe:	eddd 0a01 	vldr	s1, [sp, #4]
 802aa02:	ed9d 0a00 	vldr	s0, [sp]
 802aa06:	f000 f88d 	bl	802ab24 <__kernel_cosf>
 802aa0a:	e7f5      	b.n	802a9f8 <sinf+0x70>
 802aa0c:	3f490fd8 	.word	0x3f490fd8
 802aa10:	00000000 	.word	0x00000000

0802aa14 <__ieee754_sqrtf>:
 802aa14:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802aa18:	4770      	bx	lr
	...

0802aa1c <ceilf>:
 802aa1c:	ee10 3a10 	vmov	r3, s0
 802aa20:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802aa24:	3a7f      	subs	r2, #127	; 0x7f
 802aa26:	2a16      	cmp	r2, #22
 802aa28:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802aa2c:	dc2a      	bgt.n	802aa84 <ceilf+0x68>
 802aa2e:	2a00      	cmp	r2, #0
 802aa30:	da11      	bge.n	802aa56 <ceilf+0x3a>
 802aa32:	eddf 7a19 	vldr	s15, [pc, #100]	; 802aa98 <ceilf+0x7c>
 802aa36:	ee30 0a27 	vadd.f32	s0, s0, s15
 802aa3a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802aa3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aa42:	dd05      	ble.n	802aa50 <ceilf+0x34>
 802aa44:	2b00      	cmp	r3, #0
 802aa46:	db23      	blt.n	802aa90 <ceilf+0x74>
 802aa48:	2900      	cmp	r1, #0
 802aa4a:	bf18      	it	ne
 802aa4c:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802aa50:	ee00 3a10 	vmov	s0, r3
 802aa54:	4770      	bx	lr
 802aa56:	4911      	ldr	r1, [pc, #68]	; (802aa9c <ceilf+0x80>)
 802aa58:	4111      	asrs	r1, r2
 802aa5a:	420b      	tst	r3, r1
 802aa5c:	d0fa      	beq.n	802aa54 <ceilf+0x38>
 802aa5e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802aa98 <ceilf+0x7c>
 802aa62:	ee30 0a27 	vadd.f32	s0, s0, s15
 802aa66:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802aa6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aa6e:	ddef      	ble.n	802aa50 <ceilf+0x34>
 802aa70:	2b00      	cmp	r3, #0
 802aa72:	bfc2      	ittt	gt
 802aa74:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802aa78:	fa40 f202 	asrgt.w	r2, r0, r2
 802aa7c:	189b      	addgt	r3, r3, r2
 802aa7e:	ea23 0301 	bic.w	r3, r3, r1
 802aa82:	e7e5      	b.n	802aa50 <ceilf+0x34>
 802aa84:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802aa88:	d3e4      	bcc.n	802aa54 <ceilf+0x38>
 802aa8a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802aa8e:	4770      	bx	lr
 802aa90:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802aa94:	e7dc      	b.n	802aa50 <ceilf+0x34>
 802aa96:	bf00      	nop
 802aa98:	7149f2ca 	.word	0x7149f2ca
 802aa9c:	007fffff 	.word	0x007fffff

0802aaa0 <floorf>:
 802aaa0:	ee10 3a10 	vmov	r3, s0
 802aaa4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802aaa8:	3a7f      	subs	r2, #127	; 0x7f
 802aaaa:	2a16      	cmp	r2, #22
 802aaac:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802aab0:	dc2a      	bgt.n	802ab08 <floorf+0x68>
 802aab2:	2a00      	cmp	r2, #0
 802aab4:	da11      	bge.n	802aada <floorf+0x3a>
 802aab6:	eddf 7a18 	vldr	s15, [pc, #96]	; 802ab18 <floorf+0x78>
 802aaba:	ee30 0a27 	vadd.f32	s0, s0, s15
 802aabe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802aac2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aac6:	dd05      	ble.n	802aad4 <floorf+0x34>
 802aac8:	2b00      	cmp	r3, #0
 802aaca:	da23      	bge.n	802ab14 <floorf+0x74>
 802aacc:	4a13      	ldr	r2, [pc, #76]	; (802ab1c <floorf+0x7c>)
 802aace:	2900      	cmp	r1, #0
 802aad0:	bf18      	it	ne
 802aad2:	4613      	movne	r3, r2
 802aad4:	ee00 3a10 	vmov	s0, r3
 802aad8:	4770      	bx	lr
 802aada:	4911      	ldr	r1, [pc, #68]	; (802ab20 <floorf+0x80>)
 802aadc:	4111      	asrs	r1, r2
 802aade:	420b      	tst	r3, r1
 802aae0:	d0fa      	beq.n	802aad8 <floorf+0x38>
 802aae2:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802ab18 <floorf+0x78>
 802aae6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802aaea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802aaee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aaf2:	ddef      	ble.n	802aad4 <floorf+0x34>
 802aaf4:	2b00      	cmp	r3, #0
 802aaf6:	bfbe      	ittt	lt
 802aaf8:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802aafc:	fa40 f202 	asrlt.w	r2, r0, r2
 802ab00:	189b      	addlt	r3, r3, r2
 802ab02:	ea23 0301 	bic.w	r3, r3, r1
 802ab06:	e7e5      	b.n	802aad4 <floorf+0x34>
 802ab08:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802ab0c:	d3e4      	bcc.n	802aad8 <floorf+0x38>
 802ab0e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ab12:	4770      	bx	lr
 802ab14:	2300      	movs	r3, #0
 802ab16:	e7dd      	b.n	802aad4 <floorf+0x34>
 802ab18:	7149f2ca 	.word	0x7149f2ca
 802ab1c:	bf800000 	.word	0xbf800000
 802ab20:	007fffff 	.word	0x007fffff

0802ab24 <__kernel_cosf>:
 802ab24:	ee10 3a10 	vmov	r3, s0
 802ab28:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ab2c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802ab30:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802ab34:	da05      	bge.n	802ab42 <__kernel_cosf+0x1e>
 802ab36:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802ab3a:	ee17 2a90 	vmov	r2, s15
 802ab3e:	2a00      	cmp	r2, #0
 802ab40:	d03b      	beq.n	802abba <__kernel_cosf+0x96>
 802ab42:	ee20 7a00 	vmul.f32	s14, s0, s0
 802ab46:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802abc0 <__kernel_cosf+0x9c>
 802ab4a:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802abc4 <__kernel_cosf+0xa0>
 802ab4e:	4a1e      	ldr	r2, [pc, #120]	; (802abc8 <__kernel_cosf+0xa4>)
 802ab50:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ab54:	4293      	cmp	r3, r2
 802ab56:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802abcc <__kernel_cosf+0xa8>
 802ab5a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ab5e:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802abd0 <__kernel_cosf+0xac>
 802ab62:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ab66:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802abd4 <__kernel_cosf+0xb0>
 802ab6a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ab6e:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802abd8 <__kernel_cosf+0xb4>
 802ab72:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ab76:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802ab7a:	ee26 6a07 	vmul.f32	s12, s12, s14
 802ab7e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ab82:	eee7 0a06 	vfma.f32	s1, s14, s12
 802ab86:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ab8a:	dc04      	bgt.n	802ab96 <__kernel_cosf+0x72>
 802ab8c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802ab90:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802ab94:	4770      	bx	lr
 802ab96:	4a11      	ldr	r2, [pc, #68]	; (802abdc <__kernel_cosf+0xb8>)
 802ab98:	4293      	cmp	r3, r2
 802ab9a:	bfda      	itte	le
 802ab9c:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802aba0:	ee07 3a10 	vmovle	s14, r3
 802aba4:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802aba8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abac:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802abb0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802abb4:	ee30 0a67 	vsub.f32	s0, s0, s15
 802abb8:	4770      	bx	lr
 802abba:	eeb0 0a66 	vmov.f32	s0, s13
 802abbe:	4770      	bx	lr
 802abc0:	ad47d74e 	.word	0xad47d74e
 802abc4:	310f74f6 	.word	0x310f74f6
 802abc8:	3e999999 	.word	0x3e999999
 802abcc:	b493f27c 	.word	0xb493f27c
 802abd0:	37d00d01 	.word	0x37d00d01
 802abd4:	bab60b61 	.word	0xbab60b61
 802abd8:	3d2aaaab 	.word	0x3d2aaaab
 802abdc:	3f480000 	.word	0x3f480000

0802abe0 <__kernel_sinf>:
 802abe0:	ee10 3a10 	vmov	r3, s0
 802abe4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802abe8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802abec:	da04      	bge.n	802abf8 <__kernel_sinf+0x18>
 802abee:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802abf2:	ee17 3a90 	vmov	r3, s15
 802abf6:	b35b      	cbz	r3, 802ac50 <__kernel_sinf+0x70>
 802abf8:	ee20 7a00 	vmul.f32	s14, s0, s0
 802abfc:	eddf 7a15 	vldr	s15, [pc, #84]	; 802ac54 <__kernel_sinf+0x74>
 802ac00:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802ac58 <__kernel_sinf+0x78>
 802ac04:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ac08:	eddf 7a14 	vldr	s15, [pc, #80]	; 802ac5c <__kernel_sinf+0x7c>
 802ac0c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ac10:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802ac60 <__kernel_sinf+0x80>
 802ac14:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ac18:	eddf 7a12 	vldr	s15, [pc, #72]	; 802ac64 <__kernel_sinf+0x84>
 802ac1c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802ac20:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ac24:	b930      	cbnz	r0, 802ac34 <__kernel_sinf+0x54>
 802ac26:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802ac68 <__kernel_sinf+0x88>
 802ac2a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ac2e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802ac32:	4770      	bx	lr
 802ac34:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802ac38:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802ac3c:	eee0 7a86 	vfma.f32	s15, s1, s12
 802ac40:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802ac44:	eddf 7a09 	vldr	s15, [pc, #36]	; 802ac6c <__kernel_sinf+0x8c>
 802ac48:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802ac4c:	ee30 0a60 	vsub.f32	s0, s0, s1
 802ac50:	4770      	bx	lr
 802ac52:	bf00      	nop
 802ac54:	2f2ec9d3 	.word	0x2f2ec9d3
 802ac58:	b2d72f34 	.word	0xb2d72f34
 802ac5c:	3638ef1b 	.word	0x3638ef1b
 802ac60:	b9500d01 	.word	0xb9500d01
 802ac64:	3c088889 	.word	0x3c088889
 802ac68:	be2aaaab 	.word	0xbe2aaaab
 802ac6c:	3e2aaaab 	.word	0x3e2aaaab

0802ac70 <__ieee754_rem_pio2f>:
 802ac70:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ac72:	ee10 6a10 	vmov	r6, s0
 802ac76:	4b86      	ldr	r3, [pc, #536]	; (802ae90 <__ieee754_rem_pio2f+0x220>)
 802ac78:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802ac7c:	429d      	cmp	r5, r3
 802ac7e:	b087      	sub	sp, #28
 802ac80:	4604      	mov	r4, r0
 802ac82:	dc05      	bgt.n	802ac90 <__ieee754_rem_pio2f+0x20>
 802ac84:	2300      	movs	r3, #0
 802ac86:	ed80 0a00 	vstr	s0, [r0]
 802ac8a:	6043      	str	r3, [r0, #4]
 802ac8c:	2000      	movs	r0, #0
 802ac8e:	e020      	b.n	802acd2 <__ieee754_rem_pio2f+0x62>
 802ac90:	4b80      	ldr	r3, [pc, #512]	; (802ae94 <__ieee754_rem_pio2f+0x224>)
 802ac92:	429d      	cmp	r5, r3
 802ac94:	dc38      	bgt.n	802ad08 <__ieee754_rem_pio2f+0x98>
 802ac96:	2e00      	cmp	r6, #0
 802ac98:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802ae98 <__ieee754_rem_pio2f+0x228>
 802ac9c:	4b7f      	ldr	r3, [pc, #508]	; (802ae9c <__ieee754_rem_pio2f+0x22c>)
 802ac9e:	f025 050f 	bic.w	r5, r5, #15
 802aca2:	dd18      	ble.n	802acd6 <__ieee754_rem_pio2f+0x66>
 802aca4:	429d      	cmp	r5, r3
 802aca6:	ee70 7a47 	vsub.f32	s15, s0, s14
 802acaa:	bf09      	itett	eq
 802acac:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802aea0 <__ieee754_rem_pio2f+0x230>
 802acb0:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802aea4 <__ieee754_rem_pio2f+0x234>
 802acb4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802acb8:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802aea8 <__ieee754_rem_pio2f+0x238>
 802acbc:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802acc0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802acc4:	edc0 6a00 	vstr	s13, [r0]
 802acc8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802accc:	edc0 7a01 	vstr	s15, [r0, #4]
 802acd0:	2001      	movs	r0, #1
 802acd2:	b007      	add	sp, #28
 802acd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802acd6:	429d      	cmp	r5, r3
 802acd8:	ee70 7a07 	vadd.f32	s15, s0, s14
 802acdc:	bf09      	itett	eq
 802acde:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802aea0 <__ieee754_rem_pio2f+0x230>
 802ace2:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802aea4 <__ieee754_rem_pio2f+0x234>
 802ace6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802acea:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802aea8 <__ieee754_rem_pio2f+0x238>
 802acee:	ee77 6a87 	vadd.f32	s13, s15, s14
 802acf2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802acf6:	edc0 6a00 	vstr	s13, [r0]
 802acfa:	ee77 7a87 	vadd.f32	s15, s15, s14
 802acfe:	edc0 7a01 	vstr	s15, [r0, #4]
 802ad02:	f04f 30ff 	mov.w	r0, #4294967295
 802ad06:	e7e4      	b.n	802acd2 <__ieee754_rem_pio2f+0x62>
 802ad08:	4b68      	ldr	r3, [pc, #416]	; (802aeac <__ieee754_rem_pio2f+0x23c>)
 802ad0a:	429d      	cmp	r5, r3
 802ad0c:	dc71      	bgt.n	802adf2 <__ieee754_rem_pio2f+0x182>
 802ad0e:	f000 f8db 	bl	802aec8 <fabsf>
 802ad12:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802aeb0 <__ieee754_rem_pio2f+0x240>
 802ad16:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ad1a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802ad1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ad22:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802ad26:	ee17 0a90 	vmov	r0, s15
 802ad2a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802ae98 <__ieee754_rem_pio2f+0x228>
 802ad2e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802ad32:	281f      	cmp	r0, #31
 802ad34:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802aea4 <__ieee754_rem_pio2f+0x234>
 802ad38:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ad3c:	eeb1 6a47 	vneg.f32	s12, s14
 802ad40:	ee70 6a67 	vsub.f32	s13, s0, s15
 802ad44:	ee16 2a90 	vmov	r2, s13
 802ad48:	dc1c      	bgt.n	802ad84 <__ieee754_rem_pio2f+0x114>
 802ad4a:	495a      	ldr	r1, [pc, #360]	; (802aeb4 <__ieee754_rem_pio2f+0x244>)
 802ad4c:	1e47      	subs	r7, r0, #1
 802ad4e:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802ad52:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802ad56:	428b      	cmp	r3, r1
 802ad58:	d014      	beq.n	802ad84 <__ieee754_rem_pio2f+0x114>
 802ad5a:	6022      	str	r2, [r4, #0]
 802ad5c:	ed94 7a00 	vldr	s14, [r4]
 802ad60:	ee30 0a47 	vsub.f32	s0, s0, s14
 802ad64:	2e00      	cmp	r6, #0
 802ad66:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ad6a:	ed84 0a01 	vstr	s0, [r4, #4]
 802ad6e:	dab0      	bge.n	802acd2 <__ieee754_rem_pio2f+0x62>
 802ad70:	eeb1 7a47 	vneg.f32	s14, s14
 802ad74:	eeb1 0a40 	vneg.f32	s0, s0
 802ad78:	ed84 7a00 	vstr	s14, [r4]
 802ad7c:	ed84 0a01 	vstr	s0, [r4, #4]
 802ad80:	4240      	negs	r0, r0
 802ad82:	e7a6      	b.n	802acd2 <__ieee754_rem_pio2f+0x62>
 802ad84:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ad88:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802ad8c:	2908      	cmp	r1, #8
 802ad8e:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802ad92:	dde2      	ble.n	802ad5a <__ieee754_rem_pio2f+0xea>
 802ad94:	eddf 5a42 	vldr	s11, [pc, #264]	; 802aea0 <__ieee754_rem_pio2f+0x230>
 802ad98:	eef0 6a40 	vmov.f32	s13, s0
 802ad9c:	eee6 6a25 	vfma.f32	s13, s12, s11
 802ada0:	ee70 7a66 	vsub.f32	s15, s0, s13
 802ada4:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ada8:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802aea8 <__ieee754_rem_pio2f+0x238>
 802adac:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802adb0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802adb4:	ee15 2a90 	vmov	r2, s11
 802adb8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802adbc:	1a5b      	subs	r3, r3, r1
 802adbe:	2b19      	cmp	r3, #25
 802adc0:	dc04      	bgt.n	802adcc <__ieee754_rem_pio2f+0x15c>
 802adc2:	edc4 5a00 	vstr	s11, [r4]
 802adc6:	eeb0 0a66 	vmov.f32	s0, s13
 802adca:	e7c7      	b.n	802ad5c <__ieee754_rem_pio2f+0xec>
 802adcc:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802aeb8 <__ieee754_rem_pio2f+0x248>
 802add0:	eeb0 0a66 	vmov.f32	s0, s13
 802add4:	eea6 0a25 	vfma.f32	s0, s12, s11
 802add8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802addc:	eddf 6a37 	vldr	s13, [pc, #220]	; 802aebc <__ieee754_rem_pio2f+0x24c>
 802ade0:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ade4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802ade8:	ee30 7a67 	vsub.f32	s14, s0, s15
 802adec:	ed84 7a00 	vstr	s14, [r4]
 802adf0:	e7b4      	b.n	802ad5c <__ieee754_rem_pio2f+0xec>
 802adf2:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802adf6:	db06      	blt.n	802ae06 <__ieee754_rem_pio2f+0x196>
 802adf8:	ee70 7a40 	vsub.f32	s15, s0, s0
 802adfc:	edc0 7a01 	vstr	s15, [r0, #4]
 802ae00:	edc0 7a00 	vstr	s15, [r0]
 802ae04:	e742      	b.n	802ac8c <__ieee754_rem_pio2f+0x1c>
 802ae06:	15ea      	asrs	r2, r5, #23
 802ae08:	3a86      	subs	r2, #134	; 0x86
 802ae0a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802ae0e:	ee07 3a90 	vmov	s15, r3
 802ae12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ae16:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802aec0 <__ieee754_rem_pio2f+0x250>
 802ae1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ae1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ae22:	ed8d 7a03 	vstr	s14, [sp, #12]
 802ae26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ae2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ae2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ae32:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ae36:	ed8d 7a04 	vstr	s14, [sp, #16]
 802ae3a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ae3e:	eef5 7a40 	vcmp.f32	s15, #0.0
 802ae42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ae46:	edcd 7a05 	vstr	s15, [sp, #20]
 802ae4a:	d11e      	bne.n	802ae8a <__ieee754_rem_pio2f+0x21a>
 802ae4c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802ae50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ae54:	bf14      	ite	ne
 802ae56:	2302      	movne	r3, #2
 802ae58:	2301      	moveq	r3, #1
 802ae5a:	491a      	ldr	r1, [pc, #104]	; (802aec4 <__ieee754_rem_pio2f+0x254>)
 802ae5c:	9101      	str	r1, [sp, #4]
 802ae5e:	2102      	movs	r1, #2
 802ae60:	9100      	str	r1, [sp, #0]
 802ae62:	a803      	add	r0, sp, #12
 802ae64:	4621      	mov	r1, r4
 802ae66:	f000 f89d 	bl	802afa4 <__kernel_rem_pio2f>
 802ae6a:	2e00      	cmp	r6, #0
 802ae6c:	f6bf af31 	bge.w	802acd2 <__ieee754_rem_pio2f+0x62>
 802ae70:	edd4 7a00 	vldr	s15, [r4]
 802ae74:	eef1 7a67 	vneg.f32	s15, s15
 802ae78:	edc4 7a00 	vstr	s15, [r4]
 802ae7c:	edd4 7a01 	vldr	s15, [r4, #4]
 802ae80:	eef1 7a67 	vneg.f32	s15, s15
 802ae84:	edc4 7a01 	vstr	s15, [r4, #4]
 802ae88:	e77a      	b.n	802ad80 <__ieee754_rem_pio2f+0x110>
 802ae8a:	2303      	movs	r3, #3
 802ae8c:	e7e5      	b.n	802ae5a <__ieee754_rem_pio2f+0x1ea>
 802ae8e:	bf00      	nop
 802ae90:	3f490fd8 	.word	0x3f490fd8
 802ae94:	4016cbe3 	.word	0x4016cbe3
 802ae98:	3fc90f80 	.word	0x3fc90f80
 802ae9c:	3fc90fd0 	.word	0x3fc90fd0
 802aea0:	37354400 	.word	0x37354400
 802aea4:	37354443 	.word	0x37354443
 802aea8:	2e85a308 	.word	0x2e85a308
 802aeac:	43490f80 	.word	0x43490f80
 802aeb0:	3f22f984 	.word	0x3f22f984
 802aeb4:	08043a94 	.word	0x08043a94
 802aeb8:	2e85a300 	.word	0x2e85a300
 802aebc:	248d3132 	.word	0x248d3132
 802aec0:	43800000 	.word	0x43800000
 802aec4:	08043b14 	.word	0x08043b14

0802aec8 <fabsf>:
 802aec8:	ee10 3a10 	vmov	r3, s0
 802aecc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aed0:	ee00 3a10 	vmov	s0, r3
 802aed4:	4770      	bx	lr
	...

0802aed8 <scalbnf>:
 802aed8:	ee10 3a10 	vmov	r3, s0
 802aedc:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802aee0:	d02b      	beq.n	802af3a <scalbnf+0x62>
 802aee2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802aee6:	d302      	bcc.n	802aeee <scalbnf+0x16>
 802aee8:	ee30 0a00 	vadd.f32	s0, s0, s0
 802aeec:	4770      	bx	lr
 802aeee:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802aef2:	d123      	bne.n	802af3c <scalbnf+0x64>
 802aef4:	4b24      	ldr	r3, [pc, #144]	; (802af88 <scalbnf+0xb0>)
 802aef6:	eddf 7a25 	vldr	s15, [pc, #148]	; 802af8c <scalbnf+0xb4>
 802aefa:	4298      	cmp	r0, r3
 802aefc:	ee20 0a27 	vmul.f32	s0, s0, s15
 802af00:	db17      	blt.n	802af32 <scalbnf+0x5a>
 802af02:	ee10 3a10 	vmov	r3, s0
 802af06:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802af0a:	3a19      	subs	r2, #25
 802af0c:	f24c 3150 	movw	r1, #50000	; 0xc350
 802af10:	4288      	cmp	r0, r1
 802af12:	dd15      	ble.n	802af40 <scalbnf+0x68>
 802af14:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802af90 <scalbnf+0xb8>
 802af18:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802af94 <scalbnf+0xbc>
 802af1c:	ee10 3a10 	vmov	r3, s0
 802af20:	eeb0 7a67 	vmov.f32	s14, s15
 802af24:	2b00      	cmp	r3, #0
 802af26:	bfb8      	it	lt
 802af28:	eef0 7a66 	vmovlt.f32	s15, s13
 802af2c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802af30:	4770      	bx	lr
 802af32:	eddf 7a19 	vldr	s15, [pc, #100]	; 802af98 <scalbnf+0xc0>
 802af36:	ee27 0a80 	vmul.f32	s0, s15, s0
 802af3a:	4770      	bx	lr
 802af3c:	0dd2      	lsrs	r2, r2, #23
 802af3e:	e7e5      	b.n	802af0c <scalbnf+0x34>
 802af40:	4410      	add	r0, r2
 802af42:	28fe      	cmp	r0, #254	; 0xfe
 802af44:	dce6      	bgt.n	802af14 <scalbnf+0x3c>
 802af46:	2800      	cmp	r0, #0
 802af48:	dd06      	ble.n	802af58 <scalbnf+0x80>
 802af4a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802af4e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802af52:	ee00 3a10 	vmov	s0, r3
 802af56:	4770      	bx	lr
 802af58:	f110 0f16 	cmn.w	r0, #22
 802af5c:	da09      	bge.n	802af72 <scalbnf+0x9a>
 802af5e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802af98 <scalbnf+0xc0>
 802af62:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802af9c <scalbnf+0xc4>
 802af66:	ee10 3a10 	vmov	r3, s0
 802af6a:	eeb0 7a67 	vmov.f32	s14, s15
 802af6e:	2b00      	cmp	r3, #0
 802af70:	e7d9      	b.n	802af26 <scalbnf+0x4e>
 802af72:	3019      	adds	r0, #25
 802af74:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802af78:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802af7c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802afa0 <scalbnf+0xc8>
 802af80:	ee07 3a90 	vmov	s15, r3
 802af84:	e7d7      	b.n	802af36 <scalbnf+0x5e>
 802af86:	bf00      	nop
 802af88:	ffff3cb0 	.word	0xffff3cb0
 802af8c:	4c000000 	.word	0x4c000000
 802af90:	7149f2ca 	.word	0x7149f2ca
 802af94:	f149f2ca 	.word	0xf149f2ca
 802af98:	0da24260 	.word	0x0da24260
 802af9c:	8da24260 	.word	0x8da24260
 802afa0:	33000000 	.word	0x33000000

0802afa4 <__kernel_rem_pio2f>:
 802afa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802afa8:	ed2d 8b04 	vpush	{d8-d9}
 802afac:	b0d9      	sub	sp, #356	; 0x164
 802afae:	4688      	mov	r8, r1
 802afb0:	9002      	str	r0, [sp, #8]
 802afb2:	49b8      	ldr	r1, [pc, #736]	; (802b294 <__kernel_rem_pio2f+0x2f0>)
 802afb4:	9866      	ldr	r0, [sp, #408]	; 0x198
 802afb6:	9301      	str	r3, [sp, #4]
 802afb8:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802afbc:	9901      	ldr	r1, [sp, #4]
 802afbe:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802afc0:	f101 3bff 	add.w	fp, r1, #4294967295
 802afc4:	1d11      	adds	r1, r2, #4
 802afc6:	db25      	blt.n	802b014 <__kernel_rem_pio2f+0x70>
 802afc8:	1ed0      	subs	r0, r2, #3
 802afca:	bf48      	it	mi
 802afcc:	1d10      	addmi	r0, r2, #4
 802afce:	10c0      	asrs	r0, r0, #3
 802afd0:	1c45      	adds	r5, r0, #1
 802afd2:	00e9      	lsls	r1, r5, #3
 802afd4:	eba0 070b 	sub.w	r7, r0, fp
 802afd8:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802afdc:	9103      	str	r1, [sp, #12]
 802afde:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802afe2:	eb0a 0c0b 	add.w	ip, sl, fp
 802afe6:	ae1c      	add	r6, sp, #112	; 0x70
 802afe8:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802afec:	2400      	movs	r4, #0
 802afee:	4564      	cmp	r4, ip
 802aff0:	dd12      	ble.n	802b018 <__kernel_rem_pio2f+0x74>
 802aff2:	9901      	ldr	r1, [sp, #4]
 802aff4:	ac1c      	add	r4, sp, #112	; 0x70
 802aff6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802affa:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802affe:	f04f 0c00 	mov.w	ip, #0
 802b002:	45d4      	cmp	ip, sl
 802b004:	dc27      	bgt.n	802b056 <__kernel_rem_pio2f+0xb2>
 802b006:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b00a:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802b00e:	4627      	mov	r7, r4
 802b010:	2600      	movs	r6, #0
 802b012:	e016      	b.n	802b042 <__kernel_rem_pio2f+0x9e>
 802b014:	2000      	movs	r0, #0
 802b016:	e7db      	b.n	802afd0 <__kernel_rem_pio2f+0x2c>
 802b018:	42e7      	cmn	r7, r4
 802b01a:	bf5d      	ittte	pl
 802b01c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b020:	ee07 1a90 	vmovpl	s15, r1
 802b024:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b028:	eef0 7a47 	vmovmi.f32	s15, s14
 802b02c:	ece6 7a01 	vstmia	r6!, {s15}
 802b030:	3401      	adds	r4, #1
 802b032:	e7dc      	b.n	802afee <__kernel_rem_pio2f+0x4a>
 802b034:	ecfe 6a01 	vldmia	lr!, {s13}
 802b038:	ed97 7a00 	vldr	s14, [r7]
 802b03c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b040:	3601      	adds	r6, #1
 802b042:	455e      	cmp	r6, fp
 802b044:	f1a7 0704 	sub.w	r7, r7, #4
 802b048:	ddf4      	ble.n	802b034 <__kernel_rem_pio2f+0x90>
 802b04a:	ece9 7a01 	vstmia	r9!, {s15}
 802b04e:	f10c 0c01 	add.w	ip, ip, #1
 802b052:	3404      	adds	r4, #4
 802b054:	e7d5      	b.n	802b002 <__kernel_rem_pio2f+0x5e>
 802b056:	a908      	add	r1, sp, #32
 802b058:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b05c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b060:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b2a0 <__kernel_rem_pio2f+0x2fc>
 802b064:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b29c <__kernel_rem_pio2f+0x2f8>
 802b068:	9105      	str	r1, [sp, #20]
 802b06a:	9304      	str	r3, [sp, #16]
 802b06c:	4656      	mov	r6, sl
 802b06e:	00b3      	lsls	r3, r6, #2
 802b070:	9306      	str	r3, [sp, #24]
 802b072:	ab58      	add	r3, sp, #352	; 0x160
 802b074:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b078:	ac08      	add	r4, sp, #32
 802b07a:	ab44      	add	r3, sp, #272	; 0x110
 802b07c:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b080:	46a4      	mov	ip, r4
 802b082:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b086:	4637      	mov	r7, r6
 802b088:	2f00      	cmp	r7, #0
 802b08a:	f1a0 0004 	sub.w	r0, r0, #4
 802b08e:	dc4a      	bgt.n	802b126 <__kernel_rem_pio2f+0x182>
 802b090:	4628      	mov	r0, r5
 802b092:	9207      	str	r2, [sp, #28]
 802b094:	f7ff ff20 	bl	802aed8 <scalbnf>
 802b098:	eeb0 8a40 	vmov.f32	s16, s0
 802b09c:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b0a0:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b0a4:	f7ff fcfc 	bl	802aaa0 <floorf>
 802b0a8:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b0ac:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b0b0:	2d00      	cmp	r5, #0
 802b0b2:	9a07      	ldr	r2, [sp, #28]
 802b0b4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b0b8:	ee17 9a90 	vmov	r9, s15
 802b0bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b0c0:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b0c4:	dd41      	ble.n	802b14a <__kernel_rem_pio2f+0x1a6>
 802b0c6:	f106 3cff 	add.w	ip, r6, #4294967295
 802b0ca:	ab08      	add	r3, sp, #32
 802b0cc:	f1c5 0e08 	rsb	lr, r5, #8
 802b0d0:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b0d4:	fa47 f00e 	asr.w	r0, r7, lr
 802b0d8:	4481      	add	r9, r0
 802b0da:	fa00 f00e 	lsl.w	r0, r0, lr
 802b0de:	1a3f      	subs	r7, r7, r0
 802b0e0:	f1c5 0007 	rsb	r0, r5, #7
 802b0e4:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b0e8:	4107      	asrs	r7, r0
 802b0ea:	2f00      	cmp	r7, #0
 802b0ec:	dd3c      	ble.n	802b168 <__kernel_rem_pio2f+0x1c4>
 802b0ee:	f04f 0e00 	mov.w	lr, #0
 802b0f2:	f109 0901 	add.w	r9, r9, #1
 802b0f6:	4671      	mov	r1, lr
 802b0f8:	4576      	cmp	r6, lr
 802b0fa:	dc67      	bgt.n	802b1cc <__kernel_rem_pio2f+0x228>
 802b0fc:	2d00      	cmp	r5, #0
 802b0fe:	dd03      	ble.n	802b108 <__kernel_rem_pio2f+0x164>
 802b100:	2d01      	cmp	r5, #1
 802b102:	d074      	beq.n	802b1ee <__kernel_rem_pio2f+0x24a>
 802b104:	2d02      	cmp	r5, #2
 802b106:	d07b      	beq.n	802b200 <__kernel_rem_pio2f+0x25c>
 802b108:	2f02      	cmp	r7, #2
 802b10a:	d12d      	bne.n	802b168 <__kernel_rem_pio2f+0x1c4>
 802b10c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b110:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b114:	b341      	cbz	r1, 802b168 <__kernel_rem_pio2f+0x1c4>
 802b116:	4628      	mov	r0, r5
 802b118:	9207      	str	r2, [sp, #28]
 802b11a:	f7ff fedd 	bl	802aed8 <scalbnf>
 802b11e:	9a07      	ldr	r2, [sp, #28]
 802b120:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b124:	e020      	b.n	802b168 <__kernel_rem_pio2f+0x1c4>
 802b126:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b12a:	3f01      	subs	r7, #1
 802b12c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b130:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b134:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b138:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b13c:	ecac 0a01 	vstmia	ip!, {s0}
 802b140:	ed90 0a00 	vldr	s0, [r0]
 802b144:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b148:	e79e      	b.n	802b088 <__kernel_rem_pio2f+0xe4>
 802b14a:	d105      	bne.n	802b158 <__kernel_rem_pio2f+0x1b4>
 802b14c:	1e70      	subs	r0, r6, #1
 802b14e:	ab08      	add	r3, sp, #32
 802b150:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b154:	11ff      	asrs	r7, r7, #7
 802b156:	e7c8      	b.n	802b0ea <__kernel_rem_pio2f+0x146>
 802b158:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b15c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b164:	da30      	bge.n	802b1c8 <__kernel_rem_pio2f+0x224>
 802b166:	2700      	movs	r7, #0
 802b168:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b16c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b170:	f040 809a 	bne.w	802b2a8 <__kernel_rem_pio2f+0x304>
 802b174:	1e74      	subs	r4, r6, #1
 802b176:	46a4      	mov	ip, r4
 802b178:	2100      	movs	r1, #0
 802b17a:	45d4      	cmp	ip, sl
 802b17c:	da47      	bge.n	802b20e <__kernel_rem_pio2f+0x26a>
 802b17e:	2900      	cmp	r1, #0
 802b180:	d063      	beq.n	802b24a <__kernel_rem_pio2f+0x2a6>
 802b182:	ab08      	add	r3, sp, #32
 802b184:	3d08      	subs	r5, #8
 802b186:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b18a:	2b00      	cmp	r3, #0
 802b18c:	d07f      	beq.n	802b28e <__kernel_rem_pio2f+0x2ea>
 802b18e:	4628      	mov	r0, r5
 802b190:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b194:	f7ff fea0 	bl	802aed8 <scalbnf>
 802b198:	1c63      	adds	r3, r4, #1
 802b19a:	aa44      	add	r2, sp, #272	; 0x110
 802b19c:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b2a0 <__kernel_rem_pio2f+0x2fc>
 802b1a0:	0099      	lsls	r1, r3, #2
 802b1a2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b1a6:	4623      	mov	r3, r4
 802b1a8:	2b00      	cmp	r3, #0
 802b1aa:	f280 80ad 	bge.w	802b308 <__kernel_rem_pio2f+0x364>
 802b1ae:	4623      	mov	r3, r4
 802b1b0:	2b00      	cmp	r3, #0
 802b1b2:	f2c0 80cb 	blt.w	802b34c <__kernel_rem_pio2f+0x3a8>
 802b1b6:	aa44      	add	r2, sp, #272	; 0x110
 802b1b8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b1bc:	4e36      	ldr	r6, [pc, #216]	; (802b298 <__kernel_rem_pio2f+0x2f4>)
 802b1be:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802b1c2:	2000      	movs	r0, #0
 802b1c4:	1ae2      	subs	r2, r4, r3
 802b1c6:	e0b6      	b.n	802b336 <__kernel_rem_pio2f+0x392>
 802b1c8:	2702      	movs	r7, #2
 802b1ca:	e790      	b.n	802b0ee <__kernel_rem_pio2f+0x14a>
 802b1cc:	6820      	ldr	r0, [r4, #0]
 802b1ce:	b949      	cbnz	r1, 802b1e4 <__kernel_rem_pio2f+0x240>
 802b1d0:	b118      	cbz	r0, 802b1da <__kernel_rem_pio2f+0x236>
 802b1d2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b1d6:	6020      	str	r0, [r4, #0]
 802b1d8:	2001      	movs	r0, #1
 802b1da:	f10e 0e01 	add.w	lr, lr, #1
 802b1de:	3404      	adds	r4, #4
 802b1e0:	4601      	mov	r1, r0
 802b1e2:	e789      	b.n	802b0f8 <__kernel_rem_pio2f+0x154>
 802b1e4:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b1e8:	6020      	str	r0, [r4, #0]
 802b1ea:	4608      	mov	r0, r1
 802b1ec:	e7f5      	b.n	802b1da <__kernel_rem_pio2f+0x236>
 802b1ee:	1e74      	subs	r4, r6, #1
 802b1f0:	ab08      	add	r3, sp, #32
 802b1f2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b1f6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b1fa:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b1fe:	e783      	b.n	802b108 <__kernel_rem_pio2f+0x164>
 802b200:	1e74      	subs	r4, r6, #1
 802b202:	ab08      	add	r3, sp, #32
 802b204:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b208:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b20c:	e7f5      	b.n	802b1fa <__kernel_rem_pio2f+0x256>
 802b20e:	ab08      	add	r3, sp, #32
 802b210:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b214:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b218:	4301      	orrs	r1, r0
 802b21a:	e7ae      	b.n	802b17a <__kernel_rem_pio2f+0x1d6>
 802b21c:	3001      	adds	r0, #1
 802b21e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b222:	2f00      	cmp	r7, #0
 802b224:	d0fa      	beq.n	802b21c <__kernel_rem_pio2f+0x278>
 802b226:	9b06      	ldr	r3, [sp, #24]
 802b228:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b22c:	eb0d 0403 	add.w	r4, sp, r3
 802b230:	9b01      	ldr	r3, [sp, #4]
 802b232:	18f7      	adds	r7, r6, r3
 802b234:	ab1c      	add	r3, sp, #112	; 0x70
 802b236:	f106 0c01 	add.w	ip, r6, #1
 802b23a:	3c4c      	subs	r4, #76	; 0x4c
 802b23c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b240:	4430      	add	r0, r6
 802b242:	4560      	cmp	r0, ip
 802b244:	da04      	bge.n	802b250 <__kernel_rem_pio2f+0x2ac>
 802b246:	4606      	mov	r6, r0
 802b248:	e711      	b.n	802b06e <__kernel_rem_pio2f+0xca>
 802b24a:	9c05      	ldr	r4, [sp, #20]
 802b24c:	2001      	movs	r0, #1
 802b24e:	e7e6      	b.n	802b21e <__kernel_rem_pio2f+0x27a>
 802b250:	9b04      	ldr	r3, [sp, #16]
 802b252:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b256:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b25a:	9306      	str	r3, [sp, #24]
 802b25c:	ee07 3a90 	vmov	s15, r3
 802b260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b264:	2600      	movs	r6, #0
 802b266:	ece7 7a01 	vstmia	r7!, {s15}
 802b26a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802b26e:	46b9      	mov	r9, r7
 802b270:	455e      	cmp	r6, fp
 802b272:	dd04      	ble.n	802b27e <__kernel_rem_pio2f+0x2da>
 802b274:	ece4 7a01 	vstmia	r4!, {s15}
 802b278:	f10c 0c01 	add.w	ip, ip, #1
 802b27c:	e7e1      	b.n	802b242 <__kernel_rem_pio2f+0x29e>
 802b27e:	ecfe 6a01 	vldmia	lr!, {s13}
 802b282:	ed39 7a01 	vldmdb	r9!, {s14}
 802b286:	3601      	adds	r6, #1
 802b288:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b28c:	e7f0      	b.n	802b270 <__kernel_rem_pio2f+0x2cc>
 802b28e:	3c01      	subs	r4, #1
 802b290:	e777      	b.n	802b182 <__kernel_rem_pio2f+0x1de>
 802b292:	bf00      	nop
 802b294:	08043e58 	.word	0x08043e58
 802b298:	08043e2c 	.word	0x08043e2c
 802b29c:	43800000 	.word	0x43800000
 802b2a0:	3b800000 	.word	0x3b800000
 802b2a4:	00000000 	.word	0x00000000
 802b2a8:	9b03      	ldr	r3, [sp, #12]
 802b2aa:	eeb0 0a48 	vmov.f32	s0, s16
 802b2ae:	1a98      	subs	r0, r3, r2
 802b2b0:	f7ff fe12 	bl	802aed8 <scalbnf>
 802b2b4:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b29c <__kernel_rem_pio2f+0x2f8>
 802b2b8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b2bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2c0:	db19      	blt.n	802b2f6 <__kernel_rem_pio2f+0x352>
 802b2c2:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b2a0 <__kernel_rem_pio2f+0x2fc>
 802b2c6:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b2ca:	aa08      	add	r2, sp, #32
 802b2cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b2d0:	1c74      	adds	r4, r6, #1
 802b2d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b2d6:	3508      	adds	r5, #8
 802b2d8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b2dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b2e0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b2e4:	ee10 3a10 	vmov	r3, s0
 802b2e8:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b2ec:	ee17 3a90 	vmov	r3, s15
 802b2f0:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b2f4:	e74b      	b.n	802b18e <__kernel_rem_pio2f+0x1ea>
 802b2f6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b2fa:	aa08      	add	r2, sp, #32
 802b2fc:	ee10 3a10 	vmov	r3, s0
 802b300:	4634      	mov	r4, r6
 802b302:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b306:	e742      	b.n	802b18e <__kernel_rem_pio2f+0x1ea>
 802b308:	a808      	add	r0, sp, #32
 802b30a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b30e:	9001      	str	r0, [sp, #4]
 802b310:	ee07 0a90 	vmov	s15, r0
 802b314:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b318:	3b01      	subs	r3, #1
 802b31a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b31e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b322:	ed62 7a01 	vstmdb	r2!, {s15}
 802b326:	e73f      	b.n	802b1a8 <__kernel_rem_pio2f+0x204>
 802b328:	ecf6 6a01 	vldmia	r6!, {s13}
 802b32c:	ecb5 7a01 	vldmia	r5!, {s14}
 802b330:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b334:	3001      	adds	r0, #1
 802b336:	4550      	cmp	r0, sl
 802b338:	dc01      	bgt.n	802b33e <__kernel_rem_pio2f+0x39a>
 802b33a:	4290      	cmp	r0, r2
 802b33c:	ddf4      	ble.n	802b328 <__kernel_rem_pio2f+0x384>
 802b33e:	a858      	add	r0, sp, #352	; 0x160
 802b340:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b344:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b348:	3b01      	subs	r3, #1
 802b34a:	e731      	b.n	802b1b0 <__kernel_rem_pio2f+0x20c>
 802b34c:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b34e:	2b02      	cmp	r3, #2
 802b350:	dc09      	bgt.n	802b366 <__kernel_rem_pio2f+0x3c2>
 802b352:	2b00      	cmp	r3, #0
 802b354:	dc2b      	bgt.n	802b3ae <__kernel_rem_pio2f+0x40a>
 802b356:	d044      	beq.n	802b3e2 <__kernel_rem_pio2f+0x43e>
 802b358:	f009 0007 	and.w	r0, r9, #7
 802b35c:	b059      	add	sp, #356	; 0x164
 802b35e:	ecbd 8b04 	vpop	{d8-d9}
 802b362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b366:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b368:	2b03      	cmp	r3, #3
 802b36a:	d1f5      	bne.n	802b358 <__kernel_rem_pio2f+0x3b4>
 802b36c:	aa30      	add	r2, sp, #192	; 0xc0
 802b36e:	1f0b      	subs	r3, r1, #4
 802b370:	4413      	add	r3, r2
 802b372:	461a      	mov	r2, r3
 802b374:	4620      	mov	r0, r4
 802b376:	2800      	cmp	r0, #0
 802b378:	f1a2 0204 	sub.w	r2, r2, #4
 802b37c:	dc52      	bgt.n	802b424 <__kernel_rem_pio2f+0x480>
 802b37e:	4622      	mov	r2, r4
 802b380:	2a01      	cmp	r2, #1
 802b382:	f1a3 0304 	sub.w	r3, r3, #4
 802b386:	dc5d      	bgt.n	802b444 <__kernel_rem_pio2f+0x4a0>
 802b388:	ab30      	add	r3, sp, #192	; 0xc0
 802b38a:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802b38e:	440b      	add	r3, r1
 802b390:	2c01      	cmp	r4, #1
 802b392:	dc67      	bgt.n	802b464 <__kernel_rem_pio2f+0x4c0>
 802b394:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b398:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b39c:	2f00      	cmp	r7, #0
 802b39e:	d167      	bne.n	802b470 <__kernel_rem_pio2f+0x4cc>
 802b3a0:	edc8 6a00 	vstr	s13, [r8]
 802b3a4:	ed88 7a01 	vstr	s14, [r8, #4]
 802b3a8:	edc8 7a02 	vstr	s15, [r8, #8]
 802b3ac:	e7d4      	b.n	802b358 <__kernel_rem_pio2f+0x3b4>
 802b3ae:	ab30      	add	r3, sp, #192	; 0xc0
 802b3b0:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802b3b4:	440b      	add	r3, r1
 802b3b6:	4622      	mov	r2, r4
 802b3b8:	2a00      	cmp	r2, #0
 802b3ba:	da24      	bge.n	802b406 <__kernel_rem_pio2f+0x462>
 802b3bc:	b34f      	cbz	r7, 802b412 <__kernel_rem_pio2f+0x46e>
 802b3be:	eef1 7a47 	vneg.f32	s15, s14
 802b3c2:	edc8 7a00 	vstr	s15, [r8]
 802b3c6:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b3ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3ce:	aa31      	add	r2, sp, #196	; 0xc4
 802b3d0:	2301      	movs	r3, #1
 802b3d2:	429c      	cmp	r4, r3
 802b3d4:	da20      	bge.n	802b418 <__kernel_rem_pio2f+0x474>
 802b3d6:	b10f      	cbz	r7, 802b3dc <__kernel_rem_pio2f+0x438>
 802b3d8:	eef1 7a67 	vneg.f32	s15, s15
 802b3dc:	edc8 7a01 	vstr	s15, [r8, #4]
 802b3e0:	e7ba      	b.n	802b358 <__kernel_rem_pio2f+0x3b4>
 802b3e2:	ab30      	add	r3, sp, #192	; 0xc0
 802b3e4:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b2a4 <__kernel_rem_pio2f+0x300>
 802b3e8:	440b      	add	r3, r1
 802b3ea:	2c00      	cmp	r4, #0
 802b3ec:	da05      	bge.n	802b3fa <__kernel_rem_pio2f+0x456>
 802b3ee:	b10f      	cbz	r7, 802b3f4 <__kernel_rem_pio2f+0x450>
 802b3f0:	eef1 7a67 	vneg.f32	s15, s15
 802b3f4:	edc8 7a00 	vstr	s15, [r8]
 802b3f8:	e7ae      	b.n	802b358 <__kernel_rem_pio2f+0x3b4>
 802b3fa:	ed33 7a01 	vldmdb	r3!, {s14}
 802b3fe:	3c01      	subs	r4, #1
 802b400:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b404:	e7f1      	b.n	802b3ea <__kernel_rem_pio2f+0x446>
 802b406:	ed73 7a01 	vldmdb	r3!, {s15}
 802b40a:	3a01      	subs	r2, #1
 802b40c:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b410:	e7d2      	b.n	802b3b8 <__kernel_rem_pio2f+0x414>
 802b412:	eef0 7a47 	vmov.f32	s15, s14
 802b416:	e7d4      	b.n	802b3c2 <__kernel_rem_pio2f+0x41e>
 802b418:	ecb2 7a01 	vldmia	r2!, {s14}
 802b41c:	3301      	adds	r3, #1
 802b41e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b422:	e7d6      	b.n	802b3d2 <__kernel_rem_pio2f+0x42e>
 802b424:	edd2 7a00 	vldr	s15, [r2]
 802b428:	edd2 6a01 	vldr	s13, [r2, #4]
 802b42c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b430:	3801      	subs	r0, #1
 802b432:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b436:	ed82 7a00 	vstr	s14, [r2]
 802b43a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b43e:	edc2 7a01 	vstr	s15, [r2, #4]
 802b442:	e798      	b.n	802b376 <__kernel_rem_pio2f+0x3d2>
 802b444:	edd3 7a00 	vldr	s15, [r3]
 802b448:	edd3 6a01 	vldr	s13, [r3, #4]
 802b44c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b450:	3a01      	subs	r2, #1
 802b452:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b456:	ed83 7a00 	vstr	s14, [r3]
 802b45a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b45e:	edc3 7a01 	vstr	s15, [r3, #4]
 802b462:	e78d      	b.n	802b380 <__kernel_rem_pio2f+0x3dc>
 802b464:	ed33 7a01 	vldmdb	r3!, {s14}
 802b468:	3c01      	subs	r4, #1
 802b46a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b46e:	e78f      	b.n	802b390 <__kernel_rem_pio2f+0x3ec>
 802b470:	eef1 6a66 	vneg.f32	s13, s13
 802b474:	eeb1 7a47 	vneg.f32	s14, s14
 802b478:	edc8 6a00 	vstr	s13, [r8]
 802b47c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b480:	eef1 7a67 	vneg.f32	s15, s15
 802b484:	e790      	b.n	802b3a8 <__kernel_rem_pio2f+0x404>
 802b486:	bf00      	nop

0802b488 <abort>:
 802b488:	b508      	push	{r3, lr}
 802b48a:	2006      	movs	r0, #6
 802b48c:	f000 fa3a 	bl	802b904 <raise>
 802b490:	2001      	movs	r0, #1
 802b492:	f7d6 fadb 	bl	8001a4c <_exit>
	...

0802b498 <__assert_func>:
 802b498:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b49a:	4614      	mov	r4, r2
 802b49c:	461a      	mov	r2, r3
 802b49e:	4b09      	ldr	r3, [pc, #36]	; (802b4c4 <__assert_func+0x2c>)
 802b4a0:	681b      	ldr	r3, [r3, #0]
 802b4a2:	4605      	mov	r5, r0
 802b4a4:	68d8      	ldr	r0, [r3, #12]
 802b4a6:	b14c      	cbz	r4, 802b4bc <__assert_func+0x24>
 802b4a8:	4b07      	ldr	r3, [pc, #28]	; (802b4c8 <__assert_func+0x30>)
 802b4aa:	9100      	str	r1, [sp, #0]
 802b4ac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b4b0:	4906      	ldr	r1, [pc, #24]	; (802b4cc <__assert_func+0x34>)
 802b4b2:	462b      	mov	r3, r5
 802b4b4:	f000 f982 	bl	802b7bc <fiprintf>
 802b4b8:	f7ff ffe6 	bl	802b488 <abort>
 802b4bc:	4b04      	ldr	r3, [pc, #16]	; (802b4d0 <__assert_func+0x38>)
 802b4be:	461c      	mov	r4, r3
 802b4c0:	e7f3      	b.n	802b4aa <__assert_func+0x12>
 802b4c2:	bf00      	nop
 802b4c4:	20000178 	.word	0x20000178
 802b4c8:	08043e64 	.word	0x08043e64
 802b4cc:	08043e71 	.word	0x08043e71
 802b4d0:	08043e9f 	.word	0x08043e9f

0802b4d4 <atexit>:
 802b4d4:	2300      	movs	r3, #0
 802b4d6:	4601      	mov	r1, r0
 802b4d8:	461a      	mov	r2, r3
 802b4da:	4618      	mov	r0, r3
 802b4dc:	f000 bb16 	b.w	802bb0c <__register_exitproc>

0802b4e0 <malloc>:
 802b4e0:	4b02      	ldr	r3, [pc, #8]	; (802b4ec <malloc+0xc>)
 802b4e2:	4601      	mov	r1, r0
 802b4e4:	6818      	ldr	r0, [r3, #0]
 802b4e6:	f000 b82b 	b.w	802b540 <_malloc_r>
 802b4ea:	bf00      	nop
 802b4ec:	20000178 	.word	0x20000178

0802b4f0 <free>:
 802b4f0:	4b02      	ldr	r3, [pc, #8]	; (802b4fc <free+0xc>)
 802b4f2:	4601      	mov	r1, r0
 802b4f4:	6818      	ldr	r0, [r3, #0]
 802b4f6:	f000 bb67 	b.w	802bbc8 <_free_r>
 802b4fa:	bf00      	nop
 802b4fc:	20000178 	.word	0x20000178

0802b500 <sbrk_aligned>:
 802b500:	b570      	push	{r4, r5, r6, lr}
 802b502:	4e0e      	ldr	r6, [pc, #56]	; (802b53c <sbrk_aligned+0x3c>)
 802b504:	460c      	mov	r4, r1
 802b506:	6831      	ldr	r1, [r6, #0]
 802b508:	4605      	mov	r5, r0
 802b50a:	b911      	cbnz	r1, 802b512 <sbrk_aligned+0x12>
 802b50c:	f000 faa0 	bl	802ba50 <_sbrk_r>
 802b510:	6030      	str	r0, [r6, #0]
 802b512:	4621      	mov	r1, r4
 802b514:	4628      	mov	r0, r5
 802b516:	f000 fa9b 	bl	802ba50 <_sbrk_r>
 802b51a:	1c43      	adds	r3, r0, #1
 802b51c:	d00a      	beq.n	802b534 <sbrk_aligned+0x34>
 802b51e:	1cc4      	adds	r4, r0, #3
 802b520:	f024 0403 	bic.w	r4, r4, #3
 802b524:	42a0      	cmp	r0, r4
 802b526:	d007      	beq.n	802b538 <sbrk_aligned+0x38>
 802b528:	1a21      	subs	r1, r4, r0
 802b52a:	4628      	mov	r0, r5
 802b52c:	f000 fa90 	bl	802ba50 <_sbrk_r>
 802b530:	3001      	adds	r0, #1
 802b532:	d101      	bne.n	802b538 <sbrk_aligned+0x38>
 802b534:	f04f 34ff 	mov.w	r4, #4294967295
 802b538:	4620      	mov	r0, r4
 802b53a:	bd70      	pop	{r4, r5, r6, pc}
 802b53c:	2001420c 	.word	0x2001420c

0802b540 <_malloc_r>:
 802b540:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b544:	1ccd      	adds	r5, r1, #3
 802b546:	f025 0503 	bic.w	r5, r5, #3
 802b54a:	3508      	adds	r5, #8
 802b54c:	2d0c      	cmp	r5, #12
 802b54e:	bf38      	it	cc
 802b550:	250c      	movcc	r5, #12
 802b552:	2d00      	cmp	r5, #0
 802b554:	4607      	mov	r7, r0
 802b556:	db01      	blt.n	802b55c <_malloc_r+0x1c>
 802b558:	42a9      	cmp	r1, r5
 802b55a:	d905      	bls.n	802b568 <_malloc_r+0x28>
 802b55c:	230c      	movs	r3, #12
 802b55e:	603b      	str	r3, [r7, #0]
 802b560:	2600      	movs	r6, #0
 802b562:	4630      	mov	r0, r6
 802b564:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b568:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b63c <_malloc_r+0xfc>
 802b56c:	f000 f868 	bl	802b640 <__malloc_lock>
 802b570:	f8d8 3000 	ldr.w	r3, [r8]
 802b574:	461c      	mov	r4, r3
 802b576:	bb5c      	cbnz	r4, 802b5d0 <_malloc_r+0x90>
 802b578:	4629      	mov	r1, r5
 802b57a:	4638      	mov	r0, r7
 802b57c:	f7ff ffc0 	bl	802b500 <sbrk_aligned>
 802b580:	1c43      	adds	r3, r0, #1
 802b582:	4604      	mov	r4, r0
 802b584:	d155      	bne.n	802b632 <_malloc_r+0xf2>
 802b586:	f8d8 4000 	ldr.w	r4, [r8]
 802b58a:	4626      	mov	r6, r4
 802b58c:	2e00      	cmp	r6, #0
 802b58e:	d145      	bne.n	802b61c <_malloc_r+0xdc>
 802b590:	2c00      	cmp	r4, #0
 802b592:	d048      	beq.n	802b626 <_malloc_r+0xe6>
 802b594:	6823      	ldr	r3, [r4, #0]
 802b596:	4631      	mov	r1, r6
 802b598:	4638      	mov	r0, r7
 802b59a:	eb04 0903 	add.w	r9, r4, r3
 802b59e:	f000 fa57 	bl	802ba50 <_sbrk_r>
 802b5a2:	4581      	cmp	r9, r0
 802b5a4:	d13f      	bne.n	802b626 <_malloc_r+0xe6>
 802b5a6:	6821      	ldr	r1, [r4, #0]
 802b5a8:	1a6d      	subs	r5, r5, r1
 802b5aa:	4629      	mov	r1, r5
 802b5ac:	4638      	mov	r0, r7
 802b5ae:	f7ff ffa7 	bl	802b500 <sbrk_aligned>
 802b5b2:	3001      	adds	r0, #1
 802b5b4:	d037      	beq.n	802b626 <_malloc_r+0xe6>
 802b5b6:	6823      	ldr	r3, [r4, #0]
 802b5b8:	442b      	add	r3, r5
 802b5ba:	6023      	str	r3, [r4, #0]
 802b5bc:	f8d8 3000 	ldr.w	r3, [r8]
 802b5c0:	2b00      	cmp	r3, #0
 802b5c2:	d038      	beq.n	802b636 <_malloc_r+0xf6>
 802b5c4:	685a      	ldr	r2, [r3, #4]
 802b5c6:	42a2      	cmp	r2, r4
 802b5c8:	d12b      	bne.n	802b622 <_malloc_r+0xe2>
 802b5ca:	2200      	movs	r2, #0
 802b5cc:	605a      	str	r2, [r3, #4]
 802b5ce:	e00f      	b.n	802b5f0 <_malloc_r+0xb0>
 802b5d0:	6822      	ldr	r2, [r4, #0]
 802b5d2:	1b52      	subs	r2, r2, r5
 802b5d4:	d41f      	bmi.n	802b616 <_malloc_r+0xd6>
 802b5d6:	2a0b      	cmp	r2, #11
 802b5d8:	d917      	bls.n	802b60a <_malloc_r+0xca>
 802b5da:	1961      	adds	r1, r4, r5
 802b5dc:	42a3      	cmp	r3, r4
 802b5de:	6025      	str	r5, [r4, #0]
 802b5e0:	bf18      	it	ne
 802b5e2:	6059      	strne	r1, [r3, #4]
 802b5e4:	6863      	ldr	r3, [r4, #4]
 802b5e6:	bf08      	it	eq
 802b5e8:	f8c8 1000 	streq.w	r1, [r8]
 802b5ec:	5162      	str	r2, [r4, r5]
 802b5ee:	604b      	str	r3, [r1, #4]
 802b5f0:	4638      	mov	r0, r7
 802b5f2:	f104 060b 	add.w	r6, r4, #11
 802b5f6:	f000 f829 	bl	802b64c <__malloc_unlock>
 802b5fa:	f026 0607 	bic.w	r6, r6, #7
 802b5fe:	1d23      	adds	r3, r4, #4
 802b600:	1af2      	subs	r2, r6, r3
 802b602:	d0ae      	beq.n	802b562 <_malloc_r+0x22>
 802b604:	1b9b      	subs	r3, r3, r6
 802b606:	50a3      	str	r3, [r4, r2]
 802b608:	e7ab      	b.n	802b562 <_malloc_r+0x22>
 802b60a:	42a3      	cmp	r3, r4
 802b60c:	6862      	ldr	r2, [r4, #4]
 802b60e:	d1dd      	bne.n	802b5cc <_malloc_r+0x8c>
 802b610:	f8c8 2000 	str.w	r2, [r8]
 802b614:	e7ec      	b.n	802b5f0 <_malloc_r+0xb0>
 802b616:	4623      	mov	r3, r4
 802b618:	6864      	ldr	r4, [r4, #4]
 802b61a:	e7ac      	b.n	802b576 <_malloc_r+0x36>
 802b61c:	4634      	mov	r4, r6
 802b61e:	6876      	ldr	r6, [r6, #4]
 802b620:	e7b4      	b.n	802b58c <_malloc_r+0x4c>
 802b622:	4613      	mov	r3, r2
 802b624:	e7cc      	b.n	802b5c0 <_malloc_r+0x80>
 802b626:	230c      	movs	r3, #12
 802b628:	603b      	str	r3, [r7, #0]
 802b62a:	4638      	mov	r0, r7
 802b62c:	f000 f80e 	bl	802b64c <__malloc_unlock>
 802b630:	e797      	b.n	802b562 <_malloc_r+0x22>
 802b632:	6025      	str	r5, [r4, #0]
 802b634:	e7dc      	b.n	802b5f0 <_malloc_r+0xb0>
 802b636:	605b      	str	r3, [r3, #4]
 802b638:	deff      	udf	#255	; 0xff
 802b63a:	bf00      	nop
 802b63c:	20014208 	.word	0x20014208

0802b640 <__malloc_lock>:
 802b640:	4801      	ldr	r0, [pc, #4]	; (802b648 <__malloc_lock+0x8>)
 802b642:	f000 ba52 	b.w	802baea <__retarget_lock_acquire_recursive>
 802b646:	bf00      	nop
 802b648:	20014351 	.word	0x20014351

0802b64c <__malloc_unlock>:
 802b64c:	4801      	ldr	r0, [pc, #4]	; (802b654 <__malloc_unlock+0x8>)
 802b64e:	f000 ba4d 	b.w	802baec <__retarget_lock_release_recursive>
 802b652:	bf00      	nop
 802b654:	20014351 	.word	0x20014351

0802b658 <__cxa_atexit>:
 802b658:	b510      	push	{r4, lr}
 802b65a:	4c05      	ldr	r4, [pc, #20]	; (802b670 <__cxa_atexit+0x18>)
 802b65c:	4613      	mov	r3, r2
 802b65e:	b12c      	cbz	r4, 802b66c <__cxa_atexit+0x14>
 802b660:	460a      	mov	r2, r1
 802b662:	4601      	mov	r1, r0
 802b664:	2002      	movs	r0, #2
 802b666:	f000 fa51 	bl	802bb0c <__register_exitproc>
 802b66a:	bd10      	pop	{r4, pc}
 802b66c:	4620      	mov	r0, r4
 802b66e:	e7fc      	b.n	802b66a <__cxa_atexit+0x12>
 802b670:	0802bb0d 	.word	0x0802bb0d

0802b674 <std>:
 802b674:	2300      	movs	r3, #0
 802b676:	b510      	push	{r4, lr}
 802b678:	4604      	mov	r4, r0
 802b67a:	e9c0 3300 	strd	r3, r3, [r0]
 802b67e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b682:	6083      	str	r3, [r0, #8]
 802b684:	8181      	strh	r1, [r0, #12]
 802b686:	6643      	str	r3, [r0, #100]	; 0x64
 802b688:	81c2      	strh	r2, [r0, #14]
 802b68a:	6183      	str	r3, [r0, #24]
 802b68c:	4619      	mov	r1, r3
 802b68e:	2208      	movs	r2, #8
 802b690:	305c      	adds	r0, #92	; 0x5c
 802b692:	f000 f906 	bl	802b8a2 <memset>
 802b696:	4b0d      	ldr	r3, [pc, #52]	; (802b6cc <std+0x58>)
 802b698:	6263      	str	r3, [r4, #36]	; 0x24
 802b69a:	4b0d      	ldr	r3, [pc, #52]	; (802b6d0 <std+0x5c>)
 802b69c:	62a3      	str	r3, [r4, #40]	; 0x28
 802b69e:	4b0d      	ldr	r3, [pc, #52]	; (802b6d4 <std+0x60>)
 802b6a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b6a2:	4b0d      	ldr	r3, [pc, #52]	; (802b6d8 <std+0x64>)
 802b6a4:	6323      	str	r3, [r4, #48]	; 0x30
 802b6a6:	4b0d      	ldr	r3, [pc, #52]	; (802b6dc <std+0x68>)
 802b6a8:	6224      	str	r4, [r4, #32]
 802b6aa:	429c      	cmp	r4, r3
 802b6ac:	d006      	beq.n	802b6bc <std+0x48>
 802b6ae:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b6b2:	4294      	cmp	r4, r2
 802b6b4:	d002      	beq.n	802b6bc <std+0x48>
 802b6b6:	33d0      	adds	r3, #208	; 0xd0
 802b6b8:	429c      	cmp	r4, r3
 802b6ba:	d105      	bne.n	802b6c8 <std+0x54>
 802b6bc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b6c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b6c4:	f000 ba10 	b.w	802bae8 <__retarget_lock_init_recursive>
 802b6c8:	bd10      	pop	{r4, pc}
 802b6ca:	bf00      	nop
 802b6cc:	0802b81d 	.word	0x0802b81d
 802b6d0:	0802b83f 	.word	0x0802b83f
 802b6d4:	0802b877 	.word	0x0802b877
 802b6d8:	0802b89b 	.word	0x0802b89b
 802b6dc:	20014210 	.word	0x20014210

0802b6e0 <stdio_exit_handler>:
 802b6e0:	4a02      	ldr	r2, [pc, #8]	; (802b6ec <stdio_exit_handler+0xc>)
 802b6e2:	4903      	ldr	r1, [pc, #12]	; (802b6f0 <stdio_exit_handler+0x10>)
 802b6e4:	4803      	ldr	r0, [pc, #12]	; (802b6f4 <stdio_exit_handler+0x14>)
 802b6e6:	f000 b87b 	b.w	802b7e0 <_fwalk_sglue>
 802b6ea:	bf00      	nop
 802b6ec:	20000120 	.word	0x20000120
 802b6f0:	0802c315 	.word	0x0802c315
 802b6f4:	2000012c 	.word	0x2000012c

0802b6f8 <cleanup_stdio>:
 802b6f8:	6841      	ldr	r1, [r0, #4]
 802b6fa:	4b0c      	ldr	r3, [pc, #48]	; (802b72c <cleanup_stdio+0x34>)
 802b6fc:	4299      	cmp	r1, r3
 802b6fe:	b510      	push	{r4, lr}
 802b700:	4604      	mov	r4, r0
 802b702:	d001      	beq.n	802b708 <cleanup_stdio+0x10>
 802b704:	f000 fe06 	bl	802c314 <_fflush_r>
 802b708:	68a1      	ldr	r1, [r4, #8]
 802b70a:	4b09      	ldr	r3, [pc, #36]	; (802b730 <cleanup_stdio+0x38>)
 802b70c:	4299      	cmp	r1, r3
 802b70e:	d002      	beq.n	802b716 <cleanup_stdio+0x1e>
 802b710:	4620      	mov	r0, r4
 802b712:	f000 fdff 	bl	802c314 <_fflush_r>
 802b716:	68e1      	ldr	r1, [r4, #12]
 802b718:	4b06      	ldr	r3, [pc, #24]	; (802b734 <cleanup_stdio+0x3c>)
 802b71a:	4299      	cmp	r1, r3
 802b71c:	d004      	beq.n	802b728 <cleanup_stdio+0x30>
 802b71e:	4620      	mov	r0, r4
 802b720:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b724:	f000 bdf6 	b.w	802c314 <_fflush_r>
 802b728:	bd10      	pop	{r4, pc}
 802b72a:	bf00      	nop
 802b72c:	20014210 	.word	0x20014210
 802b730:	20014278 	.word	0x20014278
 802b734:	200142e0 	.word	0x200142e0

0802b738 <global_stdio_init.part.0>:
 802b738:	b510      	push	{r4, lr}
 802b73a:	4b0b      	ldr	r3, [pc, #44]	; (802b768 <global_stdio_init.part.0+0x30>)
 802b73c:	4c0b      	ldr	r4, [pc, #44]	; (802b76c <global_stdio_init.part.0+0x34>)
 802b73e:	4a0c      	ldr	r2, [pc, #48]	; (802b770 <global_stdio_init.part.0+0x38>)
 802b740:	601a      	str	r2, [r3, #0]
 802b742:	4620      	mov	r0, r4
 802b744:	2200      	movs	r2, #0
 802b746:	2104      	movs	r1, #4
 802b748:	f7ff ff94 	bl	802b674 <std>
 802b74c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b750:	2201      	movs	r2, #1
 802b752:	2109      	movs	r1, #9
 802b754:	f7ff ff8e 	bl	802b674 <std>
 802b758:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b75c:	2202      	movs	r2, #2
 802b75e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b762:	2112      	movs	r1, #18
 802b764:	f7ff bf86 	b.w	802b674 <std>
 802b768:	20014348 	.word	0x20014348
 802b76c:	20014210 	.word	0x20014210
 802b770:	0802b6e1 	.word	0x0802b6e1

0802b774 <__sfp_lock_acquire>:
 802b774:	4801      	ldr	r0, [pc, #4]	; (802b77c <__sfp_lock_acquire+0x8>)
 802b776:	f000 b9b8 	b.w	802baea <__retarget_lock_acquire_recursive>
 802b77a:	bf00      	nop
 802b77c:	20014352 	.word	0x20014352

0802b780 <__sfp_lock_release>:
 802b780:	4801      	ldr	r0, [pc, #4]	; (802b788 <__sfp_lock_release+0x8>)
 802b782:	f000 b9b3 	b.w	802baec <__retarget_lock_release_recursive>
 802b786:	bf00      	nop
 802b788:	20014352 	.word	0x20014352

0802b78c <__sinit>:
 802b78c:	b510      	push	{r4, lr}
 802b78e:	4604      	mov	r4, r0
 802b790:	f7ff fff0 	bl	802b774 <__sfp_lock_acquire>
 802b794:	6a23      	ldr	r3, [r4, #32]
 802b796:	b11b      	cbz	r3, 802b7a0 <__sinit+0x14>
 802b798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b79c:	f7ff bff0 	b.w	802b780 <__sfp_lock_release>
 802b7a0:	4b04      	ldr	r3, [pc, #16]	; (802b7b4 <__sinit+0x28>)
 802b7a2:	6223      	str	r3, [r4, #32]
 802b7a4:	4b04      	ldr	r3, [pc, #16]	; (802b7b8 <__sinit+0x2c>)
 802b7a6:	681b      	ldr	r3, [r3, #0]
 802b7a8:	2b00      	cmp	r3, #0
 802b7aa:	d1f5      	bne.n	802b798 <__sinit+0xc>
 802b7ac:	f7ff ffc4 	bl	802b738 <global_stdio_init.part.0>
 802b7b0:	e7f2      	b.n	802b798 <__sinit+0xc>
 802b7b2:	bf00      	nop
 802b7b4:	0802b6f9 	.word	0x0802b6f9
 802b7b8:	20014348 	.word	0x20014348

0802b7bc <fiprintf>:
 802b7bc:	b40e      	push	{r1, r2, r3}
 802b7be:	b503      	push	{r0, r1, lr}
 802b7c0:	4601      	mov	r1, r0
 802b7c2:	ab03      	add	r3, sp, #12
 802b7c4:	4805      	ldr	r0, [pc, #20]	; (802b7dc <fiprintf+0x20>)
 802b7c6:	f853 2b04 	ldr.w	r2, [r3], #4
 802b7ca:	6800      	ldr	r0, [r0, #0]
 802b7cc:	9301      	str	r3, [sp, #4]
 802b7ce:	f000 fa71 	bl	802bcb4 <_vfiprintf_r>
 802b7d2:	b002      	add	sp, #8
 802b7d4:	f85d eb04 	ldr.w	lr, [sp], #4
 802b7d8:	b003      	add	sp, #12
 802b7da:	4770      	bx	lr
 802b7dc:	20000178 	.word	0x20000178

0802b7e0 <_fwalk_sglue>:
 802b7e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b7e4:	4607      	mov	r7, r0
 802b7e6:	4688      	mov	r8, r1
 802b7e8:	4614      	mov	r4, r2
 802b7ea:	2600      	movs	r6, #0
 802b7ec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b7f0:	f1b9 0901 	subs.w	r9, r9, #1
 802b7f4:	d505      	bpl.n	802b802 <_fwalk_sglue+0x22>
 802b7f6:	6824      	ldr	r4, [r4, #0]
 802b7f8:	2c00      	cmp	r4, #0
 802b7fa:	d1f7      	bne.n	802b7ec <_fwalk_sglue+0xc>
 802b7fc:	4630      	mov	r0, r6
 802b7fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b802:	89ab      	ldrh	r3, [r5, #12]
 802b804:	2b01      	cmp	r3, #1
 802b806:	d907      	bls.n	802b818 <_fwalk_sglue+0x38>
 802b808:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b80c:	3301      	adds	r3, #1
 802b80e:	d003      	beq.n	802b818 <_fwalk_sglue+0x38>
 802b810:	4629      	mov	r1, r5
 802b812:	4638      	mov	r0, r7
 802b814:	47c0      	blx	r8
 802b816:	4306      	orrs	r6, r0
 802b818:	3568      	adds	r5, #104	; 0x68
 802b81a:	e7e9      	b.n	802b7f0 <_fwalk_sglue+0x10>

0802b81c <__sread>:
 802b81c:	b510      	push	{r4, lr}
 802b81e:	460c      	mov	r4, r1
 802b820:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b824:	f000 f8ee 	bl	802ba04 <_read_r>
 802b828:	2800      	cmp	r0, #0
 802b82a:	bfab      	itete	ge
 802b82c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b82e:	89a3      	ldrhlt	r3, [r4, #12]
 802b830:	181b      	addge	r3, r3, r0
 802b832:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b836:	bfac      	ite	ge
 802b838:	6563      	strge	r3, [r4, #84]	; 0x54
 802b83a:	81a3      	strhlt	r3, [r4, #12]
 802b83c:	bd10      	pop	{r4, pc}

0802b83e <__swrite>:
 802b83e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b842:	461f      	mov	r7, r3
 802b844:	898b      	ldrh	r3, [r1, #12]
 802b846:	05db      	lsls	r3, r3, #23
 802b848:	4605      	mov	r5, r0
 802b84a:	460c      	mov	r4, r1
 802b84c:	4616      	mov	r6, r2
 802b84e:	d505      	bpl.n	802b85c <__swrite+0x1e>
 802b850:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b854:	2302      	movs	r3, #2
 802b856:	2200      	movs	r2, #0
 802b858:	f000 f8c2 	bl	802b9e0 <_lseek_r>
 802b85c:	89a3      	ldrh	r3, [r4, #12]
 802b85e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b862:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b866:	81a3      	strh	r3, [r4, #12]
 802b868:	4632      	mov	r2, r6
 802b86a:	463b      	mov	r3, r7
 802b86c:	4628      	mov	r0, r5
 802b86e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b872:	f000 b8fd 	b.w	802ba70 <_write_r>

0802b876 <__sseek>:
 802b876:	b510      	push	{r4, lr}
 802b878:	460c      	mov	r4, r1
 802b87a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b87e:	f000 f8af 	bl	802b9e0 <_lseek_r>
 802b882:	1c43      	adds	r3, r0, #1
 802b884:	89a3      	ldrh	r3, [r4, #12]
 802b886:	bf15      	itete	ne
 802b888:	6560      	strne	r0, [r4, #84]	; 0x54
 802b88a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b88e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b892:	81a3      	strheq	r3, [r4, #12]
 802b894:	bf18      	it	ne
 802b896:	81a3      	strhne	r3, [r4, #12]
 802b898:	bd10      	pop	{r4, pc}

0802b89a <__sclose>:
 802b89a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b89e:	f000 b839 	b.w	802b914 <_close_r>

0802b8a2 <memset>:
 802b8a2:	4402      	add	r2, r0
 802b8a4:	4603      	mov	r3, r0
 802b8a6:	4293      	cmp	r3, r2
 802b8a8:	d100      	bne.n	802b8ac <memset+0xa>
 802b8aa:	4770      	bx	lr
 802b8ac:	f803 1b01 	strb.w	r1, [r3], #1
 802b8b0:	e7f9      	b.n	802b8a6 <memset+0x4>

0802b8b2 <_raise_r>:
 802b8b2:	291f      	cmp	r1, #31
 802b8b4:	b538      	push	{r3, r4, r5, lr}
 802b8b6:	4604      	mov	r4, r0
 802b8b8:	460d      	mov	r5, r1
 802b8ba:	d904      	bls.n	802b8c6 <_raise_r+0x14>
 802b8bc:	2316      	movs	r3, #22
 802b8be:	6003      	str	r3, [r0, #0]
 802b8c0:	f04f 30ff 	mov.w	r0, #4294967295
 802b8c4:	bd38      	pop	{r3, r4, r5, pc}
 802b8c6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b8c8:	b112      	cbz	r2, 802b8d0 <_raise_r+0x1e>
 802b8ca:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b8ce:	b94b      	cbnz	r3, 802b8e4 <_raise_r+0x32>
 802b8d0:	4620      	mov	r0, r4
 802b8d2:	f000 f8bb 	bl	802ba4c <_getpid_r>
 802b8d6:	462a      	mov	r2, r5
 802b8d8:	4601      	mov	r1, r0
 802b8da:	4620      	mov	r0, r4
 802b8dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b8e0:	f000 b8a2 	b.w	802ba28 <_kill_r>
 802b8e4:	2b01      	cmp	r3, #1
 802b8e6:	d00a      	beq.n	802b8fe <_raise_r+0x4c>
 802b8e8:	1c59      	adds	r1, r3, #1
 802b8ea:	d103      	bne.n	802b8f4 <_raise_r+0x42>
 802b8ec:	2316      	movs	r3, #22
 802b8ee:	6003      	str	r3, [r0, #0]
 802b8f0:	2001      	movs	r0, #1
 802b8f2:	e7e7      	b.n	802b8c4 <_raise_r+0x12>
 802b8f4:	2400      	movs	r4, #0
 802b8f6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b8fa:	4628      	mov	r0, r5
 802b8fc:	4798      	blx	r3
 802b8fe:	2000      	movs	r0, #0
 802b900:	e7e0      	b.n	802b8c4 <_raise_r+0x12>
	...

0802b904 <raise>:
 802b904:	4b02      	ldr	r3, [pc, #8]	; (802b910 <raise+0xc>)
 802b906:	4601      	mov	r1, r0
 802b908:	6818      	ldr	r0, [r3, #0]
 802b90a:	f7ff bfd2 	b.w	802b8b2 <_raise_r>
 802b90e:	bf00      	nop
 802b910:	20000178 	.word	0x20000178

0802b914 <_close_r>:
 802b914:	b538      	push	{r3, r4, r5, lr}
 802b916:	4d06      	ldr	r5, [pc, #24]	; (802b930 <_close_r+0x1c>)
 802b918:	2300      	movs	r3, #0
 802b91a:	4604      	mov	r4, r0
 802b91c:	4608      	mov	r0, r1
 802b91e:	602b      	str	r3, [r5, #0]
 802b920:	f7d6 f8b6 	bl	8001a90 <_close>
 802b924:	1c43      	adds	r3, r0, #1
 802b926:	d102      	bne.n	802b92e <_close_r+0x1a>
 802b928:	682b      	ldr	r3, [r5, #0]
 802b92a:	b103      	cbz	r3, 802b92e <_close_r+0x1a>
 802b92c:	6023      	str	r3, [r4, #0]
 802b92e:	bd38      	pop	{r3, r4, r5, pc}
 802b930:	2001434c 	.word	0x2001434c

0802b934 <_reclaim_reent>:
 802b934:	4b29      	ldr	r3, [pc, #164]	; (802b9dc <_reclaim_reent+0xa8>)
 802b936:	681b      	ldr	r3, [r3, #0]
 802b938:	4283      	cmp	r3, r0
 802b93a:	b570      	push	{r4, r5, r6, lr}
 802b93c:	4604      	mov	r4, r0
 802b93e:	d04b      	beq.n	802b9d8 <_reclaim_reent+0xa4>
 802b940:	69c3      	ldr	r3, [r0, #28]
 802b942:	b143      	cbz	r3, 802b956 <_reclaim_reent+0x22>
 802b944:	68db      	ldr	r3, [r3, #12]
 802b946:	2b00      	cmp	r3, #0
 802b948:	d144      	bne.n	802b9d4 <_reclaim_reent+0xa0>
 802b94a:	69e3      	ldr	r3, [r4, #28]
 802b94c:	6819      	ldr	r1, [r3, #0]
 802b94e:	b111      	cbz	r1, 802b956 <_reclaim_reent+0x22>
 802b950:	4620      	mov	r0, r4
 802b952:	f000 f939 	bl	802bbc8 <_free_r>
 802b956:	6961      	ldr	r1, [r4, #20]
 802b958:	b111      	cbz	r1, 802b960 <_reclaim_reent+0x2c>
 802b95a:	4620      	mov	r0, r4
 802b95c:	f000 f934 	bl	802bbc8 <_free_r>
 802b960:	69e1      	ldr	r1, [r4, #28]
 802b962:	b111      	cbz	r1, 802b96a <_reclaim_reent+0x36>
 802b964:	4620      	mov	r0, r4
 802b966:	f000 f92f 	bl	802bbc8 <_free_r>
 802b96a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b96c:	b111      	cbz	r1, 802b974 <_reclaim_reent+0x40>
 802b96e:	4620      	mov	r0, r4
 802b970:	f000 f92a 	bl	802bbc8 <_free_r>
 802b974:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b976:	b111      	cbz	r1, 802b97e <_reclaim_reent+0x4a>
 802b978:	4620      	mov	r0, r4
 802b97a:	f000 f925 	bl	802bbc8 <_free_r>
 802b97e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b980:	b111      	cbz	r1, 802b988 <_reclaim_reent+0x54>
 802b982:	4620      	mov	r0, r4
 802b984:	f000 f920 	bl	802bbc8 <_free_r>
 802b988:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b98a:	b111      	cbz	r1, 802b992 <_reclaim_reent+0x5e>
 802b98c:	4620      	mov	r0, r4
 802b98e:	f000 f91b 	bl	802bbc8 <_free_r>
 802b992:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b994:	b111      	cbz	r1, 802b99c <_reclaim_reent+0x68>
 802b996:	4620      	mov	r0, r4
 802b998:	f000 f916 	bl	802bbc8 <_free_r>
 802b99c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b99e:	b111      	cbz	r1, 802b9a6 <_reclaim_reent+0x72>
 802b9a0:	4620      	mov	r0, r4
 802b9a2:	f000 f911 	bl	802bbc8 <_free_r>
 802b9a6:	6a23      	ldr	r3, [r4, #32]
 802b9a8:	b1b3      	cbz	r3, 802b9d8 <_reclaim_reent+0xa4>
 802b9aa:	4620      	mov	r0, r4
 802b9ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b9b0:	4718      	bx	r3
 802b9b2:	5949      	ldr	r1, [r1, r5]
 802b9b4:	b941      	cbnz	r1, 802b9c8 <_reclaim_reent+0x94>
 802b9b6:	3504      	adds	r5, #4
 802b9b8:	69e3      	ldr	r3, [r4, #28]
 802b9ba:	2d80      	cmp	r5, #128	; 0x80
 802b9bc:	68d9      	ldr	r1, [r3, #12]
 802b9be:	d1f8      	bne.n	802b9b2 <_reclaim_reent+0x7e>
 802b9c0:	4620      	mov	r0, r4
 802b9c2:	f000 f901 	bl	802bbc8 <_free_r>
 802b9c6:	e7c0      	b.n	802b94a <_reclaim_reent+0x16>
 802b9c8:	680e      	ldr	r6, [r1, #0]
 802b9ca:	4620      	mov	r0, r4
 802b9cc:	f000 f8fc 	bl	802bbc8 <_free_r>
 802b9d0:	4631      	mov	r1, r6
 802b9d2:	e7ef      	b.n	802b9b4 <_reclaim_reent+0x80>
 802b9d4:	2500      	movs	r5, #0
 802b9d6:	e7ef      	b.n	802b9b8 <_reclaim_reent+0x84>
 802b9d8:	bd70      	pop	{r4, r5, r6, pc}
 802b9da:	bf00      	nop
 802b9dc:	20000178 	.word	0x20000178

0802b9e0 <_lseek_r>:
 802b9e0:	b538      	push	{r3, r4, r5, lr}
 802b9e2:	4d07      	ldr	r5, [pc, #28]	; (802ba00 <_lseek_r+0x20>)
 802b9e4:	4604      	mov	r4, r0
 802b9e6:	4608      	mov	r0, r1
 802b9e8:	4611      	mov	r1, r2
 802b9ea:	2200      	movs	r2, #0
 802b9ec:	602a      	str	r2, [r5, #0]
 802b9ee:	461a      	mov	r2, r3
 802b9f0:	f7d6 f85a 	bl	8001aa8 <_lseek>
 802b9f4:	1c43      	adds	r3, r0, #1
 802b9f6:	d102      	bne.n	802b9fe <_lseek_r+0x1e>
 802b9f8:	682b      	ldr	r3, [r5, #0]
 802b9fa:	b103      	cbz	r3, 802b9fe <_lseek_r+0x1e>
 802b9fc:	6023      	str	r3, [r4, #0]
 802b9fe:	bd38      	pop	{r3, r4, r5, pc}
 802ba00:	2001434c 	.word	0x2001434c

0802ba04 <_read_r>:
 802ba04:	b538      	push	{r3, r4, r5, lr}
 802ba06:	4d07      	ldr	r5, [pc, #28]	; (802ba24 <_read_r+0x20>)
 802ba08:	4604      	mov	r4, r0
 802ba0a:	4608      	mov	r0, r1
 802ba0c:	4611      	mov	r1, r2
 802ba0e:	2200      	movs	r2, #0
 802ba10:	602a      	str	r2, [r5, #0]
 802ba12:	461a      	mov	r2, r3
 802ba14:	f7d6 f820 	bl	8001a58 <_read>
 802ba18:	1c43      	adds	r3, r0, #1
 802ba1a:	d102      	bne.n	802ba22 <_read_r+0x1e>
 802ba1c:	682b      	ldr	r3, [r5, #0]
 802ba1e:	b103      	cbz	r3, 802ba22 <_read_r+0x1e>
 802ba20:	6023      	str	r3, [r4, #0]
 802ba22:	bd38      	pop	{r3, r4, r5, pc}
 802ba24:	2001434c 	.word	0x2001434c

0802ba28 <_kill_r>:
 802ba28:	b538      	push	{r3, r4, r5, lr}
 802ba2a:	4d07      	ldr	r5, [pc, #28]	; (802ba48 <_kill_r+0x20>)
 802ba2c:	2300      	movs	r3, #0
 802ba2e:	4604      	mov	r4, r0
 802ba30:	4608      	mov	r0, r1
 802ba32:	4611      	mov	r1, r2
 802ba34:	602b      	str	r3, [r5, #0]
 802ba36:	f7d6 f801 	bl	8001a3c <_kill>
 802ba3a:	1c43      	adds	r3, r0, #1
 802ba3c:	d102      	bne.n	802ba44 <_kill_r+0x1c>
 802ba3e:	682b      	ldr	r3, [r5, #0]
 802ba40:	b103      	cbz	r3, 802ba44 <_kill_r+0x1c>
 802ba42:	6023      	str	r3, [r4, #0]
 802ba44:	bd38      	pop	{r3, r4, r5, pc}
 802ba46:	bf00      	nop
 802ba48:	2001434c 	.word	0x2001434c

0802ba4c <_getpid_r>:
 802ba4c:	f7d5 bff4 	b.w	8001a38 <_getpid>

0802ba50 <_sbrk_r>:
 802ba50:	b538      	push	{r3, r4, r5, lr}
 802ba52:	4d06      	ldr	r5, [pc, #24]	; (802ba6c <_sbrk_r+0x1c>)
 802ba54:	2300      	movs	r3, #0
 802ba56:	4604      	mov	r4, r0
 802ba58:	4608      	mov	r0, r1
 802ba5a:	602b      	str	r3, [r5, #0]
 802ba5c:	f7d6 f826 	bl	8001aac <_sbrk>
 802ba60:	1c43      	adds	r3, r0, #1
 802ba62:	d102      	bne.n	802ba6a <_sbrk_r+0x1a>
 802ba64:	682b      	ldr	r3, [r5, #0]
 802ba66:	b103      	cbz	r3, 802ba6a <_sbrk_r+0x1a>
 802ba68:	6023      	str	r3, [r4, #0]
 802ba6a:	bd38      	pop	{r3, r4, r5, pc}
 802ba6c:	2001434c 	.word	0x2001434c

0802ba70 <_write_r>:
 802ba70:	b538      	push	{r3, r4, r5, lr}
 802ba72:	4d07      	ldr	r5, [pc, #28]	; (802ba90 <_write_r+0x20>)
 802ba74:	4604      	mov	r4, r0
 802ba76:	4608      	mov	r0, r1
 802ba78:	4611      	mov	r1, r2
 802ba7a:	2200      	movs	r2, #0
 802ba7c:	602a      	str	r2, [r5, #0]
 802ba7e:	461a      	mov	r2, r3
 802ba80:	f7d5 fff8 	bl	8001a74 <_write>
 802ba84:	1c43      	adds	r3, r0, #1
 802ba86:	d102      	bne.n	802ba8e <_write_r+0x1e>
 802ba88:	682b      	ldr	r3, [r5, #0]
 802ba8a:	b103      	cbz	r3, 802ba8e <_write_r+0x1e>
 802ba8c:	6023      	str	r3, [r4, #0]
 802ba8e:	bd38      	pop	{r3, r4, r5, pc}
 802ba90:	2001434c 	.word	0x2001434c

0802ba94 <__errno>:
 802ba94:	4b01      	ldr	r3, [pc, #4]	; (802ba9c <__errno+0x8>)
 802ba96:	6818      	ldr	r0, [r3, #0]
 802ba98:	4770      	bx	lr
 802ba9a:	bf00      	nop
 802ba9c:	20000178 	.word	0x20000178

0802baa0 <__libc_init_array>:
 802baa0:	b570      	push	{r4, r5, r6, lr}
 802baa2:	4d0d      	ldr	r5, [pc, #52]	; (802bad8 <__libc_init_array+0x38>)
 802baa4:	4c0d      	ldr	r4, [pc, #52]	; (802badc <__libc_init_array+0x3c>)
 802baa6:	1b64      	subs	r4, r4, r5
 802baa8:	10a4      	asrs	r4, r4, #2
 802baaa:	2600      	movs	r6, #0
 802baac:	42a6      	cmp	r6, r4
 802baae:	d109      	bne.n	802bac4 <__libc_init_array+0x24>
 802bab0:	4d0b      	ldr	r5, [pc, #44]	; (802bae0 <__libc_init_array+0x40>)
 802bab2:	4c0c      	ldr	r4, [pc, #48]	; (802bae4 <__libc_init_array+0x44>)
 802bab4:	f000 fd70 	bl	802c598 <_init>
 802bab8:	1b64      	subs	r4, r4, r5
 802baba:	10a4      	asrs	r4, r4, #2
 802babc:	2600      	movs	r6, #0
 802babe:	42a6      	cmp	r6, r4
 802bac0:	d105      	bne.n	802bace <__libc_init_array+0x2e>
 802bac2:	bd70      	pop	{r4, r5, r6, pc}
 802bac4:	f855 3b04 	ldr.w	r3, [r5], #4
 802bac8:	4798      	blx	r3
 802baca:	3601      	adds	r6, #1
 802bacc:	e7ee      	b.n	802baac <__libc_init_array+0xc>
 802bace:	f855 3b04 	ldr.w	r3, [r5], #4
 802bad2:	4798      	blx	r3
 802bad4:	3601      	adds	r6, #1
 802bad6:	e7f2      	b.n	802babe <__libc_init_array+0x1e>
 802bad8:	080cc954 	.word	0x080cc954
 802badc:	080cc954 	.word	0x080cc954
 802bae0:	080cc954 	.word	0x080cc954
 802bae4:	080cc968 	.word	0x080cc968

0802bae8 <__retarget_lock_init_recursive>:
 802bae8:	4770      	bx	lr

0802baea <__retarget_lock_acquire_recursive>:
 802baea:	4770      	bx	lr

0802baec <__retarget_lock_release_recursive>:
 802baec:	4770      	bx	lr

0802baee <memcpy>:
 802baee:	440a      	add	r2, r1
 802baf0:	4291      	cmp	r1, r2
 802baf2:	f100 33ff 	add.w	r3, r0, #4294967295
 802baf6:	d100      	bne.n	802bafa <memcpy+0xc>
 802baf8:	4770      	bx	lr
 802bafa:	b510      	push	{r4, lr}
 802bafc:	f811 4b01 	ldrb.w	r4, [r1], #1
 802bb00:	f803 4f01 	strb.w	r4, [r3, #1]!
 802bb04:	4291      	cmp	r1, r2
 802bb06:	d1f9      	bne.n	802bafc <memcpy+0xe>
 802bb08:	bd10      	pop	{r4, pc}
	...

0802bb0c <__register_exitproc>:
 802bb0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bb10:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802bbc4 <__register_exitproc+0xb8>
 802bb14:	4606      	mov	r6, r0
 802bb16:	f8d8 0000 	ldr.w	r0, [r8]
 802bb1a:	461f      	mov	r7, r3
 802bb1c:	460d      	mov	r5, r1
 802bb1e:	4691      	mov	r9, r2
 802bb20:	f7ff ffe3 	bl	802baea <__retarget_lock_acquire_recursive>
 802bb24:	4b23      	ldr	r3, [pc, #140]	; (802bbb4 <__register_exitproc+0xa8>)
 802bb26:	681c      	ldr	r4, [r3, #0]
 802bb28:	b934      	cbnz	r4, 802bb38 <__register_exitproc+0x2c>
 802bb2a:	4c23      	ldr	r4, [pc, #140]	; (802bbb8 <__register_exitproc+0xac>)
 802bb2c:	601c      	str	r4, [r3, #0]
 802bb2e:	4b23      	ldr	r3, [pc, #140]	; (802bbbc <__register_exitproc+0xb0>)
 802bb30:	b113      	cbz	r3, 802bb38 <__register_exitproc+0x2c>
 802bb32:	681b      	ldr	r3, [r3, #0]
 802bb34:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802bb38:	6863      	ldr	r3, [r4, #4]
 802bb3a:	2b1f      	cmp	r3, #31
 802bb3c:	dd07      	ble.n	802bb4e <__register_exitproc+0x42>
 802bb3e:	f8d8 0000 	ldr.w	r0, [r8]
 802bb42:	f7ff ffd3 	bl	802baec <__retarget_lock_release_recursive>
 802bb46:	f04f 30ff 	mov.w	r0, #4294967295
 802bb4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bb4e:	b32e      	cbz	r6, 802bb9c <__register_exitproc+0x90>
 802bb50:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802bb54:	b968      	cbnz	r0, 802bb72 <__register_exitproc+0x66>
 802bb56:	4b1a      	ldr	r3, [pc, #104]	; (802bbc0 <__register_exitproc+0xb4>)
 802bb58:	2b00      	cmp	r3, #0
 802bb5a:	d0f0      	beq.n	802bb3e <__register_exitproc+0x32>
 802bb5c:	f44f 7084 	mov.w	r0, #264	; 0x108
 802bb60:	f7ff fcbe 	bl	802b4e0 <malloc>
 802bb64:	2800      	cmp	r0, #0
 802bb66:	d0ea      	beq.n	802bb3e <__register_exitproc+0x32>
 802bb68:	2300      	movs	r3, #0
 802bb6a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802bb6e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802bb72:	6863      	ldr	r3, [r4, #4]
 802bb74:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802bb78:	2201      	movs	r2, #1
 802bb7a:	409a      	lsls	r2, r3
 802bb7c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802bb80:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802bb84:	4313      	orrs	r3, r2
 802bb86:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802bb8a:	2e02      	cmp	r6, #2
 802bb8c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802bb90:	bf02      	ittt	eq
 802bb92:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802bb96:	4313      	orreq	r3, r2
 802bb98:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802bb9c:	6863      	ldr	r3, [r4, #4]
 802bb9e:	f8d8 0000 	ldr.w	r0, [r8]
 802bba2:	1c5a      	adds	r2, r3, #1
 802bba4:	3302      	adds	r3, #2
 802bba6:	6062      	str	r2, [r4, #4]
 802bba8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802bbac:	f7ff ff9e 	bl	802baec <__retarget_lock_release_recursive>
 802bbb0:	2000      	movs	r0, #0
 802bbb2:	e7ca      	b.n	802bb4a <__register_exitproc+0x3e>
 802bbb4:	200143e0 	.word	0x200143e0
 802bbb8:	20014354 	.word	0x20014354
 802bbbc:	08043ea0 	.word	0x08043ea0
 802bbc0:	0802b4e1 	.word	0x0802b4e1
 802bbc4:	2000017c 	.word	0x2000017c

0802bbc8 <_free_r>:
 802bbc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802bbca:	2900      	cmp	r1, #0
 802bbcc:	d044      	beq.n	802bc58 <_free_r+0x90>
 802bbce:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802bbd2:	9001      	str	r0, [sp, #4]
 802bbd4:	2b00      	cmp	r3, #0
 802bbd6:	f1a1 0404 	sub.w	r4, r1, #4
 802bbda:	bfb8      	it	lt
 802bbdc:	18e4      	addlt	r4, r4, r3
 802bbde:	f7ff fd2f 	bl	802b640 <__malloc_lock>
 802bbe2:	4a1e      	ldr	r2, [pc, #120]	; (802bc5c <_free_r+0x94>)
 802bbe4:	9801      	ldr	r0, [sp, #4]
 802bbe6:	6813      	ldr	r3, [r2, #0]
 802bbe8:	b933      	cbnz	r3, 802bbf8 <_free_r+0x30>
 802bbea:	6063      	str	r3, [r4, #4]
 802bbec:	6014      	str	r4, [r2, #0]
 802bbee:	b003      	add	sp, #12
 802bbf0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802bbf4:	f7ff bd2a 	b.w	802b64c <__malloc_unlock>
 802bbf8:	42a3      	cmp	r3, r4
 802bbfa:	d908      	bls.n	802bc0e <_free_r+0x46>
 802bbfc:	6825      	ldr	r5, [r4, #0]
 802bbfe:	1961      	adds	r1, r4, r5
 802bc00:	428b      	cmp	r3, r1
 802bc02:	bf01      	itttt	eq
 802bc04:	6819      	ldreq	r1, [r3, #0]
 802bc06:	685b      	ldreq	r3, [r3, #4]
 802bc08:	1949      	addeq	r1, r1, r5
 802bc0a:	6021      	streq	r1, [r4, #0]
 802bc0c:	e7ed      	b.n	802bbea <_free_r+0x22>
 802bc0e:	461a      	mov	r2, r3
 802bc10:	685b      	ldr	r3, [r3, #4]
 802bc12:	b10b      	cbz	r3, 802bc18 <_free_r+0x50>
 802bc14:	42a3      	cmp	r3, r4
 802bc16:	d9fa      	bls.n	802bc0e <_free_r+0x46>
 802bc18:	6811      	ldr	r1, [r2, #0]
 802bc1a:	1855      	adds	r5, r2, r1
 802bc1c:	42a5      	cmp	r5, r4
 802bc1e:	d10b      	bne.n	802bc38 <_free_r+0x70>
 802bc20:	6824      	ldr	r4, [r4, #0]
 802bc22:	4421      	add	r1, r4
 802bc24:	1854      	adds	r4, r2, r1
 802bc26:	42a3      	cmp	r3, r4
 802bc28:	6011      	str	r1, [r2, #0]
 802bc2a:	d1e0      	bne.n	802bbee <_free_r+0x26>
 802bc2c:	681c      	ldr	r4, [r3, #0]
 802bc2e:	685b      	ldr	r3, [r3, #4]
 802bc30:	6053      	str	r3, [r2, #4]
 802bc32:	440c      	add	r4, r1
 802bc34:	6014      	str	r4, [r2, #0]
 802bc36:	e7da      	b.n	802bbee <_free_r+0x26>
 802bc38:	d902      	bls.n	802bc40 <_free_r+0x78>
 802bc3a:	230c      	movs	r3, #12
 802bc3c:	6003      	str	r3, [r0, #0]
 802bc3e:	e7d6      	b.n	802bbee <_free_r+0x26>
 802bc40:	6825      	ldr	r5, [r4, #0]
 802bc42:	1961      	adds	r1, r4, r5
 802bc44:	428b      	cmp	r3, r1
 802bc46:	bf04      	itt	eq
 802bc48:	6819      	ldreq	r1, [r3, #0]
 802bc4a:	685b      	ldreq	r3, [r3, #4]
 802bc4c:	6063      	str	r3, [r4, #4]
 802bc4e:	bf04      	itt	eq
 802bc50:	1949      	addeq	r1, r1, r5
 802bc52:	6021      	streq	r1, [r4, #0]
 802bc54:	6054      	str	r4, [r2, #4]
 802bc56:	e7ca      	b.n	802bbee <_free_r+0x26>
 802bc58:	b003      	add	sp, #12
 802bc5a:	bd30      	pop	{r4, r5, pc}
 802bc5c:	20014208 	.word	0x20014208

0802bc60 <__sfputc_r>:
 802bc60:	6893      	ldr	r3, [r2, #8]
 802bc62:	3b01      	subs	r3, #1
 802bc64:	2b00      	cmp	r3, #0
 802bc66:	b410      	push	{r4}
 802bc68:	6093      	str	r3, [r2, #8]
 802bc6a:	da08      	bge.n	802bc7e <__sfputc_r+0x1e>
 802bc6c:	6994      	ldr	r4, [r2, #24]
 802bc6e:	42a3      	cmp	r3, r4
 802bc70:	db01      	blt.n	802bc76 <__sfputc_r+0x16>
 802bc72:	290a      	cmp	r1, #10
 802bc74:	d103      	bne.n	802bc7e <__sfputc_r+0x1e>
 802bc76:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bc7a:	f000 bb73 	b.w	802c364 <__swbuf_r>
 802bc7e:	6813      	ldr	r3, [r2, #0]
 802bc80:	1c58      	adds	r0, r3, #1
 802bc82:	6010      	str	r0, [r2, #0]
 802bc84:	7019      	strb	r1, [r3, #0]
 802bc86:	4608      	mov	r0, r1
 802bc88:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bc8c:	4770      	bx	lr

0802bc8e <__sfputs_r>:
 802bc8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bc90:	4606      	mov	r6, r0
 802bc92:	460f      	mov	r7, r1
 802bc94:	4614      	mov	r4, r2
 802bc96:	18d5      	adds	r5, r2, r3
 802bc98:	42ac      	cmp	r4, r5
 802bc9a:	d101      	bne.n	802bca0 <__sfputs_r+0x12>
 802bc9c:	2000      	movs	r0, #0
 802bc9e:	e007      	b.n	802bcb0 <__sfputs_r+0x22>
 802bca0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bca4:	463a      	mov	r2, r7
 802bca6:	4630      	mov	r0, r6
 802bca8:	f7ff ffda 	bl	802bc60 <__sfputc_r>
 802bcac:	1c43      	adds	r3, r0, #1
 802bcae:	d1f3      	bne.n	802bc98 <__sfputs_r+0xa>
 802bcb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802bcb4 <_vfiprintf_r>:
 802bcb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bcb8:	460d      	mov	r5, r1
 802bcba:	b09d      	sub	sp, #116	; 0x74
 802bcbc:	4614      	mov	r4, r2
 802bcbe:	4698      	mov	r8, r3
 802bcc0:	4606      	mov	r6, r0
 802bcc2:	b118      	cbz	r0, 802bccc <_vfiprintf_r+0x18>
 802bcc4:	6a03      	ldr	r3, [r0, #32]
 802bcc6:	b90b      	cbnz	r3, 802bccc <_vfiprintf_r+0x18>
 802bcc8:	f7ff fd60 	bl	802b78c <__sinit>
 802bccc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bcce:	07d9      	lsls	r1, r3, #31
 802bcd0:	d405      	bmi.n	802bcde <_vfiprintf_r+0x2a>
 802bcd2:	89ab      	ldrh	r3, [r5, #12]
 802bcd4:	059a      	lsls	r2, r3, #22
 802bcd6:	d402      	bmi.n	802bcde <_vfiprintf_r+0x2a>
 802bcd8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bcda:	f7ff ff06 	bl	802baea <__retarget_lock_acquire_recursive>
 802bcde:	89ab      	ldrh	r3, [r5, #12]
 802bce0:	071b      	lsls	r3, r3, #28
 802bce2:	d501      	bpl.n	802bce8 <_vfiprintf_r+0x34>
 802bce4:	692b      	ldr	r3, [r5, #16]
 802bce6:	b99b      	cbnz	r3, 802bd10 <_vfiprintf_r+0x5c>
 802bce8:	4629      	mov	r1, r5
 802bcea:	4630      	mov	r0, r6
 802bcec:	f000 fb78 	bl	802c3e0 <__swsetup_r>
 802bcf0:	b170      	cbz	r0, 802bd10 <_vfiprintf_r+0x5c>
 802bcf2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bcf4:	07dc      	lsls	r4, r3, #31
 802bcf6:	d504      	bpl.n	802bd02 <_vfiprintf_r+0x4e>
 802bcf8:	f04f 30ff 	mov.w	r0, #4294967295
 802bcfc:	b01d      	add	sp, #116	; 0x74
 802bcfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bd02:	89ab      	ldrh	r3, [r5, #12]
 802bd04:	0598      	lsls	r0, r3, #22
 802bd06:	d4f7      	bmi.n	802bcf8 <_vfiprintf_r+0x44>
 802bd08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bd0a:	f7ff feef 	bl	802baec <__retarget_lock_release_recursive>
 802bd0e:	e7f3      	b.n	802bcf8 <_vfiprintf_r+0x44>
 802bd10:	2300      	movs	r3, #0
 802bd12:	9309      	str	r3, [sp, #36]	; 0x24
 802bd14:	2320      	movs	r3, #32
 802bd16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802bd1a:	f8cd 800c 	str.w	r8, [sp, #12]
 802bd1e:	2330      	movs	r3, #48	; 0x30
 802bd20:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bed4 <_vfiprintf_r+0x220>
 802bd24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802bd28:	f04f 0901 	mov.w	r9, #1
 802bd2c:	4623      	mov	r3, r4
 802bd2e:	469a      	mov	sl, r3
 802bd30:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bd34:	b10a      	cbz	r2, 802bd3a <_vfiprintf_r+0x86>
 802bd36:	2a25      	cmp	r2, #37	; 0x25
 802bd38:	d1f9      	bne.n	802bd2e <_vfiprintf_r+0x7a>
 802bd3a:	ebba 0b04 	subs.w	fp, sl, r4
 802bd3e:	d00b      	beq.n	802bd58 <_vfiprintf_r+0xa4>
 802bd40:	465b      	mov	r3, fp
 802bd42:	4622      	mov	r2, r4
 802bd44:	4629      	mov	r1, r5
 802bd46:	4630      	mov	r0, r6
 802bd48:	f7ff ffa1 	bl	802bc8e <__sfputs_r>
 802bd4c:	3001      	adds	r0, #1
 802bd4e:	f000 80a9 	beq.w	802bea4 <_vfiprintf_r+0x1f0>
 802bd52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bd54:	445a      	add	r2, fp
 802bd56:	9209      	str	r2, [sp, #36]	; 0x24
 802bd58:	f89a 3000 	ldrb.w	r3, [sl]
 802bd5c:	2b00      	cmp	r3, #0
 802bd5e:	f000 80a1 	beq.w	802bea4 <_vfiprintf_r+0x1f0>
 802bd62:	2300      	movs	r3, #0
 802bd64:	f04f 32ff 	mov.w	r2, #4294967295
 802bd68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802bd6c:	f10a 0a01 	add.w	sl, sl, #1
 802bd70:	9304      	str	r3, [sp, #16]
 802bd72:	9307      	str	r3, [sp, #28]
 802bd74:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802bd78:	931a      	str	r3, [sp, #104]	; 0x68
 802bd7a:	4654      	mov	r4, sl
 802bd7c:	2205      	movs	r2, #5
 802bd7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bd82:	4854      	ldr	r0, [pc, #336]	; (802bed4 <_vfiprintf_r+0x220>)
 802bd84:	f7d4 fa94 	bl	80002b0 <memchr>
 802bd88:	9a04      	ldr	r2, [sp, #16]
 802bd8a:	b9d8      	cbnz	r0, 802bdc4 <_vfiprintf_r+0x110>
 802bd8c:	06d1      	lsls	r1, r2, #27
 802bd8e:	bf44      	itt	mi
 802bd90:	2320      	movmi	r3, #32
 802bd92:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bd96:	0713      	lsls	r3, r2, #28
 802bd98:	bf44      	itt	mi
 802bd9a:	232b      	movmi	r3, #43	; 0x2b
 802bd9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bda0:	f89a 3000 	ldrb.w	r3, [sl]
 802bda4:	2b2a      	cmp	r3, #42	; 0x2a
 802bda6:	d015      	beq.n	802bdd4 <_vfiprintf_r+0x120>
 802bda8:	9a07      	ldr	r2, [sp, #28]
 802bdaa:	4654      	mov	r4, sl
 802bdac:	2000      	movs	r0, #0
 802bdae:	f04f 0c0a 	mov.w	ip, #10
 802bdb2:	4621      	mov	r1, r4
 802bdb4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802bdb8:	3b30      	subs	r3, #48	; 0x30
 802bdba:	2b09      	cmp	r3, #9
 802bdbc:	d94d      	bls.n	802be5a <_vfiprintf_r+0x1a6>
 802bdbe:	b1b0      	cbz	r0, 802bdee <_vfiprintf_r+0x13a>
 802bdc0:	9207      	str	r2, [sp, #28]
 802bdc2:	e014      	b.n	802bdee <_vfiprintf_r+0x13a>
 802bdc4:	eba0 0308 	sub.w	r3, r0, r8
 802bdc8:	fa09 f303 	lsl.w	r3, r9, r3
 802bdcc:	4313      	orrs	r3, r2
 802bdce:	9304      	str	r3, [sp, #16]
 802bdd0:	46a2      	mov	sl, r4
 802bdd2:	e7d2      	b.n	802bd7a <_vfiprintf_r+0xc6>
 802bdd4:	9b03      	ldr	r3, [sp, #12]
 802bdd6:	1d19      	adds	r1, r3, #4
 802bdd8:	681b      	ldr	r3, [r3, #0]
 802bdda:	9103      	str	r1, [sp, #12]
 802bddc:	2b00      	cmp	r3, #0
 802bdde:	bfbb      	ittet	lt
 802bde0:	425b      	neglt	r3, r3
 802bde2:	f042 0202 	orrlt.w	r2, r2, #2
 802bde6:	9307      	strge	r3, [sp, #28]
 802bde8:	9307      	strlt	r3, [sp, #28]
 802bdea:	bfb8      	it	lt
 802bdec:	9204      	strlt	r2, [sp, #16]
 802bdee:	7823      	ldrb	r3, [r4, #0]
 802bdf0:	2b2e      	cmp	r3, #46	; 0x2e
 802bdf2:	d10c      	bne.n	802be0e <_vfiprintf_r+0x15a>
 802bdf4:	7863      	ldrb	r3, [r4, #1]
 802bdf6:	2b2a      	cmp	r3, #42	; 0x2a
 802bdf8:	d134      	bne.n	802be64 <_vfiprintf_r+0x1b0>
 802bdfa:	9b03      	ldr	r3, [sp, #12]
 802bdfc:	1d1a      	adds	r2, r3, #4
 802bdfe:	681b      	ldr	r3, [r3, #0]
 802be00:	9203      	str	r2, [sp, #12]
 802be02:	2b00      	cmp	r3, #0
 802be04:	bfb8      	it	lt
 802be06:	f04f 33ff 	movlt.w	r3, #4294967295
 802be0a:	3402      	adds	r4, #2
 802be0c:	9305      	str	r3, [sp, #20]
 802be0e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bee4 <_vfiprintf_r+0x230>
 802be12:	7821      	ldrb	r1, [r4, #0]
 802be14:	2203      	movs	r2, #3
 802be16:	4650      	mov	r0, sl
 802be18:	f7d4 fa4a 	bl	80002b0 <memchr>
 802be1c:	b138      	cbz	r0, 802be2e <_vfiprintf_r+0x17a>
 802be1e:	9b04      	ldr	r3, [sp, #16]
 802be20:	eba0 000a 	sub.w	r0, r0, sl
 802be24:	2240      	movs	r2, #64	; 0x40
 802be26:	4082      	lsls	r2, r0
 802be28:	4313      	orrs	r3, r2
 802be2a:	3401      	adds	r4, #1
 802be2c:	9304      	str	r3, [sp, #16]
 802be2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802be32:	4829      	ldr	r0, [pc, #164]	; (802bed8 <_vfiprintf_r+0x224>)
 802be34:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802be38:	2206      	movs	r2, #6
 802be3a:	f7d4 fa39 	bl	80002b0 <memchr>
 802be3e:	2800      	cmp	r0, #0
 802be40:	d03f      	beq.n	802bec2 <_vfiprintf_r+0x20e>
 802be42:	4b26      	ldr	r3, [pc, #152]	; (802bedc <_vfiprintf_r+0x228>)
 802be44:	bb1b      	cbnz	r3, 802be8e <_vfiprintf_r+0x1da>
 802be46:	9b03      	ldr	r3, [sp, #12]
 802be48:	3307      	adds	r3, #7
 802be4a:	f023 0307 	bic.w	r3, r3, #7
 802be4e:	3308      	adds	r3, #8
 802be50:	9303      	str	r3, [sp, #12]
 802be52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802be54:	443b      	add	r3, r7
 802be56:	9309      	str	r3, [sp, #36]	; 0x24
 802be58:	e768      	b.n	802bd2c <_vfiprintf_r+0x78>
 802be5a:	fb0c 3202 	mla	r2, ip, r2, r3
 802be5e:	460c      	mov	r4, r1
 802be60:	2001      	movs	r0, #1
 802be62:	e7a6      	b.n	802bdb2 <_vfiprintf_r+0xfe>
 802be64:	2300      	movs	r3, #0
 802be66:	3401      	adds	r4, #1
 802be68:	9305      	str	r3, [sp, #20]
 802be6a:	4619      	mov	r1, r3
 802be6c:	f04f 0c0a 	mov.w	ip, #10
 802be70:	4620      	mov	r0, r4
 802be72:	f810 2b01 	ldrb.w	r2, [r0], #1
 802be76:	3a30      	subs	r2, #48	; 0x30
 802be78:	2a09      	cmp	r2, #9
 802be7a:	d903      	bls.n	802be84 <_vfiprintf_r+0x1d0>
 802be7c:	2b00      	cmp	r3, #0
 802be7e:	d0c6      	beq.n	802be0e <_vfiprintf_r+0x15a>
 802be80:	9105      	str	r1, [sp, #20]
 802be82:	e7c4      	b.n	802be0e <_vfiprintf_r+0x15a>
 802be84:	fb0c 2101 	mla	r1, ip, r1, r2
 802be88:	4604      	mov	r4, r0
 802be8a:	2301      	movs	r3, #1
 802be8c:	e7f0      	b.n	802be70 <_vfiprintf_r+0x1bc>
 802be8e:	ab03      	add	r3, sp, #12
 802be90:	9300      	str	r3, [sp, #0]
 802be92:	462a      	mov	r2, r5
 802be94:	4b12      	ldr	r3, [pc, #72]	; (802bee0 <_vfiprintf_r+0x22c>)
 802be96:	a904      	add	r1, sp, #16
 802be98:	4630      	mov	r0, r6
 802be9a:	f3af 8000 	nop.w
 802be9e:	4607      	mov	r7, r0
 802bea0:	1c78      	adds	r0, r7, #1
 802bea2:	d1d6      	bne.n	802be52 <_vfiprintf_r+0x19e>
 802bea4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bea6:	07d9      	lsls	r1, r3, #31
 802bea8:	d405      	bmi.n	802beb6 <_vfiprintf_r+0x202>
 802beaa:	89ab      	ldrh	r3, [r5, #12]
 802beac:	059a      	lsls	r2, r3, #22
 802beae:	d402      	bmi.n	802beb6 <_vfiprintf_r+0x202>
 802beb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802beb2:	f7ff fe1b 	bl	802baec <__retarget_lock_release_recursive>
 802beb6:	89ab      	ldrh	r3, [r5, #12]
 802beb8:	065b      	lsls	r3, r3, #25
 802beba:	f53f af1d 	bmi.w	802bcf8 <_vfiprintf_r+0x44>
 802bebe:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bec0:	e71c      	b.n	802bcfc <_vfiprintf_r+0x48>
 802bec2:	ab03      	add	r3, sp, #12
 802bec4:	9300      	str	r3, [sp, #0]
 802bec6:	462a      	mov	r2, r5
 802bec8:	4b05      	ldr	r3, [pc, #20]	; (802bee0 <_vfiprintf_r+0x22c>)
 802beca:	a904      	add	r1, sp, #16
 802becc:	4630      	mov	r0, r6
 802bece:	f000 f879 	bl	802bfc4 <_printf_i>
 802bed2:	e7e4      	b.n	802be9e <_vfiprintf_r+0x1ea>
 802bed4:	08043ea4 	.word	0x08043ea4
 802bed8:	08043eae 	.word	0x08043eae
 802bedc:	00000000 	.word	0x00000000
 802bee0:	0802bc8f 	.word	0x0802bc8f
 802bee4:	08043eaa 	.word	0x08043eaa

0802bee8 <_printf_common>:
 802bee8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802beec:	4616      	mov	r6, r2
 802beee:	4699      	mov	r9, r3
 802bef0:	688a      	ldr	r2, [r1, #8]
 802bef2:	690b      	ldr	r3, [r1, #16]
 802bef4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bef8:	4293      	cmp	r3, r2
 802befa:	bfb8      	it	lt
 802befc:	4613      	movlt	r3, r2
 802befe:	6033      	str	r3, [r6, #0]
 802bf00:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bf04:	4607      	mov	r7, r0
 802bf06:	460c      	mov	r4, r1
 802bf08:	b10a      	cbz	r2, 802bf0e <_printf_common+0x26>
 802bf0a:	3301      	adds	r3, #1
 802bf0c:	6033      	str	r3, [r6, #0]
 802bf0e:	6823      	ldr	r3, [r4, #0]
 802bf10:	0699      	lsls	r1, r3, #26
 802bf12:	bf42      	ittt	mi
 802bf14:	6833      	ldrmi	r3, [r6, #0]
 802bf16:	3302      	addmi	r3, #2
 802bf18:	6033      	strmi	r3, [r6, #0]
 802bf1a:	6825      	ldr	r5, [r4, #0]
 802bf1c:	f015 0506 	ands.w	r5, r5, #6
 802bf20:	d106      	bne.n	802bf30 <_printf_common+0x48>
 802bf22:	f104 0a19 	add.w	sl, r4, #25
 802bf26:	68e3      	ldr	r3, [r4, #12]
 802bf28:	6832      	ldr	r2, [r6, #0]
 802bf2a:	1a9b      	subs	r3, r3, r2
 802bf2c:	42ab      	cmp	r3, r5
 802bf2e:	dc26      	bgt.n	802bf7e <_printf_common+0x96>
 802bf30:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bf34:	1e13      	subs	r3, r2, #0
 802bf36:	6822      	ldr	r2, [r4, #0]
 802bf38:	bf18      	it	ne
 802bf3a:	2301      	movne	r3, #1
 802bf3c:	0692      	lsls	r2, r2, #26
 802bf3e:	d42b      	bmi.n	802bf98 <_printf_common+0xb0>
 802bf40:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802bf44:	4649      	mov	r1, r9
 802bf46:	4638      	mov	r0, r7
 802bf48:	47c0      	blx	r8
 802bf4a:	3001      	adds	r0, #1
 802bf4c:	d01e      	beq.n	802bf8c <_printf_common+0xa4>
 802bf4e:	6823      	ldr	r3, [r4, #0]
 802bf50:	6922      	ldr	r2, [r4, #16]
 802bf52:	f003 0306 	and.w	r3, r3, #6
 802bf56:	2b04      	cmp	r3, #4
 802bf58:	bf02      	ittt	eq
 802bf5a:	68e5      	ldreq	r5, [r4, #12]
 802bf5c:	6833      	ldreq	r3, [r6, #0]
 802bf5e:	1aed      	subeq	r5, r5, r3
 802bf60:	68a3      	ldr	r3, [r4, #8]
 802bf62:	bf0c      	ite	eq
 802bf64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802bf68:	2500      	movne	r5, #0
 802bf6a:	4293      	cmp	r3, r2
 802bf6c:	bfc4      	itt	gt
 802bf6e:	1a9b      	subgt	r3, r3, r2
 802bf70:	18ed      	addgt	r5, r5, r3
 802bf72:	2600      	movs	r6, #0
 802bf74:	341a      	adds	r4, #26
 802bf76:	42b5      	cmp	r5, r6
 802bf78:	d11a      	bne.n	802bfb0 <_printf_common+0xc8>
 802bf7a:	2000      	movs	r0, #0
 802bf7c:	e008      	b.n	802bf90 <_printf_common+0xa8>
 802bf7e:	2301      	movs	r3, #1
 802bf80:	4652      	mov	r2, sl
 802bf82:	4649      	mov	r1, r9
 802bf84:	4638      	mov	r0, r7
 802bf86:	47c0      	blx	r8
 802bf88:	3001      	adds	r0, #1
 802bf8a:	d103      	bne.n	802bf94 <_printf_common+0xac>
 802bf8c:	f04f 30ff 	mov.w	r0, #4294967295
 802bf90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bf94:	3501      	adds	r5, #1
 802bf96:	e7c6      	b.n	802bf26 <_printf_common+0x3e>
 802bf98:	18e1      	adds	r1, r4, r3
 802bf9a:	1c5a      	adds	r2, r3, #1
 802bf9c:	2030      	movs	r0, #48	; 0x30
 802bf9e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802bfa2:	4422      	add	r2, r4
 802bfa4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802bfa8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802bfac:	3302      	adds	r3, #2
 802bfae:	e7c7      	b.n	802bf40 <_printf_common+0x58>
 802bfb0:	2301      	movs	r3, #1
 802bfb2:	4622      	mov	r2, r4
 802bfb4:	4649      	mov	r1, r9
 802bfb6:	4638      	mov	r0, r7
 802bfb8:	47c0      	blx	r8
 802bfba:	3001      	adds	r0, #1
 802bfbc:	d0e6      	beq.n	802bf8c <_printf_common+0xa4>
 802bfbe:	3601      	adds	r6, #1
 802bfc0:	e7d9      	b.n	802bf76 <_printf_common+0x8e>
	...

0802bfc4 <_printf_i>:
 802bfc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802bfc8:	7e0f      	ldrb	r7, [r1, #24]
 802bfca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802bfcc:	2f78      	cmp	r7, #120	; 0x78
 802bfce:	4691      	mov	r9, r2
 802bfd0:	4680      	mov	r8, r0
 802bfd2:	460c      	mov	r4, r1
 802bfd4:	469a      	mov	sl, r3
 802bfd6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802bfda:	d807      	bhi.n	802bfec <_printf_i+0x28>
 802bfdc:	2f62      	cmp	r7, #98	; 0x62
 802bfde:	d80a      	bhi.n	802bff6 <_printf_i+0x32>
 802bfe0:	2f00      	cmp	r7, #0
 802bfe2:	f000 80d4 	beq.w	802c18e <_printf_i+0x1ca>
 802bfe6:	2f58      	cmp	r7, #88	; 0x58
 802bfe8:	f000 80c0 	beq.w	802c16c <_printf_i+0x1a8>
 802bfec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bff0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802bff4:	e03a      	b.n	802c06c <_printf_i+0xa8>
 802bff6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802bffa:	2b15      	cmp	r3, #21
 802bffc:	d8f6      	bhi.n	802bfec <_printf_i+0x28>
 802bffe:	a101      	add	r1, pc, #4	; (adr r1, 802c004 <_printf_i+0x40>)
 802c000:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c004:	0802c05d 	.word	0x0802c05d
 802c008:	0802c071 	.word	0x0802c071
 802c00c:	0802bfed 	.word	0x0802bfed
 802c010:	0802bfed 	.word	0x0802bfed
 802c014:	0802bfed 	.word	0x0802bfed
 802c018:	0802bfed 	.word	0x0802bfed
 802c01c:	0802c071 	.word	0x0802c071
 802c020:	0802bfed 	.word	0x0802bfed
 802c024:	0802bfed 	.word	0x0802bfed
 802c028:	0802bfed 	.word	0x0802bfed
 802c02c:	0802bfed 	.word	0x0802bfed
 802c030:	0802c175 	.word	0x0802c175
 802c034:	0802c09d 	.word	0x0802c09d
 802c038:	0802c12f 	.word	0x0802c12f
 802c03c:	0802bfed 	.word	0x0802bfed
 802c040:	0802bfed 	.word	0x0802bfed
 802c044:	0802c197 	.word	0x0802c197
 802c048:	0802bfed 	.word	0x0802bfed
 802c04c:	0802c09d 	.word	0x0802c09d
 802c050:	0802bfed 	.word	0x0802bfed
 802c054:	0802bfed 	.word	0x0802bfed
 802c058:	0802c137 	.word	0x0802c137
 802c05c:	682b      	ldr	r3, [r5, #0]
 802c05e:	1d1a      	adds	r2, r3, #4
 802c060:	681b      	ldr	r3, [r3, #0]
 802c062:	602a      	str	r2, [r5, #0]
 802c064:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c068:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c06c:	2301      	movs	r3, #1
 802c06e:	e09f      	b.n	802c1b0 <_printf_i+0x1ec>
 802c070:	6820      	ldr	r0, [r4, #0]
 802c072:	682b      	ldr	r3, [r5, #0]
 802c074:	0607      	lsls	r7, r0, #24
 802c076:	f103 0104 	add.w	r1, r3, #4
 802c07a:	6029      	str	r1, [r5, #0]
 802c07c:	d501      	bpl.n	802c082 <_printf_i+0xbe>
 802c07e:	681e      	ldr	r6, [r3, #0]
 802c080:	e003      	b.n	802c08a <_printf_i+0xc6>
 802c082:	0646      	lsls	r6, r0, #25
 802c084:	d5fb      	bpl.n	802c07e <_printf_i+0xba>
 802c086:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c08a:	2e00      	cmp	r6, #0
 802c08c:	da03      	bge.n	802c096 <_printf_i+0xd2>
 802c08e:	232d      	movs	r3, #45	; 0x2d
 802c090:	4276      	negs	r6, r6
 802c092:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c096:	485a      	ldr	r0, [pc, #360]	; (802c200 <_printf_i+0x23c>)
 802c098:	230a      	movs	r3, #10
 802c09a:	e012      	b.n	802c0c2 <_printf_i+0xfe>
 802c09c:	682b      	ldr	r3, [r5, #0]
 802c09e:	6820      	ldr	r0, [r4, #0]
 802c0a0:	1d19      	adds	r1, r3, #4
 802c0a2:	6029      	str	r1, [r5, #0]
 802c0a4:	0605      	lsls	r5, r0, #24
 802c0a6:	d501      	bpl.n	802c0ac <_printf_i+0xe8>
 802c0a8:	681e      	ldr	r6, [r3, #0]
 802c0aa:	e002      	b.n	802c0b2 <_printf_i+0xee>
 802c0ac:	0641      	lsls	r1, r0, #25
 802c0ae:	d5fb      	bpl.n	802c0a8 <_printf_i+0xe4>
 802c0b0:	881e      	ldrh	r6, [r3, #0]
 802c0b2:	4853      	ldr	r0, [pc, #332]	; (802c200 <_printf_i+0x23c>)
 802c0b4:	2f6f      	cmp	r7, #111	; 0x6f
 802c0b6:	bf0c      	ite	eq
 802c0b8:	2308      	moveq	r3, #8
 802c0ba:	230a      	movne	r3, #10
 802c0bc:	2100      	movs	r1, #0
 802c0be:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c0c2:	6865      	ldr	r5, [r4, #4]
 802c0c4:	60a5      	str	r5, [r4, #8]
 802c0c6:	2d00      	cmp	r5, #0
 802c0c8:	bfa2      	ittt	ge
 802c0ca:	6821      	ldrge	r1, [r4, #0]
 802c0cc:	f021 0104 	bicge.w	r1, r1, #4
 802c0d0:	6021      	strge	r1, [r4, #0]
 802c0d2:	b90e      	cbnz	r6, 802c0d8 <_printf_i+0x114>
 802c0d4:	2d00      	cmp	r5, #0
 802c0d6:	d04b      	beq.n	802c170 <_printf_i+0x1ac>
 802c0d8:	4615      	mov	r5, r2
 802c0da:	fbb6 f1f3 	udiv	r1, r6, r3
 802c0de:	fb03 6711 	mls	r7, r3, r1, r6
 802c0e2:	5dc7      	ldrb	r7, [r0, r7]
 802c0e4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c0e8:	4637      	mov	r7, r6
 802c0ea:	42bb      	cmp	r3, r7
 802c0ec:	460e      	mov	r6, r1
 802c0ee:	d9f4      	bls.n	802c0da <_printf_i+0x116>
 802c0f0:	2b08      	cmp	r3, #8
 802c0f2:	d10b      	bne.n	802c10c <_printf_i+0x148>
 802c0f4:	6823      	ldr	r3, [r4, #0]
 802c0f6:	07de      	lsls	r6, r3, #31
 802c0f8:	d508      	bpl.n	802c10c <_printf_i+0x148>
 802c0fa:	6923      	ldr	r3, [r4, #16]
 802c0fc:	6861      	ldr	r1, [r4, #4]
 802c0fe:	4299      	cmp	r1, r3
 802c100:	bfde      	ittt	le
 802c102:	2330      	movle	r3, #48	; 0x30
 802c104:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c108:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c10c:	1b52      	subs	r2, r2, r5
 802c10e:	6122      	str	r2, [r4, #16]
 802c110:	f8cd a000 	str.w	sl, [sp]
 802c114:	464b      	mov	r3, r9
 802c116:	aa03      	add	r2, sp, #12
 802c118:	4621      	mov	r1, r4
 802c11a:	4640      	mov	r0, r8
 802c11c:	f7ff fee4 	bl	802bee8 <_printf_common>
 802c120:	3001      	adds	r0, #1
 802c122:	d14a      	bne.n	802c1ba <_printf_i+0x1f6>
 802c124:	f04f 30ff 	mov.w	r0, #4294967295
 802c128:	b004      	add	sp, #16
 802c12a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c12e:	6823      	ldr	r3, [r4, #0]
 802c130:	f043 0320 	orr.w	r3, r3, #32
 802c134:	6023      	str	r3, [r4, #0]
 802c136:	4833      	ldr	r0, [pc, #204]	; (802c204 <_printf_i+0x240>)
 802c138:	2778      	movs	r7, #120	; 0x78
 802c13a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c13e:	6823      	ldr	r3, [r4, #0]
 802c140:	6829      	ldr	r1, [r5, #0]
 802c142:	061f      	lsls	r7, r3, #24
 802c144:	f851 6b04 	ldr.w	r6, [r1], #4
 802c148:	d402      	bmi.n	802c150 <_printf_i+0x18c>
 802c14a:	065f      	lsls	r7, r3, #25
 802c14c:	bf48      	it	mi
 802c14e:	b2b6      	uxthmi	r6, r6
 802c150:	07df      	lsls	r7, r3, #31
 802c152:	bf48      	it	mi
 802c154:	f043 0320 	orrmi.w	r3, r3, #32
 802c158:	6029      	str	r1, [r5, #0]
 802c15a:	bf48      	it	mi
 802c15c:	6023      	strmi	r3, [r4, #0]
 802c15e:	b91e      	cbnz	r6, 802c168 <_printf_i+0x1a4>
 802c160:	6823      	ldr	r3, [r4, #0]
 802c162:	f023 0320 	bic.w	r3, r3, #32
 802c166:	6023      	str	r3, [r4, #0]
 802c168:	2310      	movs	r3, #16
 802c16a:	e7a7      	b.n	802c0bc <_printf_i+0xf8>
 802c16c:	4824      	ldr	r0, [pc, #144]	; (802c200 <_printf_i+0x23c>)
 802c16e:	e7e4      	b.n	802c13a <_printf_i+0x176>
 802c170:	4615      	mov	r5, r2
 802c172:	e7bd      	b.n	802c0f0 <_printf_i+0x12c>
 802c174:	682b      	ldr	r3, [r5, #0]
 802c176:	6826      	ldr	r6, [r4, #0]
 802c178:	6961      	ldr	r1, [r4, #20]
 802c17a:	1d18      	adds	r0, r3, #4
 802c17c:	6028      	str	r0, [r5, #0]
 802c17e:	0635      	lsls	r5, r6, #24
 802c180:	681b      	ldr	r3, [r3, #0]
 802c182:	d501      	bpl.n	802c188 <_printf_i+0x1c4>
 802c184:	6019      	str	r1, [r3, #0]
 802c186:	e002      	b.n	802c18e <_printf_i+0x1ca>
 802c188:	0670      	lsls	r0, r6, #25
 802c18a:	d5fb      	bpl.n	802c184 <_printf_i+0x1c0>
 802c18c:	8019      	strh	r1, [r3, #0]
 802c18e:	2300      	movs	r3, #0
 802c190:	6123      	str	r3, [r4, #16]
 802c192:	4615      	mov	r5, r2
 802c194:	e7bc      	b.n	802c110 <_printf_i+0x14c>
 802c196:	682b      	ldr	r3, [r5, #0]
 802c198:	1d1a      	adds	r2, r3, #4
 802c19a:	602a      	str	r2, [r5, #0]
 802c19c:	681d      	ldr	r5, [r3, #0]
 802c19e:	6862      	ldr	r2, [r4, #4]
 802c1a0:	2100      	movs	r1, #0
 802c1a2:	4628      	mov	r0, r5
 802c1a4:	f7d4 f884 	bl	80002b0 <memchr>
 802c1a8:	b108      	cbz	r0, 802c1ae <_printf_i+0x1ea>
 802c1aa:	1b40      	subs	r0, r0, r5
 802c1ac:	6060      	str	r0, [r4, #4]
 802c1ae:	6863      	ldr	r3, [r4, #4]
 802c1b0:	6123      	str	r3, [r4, #16]
 802c1b2:	2300      	movs	r3, #0
 802c1b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c1b8:	e7aa      	b.n	802c110 <_printf_i+0x14c>
 802c1ba:	6923      	ldr	r3, [r4, #16]
 802c1bc:	462a      	mov	r2, r5
 802c1be:	4649      	mov	r1, r9
 802c1c0:	4640      	mov	r0, r8
 802c1c2:	47d0      	blx	sl
 802c1c4:	3001      	adds	r0, #1
 802c1c6:	d0ad      	beq.n	802c124 <_printf_i+0x160>
 802c1c8:	6823      	ldr	r3, [r4, #0]
 802c1ca:	079b      	lsls	r3, r3, #30
 802c1cc:	d413      	bmi.n	802c1f6 <_printf_i+0x232>
 802c1ce:	68e0      	ldr	r0, [r4, #12]
 802c1d0:	9b03      	ldr	r3, [sp, #12]
 802c1d2:	4298      	cmp	r0, r3
 802c1d4:	bfb8      	it	lt
 802c1d6:	4618      	movlt	r0, r3
 802c1d8:	e7a6      	b.n	802c128 <_printf_i+0x164>
 802c1da:	2301      	movs	r3, #1
 802c1dc:	4632      	mov	r2, r6
 802c1de:	4649      	mov	r1, r9
 802c1e0:	4640      	mov	r0, r8
 802c1e2:	47d0      	blx	sl
 802c1e4:	3001      	adds	r0, #1
 802c1e6:	d09d      	beq.n	802c124 <_printf_i+0x160>
 802c1e8:	3501      	adds	r5, #1
 802c1ea:	68e3      	ldr	r3, [r4, #12]
 802c1ec:	9903      	ldr	r1, [sp, #12]
 802c1ee:	1a5b      	subs	r3, r3, r1
 802c1f0:	42ab      	cmp	r3, r5
 802c1f2:	dcf2      	bgt.n	802c1da <_printf_i+0x216>
 802c1f4:	e7eb      	b.n	802c1ce <_printf_i+0x20a>
 802c1f6:	2500      	movs	r5, #0
 802c1f8:	f104 0619 	add.w	r6, r4, #25
 802c1fc:	e7f5      	b.n	802c1ea <_printf_i+0x226>
 802c1fe:	bf00      	nop
 802c200:	08043eb5 	.word	0x08043eb5
 802c204:	08043ec6 	.word	0x08043ec6

0802c208 <__sflush_r>:
 802c208:	898a      	ldrh	r2, [r1, #12]
 802c20a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c20e:	4605      	mov	r5, r0
 802c210:	0710      	lsls	r0, r2, #28
 802c212:	460c      	mov	r4, r1
 802c214:	d458      	bmi.n	802c2c8 <__sflush_r+0xc0>
 802c216:	684b      	ldr	r3, [r1, #4]
 802c218:	2b00      	cmp	r3, #0
 802c21a:	dc05      	bgt.n	802c228 <__sflush_r+0x20>
 802c21c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c21e:	2b00      	cmp	r3, #0
 802c220:	dc02      	bgt.n	802c228 <__sflush_r+0x20>
 802c222:	2000      	movs	r0, #0
 802c224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c228:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c22a:	2e00      	cmp	r6, #0
 802c22c:	d0f9      	beq.n	802c222 <__sflush_r+0x1a>
 802c22e:	2300      	movs	r3, #0
 802c230:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c234:	682f      	ldr	r7, [r5, #0]
 802c236:	6a21      	ldr	r1, [r4, #32]
 802c238:	602b      	str	r3, [r5, #0]
 802c23a:	d032      	beq.n	802c2a2 <__sflush_r+0x9a>
 802c23c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c23e:	89a3      	ldrh	r3, [r4, #12]
 802c240:	075a      	lsls	r2, r3, #29
 802c242:	d505      	bpl.n	802c250 <__sflush_r+0x48>
 802c244:	6863      	ldr	r3, [r4, #4]
 802c246:	1ac0      	subs	r0, r0, r3
 802c248:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c24a:	b10b      	cbz	r3, 802c250 <__sflush_r+0x48>
 802c24c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c24e:	1ac0      	subs	r0, r0, r3
 802c250:	2300      	movs	r3, #0
 802c252:	4602      	mov	r2, r0
 802c254:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c256:	6a21      	ldr	r1, [r4, #32]
 802c258:	4628      	mov	r0, r5
 802c25a:	47b0      	blx	r6
 802c25c:	1c43      	adds	r3, r0, #1
 802c25e:	89a3      	ldrh	r3, [r4, #12]
 802c260:	d106      	bne.n	802c270 <__sflush_r+0x68>
 802c262:	6829      	ldr	r1, [r5, #0]
 802c264:	291d      	cmp	r1, #29
 802c266:	d82b      	bhi.n	802c2c0 <__sflush_r+0xb8>
 802c268:	4a29      	ldr	r2, [pc, #164]	; (802c310 <__sflush_r+0x108>)
 802c26a:	410a      	asrs	r2, r1
 802c26c:	07d6      	lsls	r6, r2, #31
 802c26e:	d427      	bmi.n	802c2c0 <__sflush_r+0xb8>
 802c270:	2200      	movs	r2, #0
 802c272:	6062      	str	r2, [r4, #4]
 802c274:	04d9      	lsls	r1, r3, #19
 802c276:	6922      	ldr	r2, [r4, #16]
 802c278:	6022      	str	r2, [r4, #0]
 802c27a:	d504      	bpl.n	802c286 <__sflush_r+0x7e>
 802c27c:	1c42      	adds	r2, r0, #1
 802c27e:	d101      	bne.n	802c284 <__sflush_r+0x7c>
 802c280:	682b      	ldr	r3, [r5, #0]
 802c282:	b903      	cbnz	r3, 802c286 <__sflush_r+0x7e>
 802c284:	6560      	str	r0, [r4, #84]	; 0x54
 802c286:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c288:	602f      	str	r7, [r5, #0]
 802c28a:	2900      	cmp	r1, #0
 802c28c:	d0c9      	beq.n	802c222 <__sflush_r+0x1a>
 802c28e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c292:	4299      	cmp	r1, r3
 802c294:	d002      	beq.n	802c29c <__sflush_r+0x94>
 802c296:	4628      	mov	r0, r5
 802c298:	f7ff fc96 	bl	802bbc8 <_free_r>
 802c29c:	2000      	movs	r0, #0
 802c29e:	6360      	str	r0, [r4, #52]	; 0x34
 802c2a0:	e7c0      	b.n	802c224 <__sflush_r+0x1c>
 802c2a2:	2301      	movs	r3, #1
 802c2a4:	4628      	mov	r0, r5
 802c2a6:	47b0      	blx	r6
 802c2a8:	1c41      	adds	r1, r0, #1
 802c2aa:	d1c8      	bne.n	802c23e <__sflush_r+0x36>
 802c2ac:	682b      	ldr	r3, [r5, #0]
 802c2ae:	2b00      	cmp	r3, #0
 802c2b0:	d0c5      	beq.n	802c23e <__sflush_r+0x36>
 802c2b2:	2b1d      	cmp	r3, #29
 802c2b4:	d001      	beq.n	802c2ba <__sflush_r+0xb2>
 802c2b6:	2b16      	cmp	r3, #22
 802c2b8:	d101      	bne.n	802c2be <__sflush_r+0xb6>
 802c2ba:	602f      	str	r7, [r5, #0]
 802c2bc:	e7b1      	b.n	802c222 <__sflush_r+0x1a>
 802c2be:	89a3      	ldrh	r3, [r4, #12]
 802c2c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c2c4:	81a3      	strh	r3, [r4, #12]
 802c2c6:	e7ad      	b.n	802c224 <__sflush_r+0x1c>
 802c2c8:	690f      	ldr	r7, [r1, #16]
 802c2ca:	2f00      	cmp	r7, #0
 802c2cc:	d0a9      	beq.n	802c222 <__sflush_r+0x1a>
 802c2ce:	0793      	lsls	r3, r2, #30
 802c2d0:	680e      	ldr	r6, [r1, #0]
 802c2d2:	bf08      	it	eq
 802c2d4:	694b      	ldreq	r3, [r1, #20]
 802c2d6:	600f      	str	r7, [r1, #0]
 802c2d8:	bf18      	it	ne
 802c2da:	2300      	movne	r3, #0
 802c2dc:	eba6 0807 	sub.w	r8, r6, r7
 802c2e0:	608b      	str	r3, [r1, #8]
 802c2e2:	f1b8 0f00 	cmp.w	r8, #0
 802c2e6:	dd9c      	ble.n	802c222 <__sflush_r+0x1a>
 802c2e8:	6a21      	ldr	r1, [r4, #32]
 802c2ea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c2ec:	4643      	mov	r3, r8
 802c2ee:	463a      	mov	r2, r7
 802c2f0:	4628      	mov	r0, r5
 802c2f2:	47b0      	blx	r6
 802c2f4:	2800      	cmp	r0, #0
 802c2f6:	dc06      	bgt.n	802c306 <__sflush_r+0xfe>
 802c2f8:	89a3      	ldrh	r3, [r4, #12]
 802c2fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c2fe:	81a3      	strh	r3, [r4, #12]
 802c300:	f04f 30ff 	mov.w	r0, #4294967295
 802c304:	e78e      	b.n	802c224 <__sflush_r+0x1c>
 802c306:	4407      	add	r7, r0
 802c308:	eba8 0800 	sub.w	r8, r8, r0
 802c30c:	e7e9      	b.n	802c2e2 <__sflush_r+0xda>
 802c30e:	bf00      	nop
 802c310:	dfbffffe 	.word	0xdfbffffe

0802c314 <_fflush_r>:
 802c314:	b538      	push	{r3, r4, r5, lr}
 802c316:	690b      	ldr	r3, [r1, #16]
 802c318:	4605      	mov	r5, r0
 802c31a:	460c      	mov	r4, r1
 802c31c:	b913      	cbnz	r3, 802c324 <_fflush_r+0x10>
 802c31e:	2500      	movs	r5, #0
 802c320:	4628      	mov	r0, r5
 802c322:	bd38      	pop	{r3, r4, r5, pc}
 802c324:	b118      	cbz	r0, 802c32e <_fflush_r+0x1a>
 802c326:	6a03      	ldr	r3, [r0, #32]
 802c328:	b90b      	cbnz	r3, 802c32e <_fflush_r+0x1a>
 802c32a:	f7ff fa2f 	bl	802b78c <__sinit>
 802c32e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c332:	2b00      	cmp	r3, #0
 802c334:	d0f3      	beq.n	802c31e <_fflush_r+0xa>
 802c336:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c338:	07d0      	lsls	r0, r2, #31
 802c33a:	d404      	bmi.n	802c346 <_fflush_r+0x32>
 802c33c:	0599      	lsls	r1, r3, #22
 802c33e:	d402      	bmi.n	802c346 <_fflush_r+0x32>
 802c340:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c342:	f7ff fbd2 	bl	802baea <__retarget_lock_acquire_recursive>
 802c346:	4628      	mov	r0, r5
 802c348:	4621      	mov	r1, r4
 802c34a:	f7ff ff5d 	bl	802c208 <__sflush_r>
 802c34e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c350:	07da      	lsls	r2, r3, #31
 802c352:	4605      	mov	r5, r0
 802c354:	d4e4      	bmi.n	802c320 <_fflush_r+0xc>
 802c356:	89a3      	ldrh	r3, [r4, #12]
 802c358:	059b      	lsls	r3, r3, #22
 802c35a:	d4e1      	bmi.n	802c320 <_fflush_r+0xc>
 802c35c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c35e:	f7ff fbc5 	bl	802baec <__retarget_lock_release_recursive>
 802c362:	e7dd      	b.n	802c320 <_fflush_r+0xc>

0802c364 <__swbuf_r>:
 802c364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c366:	460e      	mov	r6, r1
 802c368:	4614      	mov	r4, r2
 802c36a:	4605      	mov	r5, r0
 802c36c:	b118      	cbz	r0, 802c376 <__swbuf_r+0x12>
 802c36e:	6a03      	ldr	r3, [r0, #32]
 802c370:	b90b      	cbnz	r3, 802c376 <__swbuf_r+0x12>
 802c372:	f7ff fa0b 	bl	802b78c <__sinit>
 802c376:	69a3      	ldr	r3, [r4, #24]
 802c378:	60a3      	str	r3, [r4, #8]
 802c37a:	89a3      	ldrh	r3, [r4, #12]
 802c37c:	071a      	lsls	r2, r3, #28
 802c37e:	d525      	bpl.n	802c3cc <__swbuf_r+0x68>
 802c380:	6923      	ldr	r3, [r4, #16]
 802c382:	b31b      	cbz	r3, 802c3cc <__swbuf_r+0x68>
 802c384:	6823      	ldr	r3, [r4, #0]
 802c386:	6922      	ldr	r2, [r4, #16]
 802c388:	1a98      	subs	r0, r3, r2
 802c38a:	6963      	ldr	r3, [r4, #20]
 802c38c:	b2f6      	uxtb	r6, r6
 802c38e:	4283      	cmp	r3, r0
 802c390:	4637      	mov	r7, r6
 802c392:	dc04      	bgt.n	802c39e <__swbuf_r+0x3a>
 802c394:	4621      	mov	r1, r4
 802c396:	4628      	mov	r0, r5
 802c398:	f7ff ffbc 	bl	802c314 <_fflush_r>
 802c39c:	b9e0      	cbnz	r0, 802c3d8 <__swbuf_r+0x74>
 802c39e:	68a3      	ldr	r3, [r4, #8]
 802c3a0:	3b01      	subs	r3, #1
 802c3a2:	60a3      	str	r3, [r4, #8]
 802c3a4:	6823      	ldr	r3, [r4, #0]
 802c3a6:	1c5a      	adds	r2, r3, #1
 802c3a8:	6022      	str	r2, [r4, #0]
 802c3aa:	701e      	strb	r6, [r3, #0]
 802c3ac:	6962      	ldr	r2, [r4, #20]
 802c3ae:	1c43      	adds	r3, r0, #1
 802c3b0:	429a      	cmp	r2, r3
 802c3b2:	d004      	beq.n	802c3be <__swbuf_r+0x5a>
 802c3b4:	89a3      	ldrh	r3, [r4, #12]
 802c3b6:	07db      	lsls	r3, r3, #31
 802c3b8:	d506      	bpl.n	802c3c8 <__swbuf_r+0x64>
 802c3ba:	2e0a      	cmp	r6, #10
 802c3bc:	d104      	bne.n	802c3c8 <__swbuf_r+0x64>
 802c3be:	4621      	mov	r1, r4
 802c3c0:	4628      	mov	r0, r5
 802c3c2:	f7ff ffa7 	bl	802c314 <_fflush_r>
 802c3c6:	b938      	cbnz	r0, 802c3d8 <__swbuf_r+0x74>
 802c3c8:	4638      	mov	r0, r7
 802c3ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c3cc:	4621      	mov	r1, r4
 802c3ce:	4628      	mov	r0, r5
 802c3d0:	f000 f806 	bl	802c3e0 <__swsetup_r>
 802c3d4:	2800      	cmp	r0, #0
 802c3d6:	d0d5      	beq.n	802c384 <__swbuf_r+0x20>
 802c3d8:	f04f 37ff 	mov.w	r7, #4294967295
 802c3dc:	e7f4      	b.n	802c3c8 <__swbuf_r+0x64>
	...

0802c3e0 <__swsetup_r>:
 802c3e0:	b538      	push	{r3, r4, r5, lr}
 802c3e2:	4b2a      	ldr	r3, [pc, #168]	; (802c48c <__swsetup_r+0xac>)
 802c3e4:	4605      	mov	r5, r0
 802c3e6:	6818      	ldr	r0, [r3, #0]
 802c3e8:	460c      	mov	r4, r1
 802c3ea:	b118      	cbz	r0, 802c3f4 <__swsetup_r+0x14>
 802c3ec:	6a03      	ldr	r3, [r0, #32]
 802c3ee:	b90b      	cbnz	r3, 802c3f4 <__swsetup_r+0x14>
 802c3f0:	f7ff f9cc 	bl	802b78c <__sinit>
 802c3f4:	89a3      	ldrh	r3, [r4, #12]
 802c3f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c3fa:	0718      	lsls	r0, r3, #28
 802c3fc:	d422      	bmi.n	802c444 <__swsetup_r+0x64>
 802c3fe:	06d9      	lsls	r1, r3, #27
 802c400:	d407      	bmi.n	802c412 <__swsetup_r+0x32>
 802c402:	2309      	movs	r3, #9
 802c404:	602b      	str	r3, [r5, #0]
 802c406:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c40a:	81a3      	strh	r3, [r4, #12]
 802c40c:	f04f 30ff 	mov.w	r0, #4294967295
 802c410:	e034      	b.n	802c47c <__swsetup_r+0x9c>
 802c412:	0758      	lsls	r0, r3, #29
 802c414:	d512      	bpl.n	802c43c <__swsetup_r+0x5c>
 802c416:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c418:	b141      	cbz	r1, 802c42c <__swsetup_r+0x4c>
 802c41a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c41e:	4299      	cmp	r1, r3
 802c420:	d002      	beq.n	802c428 <__swsetup_r+0x48>
 802c422:	4628      	mov	r0, r5
 802c424:	f7ff fbd0 	bl	802bbc8 <_free_r>
 802c428:	2300      	movs	r3, #0
 802c42a:	6363      	str	r3, [r4, #52]	; 0x34
 802c42c:	89a3      	ldrh	r3, [r4, #12]
 802c42e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c432:	81a3      	strh	r3, [r4, #12]
 802c434:	2300      	movs	r3, #0
 802c436:	6063      	str	r3, [r4, #4]
 802c438:	6923      	ldr	r3, [r4, #16]
 802c43a:	6023      	str	r3, [r4, #0]
 802c43c:	89a3      	ldrh	r3, [r4, #12]
 802c43e:	f043 0308 	orr.w	r3, r3, #8
 802c442:	81a3      	strh	r3, [r4, #12]
 802c444:	6923      	ldr	r3, [r4, #16]
 802c446:	b94b      	cbnz	r3, 802c45c <__swsetup_r+0x7c>
 802c448:	89a3      	ldrh	r3, [r4, #12]
 802c44a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c44e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c452:	d003      	beq.n	802c45c <__swsetup_r+0x7c>
 802c454:	4621      	mov	r1, r4
 802c456:	4628      	mov	r0, r5
 802c458:	f000 f840 	bl	802c4dc <__smakebuf_r>
 802c45c:	89a0      	ldrh	r0, [r4, #12]
 802c45e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c462:	f010 0301 	ands.w	r3, r0, #1
 802c466:	d00a      	beq.n	802c47e <__swsetup_r+0x9e>
 802c468:	2300      	movs	r3, #0
 802c46a:	60a3      	str	r3, [r4, #8]
 802c46c:	6963      	ldr	r3, [r4, #20]
 802c46e:	425b      	negs	r3, r3
 802c470:	61a3      	str	r3, [r4, #24]
 802c472:	6923      	ldr	r3, [r4, #16]
 802c474:	b943      	cbnz	r3, 802c488 <__swsetup_r+0xa8>
 802c476:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c47a:	d1c4      	bne.n	802c406 <__swsetup_r+0x26>
 802c47c:	bd38      	pop	{r3, r4, r5, pc}
 802c47e:	0781      	lsls	r1, r0, #30
 802c480:	bf58      	it	pl
 802c482:	6963      	ldrpl	r3, [r4, #20]
 802c484:	60a3      	str	r3, [r4, #8]
 802c486:	e7f4      	b.n	802c472 <__swsetup_r+0x92>
 802c488:	2000      	movs	r0, #0
 802c48a:	e7f7      	b.n	802c47c <__swsetup_r+0x9c>
 802c48c:	20000178 	.word	0x20000178

0802c490 <__swhatbuf_r>:
 802c490:	b570      	push	{r4, r5, r6, lr}
 802c492:	460c      	mov	r4, r1
 802c494:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c498:	2900      	cmp	r1, #0
 802c49a:	b096      	sub	sp, #88	; 0x58
 802c49c:	4615      	mov	r5, r2
 802c49e:	461e      	mov	r6, r3
 802c4a0:	da0d      	bge.n	802c4be <__swhatbuf_r+0x2e>
 802c4a2:	89a3      	ldrh	r3, [r4, #12]
 802c4a4:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c4a8:	f04f 0100 	mov.w	r1, #0
 802c4ac:	bf0c      	ite	eq
 802c4ae:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c4b2:	2340      	movne	r3, #64	; 0x40
 802c4b4:	2000      	movs	r0, #0
 802c4b6:	6031      	str	r1, [r6, #0]
 802c4b8:	602b      	str	r3, [r5, #0]
 802c4ba:	b016      	add	sp, #88	; 0x58
 802c4bc:	bd70      	pop	{r4, r5, r6, pc}
 802c4be:	466a      	mov	r2, sp
 802c4c0:	f000 f848 	bl	802c554 <_fstat_r>
 802c4c4:	2800      	cmp	r0, #0
 802c4c6:	dbec      	blt.n	802c4a2 <__swhatbuf_r+0x12>
 802c4c8:	9901      	ldr	r1, [sp, #4]
 802c4ca:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c4ce:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c4d2:	4259      	negs	r1, r3
 802c4d4:	4159      	adcs	r1, r3
 802c4d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c4da:	e7eb      	b.n	802c4b4 <__swhatbuf_r+0x24>

0802c4dc <__smakebuf_r>:
 802c4dc:	898b      	ldrh	r3, [r1, #12]
 802c4de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c4e0:	079d      	lsls	r5, r3, #30
 802c4e2:	4606      	mov	r6, r0
 802c4e4:	460c      	mov	r4, r1
 802c4e6:	d507      	bpl.n	802c4f8 <__smakebuf_r+0x1c>
 802c4e8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c4ec:	6023      	str	r3, [r4, #0]
 802c4ee:	6123      	str	r3, [r4, #16]
 802c4f0:	2301      	movs	r3, #1
 802c4f2:	6163      	str	r3, [r4, #20]
 802c4f4:	b002      	add	sp, #8
 802c4f6:	bd70      	pop	{r4, r5, r6, pc}
 802c4f8:	ab01      	add	r3, sp, #4
 802c4fa:	466a      	mov	r2, sp
 802c4fc:	f7ff ffc8 	bl	802c490 <__swhatbuf_r>
 802c500:	9900      	ldr	r1, [sp, #0]
 802c502:	4605      	mov	r5, r0
 802c504:	4630      	mov	r0, r6
 802c506:	f7ff f81b 	bl	802b540 <_malloc_r>
 802c50a:	b948      	cbnz	r0, 802c520 <__smakebuf_r+0x44>
 802c50c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c510:	059a      	lsls	r2, r3, #22
 802c512:	d4ef      	bmi.n	802c4f4 <__smakebuf_r+0x18>
 802c514:	f023 0303 	bic.w	r3, r3, #3
 802c518:	f043 0302 	orr.w	r3, r3, #2
 802c51c:	81a3      	strh	r3, [r4, #12]
 802c51e:	e7e3      	b.n	802c4e8 <__smakebuf_r+0xc>
 802c520:	89a3      	ldrh	r3, [r4, #12]
 802c522:	6020      	str	r0, [r4, #0]
 802c524:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c528:	81a3      	strh	r3, [r4, #12]
 802c52a:	9b00      	ldr	r3, [sp, #0]
 802c52c:	6163      	str	r3, [r4, #20]
 802c52e:	9b01      	ldr	r3, [sp, #4]
 802c530:	6120      	str	r0, [r4, #16]
 802c532:	b15b      	cbz	r3, 802c54c <__smakebuf_r+0x70>
 802c534:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c538:	4630      	mov	r0, r6
 802c53a:	f000 f81d 	bl	802c578 <_isatty_r>
 802c53e:	b128      	cbz	r0, 802c54c <__smakebuf_r+0x70>
 802c540:	89a3      	ldrh	r3, [r4, #12]
 802c542:	f023 0303 	bic.w	r3, r3, #3
 802c546:	f043 0301 	orr.w	r3, r3, #1
 802c54a:	81a3      	strh	r3, [r4, #12]
 802c54c:	89a3      	ldrh	r3, [r4, #12]
 802c54e:	431d      	orrs	r5, r3
 802c550:	81a5      	strh	r5, [r4, #12]
 802c552:	e7cf      	b.n	802c4f4 <__smakebuf_r+0x18>

0802c554 <_fstat_r>:
 802c554:	b538      	push	{r3, r4, r5, lr}
 802c556:	4d07      	ldr	r5, [pc, #28]	; (802c574 <_fstat_r+0x20>)
 802c558:	2300      	movs	r3, #0
 802c55a:	4604      	mov	r4, r0
 802c55c:	4608      	mov	r0, r1
 802c55e:	4611      	mov	r1, r2
 802c560:	602b      	str	r3, [r5, #0]
 802c562:	f7d5 fa99 	bl	8001a98 <_fstat>
 802c566:	1c43      	adds	r3, r0, #1
 802c568:	d102      	bne.n	802c570 <_fstat_r+0x1c>
 802c56a:	682b      	ldr	r3, [r5, #0]
 802c56c:	b103      	cbz	r3, 802c570 <_fstat_r+0x1c>
 802c56e:	6023      	str	r3, [r4, #0]
 802c570:	bd38      	pop	{r3, r4, r5, pc}
 802c572:	bf00      	nop
 802c574:	2001434c 	.word	0x2001434c

0802c578 <_isatty_r>:
 802c578:	b538      	push	{r3, r4, r5, lr}
 802c57a:	4d06      	ldr	r5, [pc, #24]	; (802c594 <_isatty_r+0x1c>)
 802c57c:	2300      	movs	r3, #0
 802c57e:	4604      	mov	r4, r0
 802c580:	4608      	mov	r0, r1
 802c582:	602b      	str	r3, [r5, #0]
 802c584:	f7d5 fa8e 	bl	8001aa4 <_isatty>
 802c588:	1c43      	adds	r3, r0, #1
 802c58a:	d102      	bne.n	802c592 <_isatty_r+0x1a>
 802c58c:	682b      	ldr	r3, [r5, #0]
 802c58e:	b103      	cbz	r3, 802c592 <_isatty_r+0x1a>
 802c590:	6023      	str	r3, [r4, #0]
 802c592:	bd38      	pop	{r3, r4, r5, pc}
 802c594:	2001434c 	.word	0x2001434c

0802c598 <_init>:
 802c598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c59a:	bf00      	nop
 802c59c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c59e:	bc08      	pop	{r3}
 802c5a0:	469e      	mov	lr, r3
 802c5a2:	4770      	bx	lr

0802c5a4 <_fini>:
 802c5a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c5a6:	bf00      	nop
 802c5a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c5aa:	bc08      	pop	{r3}
 802c5ac:	469e      	mov	lr, r3
 802c5ae:	4770      	bx	lr

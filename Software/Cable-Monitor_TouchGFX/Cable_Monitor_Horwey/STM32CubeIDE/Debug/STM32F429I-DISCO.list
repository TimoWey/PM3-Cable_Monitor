
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c9c8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802cb78  0802cb78  0003cb78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043d1c  08043d1c  00053d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047a14  08047a14  00057a14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000680  08047c60  08047c60  00057c60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  080482e0  080482e0  000582e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cd3d0  080cd3d0  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080cd3d0  080cd3d0  000dd3d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cd3d8  080cd3d8  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cd3d8  080cd3d8  000dd3d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cd3ec  080cd3ec  000dd3ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080cd3f0  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000168  080cd558  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001446c  080cd558  000e446c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091a4e  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00171d18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002255ea  00000000  00000000  00171dab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c41e  00000000  00000000  00397395  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004328  00000000  00000000  003c37b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f46d  00000000  00000000  003c7ae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d25  00000000  00000000  004e6f4d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003113a  00000000  00000000  004eec72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8c0  00000000  00000000  0051fdac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c76c  00000000  00000000  0055a66c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00566dd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056a150  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802cb60 	.word	0x0802cb60

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802cb60 	.word	0x0802cb60

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f94b 	bl	8009910 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fcf5 	bl	802c068 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cd3f0 	.word	0x080cd3f0
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	2001446c 	.word	0x2001446c

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 fa51 	bl	8009c8c <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 fabb 	bl	8009d88 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f98a 	bl	8009b48 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 fa46 	bl	8009cc8 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 fa38 	bl	8009cb4 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	20000184 	.word	0x20000184

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe95 	bl	80015a8 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe81 	bl	80015a4 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f029 f9e0 	bl	8029cb8 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f029 fa5c 	bl	8029dc0 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fec5 	bl	802a69c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe4b 	bl	80015ac <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f029 f955 	bl	8029be8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe31 	bl	80015ac <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00d f962 	bl	800dc3c <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00d fa4c 	bl	800de34 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fbc2 	bl	800a130 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fbc1 	bl	800a138 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00d f93f 	bl	800dc3c <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	2000000c 	.word	0x2000000c
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d0 	.word	0x200001d0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	2000000c 	.word	0x2000000c

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 ffb5 	bl	8009984 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 ff98 	bl	8009984 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00b f94a 	bl	800bdac <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00b fb54 	bl	800c1dc <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 fef0 	bl	800992c <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbd      	ldr	r3, [pc, #756]	; (8000e54 <main+0x314>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bc      	ldr	r0, [pc, #752]	; (8000e58 <main+0x318>)
  hi2c3.Instance = I2C3;
 8000b66:	4ebd      	ldr	r6, [pc, #756]	; (8000e5c <main+0x31c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f009 fa92 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4892      	ldr	r0, [pc, #584]	; (8000e58 <main+0x318>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f009 fa8d 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4892      	ldr	r0, [pc, #584]	; (8000e60 <main+0x320>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f009 fa88 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c20:	4890      	ldr	r0, [pc, #576]	; (8000e64 <main+0x324>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c28:	f009 fa82 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c2c:	488e      	ldr	r0, [pc, #568]	; (8000e68 <main+0x328>)
 8000c2e:	4622      	mov	r2, r4
 8000c30:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c34:	f009 fa7c 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c38:	488c      	ldr	r0, [pc, #560]	; (8000e6c <main+0x32c>)
 8000c3a:	4622      	mov	r2, r4
 8000c3c:	2104      	movs	r1, #4
 8000c3e:	f009 fa77 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c42:	2201      	movs	r2, #1
 8000c44:	4889      	ldr	r0, [pc, #548]	; (8000e6c <main+0x32c>)
 8000c46:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c4a:	f009 fa71 	bl	800a130 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c4e:	f04f 0901 	mov.w	r9, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c52:	f04f 0a03 	mov.w	sl, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c56:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c58:	487f      	ldr	r0, [pc, #508]	; (8000e58 <main+0x318>)
 8000c5a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c5c:	f04f 0b08 	mov.w	fp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c60:	e9cd 390f 	strd	r3, r9, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c64:	e9cd 4a11 	strd	r4, sl, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c68:	f009 f91e 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c6c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c70:	4879      	ldr	r0, [pc, #484]	; (8000e58 <main+0x318>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c72:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c76:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c78:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c7a:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7c:	f009 f914 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c80:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c82:	4875      	ldr	r0, [pc, #468]	; (8000e58 <main+0x318>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c84:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c86:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c88:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c8a:	2504      	movs	r5, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c8c:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c90:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c92:	f009 f909 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c96:	4872      	ldr	r0, [pc, #456]	; (8000e60 <main+0x320>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c98:	950f      	str	r5, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c9a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c9c:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca0:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ca4:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca6:	f009 f8ff 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000caa:	486d      	ldr	r0, [pc, #436]	; (8000e60 <main+0x320>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cac:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cae:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cb0:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cb4:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb8:	f009 f8f6 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cbc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cc0:	4868      	ldr	r0, [pc, #416]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cc2:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cc4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc6:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cca:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ccc:	f009 f8ec 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cd0:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cd4:	4864      	ldr	r0, [pc, #400]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cd6:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cd8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cda:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cde:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ce0:	f009 f8e2 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000ce4:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ce8:	4860      	ldr	r0, [pc, #384]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000cea:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cec:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cee:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cf4:	f009 f8d8 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000cf8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cfc:	485c      	ldr	r0, [pc, #368]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000cfe:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d00:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d02:	220f      	movs	r2, #15
 8000d04:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d06:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d0a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d0c:	f009 f8cc 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d10:	2105      	movs	r1, #5
 8000d12:	4622      	mov	r2, r4
 8000d14:	2009      	movs	r0, #9
 8000d16:	f008 fe59 	bl	80099cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d1a:	2009      	movs	r0, #9
 8000d1c:	f008 fe94 	bl	8009a48 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d20:	4854      	ldr	r0, [pc, #336]	; (8000e74 <main+0x334>)
 8000d22:	4a55      	ldr	r2, [pc, #340]	; (8000e78 <main+0x338>)
 8000d24:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d26:	f008 fe9d 	bl	8009a64 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d2a:	4954      	ldr	r1, [pc, #336]	; (8000e7c <main+0x33c>)
 8000d2c:	4a54      	ldr	r2, [pc, #336]	; (8000e80 <main+0x340>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d2e:	4630      	mov	r0, r6
  hi2c3.Init.ClockSpeed = 100000;
 8000d30:	e9c6 1200 	strd	r1, r2, [r6]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d34:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d38:	6132      	str	r2, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d3a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d3e:	e9c6 4405 	strd	r4, r4, [r6, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d42:	e9c6 4407 	strd	r4, r4, [r6, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d46:	f009 fc59 	bl	800a5fc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d4a:	4641      	mov	r1, r8
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	f00a fe21 	bl	800b994 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d52:	4621      	mov	r1, r4
 8000d54:	4630      	mov	r0, r6
 8000d56:	f00a fe3d 	bl	800b9d4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d5a:	f8df c140 	ldr.w	ip, [pc, #320]	; 8000e9c <main+0x35c>
  hspi5.Instance = SPI5;
 8000d5e:	4849      	ldr	r0, [pc, #292]	; (8000e84 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d60:	4e49      	ldr	r6, [pc, #292]	; (8000e88 <main+0x348>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d62:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d64:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000d68:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d6c:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8000d70:	2218      	movs	r2, #24
 8000d72:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d76:	220a      	movs	r2, #10
 8000d78:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d7a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d7e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d82:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000d86:	f00b fd17 	bl	800c7b8 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000d8a:	2207      	movs	r2, #7
 8000d8c:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000d8e:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d90:	4a3e      	ldr	r2, [pc, #248]	; (8000e8c <main+0x34c>)
 8000d92:	6032      	str	r2, [r6, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000d94:	2040      	movs	r0, #64	; 0x40
 8000d96:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000d9a:	e9c6 0205 	strd	r0, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000d9e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000da2:	6232      	str	r2, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000da4:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000da6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000daa:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dac:	e9c6 9401 	strd	r9, r4, [r6, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000db0:	e9c6 5803 	strd	r5, r8, [r6, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000db4:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000db6:	e9cd a713 	strd	sl, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dba:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dbc:	6274      	str	r4, [r6, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000dbe:	9511      	str	r5, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000dc0:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000dc2:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc4:	f00b fc06 	bl	800c5d4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dcc:	a90b      	add	r1, sp, #44	; 0x2c
 8000dce:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dd0:	e9cd 9b0b 	strd	r9, fp, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000dd4:	e9cd 940d 	strd	r9, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000dd8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dda:	f00b fc1d 	bl	800c618 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dde:	4648      	mov	r0, r9
 8000de0:	f008 fdd0 	bl	8009984 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000de8:	a90b      	add	r1, sp, #44	; 0x2c
 8000dea:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dec:	e9cd 7b0b 	strd	r7, fp, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df0:	e9cd 940d 	strd	r9, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000df4:	f00b fc10 	bl	800c618 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000df8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dfc:	a90b      	add	r1, sp, #44	; 0x2c
 8000dfe:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e00:	e9cd ab0b 	strd	sl, fp, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e04:	e9cd 540d 	strd	r5, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e08:	f00b fc06 	bl	800c618 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e0c:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000e10:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e12:	9b08      	ldr	r3, [sp, #32]
 8000e14:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e16:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1a:	a90b      	add	r1, sp, #44	; 0x2c
 8000e1c:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e1e:	e9cd 5b0b 	strd	r5, fp, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e22:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e26:	f00b fbf7 	bl	800c618 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e2a:	4630      	mov	r0, r6
 8000e2c:	f240 516a 	movw	r1, #1386	; 0x56a
 8000e30:	f00b fc10 	bl	800c654 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8000e34:	4e16      	ldr	r6, [pc, #88]	; (8000e90 <main+0x350>)
  htim14.Instance = TIM14;
 8000e36:	4d17      	ldr	r5, [pc, #92]	; (8000e94 <main+0x354>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e38:	4621      	mov	r1, r4
 8000e3a:	2234      	movs	r2, #52	; 0x34
 8000e3c:	a80f      	add	r0, sp, #60	; 0x3c
 8000e3e:	f02b f814 	bl	802be6a <memset>
  hltdc.Instance = LTDC;
 8000e42:	4b15      	ldr	r3, [pc, #84]	; (8000e98 <main+0x358>)
 8000e44:	6033      	str	r3, [r6, #0]
  hltdc.Init.HorizontalSync = 9;
 8000e46:	2309      	movs	r3, #9
 8000e48:	6173      	str	r3, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000e4a:	231d      	movs	r3, #29
 8000e4c:	61f3      	str	r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e4e:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000e52:	e025      	b.n	8000ea0 <main+0x360>
 8000e54:	40023800 	.word	0x40023800
 8000e58:	40021000 	.word	0x40021000
 8000e5c:	200001e4 	.word	0x200001e4
 8000e60:	40020800 	.word	0x40020800
 8000e64:	40020400 	.word	0x40020400
 8000e68:	40020c00 	.word	0x40020c00
 8000e6c:	40021800 	.word	0x40021800
 8000e70:	40020000 	.word	0x40020000
 8000e74:	200001dc 	.word	0x200001dc
 8000e78:	40023000 	.word	0x40023000
 8000e7c:	40005c00 	.word	0x40005c00
 8000e80:	000186a0 	.word	0x000186a0
 8000e84:	20000314 	.word	0x20000314
 8000e88:	200002e0 	.word	0x200002e0
 8000e8c:	a0000140 	.word	0xa0000140
 8000e90:	20000238 	.word	0x20000238
 8000e94:	200003b4 	.word	0x200003b4
 8000e98:	40016800 	.word	0x40016800
 8000e9c:	40015000 	.word	0x40015000
 8000ea0:	f240 1343 	movw	r3, #323	; 0x143
 8000ea4:	e9c6 b309 	strd	fp, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000ea8:	f240 1217 	movw	r2, #279	; 0x117
 8000eac:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8000eb0:	86b4      	strh	r4, [r6, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eb2:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8000eb4:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000eb8:	f8c6 9018 	str.w	r9, [r6, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8000ebc:	f8c6 a020 	str.w	sl, [r6, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000ec0:	e9c6 4401 	strd	r4, r4, [r6, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ec4:	e9c6 4403 	strd	r4, r4, [r6, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000ec8:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ecc:	f00a fda6 	bl	800ba1c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8000ed0:	23f0      	movs	r3, #240	; 0xf0
 8000ed2:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000ed4:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000ed6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000eda:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000edc:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ede:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee0:	4622      	mov	r2, r4
 8000ee2:	a90f      	add	r1, sp, #60	; 0x3c
 8000ee4:	4630      	mov	r0, r6
  pLayerCfg.Alpha = 255;
 8000ee6:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ee8:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8000eec:	2305      	movs	r3, #5
 8000eee:	e9cd 6316 	strd	r6, r3, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000ef2:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000ef4:	4e76      	ldr	r6, [pc, #472]	; (80010d0 <main+0x590>)
  pLayerCfg.WindowY0 = 0;
 8000ef6:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ef8:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000efa:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000efc:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000efe:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f02:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f06:	f00a fe5f 	bl	800bbc8 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f0a:	4b72      	ldr	r3, [pc, #456]	; (80010d4 <main+0x594>)
 8000f0c:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8000f0e:	681b      	ldr	r3, [r3, #0]
  htim3.Instance = TIM3;
 8000f10:	f8df 920c 	ldr.w	r9, [pc, #524]	; 8001120 <main+0x5e0>
  LcdDrv->Init();
 8000f14:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000f16:	6833      	ldr	r3, [r6, #0]
  htim1.Instance = TIM1;
 8000f18:	4e6f      	ldr	r6, [pc, #444]	; (80010d8 <main+0x598>)
  LcdDrv->DisplayOff();
 8000f1a:	68db      	ldr	r3, [r3, #12]
 8000f1c:	4798      	blx	r3
  htim1.Init.Period = 65535;
 8000f1e:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f22:	4b6e      	ldr	r3, [pc, #440]	; (80010dc <main+0x59c>)
 8000f24:	6033      	str	r3, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f26:	4630      	mov	r0, r6
  htim1.Init.Period = 65535;
 8000f28:	f8c6 a00c 	str.w	sl, [r6, #12]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f2c:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f30:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f34:	61b4      	str	r4, [r6, #24]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f36:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f3a:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f3e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f42:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f44:	f00c f828 	bl	800cf98 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f48:	a90f      	add	r1, sp, #60	; 0x3c
 8000f4a:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f4c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f50:	f00c fbac 	bl	800d6ac <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f54:	a90b      	add	r1, sp, #44	; 0x2c
 8000f56:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f58:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f5c:	f00c fce4 	bl	800d928 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f60:	4b5f      	ldr	r3, [pc, #380]	; (80010e0 <main+0x5a0>)
  htim3.Init.Period = 65535;
 8000f62:	f8c9 a00c 	str.w	sl, [r9, #12]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f66:	4648      	mov	r0, r9
  htim3.Instance = TIM3;
 8000f68:	f8c9 3000 	str.w	r3, [r9]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f6c:	e9c9 4401 	strd	r4, r4, [r9, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f70:	f8c9 4010 	str.w	r4, [r9, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f74:	f8c9 4018 	str.w	r4, [r9, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f78:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f7c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f80:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f84:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f88:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f8a:	9409      	str	r4, [sp, #36]	; 0x24
 8000f8c:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f8e:	f00c f803 	bl	800cf98 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f92:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f96:	a90b      	add	r1, sp, #44	; 0x2c
 8000f98:	4648      	mov	r0, r9
  htim2.Instance = TIM2;
 8000f9a:	4e52      	ldr	r6, [pc, #328]	; (80010e4 <main+0x5a4>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f9c:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f9e:	f00c fad5 	bl	800d54c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fa2:	a90f      	add	r1, sp, #60	; 0x3c
 8000fa4:	4648      	mov	r0, r9
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fa6:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000faa:	f00c fb7f 	bl	800d6ac <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fae:	a909      	add	r1, sp, #36	; 0x24
 8000fb0:	4648      	mov	r0, r9
  htim2.Init.Period = 100-1;
 8000fb2:	f04f 0b63 	mov.w	fp, #99	; 0x63
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fb6:	f04f 0a80 	mov.w	sl, #128	; 0x80
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fba:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbe:	f00c fcb3 	bl	800d928 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 168-1;
 8000fc2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fc6:	23a7      	movs	r3, #167	; 0xa7
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fc8:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 168-1;
 8000fca:	e9c6 2300 	strd	r2, r3, [r6]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fce:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fd0:	6134      	str	r4, [r6, #16]
  htim2.Init.Period = 100-1;
 8000fd2:	f8c6 b00c 	str.w	fp, [r6, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd6:	f8c6 a018 	str.w	sl, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fda:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fde:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fe6:	f00b ffd7 	bl	800cf98 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fea:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fee:	a90f      	add	r1, sp, #60	; 0x3c
 8000ff0:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff2:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff4:	f00c faaa 	bl	800d54c <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000ff8:	a90b      	add	r1, sp, #44	; 0x2c
 8000ffa:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000ffc:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001000:	f00c fc92 	bl	800d928 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 33;
 8001004:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001008:	f04f 0921 	mov.w	r9, #33	; 0x21
 800100c:	f8c2 9034 	str.w	r9, [r2, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001010:	4621      	mov	r1, r4
 8001012:	4630      	mov	r0, r6
 8001014:	f00c f91a 	bl	800d24c <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001018:	4e33      	ldr	r6, [pc, #204]	; (80010e8 <main+0x5a8>)
  htim14.Init.Period = 100-1;
 800101a:	f8c5 b00c 	str.w	fp, [r5, #12]
  htim14.Init.Prescaler = 168-1;
 800101e:	23a7      	movs	r3, #167	; 0xa7
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001020:	4628      	mov	r0, r5
  htim14.Init.Prescaler = 168-1;
 8001022:	606b      	str	r3, [r5, #4]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001024:	f8c5 a018 	str.w	sl, [r5, #24]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001028:	60ac      	str	r4, [r5, #8]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800102a:	612c      	str	r4, [r5, #16]
  htim14.Instance = TIM14;
 800102c:	602e      	str	r6, [r5, #0]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800102e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001032:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001036:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 800103a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800103c:	f00b ffac 	bl	800cf98 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001040:	4628      	mov	r0, r5
 8001042:	f00c f875 	bl	800d130 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001046:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001048:	4622      	mov	r2, r4
 800104a:	a90f      	add	r1, sp, #60	; 0x3c
 800104c:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800104e:	930f      	str	r3, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001050:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001054:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001056:	f00c f969 	bl	800d32c <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800105a:	4621      	mov	r1, r4
 800105c:	4628      	mov	r0, r5
  TIM14->CCR1 = 33;
 800105e:	f8c6 9034 	str.w	r9, [r6, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001062:	f00c f8f3 	bl	800d24c <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim14);
 8001066:	4628      	mov	r0, r5
 8001068:	f000 fcc6 	bl	80019f8 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 800106c:	f000 fe36 	bl	8001cdc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001070:	f000 fe32 	bl	8001cd8 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001074:	f7ff fcb2 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001078:	f000 f956 	bl	8001328 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800107c:	f000 f988 	bl	8001390 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001080:	491a      	ldr	r1, [pc, #104]	; (80010ec <main+0x5ac>)
 8001082:	481b      	ldr	r0, [pc, #108]	; (80010f0 <main+0x5b0>)
 8001084:	220c      	movs	r2, #12
 8001086:	f7ff fbe3 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 800108a:	f00c fd5f 	bl	800db4c <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800108e:	4a19      	ldr	r2, [pc, #100]	; (80010f4 <main+0x5b4>)
 8001090:	4639      	mov	r1, r7
 8001092:	4640      	mov	r0, r8
 8001094:	f00c fe94 	bl	800ddc0 <osMessageQueueNew>
 8001098:	4b17      	ldr	r3, [pc, #92]	; (80010f8 <main+0x5b8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800109a:	4a18      	ldr	r2, [pc, #96]	; (80010fc <main+0x5bc>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800109c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800109e:	4621      	mov	r1, r4
 80010a0:	4817      	ldr	r0, [pc, #92]	; (8001100 <main+0x5c0>)
 80010a2:	f00c fd7f 	bl	800dba4 <osThreadNew>
 80010a6:	4b17      	ldr	r3, [pc, #92]	; (8001104 <main+0x5c4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80010a8:	4a17      	ldr	r2, [pc, #92]	; (8001108 <main+0x5c8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80010aa:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80010ac:	4621      	mov	r1, r4
 80010ae:	4817      	ldr	r0, [pc, #92]	; (800110c <main+0x5cc>)
 80010b0:	f00c fd78 	bl	800dba4 <osThreadNew>
 80010b4:	4b16      	ldr	r3, [pc, #88]	; (8001110 <main+0x5d0>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80010b6:	4a17      	ldr	r2, [pc, #92]	; (8001114 <main+0x5d4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80010b8:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80010ba:	4621      	mov	r1, r4
 80010bc:	4816      	ldr	r0, [pc, #88]	; (8001118 <main+0x5d8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80010be:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80010c0:	f00c fd70 	bl	800dba4 <osThreadNew>
 80010c4:	4b15      	ldr	r3, [pc, #84]	; (800111c <main+0x5dc>)
 80010c6:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80010c8:	f00c fd52 	bl	800db70 <osKernelStart>
  while (1)
 80010cc:	e7fe      	b.n	80010cc <main+0x58c>
 80010ce:	bf00      	nop
 80010d0:	200001cc 	.word	0x200001cc
 80010d4:	20000018 	.word	0x20000018
 80010d8:	2000036c 	.word	0x2000036c
 80010dc:	40010000 	.word	0x40010000
 80010e0:	40000400 	.word	0x40000400
 80010e4:	200003fc 	.word	0x200003fc
 80010e8:	40002000 	.word	0x40002000
 80010ec:	20000198 	.word	0x20000198
 80010f0:	081e0000 	.word	0x081e0000
 80010f4:	0802cc10 	.word	0x0802cc10
 80010f8:	200001d0 	.word	0x200001d0
 80010fc:	0802cc4c 	.word	0x0802cc4c
 8001100:	08000971 	.word	0x08000971
 8001104:	200001d8 	.word	0x200001d8
 8001108:	0802cbec 	.word	0x0802cbec
 800110c:	08001ced 	.word	0x08001ced
 8001110:	200001c8 	.word	0x200001c8
 8001114:	0802cc28 	.word	0x0802cc28
 8001118:	0800097d 	.word	0x0800097d
 800111c:	200001d4 	.word	0x200001d4
 8001120:	20000444 	.word	0x20000444

08001124 <IOE_Init>:
 8001124:	4770      	bx	lr
 8001126:	bf00      	nop

08001128 <IOE_ITConfig>:
 8001128:	4770      	bx	lr
 800112a:	bf00      	nop

0800112c <IOE_Write>:
{
 800112c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800112e:	4c09      	ldr	r4, [pc, #36]	; (8001154 <IOE_Write+0x28>)
{
 8001130:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001132:	6824      	ldr	r4, [r4, #0]
 8001134:	9402      	str	r4, [sp, #8]
{
 8001136:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001138:	2301      	movs	r3, #1
 800113a:	f88d 4017 	strb.w	r4, [sp, #23]
 800113e:	f10d 0417 	add.w	r4, sp, #23
 8001142:	460a      	mov	r2, r1
 8001144:	9301      	str	r3, [sp, #4]
 8001146:	4601      	mov	r1, r0
 8001148:	9400      	str	r4, [sp, #0]
 800114a:	4803      	ldr	r0, [pc, #12]	; (8001158 <IOE_Write+0x2c>)
 800114c:	f009 fb1e 	bl	800a78c <HAL_I2C_Mem_Write>
}
 8001150:	b006      	add	sp, #24
 8001152:	bd10      	pop	{r4, pc}
 8001154:	20000004 	.word	0x20000004
 8001158:	200001e4 	.word	0x200001e4

0800115c <IOE_Read>:
{
 800115c:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800115e:	4b0b      	ldr	r3, [pc, #44]	; (800118c <IOE_Read+0x30>)
{
 8001160:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	9302      	str	r3, [sp, #8]
{
 8001166:	4684      	mov	ip, r0
 8001168:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800116a:	2301      	movs	r3, #1
 800116c:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001170:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001172:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001176:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800117a:	4661      	mov	r1, ip
 800117c:	4804      	ldr	r0, [pc, #16]	; (8001190 <IOE_Read+0x34>)
 800117e:	f009 fbf7 	bl	800a970 <HAL_I2C_Mem_Read>
}
 8001182:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001186:	b007      	add	sp, #28
 8001188:	f85d fb04 	ldr.w	pc, [sp], #4
 800118c:	20000004 	.word	0x20000004
 8001190:	200001e4 	.word	0x200001e4

08001194 <IOE_ReadMultiple>:
{
 8001194:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001196:	4c09      	ldr	r4, [pc, #36]	; (80011bc <IOE_ReadMultiple+0x28>)
{
 8001198:	b084      	sub	sp, #16
 800119a:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800119c:	6820      	ldr	r0, [r4, #0]
 800119e:	9002      	str	r0, [sp, #8]
 80011a0:	e9cd 2300 	strd	r2, r3, [sp]
 80011a4:	4806      	ldr	r0, [pc, #24]	; (80011c0 <IOE_ReadMultiple+0x2c>)
 80011a6:	460a      	mov	r2, r1
 80011a8:	2301      	movs	r3, #1
 80011aa:	4661      	mov	r1, ip
 80011ac:	f009 fbe0 	bl	800a970 <HAL_I2C_Mem_Read>
}
 80011b0:	3800      	subs	r0, #0
 80011b2:	bf18      	it	ne
 80011b4:	2001      	movne	r0, #1
 80011b6:	b004      	add	sp, #16
 80011b8:	bd10      	pop	{r4, pc}
 80011ba:	bf00      	nop
 80011bc:	20000004 	.word	0x20000004
 80011c0:	200001e4 	.word	0x200001e4

080011c4 <IOE_Delay>:
 80011c4:	f008 bbde 	b.w	8009984 <HAL_Delay>

080011c8 <LCD_IO_Init>:
{
 80011c8:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ca:	4806      	ldr	r0, [pc, #24]	; (80011e4 <LCD_IO_Init+0x1c>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	2104      	movs	r1, #4
 80011d0:	f008 ffae 	bl	800a130 <HAL_GPIO_WritePin>
}
 80011d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011d8:	4802      	ldr	r0, [pc, #8]	; (80011e4 <LCD_IO_Init+0x1c>)
 80011da:	2201      	movs	r2, #1
 80011dc:	2104      	movs	r1, #4
 80011de:	f008 bfa7 	b.w	800a130 <HAL_GPIO_WritePin>
 80011e2:	bf00      	nop
 80011e4:	40020800 	.word	0x40020800

080011e8 <LCD_IO_WriteData>:
{
 80011e8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ea:	4d10      	ldr	r5, [pc, #64]	; (800122c <LCD_IO_WriteData+0x44>)
{
 80011ec:	b083      	sub	sp, #12
 80011ee:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80011f0:	2201      	movs	r2, #1
 80011f2:	480f      	ldr	r0, [pc, #60]	; (8001230 <LCD_IO_WriteData+0x48>)
 80011f4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011f8:	f008 ff9a 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011fc:	4628      	mov	r0, r5
 80011fe:	2200      	movs	r2, #0
 8001200:	2104      	movs	r1, #4
 8001202:	f008 ff95 	bl	800a130 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001206:	4b0b      	ldr	r3, [pc, #44]	; (8001234 <LCD_IO_WriteData+0x4c>)
 8001208:	480b      	ldr	r0, [pc, #44]	; (8001238 <LCD_IO_WriteData+0x50>)
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001210:	f10d 0106 	add.w	r1, sp, #6
 8001214:	2201      	movs	r2, #1
 8001216:	f00b fb31 	bl	800c87c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800121a:	2201      	movs	r2, #1
 800121c:	2104      	movs	r1, #4
 800121e:	4628      	mov	r0, r5
}
 8001220:	b003      	add	sp, #12
 8001222:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001226:	f008 bf83 	b.w	800a130 <HAL_GPIO_WritePin>
 800122a:	bf00      	nop
 800122c:	40020800 	.word	0x40020800
 8001230:	40020c00 	.word	0x40020c00
 8001234:	20000008 	.word	0x20000008
 8001238:	20000314 	.word	0x20000314

0800123c <LCD_IO_WriteReg>:
{
 800123c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800123e:	4d10      	ldr	r5, [pc, #64]	; (8001280 <LCD_IO_WriteReg+0x44>)
{
 8001240:	b083      	sub	sp, #12
 8001242:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001244:	2200      	movs	r2, #0
 8001246:	480f      	ldr	r0, [pc, #60]	; (8001284 <LCD_IO_WriteReg+0x48>)
 8001248:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800124c:	f008 ff70 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001250:	4628      	mov	r0, r5
 8001252:	2200      	movs	r2, #0
 8001254:	2104      	movs	r1, #4
 8001256:	f008 ff6b 	bl	800a130 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800125a:	4b0b      	ldr	r3, [pc, #44]	; (8001288 <LCD_IO_WriteReg+0x4c>)
 800125c:	480b      	ldr	r0, [pc, #44]	; (800128c <LCD_IO_WriteReg+0x50>)
 800125e:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001260:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001264:	f10d 0106 	add.w	r1, sp, #6
 8001268:	2201      	movs	r2, #1
 800126a:	f00b fb07 	bl	800c87c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800126e:	2201      	movs	r2, #1
 8001270:	2104      	movs	r1, #4
 8001272:	4628      	mov	r0, r5
}
 8001274:	b003      	add	sp, #12
 8001276:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800127a:	f008 bf59 	b.w	800a130 <HAL_GPIO_WritePin>
 800127e:	bf00      	nop
 8001280:	40020800 	.word	0x40020800
 8001284:	40020c00 	.word	0x40020c00
 8001288:	20000008 	.word	0x20000008
 800128c:	20000314 	.word	0x20000314

08001290 <LCD_IO_ReadData>:
{
 8001290:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001294:	4e19      	ldr	r6, [pc, #100]	; (80012fc <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001296:	4f1a      	ldr	r7, [pc, #104]	; (8001300 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001298:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001304 <LCD_IO_ReadData+0x74>
 800129c:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001308 <LCD_IO_ReadData+0x78>
{
 80012a0:	b083      	sub	sp, #12
 80012a2:	460c      	mov	r4, r1
 80012a4:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012a6:	2200      	movs	r2, #0
 80012a8:	4630      	mov	r0, r6
 80012aa:	2104      	movs	r1, #4
 80012ac:	f008 ff40 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80012b0:	4638      	mov	r0, r7
 80012b2:	2200      	movs	r2, #0
 80012b4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012b8:	f008 ff3a 	bl	800a130 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012bc:	f8d9 3000 	ldr.w	r3, [r9]
 80012c0:	f8ad 5004 	strh.w	r5, [sp, #4]
 80012c4:	a901      	add	r1, sp, #4
 80012c6:	2201      	movs	r2, #1
 80012c8:	4640      	mov	r0, r8
 80012ca:	f00b fad7 	bl	800c87c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80012ce:	f8d9 3000 	ldr.w	r3, [r9]
 80012d2:	4622      	mov	r2, r4
 80012d4:	a901      	add	r1, sp, #4
 80012d6:	4640      	mov	r0, r8
 80012d8:	f00b fd78 	bl	800cdcc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80012dc:	4638      	mov	r0, r7
 80012de:	2201      	movs	r2, #1
 80012e0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80012e4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80012e6:	f008 ff23 	bl	800a130 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80012ea:	4630      	mov	r0, r6
 80012ec:	2201      	movs	r2, #1
 80012ee:	2104      	movs	r1, #4
 80012f0:	f008 ff1e 	bl	800a130 <HAL_GPIO_WritePin>
}
 80012f4:	4620      	mov	r0, r4
 80012f6:	b003      	add	sp, #12
 80012f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012fc:	40020800 	.word	0x40020800
 8001300:	40020c00 	.word	0x40020c00
 8001304:	20000008 	.word	0x20000008
 8001308:	20000314 	.word	0x20000314

0800130c <LCD_Delay>:
  HAL_Delay(Delay);
 800130c:	f008 bb3a 	b.w	8009984 <HAL_Delay>

08001310 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001310:	4b03      	ldr	r3, [pc, #12]	; (8001320 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001312:	6802      	ldr	r2, [r0, #0]
 8001314:	429a      	cmp	r2, r3
 8001316:	d000      	beq.n	800131a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001318:	4770      	bx	lr
    HAL_IncTick();
 800131a:	f008 bb21 	b.w	8009960 <HAL_IncTick>
 800131e:	bf00      	nop
 8001320:	40001000 	.word	0x40001000

08001324 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001324:	4770      	bx	lr
 8001326:	bf00      	nop

08001328 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001328:	b410      	push	{r4}
 800132a:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800132c:	4b15      	ldr	r3, [pc, #84]	; (8001384 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800132e:	4916      	ldr	r1, [pc, #88]	; (8001388 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001330:	2400      	movs	r4, #0
 8001332:	9400      	str	r4, [sp, #0]
 8001334:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001336:	f042 0220 	orr.w	r2, r2, #32
 800133a:	631a      	str	r2, [r3, #48]	; 0x30
 800133c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800133e:	f002 0220 	and.w	r2, r2, #32
 8001342:	9200      	str	r2, [sp, #0]
 8001344:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001346:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001348:	4a10      	ldr	r2, [pc, #64]	; (800138c <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800134a:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 800134e:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001350:	6808      	ldr	r0, [r1, #0]
 8001352:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001356:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001358:	9401      	str	r4, [sp, #4]
 800135a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800135c:	f041 0104 	orr.w	r1, r1, #4
 8001360:	6319      	str	r1, [r3, #48]	; 0x30
 8001362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001364:	f003 0304 	and.w	r3, r3, #4
 8001368:	9301      	str	r3, [sp, #4]
 800136a:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 800136c:	6813      	ldr	r3, [r2, #0]
 800136e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001372:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001374:	6813      	ldr	r3, [r2, #0]
 8001376:	f043 030c 	orr.w	r3, r3, #12
 800137a:	6013      	str	r3, [r2, #0]
}
 800137c:	b003      	add	sp, #12
 800137e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001382:	4770      	bx	lr
 8001384:	40023800 	.word	0x40023800
 8001388:	40021400 	.word	0x40021400
 800138c:	40020800 	.word	0x40020800

08001390 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001390:	b410      	push	{r4}
 8001392:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001394:	4a0e      	ldr	r2, [pc, #56]	; (80013d0 <MEAS_timer_init+0x40>)
 8001396:	2000      	movs	r0, #0
 8001398:	9001      	str	r0, [sp, #4]
 800139a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800139c:	f041 0101 	orr.w	r1, r1, #1
 80013a0:	6411      	str	r1, [r2, #64]	; 0x40
 80013a2:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80013a4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80013a8:	f002 0201 	and.w	r2, r2, #1
 80013ac:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80013ae:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 80013b2:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80013b4:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80013b6:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 80013b8:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 80013ba:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013bc:	4905      	ldr	r1, [pc, #20]	; (80013d4 <MEAS_timer_init+0x44>)
 80013be:	f042 0220 	orr.w	r2, r2, #32
 80013c2:	605a      	str	r2, [r3, #4]
 80013c4:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 80013c8:	b003      	add	sp, #12
 80013ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80013ce:	4770      	bx	lr
 80013d0:	40023800 	.word	0x40023800
 80013d4:	e000e100 	.word	0xe000e100

080013d8 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 80013d8:	b410      	push	{r4}
 80013da:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80013dc:	4a36      	ldr	r2, [pc, #216]	; (80014b8 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013de:	4b37      	ldr	r3, [pc, #220]	; (80014bc <MEAS_ADC3_scan_init+0xe4>)
 80013e0:	4c37      	ldr	r4, [pc, #220]	; (80014c0 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80013e2:	2100      	movs	r1, #0
 80013e4:	9100      	str	r1, [sp, #0]
 80013e6:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013e8:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 80013ec:	6450      	str	r0, [r2, #68]	; 0x44
 80013ee:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013f0:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 80013f4:	9000      	str	r0, [sp, #0]
 80013f6:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013f8:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80013fa:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 80013fe:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001400:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001402:	f040 0004 	orr.w	r0, r0, #4
 8001406:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001408:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800140a:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800140e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001410:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001412:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001416:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001418:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800141a:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800141e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001420:	6858      	ldr	r0, [r3, #4]
 8001422:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001426:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001428:	6898      	ldr	r0, [r3, #8]
 800142a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800142e:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001430:	6898      	ldr	r0, [r3, #8]
 8001432:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001436:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001438:	6898      	ldr	r0, [r3, #8]
 800143a:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800143e:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001440:	9101      	str	r1, [sp, #4]
 8001442:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001444:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001448:	6310      	str	r0, [r2, #48]	; 0x30
 800144a:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800144c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001450:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001452:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001456:	9a01      	ldr	r2, [sp, #4]
 8001458:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800145c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800145e:	f022 0201 	bic.w	r2, r2, #1
 8001462:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001464:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001466:	07d2      	lsls	r2, r2, #31
 8001468:	d4fc      	bmi.n	8001464 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800146a:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800146c:	4815      	ldr	r0, [pc, #84]	; (80014c4 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800146e:	4916      	ldr	r1, [pc, #88]	; (80014c8 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001470:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001474:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001476:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001478:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800147c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800147e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001480:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001484:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001486:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001488:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800148c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800148e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001490:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001494:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001496:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001498:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800149c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800149e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80014a0:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80014a4:	f042 0210 	orr.w	r2, r2, #16
 80014a8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80014aa:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80014ac:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80014ae:	6359      	str	r1, [r3, #52]	; 0x34
}
 80014b0:	b003      	add	sp, #12
 80014b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80014b6:	4770      	bx	lr
 80014b8:	40023800 	.word	0x40023800
 80014bc:	40012200 	.word	0x40012200
 80014c0:	e000e100 	.word	0xe000e100
 80014c4:	4001224c 	.word	0x4001224c
 80014c8:	2000048c 	.word	0x2000048c

080014cc <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 80014cc:	4b1b      	ldr	r3, [pc, #108]	; (800153c <DMA2_Stream1_IRQHandler+0x70>)
 80014ce:	681a      	ldr	r2, [r3, #0]
 80014d0:	0511      	lsls	r1, r2, #20
 80014d2:	d400      	bmi.n	80014d6 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 80014d4:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d6:	4a1a      	ldr	r2, [pc, #104]	; (8001540 <DMA2_Stream1_IRQHandler+0x74>)
 80014d8:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80014dc:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80014e0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014e4:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e8:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 80014ec:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014ee:	f022 0201 	bic.w	r2, r2, #1
 80014f2:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80014f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014f6:	07d2      	lsls	r2, r2, #31
 80014f8:	d4fc      	bmi.n	80014f4 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014fa:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001500:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001504:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001506:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001508:	490e      	ldr	r1, [pc, #56]	; (8001544 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800150a:	f023 0301 	bic.w	r3, r3, #1
 800150e:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001510:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001512:	4b0d      	ldr	r3, [pc, #52]	; (8001548 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001514:	f020 0001 	bic.w	r0, r0, #1
 8001518:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800151a:	6888      	ldr	r0, [r1, #8]
 800151c:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001520:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001522:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001524:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001528:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 800152a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800152c:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001530:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001532:	6813      	ldr	r3, [r2, #0]
 8001534:	f023 0301 	bic.w	r3, r3, #1
 8001538:	6013      	str	r3, [r2, #0]
}
 800153a:	4770      	bx	lr
 800153c:	40026400 	.word	0x40026400
 8001540:	e000e100 	.word	0xe000e100
 8001544:	40012200 	.word	0x40012200
 8001548:	40023800 	.word	0x40023800

0800154c <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 800154c:	b510      	push	{r4, lr}
        buffer[i] = 0;
 800154e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001552:	2100      	movs	r1, #0
 8001554:	480f      	ldr	r0, [pc, #60]	; (8001594 <MEAS_start_measure+0x48>)
 8001556:	f02a fc88 	bl	802be6a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 800155a:	f7ff ff3d 	bl	80013d8 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800155e:	4a0e      	ldr	r2, [pc, #56]	; (8001598 <MEAS_start_measure+0x4c>)
 8001560:	490e      	ldr	r1, [pc, #56]	; (800159c <MEAS_start_measure+0x50>)
 8001562:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001564:	480e      	ldr	r0, [pc, #56]	; (80015a0 <MEAS_start_measure+0x54>)
 8001566:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800156a:	f043 0301 	orr.w	r3, r3, #1
 800156e:	6293      	str	r3, [r2, #40]	; 0x28
 8001570:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001574:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001576:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001578:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800157c:	f043 0301 	orr.w	r3, r3, #1
 8001580:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001582:	680b      	ldr	r3, [r1, #0]
 8001584:	f043 0301 	orr.w	r3, r3, #1
 8001588:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800158a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800158c:	07db      	lsls	r3, r3, #31
 800158e:	d4fc      	bmi.n	800158a <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001590:	4800      	ldr	r0, [pc, #0]	; (8001594 <MEAS_start_measure+0x48>)
 8001592:	bd10      	pop	{r4, pc}
 8001594:	2000048c 	.word	0x2000048c
 8001598:	40026400 	.word	0x40026400
 800159c:	e000e100 	.word	0xe000e100
 80015a0:	40012200 	.word	0x40012200

080015a4 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 80015a4:	2004      	movs	r0, #4
 80015a6:	4770      	bx	lr

080015a8 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 80015a8:	2040      	movs	r0, #64	; 0x40
 80015aa:	4770      	bx	lr

080015ac <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 80015ac:	f44f 7020 	mov.w	r0, #640	; 0x280
 80015b0:	4770      	bx	lr
 80015b2:	bf00      	nop

080015b4 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80015b4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80015b6:	4b0e      	ldr	r3, [pc, #56]	; (80015f0 <HAL_MspInit+0x3c>)
 80015b8:	2200      	movs	r2, #0
 80015ba:	9200      	str	r2, [sp, #0]
 80015bc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80015be:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80015c2:	6459      	str	r1, [r3, #68]	; 0x44
 80015c4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80015c6:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80015ca:	9000      	str	r0, [sp, #0]
 80015cc:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015ce:	9201      	str	r2, [sp, #4]
 80015d0:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80015d2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80015d6:	6418      	str	r0, [r3, #64]	; 0x40
 80015d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015de:	9301      	str	r3, [sp, #4]
 80015e0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015e2:	210f      	movs	r1, #15
 80015e4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015e8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015ea:	f008 b9ef 	b.w	80099cc <HAL_NVIC_SetPriority>
 80015ee:	bf00      	nop
 80015f0:	40023800 	.word	0x40023800

080015f4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80015f4:	4b0b      	ldr	r3, [pc, #44]	; (8001624 <HAL_CRC_MspInit+0x30>)
 80015f6:	6802      	ldr	r2, [r0, #0]
 80015f8:	429a      	cmp	r2, r3
 80015fa:	d000      	beq.n	80015fe <HAL_CRC_MspInit+0xa>
 80015fc:	4770      	bx	lr
{
 80015fe:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001600:	2200      	movs	r2, #0
 8001602:	9201      	str	r2, [sp, #4]
 8001604:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001608:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800160c:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001610:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001616:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800161a:	9301      	str	r3, [sp, #4]
 800161c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800161e:	b002      	add	sp, #8
 8001620:	4770      	bx	lr
 8001622:	bf00      	nop
 8001624:	40023000 	.word	0x40023000

08001628 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001628:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 800162c:	4b2e      	ldr	r3, [pc, #184]	; (80016e8 <HAL_I2C_MspInit+0xc0>)
 800162e:	6802      	ldr	r2, [r0, #0]
{
 8001630:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001632:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001634:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001636:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800163a:	e9cd 4406 	strd	r4, r4, [sp, #24]
 800163e:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001640:	d002      	beq.n	8001648 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001642:	b00a      	add	sp, #40	; 0x28
 8001644:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001648:	4d28      	ldr	r5, [pc, #160]	; (80016ec <HAL_I2C_MspInit+0xc4>)
 800164a:	9401      	str	r4, [sp, #4]
 800164c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800164e:	4828      	ldr	r0, [pc, #160]	; (80016f0 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001650:	f043 0304 	orr.w	r3, r3, #4
 8001654:	632b      	str	r3, [r5, #48]	; 0x30
 8001656:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001658:	f003 0304 	and.w	r3, r3, #4
 800165c:	9301      	str	r3, [sp, #4]
 800165e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001660:	9402      	str	r4, [sp, #8]
 8001662:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001664:	f043 0301 	orr.w	r3, r3, #1
 8001668:	632b      	str	r3, [r5, #48]	; 0x30
 800166a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800166c:	f003 0301 	and.w	r3, r3, #1
 8001670:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001672:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001676:	f04f 0801 	mov.w	r8, #1
 800167a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800167e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001680:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001682:	2312      	movs	r3, #18
 8001684:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001688:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800168c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800168e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001690:	f008 fc0a 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001694:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001696:	f44f 7280 	mov.w	r2, #256	; 0x100
 800169a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800169c:	4815      	ldr	r0, [pc, #84]	; (80016f4 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800169e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80016a0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80016a4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016a8:	f008 fbfe 	bl	8009ea8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 80016ac:	9403      	str	r4, [sp, #12]
 80016ae:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80016b0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80016b4:	642b      	str	r3, [r5, #64]	; 0x40
 80016b6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80016b8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80016bc:	4622      	mov	r2, r4
 80016be:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80016c0:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80016c2:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80016c4:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80016c6:	f008 f981 	bl	80099cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80016ca:	2048      	movs	r0, #72	; 0x48
 80016cc:	f008 f9bc 	bl	8009a48 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80016d0:	6a2b      	ldr	r3, [r5, #32]
 80016d2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80016d6:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80016d8:	6a2b      	ldr	r3, [r5, #32]
 80016da:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80016de:	622b      	str	r3, [r5, #32]
}
 80016e0:	b00a      	add	sp, #40	; 0x28
 80016e2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80016e6:	bf00      	nop
 80016e8:	40005c00 	.word	0x40005c00
 80016ec:	40023800 	.word	0x40023800
 80016f0:	40020800 	.word	0x40020800
 80016f4:	40020000 	.word	0x40020000

080016f8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80016f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016fc:	4604      	mov	r4, r0
 80016fe:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001700:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001702:	2230      	movs	r2, #48	; 0x30
 8001704:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001706:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800170a:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800170e:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001710:	f02a fbab 	bl	802be6a <memset>
  if(hltdc->Instance==LTDC)
 8001714:	4b67      	ldr	r3, [pc, #412]	; (80018b4 <HAL_LTDC_MspInit+0x1bc>)
 8001716:	6822      	ldr	r2, [r4, #0]
 8001718:	429a      	cmp	r2, r3
 800171a:	d002      	beq.n	8001722 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800171c:	b01a      	add	sp, #104	; 0x68
 800171e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001722:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001724:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001726:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001728:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800172a:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800172c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001730:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001732:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001734:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001736:	f00a fe21 	bl	800c37c <HAL_RCCEx_PeriphCLKConfig>
 800173a:	2800      	cmp	r0, #0
 800173c:	f040 80b7 	bne.w	80018ae <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001740:	4b5d      	ldr	r3, [pc, #372]	; (80018b8 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001742:	485e      	ldr	r0, [pc, #376]	; (80018bc <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001744:	2400      	movs	r4, #0
 8001746:	9401      	str	r4, [sp, #4]
 8001748:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800174a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800174e:	645a      	str	r2, [r3, #68]	; 0x44
 8001750:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001752:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001756:	9201      	str	r2, [sp, #4]
 8001758:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800175a:	9402      	str	r4, [sp, #8]
 800175c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800175e:	f042 0220 	orr.w	r2, r2, #32
 8001762:	631a      	str	r2, [r3, #48]	; 0x30
 8001764:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001766:	f002 0220 	and.w	r2, r2, #32
 800176a:	9202      	str	r2, [sp, #8]
 800176c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800176e:	9403      	str	r4, [sp, #12]
 8001770:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001772:	f042 0201 	orr.w	r2, r2, #1
 8001776:	631a      	str	r2, [r3, #48]	; 0x30
 8001778:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800177a:	f002 0201 	and.w	r2, r2, #1
 800177e:	9203      	str	r2, [sp, #12]
 8001780:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001782:	9404      	str	r4, [sp, #16]
 8001784:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001786:	f042 0202 	orr.w	r2, r2, #2
 800178a:	631a      	str	r2, [r3, #48]	; 0x30
 800178c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800178e:	f002 0202 	and.w	r2, r2, #2
 8001792:	9204      	str	r2, [sp, #16]
 8001794:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001796:	9405      	str	r4, [sp, #20]
 8001798:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800179a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800179e:	631a      	str	r2, [r3, #48]	; 0x30
 80017a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017a2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80017a6:	9205      	str	r2, [sp, #20]
 80017a8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80017aa:	9406      	str	r4, [sp, #24]
 80017ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017ae:	f042 0204 	orr.w	r2, r2, #4
 80017b2:	631a      	str	r2, [r3, #48]	; 0x30
 80017b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017b6:	f002 0204 	and.w	r2, r2, #4
 80017ba:	9206      	str	r2, [sp, #24]
 80017bc:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017be:	9407      	str	r4, [sp, #28]
 80017c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017c2:	f042 0208 	orr.w	r2, r2, #8
 80017c6:	631a      	str	r2, [r3, #48]	; 0x30
 80017c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ca:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017ce:	2600      	movs	r6, #0
 80017d0:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017d2:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017d4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017d6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017d8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80017dc:	2302      	movs	r3, #2
 80017de:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017e2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017e6:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017e8:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017ea:	f008 fb5d 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017ee:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017f0:	f641 0258 	movw	r2, #6232	; 0x1858
 80017f4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017f6:	4832      	ldr	r0, [pc, #200]	; (80018c0 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017f8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017fa:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017fe:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001802:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001806:	f008 fb4f 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800180a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800180c:	2203      	movs	r2, #3
 800180e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001810:	482c      	ldr	r0, [pc, #176]	; (80018c4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001812:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001816:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800181a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800181e:	f008 fb43 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001822:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001824:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001828:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800182a:	4826      	ldr	r0, [pc, #152]	; (80018c4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800182c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800182e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001832:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001836:	f008 fb37 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800183a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800183c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001840:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001842:	4821      	ldr	r0, [pc, #132]	; (80018c8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001844:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001846:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800184a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800184e:	f008 fb2b 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001852:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001854:	22c0      	movs	r2, #192	; 0xc0
 8001856:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001858:	481c      	ldr	r0, [pc, #112]	; (80018cc <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800185a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800185c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001860:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001864:	f008 fb20 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001868:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800186a:	2208      	movs	r2, #8
 800186c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800186e:	4818      	ldr	r0, [pc, #96]	; (80018d0 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001870:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001872:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001876:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800187a:	f008 fb15 	bl	8009ea8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800187e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001880:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001882:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001886:	4810      	ldr	r0, [pc, #64]	; (80018c8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001888:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800188c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001890:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001894:	f008 fb08 	bl	8009ea8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001898:	4622      	mov	r2, r4
 800189a:	2105      	movs	r1, #5
 800189c:	2058      	movs	r0, #88	; 0x58
 800189e:	f008 f895 	bl	80099cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80018a2:	2058      	movs	r0, #88	; 0x58
 80018a4:	f008 f8d0 	bl	8009a48 <HAL_NVIC_EnableIRQ>
}
 80018a8:	b01a      	add	sp, #104	; 0x68
 80018aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80018ae:	f7ff fd39 	bl	8001324 <Error_Handler>
 80018b2:	e745      	b.n	8001740 <HAL_LTDC_MspInit+0x48>
 80018b4:	40016800 	.word	0x40016800
 80018b8:	40023800 	.word	0x40023800
 80018bc:	40021400 	.word	0x40021400
 80018c0:	40020000 	.word	0x40020000
 80018c4:	40020400 	.word	0x40020400
 80018c8:	40021800 	.word	0x40021800
 80018cc:	40020800 	.word	0x40020800
 80018d0:	40020c00 	.word	0x40020c00
 80018d4:	00000000 	.word	0x00000000

080018d8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80018d8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80018da:	4a1b      	ldr	r2, [pc, #108]	; (8001948 <HAL_SPI_MspInit+0x70>)
 80018dc:	6801      	ldr	r1, [r0, #0]
{
 80018de:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018e0:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80018e2:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018e4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80018e8:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80018ec:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80018ee:	d001      	beq.n	80018f4 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80018f0:	b008      	add	sp, #32
 80018f2:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80018f4:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80018f8:	9300      	str	r3, [sp, #0]
 80018fa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018fc:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001900:	6450      	str	r0, [r2, #68]	; 0x44
 8001902:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001904:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001908:	9000      	str	r0, [sp, #0]
 800190a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800190c:	9301      	str	r3, [sp, #4]
 800190e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001910:	480e      	ldr	r0, [pc, #56]	; (800194c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001912:	f043 0320 	orr.w	r3, r3, #32
 8001916:	6313      	str	r3, [r2, #48]	; 0x30
 8001918:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800191a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001940 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800191e:	f003 0320 	and.w	r3, r3, #32
 8001922:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001924:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001926:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001928:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800192a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800192e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001932:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001934:	f008 fab8 	bl	8009ea8 <HAL_GPIO_Init>
}
 8001938:	b008      	add	sp, #32
 800193a:	bd10      	pop	{r4, pc}
 800193c:	f3af 8000 	nop.w
 8001940:	00000380 	.word	0x00000380
 8001944:	00000002 	.word	0x00000002
 8001948:	40015000 	.word	0x40015000
 800194c:	40021400 	.word	0x40021400

08001950 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001950:	4a24      	ldr	r2, [pc, #144]	; (80019e4 <HAL_TIM_Base_MspInit+0x94>)
 8001952:	6803      	ldr	r3, [r0, #0]
 8001954:	4293      	cmp	r3, r2
{
 8001956:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM1)
 8001958:	d019      	beq.n	800198e <HAL_TIM_Base_MspInit+0x3e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800195a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800195e:	d007      	beq.n	8001970 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001960:	4a21      	ldr	r2, [pc, #132]	; (80019e8 <HAL_TIM_Base_MspInit+0x98>)
 8001962:	4293      	cmp	r3, r2
 8001964:	d021      	beq.n	80019aa <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 8001966:	4a21      	ldr	r2, [pc, #132]	; (80019ec <HAL_TIM_Base_MspInit+0x9c>)
 8001968:	4293      	cmp	r3, r2
 800196a:	d02c      	beq.n	80019c6 <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 800196c:	b004      	add	sp, #16
 800196e:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001970:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8001974:	2200      	movs	r2, #0
 8001976:	9201      	str	r2, [sp, #4]
 8001978:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800197a:	f042 0201 	orr.w	r2, r2, #1
 800197e:	641a      	str	r2, [r3, #64]	; 0x40
 8001980:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001982:	f003 0301 	and.w	r3, r3, #1
 8001986:	9301      	str	r3, [sp, #4]
 8001988:	9b01      	ldr	r3, [sp, #4]
}
 800198a:	b004      	add	sp, #16
 800198c:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 800198e:	4b18      	ldr	r3, [pc, #96]	; (80019f0 <HAL_TIM_Base_MspInit+0xa0>)
 8001990:	2200      	movs	r2, #0
 8001992:	9200      	str	r2, [sp, #0]
 8001994:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001996:	f042 0201 	orr.w	r2, r2, #1
 800199a:	645a      	str	r2, [r3, #68]	; 0x44
 800199c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800199e:	f003 0301 	and.w	r3, r3, #1
 80019a2:	9300      	str	r3, [sp, #0]
 80019a4:	9b00      	ldr	r3, [sp, #0]
}
 80019a6:	b004      	add	sp, #16
 80019a8:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 80019aa:	4b11      	ldr	r3, [pc, #68]	; (80019f0 <HAL_TIM_Base_MspInit+0xa0>)
 80019ac:	2200      	movs	r2, #0
 80019ae:	9202      	str	r2, [sp, #8]
 80019b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80019b2:	f042 0202 	orr.w	r2, r2, #2
 80019b6:	641a      	str	r2, [r3, #64]	; 0x40
 80019b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ba:	f003 0302 	and.w	r3, r3, #2
 80019be:	9302      	str	r3, [sp, #8]
 80019c0:	9b02      	ldr	r3, [sp, #8]
}
 80019c2:	b004      	add	sp, #16
 80019c4:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 80019c6:	4b0a      	ldr	r3, [pc, #40]	; (80019f0 <HAL_TIM_Base_MspInit+0xa0>)
 80019c8:	2200      	movs	r2, #0
 80019ca:	9203      	str	r2, [sp, #12]
 80019cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80019ce:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80019d2:	641a      	str	r2, [r3, #64]	; 0x40
 80019d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80019da:	9303      	str	r3, [sp, #12]
 80019dc:	9b03      	ldr	r3, [sp, #12]
}
 80019de:	b004      	add	sp, #16
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	40010000 	.word	0x40010000
 80019e8:	40000400 	.word	0x40000400
 80019ec:	40002000 	.word	0x40002000
 80019f0:	40023800 	.word	0x40023800
 80019f4:	00000000 	.word	0x00000000

080019f8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80019f8:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM14)
 80019fa:	4a15      	ldr	r2, [pc, #84]	; (8001a50 <HAL_TIM_MspPostInit+0x58>)
 80019fc:	6801      	ldr	r1, [r0, #0]
{
 80019fe:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a00:	2300      	movs	r3, #0
  if(htim->Instance==TIM14)
 8001a02:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a04:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001a08:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001a0c:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM14)
 8001a0e:	d002      	beq.n	8001a16 <HAL_TIM_MspPostInit+0x1e>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8001a10:	b009      	add	sp, #36	; 0x24
 8001a12:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a16:	f502 3206 	add.w	r2, r2, #137216	; 0x21800
 8001a1a:	9301      	str	r3, [sp, #4]
 8001a1c:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a1e:	480d      	ldr	r0, [pc, #52]	; (8001a54 <HAL_TIM_MspPostInit+0x5c>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a20:	f043 0301 	orr.w	r3, r3, #1
 8001a24:	6313      	str	r3, [r2, #48]	; 0x30
 8001a26:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a28:	ed9f 7b07 	vldr	d7, [pc, #28]	; 8001a48 <HAL_TIM_MspPostInit+0x50>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a2c:	f003 0301 	and.w	r3, r3, #1
 8001a30:	9301      	str	r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a32:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001a34:	2309      	movs	r3, #9
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a36:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a3a:	9a01      	ldr	r2, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001a3c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a3e:	f008 fa33 	bl	8009ea8 <HAL_GPIO_Init>
}
 8001a42:	b009      	add	sp, #36	; 0x24
 8001a44:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a48:	00000080 	.word	0x00000080
 8001a4c:	00000002 	.word	0x00000002
 8001a50:	40002000 	.word	0x40002000
 8001a54:	40020000 	.word	0x40020000

08001a58 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a58:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001a5a:	4b2b      	ldr	r3, [pc, #172]	; (8001b08 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a5c:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001a5e:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001a60:	2200      	movs	r2, #0
 8001a62:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001a64:	2c00      	cmp	r4, #0
 8001a66:	d14c      	bne.n	8001b02 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001a68:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a6a:	4a28      	ldr	r2, [pc, #160]	; (8001b0c <HAL_SDRAM_MspInit+0xb4>)
 8001a6c:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001a6e:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a70:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a72:	4827      	ldr	r0, [pc, #156]	; (8001b10 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a74:	433b      	orrs	r3, r7
 8001a76:	6393      	str	r3, [r2, #56]	; 0x38
 8001a78:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001a7a:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a7c:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a7e:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001a80:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a84:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a86:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001a88:	2302      	movs	r3, #2
 8001a8a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a8e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a92:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a94:	f008 fa08 	bl	8009ea8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a98:	481e      	ldr	r0, [pc, #120]	; (8001b14 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001a9a:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a9c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a9e:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aa0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001aa4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001aa8:	f008 f9fe 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001aac:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ab0:	4819      	ldr	r0, [pc, #100]	; (8001b18 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ab2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ab4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ab6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001aba:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001abe:	f008 f9f3 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ac2:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ac6:	4815      	ldr	r0, [pc, #84]	; (8001b1c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ac8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001aca:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001acc:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ad0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ad4:	f008 f9e8 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ad8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001adc:	4810      	ldr	r0, [pc, #64]	; (8001b20 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ade:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ae0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ae2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ae6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001aea:	f008 f9dd 	bl	8009ea8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001aee:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001af0:	480c      	ldr	r0, [pc, #48]	; (8001b24 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af2:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001af4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001af6:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001afa:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001afc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001afe:	f008 f9d3 	bl	8009ea8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001b02:	b009      	add	sp, #36	; 0x24
 8001b04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b06:	bf00      	nop
 8001b08:	2000088c 	.word	0x2000088c
 8001b0c:	40023800 	.word	0x40023800
 8001b10:	40021400 	.word	0x40021400
 8001b14:	40020800 	.word	0x40020800
 8001b18:	40021800 	.word	0x40021800
 8001b1c:	40021000 	.word	0x40021000
 8001b20:	40020c00 	.word	0x40020c00
 8001b24:	40020400 	.word	0x40020400

08001b28 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001b28:	b570      	push	{r4, r5, r6, lr}
 8001b2a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001b2c:	4b23      	ldr	r3, [pc, #140]	; (8001bbc <HAL_InitTick+0x94>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	9202      	str	r2, [sp, #8]
 8001b32:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001b34:	f042 0210 	orr.w	r2, r2, #16
 8001b38:	641a      	str	r2, [r3, #64]	; 0x40
 8001b3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b3c:	f003 0310 	and.w	r3, r3, #16
 8001b40:	9302      	str	r3, [sp, #8]
{
 8001b42:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b44:	a901      	add	r1, sp, #4
 8001b46:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001b48:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b4a:	f00a fbf5 	bl	800c338 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001b4e:	9b06      	ldr	r3, [sp, #24]
 8001b50:	b9d3      	cbnz	r3, 8001b88 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001b52:	f00a fbe1 	bl	800c318 <HAL_RCC_GetPCLK1Freq>
 8001b56:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b58:	4a19      	ldr	r2, [pc, #100]	; (8001bc0 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001b5a:	4c1a      	ldr	r4, [pc, #104]	; (8001bc4 <HAL_InitTick+0x9c>)
 8001b5c:	491a      	ldr	r1, [pc, #104]	; (8001bc8 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b5e:	fba2 2303 	umull	r2, r3, r2, r3
 8001b62:	0c9b      	lsrs	r3, r3, #18
 8001b64:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001b66:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001b68:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001b6c:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001b6e:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001b72:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b74:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b76:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001b78:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001b7a:	f00b fa0d 	bl	800cf98 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001b7e:	4606      	mov	r6, r0
 8001b80:	b130      	cbz	r0, 8001b90 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001b82:	4630      	mov	r0, r6
 8001b84:	b008      	add	sp, #32
 8001b86:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001b88:	f00a fbc6 	bl	800c318 <HAL_RCC_GetPCLK1Freq>
 8001b8c:	0043      	lsls	r3, r0, #1
 8001b8e:	e7e3      	b.n	8001b58 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001b90:	4620      	mov	r0, r4
 8001b92:	f00b fa8f 	bl	800d0b4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001b96:	4606      	mov	r6, r0
 8001b98:	2800      	cmp	r0, #0
 8001b9a:	d1f2      	bne.n	8001b82 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001b9c:	2036      	movs	r0, #54	; 0x36
 8001b9e:	f007 ff53 	bl	8009a48 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001ba2:	2d0f      	cmp	r5, #15
 8001ba4:	d901      	bls.n	8001baa <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001ba6:	2601      	movs	r6, #1
 8001ba8:	e7eb      	b.n	8001b82 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001baa:	4632      	mov	r2, r6
 8001bac:	4629      	mov	r1, r5
 8001bae:	2036      	movs	r0, #54	; 0x36
 8001bb0:	f007 ff0c 	bl	80099cc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001bb4:	4b05      	ldr	r3, [pc, #20]	; (8001bcc <HAL_InitTick+0xa4>)
 8001bb6:	601d      	str	r5, [r3, #0]
 8001bb8:	e7e3      	b.n	8001b82 <HAL_InitTick+0x5a>
 8001bba:	bf00      	nop
 8001bbc:	40023800 	.word	0x40023800
 8001bc0:	431bde83 	.word	0x431bde83
 8001bc4:	20000890 	.word	0x20000890
 8001bc8:	40001000 	.word	0x40001000
 8001bcc:	20000080 	.word	0x20000080

08001bd0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001bd0:	4770      	bx	lr
 8001bd2:	bf00      	nop

08001bd4 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001bd4:	e7fe      	b.n	8001bd4 <HardFault_Handler>
 8001bd6:	bf00      	nop

08001bd8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001bd8:	e7fe      	b.n	8001bd8 <MemManage_Handler>
 8001bda:	bf00      	nop

08001bdc <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001bdc:	e7fe      	b.n	8001bdc <BusFault_Handler>
 8001bde:	bf00      	nop

08001be0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001be0:	e7fe      	b.n	8001be0 <UsageFault_Handler>
 8001be2:	bf00      	nop

08001be4 <DebugMon_Handler>:
 8001be4:	4770      	bx	lr
 8001be6:	bf00      	nop

08001be8 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001be8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001bea:	20c8      	movs	r0, #200	; 0xc8
 8001bec:	f007 feca 	bl	8009984 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001bf0:	4804      	ldr	r0, [pc, #16]	; (8001c04 <EXTI3_IRQHandler+0x1c>)
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	2120      	movs	r1, #32
 8001bf6:	f008 fa9b 	bl	800a130 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001bfa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001bfe:	2008      	movs	r0, #8
 8001c00:	f008 baa6 	b.w	800a150 <HAL_GPIO_EXTI_IRQHandler>
 8001c04:	40021000 	.word	0x40021000

08001c08 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001c08:	4801      	ldr	r0, [pc, #4]	; (8001c10 <TIM6_DAC_IRQHandler+0x8>)
 8001c0a:	f00b bde3 	b.w	800d7d4 <HAL_TIM_IRQHandler>
 8001c0e:	bf00      	nop
 8001c10:	20000890 	.word	0x20000890

08001c14 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001c14:	4801      	ldr	r0, [pc, #4]	; (8001c1c <I2C3_EV_IRQHandler+0x8>)
 8001c16:	f009 b9fb 	b.w	800b010 <HAL_I2C_EV_IRQHandler>
 8001c1a:	bf00      	nop
 8001c1c:	200001e4 	.word	0x200001e4

08001c20 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001c20:	4801      	ldr	r0, [pc, #4]	; (8001c28 <LTDC_IRQHandler+0x8>)
 8001c22:	f009 bf6f 	b.w	800bb04 <HAL_LTDC_IRQHandler>
 8001c26:	bf00      	nop
 8001c28:	20000238 	.word	0x20000238

08001c2c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001c2c:	2001      	movs	r0, #1
 8001c2e:	4770      	bx	lr

08001c30 <_kill>:

int _kill(int pid, int sig)
{
 8001c30:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001c32:	f02a fa13 	bl	802c05c <__errno>
 8001c36:	2316      	movs	r3, #22
 8001c38:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001c3a:	f04f 30ff 	mov.w	r0, #4294967295
 8001c3e:	bd08      	pop	{r3, pc}

08001c40 <_exit>:

void _exit (int status)
{
 8001c40:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001c42:	f02a fa0b 	bl	802c05c <__errno>
 8001c46:	2316      	movs	r3, #22
 8001c48:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001c4a:	e7fe      	b.n	8001c4a <_exit+0xa>

08001c4c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001c4c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c4e:	1e16      	subs	r6, r2, #0
 8001c50:	dd07      	ble.n	8001c62 <_read+0x16>
 8001c52:	460c      	mov	r4, r1
 8001c54:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001c56:	f3af 8000 	nop.w
 8001c5a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c5e:	42a5      	cmp	r5, r4
 8001c60:	d1f9      	bne.n	8001c56 <_read+0xa>
	}

return len;
}
 8001c62:	4630      	mov	r0, r6
 8001c64:	bd70      	pop	{r4, r5, r6, pc}
 8001c66:	bf00      	nop

08001c68 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001c68:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c6a:	1e16      	subs	r6, r2, #0
 8001c6c:	dd07      	ble.n	8001c7e <_write+0x16>
 8001c6e:	460c      	mov	r4, r1
 8001c70:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001c72:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001c76:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c7a:	42ac      	cmp	r4, r5
 8001c7c:	d1f9      	bne.n	8001c72 <_write+0xa>
	}
	return len;
}
 8001c7e:	4630      	mov	r0, r6
 8001c80:	bd70      	pop	{r4, r5, r6, pc}
 8001c82:	bf00      	nop

08001c84 <_close>:

int _close(int file)
{
	return -1;
}
 8001c84:	f04f 30ff 	mov.w	r0, #4294967295
 8001c88:	4770      	bx	lr
 8001c8a:	bf00      	nop

08001c8c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001c8c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001c90:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001c92:	2000      	movs	r0, #0
 8001c94:	4770      	bx	lr
 8001c96:	bf00      	nop

08001c98 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001c98:	2001      	movs	r0, #1
 8001c9a:	4770      	bx	lr

08001c9c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001c9c:	2000      	movs	r0, #0
 8001c9e:	4770      	bx	lr

08001ca0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001ca0:	4a0b      	ldr	r2, [pc, #44]	; (8001cd0 <_sbrk+0x30>)
{
 8001ca2:	b508      	push	{r3, lr}
 8001ca4:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ca6:	6810      	ldr	r0, [r2, #0]
 8001ca8:	b128      	cbz	r0, 8001cb6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001caa:	4403      	add	r3, r0
 8001cac:	4669      	mov	r1, sp
 8001cae:	428b      	cmp	r3, r1
 8001cb0:	d807      	bhi.n	8001cc2 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001cb2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001cb4:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001cb6:	4807      	ldr	r0, [pc, #28]	; (8001cd4 <_sbrk+0x34>)
 8001cb8:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001cba:	4403      	add	r3, r0
 8001cbc:	4669      	mov	r1, sp
 8001cbe:	428b      	cmp	r3, r1
 8001cc0:	d9f7      	bls.n	8001cb2 <_sbrk+0x12>
		errno = ENOMEM;
 8001cc2:	f02a f9cb 	bl	802c05c <__errno>
 8001cc6:	230c      	movs	r3, #12
 8001cc8:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001cca:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001cce:	bd08      	pop	{r3, pc}
 8001cd0:	200008d8 	.word	0x200008d8
 8001cd4:	20014470 	.word	0x20014470

08001cd8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001cd8:	4770      	bx	lr
 8001cda:	bf00      	nop

08001cdc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001cdc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001cde:	f000 fbab 	bl	8002438 <touchgfx_components_init>
  touchgfx_init();
}
 8001ce2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001ce6:	f000 bb33 	b.w	8002350 <touchgfx_init>
 8001cea:	bf00      	nop

08001cec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001cec:	f000 bba6 	b.w	800243c <touchgfx_taskEntry>

08001cf0 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001cf0:	4770      	bx	lr

08001cf2 <_ZN20STM32TouchControllerD0Ev>:
 8001cf2:	b510      	push	{r4, lr}
 8001cf4:	2104      	movs	r1, #4
 8001cf6:	4604      	mov	r4, r0
 8001cf8:	f029 f89f 	bl	802ae3a <_ZdlPvj>
 8001cfc:	4620      	mov	r0, r4
 8001cfe:	bd10      	pop	{r4, pc}

08001d00 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001d00:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001d02:	4b0c      	ldr	r3, [pc, #48]	; (8001d34 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001d04:	4c0c      	ldr	r4, [pc, #48]	; (8001d38 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001d06:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001d08:	4b0c      	ldr	r3, [pc, #48]	; (8001d3c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001d0a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001d0c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001d0e:	6863      	ldr	r3, [r4, #4]
 8001d10:	4798      	blx	r3
 8001d12:	f640 0311 	movw	r3, #2065	; 0x811
 8001d16:	4298      	cmp	r0, r3
 8001d18:	d10a      	bne.n	8001d30 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001d1a:	4d09      	ldr	r5, [pc, #36]	; (8001d40 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001d1c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001d1e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001d20:	2082      	movs	r0, #130	; 0x82
 8001d22:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001d24:	682b      	ldr	r3, [r5, #0]
 8001d26:	2082      	movs	r0, #130	; 0x82
 8001d28:	68db      	ldr	r3, [r3, #12]
 8001d2a:	4798      	blx	r3
 8001d2c:	2000      	movs	r0, #0
    }

    return ret;
}
 8001d2e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001d30:	2001      	movs	r0, #1
 8001d32:	e7fc      	b.n	8001d2e <_Z11BSP_TS_Inittt+0x2e>
 8001d34:	200008dc 	.word	0x200008dc
 8001d38:	20000050 	.word	0x20000050
 8001d3c:	200008de 	.word	0x200008de
 8001d40:	200008e0 	.word	0x200008e0

08001d44 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001d44:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001d48:	20f0      	movs	r0, #240	; 0xf0
 8001d4a:	f7ff bfd9 	b.w	8001d00 <_Z11BSP_TS_Inittt>
	...

08001d50 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001d50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001d52:	4d33      	ldr	r5, [pc, #204]	; (8001e20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001d54:	682b      	ldr	r3, [r5, #0]
{
 8001d56:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001d58:	691b      	ldr	r3, [r3, #16]
 8001d5a:	2082      	movs	r0, #130	; 0x82
 8001d5c:	4798      	blx	r3
 8001d5e:	b280      	uxth	r0, r0
 8001d60:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001d62:	2800      	cmp	r0, #0
 8001d64:	d04a      	beq.n	8001dfc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001d66:	682b      	ldr	r3, [r5, #0]
 8001d68:	f10d 0206 	add.w	r2, sp, #6
 8001d6c:	695b      	ldr	r3, [r3, #20]
 8001d6e:	a901      	add	r1, sp, #4
 8001d70:	2082      	movs	r0, #130	; 0x82
 8001d72:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001d74:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001d78:	f640 6274 	movw	r2, #3700	; 0xe74
 8001d7c:	4293      	cmp	r3, r2
 8001d7e:	d93f      	bls.n	8001e00 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001d80:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001d84:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001d88:	1ad2      	subs	r2, r2, r3
 8001d8a:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001d8c:	2a0a      	cmp	r2, #10
 8001d8e:	d93d      	bls.n	8001e0c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001d90:	230b      	movs	r3, #11
 8001d92:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001d96:	4b23      	ldr	r3, [pc, #140]	; (8001e24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001d98:	881b      	ldrh	r3, [r3, #0]
 8001d9a:	429a      	cmp	r2, r3
 8001d9c:	d901      	bls.n	8001da2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001d9e:	3b01      	subs	r3, #1
 8001da0:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001da2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001da6:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001daa:	428b      	cmp	r3, r1
 8001dac:	d830      	bhi.n	8001e10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001dae:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001db2:	330e      	adds	r3, #14
 8001db4:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001db6:	210f      	movs	r1, #15
 8001db8:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001dbc:	491a      	ldr	r1, [pc, #104]	; (8001e28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001dbe:	8809      	ldrh	r1, [r1, #0]
 8001dc0:	428b      	cmp	r3, r1
 8001dc2:	d901      	bls.n	8001dc8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001dc4:	3901      	subs	r1, #1
 8001dc6:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dc8:	4e18      	ldr	r6, [pc, #96]	; (8001e2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dca:	4d19      	ldr	r5, [pc, #100]	; (8001e30 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dcc:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dce:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dd0:	4283      	cmp	r3, r0
 8001dd2:	b281      	uxth	r1, r0
 8001dd4:	bf8c      	ite	hi
 8001dd6:	1a59      	subhi	r1, r3, r1
 8001dd8:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dda:	b2b8      	uxth	r0, r7
 8001ddc:	42ba      	cmp	r2, r7
 8001dde:	bf8c      	ite	hi
 8001de0:	1a10      	subhi	r0, r2, r0
 8001de2:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001de4:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001de6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001de8:	4401      	add	r1, r0
 8001dea:	2905      	cmp	r1, #5
        {
            _x = x;
 8001dec:	bfc8      	it	gt
 8001dee:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001df0:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001df2:	bfc8      	it	gt
 8001df4:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001df6:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001df8:	682b      	ldr	r3, [r5, #0]
 8001dfa:	80a3      	strh	r3, [r4, #4]
    }
}
 8001dfc:	b003      	add	sp, #12
 8001dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001e00:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001e02:	bf9c      	itt	ls
 8001e04:	23b4      	movls	r3, #180	; 0xb4
 8001e06:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001e0a:	e7bb      	b.n	8001d84 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	e7c8      	b.n	8001da2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001e10:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001e14:	3308      	adds	r3, #8
 8001e16:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001e18:	2b0e      	cmp	r3, #14
 8001e1a:	d8cc      	bhi.n	8001db6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	e7d3      	b.n	8001dc8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001e20:	200008e0 	.word	0x200008e0
 8001e24:	200008de 	.word	0x200008de
 8001e28:	200008dc 	.word	0x200008dc
 8001e2c:	200008e4 	.word	0x200008e4
 8001e30:	200008e8 	.word	0x200008e8

08001e34 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001e34:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001e36:	4668      	mov	r0, sp
{
 8001e38:	460d      	mov	r5, r1
 8001e3a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001e3c:	f7ff ff88 	bl	8001d50 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001e40:	f8bd 0000 	ldrh.w	r0, [sp]
 8001e44:	b148      	cbz	r0, 8001e5a <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001e46:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001e4a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001e4c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001e50:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001e52:	4b03      	ldr	r3, [pc, #12]	; (8001e60 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001e54:	223c      	movs	r2, #60	; 0x3c
 8001e56:	601a      	str	r2, [r3, #0]
        return true;
 8001e58:	2001      	movs	r0, #1
}
 8001e5a:	b003      	add	sp, #12
 8001e5c:	bd30      	pop	{r4, r5, pc}
 8001e5e:	bf00      	nop
 8001e60:	2000000c 	.word	0x2000000c

08001e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001e64:	b110      	cbz	r0, 8001e6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001e66:	2802      	cmp	r0, #2
 8001e68:	d009      	beq.n	8001e7e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001e6a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001e6c:	4b07      	ldr	r3, [pc, #28]	; (8001e8c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001e6e:	681a      	ldr	r2, [r3, #0]
 8001e70:	fab2 f282 	clz	r2, r2
 8001e74:	0952      	lsrs	r2, r2, #5
 8001e76:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001e78:	4805      	ldr	r0, [pc, #20]	; (8001e90 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001e7a:	f008 b959 	b.w	800a130 <HAL_GPIO_WritePin>
 8001e7e:	4b03      	ldr	r3, [pc, #12]	; (8001e8c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001e80:	689a      	ldr	r2, [r3, #8]
 8001e82:	fab2 f282 	clz	r2, r2
 8001e86:	0952      	lsrs	r2, r2, #5
 8001e88:	2110      	movs	r1, #16
 8001e8a:	e7f5      	b.n	8001e78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001e8c:	200008ec 	.word	0x200008ec
 8001e90:	40021000 	.word	0x40021000

08001e94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001e94:	b110      	cbz	r0, 8001e9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001e96:	2802      	cmp	r0, #2
 8001e98:	d009      	beq.n	8001eae <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001e9a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001e9c:	4b07      	ldr	r3, [pc, #28]	; (8001ebc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001e9e:	681a      	ldr	r2, [r3, #0]
 8001ea0:	3a00      	subs	r2, #0
 8001ea2:	bf18      	it	ne
 8001ea4:	2201      	movne	r2, #1
 8001ea6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001ea8:	4805      	ldr	r0, [pc, #20]	; (8001ec0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001eaa:	f008 b941 	b.w	800a130 <HAL_GPIO_WritePin>
 8001eae:	4b03      	ldr	r3, [pc, #12]	; (8001ebc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001eb0:	689a      	ldr	r2, [r3, #8]
 8001eb2:	3a00      	subs	r2, #0
 8001eb4:	bf18      	it	ne
 8001eb6:	2201      	movne	r2, #1
 8001eb8:	2110      	movs	r1, #16
 8001eba:	e7f5      	b.n	8001ea8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001ebc:	200008ec 	.word	0x200008ec
 8001ec0:	40021000 	.word	0x40021000

08001ec4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001ec4:	b110      	cbz	r0, 8001ecc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001ec6:	2802      	cmp	r0, #2
 8001ec8:	d004      	beq.n	8001ed4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001eca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001ecc:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ece:	4802      	ldr	r0, [pc, #8]	; (8001ed8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001ed0:	f008 b932 	b.w	800a138 <HAL_GPIO_TogglePin>
 8001ed4:	2110      	movs	r1, #16
 8001ed6:	e7fa      	b.n	8001ece <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001ed8:	40021000 	.word	0x40021000

08001edc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001edc:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001ede:	b130      	cbz	r0, 8001eee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001ee0:	2802      	cmp	r0, #2
 8001ee2:	d009      	beq.n	8001ef8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001ee4:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001ee6:	1e43      	subs	r3, r0, #1
 8001ee8:	4258      	negs	r0, r3
 8001eea:	4158      	adcs	r0, r3
 8001eec:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001eee:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ef0:	4802      	ldr	r0, [pc, #8]	; (8001efc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001ef2:	f008 f917 	bl	800a124 <HAL_GPIO_ReadPin>
        break;
 8001ef6:	e7f6      	b.n	8001ee6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ef8:	2110      	movs	r1, #16
 8001efa:	e7f9      	b.n	8001ef0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001efc:	40021000 	.word	0x40021000

08001f00 <_ZN8touchgfx4GPIO4initEv>:
{
 8001f00:	b570      	push	{r4, r5, r6, lr}
 8001f02:	4d08      	ldr	r5, [pc, #32]	; (8001f24 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001f04:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001f06:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001f08:	b2e0      	uxtb	r0, r4
 8001f0a:	f7ff ffe7 	bl	8001edc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001f0e:	b118      	cbz	r0, 8001f18 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001f10:	682b      	ldr	r3, [r5, #0]
 8001f12:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001f14:	bf18      	it	ne
 8001f16:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001f18:	3401      	adds	r4, #1
 8001f1a:	2c05      	cmp	r4, #5
 8001f1c:	f105 0504 	add.w	r5, r5, #4
 8001f20:	d1f2      	bne.n	8001f08 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001f22:	bd70      	pop	{r4, r5, r6, pc}
 8001f24:	200008ec 	.word	0x200008ec

08001f28 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001f28:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001f2a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001f2e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001f32:	4770      	bx	lr

08001f34 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001f34:	2000      	movs	r0, #0
 8001f36:	4770      	bx	lr

08001f38 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001f38:	4b03      	ldr	r3, [pc, #12]	; (8001f48 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001f3a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001f3c:	3900      	subs	r1, #0
 8001f3e:	bf18      	it	ne
 8001f40:	2101      	movne	r1, #1
 8001f42:	7019      	strb	r1, [r3, #0]
    }
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop
 8001f48:	20013833 	.word	0x20013833

08001f4c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001f4c:	2000      	movs	r0, #0
 8001f4e:	4770      	bx	lr

08001f50 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001f50:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001f52:	b10b      	cbz	r3, 8001f58 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001f54:	4608      	mov	r0, r1
 8001f56:	4718      	bx	r3
        }
    }
 8001f58:	4770      	bx	lr

08001f5a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001f5a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001f5e:	4770      	bx	lr

08001f60 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001f60:	6840      	ldr	r0, [r0, #4]
 8001f62:	6803      	ldr	r3, [r0, #0]
 8001f64:	699b      	ldr	r3, [r3, #24]
 8001f66:	4718      	bx	r3

08001f68 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001f68:	4770      	bx	lr

08001f6a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001f6a:	4770      	bx	lr

08001f6c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001f6c:	4770      	bx	lr
	...

08001f70 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001f70:	b510      	push	{r4, lr}
 8001f72:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001f74:	f000 fb4e 	bl	8002614 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001f78:	6823      	ldr	r3, [r4, #0]
 8001f7a:	4903      	ldr	r1, [pc, #12]	; (8001f88 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001f7c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001f80:	4620      	mov	r0, r4
}
 8001f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001f86:	4718      	bx	r3
 8001f88:	d0000000 	.word	0xd0000000

08001f8c <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001f8c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001f8e:	6803      	ldr	r3, [r0, #0]
{
 8001f90:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001f92:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001f96:	4798      	blx	r3
    enableInterrupts();
 8001f98:	6823      	ldr	r3, [r4, #0]
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001f9e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001fa0:	f000 f8ec 	bl	800217c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001fa4:	6823      	ldr	r3, [r4, #0]
 8001fa6:	4620      	mov	r0, r4
 8001fa8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001faa:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001fac:	2029      	movs	r0, #41	; 0x29
 8001fae:	f7ff f945 	bl	800123c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001fb2:	f000 f8e3 	bl	800217c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001fb6:	6823      	ldr	r3, [r4, #0]
 8001fb8:	4620      	mov	r0, r4
 8001fba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001fbc:	4798      	blx	r3
    for (;;)
 8001fbe:	e7f8      	b.n	8001fb2 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001fc0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001fc0:	b510      	push	{r4, lr}
 8001fc2:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001fc4:	f010 fa4a 	bl	801245c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001fc8:	6823      	ldr	r3, [r4, #0]
 8001fca:	4620      	mov	r0, r4
 8001fcc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001fd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001fd4:	4718      	bx	r3

08001fd6 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001fd6:	f000 bb0f 	b.w	80025f8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001fda <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001fda:	f000 bb13 	b.w	8002604 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001fde <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001fde:	f000 bb37 	b.w	8002650 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001fe2 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001fe2:	f000 badf 	b.w	80025a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001fe6 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001fe6:	f000 bae5 	b.w	80025b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001fea <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001fea:	f000 bb3d 	b.w	8002668 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001fee <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001fee:	f000 bae9 	b.w	80025c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001ff2 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001ff2:	f00f bc9e 	b.w	8011932 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001ff6 <_ZN11TouchGFXHALD0Ev>:
 8001ff6:	b510      	push	{r4, lr}
 8001ff8:	217c      	movs	r1, #124	; 0x7c
 8001ffa:	4604      	mov	r4, r0
 8001ffc:	f028 ff1d 	bl	802ae3a <_ZdlPvj>
 8002000:	4620      	mov	r0, r4
 8002002:	bd10      	pop	{r4, pc}

08002004 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002004:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002008:	b11b      	cbz	r3, 8002012 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800200a:	6840      	ldr	r0, [r0, #4]
 800200c:	6803      	ldr	r3, [r0, #0]
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	4718      	bx	r3
    }
 8002012:	4618      	mov	r0, r3
 8002014:	4770      	bx	lr
	...

08002018 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002018:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800201a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800201e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002022:	4b0c      	ldr	r3, [pc, #48]	; (8002054 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002024:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002026:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002028:	d009      	beq.n	800203e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800202a:	b93a      	cbnz	r2, 800203c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800202c:	4a0a      	ldr	r2, [pc, #40]	; (8002058 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800202e:	490b      	ldr	r1, [pc, #44]	; (800205c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002030:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002032:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002034:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002036:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002038:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800203a:	701a      	strb	r2, [r3, #0]
    }
 800203c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800203e:	2a00      	cmp	r2, #0
 8002040:	d0fc      	beq.n	800203c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002042:	4a05      	ldr	r2, [pc, #20]	; (8002058 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002044:	4905      	ldr	r1, [pc, #20]	; (800205c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002046:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002048:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800204a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800204c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800204e:	2200      	movs	r2, #0
 8002050:	e7f3      	b.n	800203a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002052:	bf00      	nop
 8002054:	2001382c 	.word	0x2001382c
 8002058:	20013828 	.word	0x20013828
 800205c:	2001382a 	.word	0x2001382a

08002060 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002060:	b570      	push	{r4, r5, r6, lr}
 8002062:	460d      	mov	r5, r1
 8002064:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002066:	b935      	cbnz	r5, 8002076 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002068:	4b09      	ldr	r3, [pc, #36]	; (8002090 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800206a:	4a0a      	ldr	r2, [pc, #40]	; (8002094 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 800206c:	480a      	ldr	r0, [pc, #40]	; (8002098 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800206e:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002072:	f029 fcf5 	bl	802ba60 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002076:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800207a:	4b08      	ldr	r3, [pc, #32]	; (800209c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800207c:	3a00      	subs	r2, #0
 800207e:	bf18      	it	ne
 8002080:	2201      	movne	r2, #1
 8002082:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002084:	6803      	ldr	r3, [r0, #0]
    }
 8002086:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800208a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800208e:	4718      	bx	r3
 8002090:	0802cc88 	.word	0x0802cc88
 8002094:	0802ccc0 	.word	0x0802ccc0
 8002098:	0802cd0e 	.word	0x0802cd0e
 800209c:	20013832 	.word	0x20013832

080020a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80020a0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80020a2:	4b09      	ldr	r3, [pc, #36]	; (80020c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80020a4:	881b      	ldrh	r3, [r3, #0]
 80020a6:	428b      	cmp	r3, r1
 80020a8:	d803      	bhi.n	80020b2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80020aa:	4b08      	ldr	r3, [pc, #32]	; (80020cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80020ac:	881b      	ldrh	r3, [r3, #0]
 80020ae:	4293      	cmp	r3, r2
 80020b0:	d905      	bls.n	80020be <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80020b2:	4b07      	ldr	r3, [pc, #28]	; (80020d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80020b4:	4a07      	ldr	r2, [pc, #28]	; (80020d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80020b6:	4808      	ldr	r0, [pc, #32]	; (80020d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80020b8:	219e      	movs	r1, #158	; 0x9e
 80020ba:	f029 fcd1 	bl	802ba60 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80020be:	4b07      	ldr	r3, [pc, #28]	; (80020dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80020c0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80020c2:	4b07      	ldr	r3, [pc, #28]	; (80020e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80020c4:	801a      	strh	r2, [r3, #0]
    }
 80020c6:	bd08      	pop	{r3, pc}
 80020c8:	20013828 	.word	0x20013828
 80020cc:	2001382a 	.word	0x2001382a
 80020d0:	0802cd53 	.word	0x0802cd53
 80020d4:	0802cdb6 	.word	0x0802cdb6
 80020d8:	0802cd0e 	.word	0x0802cd0e
 80020dc:	2001382e 	.word	0x2001382e
 80020e0:	20013830 	.word	0x20013830

080020e4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80020e4:	2101      	movs	r1, #1
{
 80020e6:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80020e8:	2200      	movs	r2, #0
 80020ea:	4608      	mov	r0, r1
 80020ec:	f00b fdb4 	bl	800dc58 <osSemaphoreNew>
 80020f0:	4b0a      	ldr	r3, [pc, #40]	; (800211c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80020f2:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80020f4:	b928      	cbnz	r0, 8002102 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80020f6:	4b0a      	ldr	r3, [pc, #40]	; (8002120 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80020f8:	4a0a      	ldr	r2, [pc, #40]	; (8002124 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80020fa:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80020fc:	480a      	ldr	r0, [pc, #40]	; (8002128 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80020fe:	f029 fcaf 	bl	802ba60 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002102:	2200      	movs	r2, #0
 8002104:	2104      	movs	r1, #4
 8002106:	2001      	movs	r0, #1
 8002108:	f00b fe5a 	bl	800ddc0 <osMessageQueueNew>
 800210c:	4b07      	ldr	r3, [pc, #28]	; (800212c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800210e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002110:	b918      	cbnz	r0, 800211a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002112:	4b07      	ldr	r3, [pc, #28]	; (8002130 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002114:	4a03      	ldr	r2, [pc, #12]	; (8002124 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002116:	212c      	movs	r1, #44	; 0x2c
 8002118:	e7f0      	b.n	80020fc <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800211a:	bd08      	pop	{r3, pc}
 800211c:	20000900 	.word	0x20000900
 8002120:	0802ced4 	.word	0x0802ced4
 8002124:	0802cf1d 	.word	0x0802cf1d
 8002128:	0802cf4c 	.word	0x0802cf4c
 800212c:	200008fc 	.word	0x200008fc
 8002130:	0802cfc6 	.word	0x0802cfc6

08002134 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002134:	4b02      	ldr	r3, [pc, #8]	; (8002140 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002136:	f04f 31ff 	mov.w	r1, #4294967295
 800213a:	6818      	ldr	r0, [r3, #0]
 800213c:	f00b bde0 	b.w	800dd00 <osSemaphoreAcquire>
 8002140:	20000900 	.word	0x20000900

08002144 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002144:	4b01      	ldr	r3, [pc, #4]	; (800214c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002146:	6818      	ldr	r0, [r3, #0]
 8002148:	f00b be0e 	b.w	800dd68 <osSemaphoreRelease>
 800214c:	20000900 	.word	0x20000900

08002150 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002150:	4b02      	ldr	r3, [pc, #8]	; (800215c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002152:	2100      	movs	r1, #0
 8002154:	6818      	ldr	r0, [r3, #0]
 8002156:	f00b bdd3 	b.w	800dd00 <osSemaphoreAcquire>
 800215a:	bf00      	nop
 800215c:	20000900 	.word	0x20000900

08002160 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002160:	f7ff bff0 	b.w	8002144 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002164 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002164:	4803      	ldr	r0, [pc, #12]	; (8002174 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002166:	4904      	ldr	r1, [pc, #16]	; (8002178 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002168:	6800      	ldr	r0, [r0, #0]
 800216a:	2300      	movs	r3, #0
 800216c:	461a      	mov	r2, r3
 800216e:	f00b be61 	b.w	800de34 <osMessageQueuePut>
 8002172:	bf00      	nop
 8002174:	200008fc 	.word	0x200008fc
 8002178:	20000010 	.word	0x20000010

0800217c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800217c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800217e:	4c08      	ldr	r4, [pc, #32]	; (80021a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002180:	2300      	movs	r3, #0
 8002182:	461a      	mov	r2, r3
 8002184:	a901      	add	r1, sp, #4
 8002186:	6820      	ldr	r0, [r4, #0]
 8002188:	f00b fe8a 	bl	800dea0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800218c:	6820      	ldr	r0, [r4, #0]
 800218e:	f04f 33ff 	mov.w	r3, #4294967295
 8002192:	2200      	movs	r2, #0
 8002194:	a901      	add	r1, sp, #4
 8002196:	f00b fe83 	bl	800dea0 <osMessageQueueGet>
}
 800219a:	b002      	add	sp, #8
 800219c:	bd10      	pop	{r4, pc}
 800219e:	bf00      	nop
 80021a0:	200008fc 	.word	0x200008fc

080021a4 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80021a4:	4770      	bx	lr

080021a6 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80021a6:	2000      	movs	r0, #0
 80021a8:	4770      	bx	lr

080021aa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80021aa:	4770      	bx	lr

080021ac <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80021ac:	4770      	bx	lr

080021ae <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80021ae:	2000      	movs	r0, #0
 80021b0:	4770      	bx	lr

080021b2 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80021b2:	4770      	bx	lr

080021b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80021b4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80021b6:	4a03      	ldr	r2, [pc, #12]	; (80021c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80021b8:	4b03      	ldr	r3, [pc, #12]	; (80021c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80021ba:	4804      	ldr	r0, [pc, #16]	; (80021cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80021bc:	2122      	movs	r1, #34	; 0x22
 80021be:	f029 fc4f 	bl	802ba60 <__assert_func>
 80021c2:	bf00      	nop
 80021c4:	0802d02b 	.word	0x0802d02b
 80021c8:	0802d008 	.word	0x0802d008
 80021cc:	0802d069 	.word	0x0802d069

080021d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80021d0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80021d2:	4a03      	ldr	r2, [pc, #12]	; (80021e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80021d4:	4b03      	ldr	r3, [pc, #12]	; (80021e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80021d6:	4804      	ldr	r0, [pc, #16]	; (80021e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80021d8:	2127      	movs	r1, #39	; 0x27
 80021da:	f029 fc41 	bl	802ba60 <__assert_func>
 80021de:	bf00      	nop
 80021e0:	0802d0e1 	.word	0x0802d0e1
 80021e4:	0802d008 	.word	0x0802d008
 80021e8:	0802d069 	.word	0x0802d069

080021ec <_ZN8STM32DMAD0Ev>:
 80021ec:	b510      	push	{r4, lr}
 80021ee:	2144      	movs	r1, #68	; 0x44
 80021f0:	4604      	mov	r4, r0
 80021f2:	f028 fe22 	bl	802ae3a <_ZdlPvj>
 80021f6:	4620      	mov	r0, r4
 80021f8:	bd10      	pop	{r4, pc}
	...

080021fc <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80021fc:	b538      	push	{r3, r4, r5, lr}
 80021fe:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002200:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002202:	2500      	movs	r5, #0
 8002204:	4b06      	ldr	r3, [pc, #24]	; (8002220 <_ZN8STM32DMAC1Ev+0x24>)
 8002206:	7225      	strb	r5, [r4, #8]
 8002208:	300c      	adds	r0, #12
 800220a:	6060      	str	r0, [r4, #4]
 800220c:	7265      	strb	r5, [r4, #9]
 800220e:	2201      	movs	r2, #1
 8002210:	f841 3b20 	str.w	r3, [r1], #32
 8002214:	f010 fa7a 	bl	801270c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002218:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800221a:	4620      	mov	r0, r4
 800221c:	bd38      	pop	{r3, r4, r5, pc}
 800221e:	bf00      	nop
 8002220:	0802d128 	.word	0x0802d128

08002224 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002224:	2001      	movs	r0, #1
 8002226:	4770      	bx	lr

08002228 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002228:	2038      	movs	r0, #56	; 0x38
 800222a:	4770      	bx	lr

0800222c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800222c:	2338      	movs	r3, #56	; 0x38
 800222e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002232:	3008      	adds	r0, #8
 8002234:	4770      	bx	lr

08002236 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002236:	2338      	movs	r3, #56	; 0x38
 8002238:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800223c:	3008      	adds	r0, #8
 800223e:	4770      	bx	lr

08002240 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002240:	2001      	movs	r0, #1
 8002242:	4770      	bx	lr

08002244 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002244:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002248:	4770      	bx	lr

0800224a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800224a:	f641 5304 	movw	r3, #7428	; 0x1d04
 800224e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002252:	3008      	adds	r0, #8
 8002254:	4770      	bx	lr

08002256 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002256:	f641 5304 	movw	r3, #7428	; 0x1d04
 800225a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800225e:	3008      	adds	r0, #8
 8002260:	4770      	bx	lr

08002262 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002262:	2001      	movs	r0, #1
 8002264:	4770      	bx	lr

08002266 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002266:	2010      	movs	r0, #16
 8002268:	4770      	bx	lr

0800226a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800226a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800226e:	3008      	adds	r0, #8
 8002270:	4770      	bx	lr

08002272 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002272:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002276:	3008      	adds	r0, #8
 8002278:	4770      	bx	lr

0800227a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800227a:	4608      	mov	r0, r1
 800227c:	f002 bb8c 	b.w	8004998 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002280:	b510      	push	{r4, lr}
 8002282:	4b03      	ldr	r3, [pc, #12]	; (8002290 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002284:	6003      	str	r3, [r0, #0]
 8002286:	4604      	mov	r4, r0
 8002288:	f00e fa69 	bl	801075e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800228c:	4620      	mov	r0, r4
 800228e:	bd10      	pop	{r4, pc}
 8002290:	0802d1e0 	.word	0x0802d1e0

08002294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002294:	b510      	push	{r4, lr}
 8002296:	4604      	mov	r4, r0
 8002298:	f7ff fff2 	bl	8002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800229c:	4620      	mov	r0, r4
 800229e:	2140      	movs	r1, #64	; 0x40
 80022a0:	f028 fdcb 	bl	802ae3a <_ZdlPvj>
 80022a4:	4620      	mov	r0, r4
 80022a6:	bd10      	pop	{r4, pc}

080022a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80022a8:	b510      	push	{r4, lr}
 80022aa:	4b03      	ldr	r3, [pc, #12]	; (80022b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80022ac:	6003      	str	r3, [r0, #0]
 80022ae:	4604      	mov	r4, r0
 80022b0:	f00e fa55 	bl	801075e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022b4:	4620      	mov	r0, r4
 80022b6:	bd10      	pop	{r4, pc}
 80022b8:	0802d1ac 	.word	0x0802d1ac

080022bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022bc:	b510      	push	{r4, lr}
 80022be:	4604      	mov	r4, r0
 80022c0:	f7ff fff2 	bl	80022a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022c4:	4620      	mov	r0, r4
 80022c6:	f641 510c 	movw	r1, #7436	; 0x1d0c
 80022ca:	f028 fdb6 	bl	802ae3a <_ZdlPvj>
 80022ce:	4620      	mov	r0, r4
 80022d0:	bd10      	pop	{r4, pc}
	...

080022d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80022d4:	b510      	push	{r4, lr}
 80022d6:	4b03      	ldr	r3, [pc, #12]	; (80022e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80022d8:	6003      	str	r3, [r0, #0]
 80022da:	4604      	mov	r4, r0
 80022dc:	f00e fa3f 	bl	801075e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022e0:	4620      	mov	r0, r4
 80022e2:	bd10      	pop	{r4, pc}
 80022e4:	0802d178 	.word	0x0802d178

080022e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022e8:	b510      	push	{r4, lr}
 80022ea:	4604      	mov	r4, r0
 80022ec:	f7ff fff2 	bl	80022d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022f0:	4620      	mov	r0, r4
 80022f2:	2118      	movs	r1, #24
 80022f4:	f028 fda1 	bl	802ae3a <_ZdlPvj>
 80022f8:	4620      	mov	r0, r4
 80022fa:	bd10      	pop	{r4, pc}

080022fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80022fc:	b510      	push	{r4, lr}
 80022fe:	4b09      	ldr	r3, [pc, #36]	; (8002324 <_ZN12FrontendHeapD1Ev+0x28>)
 8002300:	6003      	str	r3, [r0, #0]
 8002302:	4604      	mov	r4, r0
 8002304:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002308:	3018      	adds	r0, #24
 800230a:	f7ff ffb9 	bl	8002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800230e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002312:	f7ff ffc9 	bl	80022a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002316:	f104 0014 	add.w	r0, r4, #20
 800231a:	f7ff ffdb 	bl	80022d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800231e:	4620      	mov	r0, r4
 8002320:	bd10      	pop	{r4, pc}
 8002322:	bf00      	nop
 8002324:	0802d214 	.word	0x0802d214

08002328 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002328:	b508      	push	{r3, lr}
 800232a:	4802      	ldr	r0, [pc, #8]	; (8002334 <__tcf_0+0xc>)
 800232c:	f7ff ffe6 	bl	80022fc <_ZN12FrontendHeapD1Ev>
 8002330:	bd08      	pop	{r3, pc}
 8002332:	bf00      	nop
 8002334:	20000908 	.word	0x20000908

08002338 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002338:	b510      	push	{r4, lr}
 800233a:	4604      	mov	r4, r0
 800233c:	f7ff ffde 	bl	80022fc <_ZN12FrontendHeapD1Ev>
 8002340:	4620      	mov	r0, r4
 8002342:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002346:	f028 fd78 	bl	802ae3a <_ZdlPvj>
 800234a:	4620      	mov	r0, r4
 800234c:	bd10      	pop	{r4, pc}
	...

08002350 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002350:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002354:	f000 fa5c 	bl	8002810 <_ZN14BitmapDatabase11getInstanceEv>
 8002358:	4605      	mov	r5, r0
 800235a:	f000 fa5d 	bl	8002818 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800235e:	2400      	movs	r4, #0
 8002360:	4601      	mov	r1, r0
 8002362:	4623      	mov	r3, r4
 8002364:	4628      	mov	r0, r5
 8002366:	4622      	mov	r2, r4
 8002368:	9400      	str	r4, [sp, #0]
 800236a:	f018 f8ed 	bl	801a548 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800236e:	4b26      	ldr	r3, [pc, #152]	; (8002408 <touchgfx_init+0xb8>)
 8002370:	4a26      	ldr	r2, [pc, #152]	; (800240c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002372:	4d27      	ldr	r5, [pc, #156]	; (8002410 <touchgfx_init+0xc0>)
 8002374:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002376:	4620      	mov	r0, r4
 8002378:	f006 fb14 	bl	80089a4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800237c:	4825      	ldr	r0, [pc, #148]	; (8002414 <touchgfx_init+0xc4>)
 800237e:	f018 f84b 	bl	801a418 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002382:	682b      	ldr	r3, [r5, #0]
 8002384:	f3bf 8f5b 	dmb	ish
 8002388:	07db      	lsls	r3, r3, #31
 800238a:	d436      	bmi.n	80023fa <touchgfx_init+0xaa>
 800238c:	4628      	mov	r0, r5
 800238e:	f028 fd56 	bl	802ae3e <__cxa_guard_acquire>
 8002392:	b390      	cbz	r0, 80023fa <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002394:	4c20      	ldr	r4, [pc, #128]	; (8002418 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002396:	4b21      	ldr	r3, [pc, #132]	; (800241c <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002398:	4f21      	ldr	r7, [pc, #132]	; (8002420 <touchgfx_init+0xd0>)
 800239a:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 800239c:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 80023a0:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80023a4:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80023a8:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80023aa:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80023ae:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80023b0:	6126      	str	r6, [r4, #16]
 80023b2:	f00e f9d5 	bl	8010760 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023b6:	4b1b      	ldr	r3, [pc, #108]	; (8002424 <touchgfx_init+0xd4>)
 80023b8:	6163      	str	r3, [r4, #20]
 80023ba:	4640      	mov	r0, r8
 80023bc:	f00e f9d0 	bl	8010760 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023c0:	4b19      	ldr	r3, [pc, #100]	; (8002428 <touchgfx_init+0xd8>)
 80023c2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80023c4:	4638      	mov	r0, r7
 80023c6:	f00e f9cb 	bl	8010760 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023ca:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80023ce:	4a17      	ldr	r2, [pc, #92]	; (800242c <touchgfx_init+0xdc>)
 80023d0:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 80023d4:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 80023d8:	f006 ff5a 	bl	8009290 <_ZN5ModelC1Ev>
 80023dc:	4622      	mov	r2, r4
 80023de:	f1a6 0108 	sub.w	r1, r6, #8
 80023e2:	4630      	mov	r0, r6
 80023e4:	f006 fc64 	bl	8008cb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80023e8:	4630      	mov	r0, r6
 80023ea:	f002 fad5 	bl	8004998 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80023ee:	4810      	ldr	r0, [pc, #64]	; (8002430 <touchgfx_init+0xe0>)
 80023f0:	f029 fb54 	bl	802ba9c <atexit>
 80023f4:	4628      	mov	r0, r5
 80023f6:	f028 fd2e 	bl	802ae56 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80023fa:	480e      	ldr	r0, [pc, #56]	; (8002434 <touchgfx_init+0xe4>)
}
 80023fc:	b002      	add	sp, #8
 80023fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002402:	f7ff bdb5 	b.w	8001f70 <_ZN11TouchGFXHAL10initializeEv>
 8002406:	bf00      	nop
 8002408:	20013898 	.word	0x20013898
 800240c:	200028a8 	.word	0x200028a8
 8002410:	20000904 	.word	0x20000904
 8002414:	20000014 	.word	0x20000014
 8002418:	20000908 	.word	0x20000908
 800241c:	0802d214 	.word	0x0802d214
 8002420:	20002640 	.word	0x20002640
 8002424:	0802d178 	.word	0x0802d178
 8002428:	0802d1ac 	.word	0x0802d1ac
 800242c:	0802d1e0 	.word	0x0802d1e0
 8002430:	08002329 	.word	0x08002329
 8002434:	2000282c 	.word	0x2000282c

08002438 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002438:	4770      	bx	lr
	...

0800243c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800243c:	4801      	ldr	r0, [pc, #4]	; (8002444 <touchgfx_taskEntry+0x8>)
 800243e:	f7ff bda5 	b.w	8001f8c <_ZN11TouchGFXHAL9taskEntryEv>
 8002442:	bf00      	nop
 8002444:	2000282c 	.word	0x2000282c

08002448 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002448:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800244a:	4e22      	ldr	r6, [pc, #136]	; (80024d4 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800244c:	4c22      	ldr	r4, [pc, #136]	; (80024d8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800244e:	4d23      	ldr	r5, [pc, #140]	; (80024dc <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002450:	4b23      	ldr	r3, [pc, #140]	; (80024e0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002452:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002454:	4630      	mov	r0, r6
 8002456:	f7ff fed1 	bl	80021fc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800245a:	4628      	mov	r0, r5
 800245c:	f01c fb40 	bl	801eae0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002460:	4b20      	ldr	r3, [pc, #128]	; (80024e4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002462:	4821      	ldr	r0, [pc, #132]	; (80024e8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002464:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002466:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002468:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 800246c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002470:	491e      	ldr	r1, [pc, #120]	; (80024ec <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002472:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002474:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002478:	491d      	ldr	r1, [pc, #116]	; (80024f0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800247a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 800247c:	491d      	ldr	r1, [pc, #116]	; (80024f4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800247e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002482:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002484:	21f0      	movs	r1, #240	; 0xf0
 8002486:	8001      	strh	r1, [r0, #0]
 8002488:	481b      	ldr	r0, [pc, #108]	; (80024f8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800248a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800248c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800248e:	481b      	ldr	r0, [pc, #108]	; (80024fc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002490:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002494:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002498:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800249c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80024a0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80024a4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80024a8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80024ac:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80024b0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80024b4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80024b8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80024ba:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80024be:	8001      	strh	r1, [r0, #0]
 80024c0:	480f      	ldr	r0, [pc, #60]	; (8002500 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80024c2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80024c4:	490f      	ldr	r1, [pc, #60]	; (8002504 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80024c6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80024c8:	2201      	movs	r2, #1
 80024ca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80024ce:	4a0e      	ldr	r2, [pc, #56]	; (8002508 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80024d0:	601a      	str	r2, [r3, #0]
}
 80024d2:	bd70      	pop	{r4, r5, r6, pc}
 80024d4:	200027e8 	.word	0x200027e8
 80024d8:	200027e4 	.word	0x200027e4
 80024dc:	200028ac 	.word	0x200028ac
 80024e0:	0802cc78 	.word	0x0802cc78
 80024e4:	2000282c 	.word	0x2000282c
 80024e8:	20013828 	.word	0x20013828
 80024ec:	01000001 	.word	0x01000001
 80024f0:	01010000 	.word	0x01010000
 80024f4:	20013834 	.word	0x20013834
 80024f8:	2001382e 	.word	0x2001382e
 80024fc:	2001382a 	.word	0x2001382a
 8002500:	20013830 	.word	0x20013830
 8002504:	2001382c 	.word	0x2001382c
 8002508:	0802ce04 	.word	0x0802ce04

0800250c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800250c:	2000      	movs	r0, #0
 800250e:	4770      	bx	lr

08002510 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002510:	8081      	strh	r1, [r0, #4]
    }
 8002512:	4770      	bx	lr

08002514 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002514:	80c1      	strh	r1, [r0, #6]
    }
 8002516:	4770      	bx	lr

08002518 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002518:	8101      	strh	r1, [r0, #8]
    }
 800251a:	4770      	bx	lr

0800251c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800251c:	8141      	strh	r1, [r0, #10]
    }
 800251e:	4770      	bx	lr

08002520 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002520:	4770      	bx	lr

08002522 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002522:	4770      	bx	lr

08002524 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002524:	4770      	bx	lr

08002526 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002526:	4770      	bx	lr

08002528 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002528:	4770      	bx	lr

0800252a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800252a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800252c:	88c4      	ldrh	r4, [r0, #6]
 800252e:	6803      	ldr	r3, [r0, #0]
 8002530:	1b12      	subs	r2, r2, r4
 8002532:	8884      	ldrh	r4, [r0, #4]
 8002534:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002536:	1b09      	subs	r1, r1, r4
 8002538:	b212      	sxth	r2, r2
    }
 800253a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800253e:	b209      	sxth	r1, r1
 8002540:	4718      	bx	r3

08002542 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002542:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002546:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002548:	f04f 33ff 	mov.w	r3, #4294967295
 800254c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800254e:	6813      	ldr	r3, [r2, #0]
 8002550:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002552:	6010      	str	r0, [r2, #0]
    }
 8002554:	4770      	bx	lr

08002556 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002556:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800255a:	b11a      	cbz	r2, 8002564 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800255c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002560:	b102      	cbz	r2, 8002564 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002562:	6018      	str	r0, [r3, #0]
        }
    }
 8002564:	4770      	bx	lr

08002566 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002566:	2000      	movs	r0, #0
 8002568:	4770      	bx	lr

0800256a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800256a:	888b      	ldrh	r3, [r1, #4]
 800256c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800256e:	2001      	movs	r0, #1
 8002570:	4770      	bx	lr

08002572 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002572:	4770      	bx	lr

08002574 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002574:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002578:	4770      	bx	lr

0800257a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800257a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800257e:	4770      	bx	lr

08002580 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002580:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002582:	2200      	movs	r2, #0
        return rect.width;
 8002584:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002588:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800258c:	8002      	strh	r2, [r0, #0]
 800258e:	8042      	strh	r2, [r0, #2]
 8002590:	8084      	strh	r4, [r0, #4]
 8002592:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002594:	bd10      	pop	{r4, pc}

08002596 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002596:	2200      	movs	r2, #0
 8002598:	8002      	strh	r2, [r0, #0]
 800259a:	8042      	strh	r2, [r0, #2]
 800259c:	8082      	strh	r2, [r0, #4]
 800259e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80025a0:	4770      	bx	lr
	...

080025a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80025a4:	4b02      	ldr	r3, [pc, #8]	; (80025b0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80025a6:	2290      	movs	r2, #144	; 0x90
 80025a8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80025ac:	4770      	bx	lr
 80025ae:	bf00      	nop
 80025b0:	e000e100 	.word	0xe000e100

080025b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025b4:	4b02      	ldr	r3, [pc, #8]	; (80025c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80025b6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80025ba:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80025bc:	4770      	bx	lr
 80025be:	bf00      	nop
 80025c0:	e000e100 	.word	0xe000e100

080025c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80025c4:	4a09      	ldr	r2, [pc, #36]	; (80025ec <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80025c6:	490a      	ldr	r1, [pc, #40]	; (80025f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80025c8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80025ca:	480a      	ldr	r0, [pc, #40]	; (80025f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80025cc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80025d0:	3b01      	subs	r3, #1
 80025d2:	b29b      	uxth	r3, r3
 80025d4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80025d6:	6911      	ldr	r1, [r2, #16]
 80025d8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80025dc:	3901      	subs	r1, #1
 80025de:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80025e0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80025e2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80025e4:	f043 0301 	orr.w	r3, r3, #1
 80025e8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80025ea:	4770      	bx	lr
 80025ec:	40016800 	.word	0x40016800
 80025f0:	20002932 	.word	0x20002932
 80025f4:	20002930 	.word	0x20002930

080025f8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80025f8:	4b01      	ldr	r3, [pc, #4]	; (8002600 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80025fa:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80025fe:	4770      	bx	lr
 8002600:	40016800 	.word	0x40016800

08002604 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002604:	4b02      	ldr	r3, [pc, #8]	; (8002610 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002606:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002608:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800260c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800260e:	4770      	bx	lr
 8002610:	40016800 	.word	0x40016800

08002614 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002614:	b570      	push	{r4, r5, r6, lr}
 8002616:	4604      	mov	r4, r0
    HAL::initialize();
 8002618:	f00f f9e1 	bl	80119de <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800261c:	6823      	ldr	r3, [r4, #0]
 800261e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002620:	f014 fb56 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8002624:	4601      	mov	r1, r0
 8002626:	4620      	mov	r0, r4
 8002628:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800262a:	6823      	ldr	r3, [r4, #0]
 800262c:	4a05      	ldr	r2, [pc, #20]	; (8002644 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800262e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002632:	4620      	mov	r0, r4
 8002634:	46ac      	mov	ip, r5
 8002636:	2300      	movs	r3, #0
}
 8002638:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800263c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002640:	4760      	bx	ip
 8002642:	bf00      	nop
 8002644:	d004b000 	.word	0xd004b000

08002648 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002648:	f00f b9b0 	b.w	80119ac <_ZN8touchgfx3HAL10beginFrameEv>

0800264c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800264c:	f00f b9ba 	b.w	80119c4 <_ZN8touchgfx3HAL8endFrameEv>

08002650 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002650:	f00f b975 	b.w	801193e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002654 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002654:	f00f bad7 	b.w	8011c06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002658 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002658:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800265c:	b112      	cbz	r2, 8002664 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800265e:	6803      	ldr	r3, [r0, #0]
 8002660:	695b      	ldr	r3, [r3, #20]
 8002662:	4718      	bx	r3
    }
 8002664:	4770      	bx	lr
	...

08002668 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002668:	4b04      	ldr	r3, [pc, #16]	; (800267c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800266a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800266e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002672:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002676:	f3bf 8f6f 	isb	sy
}
 800267a:	4770      	bx	lr
 800267c:	e000e100 	.word	0xe000e100

08002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002680:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002682:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002684:	4e12      	ldr	r6, [pc, #72]	; (80026d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002686:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002688:	4b12      	ldr	r3, [pc, #72]	; (80026d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800268a:	6003      	str	r3, [r0, #0]
 800268c:	6833      	ldr	r3, [r6, #0]
 800268e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002692:	4605      	mov	r5, r0
 8002694:	b10a      	cbz	r2, 800269a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002696:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002698:	b900      	cbnz	r0, 800269c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800269a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800269c:	6803      	ldr	r3, [r0, #0]
 800269e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026a0:	4798      	blx	r3
        return auxiliaryLCD;
 80026a2:	6833      	ldr	r3, [r6, #0]
 80026a4:	fab0 f480 	clz	r4, r0
 80026a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80026aa:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80026ac:	b130      	cbz	r0, 80026bc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80026ae:	6803      	ldr	r3, [r0, #0]
 80026b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026b2:	4798      	blx	r3
 80026b4:	2800      	cmp	r0, #0
 80026b6:	bf08      	it	eq
 80026b8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80026bc:	b92c      	cbnz	r4, 80026ca <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80026be:	4b06      	ldr	r3, [pc, #24]	; (80026d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80026c0:	4a06      	ldr	r2, [pc, #24]	; (80026dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80026c2:	4807      	ldr	r0, [pc, #28]	; (80026e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80026c4:	212c      	movs	r1, #44	; 0x2c
 80026c6:	f029 f9cb 	bl	802ba60 <__assert_func>
    }
 80026ca:	4628      	mov	r0, r5
 80026cc:	bd70      	pop	{r4, r5, r6, pc}
 80026ce:	bf00      	nop
 80026d0:	20013834 	.word	0x20013834
 80026d4:	0802d324 	.word	0x0802d324
 80026d8:	0802d220 	.word	0x0802d220
 80026dc:	0802d27e 	.word	0x0802d27e
 80026e0:	0802d2b7 	.word	0x0802d2b7

080026e4 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80026e4:	4770      	bx	lr
	...

080026e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80026e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80026ec:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80026ee:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80026f2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80026f6:	d105      	bne.n	8002704 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80026f8:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80026fc:	4281      	cmp	r1, r0
 80026fe:	d8fb      	bhi.n	80026f8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002704:	4f17      	ldr	r7, [pc, #92]	; (8002764 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002706:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800270a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800270e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002712:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002716:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002718:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800271a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800271c:	b2db      	uxtb	r3, r3
 800271e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002720:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002724:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002728:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800272c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002730:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002734:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002738:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800273c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002740:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002742:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002746:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800274a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800274e:	fbbe fef5 	udiv	lr, lr, r5
 8002752:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002756:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800275a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800275e:	4281      	cmp	r1, r0
 8002760:	d8de      	bhi.n	8002720 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002762:	e7cd      	b.n	8002700 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002764:	fffff800 	.word	0xfffff800

08002768 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002768:	b510      	push	{r4, lr}
        return instance;
 800276a:	4c14      	ldr	r4, [pc, #80]	; (80027bc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800276c:	6823      	ldr	r3, [r4, #0]
 800276e:	b323      	cbz	r3, 80027ba <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002770:	4b13      	ldr	r3, [pc, #76]	; (80027c0 <HAL_LTDC_LineEventCallback+0x58>)
 8002772:	4a14      	ldr	r2, [pc, #80]	; (80027c4 <HAL_LTDC_LineEventCallback+0x5c>)
 8002774:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002776:	8811      	ldrh	r1, [r2, #0]
 8002778:	428b      	cmp	r3, r1
 800277a:	d113      	bne.n	80027a4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800277c:	4b12      	ldr	r3, [pc, #72]	; (80027c8 <HAL_LTDC_LineEventCallback+0x60>)
 800277e:	8819      	ldrh	r1, [r3, #0]
 8002780:	f009 faf2 	bl	800bd68 <HAL_LTDC_ProgramLineEvent>
 8002784:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002786:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800278a:	3301      	adds	r3, #1
 800278c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002790:	f7ff fce8 	bl	8002164 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002794:	6820      	ldr	r0, [r4, #0]
 8002796:	f00f fe61 	bl	801245c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800279a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800279e:	2000      	movs	r0, #0
 80027a0:	f7ff bb60 	b.w	8001e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80027a4:	f009 fae0 	bl	800bd68 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80027a8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80027aa:	6803      	ldr	r3, [r0, #0]
 80027ac:	6a1b      	ldr	r3, [r3, #32]
 80027ae:	4798      	blx	r3
    }
 80027b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80027b4:	2000      	movs	r0, #0
 80027b6:	f7ff bb6d 	b.w	8001e94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80027ba:	bd10      	pop	{r4, pc}
 80027bc:	20013834 	.word	0x20013834
 80027c0:	40016800 	.word	0x40016800
 80027c4:	20002932 	.word	0x20002932
 80027c8:	20002930 	.word	0x20002930

080027cc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80027cc:	4770      	bx	lr

080027ce <_ZN23ApplicationFontProviderD0Ev>:
 80027ce:	b510      	push	{r4, lr}
 80027d0:	2104      	movs	r1, #4
 80027d2:	4604      	mov	r4, r0
 80027d4:	f028 fb31 	bl	802ae3a <_ZdlPvj>
 80027d8:	4620      	mov	r0, r4
 80027da:	bd10      	pop	{r4, pc}

080027dc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80027dc:	b508      	push	{r3, lr}
    switch (typography)
 80027de:	2903      	cmp	r1, #3
 80027e0:	d813      	bhi.n	800280a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80027e2:	e8df f001 	tbb	[pc, r1]
 80027e6:	0602      	.short	0x0602
 80027e8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80027ea:	f006 f927 	bl	8008a3c <_ZN17TypedTextDatabase8getFontsEv>
 80027ee:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80027f0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80027f2:	f006 f923 	bl	8008a3c <_ZN17TypedTextDatabase8getFontsEv>
 80027f6:	6840      	ldr	r0, [r0, #4]
 80027f8:	e7fa      	b.n	80027f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80027fa:	f006 f91f 	bl	8008a3c <_ZN17TypedTextDatabase8getFontsEv>
 80027fe:	6880      	ldr	r0, [r0, #8]
 8002800:	e7f6      	b.n	80027f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002802:	f006 f91b 	bl	8008a3c <_ZN17TypedTextDatabase8getFontsEv>
 8002806:	68c0      	ldr	r0, [r0, #12]
 8002808:	e7f2      	b.n	80027f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800280a:	2000      	movs	r0, #0
 800280c:	e7f0      	b.n	80027f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002810 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002810:	4800      	ldr	r0, [pc, #0]	; (8002814 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002812:	4770      	bx	lr
 8002814:	0802d350 	.word	0x0802d350

08002818 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002818:	200c      	movs	r0, #12
 800281a:	4770      	bx	lr

0800281c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800281c:	b513      	push	{r0, r1, r4, lr}
 800281e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002820:	b151      	cbz	r1, 8002838 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002822:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002824:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002826:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800282a:	aa01      	add	r2, sp, #4
 800282c:	689c      	ldr	r4, [r3, #8]
 800282e:	f10d 0303 	add.w	r3, sp, #3
 8002832:	47a0      	blx	r4
        return glyph;
    }
 8002834:	b002      	add	sp, #8
 8002836:	bd10      	pop	{r4, pc}
            return 0;
 8002838:	4608      	mov	r0, r1
 800283a:	e7fb      	b.n	8002834 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800283c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800283c:	89c0      	ldrh	r0, [r0, #14]
 800283e:	4770      	bx	lr

08002840 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002840:	8a00      	ldrh	r0, [r0, #16]
 8002842:	4770      	bx	lr

08002844 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002844:	88c0      	ldrh	r0, [r0, #6]
 8002846:	4770      	bx	lr

08002848 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002848:	8880      	ldrh	r0, [r0, #4]
 800284a:	4770      	bx	lr

0800284c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800284c:	7a80      	ldrb	r0, [r0, #10]
    }
 800284e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002852:	4770      	bx	lr

08002854 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002854:	7a80      	ldrb	r0, [r0, #10]
    }
 8002856:	09c0      	lsrs	r0, r0, #7
 8002858:	4770      	bx	lr

0800285a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800285a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800285c:	4770      	bx	lr

0800285e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800285e:	4770      	bx	lr

08002860 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002860:	4770      	bx	lr

08002862 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002862:	4770      	bx	lr

08002864 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002864:	4770      	bx	lr

08002866 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002866:	4770      	bx	lr

08002868 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002868:	4770      	bx	lr

0800286a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800286a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800286c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800286e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002870:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002872:	466d      	mov	r5, sp
 8002874:	4601      	mov	r1, r0
 8002876:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800287a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800287c:	4628      	mov	r0, r5
 800287e:	4798      	blx	r3
 8002880:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002884:	343c      	adds	r4, #60	; 0x3c
 8002886:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800288a:	b005      	add	sp, #20
 800288c:	bd30      	pop	{r4, r5, pc}

0800288e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800288e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002890:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002892:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002894:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002896:	466d      	mov	r5, sp
 8002898:	4601      	mov	r1, r0
 800289a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800289e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028a0:	4628      	mov	r0, r5
 80028a2:	4798      	blx	r3
 80028a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028a8:	343c      	adds	r4, #60	; 0x3c
 80028aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028ae:	b005      	add	sp, #20
 80028b0:	bd30      	pop	{r4, r5, pc}

080028b2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80028b2:	2200      	movs	r2, #0
 80028b4:	8002      	strh	r2, [r0, #0]
 80028b6:	8042      	strh	r2, [r0, #2]
 80028b8:	8082      	strh	r2, [r0, #4]
 80028ba:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80028bc:	4770      	bx	lr

080028be <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80028be:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80028c2:	4770      	bx	lr

080028c4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028c4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80028c6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028c8:	4604      	mov	r4, r0
        setX(x);
 80028ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028cc:	4615      	mov	r5, r2
        setX(x);
 80028ce:	4798      	blx	r3
        setBaselineY(baselineY);
 80028d0:	6823      	ldr	r3, [r4, #0]
 80028d2:	4629      	mov	r1, r5
 80028d4:	4620      	mov	r0, r4
 80028d6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80028d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80028dc:	4718      	bx	r3

080028de <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80028de:	2000      	movs	r0, #0
 80028e0:	4770      	bx	lr

080028e2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80028e2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80028e4:	4770      	bx	lr

080028e6 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80028e6:	4770      	bx	lr

080028e8 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80028e8:	6803      	ldr	r3, [r0, #0]
 80028ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028ec:	4718      	bx	r3

080028ee <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80028ee:	6803      	ldr	r3, [r0, #0]
 80028f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028f2:	4718      	bx	r3

080028f4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028f4:	4770      	bx	lr

080028f6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80028f8:	4770      	bx	lr

080028fa <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80028fa:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80028fc:	68c2      	ldr	r2, [r0, #12]
 80028fe:	6844      	ldr	r4, [r0, #4]
 8002900:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002902:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002904:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002908:	07d2      	lsls	r2, r2, #31
 800290a:	bf48      	it	mi
 800290c:	5962      	ldrmi	r2, [r4, r5]
 800290e:	689b      	ldr	r3, [r3, #8]
    }
 8002910:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002912:	bf48      	it	mi
 8002914:	58d3      	ldrmi	r3, [r2, r3]
 8002916:	4718      	bx	r3

08002918 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002918:	6843      	ldr	r3, [r0, #4]
 800291a:	b12b      	cbz	r3, 8002928 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800291c:	6883      	ldr	r3, [r0, #8]
 800291e:	b92b      	cbnz	r3, 800292c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002920:	68c0      	ldr	r0, [r0, #12]
 8002922:	f000 0001 	and.w	r0, r0, #1
 8002926:	4770      	bx	lr
 8002928:	4618      	mov	r0, r3
 800292a:	4770      	bx	lr
 800292c:	2001      	movs	r0, #1
    }
 800292e:	4770      	bx	lr

08002930 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002930:	b510      	push	{r4, lr}
    }
 8002932:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002934:	4604      	mov	r4, r0
    }
 8002936:	f028 fa80 	bl	802ae3a <_ZdlPvj>
 800293a:	4620      	mov	r0, r4
 800293c:	bd10      	pop	{r4, pc}

0800293e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800293e:	b510      	push	{r4, lr}
 8002940:	214c      	movs	r1, #76	; 0x4c
 8002942:	4604      	mov	r4, r0
 8002944:	f028 fa79 	bl	802ae3a <_ZdlPvj>
 8002948:	4620      	mov	r0, r4
 800294a:	bd10      	pop	{r4, pc}

0800294c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800294c:	b510      	push	{r4, lr}
 800294e:	2110      	movs	r1, #16
 8002950:	4604      	mov	r4, r0
 8002952:	f028 fa72 	bl	802ae3a <_ZdlPvj>
 8002956:	4620      	mov	r0, r4
 8002958:	bd10      	pop	{r4, pc}

0800295a <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 800295a:	b510      	push	{r4, lr}
 800295c:	218c      	movs	r1, #140	; 0x8c
 800295e:	4604      	mov	r4, r0
 8002960:	f028 fa6b 	bl	802ae3a <_ZdlPvj>
 8002964:	4620      	mov	r0, r4
 8002966:	bd10      	pop	{r4, pc}

08002968 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002968:	b538      	push	{r3, r4, r5, lr}
 800296a:	4605      	mov	r5, r0
 800296c:	4b05      	ldr	r3, [pc, #20]	; (8002984 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 800296e:	f845 3be0 	str.w	r3, [r5], #224
 8002972:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002974:	f012 fcaa 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002978:	4628      	mov	r0, r5
 800297a:	f00e fb5f 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 800297e:	4620      	mov	r0, r4
 8002980:	bd38      	pop	{r3, r4, r5, pc}
 8002982:	bf00      	nop
 8002984:	0802d738 	.word	0x0802d738

08002988 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002988:	b510      	push	{r4, lr}
 800298a:	4604      	mov	r4, r0
}
 800298c:	f7ff ffec 	bl	8002968 <_ZN23Calibration_PadViewBaseD1Ev>
 8002990:	4620      	mov	r0, r4
 8002992:	f641 5104 	movw	r1, #7428	; 0x1d04
 8002996:	f028 fa50 	bl	802ae3a <_ZdlPvj>
 800299a:	4620      	mov	r0, r4
 800299c:	bd10      	pop	{r4, pc}

0800299e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800299e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80029a0:	f7ff fe5a 	bl	8002658 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80029a4:	bd08      	pop	{r3, pc}
	...

080029a8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029a8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029aa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029ac:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029ae:	4b12      	ldr	r3, [pc, #72]	; (80029f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80029b0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029b2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029b4:	b28d      	uxth	r5, r1
 80029b6:	b92b      	cbnz	r3, 80029c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80029b8:	4b10      	ldr	r3, [pc, #64]	; (80029fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80029ba:	4a11      	ldr	r2, [pc, #68]	; (8002a00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029bc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029be:	4811      	ldr	r0, [pc, #68]	; (8002a04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80029c0:	f029 f84e 	bl	802ba60 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029c4:	4910      	ldr	r1, [pc, #64]	; (8002a08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80029c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029c8:	8809      	ldrh	r1, [r1, #0]
 80029ca:	4291      	cmp	r1, r2
 80029cc:	d803      	bhi.n	80029d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029ce:	4b0f      	ldr	r3, [pc, #60]	; (8002a0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029d0:	4a0b      	ldr	r2, [pc, #44]	; (8002a00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029d2:	216d      	movs	r1, #109	; 0x6d
 80029d4:	e7f3      	b.n	80029be <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029d6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80029da:	4b0d      	ldr	r3, [pc, #52]	; (8002a10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80029e2:	6803      	ldr	r3, [r0, #0]
 80029e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029e6:	4798      	blx	r3
 80029e8:	1a28      	subs	r0, r5, r0
 80029ea:	b201      	sxth	r1, r0
 80029ec:	4633      	mov	r3, r6
 80029ee:	4620      	mov	r0, r4
    }
 80029f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029f4:	4718      	bx	r3
 80029f6:	bf00      	nop
 80029f8:	2001388c 	.word	0x2001388c
 80029fc:	0802d440 	.word	0x0802d440
 8002a00:	0802d482 	.word	0x0802d482
 8002a04:	0802d4bd 	.word	0x0802d4bd
 8002a08:	20013890 	.word	0x20013890
 8002a0c:	0802d504 	.word	0x0802d504
 8002a10:	20013894 	.word	0x20013894

08002a14 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002a14:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002a16:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a18:	4604      	mov	r4, r0
        setX(x);
 8002a1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002a1c:	4615      	mov	r5, r2
        setX(x);
 8002a1e:	4798      	blx	r3
        setY(y);
 8002a20:	6823      	ldr	r3, [r4, #0]
 8002a22:	4629      	mov	r1, r5
 8002a24:	4620      	mov	r0, r4
 8002a26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002a28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a2c:	4718      	bx	r3

08002a2e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002a2e:	b570      	push	{r4, r5, r6, lr}
 8002a30:	4604      	mov	r4, r0
 8002a32:	461d      	mov	r5, r3
 8002a34:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002a38:	f7ff ffec 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002a3c:	6823      	ldr	r3, [r4, #0]
 8002a3e:	4629      	mov	r1, r5
 8002a40:	4620      	mov	r0, r4
 8002a42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a44:	4798      	blx	r3
        setHeight(height);
 8002a46:	6823      	ldr	r3, [r4, #0]
 8002a48:	4631      	mov	r1, r6
 8002a4a:	4620      	mov	r0, r4
 8002a4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002a52:	4718      	bx	r3

08002a54 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002a54:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002a58:	2200      	movs	r2, #0
 8002a5a:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002a5c:	4905      	ldr	r1, [pc, #20]	; (8002a74 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8002a5e:	6001      	str	r1, [r0, #0]
 8002a60:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a64:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a68:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a6c:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002a70:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002a72:	4770      	bx	lr
 8002a74:	0802f65c 	.word	0x0802f65c

08002a78 <_ZN8touchgfx6WidgetC1Ev>:
 8002a78:	2200      	movs	r2, #0
 8002a7a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a7e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a82:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a86:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002a8a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a8e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002a90:	4a01      	ldr	r2, [pc, #4]	; (8002a98 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002a92:	6002      	str	r2, [r0, #0]
 8002a94:	4770      	bx	lr
 8002a96:	bf00      	nop
 8002a98:	0802d588 	.word	0x0802d588

08002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002a9c:	4b1a      	ldr	r3, [pc, #104]	; (8002b08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002a9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002aa0:	881b      	ldrh	r3, [r3, #0]
 8002aa2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002aa4:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002aa6:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002aa8:	d92b      	bls.n	8002b02 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002aaa:	4b18      	ldr	r3, [pc, #96]	; (8002b0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	b92b      	cbnz	r3, 8002abc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002ab0:	4b17      	ldr	r3, [pc, #92]	; (8002b10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002ab2:	4a18      	ldr	r2, [pc, #96]	; (8002b14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002ab4:	4818      	ldr	r0, [pc, #96]	; (8002b18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002ab6:	216c      	movs	r1, #108	; 0x6c
 8002ab8:	f028 ffd2 	bl	802ba60 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002abc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002ac0:	4b16      	ldr	r3, [pc, #88]	; (8002b1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ac8:	4b15      	ldr	r3, [pc, #84]	; (8002b20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002aca:	6818      	ldr	r0, [r3, #0]
 8002acc:	f005 ffa6 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ad0:	682b      	ldr	r3, [r5, #0]
 8002ad2:	9001      	str	r0, [sp, #4]
 8002ad4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ad6:	4628      	mov	r0, r5
 8002ad8:	4798      	blx	r3
 8002ada:	682b      	ldr	r3, [r5, #0]
 8002adc:	9901      	ldr	r1, [sp, #4]
 8002ade:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002ae0:	4604      	mov	r4, r0
 8002ae2:	4628      	mov	r0, r5
 8002ae4:	4798      	blx	r3
 8002ae6:	682b      	ldr	r3, [r5, #0]
 8002ae8:	9901      	ldr	r1, [sp, #4]
 8002aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002aec:	fb14 f400 	smulbb	r4, r4, r0
 8002af0:	4628      	mov	r0, r5
 8002af2:	4798      	blx	r3
 8002af4:	b2a4      	uxth	r4, r4
 8002af6:	1823      	adds	r3, r4, r0
 8002af8:	b21b      	sxth	r3, r3
 8002afa:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002afe:	b002      	add	sp, #8
 8002b00:	bd70      	pop	{r4, r5, r6, pc}
 8002b02:	2300      	movs	r3, #0
 8002b04:	e7f9      	b.n	8002afa <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002b06:	bf00      	nop
 8002b08:	20013890 	.word	0x20013890
 8002b0c:	2001388c 	.word	0x2001388c
 8002b10:	0802d440 	.word	0x0802d440
 8002b14:	0802d482 	.word	0x0802d482
 8002b18:	0802d4bd 	.word	0x0802d4bd
 8002b1c:	20013894 	.word	0x20013894
 8002b20:	20013898 	.word	0x20013898

08002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002b24:	2200      	movs	r2, #0
 8002b26:	f04f 31ff 	mov.w	r1, #4294967295
 8002b2a:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002b2e:	6082      	str	r2, [r0, #8]
        {
        }
 8002b30:	4770      	bx	lr

08002b32 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002b32:	b510      	push	{r4, lr}
 8002b34:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002b36:	f7ff fff5 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002b3a:	4620      	mov	r0, r4
 8002b3c:	bd10      	pop	{r4, pc}
	...

08002b40 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002b40:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b42:	2100      	movs	r1, #0
    TextArea()
 8002b44:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b46:	2226      	movs	r2, #38	; 0x26
 8002b48:	f029 f98f 	bl	802be6a <memset>
 8002b4c:	4620      	mov	r0, r4
 8002b4e:	f7ff ff93 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8002b52:	4b09      	ldr	r3, [pc, #36]	; (8002b78 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002b54:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002b56:	4b09      	ldr	r3, [pc, #36]	; (8002b7c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002b58:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b5e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002b60:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002b64:	2300      	movs	r3, #0
 8002b66:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002b6a:	8723      	strh	r3, [r4, #56]	; 0x38
 8002b6c:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002b70:	f7ff ffd8 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002b74:	4620      	mov	r0, r4
 8002b76:	bd10      	pop	{r4, pc}
 8002b78:	0802fab4 	.word	0x0802fab4
 8002b7c:	0802d5f0 	.word	0x0802d5f0

08002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002b80:	b510      	push	{r4, lr}
 8002b82:	4604      	mov	r4, r0
        : TextArea()
 8002b84:	f7ff ffdc 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002b88:	4b02      	ldr	r3, [pc, #8]	; (8002b94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002b8a:	6023      	str	r3, [r4, #0]
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002b90:	4620      	mov	r0, r4
 8002b92:	bd10      	pop	{r4, pc}
 8002b94:	0802d690 	.word	0x0802d690

08002b98 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002b98:	b510      	push	{r4, lr}
 8002b9a:	4604      	mov	r4, r0
 8002b9c:	460b      	mov	r3, r1
 8002b9e:	490d      	ldr	r1, [pc, #52]	; (8002bd4 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002ba0:	f844 1b04 	str.w	r1, [r4], #4
 8002ba4:	4602      	mov	r2, r0
 8002ba6:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002baa:	e884 0003 	stmia.w	r4, {r0, r1}
 8002bae:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002bb2:	f102 040c 	add.w	r4, r2, #12
 8002bb6:	e884 0003 	stmia.w	r4, {r0, r1}
 8002bba:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002bbe:	695c      	ldr	r4, [r3, #20]
 8002bc0:	61d1      	str	r1, [r2, #28]
 8002bc2:	6a19      	ldr	r1, [r3, #32]
 8002bc4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002bc6:	6211      	str	r1, [r2, #32]
 8002bc8:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002bcc:	8493      	strh	r3, [r2, #36]	; 0x24
 8002bce:	4610      	mov	r0, r2
 8002bd0:	bd10      	pop	{r4, pc}
 8002bd2:	bf00      	nop
 8002bd4:	0802fed4 	.word	0x0802fed4

08002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002bd8:	b538      	push	{r3, r4, r5, lr}
 8002bda:	460d      	mov	r5, r1
 8002bdc:	4604      	mov	r4, r0
class Container : public Drawable
 8002bde:	f7ff ffdb 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002be2:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002be4:	62a3      	str	r3, [r4, #40]	; 0x28
 8002be6:	4b2b      	ldr	r3, [pc, #172]	; (8002c94 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002be8:	6023      	str	r3, [r4, #0]
 8002bea:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002bec:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002bee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002bf0:	6323      	str	r3, [r4, #48]	; 0x30
 8002bf2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002bf4:	6363      	str	r3, [r4, #52]	; 0x34
 8002bf6:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002bfa:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002bfe:	f7ff ffcb 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002c02:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002c04:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002c06:	4b24      	ldr	r3, [pc, #144]	; (8002c98 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002c08:	63a3      	str	r3, [r4, #56]	; 0x38
 8002c0a:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002c0e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002c12:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002c16:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002c1a:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002c1e:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002c22:	f7ff ffb9 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002c26:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002c2a:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002c2e:	4b1b      	ldr	r3, [pc, #108]	; (8002c9c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002c30:	66a3      	str	r3, [r4, #104]	; 0x68
 8002c32:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002c36:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002c3a:	f7ff ffad 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002c3e:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002c42:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002c46:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002c4a:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002c4e:	4b14      	ldr	r3, [pc, #80]	; (8002ca0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002c50:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002c54:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002c58:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002c5c:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002c60:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002c64:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002c68:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002c6c:	f7ff ff94 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002c70:	4b0c      	ldr	r3, [pc, #48]	; (8002ca4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002c72:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002c76:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002c7a:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002c7e:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002c82:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002c86:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002c8a:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002c8e:	4620      	mov	r0, r4
 8002c90:	bd38      	pop	{r3, r4, r5, pc}
 8002c92:	bf00      	nop
 8002c94:	0802f6ec 	.word	0x0802f6ec
 8002c98:	0802f7b0 	.word	0x0802f7b0
 8002c9c:	0802d600 	.word	0x0802d600
 8002ca0:	0802fbac 	.word	0x0802fbac
 8002ca4:	0802fd90 	.word	0x0802fd90

08002ca8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002ca8:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8002caa:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002cae:	4299      	cmp	r1, r3
{
 8002cb0:	b0c1      	sub	sp, #260	; 0x104
 8002cb2:	4604      	mov	r4, r0
 8002cb4:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002cb6:	d103      	bne.n	8002cc0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002cb8:	f014 f80a 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002cbc:	f001 fe7c 	bl	80049b8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002cc0:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8002cc4:	429d      	cmp	r5, r3
 8002cc6:	d128      	bne.n	8002d1a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        SwipeContainer swipeContainer = swipeContainer1;
 8002cc8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ccc:	4639      	mov	r1, r7
 8002cce:	a803      	add	r0, sp, #12
 8002cd0:	f7ff ff82 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002cd4:	f7fe fc3a 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cd8:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002cda:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cdc:	2001      	movs	r0, #1
 8002cde:	f7fd fdc3 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002ce2:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002ce6:	48d8      	ldr	r0, [pc, #864]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ce8:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cec:	ee17 6a90 	vmov	r6, s15
 8002cf0:	ee17 1a90 	vmov	r1, s15
 8002cf4:	230c      	movs	r3, #12
 8002cf6:	2200      	movs	r2, #0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cf8:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cfc:	f7fd feb6 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d00:	4ad2      	ldr	r2, [pc, #840]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d02:	4633      	mov	r3, r6
 8002d04:	210a      	movs	r1, #10
 8002d06:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8002d0a:	f017 f98f 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d0e:	4638      	mov	r0, r7
 8002d10:	f015 f8c6 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d14:	a803      	add	r0, sp, #12
 8002d16:	f00e f991 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002d1a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002d1e:	429d      	cmp	r5, r3
 8002d20:	d128      	bne.n	8002d74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xcc>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d22:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d26:	4639      	mov	r1, r7
 8002d28:	a803      	add	r0, sp, #12
 8002d2a:	f7ff ff55 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d2e:	f7fe fc0d 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d32:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d34:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d36:	2001      	movs	r0, #1
 8002d38:	f7fd fd96 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d3c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d40:	48c1      	ldr	r0, [pc, #772]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d42:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d46:	ee17 6a90 	vmov	r6, s15
 8002d4a:	ee17 1a90 	vmov	r1, s15
 8002d4e:	230c      	movs	r3, #12
 8002d50:	2201      	movs	r2, #1
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d52:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d56:	f7fd fe89 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d5a:	4abc      	ldr	r2, [pc, #752]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d5c:	4633      	mov	r3, r6
 8002d5e:	210a      	movs	r1, #10
 8002d60:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8002d64:	f017 f962 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d68:	4638      	mov	r0, r7
 8002d6a:	f015 f899 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d6e:	a803      	add	r0, sp, #12
 8002d70:	f00e f964 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002d74:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8002d78:	429d      	cmp	r5, r3
 8002d7a:	d128      	bne.n	8002dce <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x126>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d7c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d80:	4639      	mov	r1, r7
 8002d82:	a803      	add	r0, sp, #12
 8002d84:	f7ff ff28 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d88:	f7fe fbe0 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d8c:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d8e:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d90:	2001      	movs	r0, #1
 8002d92:	f7fd fd69 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002d96:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d9a:	48ab      	ldr	r0, [pc, #684]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d9c:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002da0:	ee17 6a90 	vmov	r6, s15
 8002da4:	ee17 1a90 	vmov	r1, s15
 8002da8:	230c      	movs	r3, #12
 8002daa:	2202      	movs	r2, #2
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dac:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002db0:	f7fd fe5c 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002db4:	4aa5      	ldr	r2, [pc, #660]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002db6:	4633      	mov	r3, r6
 8002db8:	210a      	movs	r1, #10
 8002dba:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8002dbe:	f017 f935 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002dc2:	4638      	mov	r0, r7
 8002dc4:	f015 f86c 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002dc8:	a803      	add	r0, sp, #12
 8002dca:	f00e f937 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8002dce:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8002dd2:	429d      	cmp	r5, r3
 8002dd4:	d128      	bne.n	8002e28 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>
        SwipeContainer swipeContainer = swipeContainer1;
 8002dd6:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002dda:	4639      	mov	r1, r7
 8002ddc:	a803      	add	r0, sp, #12
 8002dde:	f7ff fefb 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002de2:	f7fe fbb3 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002de6:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002de8:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dea:	2001      	movs	r0, #1
 8002dec:	f7fd fd3c 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002df0:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002df4:	4894      	ldr	r0, [pc, #592]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002df6:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002dfa:	ee17 6a90 	vmov	r6, s15
 8002dfe:	ee17 1a90 	vmov	r1, s15
 8002e02:	230c      	movs	r3, #12
 8002e04:	2203      	movs	r2, #3
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e06:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002e0a:	f7fd fe2f 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e0e:	4a8f      	ldr	r2, [pc, #572]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e10:	4633      	mov	r3, r6
 8002e12:	210a      	movs	r1, #10
 8002e14:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8002e18:	f017 f908 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e1c:	4638      	mov	r0, r7
 8002e1e:	f015 f83f 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e22:	a803      	add	r0, sp, #12
 8002e24:	f00e f90a 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8002e28:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8002e2c:	429d      	cmp	r5, r3
 8002e2e:	d128      	bne.n	8002e82 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e30:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e34:	4639      	mov	r1, r7
 8002e36:	a803      	add	r0, sp, #12
 8002e38:	f7ff fece 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e3c:	f7fe fb86 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e40:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e42:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e44:	2001      	movs	r0, #1
 8002e46:	f7fd fd0f 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e4a:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e4e:	487e      	ldr	r0, [pc, #504]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e50:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e54:	ee17 6a90 	vmov	r6, s15
 8002e58:	ee17 1a90 	vmov	r1, s15
 8002e5c:	230c      	movs	r3, #12
 8002e5e:	2204      	movs	r2, #4
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e60:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e64:	f7fd fe02 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e68:	4a78      	ldr	r2, [pc, #480]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e6a:	4633      	mov	r3, r6
 8002e6c:	210a      	movs	r1, #10
 8002e6e:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8002e72:	f017 f8db 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e76:	4638      	mov	r0, r7
 8002e78:	f015 f812 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e7c:	a803      	add	r0, sp, #12
 8002e7e:	f00e f8dd 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8002e82:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8002e86:	429d      	cmp	r5, r3
 8002e88:	d128      	bne.n	8002edc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e8a:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e8e:	4639      	mov	r1, r7
 8002e90:	a803      	add	r0, sp, #12
 8002e92:	f7ff fea1 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e96:	f7fe fb59 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e9a:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e9c:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e9e:	2001      	movs	r0, #1
 8002ea0:	f7fd fce2 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002ea4:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002ea8:	4867      	ldr	r0, [pc, #412]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002eaa:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002eae:	ee17 6a90 	vmov	r6, s15
 8002eb2:	ee17 1a90 	vmov	r1, s15
 8002eb6:	230c      	movs	r3, #12
 8002eb8:	2205      	movs	r2, #5
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002eba:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002ebe:	f7fd fdd5 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002ec2:	4a62      	ldr	r2, [pc, #392]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002ec4:	4633      	mov	r3, r6
 8002ec6:	210a      	movs	r1, #10
 8002ec8:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8002ecc:	f017 f8ae 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002ed0:	4638      	mov	r0, r7
 8002ed2:	f014 ffe5 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002ed6:	a803      	add	r0, sp, #12
 8002ed8:	f00e f8b0 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8002edc:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8002ee0:	429d      	cmp	r5, r3
 8002ee2:	d128      	bne.n	8002f36 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28e>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ee4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ee8:	4639      	mov	r1, r7
 8002eea:	a803      	add	r0, sp, #12
 8002eec:	f7ff fe74 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002ef0:	f7fe fb2c 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ef4:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ef6:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ef8:	2001      	movs	r0, #1
 8002efa:	f7fd fcb5 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002efe:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f02:	4851      	ldr	r0, [pc, #324]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f04:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002f08:	ee17 6a90 	vmov	r6, s15
 8002f0c:	ee17 1a90 	vmov	r1, s15
 8002f10:	230c      	movs	r3, #12
 8002f12:	2206      	movs	r2, #6
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f14:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002f18:	f7fd fda8 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f1c:	4a4b      	ldr	r2, [pc, #300]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f1e:	4633      	mov	r3, r6
 8002f20:	210a      	movs	r1, #10
 8002f22:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8002f26:	f017 f881 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f2a:	4638      	mov	r0, r7
 8002f2c:	f014 ffb8 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f30:	a803      	add	r0, sp, #12
 8002f32:	f00e f883 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8002f36:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8002f3a:	429d      	cmp	r5, r3
 8002f3c:	d128      	bne.n	8002f90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f3e:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f42:	4639      	mov	r1, r7
 8002f44:	a803      	add	r0, sp, #12
 8002f46:	f7ff fe47 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f4a:	f7fe faff 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f4e:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f50:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f52:	2001      	movs	r0, #1
 8002f54:	f7fd fc88 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f58:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f5c:	483a      	ldr	r0, [pc, #232]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f5e:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f62:	ee17 6a90 	vmov	r6, s15
 8002f66:	ee17 1a90 	vmov	r1, s15
 8002f6a:	230c      	movs	r3, #12
 8002f6c:	2207      	movs	r2, #7
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f6e:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f72:	f7fd fd7b 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f76:	4a35      	ldr	r2, [pc, #212]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f78:	4633      	mov	r3, r6
 8002f7a:	210a      	movs	r1, #10
 8002f7c:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8002f80:	f017 f854 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f84:	4638      	mov	r0, r7
 8002f86:	f014 ff8b 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f8a:	a803      	add	r0, sp, #12
 8002f8c:	f00e f856 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8002f90:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8002f94:	429d      	cmp	r5, r3
 8002f96:	d128      	bne.n	8002fea <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x342>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f98:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f9c:	4639      	mov	r1, r7
 8002f9e:	a803      	add	r0, sp, #12
 8002fa0:	f7ff fe1a 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002fa4:	f7fe fad2 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fa8:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002faa:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fac:	2001      	movs	r0, #1
 8002fae:	f7fd fc5b 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fb2:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002fb6:	4824      	ldr	r0, [pc, #144]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fb8:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fbc:	ee17 6a90 	vmov	r6, s15
 8002fc0:	ee17 1a90 	vmov	r1, s15
 8002fc4:	230c      	movs	r3, #12
 8002fc6:	2208      	movs	r2, #8
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fc8:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fcc:	f7fd fd4e 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002fd0:	4a1e      	ldr	r2, [pc, #120]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002fd2:	4633      	mov	r3, r6
 8002fd4:	210a      	movs	r1, #10
 8002fd6:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8002fda:	f017 f827 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002fde:	4638      	mov	r0, r7
 8002fe0:	f014 ff5e 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002fe4:	a803      	add	r0, sp, #12
 8002fe6:	f00e f829 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8002fea:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8002fee:	429d      	cmp	r5, r3
 8002ff0:	d12e      	bne.n	8003050 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ff2:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ff6:	4639      	mov	r1, r7
 8002ff8:	a803      	add	r0, sp, #12
 8002ffa:	f7ff fded 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002ffe:	f7fe faa5 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003002:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8003004:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003006:	2001      	movs	r0, #1
 8003008:	f7fd fc2e 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 800300c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8003010:	480d      	ldr	r0, [pc, #52]	; (8003048 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003012:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8003016:	ee17 6a90 	vmov	r6, s15
 800301a:	ee17 1a90 	vmov	r1, s15
 800301e:	230c      	movs	r3, #12
 8003020:	2209      	movs	r2, #9
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003022:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8003026:	f7fd fd21 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 800302a:	4a08      	ldr	r2, [pc, #32]	; (800304c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 800302c:	4633      	mov	r3, r6
 800302e:	210a      	movs	r1, #10
 8003030:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003034:	f016 fffa 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003038:	4638      	mov	r0, r7
 800303a:	f014 ff31 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800303e:	a803      	add	r0, sp, #12
 8003040:	f00d fffc 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003044:	e004      	b.n	8003050 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
 8003046:	bf00      	nop
 8003048:	081e0000 	.word	0x081e0000
 800304c:	0802d542 	.word	0x0802d542
    if (&src == &buttonWithIcon_RH2)
 8003050:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003054:	429d      	cmp	r5, r3
 8003056:	d128      	bne.n	80030aa <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x402>
        SwipeContainer swipeContainer = swipeContainer1;
 8003058:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 800305c:	4639      	mov	r1, r7
 800305e:	a803      	add	r0, sp, #12
 8003060:	f7ff fdba 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003064:	f7fe fa72 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003068:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 800306a:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800306c:	2001      	movs	r0, #1
 800306e:	f7fd fbfb 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003072:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8003076:	4824      	ldr	r0, [pc, #144]	; (8003108 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003078:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800307c:	ee17 6a90 	vmov	r6, s15
 8003080:	ee17 1a90 	vmov	r1, s15
 8003084:	230c      	movs	r3, #12
 8003086:	220a      	movs	r2, #10
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003088:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800308c:	f7fd fcee 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003090:	4a1e      	ldr	r2, [pc, #120]	; (800310c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 8003092:	4633      	mov	r3, r6
 8003094:	210a      	movs	r1, #10
 8003096:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800309a:	f016 ffc7 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 800309e:	4638      	mov	r0, r7
 80030a0:	f014 fefe 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80030a4:	a803      	add	r0, sp, #12
 80030a6:	f00d ffc9 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 80030aa:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 80030ae:	429d      	cmp	r5, r3
 80030b0:	d128      	bne.n	8003104 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x45c>
        SwipeContainer swipeContainer = swipeContainer1;
 80030b2:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80030b6:	4631      	mov	r1, r6
 80030b8:	a803      	add	r0, sp, #12
 80030ba:	f7ff fd8d 	bl	8002bd8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80030be:	f7fe fa45 	bl	800154c <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030c2:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 80030c4:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030c6:	2001      	movs	r0, #1
 80030c8:	f7fd fbce 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030cc:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 80030d0:	480d      	ldr	r0, [pc, #52]	; (8003108 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030d2:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030d6:	ee17 5a90 	vmov	r5, s15
 80030da:	ee17 1a90 	vmov	r1, s15
 80030de:	230c      	movs	r3, #12
 80030e0:	220b      	movs	r2, #11
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030e2:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030e6:	f7fd fcc1 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 80030ea:	4a08      	ldr	r2, [pc, #32]	; (800310c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 80030ec:	462b      	mov	r3, r5
 80030ee:	210a      	movs	r1, #10
 80030f0:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 80030f4:	f016 ff9a 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80030f8:	4630      	mov	r0, r6
 80030fa:	f014 fed1 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80030fe:	a803      	add	r0, sp, #12
 8003100:	f00d ff9c 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003104:	b041      	add	sp, #260	; 0x104
 8003106:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003108:	081e0000 	.word	0x081e0000
 800310c:	0802d542 	.word	0x0802d542

08003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003110:	0152      	lsls	r2, r2, #5
 8003112:	0149      	lsls	r1, r1, #5
 8003114:	f00f bee6 	b.w	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003118:	0152      	lsls	r2, r2, #5
 800311a:	0149      	lsls	r1, r1, #5
 800311c:	f00f beed 	b.w	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003120:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003122:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003124:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003128:	ea4f 1241 	mov.w	r2, r1, lsl #5
 800312c:	d004      	beq.n	8003138 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 800312e:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003132:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003134:	f00f bde0 	b.w	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003138:	f85d 4b04 	ldr.w	r4, [sp], #4
 800313c:	4770      	bx	lr
	...

08003140 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003144:	ed2d 8b10 	vpush	{d8-d15}
 8003148:	4604      	mov	r4, r0
 800314a:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 800314c:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800314e:	2500      	movs	r5, #0
 8003150:	f015 fa3e 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 8003154:	4be5      	ldr	r3, [pc, #916]	; (80034ec <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003156:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003158:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800315c:	2226      	movs	r2, #38	; 0x26
 800315e:	4629      	mov	r1, r5
 8003160:	4648      	mov	r0, r9
 8003162:	f028 fe82 	bl	802be6a <memset>
 8003166:	4648      	mov	r0, r9
 8003168:	f7ff fc86 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 800316c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003170:	26ff      	movs	r6, #255	; 0xff
 8003172:	4bdf      	ldr	r3, [pc, #892]	; (80034f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003174:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003176:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003178:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800317c:	4629      	mov	r1, r5
 800317e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003182:	4640      	mov	r0, r8
        : color(col)
 8003184:	66a5      	str	r5, [r4, #104]	; 0x68
 8003186:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 800318a:	f028 fe6e 	bl	802be6a <memset>
 800318e:	4640      	mov	r0, r8
 8003190:	f7ff fc72 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8003194:	4bd7      	ldr	r3, [pc, #860]	; (80034f4 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003196:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003198:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 800319c:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 80031a0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80031a4:	ae29      	add	r6, sp, #164	; 0xa4
 80031a6:	4631      	mov	r1, r6
 80031a8:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80031ac:	4640      	mov	r0, r8
 80031ae:	f011 f890 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031b2:	4658      	mov	r0, fp
 80031b4:	f011 f9c4 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80031b8:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80031bc:	4618      	mov	r0, r3
 80031be:	ee08 3a10 	vmov	s16, r3
 80031c2:	f00e f869 	bl	8011298 <_ZN8touchgfx14SwipeContainerC1Ev>
 80031c6:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 80031ca:	4618      	mov	r0, r3
 80031cc:	ee08 3a90 	vmov	s17, r3
 80031d0:	f7ff fc40 	bl	8002a54 <_ZN8touchgfx9ContainerC1Ev>
 80031d4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80031d8:	4618      	mov	r0, r3
 80031da:	9311      	str	r3, [sp, #68]	; 0x44
 80031dc:	f011 f852 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031e0:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80031e4:	f504 771e 	add.w	r7, r4, #632	; 0x278
 80031e8:	4618      	mov	r0, r3
 80031ea:	9312      	str	r3, [sp, #72]	; 0x48
 80031ec:	f011 f84a 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031f0:	4638      	mov	r0, r7
 80031f2:	f011 f847 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031f6:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 80031fa:	4618      	mov	r0, r3
 80031fc:	ee0d 3a90 	vmov	s27, r3
 8003200:	f7ff fcbe 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003204:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003208:	4618      	mov	r0, r3
 800320a:	ee0e 3a10 	vmov	s28, r3
 800320e:	f7ff fcb7 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003212:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003216:	4618      	mov	r0, r3
 8003218:	ee0e 3a90 	vmov	s29, r3
 800321c:	f7ff fcb0 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003220:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003224:	4618      	mov	r0, r3
 8003226:	ee0a 3a90 	vmov	s21, r3
 800322a:	f00f fd45 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 800322e:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003232:	4618      	mov	r0, r3
 8003234:	931c      	str	r3, [sp, #112]	; 0x70
 8003236:	f7ff fa23 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800323a:	4baf      	ldr	r3, [pc, #700]	; (80034f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800323c:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003240:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003244:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003248:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 800324c:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800324e:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003252:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003256:	9107      	str	r1, [sp, #28]
 8003258:	f7ff fc72 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 800325c:	4650      	mov	r0, sl
 800325e:	f7ff fbf9 	bl	8002a54 <_ZN8touchgfx9ContainerC1Ev>
 8003262:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003266:	4608      	mov	r0, r1
 8003268:	9113      	str	r1, [sp, #76]	; 0x4c
 800326a:	f011 f80b 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800326e:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003272:	4608      	mov	r0, r1
 8003274:	9114      	str	r1, [sp, #80]	; 0x50
 8003276:	f011 f805 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800327a:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 800327e:	4608      	mov	r0, r1
 8003280:	9115      	str	r1, [sp, #84]	; 0x54
 8003282:	f010 ffff 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003286:	f204 5144 	addw	r1, r4, #1348	; 0x544
 800328a:	4608      	mov	r0, r1
 800328c:	9108      	str	r1, [sp, #32]
 800328e:	f7ff fc77 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003292:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003296:	4608      	mov	r0, r1
 8003298:	9109      	str	r1, [sp, #36]	; 0x24
 800329a:	f7ff fc71 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800329e:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 80032a2:	4608      	mov	r0, r1
 80032a4:	910a      	str	r1, [sp, #40]	; 0x28
 80032a6:	f7ff fc6b 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032aa:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 80032ae:	4608      	mov	r0, r1
 80032b0:	ee0b 1a10 	vmov	s22, r1
 80032b4:	f00f fd00 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 80032b8:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 80032bc:	4608      	mov	r0, r1
 80032be:	911d      	str	r1, [sp, #116]	; 0x74
 80032c0:	f7ff f9de 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80032c4:	4b8c      	ldr	r3, [pc, #560]	; (80034f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80032c6:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 80032ca:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80032ce:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 80032d2:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 80032d6:	4608      	mov	r0, r1
 80032d8:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 80032dc:	ee0f 1a10 	vmov	s30, r1
 80032e0:	f7ff fc2e 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80032e4:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 80032e8:	4608      	mov	r0, r1
 80032ea:	ee09 1a10 	vmov	s18, r1
 80032ee:	f7ff fbb1 	bl	8002a54 <_ZN8touchgfx9ContainerC1Ev>
 80032f2:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 80032f6:	4608      	mov	r0, r1
 80032f8:	9116      	str	r1, [sp, #88]	; 0x58
 80032fa:	f010 ffc3 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032fe:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003302:	4608      	mov	r0, r1
 8003304:	9117      	str	r1, [sp, #92]	; 0x5c
 8003306:	f010 ffbd 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800330a:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 800330e:	4608      	mov	r0, r1
 8003310:	9118      	str	r1, [sp, #96]	; 0x60
 8003312:	f010 ffb7 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003316:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 800331a:	4608      	mov	r0, r1
 800331c:	910b      	str	r1, [sp, #44]	; 0x2c
 800331e:	f7ff fc2f 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003322:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003326:	4608      	mov	r0, r1
 8003328:	910c      	str	r1, [sp, #48]	; 0x30
 800332a:	f7ff fc29 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800332e:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003332:	4608      	mov	r0, r1
 8003334:	910d      	str	r1, [sp, #52]	; 0x34
 8003336:	f7ff fc23 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800333a:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 800333e:	4608      	mov	r0, r1
 8003340:	ee0b 1a90 	vmov	s23, r1
 8003344:	f00f fcb8 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8003348:	f604 1128 	addw	r1, r4, #2344	; 0x928
 800334c:	4608      	mov	r0, r1
 800334e:	911e      	str	r1, [sp, #120]	; 0x78
 8003350:	f7ff f996 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003354:	4b68      	ldr	r3, [pc, #416]	; (80034f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003356:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 800335a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800335e:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003362:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003366:	4608      	mov	r0, r1
 8003368:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 800336c:	ee0f 1a90 	vmov	s31, r1
 8003370:	f7ff fbe6 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8003374:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003378:	4608      	mov	r0, r1
 800337a:	ee09 1a90 	vmov	s19, r1
 800337e:	f7ff fb69 	bl	8002a54 <_ZN8touchgfx9ContainerC1Ev>
 8003382:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003386:	4608      	mov	r0, r1
 8003388:	9119      	str	r1, [sp, #100]	; 0x64
 800338a:	f010 ff7b 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800338e:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003392:	4608      	mov	r0, r1
 8003394:	911a      	str	r1, [sp, #104]	; 0x68
 8003396:	f010 ff75 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800339a:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 800339e:	4608      	mov	r0, r1
 80033a0:	911b      	str	r1, [sp, #108]	; 0x6c
 80033a2:	f010 ff6f 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033a6:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 80033aa:	4608      	mov	r0, r1
 80033ac:	910e      	str	r1, [sp, #56]	; 0x38
 80033ae:	f7ff fbe7 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033b2:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 80033b6:	4608      	mov	r0, r1
 80033b8:	910f      	str	r1, [sp, #60]	; 0x3c
 80033ba:	f7ff fbe1 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033be:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 80033c2:	4608      	mov	r0, r1
 80033c4:	9110      	str	r1, [sp, #64]	; 0x40
 80033c6:	f7ff fbdb 	bl	8002b80 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033ca:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 80033ce:	4608      	mov	r0, r1
 80033d0:	ee0c 1a10 	vmov	s24, r1
 80033d4:	f00f fc70 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 80033d8:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 80033dc:	4608      	mov	r0, r1
 80033de:	911f      	str	r1, [sp, #124]	; 0x7c
 80033e0:	f7ff f94e 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033e4:	4b44      	ldr	r3, [pc, #272]	; (80034f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80033e6:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 80033ea:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80033ee:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 80033f2:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 80033f6:	4608      	mov	r0, r1
 80033f8:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 80033fc:	9103      	str	r1, [sp, #12]
 80033fe:	f7ff fb9f 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8003402:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003406:	4608      	mov	r0, r1
 8003408:	ee0c 1a90 	vmov	s25, r1
 800340c:	f00f fc54 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8003410:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003414:	4608      	mov	r0, r1
 8003416:	9120      	str	r1, [sp, #128]	; 0x80
 8003418:	f7ff f932 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800341c:	4b36      	ldr	r3, [pc, #216]	; (80034f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800341e:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003422:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003426:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 800342a:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 800342e:	4608      	mov	r0, r1
 8003430:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003434:	9104      	str	r1, [sp, #16]
 8003436:	f7ff fb83 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 800343a:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 800343e:	4608      	mov	r0, r1
 8003440:	ee0d 1a10 	vmov	s26, r1
 8003444:	f00f fc38 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8003448:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 800344c:	4608      	mov	r0, r1
 800344e:	9121      	str	r1, [sp, #132]	; 0x84
 8003450:	f7ff f916 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003454:	4b28      	ldr	r3, [pc, #160]	; (80034f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003456:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 800345a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800345e:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8003462:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003466:	4618      	mov	r0, r3
 8003468:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 800346c:	9305      	str	r3, [sp, #20]
 800346e:	f7ff fb67 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8003472:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 8003476:	4618      	mov	r0, r3
 8003478:	9306      	str	r3, [sp, #24]
 800347a:	f7ff fb61 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800347e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003482:	4a1e      	ldr	r2, [pc, #120]	; (80034fc <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8003484:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8003488:	4a1d      	ldr	r2, [pc, #116]	; (8003500 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 800348a:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 800348e:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 8003492:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003496:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800349a:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 800349e:	f011 ff0b 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80034a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80034a6:	462a      	mov	r2, r5
 80034a8:	4648      	mov	r0, r9
 80034aa:	9300      	str	r3, [sp, #0]
 80034ac:	4629      	mov	r1, r5
 80034ae:	23f0      	movs	r3, #240	; 0xf0
 80034b0:	f7ff fabd 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80034b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80034b8:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80034ba:	1d23      	adds	r3, r4, #4
 80034bc:	4618      	mov	r0, r3
 80034be:	4649      	mov	r1, r9
 80034c0:	ee0a 3a10 	vmov	s20, r3
 80034c4:	f00d fb2c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80034c8:	462a      	mov	r2, r5
 80034ca:	4640      	mov	r0, r8
 80034cc:	4629      	mov	r1, r5
 80034ce:	f7ff faa1 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80034d2:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80034d6:	4640      	mov	r0, r8
 80034d8:	4631      	mov	r1, r6
 80034da:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80034de:	f010 fef8 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80034e2:	4641      	mov	r1, r8
 80034e4:	ee1a 0a10 	vmov	r0, s20
 80034e8:	e00c      	b.n	8003504 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80034ea:	bf00      	nop
 80034ec:	0802d738 	.word	0x0802d738
 80034f0:	0802fb44 	.word	0x0802fb44
 80034f4:	0802fd90 	.word	0x0802fd90
 80034f8:	0802f878 	.word	0x0802f878
 80034fc:	0802d720 	.word	0x0802d720
 8003500:	08002ca9 	.word	0x08002ca9
 8003504:	f00d fb0c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003508:	4658      	mov	r0, fp
 800350a:	f240 1201 	movw	r2, #257	; 0x101
 800350e:	2121      	movs	r1, #33	; 0x21
 8003510:	f7ff fa80 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8003514:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003516:	4632      	mov	r2, r6
 8003518:	a928      	add	r1, sp, #160	; 0xa0
 800351a:	4658      	mov	r0, fp
 800351c:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8003520:	2302      	movs	r3, #2
 8003522:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003526:	f010 fcde 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800352a:	231f      	movs	r3, #31
        updateTextPosition();
 800352c:	4658      	mov	r0, fp
 800352e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003532:	f7ff fab3 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003536:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800353a:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800353e:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8003542:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003544:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003548:	4659      	mov	r1, fp
 800354a:	ee1a 0a10 	vmov	r0, s20
 800354e:	9302      	str	r3, [sp, #8]
 8003550:	f00d fae6 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8003554:	ee18 0a10 	vmov	r0, s16
 8003558:	2255      	movs	r2, #85	; 0x55
 800355a:	4629      	mov	r1, r5
 800355c:	f7ff fa5a 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8003560:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8003562:	ee18 0a10 	vmov	r0, s16
 8003566:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800356a:	4632      	mov	r2, r6
 800356c:	2307      	movs	r3, #7
 800356e:	a928      	add	r1, sp, #160	; 0xa0
 8003570:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003574:	f00d ff2e 	bl	80113d4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003578:	228c      	movs	r2, #140	; 0x8c
 800357a:	ee18 0a10 	vmov	r0, s16
 800357e:	2150      	movs	r1, #80	; 0x50
 8003580:	f00d fdd6 	bl	8011130 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8003584:	ee18 0a10 	vmov	r0, s16
 8003588:	2132      	movs	r1, #50	; 0x32
 800358a:	f00d fd54 	bl	8011036 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 800358e:	ee18 0a10 	vmov	r0, s16
 8003592:	2132      	movs	r1, #50	; 0x32
 8003594:	f00d fdca 	bl	801112c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003598:	4b47      	ldr	r3, [pc, #284]	; (80036b8 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
    buttonWithIcon_LP3.setXY(194, 97);
 800359a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800359c:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 80035a0:	2261      	movs	r2, #97	; 0x61
 80035a2:	21c2      	movs	r1, #194	; 0xc2
 80035a4:	f7ff fa36 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80035a8:	f04f 0809 	mov.w	r8, #9
 80035ac:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80035b0:	aa27      	add	r2, sp, #156	; 0x9c
 80035b2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80035b4:	9600      	str	r6, [sp, #0]
 80035b6:	ab28      	add	r3, sp, #160	; 0xa0
 80035b8:	a926      	add	r1, sp, #152	; 0x98
 80035ba:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80035be:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80035c2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80035c6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80035ca:	f010 fdc6 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035ce:	9b02      	ldr	r3, [sp, #8]
 80035d0:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80035d4:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80035d6:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80035da:	ee18 0a90 	vmov	r0, s17
 80035de:	f00d fa9f 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80035e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80035e4:	223d      	movs	r2, #61	; 0x3d
 80035e6:	21c2      	movs	r1, #194	; 0xc2
 80035e8:	f7ff fa14 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80035ec:	aa27      	add	r2, sp, #156	; 0x9c
 80035ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 80035f0:	9600      	str	r6, [sp, #0]
 80035f2:	ab28      	add	r3, sp, #160	; 0xa0
 80035f4:	a926      	add	r1, sp, #152	; 0x98
 80035f6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80035fa:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80035fe:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003602:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003606:	f010 fda8 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800360a:	9b02      	ldr	r3, [sp, #8]
 800360c:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 8003610:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003612:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 8003616:	ee18 0a90 	vmov	r0, s17
 800361a:	f00d fa81 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800361e:	4638      	mov	r0, r7
 8003620:	2219      	movs	r2, #25
 8003622:	21c2      	movs	r1, #194	; 0xc2
 8003624:	f7ff f9f6 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003628:	aa27      	add	r2, sp, #156	; 0x9c
 800362a:	4638      	mov	r0, r7
 800362c:	ab28      	add	r3, sp, #160	; 0xa0
 800362e:	a926      	add	r1, sp, #152	; 0x98
 8003630:	9600      	str	r6, [sp, #0]
 8003632:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003636:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800363a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800363e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003642:	f010 fd8a 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003646:	9b02      	ldr	r3, [sp, #8]
 8003648:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 800364c:	4639      	mov	r1, r7
 800364e:	ee18 0a90 	vmov	r0, s17
 8003652:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003656:	f00d fa63 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800365a:	2268      	movs	r2, #104	; 0x68
 800365c:	ee1d 0a90 	vmov	r0, s27
 8003660:	210a      	movs	r1, #10
 8003662:	f7ff f9d7 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003666:	f04f 33ff 	mov.w	r3, #4294967295
 800366a:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 800366e:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8003672:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 8003676:	af22      	add	r7, sp, #136	; 0x88
 8003678:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800367c:	ee1d 1a90 	vmov	r1, s27
 8003680:	4638      	mov	r0, r7
 8003682:	4798      	blx	r3
 8003684:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003688:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 800368c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003690:	4b0a      	ldr	r3, [pc, #40]	; (80036bc <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8003692:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8003694:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 8003698:	b92b      	cbnz	r3, 80036a6 <_ZN23Calibration_PadViewBaseC1Ev+0x566>
 800369a:	4b09      	ldr	r3, [pc, #36]	; (80036c0 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 800369c:	4a09      	ldr	r2, [pc, #36]	; (80036c4 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 800369e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80036a0:	4809      	ldr	r0, [pc, #36]	; (80036c8 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 80036a2:	f028 f9dd 	bl	802ba60 <__assert_func>
 80036a6:	4b09      	ldr	r3, [pc, #36]	; (80036cc <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 80036a8:	881b      	ldrh	r3, [r3, #0]
 80036aa:	2b09      	cmp	r3, #9
 80036ac:	d812      	bhi.n	80036d4 <_ZN23Calibration_PadViewBaseC1Ev+0x594>
 80036ae:	4b08      	ldr	r3, [pc, #32]	; (80036d0 <_ZN23Calibration_PadViewBaseC1Ev+0x590>)
 80036b0:	4a04      	ldr	r2, [pc, #16]	; (80036c4 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 80036b2:	2161      	movs	r1, #97	; 0x61
 80036b4:	e7f4      	b.n	80036a0 <_ZN23Calibration_PadViewBaseC1Ev+0x560>
 80036b6:	bf00      	nop
 80036b8:	00ac00f0 	.word	0x00ac00f0
 80036bc:	2001388c 	.word	0x2001388c
 80036c0:	0802d440 	.word	0x0802d440
 80036c4:	0802d545 	.word	0x0802d545
 80036c8:	0802d4bd 	.word	0x0802d4bd
 80036cc:	20013890 	.word	0x20013890
 80036d0:	0802d504 	.word	0x0802d504
        return texts->getText(typedTextId);
 80036d4:	4bd8      	ldr	r3, [pc, #864]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80036d6:	4641      	mov	r1, r8
 80036d8:	6818      	ldr	r0, [r3, #0]
 80036da:	f005 f99f 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80036de:	4ad7      	ldr	r2, [pc, #860]	; (8003a3c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80036e0:	4603      	mov	r3, r0
 80036e2:	210a      	movs	r1, #10
 80036e4:	4648      	mov	r0, r9
 80036e6:	f016 fca1 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80036ea:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80036ee:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80036f2:	f010 f81d 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80036f6:	f04f 090a 	mov.w	r9, #10
 80036fa:	4ad1      	ldr	r2, [pc, #836]	; (8003a40 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80036fc:	9229      	str	r2, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80036fe:	ee1d 0a90 	vmov	r0, s27
 8003702:	4631      	mov	r1, r6
 8003704:	f8ad 90a8 	strh.w	r9, [sp, #168]	; 0xa8
 8003708:	f010 f832 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 800370c:	ee1d 1a90 	vmov	r1, s27
 8003710:	ee18 0a90 	vmov	r0, s17
 8003714:	f00d fa04 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8003718:	2244      	movs	r2, #68	; 0x44
 800371a:	ee1e 0a10 	vmov	r0, s28
 800371e:	2116      	movs	r1, #22
 8003720:	f7ff f978 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8003724:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8003728:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 800372c:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003730:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003734:	f8c4 1330 	str.w	r1, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003738:	4638      	mov	r0, r7
 800373a:	ee1e 1a10 	vmov	r1, s28
 800373e:	4798      	blx	r3
 8003740:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003744:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003748:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800374c:	f604 6108 	addw	r1, r4, #3592	; 0xe08
 8003750:	9111      	str	r1, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003752:	49bc      	ldr	r1, [pc, #752]	; (8003a44 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8003754:	680b      	ldr	r3, [r1, #0]
 8003756:	2b00      	cmp	r3, #0
 8003758:	d09f      	beq.n	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800375a:	49bb      	ldr	r1, [pc, #748]	; (8003a48 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800375c:	880b      	ldrh	r3, [r1, #0]
 800375e:	2b0b      	cmp	r3, #11
 8003760:	d9a5      	bls.n	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003762:	4bb5      	ldr	r3, [pc, #724]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003764:	210b      	movs	r1, #11
 8003766:	6818      	ldr	r0, [r3, #0]
 8003768:	f005 f958 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 800376c:	4ab3      	ldr	r2, [pc, #716]	; (8003a3c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 800376e:	4603      	mov	r3, r0
 8003770:	4649      	mov	r1, r9
 8003772:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003774:	f016 fc5a 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003778:	9811      	ldr	r0, [sp, #68]	; 0x44
 800377a:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
    textAreaCal_LP2.resizeToCurrentText();
 800377e:	ee1e 0a10 	vmov	r0, s28
 8003782:	f00f ffd5 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003786:	230c      	movs	r3, #12
 8003788:	4aad      	ldr	r2, [pc, #692]	; (8003a40 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800378a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800378e:	ee1e 0a10 	vmov	r0, s28
 8003792:	4631      	mov	r1, r6
 8003794:	9229      	str	r2, [sp, #164]	; 0xa4
 8003796:	f00f ffeb 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 800379a:	ee1e 1a10 	vmov	r1, s28
 800379e:	ee18 0a90 	vmov	r0, s17
 80037a2:	f00d f9bd 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 80037a6:	2220      	movs	r2, #32
 80037a8:	ee1e 0a90 	vmov	r0, s29
 80037ac:	2116      	movs	r1, #22
 80037ae:	f7ff f931 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80037b2:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 80037b6:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 80037ba:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80037be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80037c2:	f8c4 037c 	str.w	r0, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 80037c6:	ee1e 1a90 	vmov	r1, s29
 80037ca:	4638      	mov	r0, r7
 80037cc:	4798      	blx	r3
 80037ce:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80037d2:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80037d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80037da:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80037de:	9011      	str	r0, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037e0:	4898      	ldr	r0, [pc, #608]	; (8003a44 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80037e2:	6803      	ldr	r3, [r0, #0]
 80037e4:	2b00      	cmp	r3, #0
 80037e6:	f43f af58 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037ea:	4997      	ldr	r1, [pc, #604]	; (8003a48 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80037ec:	880b      	ldrh	r3, [r1, #0]
 80037ee:	2b0d      	cmp	r3, #13
 80037f0:	f67f af5d 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80037f4:	4b90      	ldr	r3, [pc, #576]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80037f6:	210d      	movs	r1, #13
 80037f8:	6818      	ldr	r0, [r3, #0]
 80037fa:	f005 f90f 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80037fe:	4a8f      	ldr	r2, [pc, #572]	; (8003a3c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 8003800:	4603      	mov	r3, r0
 8003802:	4649      	mov	r1, r9
 8003804:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003806:	f016 fc11 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800380a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800380c:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
    textAreaCal_LP1.resizeToCurrentText();
 8003810:	ee1e 0a90 	vmov	r0, s29
 8003814:	f00f ff8c 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003818:	4a89      	ldr	r2, [pc, #548]	; (8003a40 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800381a:	9229      	str	r2, [sp, #164]	; 0xa4
 800381c:	2314      	movs	r3, #20
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800381e:	ee1e 0a90 	vmov	r0, s29
 8003822:	4631      	mov	r1, r6
 8003824:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003828:	f00f ffa2 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 800382c:	ee1e 1a90 	vmov	r1, s29
 8003830:	ee18 0a90 	vmov	r0, s17
 8003834:	f00d f974 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8003838:	23f0      	movs	r3, #240	; 0xf0
 800383a:	ee1a 0a90 	vmov	r0, s21
 800383e:	220f      	movs	r2, #15
 8003840:	4629      	mov	r1, r5
 8003842:	f8cd 9000 	str.w	r9, [sp]
 8003846:	f7ff f8f2 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 800384a:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800384e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003850:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8003854:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003856:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 800385a:	4611      	mov	r1, r2
 800385c:	f8c4 03c0 	str.w	r0, [r4, #960]	; 0x3c0
 8003860:	ee1a 0a90 	vmov	r0, s21
 8003864:	f7ff fc54 	bl	8003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8003868:	2205      	movs	r2, #5
 800386a:	ee1a 0a90 	vmov	r0, s21
 800386e:	21eb      	movs	r1, #235	; 0xeb
 8003870:	f7ff fc52 	bl	8003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8003874:	ee1a 0a90 	vmov	r0, s21
 8003878:	4659      	mov	r1, fp
 800387a:	f7ff fc51 	bl	8003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800387e:	ee1a 0a90 	vmov	r0, s21
 8003882:	4659      	mov	r1, fp
 8003884:	f00f fb44 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8003888:	ee1a 1a90 	vmov	r1, s21
 800388c:	ee18 0a90 	vmov	r0, s17
 8003890:	f00d f946 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8003894:	462a      	mov	r2, r5
 8003896:	9807      	ldr	r0, [sp, #28]
 8003898:	2160      	movs	r1, #96	; 0x60
 800389a:	f7ff f8bb 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800389e:	f04f 3eff 	mov.w	lr, #4294967295
        boundingArea = calculateBoundingArea();
 80038a2:	4638      	mov	r0, r7
 80038a4:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 80038a6:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        linespace = space;
 80038aa:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 80038ae:	f00f fcc5 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80038b6:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 80038ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80038be:	f04f 0e08 	mov.w	lr, #8
 80038c2:	4a5f      	ldr	r2, [pc, #380]	; (8003a40 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80038c4:	9807      	ldr	r0, [sp, #28]
 80038c6:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80038ca:	4631      	mov	r1, r6
 80038cc:	9229      	str	r2, [sp, #164]	; 0xa4
 80038ce:	f00f ff4f 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80038d2:	9907      	ldr	r1, [sp, #28]
 80038d4:	ee18 0a90 	vmov	r0, s17
 80038d8:	f00d f922 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80038dc:	ee18 1a90 	vmov	r1, s17
 80038e0:	ee18 0a10 	vmov	r0, s16
 80038e4:	f00d fdff 	bl	80114e6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80038e8:	4a58      	ldr	r2, [pc, #352]	; (8003a4c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
    buttonWithIcon_RP3.setXY(194, 97);
 80038ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80038ec:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80038f0:	21c2      	movs	r1, #194	; 0xc2
 80038f2:	2261      	movs	r2, #97	; 0x61
 80038f4:	f7ff f88e 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80038f8:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80038fc:	4673      	mov	r3, lr
 80038fe:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003902:	4672      	mov	r2, lr
 8003904:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003908:	4671      	mov	r1, lr
 800390a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800390c:	9600      	str	r6, [sp, #0]
 800390e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003912:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003916:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800391a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800391e:	f010 fc1c 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003922:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8003924:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003926:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 800392a:	4650      	mov	r0, sl
 800392c:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 8003930:	f00d f8f6 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8003934:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003936:	223d      	movs	r2, #61	; 0x3d
 8003938:	21c2      	movs	r1, #194	; 0xc2
 800393a:	f7ff f86b 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800393e:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003942:	4673      	mov	r3, lr
 8003944:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003948:	4672      	mov	r2, lr
 800394a:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800394e:	4671      	mov	r1, lr
 8003950:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003952:	9600      	str	r6, [sp, #0]
 8003954:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003958:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800395c:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003960:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003964:	f010 fbf9 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003968:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 800396a:	9914      	ldr	r1, [sp, #80]	; 0x50
 800396c:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 8003970:	4650      	mov	r0, sl
 8003972:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8003976:	f00d f8d3 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 800397a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800397c:	2219      	movs	r2, #25
 800397e:	21c2      	movs	r1, #194	; 0xc2
 8003980:	f7ff f848 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003984:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003988:	4673      	mov	r3, lr
 800398a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800398e:	4672      	mov	r2, lr
 8003990:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003994:	4671      	mov	r1, lr
 8003996:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003998:	9600      	str	r6, [sp, #0]
 800399a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800399e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80039a2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80039a6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80039aa:	f010 fbd6 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80039ae:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80039b0:	9915      	ldr	r1, [sp, #84]	; 0x54
 80039b2:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 80039b6:	4650      	mov	r0, sl
 80039b8:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 80039bc:	f00d f8b0 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80039c0:	2268      	movs	r2, #104	; 0x68
 80039c2:	4649      	mov	r1, r9
 80039c4:	9808      	ldr	r0, [sp, #32]
 80039c6:	f7ff f825 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80039ca:	f04f 3eff 	mov.w	lr, #4294967295
 80039ce:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80039d2:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80039d6:	4630      	mov	r0, r6
 80039d8:	f7ff f8a4 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80039dc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039e0:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80039e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039e8:	4816      	ldr	r0, [pc, #88]	; (8003a44 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80039ea:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80039ec:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	f43f ae52 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039f6:	4914      	ldr	r1, [pc, #80]	; (8003a48 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80039f8:	880b      	ldrh	r3, [r1, #0]
 80039fa:	2b12      	cmp	r3, #18
 80039fc:	f67f ae57 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003a00:	4b0d      	ldr	r3, [pc, #52]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003a02:	2112      	movs	r1, #18
 8003a04:	6818      	ldr	r0, [r3, #0]
 8003a06:	f005 f809 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8003a0a:	4a0c      	ldr	r2, [pc, #48]	; (8003a3c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 8003a0c:	4603      	mov	r3, r0
 8003a0e:	4649      	mov	r1, r9
 8003a10:	4638      	mov	r0, r7
 8003a12:	f016 fb0b 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8003a16:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 8003a18:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8003a1c:	f00f fe88 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a20:	4f07      	ldr	r7, [pc, #28]	; (8003a40 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003a22:	9808      	ldr	r0, [sp, #32]
 8003a24:	9729      	str	r7, [sp, #164]	; 0xa4
 8003a26:	2313      	movs	r3, #19
 8003a28:	4631      	mov	r1, r6
 8003a2a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003a2e:	f00f fe9f 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8003a32:	9908      	ldr	r1, [sp, #32]
 8003a34:	4650      	mov	r0, sl
 8003a36:	e00b      	b.n	8003a50 <_ZN23Calibration_PadViewBaseC1Ev+0x910>
 8003a38:	20013898 	.word	0x20013898
 8003a3c:	0802d57d 	.word	0x0802d57d
 8003a40:	0802d5f0 	.word	0x0802d5f0
 8003a44:	2001388c 	.word	0x2001388c
 8003a48:	20013890 	.word	0x20013890
 8003a4c:	00ac00f0 	.word	0x00ac00f0
 8003a50:	f00d f866 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003a54:	2116      	movs	r1, #22
 8003a56:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a58:	2244      	movs	r2, #68	; 0x44
 8003a5a:	f7fe ffdb 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003a5e:	f04f 32ff 	mov.w	r2, #4294967295
 8003a62:	f8c4 25c0 	str.w	r2, [r4, #1472]	; 0x5c0
        linespace = space;
 8003a66:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8003a6a:	4630      	mov	r0, r6
 8003a6c:	f7ff f85a 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a70:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a74:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8003a78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a7c:	48d9      	ldr	r0, [pc, #868]	; (8003de4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8003a7e:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8003a80:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8003a84:	2b00      	cmp	r3, #0
 8003a86:	f43f ae08 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a8a:	49d7      	ldr	r1, [pc, #860]	; (8003de8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003a8c:	880b      	ldrh	r3, [r1, #0]
 8003a8e:	2b10      	cmp	r3, #16
 8003a90:	f67f ae0d 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003a94:	4bd5      	ldr	r3, [pc, #852]	; (8003dec <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a96:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8003de4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>
        return texts->getText(typedTextId);
 8003a9a:	6818      	ldr	r0, [r3, #0]
 8003a9c:	2110      	movs	r1, #16
 8003a9e:	f004 ffbd 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8003aa2:	4ad3      	ldr	r2, [pc, #844]	; (8003df0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003aa4:	4603      	mov	r3, r0
 8003aa6:	4649      	mov	r1, r9
 8003aa8:	4628      	mov	r0, r5
 8003aaa:	f016 fabf 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 8003aae:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003ab0:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003ab4:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8003ab6:	f00f fe3b 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003aba:	2311      	movs	r3, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003abc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003abe:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003ac2:	4629      	mov	r1, r5
 8003ac4:	9729      	str	r7, [sp, #164]	; 0xa4
 8003ac6:	f00f fe53 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8003aca:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003acc:	4650      	mov	r0, sl
 8003ace:	f00d f827 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003ad2:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8003ad6:	2220      	movs	r2, #32
 8003ad8:	2116      	movs	r1, #22
 8003ada:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003adc:	f7fe ff9a 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8003ae0:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8003ae4:	2600      	movs	r6, #0
 8003ae6:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8003aea:	4628      	mov	r0, r5
 8003aec:	f7ff f81a 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003af0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003af4:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8003af8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003afc:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8003b00:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	f43f adc8 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b0a:	49b7      	ldr	r1, [pc, #732]	; (8003de8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003b0c:	880b      	ldrh	r3, [r1, #0]
 8003b0e:	2b0f      	cmp	r3, #15
 8003b10:	f67f adcd 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003b14:	4bb5      	ldr	r3, [pc, #724]	; (8003dec <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003b16:	210f      	movs	r1, #15
 8003b18:	6818      	ldr	r0, [r3, #0]
 8003b1a:	f004 ff7f 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8003b1e:	4ab4      	ldr	r2, [pc, #720]	; (8003df0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003b20:	4603      	mov	r3, r0
 8003b22:	4649      	mov	r1, r9
 8003b24:	4638      	mov	r0, r7
 8003b26:	f016 fa81 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003b2a:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003b2c:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8003b30:	f00f fdfe 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b34:	4faf      	ldr	r7, [pc, #700]	; (8003df4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003b36:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003b38:	9729      	str	r7, [sp, #164]	; 0xa4
 8003b3a:	f04f 0e14 	mov.w	lr, #20
 8003b3e:	4629      	mov	r1, r5
 8003b40:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003b44:	f00f fe14 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003b48:	4650      	mov	r0, sl
 8003b4a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003b4c:	f00c ffe8 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8003b50:	23f0      	movs	r3, #240	; 0xf0
 8003b52:	ee1b 0a10 	vmov	r0, s22
 8003b56:	f8cd 9000 	str.w	r9, [sp]
 8003b5a:	220f      	movs	r2, #15
 8003b5c:	4631      	mov	r1, r6
 8003b5e:	f7fe ff66 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b62:	f04f 32ff 	mov.w	r2, #4294967295
 8003b66:	f8c4 26a4 	str.w	r2, [r4, #1700]	; 0x6a4
 8003b6a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8003b6c:	f8c4 2650 	str.w	r2, [r4, #1616]	; 0x650
 8003b70:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8003b74:	2205      	movs	r2, #5
 8003b76:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8003b7a:	4611      	mov	r1, r2
 8003b7c:	ee1b 0a10 	vmov	r0, s22
 8003b80:	f7ff fac6 	bl	8003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8003b84:	2205      	movs	r2, #5
 8003b86:	ee1b 0a10 	vmov	r0, s22
 8003b8a:	21eb      	movs	r1, #235	; 0xeb
 8003b8c:	f7ff fac4 	bl	8003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 8003b90:	ee1b 0a10 	vmov	r0, s22
 8003b94:	2101      	movs	r1, #1
 8003b96:	f7ff fac3 	bl	8003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003b9a:	ee1b 0a10 	vmov	r0, s22
 8003b9e:	2101      	movs	r1, #1
 8003ba0:	f00f f9b6 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8003ba4:	4650      	mov	r0, sl
 8003ba6:	ee1b 1a10 	vmov	r1, s22
 8003baa:	f00c ffb9 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 8003bae:	ee1f 0a10 	vmov	r0, s30
 8003bb2:	4632      	mov	r2, r6
 8003bb4:	215c      	movs	r1, #92	; 0x5c
 8003bb6:	f7fe ff2d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003bba:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003bbe:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8003bc2:	f8c4 26dc 	str.w	r2, [r4, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 8003bc6:	a822      	add	r0, sp, #136	; 0x88
        linespace = space;
 8003bc8:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 8003bcc:	f00f fb36 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003bd0:	ee1f 2a10 	vmov	r2, s30
 8003bd4:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003bd8:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8003bdc:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003be0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003be4:	230e      	movs	r3, #14
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003be6:	ee1f 0a10 	vmov	r0, s30
 8003bea:	4629      	mov	r1, r5
 8003bec:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003bf0:	9729      	str	r7, [sp, #164]	; 0xa4
 8003bf2:	f00f fdbd 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8003bf6:	4650      	mov	r0, sl
 8003bf8:	ee1f 1a10 	vmov	r1, s30
 8003bfc:	f00c ff90 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8003c00:	4651      	mov	r1, sl
 8003c02:	ee18 0a10 	vmov	r0, s16
 8003c06:	f00d fc6e 	bl	80114e6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003c0a:	487b      	ldr	r0, [pc, #492]	; (8003df8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb8>)
 8003c0c:	f8c4 06fc 	str.w	r0, [r4, #1788]	; 0x6fc
    buttonWithIcon_LH3.setXY(194, 97);
 8003c10:	2261      	movs	r2, #97	; 0x61
 8003c12:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003c14:	21c2      	movs	r1, #194	; 0xc2
 8003c16:	f7fe fefd 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c1a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003c1e:	4663      	mov	r3, ip
 8003c20:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003c24:	4662      	mov	r2, ip
 8003c26:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c2a:	2709      	movs	r7, #9
 8003c2c:	4661      	mov	r1, ip
 8003c2e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003c30:	9500      	str	r5, [sp, #0]
    line1_RP.setPosition(0, 15, 240, 10);
 8003c32:	46c8      	mov	r8, r9
 8003c34:	f04f 0901 	mov.w	r9, #1
 8003c38:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003c3c:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003c40:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c44:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c48:	f010 fa87 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c4c:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8003c4e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003c50:	f8c4 2748 	str.w	r2, [r4, #1864]	; 0x748
 8003c54:	ee19 0a10 	vmov	r0, s18
 8003c58:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8003c5c:	f00c ff60 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8003c60:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003c62:	223d      	movs	r2, #61	; 0x3d
 8003c64:	21c2      	movs	r1, #194	; 0xc2
 8003c66:	f7fe fed5 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c6a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003c6e:	4663      	mov	r3, ip
 8003c70:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003c74:	4662      	mov	r2, ip
 8003c76:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c7a:	4661      	mov	r1, ip
 8003c7c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003c7e:	9500      	str	r5, [sp, #0]
 8003c80:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003c84:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003c88:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c8c:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003c90:	f010 fa63 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c94:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8003c96:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003c98:	f8c4 2784 	str.w	r2, [r4, #1924]	; 0x784
 8003c9c:	ee19 0a10 	vmov	r0, s18
 8003ca0:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 8003ca4:	f00c ff3c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8003ca8:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003caa:	2219      	movs	r2, #25
 8003cac:	21c2      	movs	r1, #194	; 0xc2
 8003cae:	f7fe feb1 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003cb2:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003cb6:	4663      	mov	r3, ip
 8003cb8:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003cbc:	4662      	mov	r2, ip
 8003cbe:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003cc2:	4661      	mov	r1, ip
 8003cc4:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003cc6:	9500      	str	r5, [sp, #0]
 8003cc8:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003ccc:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003cd0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003cd4:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003cd8:	f010 fa3f 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003cdc:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8003cde:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003ce0:	f8c4 27c0 	str.w	r2, [r4, #1984]	; 0x7c0
 8003ce4:	ee19 0a10 	vmov	r0, s18
 8003ce8:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8003cec:	f00c ff18 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 8003cf0:	2268      	movs	r2, #104	; 0x68
 8003cf2:	4641      	mov	r1, r8
 8003cf4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003cf6:	f7fe fe8d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003cfa:	f04f 3cff 	mov.w	ip, #4294967295
 8003cfe:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8003d02:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7fe ff0c 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d10:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8003d14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d18:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8003d1c:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	f43f acba 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d26:	4930      	ldr	r1, [pc, #192]	; (8003de8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003d28:	880b      	ldrh	r3, [r1, #0]
 8003d2a:	2b07      	cmp	r3, #7
 8003d2c:	f67f acbf 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003d30:	4b2e      	ldr	r3, [pc, #184]	; (8003dec <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003d32:	2107      	movs	r1, #7
 8003d34:	6818      	ldr	r0, [r3, #0]
 8003d36:	f004 fe71 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8003d3a:	4a2d      	ldr	r2, [pc, #180]	; (8003df0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003d3c:	4603      	mov	r3, r0
 8003d3e:	4641      	mov	r1, r8
 8003d40:	4650      	mov	r0, sl
 8003d42:	f016 f973 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8003d46:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003d48:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8003d4c:	f00f fcf0 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003d50:	4a28      	ldr	r2, [pc, #160]	; (8003df4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003d52:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003d54:	9229      	str	r2, [sp, #164]	; 0xa4
 8003d56:	4629      	mov	r1, r5
 8003d58:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8003d5c:	f00f fd08 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003d60:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003d62:	ee19 0a10 	vmov	r0, s18
 8003d66:	f00c fedb 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8003d6a:	2244      	movs	r2, #68	; 0x44
 8003d6c:	2116      	movs	r1, #22
 8003d6e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003d70:	f7fe fe50 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003d74:	f04f 3cff 	mov.w	ip, #4294967295
 8003d78:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8003d7c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8003d80:	4628      	mov	r0, r5
 8003d82:	f7fe fecf 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d86:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d8a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8003d8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d92:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8003d96:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	f43f ac7d 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003da0:	4911      	ldr	r1, [pc, #68]	; (8003de8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003da2:	880b      	ldrh	r3, [r1, #0]
 8003da4:	2b06      	cmp	r3, #6
 8003da6:	f67f ac82 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003daa:	4b10      	ldr	r3, [pc, #64]	; (8003dec <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003dac:	2106      	movs	r1, #6
 8003dae:	6818      	ldr	r0, [r3, #0]
 8003db0:	f004 fe34 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8003db4:	4a0e      	ldr	r2, [pc, #56]	; (8003df0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003db6:	4603      	mov	r3, r0
 8003db8:	4641      	mov	r1, r8
 8003dba:	4650      	mov	r0, sl
 8003dbc:	f016 f936 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003dc0:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8003dc2:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003dc6:	f00f fcb3 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003dca:	230c      	movs	r3, #12
 8003dcc:	4a09      	ldr	r2, [pc, #36]	; (8003df4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8003dce:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003dd0:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003dd4:	4629      	mov	r1, r5
 8003dd6:	9229      	str	r2, [sp, #164]	; 0xa4
 8003dd8:	f00f fcca 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8003ddc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003dde:	ee19 0a10 	vmov	r0, s18
 8003de2:	e00b      	b.n	8003dfc <_ZN23Calibration_PadViewBaseC1Ev+0xcbc>
 8003de4:	2001388c 	.word	0x2001388c
 8003de8:	20013890 	.word	0x20013890
 8003dec:	20013898 	.word	0x20013898
 8003df0:	0802d57d 	.word	0x0802d57d
 8003df4:	0802d5f0 	.word	0x0802d5f0
 8003df8:	00ac00f0 	.word	0x00ac00f0
 8003dfc:	f00c fe90 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8003e00:	2220      	movs	r2, #32
 8003e02:	2116      	movs	r1, #22
 8003e04:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003e06:	f7fe fe05 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003e0a:	f04f 3cff 	mov.w	ip, #4294967295
 8003e0e:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8003e12:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003e16:	4628      	mov	r0, r5
 8003e18:	f7fe fe84 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e20:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003e24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e28:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8003e2c:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	f43f ac32 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e36:	49d9      	ldr	r1, [pc, #868]	; (800419c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003e38:	880b      	ldrh	r3, [r1, #0]
 8003e3a:	2b05      	cmp	r3, #5
 8003e3c:	f67f ac37 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003e40:	4bd7      	ldr	r3, [pc, #860]	; (80041a0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8003e42:	2105      	movs	r1, #5
 8003e44:	6818      	ldr	r0, [r3, #0]
 8003e46:	f004 fde9 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8003e4a:	4ad6      	ldr	r2, [pc, #856]	; (80041a4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8003e4c:	4603      	mov	r3, r0
 8003e4e:	4641      	mov	r1, r8
 8003e50:	4650      	mov	r0, sl
 8003e52:	f016 f8eb 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003e56:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003e58:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8003e5c:	f00f fc68 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e60:	f04f 0e14 	mov.w	lr, #20
 8003e64:	4ad0      	ldr	r2, [pc, #832]	; (80041a8 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003e66:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003e68:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003e6c:	4629      	mov	r1, r5
 8003e6e:	9229      	str	r2, [sp, #164]	; 0xa4
 8003e70:	f00f fc7e 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003e74:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003e76:	ee19 0a10 	vmov	r0, s18
 8003e7a:	f00c fe51 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8003e7e:	ee1b 0a90 	vmov	r0, s23
 8003e82:	23f0      	movs	r3, #240	; 0xf0
 8003e84:	220f      	movs	r2, #15
 8003e86:	4631      	mov	r1, r6
 8003e88:	f8cd 8000 	str.w	r8, [sp]
 8003e8c:	f7fe fdcf 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e94:	f04f 3cff 	mov.w	ip, #4294967295
 8003e98:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003e9a:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
    line1_LH.setStart(5, 5);
 8003e9e:	2205      	movs	r2, #5
 8003ea0:	f8c4 c934 	str.w	ip, [r4, #2356]	; 0x934
 8003ea4:	4611      	mov	r1, r2
 8003ea6:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8003eaa:	ee1b 0a90 	vmov	r0, s23
 8003eae:	f7ff f92f 	bl	8003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8003eb2:	2205      	movs	r2, #5
 8003eb4:	ee1b 0a90 	vmov	r0, s23
 8003eb8:	21eb      	movs	r1, #235	; 0xeb
 8003eba:	f7ff f92d 	bl	8003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8003ebe:	ee1b 0a90 	vmov	r0, s23
 8003ec2:	4649      	mov	r1, r9
 8003ec4:	f7ff f92c 	bl	8003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003ec8:	ee1b 0a90 	vmov	r0, s23
 8003ecc:	4649      	mov	r1, r9
 8003ece:	f00f f81f 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8003ed2:	ee1b 1a90 	vmov	r1, s23
 8003ed6:	ee19 0a10 	vmov	r0, s18
 8003eda:	f00c fe21 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8003ede:	4632      	mov	r2, r6
 8003ee0:	ee1f 0a90 	vmov	r0, s31
 8003ee4:	2149      	movs	r1, #73	; 0x49
 8003ee6:	f7fe fd95 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003eea:	f04f 3cff 	mov.w	ip, #4294967295
 8003eee:	f8c4 c96c 	str.w	ip, [r4, #2412]	; 0x96c
        boundingArea = calculateBoundingArea();
 8003ef2:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003ef6:	4660      	mov	r0, ip
 8003ef8:	ee1f 1a90 	vmov	r1, s31
        linespace = space;
 8003efc:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8003f00:	f00f f99c 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003f04:	ee1f 0a90 	vmov	r0, s31
 8003f08:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003f0c:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003f10:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003f14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003f18:	2304      	movs	r3, #4
 8003f1a:	4aa3      	ldr	r2, [pc, #652]	; (80041a8 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
 8003f1c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8003f20:	4629      	mov	r1, r5
 8003f22:	ee1f 0a90 	vmov	r0, s31
 8003f26:	9229      	str	r2, [sp, #164]	; 0xa4
 8003f28:	f00f fc22 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8003f2c:	ee1f 1a90 	vmov	r1, s31
 8003f30:	ee19 0a10 	vmov	r0, s18
 8003f34:	f00c fdf4 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8003f38:	ee19 1a10 	vmov	r1, s18
 8003f3c:	ee18 0a10 	vmov	r0, s16
 8003f40:	f00d fad1 	bl	80114e6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003f44:	4899      	ldr	r0, [pc, #612]	; (80041ac <_ZN23Calibration_PadViewBaseC1Ev+0x106c>)
 8003f46:	f8c4 098c 	str.w	r0, [r4, #2444]	; 0x98c
    buttonWithIcon_RH3.setXY(194, 97);
 8003f4a:	2261      	movs	r2, #97	; 0x61
 8003f4c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003f4e:	21c2      	movs	r1, #194	; 0xc2
 8003f50:	f7fe fd60 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f54:	aa28      	add	r2, sp, #160	; 0xa0
 8003f56:	a826      	add	r0, sp, #152	; 0x98
 8003f58:	4613      	mov	r3, r2
 8003f5a:	4601      	mov	r1, r0
 8003f5c:	9500      	str	r5, [sp, #0]
 8003f5e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003f60:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003f64:	aa27      	add	r2, sp, #156	; 0x9c
 8003f66:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003f6a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003f6e:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003f72:	f010 f8f2 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f76:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8003f78:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003f7a:	f8c4 29d8 	str.w	r2, [r4, #2520]	; 0x9d8
 8003f7e:	ee19 0a90 	vmov	r0, s19
 8003f82:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8003f86:	f00c fdcb 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8003f8a:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003f8c:	223d      	movs	r2, #61	; 0x3d
 8003f8e:	21c2      	movs	r1, #194	; 0xc2
 8003f90:	f7fe fd40 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f94:	aa28      	add	r2, sp, #160	; 0xa0
 8003f96:	a826      	add	r0, sp, #152	; 0x98
 8003f98:	4613      	mov	r3, r2
 8003f9a:	4601      	mov	r1, r0
 8003f9c:	9500      	str	r5, [sp, #0]
 8003f9e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003fa0:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003fa4:	aa27      	add	r2, sp, #156	; 0x9c
 8003fa6:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003faa:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003fae:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003fb2:	f010 f8d2 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003fb6:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8003fb8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003fba:	f8c4 2a14 	str.w	r2, [r4, #2580]	; 0xa14
 8003fbe:	ee19 0a90 	vmov	r0, s19
 8003fc2:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8003fc6:	f00c fdab 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8003fca:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003fcc:	2219      	movs	r2, #25
 8003fce:	21c2      	movs	r1, #194	; 0xc2
 8003fd0:	f7fe fd20 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003fd4:	aa28      	add	r2, sp, #160	; 0xa0
 8003fd6:	a826      	add	r0, sp, #152	; 0x98
 8003fd8:	4613      	mov	r3, r2
 8003fda:	4601      	mov	r1, r0
 8003fdc:	9500      	str	r5, [sp, #0]
 8003fde:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003fe0:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003fe4:	aa27      	add	r2, sp, #156	; 0x9c
 8003fe6:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003fea:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003fee:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003ff2:	f010 f8b2 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003ff6:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8003ff8:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003ffa:	f8c4 2a50 	str.w	r2, [r4, #2640]	; 0xa50
 8003ffe:	ee19 0a90 	vmov	r0, s19
 8004002:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004006:	f00c fd8b 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 800400a:	4641      	mov	r1, r8
 800400c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800400e:	2268      	movs	r2, #104	; 0x68
 8004010:	f7fe fd00 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004014:	f04f 32ff 	mov.w	r2, #4294967295
 8004018:	f8c4 2a94 	str.w	r2, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 800401c:	4628      	mov	r0, r5
        linespace = space;
 800401e:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004022:	f7fe fd7f 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004026:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800402a:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 800402e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004032:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004036:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 800403a:	2b00      	cmp	r3, #0
 800403c:	f43f ab2d 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004040:	4956      	ldr	r1, [pc, #344]	; (800419c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004042:	880b      	ldrh	r3, [r1, #0]
 8004044:	2b03      	cmp	r3, #3
 8004046:	f67f ab32 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800404a:	4b55      	ldr	r3, [pc, #340]	; (80041a0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
        : typedTextId(id)
 800404c:	f8df a158 	ldr.w	sl, [pc, #344]	; 80041a8 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>
        return texts->getText(typedTextId);
 8004050:	6818      	ldr	r0, [r3, #0]
 8004052:	2103      	movs	r1, #3
 8004054:	f004 fce2 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8004058:	4a52      	ldr	r2, [pc, #328]	; (80041a4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 800405a:	4603      	mov	r3, r0
 800405c:	4641      	mov	r1, r8
 800405e:	4628      	mov	r0, r5
 8004060:	f015 ffe4 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004064:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004066:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800406a:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 800406c:	f00f fb60 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004070:	980e      	ldr	r0, [sp, #56]	; 0x38
        : typedTextId(id)
 8004072:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004076:	4629      	mov	r1, r5
 8004078:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 800407c:	f00f fb78 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004080:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004082:	ee19 0a90 	vmov	r0, s19
 8004086:	f00c fd4b 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800408a:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 800408e:	2244      	movs	r2, #68	; 0x44
 8004090:	2116      	movs	r1, #22
 8004092:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004094:	f7fe fcbe 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8004098:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 800409c:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 80040a0:	4628      	mov	r0, r5
 80040a2:	f7fe fd3f 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80040a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040aa:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 80040ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040b2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 80040b6:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	f43f aaed 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040c0:	4936      	ldr	r1, [pc, #216]	; (800419c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 80040c2:	880b      	ldrh	r3, [r1, #0]
 80040c4:	2b02      	cmp	r3, #2
 80040c6:	f67f aaf2 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80040ca:	4b35      	ldr	r3, [pc, #212]	; (80041a0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 80040cc:	2102      	movs	r1, #2
 80040ce:	6818      	ldr	r0, [r3, #0]
 80040d0:	f004 fca4 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80040d4:	4a33      	ldr	r2, [pc, #204]	; (80041a4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 80040d6:	4603      	mov	r3, r0
 80040d8:	4641      	mov	r1, r8
 80040da:	4648      	mov	r0, r9
 80040dc:	f015 ffa6 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 80040e0:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 80040e2:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 80040e6:	f00f fb23 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80040ea:	f04f 020c 	mov.w	r2, #12
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80040ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80040f0:	f8ad 20a8 	strh.w	r2, [sp, #168]	; 0xa8
 80040f4:	4629      	mov	r1, r5
 80040f6:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80040fa:	f00f fb39 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 80040fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004100:	ee19 0a90 	vmov	r0, s19
 8004104:	f00c fd0c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004108:	2220      	movs	r2, #32
 800410a:	2116      	movs	r1, #22
 800410c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800410e:	f7fe fc81 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004112:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004116:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 800411a:	4628      	mov	r0, r5
 800411c:	f7fe fd02 	bl	8002b24 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004120:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004124:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004128:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800412c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004130:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004134:	2b00      	cmp	r3, #0
 8004136:	f43f aab0 	beq.w	800369a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800413a:	4918      	ldr	r1, [pc, #96]	; (800419c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 800413c:	880b      	ldrh	r3, [r1, #0]
 800413e:	2b01      	cmp	r3, #1
 8004140:	f67f aab5 	bls.w	80036ae <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8004144:	4b16      	ldr	r3, [pc, #88]	; (80041a0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004146:	2101      	movs	r1, #1
 8004148:	6818      	ldr	r0, [r3, #0]
 800414a:	f004 fc67 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 800414e:	4a15      	ldr	r2, [pc, #84]	; (80041a4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004150:	4603      	mov	r3, r0
 8004152:	4641      	mov	r1, r8
 8004154:	4648      	mov	r0, r9
 8004156:	f015 ff69 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 800415a:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 800415c:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004160:	f00f fae6 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004164:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004166:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004168:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800416c:	4629      	mov	r1, r5
 800416e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004172:	f00f fafd 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004176:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004178:	ee19 0a90 	vmov	r0, s19
 800417c:	f00c fcd0 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004180:	ee1c 0a10 	vmov	r0, s24
 8004184:	4631      	mov	r1, r6
 8004186:	f8cd 8000 	str.w	r8, [sp]
 800418a:	23f0      	movs	r3, #240	; 0xf0
 800418c:	220f      	movs	r2, #15
 800418e:	f7fe fc4e 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004192:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004194:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004198:	2205      	movs	r2, #5
 800419a:	e009      	b.n	80041b0 <_ZN23Calibration_PadViewBaseC1Ev+0x1070>
 800419c:	20013890 	.word	0x20013890
 80041a0:	20013898 	.word	0x20013898
 80041a4:	0802d57d 	.word	0x0802d57d
 80041a8:	0802d5f0 	.word	0x0802d5f0
 80041ac:	00ac00f0 	.word	0x00ac00f0
 80041b0:	ee1c 0a10 	vmov	r0, s24
 80041b4:	4611      	mov	r1, r2
 80041b6:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 80041ba:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 80041be:	f7fe ffa7 	bl	8003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 80041c2:	2205      	movs	r2, #5
 80041c4:	ee1c 0a10 	vmov	r0, s24
 80041c8:	21eb      	movs	r1, #235	; 0xeb
 80041ca:	f7fe ffa5 	bl	8003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 80041ce:	ee1c 0a10 	vmov	r0, s24
 80041d2:	2101      	movs	r1, #1
 80041d4:	f7fe ffa4 	bl	8003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80041d8:	ee1c 0a10 	vmov	r0, s24
 80041dc:	2101      	movs	r1, #1
 80041de:	f00e fe97 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 80041e2:	ee1c 1a10 	vmov	r1, s24
 80041e6:	ee19 0a90 	vmov	r0, s19
 80041ea:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 80041ee:	f00c fc97 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 80041f2:	4632      	mov	r2, r6
 80041f4:	9803      	ldr	r0, [sp, #12]
 80041f6:	2149      	movs	r1, #73	; 0x49
 80041f8:	f7fe fc0c 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80041fc:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 80041fe:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004202:	4648      	mov	r0, r9
        linespace = space;
 8004204:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004208:	f00f f818 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800420c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004210:	9b03      	ldr	r3, [sp, #12]
 8004212:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004216:	333c      	adds	r3, #60	; 0x3c
 8004218:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 800421c:	9803      	ldr	r0, [sp, #12]
 800421e:	f8ad 60a8 	strh.w	r6, [sp, #168]	; 0xa8
 8004222:	4629      	mov	r1, r5
 8004224:	f00f faa4 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004228:	9903      	ldr	r1, [sp, #12]
 800422a:	ee19 0a90 	vmov	r0, s19
 800422e:	f00c fc77 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004232:	ee19 1a90 	vmov	r1, s19
 8004236:	ee18 0a10 	vmov	r0, s16
 800423a:	f00d f954 	bl	80114e6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 800423e:	ee18 0a10 	vmov	r0, s16
 8004242:	4631      	mov	r1, r6
 8004244:	f00d f940 	bl	80114c8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004248:	ee18 1a10 	vmov	r1, s16
 800424c:	ee1a 0a10 	vmov	r0, s20
 8004250:	f00c fc66 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004254:	ee1c 0a90 	vmov	r0, s25
 8004258:	4631      	mov	r1, r6
 800425a:	f8cd 8000 	str.w	r8, [sp]
 800425e:	23f0      	movs	r3, #240	; 0xf0
 8004260:	224b      	movs	r2, #75	; 0x4b
 8004262:	f7fe fbe4 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004266:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800426a:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 800426e:	2205      	movs	r2, #5
 8004270:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004272:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004276:	ee1c 0a90 	vmov	r0, s25
 800427a:	4611      	mov	r1, r2
 800427c:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004280:	f7fe ff46 	bl	8003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004284:	2205      	movs	r2, #5
 8004286:	ee1c 0a90 	vmov	r0, s25
 800428a:	21eb      	movs	r1, #235	; 0xeb
 800428c:	f7fe ff44 	bl	8003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004290:	ee1c 0a90 	vmov	r0, s25
 8004294:	2101      	movs	r1, #1
 8004296:	f7fe ff43 	bl	8003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800429a:	ee1c 0a90 	vmov	r0, s25
 800429e:	2101      	movs	r1, #1
 80042a0:	f00e fe36 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80042a4:	ee1c 1a90 	vmov	r1, s25
 80042a8:	ee1a 0a10 	vmov	r0, s20
 80042ac:	f00c fc38 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 80042b0:	9804      	ldr	r0, [sp, #16]
 80042b2:	223c      	movs	r2, #60	; 0x3c
 80042b4:	2146      	movs	r1, #70	; 0x46
 80042b6:	f7fe fbad 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80042ba:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80042bc:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 80042c0:	4648      	mov	r0, r9
        linespace = space;
 80042c2:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 80042c6:	f00e ffb9 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042ca:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80042ce:	9b04      	ldr	r3, [sp, #16]
 80042d0:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80042d4:	333c      	adds	r3, #60	; 0x3c
 80042d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042da:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80042dc:	9804      	ldr	r0, [sp, #16]
 80042de:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042e2:	4629      	mov	r1, r5
 80042e4:	f00f fa44 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042e8:	9904      	ldr	r1, [sp, #16]
 80042ea:	ee1a 0a10 	vmov	r0, s20
 80042ee:	f00c fc17 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80042f2:	ee1d 0a10 	vmov	r0, s26
 80042f6:	4631      	mov	r1, r6
 80042f8:	f8cd 8000 	str.w	r8, [sp]
 80042fc:	23f0      	movs	r3, #240	; 0xf0
 80042fe:	2232      	movs	r2, #50	; 0x32
 8004300:	f7fe fb95 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004304:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004306:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 800430a:	2205      	movs	r2, #5
 800430c:	ee1d 0a10 	vmov	r0, s26
 8004310:	4611      	mov	r1, r2
 8004312:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004316:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 800431a:	f7fe fef9 	bl	8003110 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 800431e:	2205      	movs	r2, #5
 8004320:	ee1d 0a10 	vmov	r0, s26
 8004324:	21eb      	movs	r1, #235	; 0xeb
 8004326:	f7fe fef7 	bl	8003118 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 800432a:	ee1d 0a10 	vmov	r0, s26
 800432e:	2101      	movs	r1, #1
 8004330:	f7fe fef6 	bl	8003120 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004334:	ee1d 0a10 	vmov	r0, s26
 8004338:	2101      	movs	r1, #1
 800433a:	f00e fde9 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800433e:	ee1d 1a10 	vmov	r1, s26
 8004342:	ee1a 0a10 	vmov	r0, s20
 8004346:	f00c fbeb 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 800434a:	9805      	ldr	r0, [sp, #20]
 800434c:	2223      	movs	r2, #35	; 0x23
 800434e:	2145      	movs	r1, #69	; 0x45
 8004350:	f7fe fb60 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8004354:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004356:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 800435a:	4648      	mov	r0, r9
        linespace = space;
 800435c:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004360:	f00e ff6c 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004364:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004368:	9b05      	ldr	r3, [sp, #20]
 800436a:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800436e:	333c      	adds	r3, #60	; 0x3c
 8004370:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004374:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004376:	9805      	ldr	r0, [sp, #20]
 8004378:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800437c:	4629      	mov	r1, r5
 800437e:	f00f f9f7 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004382:	9905      	ldr	r1, [sp, #20]
 8004384:	ee1a 0a10 	vmov	r0, s20
 8004388:	f00c fbca 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800438c:	9806      	ldr	r0, [sp, #24]
 800438e:	220c      	movs	r2, #12
 8004390:	2136      	movs	r1, #54	; 0x36
 8004392:	f7fe fb3f 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8004396:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004398:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 800439c:	4648      	mov	r0, r9
        linespace = space;
 800439e:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 80043a2:	f00e ff4b 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80043a6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80043aa:	9b06      	ldr	r3, [sp, #24]
 80043ac:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80043b0:	333c      	adds	r3, #60	; 0x3c
 80043b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80043b6:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80043b8:	9806      	ldr	r0, [sp, #24]
 80043ba:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80043be:	4629      	mov	r1, r5
 80043c0:	f00f f9d6 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80043c4:	ee1a 0a10 	vmov	r0, s20
 80043c8:	9906      	ldr	r1, [sp, #24]
 80043ca:	f00c fba9 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80043ce:	4620      	mov	r0, r4
 80043d0:	b02d      	add	sp, #180	; 0xb4
 80043d2:	ecbd 8b10 	vpop	{d8-d15}
 80043d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043da:	bf00      	nop

080043dc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80043dc:	4770      	bx	lr

080043de <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80043de:	4770      	bx	lr

080043e0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80043e0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80043e4:	6808      	ldr	r0, [r1, #0]
 80043e6:	6849      	ldr	r1, [r1, #4]
 80043e8:	c303      	stmia	r3!, {r0, r1}
    }
 80043ea:	4770      	bx	lr

080043ec <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80043ec:	4770      	bx	lr

080043ee <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80043ee:	4770      	bx	lr

080043f0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80043f0:	6041      	str	r1, [r0, #4]
    }
 80043f2:	4770      	bx	lr

080043f4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80043f4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80043f6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80043f8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80043fc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004400:	8002      	strh	r2, [r0, #0]
 8004402:	8042      	strh	r2, [r0, #2]
 8004404:	8084      	strh	r4, [r0, #4]
 8004406:	80c1      	strh	r1, [r0, #6]
        }
 8004408:	bd10      	pop	{r4, pc}

0800440a <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800440a:	4770      	bx	lr

0800440c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800440c:	4770      	bx	lr
	...

08004410 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004410:	4b06      	ldr	r3, [pc, #24]	; (800442c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004412:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004416:	2300      	movs	r3, #0
 8004418:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800441c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004420:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004424:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004428:	4770      	bx	lr
 800442a:	bf00      	nop
 800442c:	080047cd 	.word	0x080047cd

08004430 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004430:	2301      	movs	r3, #1
 8004432:	7203      	strb	r3, [r0, #8]
    }
 8004434:	4770      	bx	lr

08004436 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004436:	4770      	bx	lr

08004438 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004438:	4770      	bx	lr

0800443a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800443a:	4770      	bx	lr

0800443c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800443c:	4770      	bx	lr

0800443e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800443e:	4770      	bx	lr

08004440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004440:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004442:	6840      	ldr	r0, [r0, #4]
 8004444:	6803      	ldr	r3, [r0, #0]
 8004446:	3110      	adds	r1, #16
 8004448:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800444a:	4718      	bx	r3

0800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800444c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800444e:	6840      	ldr	r0, [r0, #4]
 8004450:	6803      	ldr	r3, [r0, #0]
 8004452:	3110      	adds	r1, #16
 8004454:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004456:	4718      	bx	r3

08004458 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004458:	4770      	bx	lr

0800445a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800445a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800445c:	6840      	ldr	r0, [r0, #4]
 800445e:	6803      	ldr	r3, [r0, #0]
 8004460:	3110      	adds	r1, #16
 8004462:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004464:	4718      	bx	r3

08004466 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004466:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004468:	6840      	ldr	r0, [r0, #4]
 800446a:	6803      	ldr	r3, [r0, #0]
 800446c:	3110      	adds	r1, #16
 800446e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004470:	4718      	bx	r3

08004472 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004472:	4770      	bx	lr

08004474 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004474:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004476:	68c2      	ldr	r2, [r0, #12]
 8004478:	6841      	ldr	r1, [r0, #4]
 800447a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800447c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800447e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004482:	07d2      	lsls	r2, r2, #31
 8004484:	bf48      	it	mi
 8004486:	590a      	ldrmi	r2, [r1, r4]
 8004488:	689b      	ldr	r3, [r3, #8]
    }
 800448a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800448e:	bf48      	it	mi
 8004490:	58d3      	ldrmi	r3, [r2, r3]
 8004492:	4718      	bx	r3

08004494 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004494:	6843      	ldr	r3, [r0, #4]
 8004496:	b12b      	cbz	r3, 80044a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004498:	6883      	ldr	r3, [r0, #8]
 800449a:	b92b      	cbnz	r3, 80044a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800449c:	68c0      	ldr	r0, [r0, #12]
 800449e:	f000 0001 	and.w	r0, r0, #1
 80044a2:	4770      	bx	lr
 80044a4:	4618      	mov	r0, r3
 80044a6:	4770      	bx	lr
 80044a8:	2001      	movs	r0, #1
    }
 80044aa:	4770      	bx	lr

080044ac <_ZN8touchgfx12NoTransitionD0Ev>:
 80044ac:	b510      	push	{r4, lr}
 80044ae:	210c      	movs	r1, #12
 80044b0:	4604      	mov	r4, r0
 80044b2:	f026 fcc2 	bl	802ae3a <_ZdlPvj>
 80044b6:	4620      	mov	r0, r4
 80044b8:	bd10      	pop	{r4, pc}

080044ba <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80044ba:	b510      	push	{r4, lr}
 80044bc:	2110      	movs	r1, #16
 80044be:	4604      	mov	r4, r0
 80044c0:	f026 fcbb 	bl	802ae3a <_ZdlPvj>
 80044c4:	4620      	mov	r0, r4
 80044c6:	bd10      	pop	{r4, pc}

080044c8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80044c8:	b510      	push	{r4, lr}
 80044ca:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80044ce:	4604      	mov	r4, r0
 80044d0:	f026 fcb3 	bl	802ae3a <_ZdlPvj>
 80044d4:	4620      	mov	r0, r4
 80044d6:	bd10      	pop	{r4, pc}

080044d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80044d8:	b510      	push	{r4, lr}
 80044da:	2138      	movs	r1, #56	; 0x38
 80044dc:	4604      	mov	r4, r0
 80044de:	f026 fcac 	bl	802ae3a <_ZdlPvj>
 80044e2:	4620      	mov	r0, r4
 80044e4:	bd10      	pop	{r4, pc}

080044e6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80044e6:	b510      	push	{r4, lr}
 80044e8:	2128      	movs	r1, #40	; 0x28
 80044ea:	4604      	mov	r4, r0
 80044ec:	f026 fca5 	bl	802ae3a <_ZdlPvj>
 80044f0:	4620      	mov	r0, r4
 80044f2:	bd10      	pop	{r4, pc}

080044f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80044f4:	b510      	push	{r4, lr}
 80044f6:	2138      	movs	r1, #56	; 0x38
 80044f8:	4604      	mov	r4, r0
 80044fa:	f026 fc9e 	bl	802ae3a <_ZdlPvj>
 80044fe:	4620      	mov	r0, r4
 8004500:	bd10      	pop	{r4, pc}

08004502 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004502:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004504:	f012 fbe4 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8004508:	6803      	ldr	r3, [r0, #0]
    }
 800450a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800450e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004510:	4718      	bx	r3
	...

08004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004514:	b513      	push	{r0, r1, r4, lr}
 8004516:	4604      	mov	r4, r0
        animationCounter++;
 8004518:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800451a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800451c:	3001      	adds	r0, #1
 800451e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004520:	4298      	cmp	r0, r3
        animationCounter++;
 8004522:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004524:	d905      	bls.n	8004532 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8004526:	2301      	movs	r3, #1
 8004528:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800452a:	2300      	movs	r3, #0
 800452c:	72a3      	strb	r3, [r4, #10]
    }
 800452e:	b002      	add	sp, #8
 8004530:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004532:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004536:	2100      	movs	r1, #0
 8004538:	f014 fa3a 	bl	80189b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800453c:	f010 0201 	ands.w	r2, r0, #1
 8004540:	b283      	uxth	r3, r0
 8004542:	d12a      	bne.n	800459a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004544:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004546:	4a19      	ldr	r2, [pc, #100]	; (80045ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004548:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800454c:	89e3      	ldrh	r3, [r4, #14]
 800454e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004550:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004554:	82a0      	strh	r0, [r4, #20]
 8004556:	2000      	movs	r0, #0
 8004558:	1ad2      	subs	r2, r2, r3
 800455a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800455e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004560:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004562:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004564:	4a12      	ldr	r2, [pc, #72]	; (80045b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004566:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800456a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800456c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004570:	691b      	ldr	r3, [r3, #16]
 8004572:	f8ad 1000 	strh.w	r1, [sp]
 8004576:	f8ad 2006 	strh.w	r2, [sp, #6]
 800457a:	4669      	mov	r1, sp
 800457c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800457e:	7aa3      	ldrb	r3, [r4, #10]
 8004580:	2b01      	cmp	r3, #1
 8004582:	d1d4      	bne.n	800452e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004584:	4b0b      	ldr	r3, [pc, #44]	; (80045b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004586:	781b      	ldrb	r3, [r3, #0]
 8004588:	2b00      	cmp	r3, #0
 800458a:	d0d0      	beq.n	800452e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800458c:	f012 fba0 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004590:	b002      	add	sp, #8
 8004592:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004596:	f012 bba1 	b.w	8016cdc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800459a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800459e:	2800      	cmp	r0, #0
 80045a0:	bfd8      	it	le
 80045a2:	460a      	movle	r2, r1
 80045a4:	4413      	add	r3, r2
 80045a6:	81e3      	strh	r3, [r4, #14]
 80045a8:	e7cd      	b.n	8004546 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80045aa:	bf00      	nop
 80045ac:	20013828 	.word	0x20013828
 80045b0:	2001382a 	.word	0x2001382a
 80045b4:	20013832 	.word	0x20013832

080045b8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80045b8:	b510      	push	{r4, lr}
 80045ba:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80045bc:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80045c0:	b158      	cbz	r0, 80045da <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80045c2:	6803      	ldr	r3, [r0, #0]
 80045c4:	68db      	ldr	r3, [r3, #12]
 80045c6:	4798      	blx	r3
 80045c8:	b138      	cbz	r0, 80045da <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80045ca:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80045ce:	6803      	ldr	r3, [r0, #0]
 80045d0:	689b      	ldr	r3, [r3, #8]
 80045d2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80045d4:	2300      	movs	r3, #0
 80045d6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80045da:	bd10      	pop	{r4, pc}

080045dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80045dc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045e0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80045e4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045e6:	68a8      	ldr	r0, [r5, #8]
 80045e8:	6803      	ldr	r3, [r0, #0]
 80045ea:	6a1b      	ldr	r3, [r3, #32]
 80045ec:	4798      	blx	r3
 80045ee:	2897      	cmp	r0, #151	; 0x97
 80045f0:	d805      	bhi.n	80045fe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80045f2:	4b46      	ldr	r3, [pc, #280]	; (800470c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80045f4:	4a46      	ldr	r2, [pc, #280]	; (8004710 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045f6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045f8:	4846      	ldr	r0, [pc, #280]	; (8004714 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80045fa:	f027 fa31 	bl	802ba60 <__assert_func>
 80045fe:	6868      	ldr	r0, [r5, #4]
 8004600:	6803      	ldr	r3, [r0, #0]
 8004602:	6a1b      	ldr	r3, [r3, #32]
 8004604:	4798      	blx	r3
 8004606:	280f      	cmp	r0, #15
 8004608:	d803      	bhi.n	8004612 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800460a:	4b43      	ldr	r3, [pc, #268]	; (8004718 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 800460c:	4a40      	ldr	r2, [pc, #256]	; (8004710 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800460e:	21a4      	movs	r1, #164	; 0xa4
 8004610:	e7f2      	b.n	80045f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004612:	68e8      	ldr	r0, [r5, #12]
 8004614:	6803      	ldr	r3, [r0, #0]
 8004616:	6a1b      	ldr	r3, [r3, #32]
 8004618:	4798      	blx	r3
 800461a:	280b      	cmp	r0, #11
 800461c:	d803      	bhi.n	8004626 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800461e:	4b3f      	ldr	r3, [pc, #252]	; (800471c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8004620:	4a3b      	ldr	r2, [pc, #236]	; (8004710 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004622:	21a5      	movs	r1, #165	; 0xa5
 8004624:	e7e8      	b.n	80045f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8004626:	f012 fb53 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800462a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004724 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800462e:	3004      	adds	r0, #4
 8004630:	f012 fbb4 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004634:	f8d9 0000 	ldr.w	r0, [r9]
 8004638:	b110      	cbz	r0, 8004640 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800463a:	6803      	ldr	r3, [r0, #0]
 800463c:	68db      	ldr	r3, [r3, #12]
 800463e:	4798      	blx	r3
    if (*currentTrans)
 8004640:	f8d9 0000 	ldr.w	r0, [r9]
 8004644:	b110      	cbz	r0, 800464c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004646:	6803      	ldr	r3, [r0, #0]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	4798      	blx	r3
    if (*currentScreen)
 800464c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004728 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004650:	f8d8 0000 	ldr.w	r0, [r8]
 8004654:	b110      	cbz	r0, 800465c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004656:	6803      	ldr	r3, [r0, #0]
 8004658:	695b      	ldr	r3, [r3, #20]
 800465a:	4798      	blx	r3
    if (*currentPresenter)
 800465c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004660:	b110      	cbz	r0, 8004668 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004662:	6803      	ldr	r3, [r0, #0]
 8004664:	685b      	ldr	r3, [r3, #4]
 8004666:	4798      	blx	r3
    if (*currentScreen)
 8004668:	f8d8 0000 	ldr.w	r0, [r8]
 800466c:	b110      	cbz	r0, 8004674 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800466e:	6803      	ldr	r3, [r0, #0]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	4798      	blx	r3
    if (*currentPresenter)
 8004674:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004678:	b110      	cbz	r0, 8004680 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800467a:	6803      	ldr	r3, [r0, #0]
 800467c:	689b      	ldr	r3, [r3, #8]
 800467e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004680:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004682:	6803      	ldr	r3, [r0, #0]
 8004684:	2100      	movs	r1, #0
 8004686:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004688:	4798      	blx	r3
        : screenContainer(0), done(false)
 800468a:	f04f 0b00 	mov.w	fp, #0
 800468e:	4b24      	ldr	r3, [pc, #144]	; (8004720 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004690:	6003      	str	r3, [r0, #0]
 8004692:	4604      	mov	r4, r0
 8004694:	f8c0 b004 	str.w	fp, [r0, #4]
 8004698:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800469c:	68a8      	ldr	r0, [r5, #8]
 800469e:	6803      	ldr	r3, [r0, #0]
 80046a0:	4659      	mov	r1, fp
 80046a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046a4:	4798      	blx	r3
 80046a6:	4606      	mov	r6, r0
 80046a8:	f004 fea4 	bl	80093f4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046ac:	6868      	ldr	r0, [r5, #4]
 80046ae:	6803      	ldr	r3, [r0, #0]
 80046b0:	4659      	mov	r1, fp
 80046b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046b4:	4798      	blx	r3
 80046b6:	4631      	mov	r1, r6
 80046b8:	4605      	mov	r5, r0
 80046ba:	f004 fe77 	bl	80093ac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80046be:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80046c2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046c6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046ca:	b1e5      	cbz	r5, 8004706 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80046cc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80046ce:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046d2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80046d4:	f8c5 a008 	str.w	sl, [r5, #8]
 80046d8:	4630      	mov	r0, r6
 80046da:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80046dc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80046de:	4798      	blx	r3
    newPresenter->activate();
 80046e0:	682b      	ldr	r3, [r5, #0]
 80046e2:	4628      	mov	r0, r5
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046e8:	4621      	mov	r1, r4
 80046ea:	4630      	mov	r0, r6
 80046ec:	f014 f91c 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046f0:	6823      	ldr	r3, [r4, #0]
 80046f2:	4620      	mov	r0, r4
 80046f4:	691b      	ldr	r3, [r3, #16]
 80046f6:	4798      	blx	r3
    newTransition->invalidate();
 80046f8:	6823      	ldr	r3, [r4, #0]
 80046fa:	695b      	ldr	r3, [r3, #20]
 80046fc:	4620      	mov	r0, r4
}
 80046fe:	b001      	add	sp, #4
 8004700:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004704:	4718      	bx	r3
    model->bind(newPresenter);
 8004706:	462b      	mov	r3, r5
 8004708:	e7e1      	b.n	80046ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800470a:	bf00      	nop
 800470c:	0802d76c 	.word	0x0802d76c
 8004710:	0802d7fa 	.word	0x0802d7fa
 8004714:	0802d908 	.word	0x0802d908
 8004718:	0802d94f 	.word	0x0802d94f
 800471c:	0802d9f2 	.word	0x0802d9f2
 8004720:	0802eaac 	.word	0x0802eaac
 8004724:	2001387c 	.word	0x2001387c
 8004728:	20013878 	.word	0x20013878

0800472c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800472c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800472e:	4604      	mov	r4, r0
        animationCounter++;
 8004730:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004732:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004734:	3001      	adds	r0, #1
 8004736:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004738:	4298      	cmp	r0, r3
        animationCounter++;
 800473a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800473c:	d905      	bls.n	800474a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800473e:	2301      	movs	r3, #1
 8004740:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004742:	2300      	movs	r3, #0
 8004744:	72a3      	strb	r3, [r4, #10]
    }
 8004746:	b003      	add	sp, #12
 8004748:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800474a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800474e:	2100      	movs	r1, #0
 8004750:	f014 f92e 	bl	80189b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004754:	f010 0201 	ands.w	r2, r0, #1
 8004758:	b283      	uxth	r3, r0
 800475a:	d128      	bne.n	80047ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800475c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800475e:	4b18      	ldr	r3, [pc, #96]	; (80047c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004760:	4818      	ldr	r0, [pc, #96]	; (80047c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004762:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004764:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004766:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004768:	f9b0 0000 	ldrsh.w	r0, [r0]
 800476c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004770:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004772:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004774:	442b      	add	r3, r5
 8004776:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004778:	b212      	sxth	r2, r2
 800477a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800477e:	6803      	ldr	r3, [r0, #0]
 8004780:	8322      	strh	r2, [r4, #24]
 8004782:	f8ad 2000 	strh.w	r2, [sp]
 8004786:	2200      	movs	r2, #0
 8004788:	691b      	ldr	r3, [r3, #16]
 800478a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800478e:	4669      	mov	r1, sp
 8004790:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004792:	7aa3      	ldrb	r3, [r4, #10]
 8004794:	2b01      	cmp	r3, #1
 8004796:	d1d6      	bne.n	8004746 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004798:	4b0b      	ldr	r3, [pc, #44]	; (80047c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800479a:	781b      	ldrb	r3, [r3, #0]
 800479c:	2b00      	cmp	r3, #0
 800479e:	d0d2      	beq.n	8004746 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80047a0:	f012 fa96 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80047a4:	b003      	add	sp, #12
 80047a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80047aa:	f012 ba97 	b.w	8016cdc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80047ae:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80047b2:	2800      	cmp	r0, #0
 80047b4:	bfd8      	it	le
 80047b6:	460a      	movle	r2, r1
 80047b8:	4413      	add	r3, r2
 80047ba:	81e3      	strh	r3, [r4, #14]
 80047bc:	e7cf      	b.n	800475e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80047be:	bf00      	nop
 80047c0:	20013828 	.word	0x20013828
 80047c4:	2001382a 	.word	0x2001382a
 80047c8:	20013832 	.word	0x20013832

080047cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80047cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80047d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047d6:	68a8      	ldr	r0, [r5, #8]
 80047d8:	6803      	ldr	r3, [r0, #0]
 80047da:	6a1b      	ldr	r3, [r3, #32]
 80047dc:	4798      	blx	r3
 80047de:	f241 137b 	movw	r3, #4475	; 0x117b
 80047e2:	4298      	cmp	r0, r3
 80047e4:	d805      	bhi.n	80047f2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80047e6:	4b46      	ldr	r3, [pc, #280]	; (8004900 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80047e8:	4a46      	ldr	r2, [pc, #280]	; (8004904 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047ec:	4846      	ldr	r0, [pc, #280]	; (8004908 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80047ee:	f027 f937 	bl	802ba60 <__assert_func>
 80047f2:	6868      	ldr	r0, [r5, #4]
 80047f4:	6803      	ldr	r3, [r0, #0]
 80047f6:	6a1b      	ldr	r3, [r3, #32]
 80047f8:	4798      	blx	r3
 80047fa:	280f      	cmp	r0, #15
 80047fc:	d803      	bhi.n	8004806 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80047fe:	4b43      	ldr	r3, [pc, #268]	; (800490c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8004800:	4a40      	ldr	r2, [pc, #256]	; (8004904 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004802:	21a4      	movs	r1, #164	; 0xa4
 8004804:	e7f2      	b.n	80047ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004806:	68e8      	ldr	r0, [r5, #12]
 8004808:	6803      	ldr	r3, [r0, #0]
 800480a:	6a1b      	ldr	r3, [r3, #32]
 800480c:	4798      	blx	r3
 800480e:	280b      	cmp	r0, #11
 8004810:	d803      	bhi.n	800481a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8004812:	4b3f      	ldr	r3, [pc, #252]	; (8004910 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004814:	4a3b      	ldr	r2, [pc, #236]	; (8004904 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004816:	21a5      	movs	r1, #165	; 0xa5
 8004818:	e7e8      	b.n	80047ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800481a:	f012 fa59 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800481e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004918 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004822:	3004      	adds	r0, #4
 8004824:	f012 faba 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004828:	f8d9 0000 	ldr.w	r0, [r9]
 800482c:	b110      	cbz	r0, 8004834 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800482e:	6803      	ldr	r3, [r0, #0]
 8004830:	68db      	ldr	r3, [r3, #12]
 8004832:	4798      	blx	r3
    if (*currentTrans)
 8004834:	f8d9 0000 	ldr.w	r0, [r9]
 8004838:	b110      	cbz	r0, 8004840 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800483a:	6803      	ldr	r3, [r0, #0]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	4798      	blx	r3
    if (*currentScreen)
 8004840:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800491c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004844:	f8d8 0000 	ldr.w	r0, [r8]
 8004848:	b110      	cbz	r0, 8004850 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800484a:	6803      	ldr	r3, [r0, #0]
 800484c:	695b      	ldr	r3, [r3, #20]
 800484e:	4798      	blx	r3
    if (*currentPresenter)
 8004850:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004854:	b110      	cbz	r0, 800485c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004856:	6803      	ldr	r3, [r0, #0]
 8004858:	685b      	ldr	r3, [r3, #4]
 800485a:	4798      	blx	r3
    if (*currentScreen)
 800485c:	f8d8 0000 	ldr.w	r0, [r8]
 8004860:	b110      	cbz	r0, 8004868 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004862:	6803      	ldr	r3, [r0, #0]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	4798      	blx	r3
    if (*currentPresenter)
 8004868:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800486c:	b110      	cbz	r0, 8004874 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	689b      	ldr	r3, [r3, #8]
 8004872:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004874:	68e8      	ldr	r0, [r5, #12]
 8004876:	6803      	ldr	r3, [r0, #0]
 8004878:	2100      	movs	r1, #0
 800487a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800487c:	4798      	blx	r3
 800487e:	f04f 0b00 	mov.w	fp, #0
 8004882:	4b24      	ldr	r3, [pc, #144]	; (8004914 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004884:	6003      	str	r3, [r0, #0]
 8004886:	4604      	mov	r4, r0
 8004888:	f8c0 b004 	str.w	fp, [r0, #4]
 800488c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004890:	68a8      	ldr	r0, [r5, #8]
 8004892:	6803      	ldr	r3, [r0, #0]
 8004894:	4659      	mov	r1, fp
 8004896:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004898:	4798      	blx	r3
 800489a:	4606      	mov	r6, r0
 800489c:	f004 fa4e 	bl	8008d3c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048a0:	6868      	ldr	r0, [r5, #4]
 80048a2:	6803      	ldr	r3, [r0, #0]
 80048a4:	4659      	mov	r1, fp
 80048a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048a8:	4798      	blx	r3
 80048aa:	4631      	mov	r1, r6
 80048ac:	4605      	mov	r5, r0
 80048ae:	f004 fa1f 	bl	8008cf0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80048b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80048b6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048be:	b1e5      	cbz	r5, 80048fa <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80048c0:	1d2b      	adds	r3, r5, #4
 80048c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048c6:	6833      	ldr	r3, [r6, #0]
 80048c8:	f8c5 a008 	str.w	sl, [r5, #8]
 80048cc:	4630      	mov	r0, r6
 80048ce:	68db      	ldr	r3, [r3, #12]
 80048d0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80048d2:	4798      	blx	r3
    newPresenter->activate();
 80048d4:	682b      	ldr	r3, [r5, #0]
 80048d6:	4628      	mov	r0, r5
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048dc:	4621      	mov	r1, r4
 80048de:	4630      	mov	r0, r6
 80048e0:	f014 f822 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048e4:	6823      	ldr	r3, [r4, #0]
 80048e6:	4620      	mov	r0, r4
 80048e8:	691b      	ldr	r3, [r3, #16]
 80048ea:	4798      	blx	r3
    newTransition->invalidate();
 80048ec:	6823      	ldr	r3, [r4, #0]
 80048ee:	695b      	ldr	r3, [r3, #20]
 80048f0:	4620      	mov	r0, r4
}
 80048f2:	b001      	add	sp, #4
 80048f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048f8:	4718      	bx	r3
    model->bind(newPresenter);
 80048fa:	462b      	mov	r3, r5
 80048fc:	e7e1      	b.n	80048c2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80048fe:	bf00      	nop
 8004900:	0802d76c 	.word	0x0802d76c
 8004904:	0802da95 	.word	0x0802da95
 8004908:	0802d908 	.word	0x0802d908
 800490c:	0802d94f 	.word	0x0802d94f
 8004910:	0802d9f2 	.word	0x0802d9f2
 8004914:	0802eaac 	.word	0x0802eaac
 8004918:	2001387c 	.word	0x2001387c
 800491c:	20013878 	.word	0x20013878

08004920 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004920:	4b04      	ldr	r3, [pc, #16]	; (8004934 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004928:	b10a      	cbz	r2, 800492e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800492a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800492c:	b900      	cbnz	r0, 8004930 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800492e:	6898      	ldr	r0, [r3, #8]
    }
 8004930:	4770      	bx	lr
 8004932:	bf00      	nop
 8004934:	20013834 	.word	0x20013834

08004938 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800493a:	4604      	mov	r4, r0
 800493c:	4617      	mov	r7, r2
 800493e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004940:	f012 fafa 	bl	8016f38 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004944:	4b10      	ldr	r3, [pc, #64]	; (8004988 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004946:	601c      	str	r4, [r3, #0]
      model(m)
 8004948:	4b10      	ldr	r3, [pc, #64]	; (800498c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800494a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800494c:	4b10      	ldr	r3, [pc, #64]	; (8004990 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800494e:	2500      	movs	r5, #0
 8004950:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004954:	4b0f      	ldr	r3, [pc, #60]	; (8004994 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004956:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800495a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800495c:	6803      	ldr	r3, [r0, #0]
 800495e:	2101      	movs	r1, #1
 8004960:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004962:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004966:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800496a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800496c:	4628      	mov	r0, r5
 800496e:	f004 f819 	bl	80089a4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004972:	f7ff ffd5 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8004976:	f01b fee2 	bl	802073e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800497a:	f7ff ffd1 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 800497e:	f01b ff59 	bl	8020834 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004982:	4620      	mov	r0, r4
 8004984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004986:	bf00      	nop
 8004988:	20013888 	.word	0x20013888
 800498c:	0802ea58 	.word	0x0802ea58
 8004990:	0802ea40 	.word	0x0802ea40
 8004994:	20013834 	.word	0x20013834

08004998 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004998:	4b06      	ldr	r3, [pc, #24]	; (80049b4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800499a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800499e:	2300      	movs	r3, #0
 80049a0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049a4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049a8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049ac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049b0:	4770      	bx	lr
 80049b2:	bf00      	nop
 80049b4:	080047cd 	.word	0x080047cd

080049b8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80049b8:	4b06      	ldr	r3, [pc, #24]	; (80049d4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80049ba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049be:	2300      	movs	r3, #0
 80049c0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049c4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049c8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049cc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049d0:	4770      	bx	lr
 80049d2:	bf00      	nop
 80049d4:	08004e3d 	.word	0x08004e3d

080049d8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80049d8:	4b06      	ldr	r3, [pc, #24]	; (80049f4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80049da:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049de:	2300      	movs	r3, #0
 80049e0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049e4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049e8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049ec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049f0:	4770      	bx	lr
 80049f2:	bf00      	nop
 80049f4:	080059e1 	.word	0x080059e1

080049f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80049f8:	4b06      	ldr	r3, [pc, #24]	; (8004a14 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80049fa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049fe:	2300      	movs	r3, #0
 8004a00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a10:	4770      	bx	lr
 8004a12:	bf00      	nop
 8004a14:	08004cfd 	.word	0x08004cfd

08004a18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8004a18:	4b06      	ldr	r3, [pc, #24]	; (8004a34 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8004a1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a1e:	2300      	movs	r3, #0
 8004a20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a30:	4770      	bx	lr
 8004a32:	bf00      	nop
 8004a34:	080058a1 	.word	0x080058a1

08004a38 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004a38:	4b06      	ldr	r3, [pc, #24]	; (8004a54 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004a3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a3e:	2300      	movs	r3, #0
 8004a40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a50:	4770      	bx	lr
 8004a52:	bf00      	nop
 8004a54:	08005761 	.word	0x08005761

08004a58 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004a58:	4b06      	ldr	r3, [pc, #24]	; (8004a74 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004a5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a5e:	2300      	movs	r3, #0
 8004a60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a70:	4770      	bx	lr
 8004a72:	bf00      	nop
 8004a74:	08005621 	.word	0x08005621

08004a78 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004a78:	4b06      	ldr	r3, [pc, #24]	; (8004a94 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004a7a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a7e:	2300      	movs	r3, #0
 8004a80:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a84:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a88:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a8c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a90:	4770      	bx	lr
 8004a92:	bf00      	nop
 8004a94:	080054e1 	.word	0x080054e1

08004a98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004a98:	4b06      	ldr	r3, [pc, #24]	; (8004ab4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004a9a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004aa4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004aa8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004aac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ab0:	4770      	bx	lr
 8004ab2:	bf00      	nop
 8004ab4:	08004bbd 	.word	0x08004bbd

08004ab8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004ab8:	4b06      	ldr	r3, [pc, #24]	; (8004ad4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004aba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004abe:	2300      	movs	r3, #0
 8004ac0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ac4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ac8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004acc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ad0:	4770      	bx	lr
 8004ad2:	bf00      	nop
 8004ad4:	080053a1 	.word	0x080053a1

08004ad8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004ad8:	4b06      	ldr	r3, [pc, #24]	; (8004af4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004ada:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ade:	2300      	movs	r3, #0
 8004ae0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ae4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ae8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004aec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004af0:	4770      	bx	lr
 8004af2:	bf00      	nop
 8004af4:	08005261 	.word	0x08005261

08004af8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004af8:	4b06      	ldr	r3, [pc, #24]	; (8004b14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004afa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004afe:	2300      	movs	r3, #0
 8004b00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b10:	4770      	bx	lr
 8004b12:	bf00      	nop
 8004b14:	08005121 	.word	0x08005121

08004b18 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004b18:	4b06      	ldr	r3, [pc, #24]	; (8004b34 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004b1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b1e:	2300      	movs	r3, #0
 8004b20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b30:	4770      	bx	lr
 8004b32:	bf00      	nop
 8004b34:	08004fe1 	.word	0x08004fe1

08004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004b38:	4b06      	ldr	r3, [pc, #24]	; (8004b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004b3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b3e:	2300      	movs	r3, #0
 8004b40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b50:	4770      	bx	lr
 8004b52:	bf00      	nop
 8004b54:	080045dd 	.word	0x080045dd

08004b58 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004b58:	6803      	ldr	r3, [r0, #0]
 8004b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b5c:	4718      	bx	r3
	...

08004b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004b60:	4b12      	ldr	r3, [pc, #72]	; (8004bac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b62:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004b64:	6003      	str	r3, [r0, #0]
 8004b66:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004b6a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004b6c:	4b10      	ldr	r3, [pc, #64]	; (8004bb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004b6e:	7241      	strb	r1, [r0, #9]
 8004b70:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b72:	4910      	ldr	r1, [pc, #64]	; (8004bb4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004b74:	4b10      	ldr	r3, [pc, #64]	; (8004bb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b76:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004b7a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004b7e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004b80:	2200      	movs	r2, #0
 8004b82:	6042      	str	r2, [r0, #4]
 8004b84:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004b86:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004b88:	81c2      	strh	r2, [r0, #14]
          solid()
 8004b8a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004b8e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004b92:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004b96:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b9a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b9c:	9100      	str	r1, [sp, #0]
 8004b9e:	3010      	adds	r0, #16
 8004ba0:	4611      	mov	r1, r2
 8004ba2:	f7fd ff44 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004ba6:	4620      	mov	r0, r4
 8004ba8:	b002      	add	sp, #8
 8004baa:	bd10      	pop	{r4, pc}
 8004bac:	0802eaf4 	.word	0x0802eaf4
 8004bb0:	0802e9d8 	.word	0x0802e9d8
 8004bb4:	2001382a 	.word	0x2001382a
 8004bb8:	20013828 	.word	0x20013828

08004bbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bc0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bc4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bc6:	68a0      	ldr	r0, [r4, #8]
 8004bc8:	6803      	ldr	r3, [r0, #0]
 8004bca:	6a1b      	ldr	r3, [r3, #32]
 8004bcc:	4798      	blx	r3
 8004bce:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004bd2:	d205      	bcs.n	8004be0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004bd4:	4b42      	ldr	r3, [pc, #264]	; (8004ce0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004bd6:	4a43      	ldr	r2, [pc, #268]	; (8004ce4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bd8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bda:	4843      	ldr	r0, [pc, #268]	; (8004ce8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004bdc:	f026 ff40 	bl	802ba60 <__assert_func>
 8004be0:	6860      	ldr	r0, [r4, #4]
 8004be2:	6803      	ldr	r3, [r0, #0]
 8004be4:	6a1b      	ldr	r3, [r3, #32]
 8004be6:	4798      	blx	r3
 8004be8:	280f      	cmp	r0, #15
 8004bea:	d803      	bhi.n	8004bf4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004bec:	4b3f      	ldr	r3, [pc, #252]	; (8004cec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004bee:	4a3d      	ldr	r2, [pc, #244]	; (8004ce4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bf0:	21a4      	movs	r1, #164	; 0xa4
 8004bf2:	e7f2      	b.n	8004bda <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bf4:	68e0      	ldr	r0, [r4, #12]
 8004bf6:	6803      	ldr	r3, [r0, #0]
 8004bf8:	6a1b      	ldr	r3, [r3, #32]
 8004bfa:	4798      	blx	r3
 8004bfc:	2837      	cmp	r0, #55	; 0x37
 8004bfe:	d803      	bhi.n	8004c08 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004c00:	4b3b      	ldr	r3, [pc, #236]	; (8004cf0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004c02:	4a38      	ldr	r2, [pc, #224]	; (8004ce4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004c04:	21a5      	movs	r1, #165	; 0xa5
 8004c06:	e7e8      	b.n	8004bda <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c08:	f012 f862 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c0c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004cf4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004c10:	3004      	adds	r0, #4
 8004c12:	f012 f8c3 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c16:	f8d9 0000 	ldr.w	r0, [r9]
 8004c1a:	b110      	cbz	r0, 8004c22 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c1c:	6803      	ldr	r3, [r0, #0]
 8004c1e:	68db      	ldr	r3, [r3, #12]
 8004c20:	4798      	blx	r3
    if (*currentTrans)
 8004c22:	f8d9 0000 	ldr.w	r0, [r9]
 8004c26:	b110      	cbz	r0, 8004c2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	4798      	blx	r3
    if (*currentScreen)
 8004c2e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cf8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004c32:	f8d8 0000 	ldr.w	r0, [r8]
 8004c36:	b110      	cbz	r0, 8004c3e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c38:	6803      	ldr	r3, [r0, #0]
 8004c3a:	695b      	ldr	r3, [r3, #20]
 8004c3c:	4798      	blx	r3
    if (*currentPresenter)
 8004c3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c42:	b110      	cbz	r0, 8004c4a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c44:	6803      	ldr	r3, [r0, #0]
 8004c46:	685b      	ldr	r3, [r3, #4]
 8004c48:	4798      	blx	r3
    if (*currentScreen)
 8004c4a:	f8d8 0000 	ldr.w	r0, [r8]
 8004c4e:	b110      	cbz	r0, 8004c56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c50:	6803      	ldr	r3, [r0, #0]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	4798      	blx	r3
    if (*currentPresenter)
 8004c56:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c5a:	b110      	cbz	r0, 8004c62 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c5c:	6803      	ldr	r3, [r0, #0]
 8004c5e:	689b      	ldr	r3, [r3, #8]
 8004c60:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c62:	68e0      	ldr	r0, [r4, #12]
 8004c64:	2100      	movs	r1, #0
 8004c66:	f7ff ff77 	bl	8004b58 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c6a:	2114      	movs	r1, #20
 8004c6c:	4605      	mov	r5, r0
 8004c6e:	f7ff ff77 	bl	8004b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c72:	68a0      	ldr	r0, [r4, #8]
 8004c74:	6803      	ldr	r3, [r0, #0]
 8004c76:	2100      	movs	r1, #0
 8004c78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c7a:	4798      	blx	r3
 8004c7c:	4606      	mov	r6, r0
 8004c7e:	f004 f91d 	bl	8008ebc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c82:	6860      	ldr	r0, [r4, #4]
 8004c84:	6803      	ldr	r3, [r0, #0]
 8004c86:	2100      	movs	r1, #0
 8004c88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c8a:	4798      	blx	r3
 8004c8c:	4631      	mov	r1, r6
 8004c8e:	4604      	mov	r4, r0
 8004c90:	f004 f8ee 	bl	8008e70 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004c94:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c98:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c9c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ca0:	b1dc      	cbz	r4, 8004cda <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004ca2:	1d23      	adds	r3, r4, #4
 8004ca4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ca8:	6833      	ldr	r3, [r6, #0]
 8004caa:	f8c4 a008 	str.w	sl, [r4, #8]
 8004cae:	4630      	mov	r0, r6
 8004cb0:	68db      	ldr	r3, [r3, #12]
 8004cb2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004cb4:	4798      	blx	r3
    newPresenter->activate();
 8004cb6:	6823      	ldr	r3, [r4, #0]
 8004cb8:	4620      	mov	r0, r4
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cbe:	4629      	mov	r1, r5
 8004cc0:	4630      	mov	r0, r6
 8004cc2:	f013 fe31 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cc6:	682b      	ldr	r3, [r5, #0]
 8004cc8:	4628      	mov	r0, r5
 8004cca:	691b      	ldr	r3, [r3, #16]
 8004ccc:	4798      	blx	r3
    newTransition->invalidate();
 8004cce:	682b      	ldr	r3, [r5, #0]
 8004cd0:	4628      	mov	r0, r5
 8004cd2:	695b      	ldr	r3, [r3, #20]
}
 8004cd4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cd8:	4718      	bx	r3
    model->bind(newPresenter);
 8004cda:	4623      	mov	r3, r4
 8004cdc:	e7e2      	b.n	8004ca4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004cde:	bf00      	nop
 8004ce0:	0802d76c 	.word	0x0802d76c
 8004ce4:	0802db9d 	.word	0x0802db9d
 8004ce8:	0802d908 	.word	0x0802d908
 8004cec:	0802d94f 	.word	0x0802d94f
 8004cf0:	0802d9f2 	.word	0x0802d9f2
 8004cf4:	2001387c 	.word	0x2001387c
 8004cf8:	20013878 	.word	0x20013878

08004cfc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004cfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d00:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d04:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d06:	68a0      	ldr	r0, [r4, #8]
 8004d08:	6803      	ldr	r3, [r0, #0]
 8004d0a:	6a1b      	ldr	r3, [r3, #32]
 8004d0c:	4798      	blx	r3
 8004d0e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d12:	d205      	bcs.n	8004d20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004d14:	4b42      	ldr	r3, [pc, #264]	; (8004e20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004d16:	4a43      	ldr	r2, [pc, #268]	; (8004e24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d18:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d1a:	4843      	ldr	r0, [pc, #268]	; (8004e28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004d1c:	f026 fea0 	bl	802ba60 <__assert_func>
 8004d20:	6860      	ldr	r0, [r4, #4]
 8004d22:	6803      	ldr	r3, [r0, #0]
 8004d24:	6a1b      	ldr	r3, [r3, #32]
 8004d26:	4798      	blx	r3
 8004d28:	280f      	cmp	r0, #15
 8004d2a:	d803      	bhi.n	8004d34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004d2c:	4b3f      	ldr	r3, [pc, #252]	; (8004e2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004d2e:	4a3d      	ldr	r2, [pc, #244]	; (8004e24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d30:	21a4      	movs	r1, #164	; 0xa4
 8004d32:	e7f2      	b.n	8004d1a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d34:	68e0      	ldr	r0, [r4, #12]
 8004d36:	6803      	ldr	r3, [r0, #0]
 8004d38:	6a1b      	ldr	r3, [r3, #32]
 8004d3a:	4798      	blx	r3
 8004d3c:	2837      	cmp	r0, #55	; 0x37
 8004d3e:	d803      	bhi.n	8004d48 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004d40:	4b3b      	ldr	r3, [pc, #236]	; (8004e30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004d42:	4a38      	ldr	r2, [pc, #224]	; (8004e24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d44:	21a5      	movs	r1, #165	; 0xa5
 8004d46:	e7e8      	b.n	8004d1a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d48:	f011 ffc2 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d4c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004d50:	3004      	adds	r0, #4
 8004d52:	f012 f823 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d56:	f8d9 0000 	ldr.w	r0, [r9]
 8004d5a:	b110      	cbz	r0, 8004d62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	68db      	ldr	r3, [r3, #12]
 8004d60:	4798      	blx	r3
    if (*currentTrans)
 8004d62:	f8d9 0000 	ldr.w	r0, [r9]
 8004d66:	b110      	cbz	r0, 8004d6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d68:	6803      	ldr	r3, [r0, #0]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	4798      	blx	r3
    if (*currentScreen)
 8004d6e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004d72:	f8d8 0000 	ldr.w	r0, [r8]
 8004d76:	b110      	cbz	r0, 8004d7e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d78:	6803      	ldr	r3, [r0, #0]
 8004d7a:	695b      	ldr	r3, [r3, #20]
 8004d7c:	4798      	blx	r3
    if (*currentPresenter)
 8004d7e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d82:	b110      	cbz	r0, 8004d8a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d84:	6803      	ldr	r3, [r0, #0]
 8004d86:	685b      	ldr	r3, [r3, #4]
 8004d88:	4798      	blx	r3
    if (*currentScreen)
 8004d8a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d8e:	b110      	cbz	r0, 8004d96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d90:	6803      	ldr	r3, [r0, #0]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	4798      	blx	r3
    if (*currentPresenter)
 8004d96:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d9a:	b110      	cbz	r0, 8004da2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d9c:	6803      	ldr	r3, [r0, #0]
 8004d9e:	689b      	ldr	r3, [r3, #8]
 8004da0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004da2:	68e0      	ldr	r0, [r4, #12]
 8004da4:	2100      	movs	r1, #0
 8004da6:	f7ff fed7 	bl	8004b58 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004daa:	2114      	movs	r1, #20
 8004dac:	4605      	mov	r5, r0
 8004dae:	f7ff fed7 	bl	8004b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004db2:	68a0      	ldr	r0, [r4, #8]
 8004db4:	6803      	ldr	r3, [r0, #0]
 8004db6:	2100      	movs	r1, #0
 8004db8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dba:	4798      	blx	r3
 8004dbc:	4606      	mov	r6, r0
 8004dbe:	f004 f81d 	bl	8008dfc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004dc2:	6860      	ldr	r0, [r4, #4]
 8004dc4:	6803      	ldr	r3, [r0, #0]
 8004dc6:	2100      	movs	r1, #0
 8004dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dca:	4798      	blx	r3
 8004dcc:	4631      	mov	r1, r6
 8004dce:	4604      	mov	r4, r0
 8004dd0:	f003 ffee 	bl	8008db0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004dd4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dd8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ddc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004de0:	b1dc      	cbz	r4, 8004e1a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004de2:	1d23      	adds	r3, r4, #4
 8004de4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004de8:	6833      	ldr	r3, [r6, #0]
 8004dea:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dee:	4630      	mov	r0, r6
 8004df0:	68db      	ldr	r3, [r3, #12]
 8004df2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004df4:	4798      	blx	r3
    newPresenter->activate();
 8004df6:	6823      	ldr	r3, [r4, #0]
 8004df8:	4620      	mov	r0, r4
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dfe:	4629      	mov	r1, r5
 8004e00:	4630      	mov	r0, r6
 8004e02:	f013 fd91 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e06:	682b      	ldr	r3, [r5, #0]
 8004e08:	4628      	mov	r0, r5
 8004e0a:	691b      	ldr	r3, [r3, #16]
 8004e0c:	4798      	blx	r3
    newTransition->invalidate();
 8004e0e:	682b      	ldr	r3, [r5, #0]
 8004e10:	4628      	mov	r0, r5
 8004e12:	695b      	ldr	r3, [r3, #20]
}
 8004e14:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e18:	4718      	bx	r3
    model->bind(newPresenter);
 8004e1a:	4623      	mov	r3, r4
 8004e1c:	e7e2      	b.n	8004de4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004e1e:	bf00      	nop
 8004e20:	0802d76c 	.word	0x0802d76c
 8004e24:	0802dccd 	.word	0x0802dccd
 8004e28:	0802d908 	.word	0x0802d908
 8004e2c:	0802d94f 	.word	0x0802d94f
 8004e30:	0802d9f2 	.word	0x0802d9f2
 8004e34:	2001387c 	.word	0x2001387c
 8004e38:	20013878 	.word	0x20013878

08004e3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004e3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e40:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e44:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e46:	68a0      	ldr	r0, [r4, #8]
 8004e48:	6803      	ldr	r3, [r0, #0]
 8004e4a:	6a1b      	ldr	r3, [r3, #32]
 8004e4c:	4798      	blx	r3
 8004e4e:	f241 137b 	movw	r3, #4475	; 0x117b
 8004e52:	4298      	cmp	r0, r3
 8004e54:	d805      	bhi.n	8004e62 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004e56:	4b42      	ldr	r3, [pc, #264]	; (8004f60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004e58:	4a42      	ldr	r2, [pc, #264]	; (8004f64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e5a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e5c:	4842      	ldr	r0, [pc, #264]	; (8004f68 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004e5e:	f026 fdff 	bl	802ba60 <__assert_func>
 8004e62:	6860      	ldr	r0, [r4, #4]
 8004e64:	6803      	ldr	r3, [r0, #0]
 8004e66:	6a1b      	ldr	r3, [r3, #32]
 8004e68:	4798      	blx	r3
 8004e6a:	280f      	cmp	r0, #15
 8004e6c:	d803      	bhi.n	8004e76 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004e6e:	4b3f      	ldr	r3, [pc, #252]	; (8004f6c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004e70:	4a3c      	ldr	r2, [pc, #240]	; (8004f64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e72:	21a4      	movs	r1, #164	; 0xa4
 8004e74:	e7f2      	b.n	8004e5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e76:	68e0      	ldr	r0, [r4, #12]
 8004e78:	6803      	ldr	r3, [r0, #0]
 8004e7a:	6a1b      	ldr	r3, [r3, #32]
 8004e7c:	4798      	blx	r3
 8004e7e:	2837      	cmp	r0, #55	; 0x37
 8004e80:	d803      	bhi.n	8004e8a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004e82:	4b3b      	ldr	r3, [pc, #236]	; (8004f70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004e84:	4a37      	ldr	r2, [pc, #220]	; (8004f64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e86:	21a5      	movs	r1, #165	; 0xa5
 8004e88:	e7e8      	b.n	8004e5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e8a:	f011 ff21 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e8e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004e92:	3004      	adds	r0, #4
 8004e94:	f011 ff82 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e98:	f8d9 0000 	ldr.w	r0, [r9]
 8004e9c:	b110      	cbz	r0, 8004ea4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004e9e:	6803      	ldr	r3, [r0, #0]
 8004ea0:	68db      	ldr	r3, [r3, #12]
 8004ea2:	4798      	blx	r3
    if (*currentTrans)
 8004ea4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ea8:	b110      	cbz	r0, 8004eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004eaa:	6803      	ldr	r3, [r0, #0]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	4798      	blx	r3
    if (*currentScreen)
 8004eb0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f78 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004eb4:	f8d8 0000 	ldr.w	r0, [r8]
 8004eb8:	b110      	cbz	r0, 8004ec0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004eba:	6803      	ldr	r3, [r0, #0]
 8004ebc:	695b      	ldr	r3, [r3, #20]
 8004ebe:	4798      	blx	r3
    if (*currentPresenter)
 8004ec0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ec4:	b110      	cbz	r0, 8004ecc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004ec6:	6803      	ldr	r3, [r0, #0]
 8004ec8:	685b      	ldr	r3, [r3, #4]
 8004eca:	4798      	blx	r3
    if (*currentScreen)
 8004ecc:	f8d8 0000 	ldr.w	r0, [r8]
 8004ed0:	b110      	cbz	r0, 8004ed8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ed2:	6803      	ldr	r3, [r0, #0]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	4798      	blx	r3
    if (*currentPresenter)
 8004ed8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004edc:	b110      	cbz	r0, 8004ee4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ede:	6803      	ldr	r3, [r0, #0]
 8004ee0:	689b      	ldr	r3, [r3, #8]
 8004ee2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ee4:	68e0      	ldr	r0, [r4, #12]
 8004ee6:	2100      	movs	r1, #0
 8004ee8:	f7ff fe36 	bl	8004b58 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004eec:	2114      	movs	r1, #20
 8004eee:	4605      	mov	r5, r0
 8004ef0:	f7ff fe36 	bl	8004b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ef4:	68a0      	ldr	r0, [r4, #8]
 8004ef6:	6803      	ldr	r3, [r0, #0]
 8004ef8:	2100      	movs	r1, #0
 8004efa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004efc:	4798      	blx	r3
 8004efe:	4606      	mov	r6, r0
 8004f00:	f003 ff1c 	bl	8008d3c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f04:	6860      	ldr	r0, [r4, #4]
 8004f06:	6803      	ldr	r3, [r0, #0]
 8004f08:	2100      	movs	r1, #0
 8004f0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f0c:	4798      	blx	r3
 8004f0e:	4631      	mov	r1, r6
 8004f10:	4604      	mov	r4, r0
 8004f12:	f003 feed 	bl	8008cf0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004f16:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f1a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f1e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f22:	b1dc      	cbz	r4, 8004f5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004f24:	1d23      	adds	r3, r4, #4
 8004f26:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f2a:	6833      	ldr	r3, [r6, #0]
 8004f2c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f30:	4630      	mov	r0, r6
 8004f32:	68db      	ldr	r3, [r3, #12]
 8004f34:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f36:	4798      	blx	r3
    newPresenter->activate();
 8004f38:	6823      	ldr	r3, [r4, #0]
 8004f3a:	4620      	mov	r0, r4
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f40:	4629      	mov	r1, r5
 8004f42:	4630      	mov	r0, r6
 8004f44:	f013 fcf0 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f48:	682b      	ldr	r3, [r5, #0]
 8004f4a:	4628      	mov	r0, r5
 8004f4c:	691b      	ldr	r3, [r3, #16]
 8004f4e:	4798      	blx	r3
    newTransition->invalidate();
 8004f50:	682b      	ldr	r3, [r5, #0]
 8004f52:	4628      	mov	r0, r5
 8004f54:	695b      	ldr	r3, [r3, #20]
}
 8004f56:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f5a:	4718      	bx	r3
    model->bind(newPresenter);
 8004f5c:	4623      	mov	r3, r4
 8004f5e:	e7e2      	b.n	8004f26 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004f60:	0802d76c 	.word	0x0802d76c
 8004f64:	0802ddeb 	.word	0x0802ddeb
 8004f68:	0802d908 	.word	0x0802d908
 8004f6c:	0802d94f 	.word	0x0802d94f
 8004f70:	0802d9f2 	.word	0x0802d9f2
 8004f74:	2001387c 	.word	0x2001387c
 8004f78:	20013878 	.word	0x20013878

08004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004f7c:	6803      	ldr	r3, [r0, #0]
 8004f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f80:	4718      	bx	r3
	...

08004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004f84:	4b12      	ldr	r3, [pc, #72]	; (8004fd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004f86:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004f88:	6003      	str	r3, [r0, #0]
 8004f8a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f8e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004f90:	4b10      	ldr	r3, [pc, #64]	; (8004fd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004f92:	7241      	strb	r1, [r0, #9]
 8004f94:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f96:	4910      	ldr	r1, [pc, #64]	; (8004fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004f98:	4b10      	ldr	r3, [pc, #64]	; (8004fdc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f9a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004f9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004fa2:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004fa4:	2200      	movs	r2, #0
 8004fa6:	6042      	str	r2, [r0, #4]
 8004fa8:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004faa:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004fac:	81c2      	strh	r2, [r0, #14]
          solid()
 8004fae:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004fb2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004fb6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004fba:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004fbe:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004fc0:	9100      	str	r1, [sp, #0]
 8004fc2:	3010      	adds	r0, #16
 8004fc4:	4611      	mov	r1, r2
 8004fc6:	f7fd fd32 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004fca:	4620      	mov	r0, r4
 8004fcc:	b002      	add	sp, #8
 8004fce:	bd10      	pop	{r4, pc}
 8004fd0:	0802ead0 	.word	0x0802ead0
 8004fd4:	0802e9d8 	.word	0x0802e9d8
 8004fd8:	2001382a 	.word	0x2001382a
 8004fdc:	20013828 	.word	0x20013828

08004fe0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004fe0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fe4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fe8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fea:	68a0      	ldr	r0, [r4, #8]
 8004fec:	6803      	ldr	r3, [r0, #0]
 8004fee:	6a1b      	ldr	r3, [r3, #32]
 8004ff0:	4798      	blx	r3
 8004ff2:	f241 03af 	movw	r3, #4271	; 0x10af
 8004ff6:	4298      	cmp	r0, r3
 8004ff8:	d805      	bhi.n	8005006 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004ffa:	4b42      	ldr	r3, [pc, #264]	; (8005104 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004ffc:	4a42      	ldr	r2, [pc, #264]	; (8005108 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004ffe:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005000:	4842      	ldr	r0, [pc, #264]	; (800510c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005002:	f026 fd2d 	bl	802ba60 <__assert_func>
 8005006:	6860      	ldr	r0, [r4, #4]
 8005008:	6803      	ldr	r3, [r0, #0]
 800500a:	6a1b      	ldr	r3, [r3, #32]
 800500c:	4798      	blx	r3
 800500e:	280f      	cmp	r0, #15
 8005010:	d803      	bhi.n	800501a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005012:	4b3f      	ldr	r3, [pc, #252]	; (8005110 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005014:	4a3c      	ldr	r2, [pc, #240]	; (8005108 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005016:	21a4      	movs	r1, #164	; 0xa4
 8005018:	e7f2      	b.n	8005000 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800501a:	68e0      	ldr	r0, [r4, #12]
 800501c:	6803      	ldr	r3, [r0, #0]
 800501e:	6a1b      	ldr	r3, [r3, #32]
 8005020:	4798      	blx	r3
 8005022:	2837      	cmp	r0, #55	; 0x37
 8005024:	d803      	bhi.n	800502e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005026:	4b3b      	ldr	r3, [pc, #236]	; (8005114 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005028:	4a37      	ldr	r2, [pc, #220]	; (8005108 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800502a:	21a5      	movs	r1, #165	; 0xa5
 800502c:	e7e8      	b.n	8005000 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800502e:	f011 fe4f 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005032:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005118 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005036:	3004      	adds	r0, #4
 8005038:	f011 feb0 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800503c:	f8d9 0000 	ldr.w	r0, [r9]
 8005040:	b110      	cbz	r0, 8005048 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005042:	6803      	ldr	r3, [r0, #0]
 8005044:	68db      	ldr	r3, [r3, #12]
 8005046:	4798      	blx	r3
    if (*currentTrans)
 8005048:	f8d9 0000 	ldr.w	r0, [r9]
 800504c:	b110      	cbz	r0, 8005054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800504e:	6803      	ldr	r3, [r0, #0]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	4798      	blx	r3
    if (*currentScreen)
 8005054:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800511c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005058:	f8d8 0000 	ldr.w	r0, [r8]
 800505c:	b110      	cbz	r0, 8005064 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800505e:	6803      	ldr	r3, [r0, #0]
 8005060:	695b      	ldr	r3, [r3, #20]
 8005062:	4798      	blx	r3
    if (*currentPresenter)
 8005064:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005068:	b110      	cbz	r0, 8005070 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800506a:	6803      	ldr	r3, [r0, #0]
 800506c:	685b      	ldr	r3, [r3, #4]
 800506e:	4798      	blx	r3
    if (*currentScreen)
 8005070:	f8d8 0000 	ldr.w	r0, [r8]
 8005074:	b110      	cbz	r0, 800507c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005076:	6803      	ldr	r3, [r0, #0]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	4798      	blx	r3
    if (*currentPresenter)
 800507c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005080:	b110      	cbz	r0, 8005088 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005082:	6803      	ldr	r3, [r0, #0]
 8005084:	689b      	ldr	r3, [r3, #8]
 8005086:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005088:	68e0      	ldr	r0, [r4, #12]
 800508a:	2100      	movs	r1, #0
 800508c:	f7ff ff76 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005090:	2114      	movs	r1, #20
 8005092:	4605      	mov	r5, r0
 8005094:	f7ff ff76 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005098:	68a0      	ldr	r0, [r4, #8]
 800509a:	6803      	ldr	r3, [r0, #0]
 800509c:	2100      	movs	r1, #0
 800509e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050a0:	4798      	blx	r3
 80050a2:	4606      	mov	r6, r0
 80050a4:	f004 f94e 	bl	8009344 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050a8:	6860      	ldr	r0, [r4, #4]
 80050aa:	6803      	ldr	r3, [r0, #0]
 80050ac:	2100      	movs	r1, #0
 80050ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050b0:	4798      	blx	r3
 80050b2:	4631      	mov	r1, r6
 80050b4:	4604      	mov	r4, r0
 80050b6:	f004 f91f 	bl	80092f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 80050ba:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050be:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050c2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050c6:	b1dc      	cbz	r4, 8005100 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80050c8:	1d23      	adds	r3, r4, #4
 80050ca:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050ce:	6833      	ldr	r3, [r6, #0]
 80050d0:	f8c4 a008 	str.w	sl, [r4, #8]
 80050d4:	4630      	mov	r0, r6
 80050d6:	68db      	ldr	r3, [r3, #12]
 80050d8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050da:	4798      	blx	r3
    newPresenter->activate();
 80050dc:	6823      	ldr	r3, [r4, #0]
 80050de:	4620      	mov	r0, r4
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050e4:	4629      	mov	r1, r5
 80050e6:	4630      	mov	r0, r6
 80050e8:	f013 fc1e 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050ec:	682b      	ldr	r3, [r5, #0]
 80050ee:	4628      	mov	r0, r5
 80050f0:	691b      	ldr	r3, [r3, #16]
 80050f2:	4798      	blx	r3
    newTransition->invalidate();
 80050f4:	682b      	ldr	r3, [r5, #0]
 80050f6:	4628      	mov	r0, r5
 80050f8:	695b      	ldr	r3, [r3, #20]
}
 80050fa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050fe:	4718      	bx	r3
    model->bind(newPresenter);
 8005100:	4623      	mov	r3, r4
 8005102:	e7e2      	b.n	80050ca <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005104:	0802d76c 	.word	0x0802d76c
 8005108:	0802df05 	.word	0x0802df05
 800510c:	0802d908 	.word	0x0802d908
 8005110:	0802d94f 	.word	0x0802d94f
 8005114:	0802d9f2 	.word	0x0802d9f2
 8005118:	2001387c 	.word	0x2001387c
 800511c:	20013878 	.word	0x20013878

08005120 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005120:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005124:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005128:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800512a:	68a0      	ldr	r0, [r4, #8]
 800512c:	6803      	ldr	r3, [r0, #0]
 800512e:	6a1b      	ldr	r3, [r3, #32]
 8005130:	4798      	blx	r3
 8005132:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005136:	4298      	cmp	r0, r3
 8005138:	d805      	bhi.n	8005146 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800513a:	4b42      	ldr	r3, [pc, #264]	; (8005244 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800513c:	4a42      	ldr	r2, [pc, #264]	; (8005248 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800513e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005140:	4842      	ldr	r0, [pc, #264]	; (800524c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005142:	f026 fc8d 	bl	802ba60 <__assert_func>
 8005146:	6860      	ldr	r0, [r4, #4]
 8005148:	6803      	ldr	r3, [r0, #0]
 800514a:	6a1b      	ldr	r3, [r3, #32]
 800514c:	4798      	blx	r3
 800514e:	280f      	cmp	r0, #15
 8005150:	d803      	bhi.n	800515a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005152:	4b3f      	ldr	r3, [pc, #252]	; (8005250 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005154:	4a3c      	ldr	r2, [pc, #240]	; (8005248 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005156:	21a4      	movs	r1, #164	; 0xa4
 8005158:	e7f2      	b.n	8005140 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800515a:	68e0      	ldr	r0, [r4, #12]
 800515c:	6803      	ldr	r3, [r0, #0]
 800515e:	6a1b      	ldr	r3, [r3, #32]
 8005160:	4798      	blx	r3
 8005162:	2837      	cmp	r0, #55	; 0x37
 8005164:	d803      	bhi.n	800516e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005166:	4b3b      	ldr	r3, [pc, #236]	; (8005254 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005168:	4a37      	ldr	r2, [pc, #220]	; (8005248 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800516a:	21a5      	movs	r1, #165	; 0xa5
 800516c:	e7e8      	b.n	8005140 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800516e:	f011 fdaf 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005172:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005258 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005176:	3004      	adds	r0, #4
 8005178:	f011 fe10 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800517c:	f8d9 0000 	ldr.w	r0, [r9]
 8005180:	b110      	cbz	r0, 8005188 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005182:	6803      	ldr	r3, [r0, #0]
 8005184:	68db      	ldr	r3, [r3, #12]
 8005186:	4798      	blx	r3
    if (*currentTrans)
 8005188:	f8d9 0000 	ldr.w	r0, [r9]
 800518c:	b110      	cbz	r0, 8005194 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800518e:	6803      	ldr	r3, [r0, #0]
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	4798      	blx	r3
    if (*currentScreen)
 8005194:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800525c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005198:	f8d8 0000 	ldr.w	r0, [r8]
 800519c:	b110      	cbz	r0, 80051a4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800519e:	6803      	ldr	r3, [r0, #0]
 80051a0:	695b      	ldr	r3, [r3, #20]
 80051a2:	4798      	blx	r3
    if (*currentPresenter)
 80051a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051a8:	b110      	cbz	r0, 80051b0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80051aa:	6803      	ldr	r3, [r0, #0]
 80051ac:	685b      	ldr	r3, [r3, #4]
 80051ae:	4798      	blx	r3
    if (*currentScreen)
 80051b0:	f8d8 0000 	ldr.w	r0, [r8]
 80051b4:	b110      	cbz	r0, 80051bc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80051b6:	6803      	ldr	r3, [r0, #0]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	4798      	blx	r3
    if (*currentPresenter)
 80051bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051c0:	b110      	cbz	r0, 80051c8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80051c2:	6803      	ldr	r3, [r0, #0]
 80051c4:	689b      	ldr	r3, [r3, #8]
 80051c6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051c8:	68e0      	ldr	r0, [r4, #12]
 80051ca:	2100      	movs	r1, #0
 80051cc:	f7ff fed6 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051d0:	2114      	movs	r1, #20
 80051d2:	4605      	mov	r5, r0
 80051d4:	f7ff fed6 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051d8:	68a0      	ldr	r0, [r4, #8]
 80051da:	6803      	ldr	r3, [r0, #0]
 80051dc:	2100      	movs	r1, #0
 80051de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051e0:	4798      	blx	r3
 80051e2:	4606      	mov	r6, r0
 80051e4:	f003 fc76 	bl	8008ad4 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051e8:	6860      	ldr	r0, [r4, #4]
 80051ea:	6803      	ldr	r3, [r0, #0]
 80051ec:	2100      	movs	r1, #0
 80051ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051f0:	4798      	blx	r3
 80051f2:	4631      	mov	r1, r6
 80051f4:	4604      	mov	r4, r0
 80051f6:	f003 fc47 	bl	8008a88 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80051fa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051fe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005202:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005206:	b1dc      	cbz	r4, 8005240 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005208:	1d23      	adds	r3, r4, #4
 800520a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800520e:	6833      	ldr	r3, [r6, #0]
 8005210:	f8c4 a008 	str.w	sl, [r4, #8]
 8005214:	4630      	mov	r0, r6
 8005216:	68db      	ldr	r3, [r3, #12]
 8005218:	63f4      	str	r4, [r6, #60]	; 0x3c
 800521a:	4798      	blx	r3
    newPresenter->activate();
 800521c:	6823      	ldr	r3, [r4, #0]
 800521e:	4620      	mov	r0, r4
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005224:	4629      	mov	r1, r5
 8005226:	4630      	mov	r0, r6
 8005228:	f013 fb7e 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800522c:	682b      	ldr	r3, [r5, #0]
 800522e:	4628      	mov	r0, r5
 8005230:	691b      	ldr	r3, [r3, #16]
 8005232:	4798      	blx	r3
    newTransition->invalidate();
 8005234:	682b      	ldr	r3, [r5, #0]
 8005236:	4628      	mov	r0, r5
 8005238:	695b      	ldr	r3, [r3, #20]
}
 800523a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800523e:	4718      	bx	r3
    model->bind(newPresenter);
 8005240:	4623      	mov	r3, r4
 8005242:	e7e2      	b.n	800520a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005244:	0802d76c 	.word	0x0802d76c
 8005248:	0802e025 	.word	0x0802e025
 800524c:	0802d908 	.word	0x0802d908
 8005250:	0802d94f 	.word	0x0802d94f
 8005254:	0802d9f2 	.word	0x0802d9f2
 8005258:	2001387c 	.word	0x2001387c
 800525c:	20013878 	.word	0x20013878

08005260 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005264:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005268:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800526a:	68a0      	ldr	r0, [r4, #8]
 800526c:	6803      	ldr	r3, [r0, #0]
 800526e:	6a1b      	ldr	r3, [r3, #32]
 8005270:	4798      	blx	r3
 8005272:	f241 035b 	movw	r3, #4187	; 0x105b
 8005276:	4298      	cmp	r0, r3
 8005278:	d805      	bhi.n	8005286 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800527a:	4b42      	ldr	r3, [pc, #264]	; (8005384 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800527c:	4a42      	ldr	r2, [pc, #264]	; (8005388 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800527e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005280:	4842      	ldr	r0, [pc, #264]	; (800538c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005282:	f026 fbed 	bl	802ba60 <__assert_func>
 8005286:	6860      	ldr	r0, [r4, #4]
 8005288:	6803      	ldr	r3, [r0, #0]
 800528a:	6a1b      	ldr	r3, [r3, #32]
 800528c:	4798      	blx	r3
 800528e:	280f      	cmp	r0, #15
 8005290:	d803      	bhi.n	800529a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005292:	4b3f      	ldr	r3, [pc, #252]	; (8005390 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005294:	4a3c      	ldr	r2, [pc, #240]	; (8005388 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005296:	21a4      	movs	r1, #164	; 0xa4
 8005298:	e7f2      	b.n	8005280 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800529a:	68e0      	ldr	r0, [r4, #12]
 800529c:	6803      	ldr	r3, [r0, #0]
 800529e:	6a1b      	ldr	r3, [r3, #32]
 80052a0:	4798      	blx	r3
 80052a2:	2837      	cmp	r0, #55	; 0x37
 80052a4:	d803      	bhi.n	80052ae <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80052a6:	4b3b      	ldr	r3, [pc, #236]	; (8005394 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80052a8:	4a37      	ldr	r2, [pc, #220]	; (8005388 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80052aa:	21a5      	movs	r1, #165	; 0xa5
 80052ac:	e7e8      	b.n	8005280 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80052ae:	f011 fd0f 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052b2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005398 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80052b6:	3004      	adds	r0, #4
 80052b8:	f011 fd70 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052bc:	f8d9 0000 	ldr.w	r0, [r9]
 80052c0:	b110      	cbz	r0, 80052c8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052c2:	6803      	ldr	r3, [r0, #0]
 80052c4:	68db      	ldr	r3, [r3, #12]
 80052c6:	4798      	blx	r3
    if (*currentTrans)
 80052c8:	f8d9 0000 	ldr.w	r0, [r9]
 80052cc:	b110      	cbz	r0, 80052d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052ce:	6803      	ldr	r3, [r0, #0]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	4798      	blx	r3
    if (*currentScreen)
 80052d4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800539c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80052d8:	f8d8 0000 	ldr.w	r0, [r8]
 80052dc:	b110      	cbz	r0, 80052e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052de:	6803      	ldr	r3, [r0, #0]
 80052e0:	695b      	ldr	r3, [r3, #20]
 80052e2:	4798      	blx	r3
    if (*currentPresenter)
 80052e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052e8:	b110      	cbz	r0, 80052f0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052ea:	6803      	ldr	r3, [r0, #0]
 80052ec:	685b      	ldr	r3, [r3, #4]
 80052ee:	4798      	blx	r3
    if (*currentScreen)
 80052f0:	f8d8 0000 	ldr.w	r0, [r8]
 80052f4:	b110      	cbz	r0, 80052fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80052f6:	6803      	ldr	r3, [r0, #0]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	4798      	blx	r3
    if (*currentPresenter)
 80052fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005300:	b110      	cbz	r0, 8005308 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005302:	6803      	ldr	r3, [r0, #0]
 8005304:	689b      	ldr	r3, [r3, #8]
 8005306:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005308:	68e0      	ldr	r0, [r4, #12]
 800530a:	2100      	movs	r1, #0
 800530c:	f7ff fe36 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005310:	2114      	movs	r1, #20
 8005312:	4605      	mov	r5, r0
 8005314:	f7ff fe36 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005318:	68a0      	ldr	r0, [r4, #8]
 800531a:	6803      	ldr	r3, [r0, #0]
 800531c:	2100      	movs	r1, #0
 800531e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005320:	4798      	blx	r3
 8005322:	4606      	mov	r6, r0
 8005324:	f003 fe66 	bl	8008ff4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005328:	6860      	ldr	r0, [r4, #4]
 800532a:	6803      	ldr	r3, [r0, #0]
 800532c:	2100      	movs	r1, #0
 800532e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005330:	4798      	blx	r3
 8005332:	4631      	mov	r1, r6
 8005334:	4604      	mov	r4, r0
 8005336:	f003 fe37 	bl	8008fa8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800533a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800533e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005342:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005346:	b1dc      	cbz	r4, 8005380 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005348:	1d23      	adds	r3, r4, #4
 800534a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800534e:	6833      	ldr	r3, [r6, #0]
 8005350:	f8c4 a008 	str.w	sl, [r4, #8]
 8005354:	4630      	mov	r0, r6
 8005356:	68db      	ldr	r3, [r3, #12]
 8005358:	63f4      	str	r4, [r6, #60]	; 0x3c
 800535a:	4798      	blx	r3
    newPresenter->activate();
 800535c:	6823      	ldr	r3, [r4, #0]
 800535e:	4620      	mov	r0, r4
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005364:	4629      	mov	r1, r5
 8005366:	4630      	mov	r0, r6
 8005368:	f013 fade 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800536c:	682b      	ldr	r3, [r5, #0]
 800536e:	4628      	mov	r0, r5
 8005370:	691b      	ldr	r3, [r3, #16]
 8005372:	4798      	blx	r3
    newTransition->invalidate();
 8005374:	682b      	ldr	r3, [r5, #0]
 8005376:	4628      	mov	r0, r5
 8005378:	695b      	ldr	r3, [r3, #20]
}
 800537a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800537e:	4718      	bx	r3
    model->bind(newPresenter);
 8005380:	4623      	mov	r3, r4
 8005382:	e7e2      	b.n	800534a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005384:	0802d76c 	.word	0x0802d76c
 8005388:	0802e14b 	.word	0x0802e14b
 800538c:	0802d908 	.word	0x0802d908
 8005390:	0802d94f 	.word	0x0802d94f
 8005394:	0802d9f2 	.word	0x0802d9f2
 8005398:	2001387c 	.word	0x2001387c
 800539c:	20013878 	.word	0x20013878

080053a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80053a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80053a4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80053a8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053aa:	68a0      	ldr	r0, [r4, #8]
 80053ac:	6803      	ldr	r3, [r0, #0]
 80053ae:	6a1b      	ldr	r3, [r3, #32]
 80053b0:	4798      	blx	r3
 80053b2:	f241 035b 	movw	r3, #4187	; 0x105b
 80053b6:	4298      	cmp	r0, r3
 80053b8:	d805      	bhi.n	80053c6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80053ba:	4b42      	ldr	r3, [pc, #264]	; (80054c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80053bc:	4a42      	ldr	r2, [pc, #264]	; (80054c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053be:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053c0:	4842      	ldr	r0, [pc, #264]	; (80054cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80053c2:	f026 fb4d 	bl	802ba60 <__assert_func>
 80053c6:	6860      	ldr	r0, [r4, #4]
 80053c8:	6803      	ldr	r3, [r0, #0]
 80053ca:	6a1b      	ldr	r3, [r3, #32]
 80053cc:	4798      	blx	r3
 80053ce:	280f      	cmp	r0, #15
 80053d0:	d803      	bhi.n	80053da <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80053d2:	4b3f      	ldr	r3, [pc, #252]	; (80054d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80053d4:	4a3c      	ldr	r2, [pc, #240]	; (80054c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053d6:	21a4      	movs	r1, #164	; 0xa4
 80053d8:	e7f2      	b.n	80053c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053da:	68e0      	ldr	r0, [r4, #12]
 80053dc:	6803      	ldr	r3, [r0, #0]
 80053de:	6a1b      	ldr	r3, [r3, #32]
 80053e0:	4798      	blx	r3
 80053e2:	2837      	cmp	r0, #55	; 0x37
 80053e4:	d803      	bhi.n	80053ee <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80053e6:	4b3b      	ldr	r3, [pc, #236]	; (80054d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80053e8:	4a37      	ldr	r2, [pc, #220]	; (80054c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053ea:	21a5      	movs	r1, #165	; 0xa5
 80053ec:	e7e8      	b.n	80053c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80053ee:	f011 fc6f 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053f2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80053f6:	3004      	adds	r0, #4
 80053f8:	f011 fcd0 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053fc:	f8d9 0000 	ldr.w	r0, [r9]
 8005400:	b110      	cbz	r0, 8005408 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005402:	6803      	ldr	r3, [r0, #0]
 8005404:	68db      	ldr	r3, [r3, #12]
 8005406:	4798      	blx	r3
    if (*currentTrans)
 8005408:	f8d9 0000 	ldr.w	r0, [r9]
 800540c:	b110      	cbz	r0, 8005414 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800540e:	6803      	ldr	r3, [r0, #0]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	4798      	blx	r3
    if (*currentScreen)
 8005414:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80054dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005418:	f8d8 0000 	ldr.w	r0, [r8]
 800541c:	b110      	cbz	r0, 8005424 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800541e:	6803      	ldr	r3, [r0, #0]
 8005420:	695b      	ldr	r3, [r3, #20]
 8005422:	4798      	blx	r3
    if (*currentPresenter)
 8005424:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005428:	b110      	cbz	r0, 8005430 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800542a:	6803      	ldr	r3, [r0, #0]
 800542c:	685b      	ldr	r3, [r3, #4]
 800542e:	4798      	blx	r3
    if (*currentScreen)
 8005430:	f8d8 0000 	ldr.w	r0, [r8]
 8005434:	b110      	cbz	r0, 800543c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005436:	6803      	ldr	r3, [r0, #0]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	4798      	blx	r3
    if (*currentPresenter)
 800543c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005440:	b110      	cbz	r0, 8005448 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005442:	6803      	ldr	r3, [r0, #0]
 8005444:	689b      	ldr	r3, [r3, #8]
 8005446:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005448:	68e0      	ldr	r0, [r4, #12]
 800544a:	2100      	movs	r1, #0
 800544c:	f7ff fd96 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005450:	2114      	movs	r1, #20
 8005452:	4605      	mov	r5, r0
 8005454:	f7ff fd96 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005458:	68a0      	ldr	r0, [r4, #8]
 800545a:	6803      	ldr	r3, [r0, #0]
 800545c:	2100      	movs	r1, #0
 800545e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005460:	4798      	blx	r3
 8005462:	4606      	mov	r6, r0
 8005464:	f003 fd84 	bl	8008f70 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005468:	6860      	ldr	r0, [r4, #4]
 800546a:	6803      	ldr	r3, [r0, #0]
 800546c:	2100      	movs	r1, #0
 800546e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005470:	4798      	blx	r3
 8005472:	4631      	mov	r1, r6
 8005474:	4604      	mov	r4, r0
 8005476:	f003 fd55 	bl	8008f24 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800547a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800547e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005482:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005486:	b1dc      	cbz	r4, 80054c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005488:	1d23      	adds	r3, r4, #4
 800548a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800548e:	6833      	ldr	r3, [r6, #0]
 8005490:	f8c4 a008 	str.w	sl, [r4, #8]
 8005494:	4630      	mov	r0, r6
 8005496:	68db      	ldr	r3, [r3, #12]
 8005498:	63f4      	str	r4, [r6, #60]	; 0x3c
 800549a:	4798      	blx	r3
    newPresenter->activate();
 800549c:	6823      	ldr	r3, [r4, #0]
 800549e:	4620      	mov	r0, r4
 80054a0:	681b      	ldr	r3, [r3, #0]
 80054a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054a4:	4629      	mov	r1, r5
 80054a6:	4630      	mov	r0, r6
 80054a8:	f013 fa3e 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054ac:	682b      	ldr	r3, [r5, #0]
 80054ae:	4628      	mov	r0, r5
 80054b0:	691b      	ldr	r3, [r3, #16]
 80054b2:	4798      	blx	r3
    newTransition->invalidate();
 80054b4:	682b      	ldr	r3, [r5, #0]
 80054b6:	4628      	mov	r0, r5
 80054b8:	695b      	ldr	r3, [r3, #20]
}
 80054ba:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054be:	4718      	bx	r3
    model->bind(newPresenter);
 80054c0:	4623      	mov	r3, r4
 80054c2:	e7e2      	b.n	800548a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80054c4:	0802d76c 	.word	0x0802d76c
 80054c8:	0802e28f 	.word	0x0802e28f
 80054cc:	0802d908 	.word	0x0802d908
 80054d0:	0802d94f 	.word	0x0802d94f
 80054d4:	0802d9f2 	.word	0x0802d9f2
 80054d8:	2001387c 	.word	0x2001387c
 80054dc:	20013878 	.word	0x20013878

080054e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80054e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054e4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80054e8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054ea:	68a0      	ldr	r0, [r4, #8]
 80054ec:	6803      	ldr	r3, [r0, #0]
 80054ee:	6a1b      	ldr	r3, [r3, #32]
 80054f0:	4798      	blx	r3
 80054f2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80054f6:	d205      	bcs.n	8005504 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80054f8:	4b42      	ldr	r3, [pc, #264]	; (8005604 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80054fa:	4a43      	ldr	r2, [pc, #268]	; (8005608 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80054fc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054fe:	4843      	ldr	r0, [pc, #268]	; (800560c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005500:	f026 faae 	bl	802ba60 <__assert_func>
 8005504:	6860      	ldr	r0, [r4, #4]
 8005506:	6803      	ldr	r3, [r0, #0]
 8005508:	6a1b      	ldr	r3, [r3, #32]
 800550a:	4798      	blx	r3
 800550c:	280f      	cmp	r0, #15
 800550e:	d803      	bhi.n	8005518 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005510:	4b3f      	ldr	r3, [pc, #252]	; (8005610 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005512:	4a3d      	ldr	r2, [pc, #244]	; (8005608 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005514:	21a4      	movs	r1, #164	; 0xa4
 8005516:	e7f2      	b.n	80054fe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005518:	68e0      	ldr	r0, [r4, #12]
 800551a:	6803      	ldr	r3, [r0, #0]
 800551c:	6a1b      	ldr	r3, [r3, #32]
 800551e:	4798      	blx	r3
 8005520:	2837      	cmp	r0, #55	; 0x37
 8005522:	d803      	bhi.n	800552c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005524:	4b3b      	ldr	r3, [pc, #236]	; (8005614 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005526:	4a38      	ldr	r2, [pc, #224]	; (8005608 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005528:	21a5      	movs	r1, #165	; 0xa5
 800552a:	e7e8      	b.n	80054fe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800552c:	f011 fbd0 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005530:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005618 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005534:	3004      	adds	r0, #4
 8005536:	f011 fc31 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800553a:	f8d9 0000 	ldr.w	r0, [r9]
 800553e:	b110      	cbz	r0, 8005546 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	68db      	ldr	r3, [r3, #12]
 8005544:	4798      	blx	r3
    if (*currentTrans)
 8005546:	f8d9 0000 	ldr.w	r0, [r9]
 800554a:	b110      	cbz	r0, 8005552 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800554c:	6803      	ldr	r3, [r0, #0]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	4798      	blx	r3
    if (*currentScreen)
 8005552:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800561c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005556:	f8d8 0000 	ldr.w	r0, [r8]
 800555a:	b110      	cbz	r0, 8005562 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800555c:	6803      	ldr	r3, [r0, #0]
 800555e:	695b      	ldr	r3, [r3, #20]
 8005560:	4798      	blx	r3
    if (*currentPresenter)
 8005562:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005566:	b110      	cbz	r0, 800556e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005568:	6803      	ldr	r3, [r0, #0]
 800556a:	685b      	ldr	r3, [r3, #4]
 800556c:	4798      	blx	r3
    if (*currentScreen)
 800556e:	f8d8 0000 	ldr.w	r0, [r8]
 8005572:	b110      	cbz	r0, 800557a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005574:	6803      	ldr	r3, [r0, #0]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	4798      	blx	r3
    if (*currentPresenter)
 800557a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800557e:	b110      	cbz	r0, 8005586 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005580:	6803      	ldr	r3, [r0, #0]
 8005582:	689b      	ldr	r3, [r3, #8]
 8005584:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005586:	68e0      	ldr	r0, [r4, #12]
 8005588:	2100      	movs	r1, #0
 800558a:	f7ff fcf7 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800558e:	2114      	movs	r1, #20
 8005590:	4605      	mov	r5, r0
 8005592:	f7ff fcf7 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005596:	68a0      	ldr	r0, [r4, #8]
 8005598:	6803      	ldr	r3, [r0, #0]
 800559a:	2100      	movs	r1, #0
 800559c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800559e:	4798      	blx	r3
 80055a0:	4606      	mov	r6, r0
 80055a2:	f003 fc8b 	bl	8008ebc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80055a6:	6860      	ldr	r0, [r4, #4]
 80055a8:	6803      	ldr	r3, [r0, #0]
 80055aa:	2100      	movs	r1, #0
 80055ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055ae:	4798      	blx	r3
 80055b0:	4631      	mov	r1, r6
 80055b2:	4604      	mov	r4, r0
 80055b4:	f003 fc5c 	bl	8008e70 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80055b8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055bc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055c0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055c4:	b1dc      	cbz	r4, 80055fe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80055c6:	1d23      	adds	r3, r4, #4
 80055c8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055cc:	6833      	ldr	r3, [r6, #0]
 80055ce:	f8c4 a008 	str.w	sl, [r4, #8]
 80055d2:	4630      	mov	r0, r6
 80055d4:	68db      	ldr	r3, [r3, #12]
 80055d6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055d8:	4798      	blx	r3
    newPresenter->activate();
 80055da:	6823      	ldr	r3, [r4, #0]
 80055dc:	4620      	mov	r0, r4
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055e2:	4629      	mov	r1, r5
 80055e4:	4630      	mov	r0, r6
 80055e6:	f013 f99f 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055ea:	682b      	ldr	r3, [r5, #0]
 80055ec:	4628      	mov	r0, r5
 80055ee:	691b      	ldr	r3, [r3, #16]
 80055f0:	4798      	blx	r3
    newTransition->invalidate();
 80055f2:	682b      	ldr	r3, [r5, #0]
 80055f4:	4628      	mov	r0, r5
 80055f6:	695b      	ldr	r3, [r3, #20]
}
 80055f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055fc:	4718      	bx	r3
    model->bind(newPresenter);
 80055fe:	4623      	mov	r3, r4
 8005600:	e7e2      	b.n	80055c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8005602:	bf00      	nop
 8005604:	0802d76c 	.word	0x0802d76c
 8005608:	0802e3cf 	.word	0x0802e3cf
 800560c:	0802d908 	.word	0x0802d908
 8005610:	0802d94f 	.word	0x0802d94f
 8005614:	0802d9f2 	.word	0x0802d9f2
 8005618:	2001387c 	.word	0x2001387c
 800561c:	20013878 	.word	0x20013878

08005620 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005620:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005624:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005628:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800562a:	68a0      	ldr	r0, [r4, #8]
 800562c:	6803      	ldr	r3, [r0, #0]
 800562e:	6a1b      	ldr	r3, [r3, #32]
 8005630:	4798      	blx	r3
 8005632:	f241 035b 	movw	r3, #4187	; 0x105b
 8005636:	4298      	cmp	r0, r3
 8005638:	d805      	bhi.n	8005646 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800563a:	4b42      	ldr	r3, [pc, #264]	; (8005744 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800563c:	4a42      	ldr	r2, [pc, #264]	; (8005748 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800563e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005640:	4842      	ldr	r0, [pc, #264]	; (800574c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005642:	f026 fa0d 	bl	802ba60 <__assert_func>
 8005646:	6860      	ldr	r0, [r4, #4]
 8005648:	6803      	ldr	r3, [r0, #0]
 800564a:	6a1b      	ldr	r3, [r3, #32]
 800564c:	4798      	blx	r3
 800564e:	280f      	cmp	r0, #15
 8005650:	d803      	bhi.n	800565a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8005652:	4b3f      	ldr	r3, [pc, #252]	; (8005750 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005654:	4a3c      	ldr	r2, [pc, #240]	; (8005748 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005656:	21a4      	movs	r1, #164	; 0xa4
 8005658:	e7f2      	b.n	8005640 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800565a:	68e0      	ldr	r0, [r4, #12]
 800565c:	6803      	ldr	r3, [r0, #0]
 800565e:	6a1b      	ldr	r3, [r3, #32]
 8005660:	4798      	blx	r3
 8005662:	2837      	cmp	r0, #55	; 0x37
 8005664:	d803      	bhi.n	800566e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005666:	4b3b      	ldr	r3, [pc, #236]	; (8005754 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005668:	4a37      	ldr	r2, [pc, #220]	; (8005748 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800566a:	21a5      	movs	r1, #165	; 0xa5
 800566c:	e7e8      	b.n	8005640 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800566e:	f011 fb2f 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005672:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005758 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005676:	3004      	adds	r0, #4
 8005678:	f011 fb90 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800567c:	f8d9 0000 	ldr.w	r0, [r9]
 8005680:	b110      	cbz	r0, 8005688 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005682:	6803      	ldr	r3, [r0, #0]
 8005684:	68db      	ldr	r3, [r3, #12]
 8005686:	4798      	blx	r3
    if (*currentTrans)
 8005688:	f8d9 0000 	ldr.w	r0, [r9]
 800568c:	b110      	cbz	r0, 8005694 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800568e:	6803      	ldr	r3, [r0, #0]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	4798      	blx	r3
    if (*currentScreen)
 8005694:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800575c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005698:	f8d8 0000 	ldr.w	r0, [r8]
 800569c:	b110      	cbz	r0, 80056a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800569e:	6803      	ldr	r3, [r0, #0]
 80056a0:	695b      	ldr	r3, [r3, #20]
 80056a2:	4798      	blx	r3
    if (*currentPresenter)
 80056a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056a8:	b110      	cbz	r0, 80056b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80056aa:	6803      	ldr	r3, [r0, #0]
 80056ac:	685b      	ldr	r3, [r3, #4]
 80056ae:	4798      	blx	r3
    if (*currentScreen)
 80056b0:	f8d8 0000 	ldr.w	r0, [r8]
 80056b4:	b110      	cbz	r0, 80056bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80056b6:	6803      	ldr	r3, [r0, #0]
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	4798      	blx	r3
    if (*currentPresenter)
 80056bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056c0:	b110      	cbz	r0, 80056c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80056c2:	6803      	ldr	r3, [r0, #0]
 80056c4:	689b      	ldr	r3, [r3, #8]
 80056c6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056c8:	68e0      	ldr	r0, [r4, #12]
 80056ca:	2100      	movs	r1, #0
 80056cc:	f7ff fc56 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056d0:	2114      	movs	r1, #20
 80056d2:	4605      	mov	r5, r0
 80056d4:	f7ff fc56 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056d8:	68a0      	ldr	r0, [r4, #8]
 80056da:	6803      	ldr	r3, [r0, #0]
 80056dc:	2100      	movs	r1, #0
 80056de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056e0:	4798      	blx	r3
 80056e2:	4606      	mov	r6, r0
 80056e4:	f003 fdc8 	bl	8009278 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056e8:	6860      	ldr	r0, [r4, #4]
 80056ea:	6803      	ldr	r3, [r0, #0]
 80056ec:	2100      	movs	r1, #0
 80056ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056f0:	4798      	blx	r3
 80056f2:	4631      	mov	r1, r6
 80056f4:	4604      	mov	r4, r0
 80056f6:	f003 fd99 	bl	800922c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80056fa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056fe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005702:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005706:	b1dc      	cbz	r4, 8005740 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005708:	1d23      	adds	r3, r4, #4
 800570a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800570e:	6833      	ldr	r3, [r6, #0]
 8005710:	f8c4 a008 	str.w	sl, [r4, #8]
 8005714:	4630      	mov	r0, r6
 8005716:	68db      	ldr	r3, [r3, #12]
 8005718:	63f4      	str	r4, [r6, #60]	; 0x3c
 800571a:	4798      	blx	r3
    newPresenter->activate();
 800571c:	6823      	ldr	r3, [r4, #0]
 800571e:	4620      	mov	r0, r4
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005724:	4629      	mov	r1, r5
 8005726:	4630      	mov	r0, r6
 8005728:	f013 f8fe 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800572c:	682b      	ldr	r3, [r5, #0]
 800572e:	4628      	mov	r0, r5
 8005730:	691b      	ldr	r3, [r3, #16]
 8005732:	4798      	blx	r3
    newTransition->invalidate();
 8005734:	682b      	ldr	r3, [r5, #0]
 8005736:	4628      	mov	r0, r5
 8005738:	695b      	ldr	r3, [r3, #20]
}
 800573a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800573e:	4718      	bx	r3
    model->bind(newPresenter);
 8005740:	4623      	mov	r3, r4
 8005742:	e7e2      	b.n	800570a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005744:	0802d76c 	.word	0x0802d76c
 8005748:	0802e4ff 	.word	0x0802e4ff
 800574c:	0802d908 	.word	0x0802d908
 8005750:	0802d94f 	.word	0x0802d94f
 8005754:	0802d9f2 	.word	0x0802d9f2
 8005758:	2001387c 	.word	0x2001387c
 800575c:	20013878 	.word	0x20013878

08005760 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005764:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005768:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800576a:	68a0      	ldr	r0, [r4, #8]
 800576c:	6803      	ldr	r3, [r0, #0]
 800576e:	6a1b      	ldr	r3, [r3, #32]
 8005770:	4798      	blx	r3
 8005772:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005776:	4298      	cmp	r0, r3
 8005778:	d805      	bhi.n	8005786 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800577a:	4b42      	ldr	r3, [pc, #264]	; (8005884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 800577c:	4a42      	ldr	r2, [pc, #264]	; (8005888 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800577e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005780:	4842      	ldr	r0, [pc, #264]	; (800588c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005782:	f026 f96d 	bl	802ba60 <__assert_func>
 8005786:	6860      	ldr	r0, [r4, #4]
 8005788:	6803      	ldr	r3, [r0, #0]
 800578a:	6a1b      	ldr	r3, [r3, #32]
 800578c:	4798      	blx	r3
 800578e:	280f      	cmp	r0, #15
 8005790:	d803      	bhi.n	800579a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005792:	4b3f      	ldr	r3, [pc, #252]	; (8005890 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005794:	4a3c      	ldr	r2, [pc, #240]	; (8005888 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005796:	21a4      	movs	r1, #164	; 0xa4
 8005798:	e7f2      	b.n	8005780 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800579a:	68e0      	ldr	r0, [r4, #12]
 800579c:	6803      	ldr	r3, [r0, #0]
 800579e:	6a1b      	ldr	r3, [r3, #32]
 80057a0:	4798      	blx	r3
 80057a2:	2837      	cmp	r0, #55	; 0x37
 80057a4:	d803      	bhi.n	80057ae <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80057a6:	4b3b      	ldr	r3, [pc, #236]	; (8005894 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80057a8:	4a37      	ldr	r2, [pc, #220]	; (8005888 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80057aa:	21a5      	movs	r1, #165	; 0xa5
 80057ac:	e7e8      	b.n	8005780 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80057ae:	f011 fa8f 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057b2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005898 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80057b6:	3004      	adds	r0, #4
 80057b8:	f011 faf0 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057bc:	f8d9 0000 	ldr.w	r0, [r9]
 80057c0:	b110      	cbz	r0, 80057c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80057c2:	6803      	ldr	r3, [r0, #0]
 80057c4:	68db      	ldr	r3, [r3, #12]
 80057c6:	4798      	blx	r3
    if (*currentTrans)
 80057c8:	f8d9 0000 	ldr.w	r0, [r9]
 80057cc:	b110      	cbz	r0, 80057d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80057ce:	6803      	ldr	r3, [r0, #0]
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	4798      	blx	r3
    if (*currentScreen)
 80057d4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800589c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80057d8:	f8d8 0000 	ldr.w	r0, [r8]
 80057dc:	b110      	cbz	r0, 80057e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057de:	6803      	ldr	r3, [r0, #0]
 80057e0:	695b      	ldr	r3, [r3, #20]
 80057e2:	4798      	blx	r3
    if (*currentPresenter)
 80057e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057e8:	b110      	cbz	r0, 80057f0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057ea:	6803      	ldr	r3, [r0, #0]
 80057ec:	685b      	ldr	r3, [r3, #4]
 80057ee:	4798      	blx	r3
    if (*currentScreen)
 80057f0:	f8d8 0000 	ldr.w	r0, [r8]
 80057f4:	b110      	cbz	r0, 80057fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80057f6:	6803      	ldr	r3, [r0, #0]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	4798      	blx	r3
    if (*currentPresenter)
 80057fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005800:	b110      	cbz	r0, 8005808 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005802:	6803      	ldr	r3, [r0, #0]
 8005804:	689b      	ldr	r3, [r3, #8]
 8005806:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005808:	68e0      	ldr	r0, [r4, #12]
 800580a:	2100      	movs	r1, #0
 800580c:	f7ff fbb6 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005810:	2114      	movs	r1, #20
 8005812:	4605      	mov	r5, r0
 8005814:	f7ff fbb6 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005818:	68a0      	ldr	r0, [r4, #8]
 800581a:	6803      	ldr	r3, [r0, #0]
 800581c:	2100      	movs	r1, #0
 800581e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005820:	4798      	blx	r3
 8005822:	4606      	mov	r6, r0
 8005824:	f003 fc88 	bl	8009138 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005828:	6860      	ldr	r0, [r4, #4]
 800582a:	6803      	ldr	r3, [r0, #0]
 800582c:	2100      	movs	r1, #0
 800582e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005830:	4798      	blx	r3
 8005832:	4631      	mov	r1, r6
 8005834:	4604      	mov	r4, r0
 8005836:	f003 fc59 	bl	80090ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800583a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800583e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005842:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005846:	b1dc      	cbz	r4, 8005880 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005848:	1d23      	adds	r3, r4, #4
 800584a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800584e:	6833      	ldr	r3, [r6, #0]
 8005850:	f8c4 a008 	str.w	sl, [r4, #8]
 8005854:	4630      	mov	r0, r6
 8005856:	68db      	ldr	r3, [r3, #12]
 8005858:	63f4      	str	r4, [r6, #60]	; 0x3c
 800585a:	4798      	blx	r3
    newPresenter->activate();
 800585c:	6823      	ldr	r3, [r4, #0]
 800585e:	4620      	mov	r0, r4
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005864:	4629      	mov	r1, r5
 8005866:	4630      	mov	r0, r6
 8005868:	f013 f85e 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800586c:	682b      	ldr	r3, [r5, #0]
 800586e:	4628      	mov	r0, r5
 8005870:	691b      	ldr	r3, [r3, #16]
 8005872:	4798      	blx	r3
    newTransition->invalidate();
 8005874:	682b      	ldr	r3, [r5, #0]
 8005876:	4628      	mov	r0, r5
 8005878:	695b      	ldr	r3, [r3, #20]
}
 800587a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800587e:	4718      	bx	r3
    model->bind(newPresenter);
 8005880:	4623      	mov	r3, r4
 8005882:	e7e2      	b.n	800584a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005884:	0802d76c 	.word	0x0802d76c
 8005888:	0802e641 	.word	0x0802e641
 800588c:	0802d908 	.word	0x0802d908
 8005890:	0802d94f 	.word	0x0802d94f
 8005894:	0802d9f2 	.word	0x0802d9f2
 8005898:	2001387c 	.word	0x2001387c
 800589c:	20013878 	.word	0x20013878

080058a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80058a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058a4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058a8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058aa:	68a0      	ldr	r0, [r4, #8]
 80058ac:	6803      	ldr	r3, [r0, #0]
 80058ae:	6a1b      	ldr	r3, [r3, #32]
 80058b0:	4798      	blx	r3
 80058b2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80058b6:	d205      	bcs.n	80058c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80058b8:	4b42      	ldr	r3, [pc, #264]	; (80059c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80058ba:	4a43      	ldr	r2, [pc, #268]	; (80059c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058bc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058be:	4843      	ldr	r0, [pc, #268]	; (80059cc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80058c0:	f026 f8ce 	bl	802ba60 <__assert_func>
 80058c4:	6860      	ldr	r0, [r4, #4]
 80058c6:	6803      	ldr	r3, [r0, #0]
 80058c8:	6a1b      	ldr	r3, [r3, #32]
 80058ca:	4798      	blx	r3
 80058cc:	280f      	cmp	r0, #15
 80058ce:	d803      	bhi.n	80058d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80058d0:	4b3f      	ldr	r3, [pc, #252]	; (80059d0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80058d2:	4a3d      	ldr	r2, [pc, #244]	; (80059c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058d4:	21a4      	movs	r1, #164	; 0xa4
 80058d6:	e7f2      	b.n	80058be <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058d8:	68e0      	ldr	r0, [r4, #12]
 80058da:	6803      	ldr	r3, [r0, #0]
 80058dc:	6a1b      	ldr	r3, [r3, #32]
 80058de:	4798      	blx	r3
 80058e0:	2837      	cmp	r0, #55	; 0x37
 80058e2:	d803      	bhi.n	80058ec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80058e4:	4b3b      	ldr	r3, [pc, #236]	; (80059d4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80058e6:	4a38      	ldr	r2, [pc, #224]	; (80059c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058e8:	21a5      	movs	r1, #165	; 0xa5
 80058ea:	e7e8      	b.n	80058be <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80058ec:	f011 f9f0 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058f0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80058f4:	3004      	adds	r0, #4
 80058f6:	f011 fa51 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058fa:	f8d9 0000 	ldr.w	r0, [r9]
 80058fe:	b110      	cbz	r0, 8005906 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005900:	6803      	ldr	r3, [r0, #0]
 8005902:	68db      	ldr	r3, [r3, #12]
 8005904:	4798      	blx	r3
    if (*currentTrans)
 8005906:	f8d9 0000 	ldr.w	r0, [r9]
 800590a:	b110      	cbz	r0, 8005912 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800590c:	6803      	ldr	r3, [r0, #0]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	4798      	blx	r3
    if (*currentScreen)
 8005912:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005916:	f8d8 0000 	ldr.w	r0, [r8]
 800591a:	b110      	cbz	r0, 8005922 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800591c:	6803      	ldr	r3, [r0, #0]
 800591e:	695b      	ldr	r3, [r3, #20]
 8005920:	4798      	blx	r3
    if (*currentPresenter)
 8005922:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005926:	b110      	cbz	r0, 800592e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005928:	6803      	ldr	r3, [r0, #0]
 800592a:	685b      	ldr	r3, [r3, #4]
 800592c:	4798      	blx	r3
    if (*currentScreen)
 800592e:	f8d8 0000 	ldr.w	r0, [r8]
 8005932:	b110      	cbz	r0, 800593a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005934:	6803      	ldr	r3, [r0, #0]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	4798      	blx	r3
    if (*currentPresenter)
 800593a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800593e:	b110      	cbz	r0, 8005946 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005940:	6803      	ldr	r3, [r0, #0]
 8005942:	689b      	ldr	r3, [r3, #8]
 8005944:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005946:	68e0      	ldr	r0, [r4, #12]
 8005948:	2100      	movs	r1, #0
 800594a:	f7ff fb17 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800594e:	2114      	movs	r1, #20
 8005950:	4605      	mov	r5, r0
 8005952:	f7ff fb17 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005956:	68a0      	ldr	r0, [r4, #8]
 8005958:	6803      	ldr	r3, [r0, #0]
 800595a:	2100      	movs	r1, #0
 800595c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800595e:	4798      	blx	r3
 8005960:	4606      	mov	r6, r0
 8005962:	f003 fb8f 	bl	8009084 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005966:	6860      	ldr	r0, [r4, #4]
 8005968:	6803      	ldr	r3, [r0, #0]
 800596a:	2100      	movs	r1, #0
 800596c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800596e:	4798      	blx	r3
 8005970:	4631      	mov	r1, r6
 8005972:	4604      	mov	r4, r0
 8005974:	f003 fb60 	bl	8009038 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005978:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800597c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005980:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005984:	b1dc      	cbz	r4, 80059be <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005986:	1d23      	adds	r3, r4, #4
 8005988:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800598c:	6833      	ldr	r3, [r6, #0]
 800598e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005992:	4630      	mov	r0, r6
 8005994:	68db      	ldr	r3, [r3, #12]
 8005996:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005998:	4798      	blx	r3
    newPresenter->activate();
 800599a:	6823      	ldr	r3, [r4, #0]
 800599c:	4620      	mov	r0, r4
 800599e:	681b      	ldr	r3, [r3, #0]
 80059a0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059a2:	4629      	mov	r1, r5
 80059a4:	4630      	mov	r0, r6
 80059a6:	f012 ffbf 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059aa:	682b      	ldr	r3, [r5, #0]
 80059ac:	4628      	mov	r0, r5
 80059ae:	691b      	ldr	r3, [r3, #16]
 80059b0:	4798      	blx	r3
    newTransition->invalidate();
 80059b2:	682b      	ldr	r3, [r5, #0]
 80059b4:	4628      	mov	r0, r5
 80059b6:	695b      	ldr	r3, [r3, #20]
}
 80059b8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059bc:	4718      	bx	r3
    model->bind(newPresenter);
 80059be:	4623      	mov	r3, r4
 80059c0:	e7e2      	b.n	8005988 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80059c2:	bf00      	nop
 80059c4:	0802d76c 	.word	0x0802d76c
 80059c8:	0802e783 	.word	0x0802e783
 80059cc:	0802d908 	.word	0x0802d908
 80059d0:	0802d94f 	.word	0x0802d94f
 80059d4:	0802d9f2 	.word	0x0802d9f2
 80059d8:	2001387c 	.word	0x2001387c
 80059dc:	20013878 	.word	0x20013878

080059e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80059e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059e4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059e8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059ea:	68a0      	ldr	r0, [r4, #8]
 80059ec:	6803      	ldr	r3, [r0, #0]
 80059ee:	6a1b      	ldr	r3, [r3, #32]
 80059f0:	4798      	blx	r3
 80059f2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80059f6:	d205      	bcs.n	8005a04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 80059f8:	4b42      	ldr	r3, [pc, #264]	; (8005b04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80059fa:	4a43      	ldr	r2, [pc, #268]	; (8005b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80059fc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059fe:	4843      	ldr	r0, [pc, #268]	; (8005b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005a00:	f026 f82e 	bl	802ba60 <__assert_func>
 8005a04:	6860      	ldr	r0, [r4, #4]
 8005a06:	6803      	ldr	r3, [r0, #0]
 8005a08:	6a1b      	ldr	r3, [r3, #32]
 8005a0a:	4798      	blx	r3
 8005a0c:	280f      	cmp	r0, #15
 8005a0e:	d803      	bhi.n	8005a18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005a10:	4b3f      	ldr	r3, [pc, #252]	; (8005b10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005a12:	4a3d      	ldr	r2, [pc, #244]	; (8005b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a14:	21a4      	movs	r1, #164	; 0xa4
 8005a16:	e7f2      	b.n	80059fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a18:	68e0      	ldr	r0, [r4, #12]
 8005a1a:	6803      	ldr	r3, [r0, #0]
 8005a1c:	6a1b      	ldr	r3, [r3, #32]
 8005a1e:	4798      	blx	r3
 8005a20:	2837      	cmp	r0, #55	; 0x37
 8005a22:	d803      	bhi.n	8005a2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005a24:	4b3b      	ldr	r3, [pc, #236]	; (8005b14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005a26:	4a38      	ldr	r2, [pc, #224]	; (8005b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a28:	21a5      	movs	r1, #165	; 0xa5
 8005a2a:	e7e8      	b.n	80059fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a2c:	f011 f950 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a30:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005a34:	3004      	adds	r0, #4
 8005a36:	f011 f9b1 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a3a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a3e:	b110      	cbz	r0, 8005a46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a40:	6803      	ldr	r3, [r0, #0]
 8005a42:	68db      	ldr	r3, [r3, #12]
 8005a44:	4798      	blx	r3
    if (*currentTrans)
 8005a46:	f8d9 0000 	ldr.w	r0, [r9]
 8005a4a:	b110      	cbz	r0, 8005a52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a4c:	6803      	ldr	r3, [r0, #0]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	4798      	blx	r3
    if (*currentScreen)
 8005a52:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005a56:	f8d8 0000 	ldr.w	r0, [r8]
 8005a5a:	b110      	cbz	r0, 8005a62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a5c:	6803      	ldr	r3, [r0, #0]
 8005a5e:	695b      	ldr	r3, [r3, #20]
 8005a60:	4798      	blx	r3
    if (*currentPresenter)
 8005a62:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a66:	b110      	cbz	r0, 8005a6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a68:	6803      	ldr	r3, [r0, #0]
 8005a6a:	685b      	ldr	r3, [r3, #4]
 8005a6c:	4798      	blx	r3
    if (*currentScreen)
 8005a6e:	f8d8 0000 	ldr.w	r0, [r8]
 8005a72:	b110      	cbz	r0, 8005a7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a74:	6803      	ldr	r3, [r0, #0]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	4798      	blx	r3
    if (*currentPresenter)
 8005a7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a7e:	b110      	cbz	r0, 8005a86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a80:	6803      	ldr	r3, [r0, #0]
 8005a82:	689b      	ldr	r3, [r3, #8]
 8005a84:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a86:	68e0      	ldr	r0, [r4, #12]
 8005a88:	2100      	movs	r1, #0
 8005a8a:	f7ff fa77 	bl	8004f7c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a8e:	2114      	movs	r1, #20
 8005a90:	4605      	mov	r5, r0
 8005a92:	f7ff fa77 	bl	8004f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a96:	68a0      	ldr	r0, [r4, #8]
 8005a98:	6803      	ldr	r3, [r0, #0]
 8005a9a:	2100      	movs	r1, #0
 8005a9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a9e:	4798      	blx	r3
 8005aa0:	4606      	mov	r6, r0
 8005aa2:	f003 f9ab 	bl	8008dfc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005aa6:	6860      	ldr	r0, [r4, #4]
 8005aa8:	6803      	ldr	r3, [r0, #0]
 8005aaa:	2100      	movs	r1, #0
 8005aac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aae:	4798      	blx	r3
 8005ab0:	4631      	mov	r1, r6
 8005ab2:	4604      	mov	r4, r0
 8005ab4:	f003 f97c 	bl	8008db0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005ab8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005abc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ac0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ac4:	b1dc      	cbz	r4, 8005afe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005ac6:	1d23      	adds	r3, r4, #4
 8005ac8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005acc:	6833      	ldr	r3, [r6, #0]
 8005ace:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ad2:	4630      	mov	r0, r6
 8005ad4:	68db      	ldr	r3, [r3, #12]
 8005ad6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ad8:	4798      	blx	r3
    newPresenter->activate();
 8005ada:	6823      	ldr	r3, [r4, #0]
 8005adc:	4620      	mov	r0, r4
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ae2:	4629      	mov	r1, r5
 8005ae4:	4630      	mov	r0, r6
 8005ae6:	f012 ff1f 	bl	8018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005aea:	682b      	ldr	r3, [r5, #0]
 8005aec:	4628      	mov	r0, r5
 8005aee:	691b      	ldr	r3, [r3, #16]
 8005af0:	4798      	blx	r3
    newTransition->invalidate();
 8005af2:	682b      	ldr	r3, [r5, #0]
 8005af4:	4628      	mov	r0, r5
 8005af6:	695b      	ldr	r3, [r3, #20]
}
 8005af8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005afc:	4718      	bx	r3
    model->bind(newPresenter);
 8005afe:	4623      	mov	r3, r4
 8005b00:	e7e2      	b.n	8005ac8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005b02:	bf00      	nop
 8005b04:	0802d76c 	.word	0x0802d76c
 8005b08:	0802e8af 	.word	0x0802e8af
 8005b0c:	0802d908 	.word	0x0802d908
 8005b10:	0802d94f 	.word	0x0802d94f
 8005b14:	0802d9f2 	.word	0x0802d9f2
 8005b18:	2001387c 	.word	0x2001387c
 8005b1c:	20013878 	.word	0x20013878

08005b20 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005b20:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005b22:	4770      	bx	lr

08005b24 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005b24:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005b26:	4770      	bx	lr

08005b28 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005b28:	4770      	bx	lr

08005b2a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005b2a:	888b      	ldrh	r3, [r1, #4]
 8005b2c:	69c0      	ldr	r0, [r0, #28]
 8005b2e:	680a      	ldr	r2, [r1, #0]
 8005b30:	0adb      	lsrs	r3, r3, #11
 8005b32:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005b36:	4410      	add	r0, r2
 8005b38:	4770      	bx	lr

08005b3a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005b3a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005b3c:	b1c2      	cbz	r2, 8005b70 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005b3e:	7b13      	ldrb	r3, [r2, #12]
 8005b40:	b1b3      	cbz	r3, 8005b70 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005b42:	7b54      	ldrb	r4, [r2, #13]
 8005b44:	7ad2      	ldrb	r2, [r2, #11]
 8005b46:	0224      	lsls	r4, r4, #8
 8005b48:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b4c:	4314      	orrs	r4, r2
 8005b4e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b50:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b52:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005b56:	8813      	ldrh	r3, [r2, #0]
 8005b58:	428b      	cmp	r3, r1
 8005b5a:	d102      	bne.n	8005b62 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005b5c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005b60:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005b62:	d805      	bhi.n	8005b70 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b64:	3801      	subs	r0, #1
 8005b66:	b280      	uxth	r0, r0
 8005b68:	3204      	adds	r2, #4
 8005b6a:	2800      	cmp	r0, #0
 8005b6c:	d1f3      	bne.n	8005b56 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005b6e:	e7f7      	b.n	8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005b70:	2000      	movs	r0, #0
 8005b72:	e7f5      	b.n	8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005b74 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005b74:	b510      	push	{r4, lr}
 8005b76:	212c      	movs	r1, #44	; 0x2c
 8005b78:	4604      	mov	r4, r0
 8005b7a:	f025 f95e 	bl	802ae3a <_ZdlPvj>
 8005b7e:	4620      	mov	r0, r4
 8005b80:	bd10      	pop	{r4, pc}
	...

08005b84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005b84:	b530      	push	{r4, r5, lr}
 8005b86:	b08b      	sub	sp, #44	; 0x2c
 8005b88:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005b8a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005b8e:	9508      	str	r5, [sp, #32]
 8005b90:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005b94:	9507      	str	r5, [sp, #28]
 8005b96:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005b9a:	9506      	str	r5, [sp, #24]
 8005b9c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005ba0:	9505      	str	r5, [sp, #20]
 8005ba2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005ba6:	9504      	str	r5, [sp, #16]
 8005ba8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005bac:	9503      	str	r5, [sp, #12]
 8005bae:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005bb2:	9502      	str	r5, [sp, #8]
 8005bb4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005bb8:	9501      	str	r5, [sp, #4]
 8005bba:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005bbe:	9500      	str	r5, [sp, #0]
 8005bc0:	f012 fa1c 	bl	8017ffc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005bc4:	4b06      	ldr	r3, [pc, #24]	; (8005be0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005bc6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005bc8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005bca:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005bcc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005bce:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005bd0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bd2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005bd4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005bd6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005bd8:	4620      	mov	r0, r4
 8005bda:	b00b      	add	sp, #44	; 0x2c
 8005bdc:	bd30      	pop	{r4, r5, pc}
 8005bde:	bf00      	nop
 8005be0:	0802eb18 	.word	0x0802eb18

08005be4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005be4:	4770      	bx	lr

08005be6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005be6:	4770      	bx	lr

08005be8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005be8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bea:	68c2      	ldr	r2, [r0, #12]
 8005bec:	6844      	ldr	r4, [r0, #4]
 8005bee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005bf0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005bf2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005bf6:	07d2      	lsls	r2, r2, #31
 8005bf8:	bf48      	it	mi
 8005bfa:	5962      	ldrmi	r2, [r4, r5]
 8005bfc:	689b      	ldr	r3, [r3, #8]
    }
 8005bfe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c00:	bf48      	it	mi
 8005c02:	58d3      	ldrmi	r3, [r2, r3]
 8005c04:	4718      	bx	r3

08005c06 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005c06:	6843      	ldr	r3, [r0, #4]
 8005c08:	b12b      	cbz	r3, 8005c16 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005c0a:	6883      	ldr	r3, [r0, #8]
 8005c0c:	b92b      	cbnz	r3, 8005c1a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005c0e:	68c0      	ldr	r0, [r0, #12]
 8005c10:	f000 0001 	and.w	r0, r0, #1
 8005c14:	4770      	bx	lr
 8005c16:	4618      	mov	r0, r3
 8005c18:	4770      	bx	lr
 8005c1a:	2001      	movs	r0, #1
    }
 8005c1c:	4770      	bx	lr

08005c1e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c1e:	b510      	push	{r4, lr}
 8005c20:	2110      	movs	r1, #16
 8005c22:	4604      	mov	r4, r0
 8005c24:	f025 f909 	bl	802ae3a <_ZdlPvj>
 8005c28:	4620      	mov	r0, r4
 8005c2a:	bd10      	pop	{r4, pc}

08005c2c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c2c:	b510      	push	{r4, lr}
 8005c2e:	4b03      	ldr	r3, [pc, #12]	; (8005c3c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005c30:	6003      	str	r3, [r0, #0]
 8005c32:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c34:	f00f fb4a 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c38:	4620      	mov	r0, r4
 8005c3a:	bd10      	pop	{r4, pc}
 8005c3c:	0802eb90 	.word	0x0802eb90

08005c40 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c40:	b507      	push	{r0, r1, r2, lr}
 8005c42:	4b07      	ldr	r3, [pc, #28]	; (8005c60 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005c44:	6003      	str	r3, [r0, #0]
 8005c46:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c48:	f00f fb40 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c4c:	9801      	ldr	r0, [sp, #4]
 8005c4e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005c52:	f025 f8f2 	bl	802ae3a <_ZdlPvj>
 8005c56:	9801      	ldr	r0, [sp, #4]
 8005c58:	b003      	add	sp, #12
 8005c5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005c5e:	bf00      	nop
 8005c60:	0802eb90 	.word	0x0802eb90

08005c64 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005c64:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005c66:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005c6a:	4299      	cmp	r1, r3
{
 8005c6c:	4604      	mov	r4, r0
 8005c6e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005c70:	d103      	bne.n	8005c7a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005c72:	f011 f82d 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005c76:	f7fe feaf 	bl	80049d8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005c7a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c7e:	429d      	cmp	r5, r3
 8005c80:	d103      	bne.n	8005c8a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005c82:	f011 f825 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8005c86:	f7fe ff37 	bl	8004af8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005c8a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c8e:	429d      	cmp	r5, r3
 8005c90:	d103      	bne.n	8005c9a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005c92:	f011 f81d 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005c96:	f7fe ff3f 	bl	8004b18 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005c9a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005c9e:	42a5      	cmp	r5, r4
 8005ca0:	d10a      	bne.n	8005cb8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005ca2:	4806      	ldr	r0, [pc, #24]	; (8005cbc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005ca4:	2200      	movs	r2, #0
 8005ca6:	2120      	movs	r1, #32
 8005ca8:	f004 fa42 	bl	800a130 <HAL_GPIO_WritePin>
 8005cac:	f011 f810 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005cb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005cb4:	f7fe bf40 	b.w	8004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005cb8:	bd38      	pop	{r3, r4, r5, pc}
 8005cba:	bf00      	nop
 8005cbc:	40021000 	.word	0x40021000

08005cc0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cc4:	ed2d 8b06 	vpush	{d8-d10}
 8005cc8:	4604      	mov	r4, r0
 8005cca:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005ccc:	46a3      	mov	fp, r4
        : presenter(0)
 8005cce:	2500      	movs	r5, #0
 8005cd0:	f012 fc7e 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 8005cd4:	4b6a      	ldr	r3, [pc, #424]	; (8005e80 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005cd6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005cd8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005cdc:	2226      	movs	r2, #38	; 0x26
 8005cde:	4629      	mov	r1, r5
 8005ce0:	4658      	mov	r0, fp
 8005ce2:	f026 f8c2 	bl	802be6a <memset>
 8005ce6:	4658      	mov	r0, fp
 8005ce8:	f7fc fec6 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8005cec:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005cf0:	26ff      	movs	r6, #255	; 0xff
 8005cf2:	4b64      	ldr	r3, [pc, #400]	; (8005e84 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005cf4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005cf6:	2226      	movs	r2, #38	; 0x26
 8005cf8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005cfc:	4629      	mov	r1, r5
 8005cfe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005d02:	4650      	mov	r0, sl
        : color(col)
 8005d04:	66a5      	str	r5, [r4, #104]	; 0x68
 8005d06:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005d0a:	f026 f8ae 	bl	802be6a <memset>
 8005d0e:	4650      	mov	r0, sl
 8005d10:	f7fc feb2 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8005d14:	4b5c      	ldr	r3, [pc, #368]	; (8005e88 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005d16:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005d18:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005d1c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005d20:	a90c      	add	r1, sp, #48	; 0x30
 8005d22:	4650      	mov	r0, sl
 8005d24:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005d28:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005d2c:	f00e fad1 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005d30:	4648      	mov	r0, r9
 8005d32:	f7fc ff05 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8005d36:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005d3a:	4b54      	ldr	r3, [pc, #336]	; (8005e8c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005d3c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005d40:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005d44:	4638      	mov	r0, r7
 8005d46:	f00c ffb7 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8005d4a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d4e:	4618      	mov	r0, r3
 8005d50:	9303      	str	r3, [sp, #12]
 8005d52:	f7fc fc95 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d56:	4b4e      	ldr	r3, [pc, #312]	; (8005e90 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005d58:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005d5c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005d60:	3324      	adds	r3, #36	; 0x24
 8005d62:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005d66:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005d6a:	4640      	mov	r0, r8
 8005d6c:	f7fc fee8 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8005d70:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005d74:	4618      	mov	r0, r3
 8005d76:	ee08 3a10 	vmov	s16, r3
 8005d7a:	f7fc fee1 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8005d7e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005d82:	4618      	mov	r0, r3
 8005d84:	ee08 3a90 	vmov	s17, r3
 8005d88:	f7fc feda 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8005d8c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005d90:	4618      	mov	r0, r3
 8005d92:	ee09 3a10 	vmov	s18, r3
 8005d96:	f00e fbd3 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d9a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005d9e:	4618      	mov	r0, r3
 8005da0:	ee09 3a90 	vmov	s19, r3
 8005da4:	f00e fbcc 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005da8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005dac:	4618      	mov	r0, r3
 8005dae:	ee0a 3a10 	vmov	s20, r3
 8005db2:	f00e fbc5 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005db6:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005dba:	4618      	mov	r0, r3
 8005dbc:	ee0a 3a90 	vmov	s21, r3
 8005dc0:	f00e fa60 	bl	8014284 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005dc4:	4a33      	ldr	r2, [pc, #204]	; (8005e94 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005dc6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005dca:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005dce:	4a32      	ldr	r2, [pc, #200]	; (8005e98 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005dd0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005dd4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005dd8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005ddc:	f00f fa6c 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005de0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005de4:	462a      	mov	r2, r5
 8005de6:	4658      	mov	r0, fp
 8005de8:	9300      	str	r3, [sp, #0]
 8005dea:	4629      	mov	r1, r5
 8005dec:	23f0      	movs	r3, #240	; 0xf0
 8005dee:	f7fc fe1e 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8005df2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005df4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005df8:	66a3      	str	r3, [r4, #104]	; 0x68
 8005dfa:	4659      	mov	r1, fp
 8005dfc:	4630      	mov	r0, r6
 8005dfe:	f00a fe8f 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005e02:	462a      	mov	r2, r5
 8005e04:	4650      	mov	r0, sl
 8005e06:	4629      	mov	r1, r5
 8005e08:	f7fc fe04 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8005e0c:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005e0e:	4650      	mov	r0, sl
 8005e10:	a90c      	add	r1, sp, #48	; 0x30
 8005e12:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005e16:	f00e fa5c 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005e1a:	4651      	mov	r1, sl
 8005e1c:	4630      	mov	r0, r6
 8005e1e:	f00a fe7f 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005e22:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005e26:	2156      	movs	r1, #86	; 0x56
 8005e28:	4648      	mov	r0, r9
 8005e2a:	f7fc fdf3 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8005e2e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005e32:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005e36:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005e3a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005e3e:	4650      	mov	r0, sl
 8005e40:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005e44:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005e48:	4649      	mov	r1, r9
 8005e4a:	4798      	blx	r3
 8005e4c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005e50:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005e54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e58:	4b10      	ldr	r3, [pc, #64]	; (8005e9c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005e5a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005e5c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005e60:	b92b      	cbnz	r3, 8005e6e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005e62:	4b0f      	ldr	r3, [pc, #60]	; (8005ea0 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005e64:	4a0f      	ldr	r2, [pc, #60]	; (8005ea4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e66:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e68:	480f      	ldr	r0, [pc, #60]	; (8005ea8 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005e6a:	f025 fdf9 	bl	802ba60 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e6e:	4b0f      	ldr	r3, [pc, #60]	; (8005eac <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e70:	881b      	ldrh	r3, [r3, #0]
 8005e72:	2b38      	cmp	r3, #56	; 0x38
 8005e74:	d81e      	bhi.n	8005eb4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005e76:	4b0e      	ldr	r3, [pc, #56]	; (8005eb0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005e78:	4a0a      	ldr	r2, [pc, #40]	; (8005ea4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e7a:	2161      	movs	r1, #97	; 0x61
 8005e7c:	e7f4      	b.n	8005e68 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005e7e:	bf00      	nop
 8005e80:	0802eb90 	.word	0x0802eb90
 8005e84:	0802fb44 	.word	0x0802fb44
 8005e88:	0802fd90 	.word	0x0802fd90
 8005e8c:	0802d690 	.word	0x0802d690
 8005e90:	0802f878 	.word	0x0802f878
 8005e94:	0802eb78 	.word	0x0802eb78
 8005e98:	08005c65 	.word	0x08005c65
 8005e9c:	2001388c 	.word	0x2001388c
 8005ea0:	0802d440 	.word	0x0802d440
 8005ea4:	0802d545 	.word	0x0802d545
 8005ea8:	0802d4bd 	.word	0x0802d4bd
 8005eac:	20013890 	.word	0x20013890
 8005eb0:	0802d504 	.word	0x0802d504
        return texts->getText(typedTextId);
 8005eb4:	4ba5      	ldr	r3, [pc, #660]	; (800614c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005eb6:	2138      	movs	r1, #56	; 0x38
 8005eb8:	6818      	ldr	r0, [r3, #0]
 8005eba:	f002 fdaf 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8005ebe:	4aa4      	ldr	r2, [pc, #656]	; (8006150 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005ec0:	4603      	mov	r3, r0
 8005ec2:	2104      	movs	r1, #4
 8005ec4:	4650      	mov	r0, sl
 8005ec6:	f014 f8b1 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005eca:	4648      	mov	r0, r9
        wc1 = value;
 8005ecc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005ed0:	f00d fc2e 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005ed4:	4b9f      	ldr	r3, [pc, #636]	; (8006154 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005ed6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005ed8:	a90c      	add	r1, sp, #48	; 0x30
 8005eda:	2339      	movs	r3, #57	; 0x39
 8005edc:	4648      	mov	r0, r9
 8005ede:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005ee2:	f00d fc45 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ee6:	4649      	mov	r1, r9
 8005ee8:	4630      	mov	r0, r6
 8005eea:	f00a fe19 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005eee:	230a      	movs	r3, #10
 8005ef0:	9300      	str	r3, [sp, #0]
 8005ef2:	2232      	movs	r2, #50	; 0x32
 8005ef4:	23f0      	movs	r3, #240	; 0xf0
 8005ef6:	4629      	mov	r1, r5
 8005ef8:	4638      	mov	r0, r7
 8005efa:	f7fc fd98 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8005efe:	9b03      	ldr	r3, [sp, #12]
 8005f00:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f04:	22a0      	movs	r2, #160	; 0xa0
 8005f06:	4611      	mov	r1, r2
 8005f08:	4638      	mov	r0, r7
 8005f0a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005f0e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005f12:	f00c ffe7 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f16:	22a0      	movs	r2, #160	; 0xa0
 8005f18:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005f1c:	4638      	mov	r0, r7
 8005f1e:	f00c ffec 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005f22:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005f26:	2b20      	cmp	r3, #32
 8005f28:	d005      	beq.n	8005f36 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005f2a:	2320      	movs	r3, #32
 8005f2c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005f30:	4638      	mov	r0, r7
 8005f32:	f00c fee1 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005f36:	4638      	mov	r0, r7
 8005f38:	2101      	movs	r1, #1
 8005f3a:	f00c ffe9 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005f3e:	4639      	mov	r1, r7
 8005f40:	4630      	mov	r0, r6
 8005f42:	ad04      	add	r5, sp, #16
        color = newColor;
 8005f44:	f04f 37ff 	mov.w	r7, #4294967295
 8005f48:	f00a fdea 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005f4c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005f50:	2223      	movs	r2, #35	; 0x23
 8005f52:	4640      	mov	r0, r8
 8005f54:	2145      	movs	r1, #69	; 0x45
 8005f56:	f7fc fd5d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005f5a:	4641      	mov	r1, r8
 8005f5c:	4628      	mov	r0, r5
        color = newColor;
 8005f5e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005f62:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005f66:	f00d f969 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005f6e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005f72:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005f76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f7a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006154 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005f7e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f82:	2353      	movs	r3, #83	; 0x53
 8005f84:	4649      	mov	r1, r9
 8005f86:	4640      	mov	r0, r8
 8005f88:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005f8c:	f00d fbf0 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f90:	4641      	mov	r1, r8
 8005f92:	4630      	mov	r0, r6
 8005f94:	f00a fdc4 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005f98:	ee18 0a10 	vmov	r0, s16
 8005f9c:	220c      	movs	r2, #12
 8005f9e:	2136      	movs	r1, #54	; 0x36
 8005fa0:	f7fc fd38 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8005fa4:	ee18 1a10 	vmov	r1, s16
 8005fa8:	4628      	mov	r0, r5
        color = newColor;
 8005faa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005fae:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005fb2:	f00d f943 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fb6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fba:	ee18 3a10 	vmov	r3, s16
 8005fbe:	333c      	adds	r3, #60	; 0x3c
 8005fc0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fc4:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005fc6:	ee18 0a10 	vmov	r0, s16
 8005fca:	4649      	mov	r1, r9
 8005fcc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005fd0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005fd4:	f00d fbcc 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fd8:	ee18 1a10 	vmov	r1, s16
 8005fdc:	4630      	mov	r0, r6
 8005fde:	f00a fd9f 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005fe2:	ee18 0a90 	vmov	r0, s17
 8005fe6:	223c      	movs	r2, #60	; 0x3c
 8005fe8:	2158      	movs	r1, #88	; 0x58
 8005fea:	f7fc fd13 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8005fee:	ee18 1a90 	vmov	r1, s17
 8005ff2:	4628      	mov	r0, r5
        color = newColor;
 8005ff4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005ff8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005ffc:	f00d f91e 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006000:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006004:	ee18 3a90 	vmov	r3, s17
 8006008:	333c      	adds	r3, #60	; 0x3c
 800600a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800600e:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006010:	ee18 0a90 	vmov	r0, s17
 8006014:	4649      	mov	r1, r9
 8006016:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800601a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800601e:	f00d fba7 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006022:	ee18 1a90 	vmov	r1, s17
 8006026:	4630      	mov	r0, r6
 8006028:	f00a fd7a 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800602c:	ee19 0a10 	vmov	r0, s18
 8006030:	22f0      	movs	r2, #240	; 0xf0
 8006032:	2121      	movs	r1, #33	; 0x21
 8006034:	f7fc fcee 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006038:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800603c:	464a      	mov	r2, r9
 800603e:	f04f 0802 	mov.w	r8, #2
 8006042:	a90b      	add	r1, sp, #44	; 0x2c
 8006044:	ee19 0a10 	vmov	r0, s18
 8006048:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800604c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006050:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006054:	f00d ff47 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006058:	2355      	movs	r3, #85	; 0x55
 800605a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800605e:	350c      	adds	r5, #12
        updateTextPosition();
 8006060:	ee19 0a10 	vmov	r0, s18
 8006064:	f7fc fd1a 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006068:	ee19 1a10 	vmov	r1, s18
 800606c:	4630      	mov	r0, r6
        colorPressed = col;
 800606e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006072:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006076:	f00a fd53 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800607a:	ee19 0a90 	vmov	r0, s19
 800607e:	22aa      	movs	r2, #170	; 0xaa
 8006080:	2121      	movs	r1, #33	; 0x21
 8006082:	f7fc fcc7 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006086:	464a      	mov	r2, r9
 8006088:	a90b      	add	r1, sp, #44	; 0x2c
 800608a:	ee19 0a90 	vmov	r0, s19
 800608e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006092:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006096:	f00d ff26 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800609a:	2356      	movs	r3, #86	; 0x56
 800609c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80060a0:	ee19 0a90 	vmov	r0, s19
 80060a4:	f7fc fcfa 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060a8:	ee19 1a90 	vmov	r1, s19
 80060ac:	4630      	mov	r0, r6
        colorPressed = col;
 80060ae:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80060b2:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80060b6:	f00a fd33 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80060ba:	ee1a 0a10 	vmov	r0, s20
 80060be:	2264      	movs	r2, #100	; 0x64
 80060c0:	2121      	movs	r1, #33	; 0x21
 80060c2:	f7fc fca7 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060c6:	464a      	mov	r2, r9
 80060c8:	a90b      	add	r1, sp, #44	; 0x2c
 80060ca:	ee1a 0a10 	vmov	r0, s20
 80060ce:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80060d2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80060d6:	f00d ff06 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060da:	2357      	movs	r3, #87	; 0x57
 80060dc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80060e0:	ee1a 0a10 	vmov	r0, s20
 80060e4:	f7fc fcda 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060e8:	ee1a 1a10 	vmov	r1, s20
 80060ec:	4630      	mov	r0, r6
        colorPressed = col;
 80060ee:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80060f2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80060f6:	f00a fd13 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80060fa:	ee1a 0a90 	vmov	r0, s21
 80060fe:	2205      	movs	r2, #5
 8006100:	21c6      	movs	r1, #198	; 0xc6
 8006102:	f7fc fc87 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006106:	2301      	movs	r3, #1
 8006108:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800610c:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800610e:	ee1a 0a90 	vmov	r0, s21
 8006112:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006116:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800611a:	aa0a      	add	r2, sp, #40	; 0x28
 800611c:	ab0b      	add	r3, sp, #44	; 0x2c
 800611e:	a909      	add	r1, sp, #36	; 0x24
 8006120:	f8cd 9000 	str.w	r9, [sp]
 8006124:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006128:	f00e f817 	bl	801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800612c:	4630      	mov	r0, r6
 800612e:	ee1a 1a90 	vmov	r1, s21
 8006132:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006136:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800613a:	f00a fcf1 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800613e:	4620      	mov	r0, r4
 8006140:	b00f      	add	sp, #60	; 0x3c
 8006142:	ecbd 8b06 	vpop	{d8-d10}
 8006146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800614a:	bf00      	nop
 800614c:	20013898 	.word	0x20013898
 8006150:	0802d57d 	.word	0x0802d57d
 8006154:	0802d5f0 	.word	0x0802d5f0

08006158 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006158:	4770      	bx	lr

0800615a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800615a:	4770      	bx	lr

0800615c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800615c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800615e:	68c2      	ldr	r2, [r0, #12]
 8006160:	6844      	ldr	r4, [r0, #4]
 8006162:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006164:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006166:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800616a:	07d2      	lsls	r2, r2, #31
 800616c:	bf48      	it	mi
 800616e:	5962      	ldrmi	r2, [r4, r5]
 8006170:	689b      	ldr	r3, [r3, #8]
    }
 8006172:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006174:	bf48      	it	mi
 8006176:	58d3      	ldrmi	r3, [r2, r3]
 8006178:	4718      	bx	r3

0800617a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800617a:	6843      	ldr	r3, [r0, #4]
 800617c:	b12b      	cbz	r3, 800618a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800617e:	6883      	ldr	r3, [r0, #8]
 8006180:	b92b      	cbnz	r3, 800618e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006182:	68c0      	ldr	r0, [r0, #12]
 8006184:	f000 0001 	and.w	r0, r0, #1
 8006188:	4770      	bx	lr
 800618a:	4618      	mov	r0, r3
 800618c:	4770      	bx	lr
 800618e:	2001      	movs	r0, #1
    }
 8006190:	4770      	bx	lr

08006192 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006192:	b510      	push	{r4, lr}
 8006194:	2110      	movs	r1, #16
 8006196:	4604      	mov	r4, r0
 8006198:	f024 fe4f 	bl	802ae3a <_ZdlPvj>
 800619c:	4620      	mov	r0, r4
 800619e:	bd10      	pop	{r4, pc}

080061a0 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80061a0:	b510      	push	{r4, lr}
 80061a2:	4b03      	ldr	r3, [pc, #12]	; (80061b0 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80061a4:	6003      	str	r3, [r0, #0]
 80061a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061a8:	f00f f890 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061ac:	4620      	mov	r0, r4
 80061ae:	bd10      	pop	{r4, pc}
 80061b0:	0802ebdc 	.word	0x0802ebdc

080061b4 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80061b4:	b507      	push	{r0, r1, r2, lr}
 80061b6:	4b07      	ldr	r3, [pc, #28]	; (80061d4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80061b8:	6003      	str	r3, [r0, #0]
 80061ba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061bc:	f00f f886 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061c0:	9801      	ldr	r0, [sp, #4]
 80061c2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80061c6:	f024 fe38 	bl	802ae3a <_ZdlPvj>
 80061ca:	9801      	ldr	r0, [sp, #4]
 80061cc:	b003      	add	sp, #12
 80061ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80061d2:	bf00      	nop
 80061d4:	0802ebdc 	.word	0x0802ebdc

080061d8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80061d8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80061da:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80061de:	4299      	cmp	r1, r3
{
 80061e0:	4604      	mov	r4, r0
 80061e2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80061e4:	d103      	bne.n	80061ee <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80061e6:	f010 fd73 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80061ea:	f7fe fbe5 	bl	80049b8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80061ee:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80061f2:	429d      	cmp	r5, r3
 80061f4:	d103      	bne.n	80061fe <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80061f6:	f010 fd6b 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80061fa:	f7fe fc0d 	bl	8004a18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80061fe:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006202:	42a5      	cmp	r5, r4
 8006204:	d105      	bne.n	8006212 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006206:	f010 fd63 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 800620a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800620e:	f7fe bc33 	b.w	8004a78 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006212:	bd38      	pop	{r3, r4, r5, pc}

08006214 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006218:	ed2d 8b06 	vpush	{d8-d10}
 800621c:	4604      	mov	r4, r0
 800621e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006220:	46a3      	mov	fp, r4
 8006222:	2500      	movs	r5, #0
 8006224:	f012 f9d4 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 8006228:	4b66      	ldr	r3, [pc, #408]	; (80063c4 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800622a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800622c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006230:	2226      	movs	r2, #38	; 0x26
 8006232:	4629      	mov	r1, r5
 8006234:	4658      	mov	r0, fp
 8006236:	f025 fe18 	bl	802be6a <memset>
 800623a:	4658      	mov	r0, fp
 800623c:	f7fc fc1c 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006240:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006244:	26ff      	movs	r6, #255	; 0xff
 8006246:	4b60      	ldr	r3, [pc, #384]	; (80063c8 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006248:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800624a:	2226      	movs	r2, #38	; 0x26
 800624c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006250:	4629      	mov	r1, r5
 8006252:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006256:	4650      	mov	r0, sl
 8006258:	66a5      	str	r5, [r4, #104]	; 0x68
 800625a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800625e:	f025 fe04 	bl	802be6a <memset>
 8006262:	4650      	mov	r0, sl
 8006264:	f7fc fc08 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006268:	4b58      	ldr	r3, [pc, #352]	; (80063cc <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800626a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800626c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006270:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006274:	a90a      	add	r1, sp, #40	; 0x28
 8006276:	4650      	mov	r0, sl
 8006278:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800627c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006280:	f00e f827 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006284:	4648      	mov	r0, r9
 8006286:	f7fc fc5b 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800628a:	4b51      	ldr	r3, [pc, #324]	; (80063d0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800628c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006290:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006294:	4618      	mov	r0, r3
 8006296:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800629a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800629e:	ee08 3a90 	vmov	s17, r3
 80062a2:	f7fc fc4d 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80062a6:	4638      	mov	r0, r7
 80062a8:	f00c fd06 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 80062ac:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80062b0:	4618      	mov	r0, r3
 80062b2:	9303      	str	r3, [sp, #12]
 80062b4:	f7fc f9e4 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80062b8:	4b46      	ldr	r3, [pc, #280]	; (80063d4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80062ba:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80062be:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80062c2:	3324      	adds	r3, #36	; 0x24
 80062c4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80062c8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80062cc:	4640      	mov	r0, r8
 80062ce:	f7fc fc37 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80062d2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80062d6:	4618      	mov	r0, r3
 80062d8:	ee08 3a10 	vmov	s16, r3
 80062dc:	f7fc fc30 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80062e0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80062e4:	4618      	mov	r0, r3
 80062e6:	ee09 3a10 	vmov	s18, r3
 80062ea:	f00e f929 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062ee:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80062f2:	4618      	mov	r0, r3
 80062f4:	ee09 3a90 	vmov	s19, r3
 80062f8:	f00e f922 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062fc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006300:	4618      	mov	r0, r3
 8006302:	ee0a 3a10 	vmov	s20, r3
 8006306:	f00e f91b 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800630a:	4a33      	ldr	r2, [pc, #204]	; (80063d8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 800630c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006310:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006314:	4a31      	ldr	r2, [pc, #196]	; (80063dc <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006316:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800631a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800631e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006322:	f00e ffc9 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006326:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800632a:	462a      	mov	r2, r5
 800632c:	4658      	mov	r0, fp
 800632e:	9300      	str	r3, [sp, #0]
 8006330:	4629      	mov	r1, r5
 8006332:	23f0      	movs	r3, #240	; 0xf0
 8006334:	f7fc fb7b 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006338:	1d26      	adds	r6, r4, #4
        color = newColor;
 800633a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800633e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006340:	4659      	mov	r1, fp
 8006342:	4630      	mov	r0, r6
 8006344:	f00a fbec 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006348:	462a      	mov	r2, r5
 800634a:	4650      	mov	r0, sl
 800634c:	4629      	mov	r1, r5
 800634e:	f7fc fb61 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006352:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006354:	4650      	mov	r0, sl
 8006356:	a90a      	add	r1, sp, #40	; 0x28
 8006358:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800635c:	f00d ffb9 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006360:	4651      	mov	r1, sl
 8006362:	4630      	mov	r0, r6
 8006364:	f00a fbdc 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006368:	f44f 729a 	mov.w	r2, #308	; 0x134
 800636c:	2156      	movs	r1, #86	; 0x56
 800636e:	4648      	mov	r0, r9
 8006370:	f7fc fb50 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006374:	f04f 33ff 	mov.w	r3, #4294967295
 8006378:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800637c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006380:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006384:	f10d 0b10 	add.w	fp, sp, #16
 8006388:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800638c:	4649      	mov	r1, r9
 800638e:	4658      	mov	r0, fp
 8006390:	4798      	blx	r3
 8006392:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006396:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800639a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800639e:	4b10      	ldr	r3, [pc, #64]	; (80063e0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80063a0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80063a2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80063a6:	b92b      	cbnz	r3, 80063b4 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80063a8:	4b0e      	ldr	r3, [pc, #56]	; (80063e4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80063aa:	4a0f      	ldr	r2, [pc, #60]	; (80063e8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80063ac:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063ae:	480f      	ldr	r0, [pc, #60]	; (80063ec <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80063b0:	f025 fb56 	bl	802ba60 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80063b4:	4b0e      	ldr	r3, [pc, #56]	; (80063f0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063b6:	881b      	ldrh	r3, [r3, #0]
 80063b8:	2b29      	cmp	r3, #41	; 0x29
 80063ba:	d81d      	bhi.n	80063f8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80063bc:	4b0d      	ldr	r3, [pc, #52]	; (80063f4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80063be:	4a0a      	ldr	r2, [pc, #40]	; (80063e8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80063c0:	2161      	movs	r1, #97	; 0x61
 80063c2:	e7f4      	b.n	80063ae <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80063c4:	0802ebdc 	.word	0x0802ebdc
 80063c8:	0802fb44 	.word	0x0802fb44
 80063cc:	0802fd90 	.word	0x0802fd90
 80063d0:	0802d690 	.word	0x0802d690
 80063d4:	0802f878 	.word	0x0802f878
 80063d8:	0802ebc4 	.word	0x0802ebc4
 80063dc:	080061d9 	.word	0x080061d9
 80063e0:	2001388c 	.word	0x2001388c
 80063e4:	0802d440 	.word	0x0802d440
 80063e8:	0802d545 	.word	0x0802d545
 80063ec:	0802d4bd 	.word	0x0802d4bd
 80063f0:	20013890 	.word	0x20013890
 80063f4:	0802d504 	.word	0x0802d504
        return texts->getText(typedTextId);
 80063f8:	4b95      	ldr	r3, [pc, #596]	; (8006650 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80063fa:	2129      	movs	r1, #41	; 0x29
 80063fc:	6818      	ldr	r0, [r3, #0]
 80063fe:	f002 fb0d 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8006402:	4a94      	ldr	r2, [pc, #592]	; (8006654 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006404:	4603      	mov	r3, r0
 8006406:	2104      	movs	r1, #4
 8006408:	4650      	mov	r0, sl
 800640a:	f013 fe0f 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800640e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006412:	4648      	mov	r0, r9
 8006414:	f00d f98c 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006418:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006658 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800641c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006420:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006422:	a90a      	add	r1, sp, #40	; 0x28
 8006424:	4648      	mov	r0, r9
 8006426:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800642a:	f00d f9a1 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800642e:	4649      	mov	r1, r9
 8006430:	4630      	mov	r0, r6
 8006432:	f00a fb75 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006436:	223c      	movs	r2, #60	; 0x3c
 8006438:	ee18 0a90 	vmov	r0, s17
 800643c:	213d      	movs	r1, #61	; 0x3d
 800643e:	f7fc fae9 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006442:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006446:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800644a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800644e:	4658      	mov	r0, fp
        linespace = space;
 8006450:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006454:	f00c fef2 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006458:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800645c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006460:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006464:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006466:	ee18 0a90 	vmov	r0, s17
 800646a:	a90a      	add	r1, sp, #40	; 0x28
 800646c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006470:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006474:	f00d f97c 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006478:	ee18 1a90 	vmov	r1, s17
 800647c:	4630      	mov	r0, r6
 800647e:	f00a fb4f 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006482:	230a      	movs	r3, #10
 8006484:	9300      	str	r3, [sp, #0]
 8006486:	2232      	movs	r2, #50	; 0x32
 8006488:	23f0      	movs	r3, #240	; 0xf0
 800648a:	4629      	mov	r1, r5
 800648c:	4638      	mov	r0, r7
 800648e:	f7fc face 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006492:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006496:	22a0      	movs	r2, #160	; 0xa0
 8006498:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800649c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80064a0:	9b03      	ldr	r3, [sp, #12]
 80064a2:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80064a6:	4611      	mov	r1, r2
 80064a8:	4638      	mov	r0, r7
 80064aa:	f00c fd1b 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064ae:	22a0      	movs	r2, #160	; 0xa0
 80064b0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80064b4:	4638      	mov	r0, r7
 80064b6:	f00c fd20 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80064ba:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80064be:	2b20      	cmp	r3, #32
 80064c0:	d005      	beq.n	80064ce <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80064c2:	2320      	movs	r3, #32
 80064c4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80064c8:	4638      	mov	r0, r7
 80064ca:	f00c fc15 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80064ce:	4638      	mov	r0, r7
 80064d0:	2101      	movs	r1, #1
 80064d2:	f00c fd1d 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80064d6:	4639      	mov	r1, r7
 80064d8:	4630      	mov	r0, r6
 80064da:	f00a fb21 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80064de:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80064e2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80064e4:	2223      	movs	r2, #35	; 0x23
 80064e6:	4640      	mov	r0, r8
        linespace = space;
 80064e8:	f04f 0a00 	mov.w	sl, #0
 80064ec:	2145      	movs	r1, #69	; 0x45
 80064ee:	f7fc fa91 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064f2:	4641      	mov	r1, r8
 80064f4:	4638      	mov	r0, r7
        color = newColor;
 80064f6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80064fa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80064fe:	f00c fe9d 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006502:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006506:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800650a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800650e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006658 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006512:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006516:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006518:	a90a      	add	r1, sp, #40	; 0x28
 800651a:	4640      	mov	r0, r8
 800651c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006520:	f00d f926 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006524:	4641      	mov	r1, r8
 8006526:	4630      	mov	r0, r6
 8006528:	f00a fafa 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800652c:	ee18 0a10 	vmov	r0, s16
 8006530:	220c      	movs	r2, #12
 8006532:	2136      	movs	r1, #54	; 0x36
 8006534:	f7fc fa6e 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006538:	ee18 1a10 	vmov	r1, s16
 800653c:	4638      	mov	r0, r7
        color = newColor;
 800653e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006542:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006546:	f00c fe79 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800654a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800654e:	ee18 3a10 	vmov	r3, s16
 8006552:	333c      	adds	r3, #60	; 0x3c
 8006554:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006558:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800655a:	ee18 0a10 	vmov	r0, s16
 800655e:	a90a      	add	r1, sp, #40	; 0x28
 8006560:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006564:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006568:	f00d f902 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800656c:	ee18 1a10 	vmov	r1, s16
 8006570:	4630      	mov	r0, r6
 8006572:	f00a fad5 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006576:	ee19 0a10 	vmov	r0, s18
 800657a:	22f0      	movs	r2, #240	; 0xf0
 800657c:	2121      	movs	r1, #33	; 0x21
 800657e:	f7fc fa49 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006582:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006586:	aa0a      	add	r2, sp, #40	; 0x28
 8006588:	f04f 0802 	mov.w	r8, #2
 800658c:	a909      	add	r1, sp, #36	; 0x24
 800658e:	ee19 0a10 	vmov	r0, s18
 8006592:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006596:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800659a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800659e:	f00d fca2 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80065a2:	2350      	movs	r3, #80	; 0x50
 80065a4:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80065a8:	3710      	adds	r7, #16
        updateTextPosition();
 80065aa:	ee19 0a10 	vmov	r0, s18
 80065ae:	f7fc fa75 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065b2:	ee19 1a10 	vmov	r1, s18
 80065b6:	4630      	mov	r0, r6
        colorPressed = col;
 80065b8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80065bc:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80065c0:	f00a faae 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80065c4:	ee19 0a90 	vmov	r0, s19
 80065c8:	22aa      	movs	r2, #170	; 0xaa
 80065ca:	2121      	movs	r1, #33	; 0x21
 80065cc:	f7fc fa22 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065d0:	aa0a      	add	r2, sp, #40	; 0x28
 80065d2:	a909      	add	r1, sp, #36	; 0x24
 80065d4:	ee19 0a90 	vmov	r0, s19
 80065d8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80065dc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80065e0:	f00d fc81 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80065e4:	234f      	movs	r3, #79	; 0x4f
 80065e6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80065ea:	ee19 0a90 	vmov	r0, s19
 80065ee:	f7fc fa55 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065f2:	ee19 1a90 	vmov	r1, s19
 80065f6:	4630      	mov	r0, r6
        colorPressed = col;
 80065f8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80065fc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006600:	f00a fa8e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006604:	ee1a 0a10 	vmov	r0, s20
 8006608:	2264      	movs	r2, #100	; 0x64
 800660a:	2121      	movs	r1, #33	; 0x21
 800660c:	f7fc fa02 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006610:	aa0a      	add	r2, sp, #40	; 0x28
 8006612:	a909      	add	r1, sp, #36	; 0x24
 8006614:	ee1a 0a10 	vmov	r0, s20
 8006618:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800661c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006620:	f00d fc61 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006624:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 8006626:	ee1a 0a10 	vmov	r0, s20
 800662a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800662e:	f7fc fa35 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006632:	4630      	mov	r0, r6
        colorPressed = col;
 8006634:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006638:	ee1a 1a10 	vmov	r1, s20
 800663c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006640:	f00a fa6e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006644:	4620      	mov	r0, r4
 8006646:	b00d      	add	sp, #52	; 0x34
 8006648:	ecbd 8b06 	vpop	{d8-d10}
 800664c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006650:	20013898 	.word	0x20013898
 8006654:	0802d57d 	.word	0x0802d57d
 8006658:	0802d5f0 	.word	0x0802d5f0

0800665c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800665c:	4770      	bx	lr

0800665e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800665e:	4770      	bx	lr

08006660 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006660:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006662:	68c2      	ldr	r2, [r0, #12]
 8006664:	6844      	ldr	r4, [r0, #4]
 8006666:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006668:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800666a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800666e:	07d2      	lsls	r2, r2, #31
 8006670:	bf48      	it	mi
 8006672:	5962      	ldrmi	r2, [r4, r5]
 8006674:	689b      	ldr	r3, [r3, #8]
    }
 8006676:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006678:	bf48      	it	mi
 800667a:	58d3      	ldrmi	r3, [r2, r3]
 800667c:	4718      	bx	r3

0800667e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800667e:	6843      	ldr	r3, [r0, #4]
 8006680:	b12b      	cbz	r3, 800668e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006682:	6883      	ldr	r3, [r0, #8]
 8006684:	b92b      	cbnz	r3, 8006692 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006686:	68c0      	ldr	r0, [r0, #12]
 8006688:	f000 0001 	and.w	r0, r0, #1
 800668c:	4770      	bx	lr
 800668e:	4618      	mov	r0, r3
 8006690:	4770      	bx	lr
 8006692:	2001      	movs	r0, #1
    }
 8006694:	4770      	bx	lr

08006696 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006696:	b510      	push	{r4, lr}
 8006698:	2110      	movs	r1, #16
 800669a:	4604      	mov	r4, r0
 800669c:	f024 fbcd 	bl	802ae3a <_ZdlPvj>
 80066a0:	4620      	mov	r0, r4
 80066a2:	bd10      	pop	{r4, pc}

080066a4 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80066a4:	b510      	push	{r4, lr}
 80066a6:	4b03      	ldr	r3, [pc, #12]	; (80066b4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80066a8:	6003      	str	r3, [r0, #0]
 80066aa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066ac:	f00e fe0e 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066b0:	4620      	mov	r0, r4
 80066b2:	bd10      	pop	{r4, pc}
 80066b4:	0802ec28 	.word	0x0802ec28

080066b8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80066b8:	b507      	push	{r0, r1, r2, lr}
 80066ba:	4b07      	ldr	r3, [pc, #28]	; (80066d8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80066bc:	6003      	str	r3, [r0, #0]
 80066be:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066c0:	f00e fe04 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066c4:	9801      	ldr	r0, [sp, #4]
 80066c6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066ca:	f024 fbb6 	bl	802ae3a <_ZdlPvj>
 80066ce:	9801      	ldr	r0, [sp, #4]
 80066d0:	b003      	add	sp, #12
 80066d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80066d6:	bf00      	nop
 80066d8:	0802ec28 	.word	0x0802ec28

080066dc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80066dc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80066de:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80066e2:	4299      	cmp	r1, r3
{
 80066e4:	4604      	mov	r4, r0
 80066e6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80066e8:	d103      	bne.n	80066f2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066ea:	f010 faf1 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80066ee:	f7fe f983 	bl	80049f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80066f2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80066f6:	429d      	cmp	r5, r3
 80066f8:	d103      	bne.n	8006702 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066fa:	f010 fae9 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80066fe:	f7fe f9eb 	bl	8004ad8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006702:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006706:	42a5      	cmp	r5, r4
 8006708:	d105      	bne.n	8006716 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800670a:	f010 fae1 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 800670e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006712:	f7fe b9d1 	b.w	8004ab8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006716:	bd38      	pop	{r3, r4, r5, pc}

08006718 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800671c:	ed2d 8b06 	vpush	{d8-d10}
 8006720:	4604      	mov	r4, r0
 8006722:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006724:	46a3      	mov	fp, r4
 8006726:	2500      	movs	r5, #0
 8006728:	f011 ff52 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 800672c:	4b66      	ldr	r3, [pc, #408]	; (80068c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 800672e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006730:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006734:	2226      	movs	r2, #38	; 0x26
 8006736:	4629      	mov	r1, r5
 8006738:	4658      	mov	r0, fp
 800673a:	f025 fb96 	bl	802be6a <memset>
 800673e:	4658      	mov	r0, fp
 8006740:	f7fc f99a 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006744:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006748:	26ff      	movs	r6, #255	; 0xff
 800674a:	4b60      	ldr	r3, [pc, #384]	; (80068cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 800674c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800674e:	2226      	movs	r2, #38	; 0x26
 8006750:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006754:	4629      	mov	r1, r5
 8006756:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800675a:	4650      	mov	r0, sl
 800675c:	66a5      	str	r5, [r4, #104]	; 0x68
 800675e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006762:	f025 fb82 	bl	802be6a <memset>
 8006766:	4650      	mov	r0, sl
 8006768:	f7fc f986 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 800676c:	4b58      	ldr	r3, [pc, #352]	; (80068d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 800676e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006770:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006774:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006778:	a90a      	add	r1, sp, #40	; 0x28
 800677a:	4650      	mov	r0, sl
 800677c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006780:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006784:	f00d fda5 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006788:	4648      	mov	r0, r9
 800678a:	f7fc f9d9 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 800678e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006792:	4b50      	ldr	r3, [pc, #320]	; (80068d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006794:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006798:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800679c:	4638      	mov	r0, r7
 800679e:	f00c fa8b 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 80067a2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067a6:	4618      	mov	r0, r3
 80067a8:	9303      	str	r3, [sp, #12]
 80067aa:	f7fb ff69 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067ae:	4b4a      	ldr	r3, [pc, #296]	; (80068d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80067b0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80067b4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80067b8:	3324      	adds	r3, #36	; 0x24
 80067ba:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80067be:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80067c2:	4640      	mov	r0, r8
 80067c4:	f7fc f9bc 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80067c8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80067cc:	4618      	mov	r0, r3
 80067ce:	ee08 3a10 	vmov	s16, r3
 80067d2:	f7fc f9b5 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80067d6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80067da:	4618      	mov	r0, r3
 80067dc:	ee08 3a90 	vmov	s17, r3
 80067e0:	f7fc f9ae 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80067e4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067e8:	4618      	mov	r0, r3
 80067ea:	ee09 3a10 	vmov	s18, r3
 80067ee:	f00d fea7 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067f2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067f6:	4618      	mov	r0, r3
 80067f8:	ee09 3a90 	vmov	s19, r3
 80067fc:	f00d fea0 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006800:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006804:	4618      	mov	r0, r3
 8006806:	ee0a 3a10 	vmov	s20, r3
 800680a:	f00d fe99 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800680e:	4a33      	ldr	r2, [pc, #204]	; (80068dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006810:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006814:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006818:	4a31      	ldr	r2, [pc, #196]	; (80068e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800681a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800681e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006822:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006826:	f00e fd47 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800682a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800682e:	462a      	mov	r2, r5
 8006830:	4658      	mov	r0, fp
 8006832:	9300      	str	r3, [sp, #0]
 8006834:	4629      	mov	r1, r5
 8006836:	23f0      	movs	r3, #240	; 0xf0
 8006838:	f7fc f8f9 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 800683c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800683e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006842:	66a3      	str	r3, [r4, #104]	; 0x68
 8006844:	4659      	mov	r1, fp
 8006846:	4630      	mov	r0, r6
 8006848:	f00a f96a 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800684c:	462a      	mov	r2, r5
 800684e:	4650      	mov	r0, sl
 8006850:	4629      	mov	r1, r5
 8006852:	f7fc f8df 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006856:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006858:	4650      	mov	r0, sl
 800685a:	a90a      	add	r1, sp, #40	; 0x28
 800685c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006860:	f00d fd37 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006864:	4651      	mov	r1, sl
 8006866:	4630      	mov	r0, r6
 8006868:	f00a f95a 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800686c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006870:	2156      	movs	r1, #86	; 0x56
 8006872:	4648      	mov	r0, r9
 8006874:	f7fc f8ce 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006878:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800687c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006880:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006884:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006888:	4650      	mov	r0, sl
 800688a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800688e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006892:	4649      	mov	r1, r9
 8006894:	4798      	blx	r3
 8006896:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800689a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800689e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068a2:	4b10      	ldr	r3, [pc, #64]	; (80068e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 80068a4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80068a6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80068aa:	b92b      	cbnz	r3, 80068b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 80068ac:	4b0e      	ldr	r3, [pc, #56]	; (80068e8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80068ae:	4a0f      	ldr	r2, [pc, #60]	; (80068ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80068b0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068b2:	480f      	ldr	r0, [pc, #60]	; (80068f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80068b4:	f025 f8d4 	bl	802ba60 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068b8:	4b0e      	ldr	r3, [pc, #56]	; (80068f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068ba:	881b      	ldrh	r3, [r3, #0]
 80068bc:	2b24      	cmp	r3, #36	; 0x24
 80068be:	d81d      	bhi.n	80068fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80068c0:	4b0d      	ldr	r3, [pc, #52]	; (80068f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80068c2:	4a0a      	ldr	r2, [pc, #40]	; (80068ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80068c4:	2161      	movs	r1, #97	; 0x61
 80068c6:	e7f4      	b.n	80068b2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80068c8:	0802ec28 	.word	0x0802ec28
 80068cc:	0802fb44 	.word	0x0802fb44
 80068d0:	0802fd90 	.word	0x0802fd90
 80068d4:	0802d690 	.word	0x0802d690
 80068d8:	0802f878 	.word	0x0802f878
 80068dc:	0802ec10 	.word	0x0802ec10
 80068e0:	080066dd 	.word	0x080066dd
 80068e4:	2001388c 	.word	0x2001388c
 80068e8:	0802d440 	.word	0x0802d440
 80068ec:	0802d545 	.word	0x0802d545
 80068f0:	0802d4bd 	.word	0x0802d4bd
 80068f4:	20013890 	.word	0x20013890
 80068f8:	0802d504 	.word	0x0802d504
        return texts->getText(typedTextId);
 80068fc:	4b93      	ldr	r3, [pc, #588]	; (8006b4c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80068fe:	2124      	movs	r1, #36	; 0x24
 8006900:	6818      	ldr	r0, [r3, #0]
 8006902:	f002 f88b 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8006906:	4a92      	ldr	r2, [pc, #584]	; (8006b50 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006908:	4603      	mov	r3, r0
 800690a:	2104      	movs	r1, #4
 800690c:	4650      	mov	r0, sl
 800690e:	f013 fb8d 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006912:	4648      	mov	r0, r9
        wc1 = value;
 8006914:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006918:	f00c ff0a 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800691c:	4b8d      	ldr	r3, [pc, #564]	; (8006b54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800691e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006920:	a90a      	add	r1, sp, #40	; 0x28
 8006922:	2325      	movs	r3, #37	; 0x25
 8006924:	4648      	mov	r0, r9
 8006926:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800692a:	f00c ff21 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800692e:	4649      	mov	r1, r9
 8006930:	4630      	mov	r0, r6
 8006932:	f00a f8f5 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006936:	230a      	movs	r3, #10
 8006938:	9300      	str	r3, [sp, #0]
 800693a:	2232      	movs	r2, #50	; 0x32
 800693c:	23f0      	movs	r3, #240	; 0xf0
 800693e:	4629      	mov	r1, r5
 8006940:	4638      	mov	r0, r7
 8006942:	f7fc f874 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006946:	9b03      	ldr	r3, [sp, #12]
 8006948:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800694c:	22a0      	movs	r2, #160	; 0xa0
 800694e:	4611      	mov	r1, r2
 8006950:	4638      	mov	r0, r7
 8006952:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006956:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800695a:	f00c fac3 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800695e:	22a0      	movs	r2, #160	; 0xa0
 8006960:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006964:	4638      	mov	r0, r7
 8006966:	f00c fac8 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800696a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800696e:	2b20      	cmp	r3, #32
 8006970:	d005      	beq.n	800697e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006972:	2320      	movs	r3, #32
 8006974:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006978:	4638      	mov	r0, r7
 800697a:	f00c f9bd 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800697e:	4638      	mov	r0, r7
 8006980:	2101      	movs	r1, #1
 8006982:	f00c fac5 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006986:	4639      	mov	r1, r7
 8006988:	4630      	mov	r0, r6
 800698a:	ad04      	add	r5, sp, #16
        color = newColor;
 800698c:	f04f 37ff 	mov.w	r7, #4294967295
 8006990:	f00a f8c6 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006994:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006998:	2223      	movs	r2, #35	; 0x23
 800699a:	4640      	mov	r0, r8
 800699c:	2145      	movs	r1, #69	; 0x45
 800699e:	f7fc f839 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80069a2:	4641      	mov	r1, r8
 80069a4:	4628      	mov	r0, r5
        color = newColor;
 80069a6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80069aa:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80069ae:	f00c fc45 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069b6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80069ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069be:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006b54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80069c2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80069c6:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80069c8:	a90a      	add	r1, sp, #40	; 0x28
 80069ca:	4640      	mov	r0, r8
 80069cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069d0:	f00c fece 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069d4:	4641      	mov	r1, r8
 80069d6:	4630      	mov	r0, r6
 80069d8:	f00a f8a2 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069dc:	ee18 0a10 	vmov	r0, s16
 80069e0:	220c      	movs	r2, #12
 80069e2:	2136      	movs	r1, #54	; 0x36
 80069e4:	f7fc f816 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80069e8:	ee18 1a10 	vmov	r1, s16
 80069ec:	4628      	mov	r0, r5
        color = newColor;
 80069ee:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80069f2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80069f6:	f00c fc21 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069fe:	ee18 3a10 	vmov	r3, s16
 8006a02:	333c      	adds	r3, #60	; 0x3c
 8006a04:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a08:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006a0a:	ee18 0a10 	vmov	r0, s16
 8006a0e:	a90a      	add	r1, sp, #40	; 0x28
 8006a10:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a14:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a18:	f00c feaa 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a1c:	ee18 1a10 	vmov	r1, s16
 8006a20:	4630      	mov	r0, r6
 8006a22:	f00a f87d 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006a26:	ee18 0a90 	vmov	r0, s17
 8006a2a:	223c      	movs	r2, #60	; 0x3c
 8006a2c:	2121      	movs	r1, #33	; 0x21
 8006a2e:	f7fb fff1 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006a32:	ee18 1a90 	vmov	r1, s17
 8006a36:	4628      	mov	r0, r5
        color = newColor;
 8006a38:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006a3c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a40:	f00c fbfc 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a44:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a48:	ee18 3a90 	vmov	r3, s17
 8006a4c:	333c      	adds	r3, #60	; 0x3c
 8006a4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a52:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006a54:	ee18 0a90 	vmov	r0, s17
 8006a58:	a90a      	add	r1, sp, #40	; 0x28
 8006a5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a5e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a62:	f00c fe85 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a66:	ee18 1a90 	vmov	r1, s17
 8006a6a:	4630      	mov	r0, r6
 8006a6c:	f00a f858 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a70:	ee19 0a10 	vmov	r0, s18
 8006a74:	22f0      	movs	r2, #240	; 0xf0
 8006a76:	2121      	movs	r1, #33	; 0x21
 8006a78:	f7fb ffcc 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006a7c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a80:	aa0a      	add	r2, sp, #40	; 0x28
 8006a82:	f04f 0802 	mov.w	r8, #2
 8006a86:	a909      	add	r1, sp, #36	; 0x24
 8006a88:	ee19 0a10 	vmov	r0, s18
 8006a8c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a90:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a94:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a98:	f00d fa25 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a9c:	2342      	movs	r3, #66	; 0x42
 8006a9e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006aa2:	3510      	adds	r5, #16
        updateTextPosition();
 8006aa4:	ee19 0a10 	vmov	r0, s18
 8006aa8:	f7fb fff8 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006aac:	ee19 1a10 	vmov	r1, s18
 8006ab0:	4630      	mov	r0, r6
        colorPressed = col;
 8006ab2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006ab6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006aba:	f00a f831 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006abe:	ee19 0a90 	vmov	r0, s19
 8006ac2:	22aa      	movs	r2, #170	; 0xaa
 8006ac4:	2121      	movs	r1, #33	; 0x21
 8006ac6:	f7fb ffa5 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006aca:	aa0a      	add	r2, sp, #40	; 0x28
 8006acc:	a909      	add	r1, sp, #36	; 0x24
 8006ace:	ee19 0a90 	vmov	r0, s19
 8006ad2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ad6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ada:	f00d fa04 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ade:	2341      	movs	r3, #65	; 0x41
 8006ae0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ae4:	ee19 0a90 	vmov	r0, s19
 8006ae8:	f7fb ffd8 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006aec:	ee19 1a90 	vmov	r1, s19
 8006af0:	4630      	mov	r0, r6
        colorPressed = col;
 8006af2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006af6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006afa:	f00a f811 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006afe:	ee1a 0a10 	vmov	r0, s20
 8006b02:	2264      	movs	r2, #100	; 0x64
 8006b04:	2121      	movs	r1, #33	; 0x21
 8006b06:	f7fb ff85 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b0a:	aa0a      	add	r2, sp, #40	; 0x28
 8006b0c:	a909      	add	r1, sp, #36	; 0x24
 8006b0e:	ee1a 0a10 	vmov	r0, s20
 8006b12:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b16:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b1a:	f00d f9e4 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b1e:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006b20:	ee1a 0a10 	vmov	r0, s20
 8006b24:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b28:	f7fb ffb8 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b2c:	4630      	mov	r0, r6
        colorPressed = col;
 8006b2e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006b32:	ee1a 1a10 	vmov	r1, s20
 8006b36:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006b3a:	f009 fff1 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b3e:	4620      	mov	r0, r4
 8006b40:	b00d      	add	sp, #52	; 0x34
 8006b42:	ecbd 8b06 	vpop	{d8-d10}
 8006b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b4a:	bf00      	nop
 8006b4c:	20013898 	.word	0x20013898
 8006b50:	0802d57d 	.word	0x0802d57d
 8006b54:	0802d5f0 	.word	0x0802d5f0

08006b58 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006b58:	4770      	bx	lr

08006b5a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b5a:	4770      	bx	lr

08006b5c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b5c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b5e:	68c2      	ldr	r2, [r0, #12]
 8006b60:	6844      	ldr	r4, [r0, #4]
 8006b62:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b64:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b66:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b6a:	07d2      	lsls	r2, r2, #31
 8006b6c:	bf48      	it	mi
 8006b6e:	5962      	ldrmi	r2, [r4, r5]
 8006b70:	689b      	ldr	r3, [r3, #8]
    }
 8006b72:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b74:	bf48      	it	mi
 8006b76:	58d3      	ldrmi	r3, [r2, r3]
 8006b78:	4718      	bx	r3

08006b7a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b7a:	6843      	ldr	r3, [r0, #4]
 8006b7c:	b12b      	cbz	r3, 8006b8a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b7e:	6883      	ldr	r3, [r0, #8]
 8006b80:	b92b      	cbnz	r3, 8006b8e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b82:	68c0      	ldr	r0, [r0, #12]
 8006b84:	f000 0001 	and.w	r0, r0, #1
 8006b88:	4770      	bx	lr
 8006b8a:	4618      	mov	r0, r3
 8006b8c:	4770      	bx	lr
 8006b8e:	2001      	movs	r0, #1
    }
 8006b90:	4770      	bx	lr

08006b92 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b92:	b510      	push	{r4, lr}
 8006b94:	2110      	movs	r1, #16
 8006b96:	4604      	mov	r4, r0
 8006b98:	f024 f94f 	bl	802ae3a <_ZdlPvj>
 8006b9c:	4620      	mov	r0, r4
 8006b9e:	bd10      	pop	{r4, pc}

08006ba0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006ba0:	b510      	push	{r4, lr}
 8006ba2:	4b03      	ldr	r3, [pc, #12]	; (8006bb0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006ba4:	6003      	str	r3, [r0, #0]
 8006ba6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ba8:	f00e fb90 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bac:	4620      	mov	r0, r4
 8006bae:	bd10      	pop	{r4, pc}
 8006bb0:	0802ec74 	.word	0x0802ec74

08006bb4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006bb4:	b507      	push	{r0, r1, r2, lr}
 8006bb6:	4b07      	ldr	r3, [pc, #28]	; (8006bd4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006bb8:	6003      	str	r3, [r0, #0]
 8006bba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bbc:	f00e fb86 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bc0:	9801      	ldr	r0, [sp, #4]
 8006bc2:	f241 015c 	movw	r1, #4188	; 0x105c
 8006bc6:	f024 f938 	bl	802ae3a <_ZdlPvj>
 8006bca:	9801      	ldr	r0, [sp, #4]
 8006bcc:	b003      	add	sp, #12
 8006bce:	f85d fb04 	ldr.w	pc, [sp], #4
 8006bd2:	bf00      	nop
 8006bd4:	0802ec74 	.word	0x0802ec74

08006bd8 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006bd8:	3098      	adds	r0, #152	; 0x98
 8006bda:	4288      	cmp	r0, r1
{
 8006bdc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bde:	d105      	bne.n	8006bec <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006be0:	f010 f876 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006be4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006be8:	f7fd bf56 	b.w	8004a98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006bec:	bd08      	pop	{r3, pc}
	...

08006bf0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bf4:	ed2d 8b02 	vpush	{d8}
 8006bf8:	4604      	mov	r4, r0
 8006bfa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006bfc:	46a1      	mov	r9, r4
 8006bfe:	2500      	movs	r5, #0
 8006c00:	f011 fce6 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 8006c04:	4ba5      	ldr	r3, [pc, #660]	; (8006e9c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006c06:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c08:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006c0c:	2226      	movs	r2, #38	; 0x26
 8006c0e:	4629      	mov	r1, r5
 8006c10:	4648      	mov	r0, r9
 8006c12:	f025 f92a 	bl	802be6a <memset>
 8006c16:	4648      	mov	r0, r9
 8006c18:	f7fb ff2e 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006c1c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006c20:	26ff      	movs	r6, #255	; 0xff
 8006c22:	4b9f      	ldr	r3, [pc, #636]	; (8006ea0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006c24:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c26:	2226      	movs	r2, #38	; 0x26
 8006c28:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c2c:	4629      	mov	r1, r5
 8006c2e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c32:	4640      	mov	r0, r8
 8006c34:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c36:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c3a:	f025 f916 	bl	802be6a <memset>
 8006c3e:	4640      	mov	r0, r8
 8006c40:	f7fb ff1a 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006c44:	4b97      	ldr	r3, [pc, #604]	; (8006ea4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006c46:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c48:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c4c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c50:	a90a      	add	r1, sp, #40	; 0x28
 8006c52:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c56:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006c58:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c5c:	f00d fb39 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c60:	4658      	mov	r0, fp
 8006c62:	f00d fc6d 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c66:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006c6a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006c6e:	4618      	mov	r0, r3
 8006c70:	ee08 3a90 	vmov	s17, r3
 8006c74:	f7fb ff64 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8006c78:	4638      	mov	r0, r7
 8006c7a:	f00c f81d 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8006c7e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c82:	4618      	mov	r0, r3
 8006c84:	9303      	str	r3, [sp, #12]
 8006c86:	f7fb fcfb 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c8a:	4b87      	ldr	r3, [pc, #540]	; (8006ea8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006c8c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006c90:	3324      	adds	r3, #36	; 0x24
 8006c92:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006c96:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006c9a:	4618      	mov	r0, r3
 8006c9c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006ca0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006ca4:	ee08 3a10 	vmov	s16, r3
 8006ca8:	f7fb ff4a 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8006cac:	4650      	mov	r0, sl
 8006cae:	f7fb ff47 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006cb2:	4a7e      	ldr	r2, [pc, #504]	; (8006eac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006cb4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006cb8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006cbc:	4a7c      	ldr	r2, [pc, #496]	; (8006eb0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006cbe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006cc2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006cc6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006cca:	f00e faf5 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006cce:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006cd2:	462a      	mov	r2, r5
 8006cd4:	4648      	mov	r0, r9
 8006cd6:	9300      	str	r3, [sp, #0]
 8006cd8:	4629      	mov	r1, r5
 8006cda:	23f0      	movs	r3, #240	; 0xf0
 8006cdc:	f7fb fea7 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ce0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006ce2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006ce6:	66a3      	str	r3, [r4, #104]	; 0x68
 8006ce8:	4649      	mov	r1, r9
 8006cea:	4630      	mov	r0, r6
 8006cec:	f009 ff18 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006cf0:	462a      	mov	r2, r5
 8006cf2:	4640      	mov	r0, r8
 8006cf4:	4629      	mov	r1, r5
 8006cf6:	f7fb fe8d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006cfa:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006cfc:	4640      	mov	r0, r8
 8006cfe:	a90a      	add	r1, sp, #40	; 0x28
 8006d00:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d04:	f00d fae5 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d08:	4641      	mov	r1, r8
 8006d0a:	4630      	mov	r0, r6
 8006d0c:	f009 ff08 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006d10:	4658      	mov	r0, fp
 8006d12:	f240 1201 	movw	r2, #257	; 0x101
 8006d16:	2121      	movs	r1, #33	; 0x21
 8006d18:	f7fb fe7c 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006d1c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d1e:	aa0a      	add	r2, sp, #40	; 0x28
 8006d20:	a909      	add	r1, sp, #36	; 0x24
 8006d22:	4658      	mov	r0, fp
 8006d24:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d28:	2302      	movs	r3, #2
 8006d2a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d2e:	f00d f8da 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d32:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006d34:	4658      	mov	r0, fp
 8006d36:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006d3a:	f7fb feaf 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006d3e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006d42:	330c      	adds	r3, #12
        color = col;
 8006d44:	f04f 39ff 	mov.w	r9, #4294967295
 8006d48:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006d4c:	4659      	mov	r1, fp
 8006d4e:	4630      	mov	r0, r6
        colorPressed = col;
 8006d50:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006d54:	f009 fee4 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d58:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006d5c:	223c      	movs	r2, #60	; 0x3c
 8006d5e:	ee18 0a90 	vmov	r0, s17
 8006d62:	2117      	movs	r1, #23
 8006d64:	f7fb fe56 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006d68:	ee18 1a90 	vmov	r1, s17
 8006d6c:	4640      	mov	r0, r8
        color = newColor;
 8006d6e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006d72:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d76:	f00c fa61 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d7a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d7e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006d82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d86:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006eb4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006d8a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d8e:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006d90:	ee18 0a90 	vmov	r0, s17
 8006d94:	a90a      	add	r1, sp, #40	; 0x28
 8006d96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d9a:	f00c fce9 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d9e:	ee18 1a90 	vmov	r1, s17
 8006da2:	4630      	mov	r0, r6
 8006da4:	f009 febc 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006da8:	230a      	movs	r3, #10
 8006daa:	9300      	str	r3, [sp, #0]
 8006dac:	2232      	movs	r2, #50	; 0x32
 8006dae:	23f0      	movs	r3, #240	; 0xf0
 8006db0:	4629      	mov	r1, r5
 8006db2:	4638      	mov	r0, r7
 8006db4:	f7fb fe3b 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006db8:	9b03      	ldr	r3, [sp, #12]
 8006dba:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dbe:	22a0      	movs	r2, #160	; 0xa0
 8006dc0:	4611      	mov	r1, r2
 8006dc2:	4638      	mov	r0, r7
 8006dc4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006dc8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006dcc:	f00c f88a 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dd0:	22a0      	movs	r2, #160	; 0xa0
 8006dd2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dd6:	4638      	mov	r0, r7
 8006dd8:	f00c f88f 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006ddc:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006de0:	2b20      	cmp	r3, #32
 8006de2:	d005      	beq.n	8006df0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006de4:	2320      	movs	r3, #32
 8006de6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006dea:	4638      	mov	r0, r7
 8006dec:	f00b ff84 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006df0:	4638      	mov	r0, r7
 8006df2:	2101      	movs	r1, #1
 8006df4:	f00c f88c 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006df8:	4639      	mov	r1, r7
 8006dfa:	4630      	mov	r0, r6
 8006dfc:	f009 fe90 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006e00:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006e04:	ee18 0a10 	vmov	r0, s16
 8006e08:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006e0a:	2500      	movs	r5, #0
 8006e0c:	2145      	movs	r1, #69	; 0x45
 8006e0e:	f7fb fe01 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e12:	ee18 1a10 	vmov	r1, s16
 8006e16:	4640      	mov	r0, r8
        color = newColor;
 8006e18:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006e1c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006e20:	f00c fa0c 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e24:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e28:	ee18 3a10 	vmov	r3, s16
 8006e2c:	333c      	adds	r3, #60	; 0x3c
 8006e2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e32:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006e34:	ee18 0a10 	vmov	r0, s16
 8006e38:	a90a      	add	r1, sp, #40	; 0x28
 8006e3a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e3e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e42:	f00c fc95 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e46:	ee18 1a10 	vmov	r1, s16
 8006e4a:	4630      	mov	r0, r6
 8006e4c:	f009 fe68 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e50:	220c      	movs	r2, #12
 8006e52:	4650      	mov	r0, sl
 8006e54:	2136      	movs	r1, #54	; 0x36
 8006e56:	f7fb fddd 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8006e5a:	4651      	mov	r1, sl
 8006e5c:	4640      	mov	r0, r8
        color = newColor;
 8006e5e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006e62:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006e66:	f00c f9e9 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e6a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e6e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006e72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e76:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006e78:	a90a      	add	r1, sp, #40	; 0x28
 8006e7a:	4650      	mov	r0, sl
 8006e7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e80:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e84:	f00c fc74 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e88:	4630      	mov	r0, r6
 8006e8a:	4651      	mov	r1, sl
 8006e8c:	f009 fe48 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e90:	4620      	mov	r0, r4
 8006e92:	b00d      	add	sp, #52	; 0x34
 8006e94:	ecbd 8b02 	vpop	{d8}
 8006e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e9c:	0802ec74 	.word	0x0802ec74
 8006ea0:	0802fb44 	.word	0x0802fb44
 8006ea4:	0802fd90 	.word	0x0802fd90
 8006ea8:	0802f878 	.word	0x0802f878
 8006eac:	0802ec5c 	.word	0x0802ec5c
 8006eb0:	08006bd9 	.word	0x08006bd9
 8006eb4:	0802d5f0 	.word	0x0802d5f0

08006eb8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006eb8:	4770      	bx	lr

08006eba <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006eba:	4770      	bx	lr

08006ebc <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006ebc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ebe:	68c2      	ldr	r2, [r0, #12]
 8006ec0:	6844      	ldr	r4, [r0, #4]
 8006ec2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006ec4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006ec6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006eca:	07d2      	lsls	r2, r2, #31
 8006ecc:	bf48      	it	mi
 8006ece:	5962      	ldrmi	r2, [r4, r5]
 8006ed0:	689b      	ldr	r3, [r3, #8]
    }
 8006ed2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ed4:	bf48      	it	mi
 8006ed6:	58d3      	ldrmi	r3, [r2, r3]
 8006ed8:	4718      	bx	r3

08006eda <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006eda:	6843      	ldr	r3, [r0, #4]
 8006edc:	b12b      	cbz	r3, 8006eea <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006ede:	6883      	ldr	r3, [r0, #8]
 8006ee0:	b92b      	cbnz	r3, 8006eee <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006ee2:	68c0      	ldr	r0, [r0, #12]
 8006ee4:	f000 0001 	and.w	r0, r0, #1
 8006ee8:	4770      	bx	lr
 8006eea:	4618      	mov	r0, r3
 8006eec:	4770      	bx	lr
 8006eee:	2001      	movs	r0, #1
    }
 8006ef0:	4770      	bx	lr

08006ef2 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ef2:	b510      	push	{r4, lr}
 8006ef4:	2110      	movs	r1, #16
 8006ef6:	4604      	mov	r4, r0
 8006ef8:	f023 ff9f 	bl	802ae3a <_ZdlPvj>
 8006efc:	4620      	mov	r0, r4
 8006efe:	bd10      	pop	{r4, pc}

08006f00 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006f00:	b510      	push	{r4, lr}
 8006f02:	4b03      	ldr	r3, [pc, #12]	; (8006f10 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006f04:	6003      	str	r3, [r0, #0]
 8006f06:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f08:	f00e f9e0 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f0c:	4620      	mov	r0, r4
 8006f0e:	bd10      	pop	{r4, pc}
 8006f10:	0802ecc0 	.word	0x0802ecc0

08006f14 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006f14:	b507      	push	{r0, r1, r2, lr}
 8006f16:	4b07      	ldr	r3, [pc, #28]	; (8006f34 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006f18:	6003      	str	r3, [r0, #0]
 8006f1a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f1c:	f00e f9d6 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f20:	9801      	ldr	r0, [sp, #4]
 8006f22:	f241 015c 	movw	r1, #4188	; 0x105c
 8006f26:	f023 ff88 	bl	802ae3a <_ZdlPvj>
 8006f2a:	9801      	ldr	r0, [sp, #4]
 8006f2c:	b003      	add	sp, #12
 8006f2e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f32:	bf00      	nop
 8006f34:	0802ecc0 	.word	0x0802ecc0

08006f38 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006f38:	3098      	adds	r0, #152	; 0x98
 8006f3a:	4288      	cmp	r0, r1
{
 8006f3c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f3e:	d105      	bne.n	8006f4c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f40:	f00f fec6 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006f44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006f48:	f7fd bda6 	b.w	8004a98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006f4c:	bd08      	pop	{r3, pc}
	...

08006f50 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f54:	ed2d 8b02 	vpush	{d8}
 8006f58:	4604      	mov	r4, r0
 8006f5a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006f5c:	46a1      	mov	r9, r4
 8006f5e:	2500      	movs	r5, #0
 8006f60:	f011 fb36 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 8006f64:	4ba5      	ldr	r3, [pc, #660]	; (80071fc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006f66:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f68:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f6c:	2226      	movs	r2, #38	; 0x26
 8006f6e:	4629      	mov	r1, r5
 8006f70:	4648      	mov	r0, r9
 8006f72:	f024 ff7a 	bl	802be6a <memset>
 8006f76:	4648      	mov	r0, r9
 8006f78:	f7fb fd7e 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006f7c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006f80:	26ff      	movs	r6, #255	; 0xff
 8006f82:	4b9f      	ldr	r3, [pc, #636]	; (8007200 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006f84:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f86:	2226      	movs	r2, #38	; 0x26
 8006f88:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f8c:	4629      	mov	r1, r5
 8006f8e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f92:	4640      	mov	r0, r8
 8006f94:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f96:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f9a:	f024 ff66 	bl	802be6a <memset>
 8006f9e:	4640      	mov	r0, r8
 8006fa0:	f7fb fd6a 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8006fa4:	4b97      	ldr	r3, [pc, #604]	; (8007204 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006fa6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006fa8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006fac:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006fb0:	a90a      	add	r1, sp, #40	; 0x28
 8006fb2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006fb6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006fb8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006fbc:	f00d f989 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fc0:	4658      	mov	r0, fp
 8006fc2:	f00d fabd 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006fc6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006fca:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006fce:	4618      	mov	r0, r3
 8006fd0:	ee08 3a90 	vmov	s17, r3
 8006fd4:	f7fb fdb4 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8006fd8:	4638      	mov	r0, r7
 8006fda:	f00b fe6d 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8006fde:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fe2:	4618      	mov	r0, r3
 8006fe4:	9303      	str	r3, [sp, #12]
 8006fe6:	f7fb fb4b 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006fea:	4b87      	ldr	r3, [pc, #540]	; (8007208 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006fec:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006ff0:	3324      	adds	r3, #36	; 0x24
 8006ff2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006ff6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006ffa:	4618      	mov	r0, r3
 8006ffc:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007000:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007004:	ee08 3a10 	vmov	s16, r3
 8007008:	f7fb fd9a 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 800700c:	4650      	mov	r0, sl
 800700e:	f7fb fd97 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007012:	4a7e      	ldr	r2, [pc, #504]	; (800720c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8007014:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007018:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800701c:	4a7c      	ldr	r2, [pc, #496]	; (8007210 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800701e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007022:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007026:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800702a:	f00e f945 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800702e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007032:	462a      	mov	r2, r5
 8007034:	4648      	mov	r0, r9
 8007036:	9300      	str	r3, [sp, #0]
 8007038:	4629      	mov	r1, r5
 800703a:	23f0      	movs	r3, #240	; 0xf0
 800703c:	f7fb fcf7 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007040:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007042:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007046:	66a3      	str	r3, [r4, #104]	; 0x68
 8007048:	4649      	mov	r1, r9
 800704a:	4630      	mov	r0, r6
 800704c:	f009 fd68 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007050:	462a      	mov	r2, r5
 8007052:	4640      	mov	r0, r8
 8007054:	4629      	mov	r1, r5
 8007056:	f7fb fcdd 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 800705a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800705c:	4640      	mov	r0, r8
 800705e:	a90a      	add	r1, sp, #40	; 0x28
 8007060:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007064:	f00d f935 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007068:	4641      	mov	r1, r8
 800706a:	4630      	mov	r0, r6
 800706c:	f009 fd58 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007070:	4658      	mov	r0, fp
 8007072:	f240 1201 	movw	r2, #257	; 0x101
 8007076:	2121      	movs	r1, #33	; 0x21
 8007078:	f7fb fccc 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 800707c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800707e:	aa0a      	add	r2, sp, #40	; 0x28
 8007080:	a909      	add	r1, sp, #36	; 0x24
 8007082:	4658      	mov	r0, fp
 8007084:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007088:	2302      	movs	r3, #2
 800708a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800708e:	f00c ff2a 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007092:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8007094:	4658      	mov	r0, fp
 8007096:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800709a:	f7fb fcff 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800709e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80070a2:	330c      	adds	r3, #12
        color = col;
 80070a4:	f04f 39ff 	mov.w	r9, #4294967295
 80070a8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80070ac:	4659      	mov	r1, fp
 80070ae:	4630      	mov	r0, r6
        colorPressed = col;
 80070b0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80070b4:	f009 fd34 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80070b8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80070bc:	223c      	movs	r2, #60	; 0x3c
 80070be:	ee18 0a90 	vmov	r0, s17
 80070c2:	2117      	movs	r1, #23
 80070c4:	f7fb fca6 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80070c8:	ee18 1a90 	vmov	r1, s17
 80070cc:	4640      	mov	r0, r8
        color = newColor;
 80070ce:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80070d2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80070d6:	f00c f8b1 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070da:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070de:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80070e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80070e6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007214 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80070ea:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070ee:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80070f0:	ee18 0a90 	vmov	r0, s17
 80070f4:	a90a      	add	r1, sp, #40	; 0x28
 80070f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070fa:	f00c fb39 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070fe:	ee18 1a90 	vmov	r1, s17
 8007102:	4630      	mov	r0, r6
 8007104:	f009 fd0c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007108:	230a      	movs	r3, #10
 800710a:	9300      	str	r3, [sp, #0]
 800710c:	2232      	movs	r2, #50	; 0x32
 800710e:	23f0      	movs	r3, #240	; 0xf0
 8007110:	4629      	mov	r1, r5
 8007112:	4638      	mov	r0, r7
 8007114:	f7fb fc8b 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007118:	9b03      	ldr	r3, [sp, #12]
 800711a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800711e:	22a0      	movs	r2, #160	; 0xa0
 8007120:	4611      	mov	r1, r2
 8007122:	4638      	mov	r0, r7
 8007124:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007128:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800712c:	f00b feda 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007130:	22a0      	movs	r2, #160	; 0xa0
 8007132:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007136:	4638      	mov	r0, r7
 8007138:	f00b fedf 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800713c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007140:	2b20      	cmp	r3, #32
 8007142:	d005      	beq.n	8007150 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007144:	2320      	movs	r3, #32
 8007146:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800714a:	4638      	mov	r0, r7
 800714c:	f00b fdd4 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007150:	4638      	mov	r0, r7
 8007152:	2101      	movs	r1, #1
 8007154:	f00b fedc 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007158:	4639      	mov	r1, r7
 800715a:	4630      	mov	r0, r6
 800715c:	f009 fce0 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007160:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007164:	ee18 0a10 	vmov	r0, s16
 8007168:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800716a:	2500      	movs	r5, #0
 800716c:	2145      	movs	r1, #69	; 0x45
 800716e:	f7fb fc51 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007172:	ee18 1a10 	vmov	r1, s16
 8007176:	4640      	mov	r0, r8
        color = newColor;
 8007178:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800717c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007180:	f00c f85c 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007184:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007188:	ee18 3a10 	vmov	r3, s16
 800718c:	333c      	adds	r3, #60	; 0x3c
 800718e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007192:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007194:	ee18 0a10 	vmov	r0, s16
 8007198:	a90a      	add	r1, sp, #40	; 0x28
 800719a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800719e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071a2:	f00c fae5 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071a6:	ee18 1a10 	vmov	r1, s16
 80071aa:	4630      	mov	r0, r6
 80071ac:	f009 fcb8 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071b0:	220c      	movs	r2, #12
 80071b2:	4650      	mov	r0, sl
 80071b4:	2136      	movs	r1, #54	; 0x36
 80071b6:	f7fb fc2d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80071ba:	4651      	mov	r1, sl
 80071bc:	4640      	mov	r0, r8
        color = newColor;
 80071be:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80071c2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80071c6:	f00c f839 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071ca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071ce:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80071d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071d6:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80071d8:	a90a      	add	r1, sp, #40	; 0x28
 80071da:	4650      	mov	r0, sl
 80071dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071e0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071e4:	f00c fac4 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071e8:	4630      	mov	r0, r6
 80071ea:	4651      	mov	r1, sl
 80071ec:	f009 fc98 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071f0:	4620      	mov	r0, r4
 80071f2:	b00d      	add	sp, #52	; 0x34
 80071f4:	ecbd 8b02 	vpop	{d8}
 80071f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071fc:	0802ecc0 	.word	0x0802ecc0
 8007200:	0802fb44 	.word	0x0802fb44
 8007204:	0802fd90 	.word	0x0802fd90
 8007208:	0802f878 	.word	0x0802f878
 800720c:	0802eca8 	.word	0x0802eca8
 8007210:	08006f39 	.word	0x08006f39
 8007214:	0802d5f0 	.word	0x0802d5f0

08007218 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8007218:	4770      	bx	lr

0800721a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800721a:	4770      	bx	lr

0800721c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800721c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800721e:	68c2      	ldr	r2, [r0, #12]
 8007220:	6844      	ldr	r4, [r0, #4]
 8007222:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007224:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007226:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800722a:	07d2      	lsls	r2, r2, #31
 800722c:	bf48      	it	mi
 800722e:	5962      	ldrmi	r2, [r4, r5]
 8007230:	689b      	ldr	r3, [r3, #8]
    }
 8007232:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007234:	bf48      	it	mi
 8007236:	58d3      	ldrmi	r3, [r2, r3]
 8007238:	4718      	bx	r3

0800723a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800723a:	6843      	ldr	r3, [r0, #4]
 800723c:	b12b      	cbz	r3, 800724a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800723e:	6883      	ldr	r3, [r0, #8]
 8007240:	b92b      	cbnz	r3, 800724e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007242:	68c0      	ldr	r0, [r0, #12]
 8007244:	f000 0001 	and.w	r0, r0, #1
 8007248:	4770      	bx	lr
 800724a:	4618      	mov	r0, r3
 800724c:	4770      	bx	lr
 800724e:	2001      	movs	r0, #1
    }
 8007250:	4770      	bx	lr

08007252 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007252:	b510      	push	{r4, lr}
 8007254:	2110      	movs	r1, #16
 8007256:	4604      	mov	r4, r0
 8007258:	f023 fdef 	bl	802ae3a <_ZdlPvj>
 800725c:	4620      	mov	r0, r4
 800725e:	bd10      	pop	{r4, pc}

08007260 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007260:	b510      	push	{r4, lr}
 8007262:	4b03      	ldr	r3, [pc, #12]	; (8007270 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007264:	6003      	str	r3, [r0, #0]
 8007266:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007268:	f00e f830 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800726c:	4620      	mov	r0, r4
 800726e:	bd10      	pop	{r4, pc}
 8007270:	0802ed0c 	.word	0x0802ed0c

08007274 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007274:	b507      	push	{r0, r1, r2, lr}
 8007276:	4b07      	ldr	r3, [pc, #28]	; (8007294 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007278:	6003      	str	r3, [r0, #0]
 800727a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800727c:	f00e f826 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007280:	9801      	ldr	r0, [sp, #4]
 8007282:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007286:	f023 fdd8 	bl	802ae3a <_ZdlPvj>
 800728a:	9801      	ldr	r0, [sp, #4]
 800728c:	b003      	add	sp, #12
 800728e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007292:	bf00      	nop
 8007294:	0802ed0c 	.word	0x0802ed0c

08007298 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007298:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800729a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800729e:	4299      	cmp	r1, r3
{
 80072a0:	4604      	mov	r4, r0
 80072a2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80072a4:	d103      	bne.n	80072ae <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80072a6:	f00f fd13 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80072aa:	f7fd fba5 	bl	80049f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80072ae:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80072b2:	429d      	cmp	r5, r3
 80072b4:	d103      	bne.n	80072be <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80072b6:	f00f fd0b 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80072ba:	f7fd fbbd 	bl	8004a38 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80072be:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80072c2:	42a5      	cmp	r5, r4
 80072c4:	d105      	bne.n	80072d2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80072c6:	f00f fd03 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80072ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80072ce:	f7fd bbc3 	b.w	8004a58 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80072d2:	bd38      	pop	{r3, r4, r5, pc}

080072d4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80072d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072d8:	ed2d 8b06 	vpush	{d8-d10}
 80072dc:	4604      	mov	r4, r0
 80072de:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80072e0:	46a3      	mov	fp, r4
 80072e2:	2500      	movs	r5, #0
 80072e4:	f011 f974 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 80072e8:	4b66      	ldr	r3, [pc, #408]	; (8007484 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80072ea:	63e5      	str	r5, [r4, #60]	; 0x3c
 80072ec:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80072f0:	2226      	movs	r2, #38	; 0x26
 80072f2:	4629      	mov	r1, r5
 80072f4:	4658      	mov	r0, fp
 80072f6:	f024 fdb8 	bl	802be6a <memset>
 80072fa:	4658      	mov	r0, fp
 80072fc:	f7fb fbbc 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007300:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007304:	26ff      	movs	r6, #255	; 0xff
 8007306:	4b60      	ldr	r3, [pc, #384]	; (8007488 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8007308:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800730a:	2226      	movs	r2, #38	; 0x26
 800730c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007310:	4629      	mov	r1, r5
 8007312:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007316:	4650      	mov	r0, sl
 8007318:	66a5      	str	r5, [r4, #104]	; 0x68
 800731a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800731e:	f024 fda4 	bl	802be6a <memset>
 8007322:	4650      	mov	r0, sl
 8007324:	f7fb fba8 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007328:	4b58      	ldr	r3, [pc, #352]	; (800748c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800732a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800732c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007330:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007334:	a90a      	add	r1, sp, #40	; 0x28
 8007336:	4650      	mov	r0, sl
 8007338:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800733c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007340:	f00c ffc7 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007344:	4648      	mov	r0, r9
 8007346:	f7fb fbfb 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800734a:	4b51      	ldr	r3, [pc, #324]	; (8007490 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 800734c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007350:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007354:	4618      	mov	r0, r3
 8007356:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800735a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800735e:	ee08 3a90 	vmov	s17, r3
 8007362:	f7fb fbed 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007366:	4638      	mov	r0, r7
 8007368:	f00b fca6 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 800736c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007370:	4618      	mov	r0, r3
 8007372:	9303      	str	r3, [sp, #12]
 8007374:	f7fb f984 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007378:	4b46      	ldr	r3, [pc, #280]	; (8007494 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 800737a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800737e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007382:	3324      	adds	r3, #36	; 0x24
 8007384:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007388:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 800738c:	4640      	mov	r0, r8
 800738e:	f7fb fbd7 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007392:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007396:	4618      	mov	r0, r3
 8007398:	ee08 3a10 	vmov	s16, r3
 800739c:	f7fb fbd0 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80073a0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80073a4:	4618      	mov	r0, r3
 80073a6:	ee09 3a10 	vmov	s18, r3
 80073aa:	f00d f8c9 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80073ae:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80073b2:	4618      	mov	r0, r3
 80073b4:	ee09 3a90 	vmov	s19, r3
 80073b8:	f00d f8c2 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80073bc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80073c0:	4618      	mov	r0, r3
 80073c2:	ee0a 3a10 	vmov	s20, r3
 80073c6:	f00d f8bb 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80073ca:	4a33      	ldr	r2, [pc, #204]	; (8007498 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80073cc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073d0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80073d4:	4a31      	ldr	r2, [pc, #196]	; (800749c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073d6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073da:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80073de:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80073e2:	f00d ff69 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073e6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073ea:	462a      	mov	r2, r5
 80073ec:	4658      	mov	r0, fp
 80073ee:	9300      	str	r3, [sp, #0]
 80073f0:	4629      	mov	r1, r5
 80073f2:	23f0      	movs	r3, #240	; 0xf0
 80073f4:	f7fb fb1b 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 80073f8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80073fa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80073fe:	66a3      	str	r3, [r4, #104]	; 0x68
 8007400:	4659      	mov	r1, fp
 8007402:	4630      	mov	r0, r6
 8007404:	f009 fb8c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007408:	462a      	mov	r2, r5
 800740a:	4650      	mov	r0, sl
 800740c:	4629      	mov	r1, r5
 800740e:	f7fb fb01 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007412:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007414:	4650      	mov	r0, sl
 8007416:	a90a      	add	r1, sp, #40	; 0x28
 8007418:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800741c:	f00c ff59 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007420:	4651      	mov	r1, sl
 8007422:	4630      	mov	r0, r6
 8007424:	f009 fb7c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007428:	f44f 729a 	mov.w	r2, #308	; 0x134
 800742c:	2156      	movs	r1, #86	; 0x56
 800742e:	4648      	mov	r0, r9
 8007430:	f7fb faf0 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007434:	f04f 33ff 	mov.w	r3, #4294967295
 8007438:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800743c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007440:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007444:	f10d 0b10 	add.w	fp, sp, #16
 8007448:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800744c:	4649      	mov	r1, r9
 800744e:	4658      	mov	r0, fp
 8007450:	4798      	blx	r3
 8007452:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007456:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800745a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800745e:	4b10      	ldr	r3, [pc, #64]	; (80074a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007460:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007462:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007466:	b92b      	cbnz	r3, 8007474 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007468:	4b0e      	ldr	r3, [pc, #56]	; (80074a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800746a:	4a0f      	ldr	r2, [pc, #60]	; (80074a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800746c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800746e:	480f      	ldr	r0, [pc, #60]	; (80074ac <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007470:	f024 faf6 	bl	802ba60 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007474:	4b0e      	ldr	r3, [pc, #56]	; (80074b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007476:	881b      	ldrh	r3, [r3, #0]
 8007478:	2b26      	cmp	r3, #38	; 0x26
 800747a:	d81d      	bhi.n	80074b8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 800747c:	4b0d      	ldr	r3, [pc, #52]	; (80074b4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800747e:	4a0a      	ldr	r2, [pc, #40]	; (80074a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007480:	2161      	movs	r1, #97	; 0x61
 8007482:	e7f4      	b.n	800746e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007484:	0802ed0c 	.word	0x0802ed0c
 8007488:	0802fb44 	.word	0x0802fb44
 800748c:	0802fd90 	.word	0x0802fd90
 8007490:	0802d690 	.word	0x0802d690
 8007494:	0802f878 	.word	0x0802f878
 8007498:	0802ecf4 	.word	0x0802ecf4
 800749c:	08007299 	.word	0x08007299
 80074a0:	2001388c 	.word	0x2001388c
 80074a4:	0802d440 	.word	0x0802d440
 80074a8:	0802d545 	.word	0x0802d545
 80074ac:	0802d4bd 	.word	0x0802d4bd
 80074b0:	20013890 	.word	0x20013890
 80074b4:	0802d504 	.word	0x0802d504
        return texts->getText(typedTextId);
 80074b8:	4b95      	ldr	r3, [pc, #596]	; (8007710 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80074ba:	2126      	movs	r1, #38	; 0x26
 80074bc:	6818      	ldr	r0, [r3, #0]
 80074be:	f001 faad 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80074c2:	4a94      	ldr	r2, [pc, #592]	; (8007714 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80074c4:	4603      	mov	r3, r0
 80074c6:	2104      	movs	r1, #4
 80074c8:	4650      	mov	r0, sl
 80074ca:	f012 fdaf 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80074ce:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80074d2:	4648      	mov	r0, r9
 80074d4:	f00c f92c 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074d8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8007718 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80074dc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80074e0:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80074e2:	a90a      	add	r1, sp, #40	; 0x28
 80074e4:	4648      	mov	r0, r9
 80074e6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074ea:	f00c f941 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074ee:	4649      	mov	r1, r9
 80074f0:	4630      	mov	r0, r6
 80074f2:	f009 fb15 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80074f6:	223c      	movs	r2, #60	; 0x3c
 80074f8:	ee18 0a90 	vmov	r0, s17
 80074fc:	2129      	movs	r1, #41	; 0x29
 80074fe:	f7fb fa89 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007502:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007506:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800750a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800750e:	4658      	mov	r0, fp
        linespace = space;
 8007510:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007514:	f00b fe92 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007518:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800751c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007520:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007524:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007526:	ee18 0a90 	vmov	r0, s17
 800752a:	a90a      	add	r1, sp, #40	; 0x28
 800752c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007530:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007534:	f00c f91c 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007538:	ee18 1a90 	vmov	r1, s17
 800753c:	4630      	mov	r0, r6
 800753e:	f009 faef 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007542:	230a      	movs	r3, #10
 8007544:	9300      	str	r3, [sp, #0]
 8007546:	2232      	movs	r2, #50	; 0x32
 8007548:	23f0      	movs	r3, #240	; 0xf0
 800754a:	4629      	mov	r1, r5
 800754c:	4638      	mov	r0, r7
 800754e:	f7fb fa6e 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007552:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007556:	22a0      	movs	r2, #160	; 0xa0
 8007558:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800755c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007560:	9b03      	ldr	r3, [sp, #12]
 8007562:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007566:	4611      	mov	r1, r2
 8007568:	4638      	mov	r0, r7
 800756a:	f00b fcbb 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800756e:	22a0      	movs	r2, #160	; 0xa0
 8007570:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007574:	4638      	mov	r0, r7
 8007576:	f00b fcc0 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800757a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800757e:	2b20      	cmp	r3, #32
 8007580:	d005      	beq.n	800758e <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8007582:	2320      	movs	r3, #32
 8007584:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007588:	4638      	mov	r0, r7
 800758a:	f00b fbb5 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800758e:	4638      	mov	r0, r7
 8007590:	2101      	movs	r1, #1
 8007592:	f00b fcbd 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007596:	4639      	mov	r1, r7
 8007598:	4630      	mov	r0, r6
 800759a:	f009 fac1 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800759e:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80075a2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80075a4:	2223      	movs	r2, #35	; 0x23
 80075a6:	4640      	mov	r0, r8
        linespace = space;
 80075a8:	f04f 0a00 	mov.w	sl, #0
 80075ac:	2145      	movs	r1, #69	; 0x45
 80075ae:	f7fb fa31 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80075b2:	4641      	mov	r1, r8
 80075b4:	4638      	mov	r0, r7
        color = newColor;
 80075b6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80075ba:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80075be:	f00b fe3d 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075c2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80075c6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075ce:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007718 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80075d2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075d6:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 80075d8:	a90a      	add	r1, sp, #40	; 0x28
 80075da:	4640      	mov	r0, r8
 80075dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075e0:	f00c f8c6 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075e4:	4641      	mov	r1, r8
 80075e6:	4630      	mov	r0, r6
 80075e8:	f009 fa9a 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075ec:	ee18 0a10 	vmov	r0, s16
 80075f0:	220c      	movs	r2, #12
 80075f2:	2136      	movs	r1, #54	; 0x36
 80075f4:	f7fb fa0e 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80075f8:	ee18 1a10 	vmov	r1, s16
 80075fc:	4638      	mov	r0, r7
        color = newColor;
 80075fe:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007602:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007606:	f00b fe19 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800760a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800760e:	ee18 3a10 	vmov	r3, s16
 8007612:	333c      	adds	r3, #60	; 0x3c
 8007614:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007618:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 800761a:	ee18 0a10 	vmov	r0, s16
 800761e:	a90a      	add	r1, sp, #40	; 0x28
 8007620:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007624:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007628:	f00c f8a2 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800762c:	ee18 1a10 	vmov	r1, s16
 8007630:	4630      	mov	r0, r6
 8007632:	f009 fa75 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007636:	ee19 0a10 	vmov	r0, s18
 800763a:	22f0      	movs	r2, #240	; 0xf0
 800763c:	2121      	movs	r1, #33	; 0x21
 800763e:	f7fb f9e9 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007642:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007646:	aa0a      	add	r2, sp, #40	; 0x28
 8007648:	f04f 0802 	mov.w	r8, #2
 800764c:	a909      	add	r1, sp, #36	; 0x24
 800764e:	ee19 0a10 	vmov	r0, s18
 8007652:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007656:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800765a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800765e:	f00c fc42 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007662:	2347      	movs	r3, #71	; 0x47
 8007664:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007668:	3710      	adds	r7, #16
        updateTextPosition();
 800766a:	ee19 0a10 	vmov	r0, s18
 800766e:	f7fb fa15 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007672:	ee19 1a10 	vmov	r1, s18
 8007676:	4630      	mov	r0, r6
        colorPressed = col;
 8007678:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 800767c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007680:	f009 fa4e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007684:	ee19 0a90 	vmov	r0, s19
 8007688:	22aa      	movs	r2, #170	; 0xaa
 800768a:	2121      	movs	r1, #33	; 0x21
 800768c:	f7fb f9c2 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007690:	aa0a      	add	r2, sp, #40	; 0x28
 8007692:	a909      	add	r1, sp, #36	; 0x24
 8007694:	ee19 0a90 	vmov	r0, s19
 8007698:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800769c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076a0:	f00c fc21 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076a4:	2346      	movs	r3, #70	; 0x46
 80076a6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80076aa:	ee19 0a90 	vmov	r0, s19
 80076ae:	f7fb f9f5 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076b2:	ee19 1a90 	vmov	r1, s19
 80076b6:	4630      	mov	r0, r6
        colorPressed = col;
 80076b8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80076bc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80076c0:	f009 fa2e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80076c4:	ee1a 0a10 	vmov	r0, s20
 80076c8:	2264      	movs	r2, #100	; 0x64
 80076ca:	2121      	movs	r1, #33	; 0x21
 80076cc:	f7fb f9a2 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076d0:	aa0a      	add	r2, sp, #40	; 0x28
 80076d2:	a909      	add	r1, sp, #36	; 0x24
 80076d4:	ee1a 0a10 	vmov	r0, s20
 80076d8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80076dc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076e0:	f00c fc01 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076e4:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80076e6:	ee1a 0a10 	vmov	r0, s20
 80076ea:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80076ee:	f7fb f9d5 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076f2:	4630      	mov	r0, r6
        colorPressed = col;
 80076f4:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80076f8:	ee1a 1a10 	vmov	r1, s20
 80076fc:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007700:	f009 fa0e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007704:	4620      	mov	r0, r4
 8007706:	b00d      	add	sp, #52	; 0x34
 8007708:	ecbd 8b06 	vpop	{d8-d10}
 800770c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007710:	20013898 	.word	0x20013898
 8007714:	0802d57d 	.word	0x0802d57d
 8007718:	0802d5f0 	.word	0x0802d5f0

0800771c <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 800771c:	4770      	bx	lr

0800771e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 800771e:	4770      	bx	lr

08007720 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007720:	4770      	bx	lr

08007722 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007722:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007724:	68c2      	ldr	r2, [r0, #12]
 8007726:	6844      	ldr	r4, [r0, #4]
 8007728:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800772a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800772c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007730:	07d2      	lsls	r2, r2, #31
 8007732:	bf48      	it	mi
 8007734:	5962      	ldrmi	r2, [r4, r5]
 8007736:	689b      	ldr	r3, [r3, #8]
    }
 8007738:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800773a:	bf48      	it	mi
 800773c:	58d3      	ldrmi	r3, [r2, r3]
 800773e:	4718      	bx	r3

08007740 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007740:	6843      	ldr	r3, [r0, #4]
 8007742:	b12b      	cbz	r3, 8007750 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007744:	6883      	ldr	r3, [r0, #8]
 8007746:	b92b      	cbnz	r3, 8007754 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007748:	68c0      	ldr	r0, [r0, #12]
 800774a:	f000 0001 	and.w	r0, r0, #1
 800774e:	4770      	bx	lr
 8007750:	4618      	mov	r0, r3
 8007752:	4770      	bx	lr
 8007754:	2001      	movs	r0, #1
    }
 8007756:	4770      	bx	lr

08007758 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007758:	b510      	push	{r4, lr}
 800775a:	2110      	movs	r1, #16
 800775c:	4604      	mov	r4, r0
 800775e:	f023 fb6c 	bl	802ae3a <_ZdlPvj>
 8007762:	4620      	mov	r0, r4
 8007764:	bd10      	pop	{r4, pc}
	...

08007768 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007768:	b510      	push	{r4, lr}
 800776a:	4b03      	ldr	r3, [pc, #12]	; (8007778 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 800776c:	6003      	str	r3, [r0, #0]
 800776e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007770:	f00d fdac 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007774:	4620      	mov	r0, r4
 8007776:	bd10      	pop	{r4, pc}
 8007778:	0802ed58 	.word	0x0802ed58

0800777c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800777c:	b507      	push	{r0, r1, r2, lr}
 800777e:	4b07      	ldr	r3, [pc, #28]	; (800779c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007780:	6003      	str	r3, [r0, #0]
 8007782:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007784:	f00d fda2 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007788:	9801      	ldr	r0, [sp, #4]
 800778a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800778e:	f023 fb54 	bl	802ae3a <_ZdlPvj>
 8007792:	9801      	ldr	r0, [sp, #4]
 8007794:	b003      	add	sp, #12
 8007796:	f85d fb04 	ldr.w	pc, [sp], #4
 800779a:	bf00      	nop
 800779c:	0802ed58 	.word	0x0802ed58

080077a0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 80077a0:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 80077a2:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80077a6:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 80077aa:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80077ac:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80077ae:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80077b2:	d105      	bne.n	80077c0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 80077b4:	6803      	ldr	r3, [r0, #0]
 80077b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077b8:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80077ba:	2300      	movs	r3, #0
 80077bc:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 80077c0:	bd10      	pop	{r4, pc}

080077c2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80077c2:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 80077c6:	4288      	cmp	r0, r1
{
 80077c8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80077ca:	d105      	bne.n	80077d8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077cc:	f00f fa80 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
}
 80077d0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80077d4:	f7fd b920 	b.w	8004a18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80077d8:	bd08      	pop	{r3, pc}
	...

080077dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80077dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077e0:	ed2d 8b0a 	vpush	{d8-d12}
 80077e4:	4604      	mov	r4, r0
 80077e6:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80077e8:	46a3      	mov	fp, r4
 80077ea:	2500      	movs	r5, #0
 80077ec:	f010 fef0 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 80077f0:	4baa      	ldr	r3, [pc, #680]	; (8007a9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 80077f2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077f4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80077f8:	2226      	movs	r2, #38	; 0x26
 80077fa:	4629      	mov	r1, r5
 80077fc:	4658      	mov	r0, fp
 80077fe:	f024 fb34 	bl	802be6a <memset>
 8007802:	4658      	mov	r0, fp
 8007804:	f7fb f938 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007808:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 800780c:	27ff      	movs	r7, #255	; 0xff
 800780e:	4ba4      	ldr	r3, [pc, #656]	; (8007aa0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007810:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007812:	2226      	movs	r2, #38	; 0x26
 8007814:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007818:	4629      	mov	r1, r5
 800781a:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800781e:	4630      	mov	r0, r6
 8007820:	66a5      	str	r5, [r4, #104]	; 0x68
 8007822:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007826:	f024 fb20 	bl	802be6a <memset>
 800782a:	4630      	mov	r0, r6
 800782c:	f7fb f924 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007830:	4b9c      	ldr	r3, [pc, #624]	; (8007aa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007832:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007834:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007838:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800783c:	a90a      	add	r1, sp, #40	; 0x28
 800783e:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8007840:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007844:	f00c fd45 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007848:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800784c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8007850:	4618      	mov	r0, r3
 8007852:	ee09 3a10 	vmov	s18, r3
 8007856:	f504 7920 	add.w	r9, r4, #640	; 0x280
 800785a:	f7fb f971 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 800785e:	4640      	mov	r0, r8
 8007860:	f00c f9fa 	bl	8013c58 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007864:	4648      	mov	r0, r9
 8007866:	f7fb f96b 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800786a:	4f8f      	ldr	r7, [pc, #572]	; (8007aa8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 800786c:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 8007870:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8007874:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007876:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800787a:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 800787e:	f7fb f95f 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007882:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007886:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 800788a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800788c:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007890:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007894:	f7fb f954 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007898:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 800789c:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 80078a0:	4618      	mov	r0, r3
 80078a2:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80078a6:	ee0a 3a90 	vmov	s21, r3
 80078aa:	f7fb f949 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80078ae:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80078b2:	4618      	mov	r0, r3
 80078b4:	ee0b 3a10 	vmov	s22, r3
 80078b8:	f7fb f942 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80078bc:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80078c0:	4618      	mov	r0, r3
 80078c2:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80078c6:	ee0b 3a90 	vmov	s23, r3
 80078ca:	f7fb f939 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80078ce:	4650      	mov	r0, sl
 80078d0:	f00b f9f2 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 80078d4:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80078d8:	4618      	mov	r0, r3
 80078da:	9302      	str	r3, [sp, #8]
 80078dc:	f7fa fed0 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80078e0:	4b72      	ldr	r3, [pc, #456]	; (8007aac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80078e2:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80078e6:	3324      	adds	r3, #36	; 0x24
 80078e8:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80078ec:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80078f0:	4618      	mov	r0, r3
 80078f2:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80078f6:	ee08 3a10 	vmov	s16, r3
 80078fa:	f7fb f921 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80078fe:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007902:	4618      	mov	r0, r3
 8007904:	ee08 3a90 	vmov	s17, r3
 8007908:	f7fb f91a 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 800790c:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007910:	4618      	mov	r0, r3
 8007912:	ee0c 3a10 	vmov	s24, r3
 8007916:	f00c fe13 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800791a:	4a65      	ldr	r2, [pc, #404]	; (8007ab0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 800791c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007920:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007924:	4a63      	ldr	r2, [pc, #396]	; (8007ab4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007926:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800792a:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800792e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007932:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007936:	f00d fcbf 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800793a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800793e:	462a      	mov	r2, r5
 8007940:	4658      	mov	r0, fp
 8007942:	9300      	str	r3, [sp, #0]
 8007944:	4629      	mov	r1, r5
 8007946:	23f0      	movs	r3, #240	; 0xf0
 8007948:	f7fb f871 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 800794c:	1d27      	adds	r7, r4, #4
        color = newColor;
 800794e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007952:	66a3      	str	r3, [r4, #104]	; 0x68
 8007954:	4659      	mov	r1, fp
 8007956:	4638      	mov	r0, r7
 8007958:	f009 f8e2 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800795c:	462a      	mov	r2, r5
 800795e:	4630      	mov	r0, r6
 8007960:	4629      	mov	r1, r5
 8007962:	f7fb f857 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007966:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800796a:	4630      	mov	r0, r6
 800796c:	a90a      	add	r1, sp, #40	; 0x28
 800796e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007972:	f00c fcae 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007976:	4631      	mov	r1, r6
 8007978:	4638      	mov	r0, r7
 800797a:	f009 f8d1 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800797e:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 8007980:	223c      	movs	r2, #60	; 0x3c
 8007982:	ee19 0a10 	vmov	r0, s18
 8007986:	211f      	movs	r1, #31
        color = newColor;
 8007988:	f04f 3bff 	mov.w	fp, #4294967295
 800798c:	f7fb f842 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007990:	ee19 1a10 	vmov	r1, s18
 8007994:	4630      	mov	r0, r6
        color = newColor;
 8007996:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 800799a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800799e:	f00b fc4d 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079a2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80079a6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80079aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80079ae:	4b42      	ldr	r3, [pc, #264]	; (8007ab8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80079b0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80079b2:	ee19 0a10 	vmov	r0, s18
 80079b6:	f04f 0335 	mov.w	r3, #53	; 0x35
 80079ba:	a90a      	add	r1, sp, #40	; 0x28
 80079bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079c0:	f00b fed6 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079c4:	ee19 1a10 	vmov	r1, s18
 80079c8:	4638      	mov	r0, r7
 80079ca:	f009 f8a9 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80079ce:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80079d0:	4640      	mov	r0, r8
 80079d2:	a90a      	add	r1, sp, #40	; 0x28
 80079d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079d8:	f009 f834 	bl	8010a44 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80079dc:	236a      	movs	r3, #106	; 0x6a
 80079de:	4640      	mov	r0, r8
 80079e0:	9300      	str	r3, [sp, #0]
 80079e2:	225e      	movs	r2, #94	; 0x5e
 80079e4:	23b8      	movs	r3, #184	; 0xb8
 80079e6:	211c      	movs	r1, #28
 80079e8:	f7fb f821 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80079ec:	225c      	movs	r2, #92	; 0x5c
 80079ee:	4611      	mov	r1, r2
 80079f0:	4640      	mov	r0, r8
 80079f2:	f00c f9dc 	bl	8013dae <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80079f6:	4640      	mov	r0, r8
 80079f8:	225a      	movs	r2, #90	; 0x5a
 80079fa:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079fe:	f00c fa5b 	bl	8013eb8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007a02:	462b      	mov	r3, r5
 8007a04:	225a      	movs	r2, #90	; 0x5a
 8007a06:	4640      	mov	r0, r8
 8007a08:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007a0c:	9500      	str	r5, [sp, #0]
 8007a0e:	f008 fec6 	bl	801079e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007a12:	4640      	mov	r0, r8
 8007a14:	4629      	mov	r1, r5
 8007a16:	f00c f9f9 	bl	8013e0c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007a1a:	2335      	movs	r3, #53	; 0x35
 8007a1c:	2208      	movs	r2, #8
 8007a1e:	4640      	mov	r0, r8
 8007a20:	2105      	movs	r1, #5
 8007a22:	f00c f9af 	bl	8013d84 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a26:	4640      	mov	r0, r8
 8007a28:	2101      	movs	r1, #1
 8007a2a:	f00c f94d 	bl	8013cc8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a2e:	4640      	mov	r0, r8
 8007a30:	2101      	movs	r1, #1
 8007a32:	f00c f94c 	bl	8013cce <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007a36:	4641      	mov	r1, r8
 8007a38:	4638      	mov	r0, r7
 8007a3a:	f009 f871 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007a3e:	230f      	movs	r3, #15
 8007a40:	22e6      	movs	r2, #230	; 0xe6
 8007a42:	9300      	str	r3, [sp, #0]
 8007a44:	4629      	mov	r1, r5
 8007a46:	23f0      	movs	r3, #240	; 0xf0
 8007a48:	4648      	mov	r0, r9
 8007a4a:	f7fa fff0 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a4e:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8007a52:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007a56:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007a5a:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007a5e:	4649      	mov	r1, r9
 8007a60:	4630      	mov	r0, r6
 8007a62:	4798      	blx	r3
 8007a64:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007a68:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a6c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007ad0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007a70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007a74:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8007a78:	9303      	str	r3, [sp, #12]
 8007a7a:	f8d8 3000 	ldr.w	r3, [r8]
 8007a7e:	b92b      	cbnz	r3, 8007a8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 8007a80:	4b0e      	ldr	r3, [pc, #56]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007a82:	4a0f      	ldr	r2, [pc, #60]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007a84:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a86:	480f      	ldr	r0, [pc, #60]	; (8007ac4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007a88:	f023 ffea 	bl	802ba60 <__assert_func>
 8007a8c:	4b0e      	ldr	r3, [pc, #56]	; (8007ac8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007a8e:	881b      	ldrh	r3, [r3, #0]
 8007a90:	2b15      	cmp	r3, #21
 8007a92:	d81f      	bhi.n	8007ad4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8007a94:	4b0d      	ldr	r3, [pc, #52]	; (8007acc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8007a96:	4a0a      	ldr	r2, [pc, #40]	; (8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007a98:	2161      	movs	r1, #97	; 0x61
 8007a9a:	e7f4      	b.n	8007a86 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 8007a9c:	0802ed58 	.word	0x0802ed58
 8007aa0:	0802fb44 	.word	0x0802fb44
 8007aa4:	0802fd90 	.word	0x0802fd90
 8007aa8:	0802d690 	.word	0x0802d690
 8007aac:	0802f878 	.word	0x0802f878
 8007ab0:	0802ed40 	.word	0x0802ed40
 8007ab4:	080077c3 	.word	0x080077c3
 8007ab8:	0802d5f0 	.word	0x0802d5f0
 8007abc:	0802d440 	.word	0x0802d440
 8007ac0:	0802d545 	.word	0x0802d545
 8007ac4:	0802d4bd 	.word	0x0802d4bd
 8007ac8:	20013890 	.word	0x20013890
 8007acc:	0802d504 	.word	0x0802d504
 8007ad0:	2001388c 	.word	0x2001388c
        return texts->getText(typedTextId);
 8007ad4:	4bdb      	ldr	r3, [pc, #876]	; (8007e44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007ad6:	2115      	movs	r1, #21
 8007ad8:	6818      	ldr	r0, [r3, #0]
 8007ada:	f000 ff9f 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8007ade:	4ada      	ldr	r2, [pc, #872]	; (8007e48 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007ae0:	4603      	mov	r3, r0
 8007ae2:	210a      	movs	r1, #10
 8007ae4:	9803      	ldr	r0, [sp, #12]
 8007ae6:	f012 faa1 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007aea:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007aec:	4bd7      	ldr	r3, [pc, #860]	; (8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007aee:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007af2:	4648      	mov	r0, r9
 8007af4:	930a      	str	r3, [sp, #40]	; 0x28
 8007af6:	a90a      	add	r1, sp, #40	; 0x28
 8007af8:	2318      	movs	r3, #24
 8007afa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007afe:	f00b fe37 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b02:	4649      	mov	r1, r9
 8007b04:	4638      	mov	r0, r7
 8007b06:	f009 f80b 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007b0a:	210f      	movs	r1, #15
 8007b0c:	22d7      	movs	r2, #215	; 0xd7
 8007b0e:	ee19 0a90 	vmov	r0, s19
 8007b12:	9100      	str	r1, [sp, #0]
 8007b14:	23f0      	movs	r3, #240	; 0xf0
 8007b16:	4629      	mov	r1, r5
 8007b18:	f7fa ff89 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b1c:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8007b20:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007b24:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007b28:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007b2c:	ee19 1a90 	vmov	r1, s19
 8007b30:	4630      	mov	r0, r6
 8007b32:	4798      	blx	r3
 8007b34:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b38:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007b3c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b40:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007b44:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	d099      	beq.n	8007a80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b4c:	49c0      	ldr	r1, [pc, #768]	; (8007e50 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007b4e:	880b      	ldrh	r3, [r1, #0]
 8007b50:	2b16      	cmp	r3, #22
 8007b52:	d99f      	bls.n	8007a94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007b54:	4abb      	ldr	r2, [pc, #748]	; (8007e44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007b56:	2116      	movs	r1, #22
 8007b58:	6810      	ldr	r0, [r2, #0]
 8007b5a:	f000 ff5f 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8007b5e:	4aba      	ldr	r2, [pc, #744]	; (8007e48 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007b60:	4603      	mov	r3, r0
 8007b62:	210a      	movs	r1, #10
 8007b64:	4648      	mov	r0, r9
 8007b66:	f012 fa61 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007b6a:	4bb8      	ldr	r3, [pc, #736]	; (8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007b6c:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007b70:	a80a      	add	r0, sp, #40	; 0x28
 8007b72:	4601      	mov	r1, r0
 8007b74:	930a      	str	r3, [sp, #40]	; 0x28
 8007b76:	ee19 0a90 	vmov	r0, s19
 8007b7a:	2319      	movs	r3, #25
 8007b7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b80:	f00b fdf6 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b84:	ee19 1a90 	vmov	r1, s19
 8007b88:	4638      	mov	r0, r7
 8007b8a:	f008 ffc9 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007b8e:	200f      	movs	r0, #15
 8007b90:	22c8      	movs	r2, #200	; 0xc8
 8007b92:	9000      	str	r0, [sp, #0]
 8007b94:	23f0      	movs	r3, #240	; 0xf0
 8007b96:	ee1a 0a10 	vmov	r0, s20
 8007b9a:	4629      	mov	r1, r5
 8007b9c:	f7fa ff47 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ba0:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8007ba4:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007ba8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007bac:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007bb0:	ee1a 1a10 	vmov	r1, s20
 8007bb4:	4630      	mov	r0, r6
 8007bb6:	4798      	blx	r3
 8007bb8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007bbc:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007bc0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007bc4:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007bc8:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007bcc:	2b00      	cmp	r3, #0
 8007bce:	f43f af57 	beq.w	8007a80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bd2:	499f      	ldr	r1, [pc, #636]	; (8007e50 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007bd4:	880b      	ldrh	r3, [r1, #0]
 8007bd6:	2b17      	cmp	r3, #23
 8007bd8:	f67f af5c 	bls.w	8007a94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007bdc:	4a99      	ldr	r2, [pc, #612]	; (8007e44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007bde:	2117      	movs	r1, #23
 8007be0:	6810      	ldr	r0, [r2, #0]
 8007be2:	f000 ff1b 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8007be6:	4a98      	ldr	r2, [pc, #608]	; (8007e48 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007be8:	4603      	mov	r3, r0
 8007bea:	210a      	movs	r1, #10
 8007bec:	4648      	mov	r0, r9
 8007bee:	f012 fa1d 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007bf2:	4b96      	ldr	r3, [pc, #600]	; (8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007bf4:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007bf6:	ee1a 0a10 	vmov	r0, s20
 8007bfa:	231a      	movs	r3, #26
 8007bfc:	a90a      	add	r1, sp, #40	; 0x28
 8007bfe:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007c02:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c06:	f00b fdb3 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c0a:	ee1a 1a10 	vmov	r1, s20
 8007c0e:	4638      	mov	r0, r7
 8007c10:	f008 ff86 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007c14:	224c      	movs	r2, #76	; 0x4c
 8007c16:	ee1a 0a90 	vmov	r0, s21
 8007c1a:	2171      	movs	r1, #113	; 0x71
 8007c1c:	f7fa fefa 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007c20:	ee1a 1a90 	vmov	r1, s21
 8007c24:	4630      	mov	r0, r6
        color = newColor;
 8007c26:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 8007c2a:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007c2e:	f00b fb05 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c32:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c36:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007c3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c3e:	4b83      	ldr	r3, [pc, #524]	; (8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c40:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007c42:	ee1a 0a90 	vmov	r0, s21
 8007c46:	231b      	movs	r3, #27
 8007c48:	a90a      	add	r1, sp, #40	; 0x28
 8007c4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c4e:	f00b fd8f 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c52:	ee1a 1a90 	vmov	r1, s21
 8007c56:	4638      	mov	r0, r7
 8007c58:	f008 ff62 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007c5c:	22b9      	movs	r2, #185	; 0xb9
 8007c5e:	ee1b 0a10 	vmov	r0, s22
 8007c62:	4629      	mov	r1, r5
 8007c64:	f7fa fed6 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007c68:	ee1b 1a10 	vmov	r1, s22
 8007c6c:	4630      	mov	r0, r6
        color = newColor;
 8007c6e:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 8007c72:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007c76:	f00b fae1 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c7a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c7e:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007c82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c86:	4b71      	ldr	r3, [pc, #452]	; (8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c88:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007c8a:	ee1b 0a10 	vmov	r0, s22
 8007c8e:	231c      	movs	r3, #28
 8007c90:	a90a      	add	r1, sp, #40	; 0x28
 8007c92:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c96:	f00b fd6b 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c9a:	ee1b 1a10 	vmov	r1, s22
 8007c9e:	4638      	mov	r0, r7
 8007ca0:	f008 ff3e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007ca4:	22b9      	movs	r2, #185	; 0xb9
 8007ca6:	ee1b 0a90 	vmov	r0, s23
 8007caa:	21d9      	movs	r1, #217	; 0xd9
 8007cac:	f7fa feb2 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007cb0:	ee1b 1a90 	vmov	r1, s23
 8007cb4:	4630      	mov	r0, r6
        color = newColor;
 8007cb6:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 8007cba:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007cbe:	f00b fabd 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cc2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007cc6:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007cca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cce:	4b5f      	ldr	r3, [pc, #380]	; (8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007cd0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007cd2:	ee1b 0a90 	vmov	r0, s23
 8007cd6:	231d      	movs	r3, #29
 8007cd8:	a90a      	add	r1, sp, #40	; 0x28
 8007cda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cde:	f00b fd47 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ce2:	ee1b 1a90 	vmov	r1, s23
 8007ce6:	4638      	mov	r0, r7
 8007ce8:	f008 ff1a 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007cec:	230a      	movs	r3, #10
 8007cee:	9300      	str	r3, [sp, #0]
 8007cf0:	2232      	movs	r2, #50	; 0x32
 8007cf2:	23f0      	movs	r3, #240	; 0xf0
 8007cf4:	4629      	mov	r1, r5
 8007cf6:	4650      	mov	r0, sl
 8007cf8:	f7fa fe99 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007cfc:	9b02      	ldr	r3, [sp, #8]
 8007cfe:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d02:	22a0      	movs	r2, #160	; 0xa0
 8007d04:	4611      	mov	r1, r2
 8007d06:	4650      	mov	r0, sl
 8007d08:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007d0c:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 8007d10:	f00b f8e8 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d14:	22a0      	movs	r2, #160	; 0xa0
 8007d16:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007d1a:	4650      	mov	r0, sl
 8007d1c:	f00b f8ed 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007d20:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007d24:	2b20      	cmp	r3, #32
 8007d26:	d005      	beq.n	8007d34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 8007d28:	2320      	movs	r3, #32
 8007d2a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007d2e:	4650      	mov	r0, sl
 8007d30:	f00a ffe2 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007d34:	4650      	mov	r0, sl
 8007d36:	2101      	movs	r1, #1
 8007d38:	f00b f8ea 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007d3c:	4651      	mov	r1, sl
 8007d3e:	4638      	mov	r0, r7
 8007d40:	f008 feee 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007d44:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007d48:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007d4a:	ee18 0a10 	vmov	r0, s16
 8007d4e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007d50:	f04f 0900 	mov.w	r9, #0
 8007d54:	2145      	movs	r1, #69	; 0x45
 8007d56:	f7fa fe5d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007d5a:	ee18 1a10 	vmov	r1, s16
 8007d5e:	4628      	mov	r0, r5
        color = newColor;
 8007d60:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007d64:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007d68:	f00b fa68 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d70:	ee18 3a10 	vmov	r3, s16
 8007d74:	333c      	adds	r3, #60	; 0x3c
 8007d76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d7a:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007e4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007d7e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007d82:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007d84:	ee18 0a10 	vmov	r0, s16
 8007d88:	a90a      	add	r1, sp, #40	; 0x28
 8007d8a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d8e:	f00b fcef 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d92:	ee18 1a10 	vmov	r1, s16
 8007d96:	4638      	mov	r0, r7
 8007d98:	f008 fec2 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d9c:	ee18 0a90 	vmov	r0, s17
 8007da0:	220c      	movs	r2, #12
 8007da2:	2136      	movs	r1, #54	; 0x36
 8007da4:	f7fa fe36 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007da8:	ee18 1a90 	vmov	r1, s17
 8007dac:	4628      	mov	r0, r5
        color = newColor;
 8007dae:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007db2:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007db6:	f00b fa41 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007dba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007dbe:	ee18 3a90 	vmov	r3, s17
 8007dc2:	333c      	adds	r3, #60	; 0x3c
 8007dc4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007dc8:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007dca:	ee18 0a90 	vmov	r0, s17
 8007dce:	a90a      	add	r1, sp, #40	; 0x28
 8007dd0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dd4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007dd8:	f00b fcca 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ddc:	ee18 1a90 	vmov	r1, s17
 8007de0:	4638      	mov	r0, r7
 8007de2:	f008 fe9d 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007de6:	ee1c 0a10 	vmov	r0, s24
 8007dea:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007dee:	2121      	movs	r1, #33	; 0x21
 8007df0:	f7fa fe10 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007df4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007df6:	aa0a      	add	r2, sp, #40	; 0x28
 8007df8:	a909      	add	r1, sp, #36	; 0x24
 8007dfa:	ee1c 0a10 	vmov	r0, s24
 8007dfe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007e02:	2302      	movs	r3, #2
 8007e04:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e08:	f00c f86d 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007e0c:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007e0e:	ee1c 0a10 	vmov	r0, s24
 8007e12:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007e16:	f7fa fe41 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007e1a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007e1e:	3304      	adds	r3, #4
 8007e20:	4638      	mov	r0, r7
 8007e22:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007e26:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007e2a:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007e2e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007e32:	f008 fe75 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e36:	4620      	mov	r0, r4
 8007e38:	b00d      	add	sp, #52	; 0x34
 8007e3a:	ecbd 8b0a 	vpop	{d8-d12}
 8007e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e42:	bf00      	nop
 8007e44:	20013898 	.word	0x20013898
 8007e48:	0802d57d 	.word	0x0802d57d
 8007e4c:	0802d5f0 	.word	0x0802d5f0
 8007e50:	20013890 	.word	0x20013890

08007e54 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007e54:	4770      	bx	lr

08007e56 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e56:	4770      	bx	lr

08007e58 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007e58:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e5a:	68c2      	ldr	r2, [r0, #12]
 8007e5c:	6844      	ldr	r4, [r0, #4]
 8007e5e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e60:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007e62:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e66:	07d2      	lsls	r2, r2, #31
 8007e68:	bf48      	it	mi
 8007e6a:	5962      	ldrmi	r2, [r4, r5]
 8007e6c:	689b      	ldr	r3, [r3, #8]
    }
 8007e6e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e70:	bf48      	it	mi
 8007e72:	58d3      	ldrmi	r3, [r2, r3]
 8007e74:	4718      	bx	r3

08007e76 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007e76:	6843      	ldr	r3, [r0, #4]
 8007e78:	b12b      	cbz	r3, 8007e86 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007e7a:	6883      	ldr	r3, [r0, #8]
 8007e7c:	b92b      	cbnz	r3, 8007e8a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007e7e:	68c0      	ldr	r0, [r0, #12]
 8007e80:	f000 0001 	and.w	r0, r0, #1
 8007e84:	4770      	bx	lr
 8007e86:	4618      	mov	r0, r3
 8007e88:	4770      	bx	lr
 8007e8a:	2001      	movs	r0, #1
    }
 8007e8c:	4770      	bx	lr

08007e8e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e8e:	b510      	push	{r4, lr}
 8007e90:	2110      	movs	r1, #16
 8007e92:	4604      	mov	r4, r0
 8007e94:	f022 ffd1 	bl	802ae3a <_ZdlPvj>
 8007e98:	4620      	mov	r0, r4
 8007e9a:	bd10      	pop	{r4, pc}

08007e9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007e9c:	b510      	push	{r4, lr}
 8007e9e:	4b03      	ldr	r3, [pc, #12]	; (8007eac <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007ea0:	6003      	str	r3, [r0, #0]
 8007ea2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007ea4:	f00d fa12 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ea8:	4620      	mov	r0, r4
 8007eaa:	bd10      	pop	{r4, pc}
 8007eac:	0802eda8 	.word	0x0802eda8

08007eb0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007eb0:	b507      	push	{r0, r1, r2, lr}
 8007eb2:	4b07      	ldr	r3, [pc, #28]	; (8007ed0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007eb4:	6003      	str	r3, [r0, #0]
 8007eb6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007eb8:	f00d fa08 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ebc:	9801      	ldr	r0, [sp, #4]
 8007ebe:	f241 015c 	movw	r1, #4188	; 0x105c
 8007ec2:	f022 ffba 	bl	802ae3a <_ZdlPvj>
 8007ec6:	9801      	ldr	r0, [sp, #4]
 8007ec8:	b003      	add	sp, #12
 8007eca:	f85d fb04 	ldr.w	pc, [sp], #4
 8007ece:	bf00      	nop
 8007ed0:	0802eda8 	.word	0x0802eda8

08007ed4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007ed4:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007ed8:	4288      	cmp	r0, r1
{
 8007eda:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007edc:	d105      	bne.n	8007eea <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007ede:	f00e fef7 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007ee2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007ee6:	f7fc bd97 	b.w	8004a18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007eea:	bd08      	pop	{r3, pc}

08007eec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ef0:	ed2d 8b02 	vpush	{d8}
 8007ef4:	4604      	mov	r4, r0
 8007ef6:	b08d      	sub	sp, #52	; 0x34
 8007ef8:	f010 fb6a 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007efc:	4622      	mov	r2, r4
 8007efe:	2500      	movs	r5, #0
 8007f00:	4ba4      	ldr	r3, [pc, #656]	; (8008194 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007f02:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007f04:	f842 3b40 	str.w	r3, [r2], #64
 8007f08:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007f0c:	4629      	mov	r1, r5
 8007f0e:	2226      	movs	r2, #38	; 0x26
 8007f10:	ee18 0a10 	vmov	r0, s16
 8007f14:	f023 ffa9 	bl	802be6a <memset>
 8007f18:	ee18 0a10 	vmov	r0, s16
 8007f1c:	f7fa fdac 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007f20:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007f24:	26ff      	movs	r6, #255	; 0xff
 8007f26:	4b9c      	ldr	r3, [pc, #624]	; (8008198 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007f28:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007f2a:	2226      	movs	r2, #38	; 0x26
 8007f2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f30:	4629      	mov	r1, r5
 8007f32:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007f36:	66a5      	str	r5, [r4, #104]	; 0x68
 8007f38:	4658      	mov	r0, fp
 8007f3a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f3e:	f023 ff94 	bl	802be6a <memset>
 8007f42:	4658      	mov	r0, fp
 8007f44:	f7fa fd98 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007f48:	4b94      	ldr	r3, [pc, #592]	; (800819c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007f4a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007f4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007f50:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007f54:	a90a      	add	r1, sp, #40	; 0x28
 8007f56:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007f5a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007f5e:	4658      	mov	r0, fp
 8007f60:	f00c f9b7 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f64:	4638      	mov	r0, r7
 8007f66:	f00a fea7 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 8007f6a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f6e:	4618      	mov	r0, r3
 8007f70:	9303      	str	r3, [sp, #12]
 8007f72:	f7fa fb85 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f76:	4b8a      	ldr	r3, [pc, #552]	; (80081a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007f78:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007f7c:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007f80:	3324      	adds	r3, #36	; 0x24
 8007f82:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007f86:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007f8a:	4650      	mov	r0, sl
 8007f8c:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007f90:	f7fa fdd6 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007f94:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007f98:	4648      	mov	r0, r9
 8007f9a:	f7fa fdd1 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007f9e:	4640      	mov	r0, r8
 8007fa0:	f7fa fdce 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8007fa4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007fa8:	4618      	mov	r0, r3
 8007faa:	ee08 3a90 	vmov	s17, r3
 8007fae:	f00c fac7 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007fb2:	4a7c      	ldr	r2, [pc, #496]	; (80081a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007fb4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007fb8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007fbc:	4a7a      	ldr	r2, [pc, #488]	; (80081a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007fbe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007fc2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007fc6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007fca:	f00d f975 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007fce:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007fd2:	462a      	mov	r2, r5
 8007fd4:	ee18 0a10 	vmov	r0, s16
 8007fd8:	9300      	str	r3, [sp, #0]
 8007fda:	4629      	mov	r1, r5
 8007fdc:	23f0      	movs	r3, #240	; 0xf0
 8007fde:	f7fa fd26 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fe2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007fe4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007fe8:	66a3      	str	r3, [r4, #104]	; 0x68
 8007fea:	ee18 1a10 	vmov	r1, s16
 8007fee:	4630      	mov	r0, r6
 8007ff0:	f008 fd96 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007ff4:	462a      	mov	r2, r5
 8007ff6:	4629      	mov	r1, r5
 8007ff8:	4658      	mov	r0, fp
 8007ffa:	f7fa fd0b 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8007ffe:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008000:	a90a      	add	r1, sp, #40	; 0x28
 8008002:	4658      	mov	r0, fp
 8008004:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008008:	f00c f963 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800800c:	4659      	mov	r1, fp
 800800e:	4630      	mov	r0, r6
 8008010:	f008 fd86 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008014:	230a      	movs	r3, #10
 8008016:	9300      	str	r3, [sp, #0]
 8008018:	2232      	movs	r2, #50	; 0x32
 800801a:	23f0      	movs	r3, #240	; 0xf0
 800801c:	4629      	mov	r1, r5
 800801e:	4638      	mov	r0, r7
 8008020:	f7fa fd05 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008024:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008028:	22a0      	movs	r2, #160	; 0xa0
 800802a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800802e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008032:	9b03      	ldr	r3, [sp, #12]
 8008034:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008038:	4611      	mov	r1, r2
 800803a:	4638      	mov	r0, r7
 800803c:	f00a ff52 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008040:	22a0      	movs	r2, #160	; 0xa0
 8008042:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008046:	4638      	mov	r0, r7
 8008048:	f00a ff57 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800804c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008050:	2b20      	cmp	r3, #32
 8008052:	d005      	beq.n	8008060 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8008054:	2320      	movs	r3, #32
 8008056:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800805a:	4638      	mov	r0, r7
 800805c:	f00a fe4c 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008060:	4638      	mov	r0, r7
 8008062:	2101      	movs	r1, #1
 8008064:	f00a ff54 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008068:	4639      	mov	r1, r7
 800806a:	4630      	mov	r0, r6
 800806c:	f008 fd58 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008070:	ad04      	add	r5, sp, #16
        color = newColor;
 8008072:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8008076:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 800807a:	2223      	movs	r2, #35	; 0x23
 800807c:	4650      	mov	r0, sl
 800807e:	2145      	movs	r1, #69	; 0x45
 8008080:	f7fa fcc8 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008084:	4651      	mov	r1, sl
 8008086:	4628      	mov	r0, r5
        color = newColor;
 8008088:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800808c:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008090:	f00b f8d4 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008094:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008098:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800809c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80080a0:	4b42      	ldr	r3, [pc, #264]	; (80081ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080a2:	930a      	str	r3, [sp, #40]	; 0x28
 80080a4:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80080a6:	a90a      	add	r1, sp, #40	; 0x28
 80080a8:	4650      	mov	r0, sl
 80080aa:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80080ae:	f00b fb5f 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080b2:	4651      	mov	r1, sl
 80080b4:	4630      	mov	r0, r6
 80080b6:	f008 fd33 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80080ba:	223c      	movs	r2, #60	; 0x3c
 80080bc:	4648      	mov	r0, r9
 80080be:	211f      	movs	r1, #31
 80080c0:	f7fa fca8 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80080c4:	4649      	mov	r1, r9
 80080c6:	4628      	mov	r0, r5
        color = newColor;
 80080c8:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80080cc:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80080d0:	f00b f8b4 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080d8:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80080dc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80080e0:	4b32      	ldr	r3, [pc, #200]	; (80081ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080e2:	930a      	str	r3, [sp, #40]	; 0x28
 80080e4:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80080e6:	a90a      	add	r1, sp, #40	; 0x28
 80080e8:	4648      	mov	r0, r9
 80080ea:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80080ee:	f00b fb3f 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080f2:	4649      	mov	r1, r9
 80080f4:	4630      	mov	r0, r6
 80080f6:	f008 fd13 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80080fa:	220c      	movs	r2, #12
 80080fc:	4640      	mov	r0, r8
 80080fe:	2136      	movs	r1, #54	; 0x36
 8008100:	f7fa fc88 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8008104:	4641      	mov	r1, r8
 8008106:	4628      	mov	r0, r5
        color = newColor;
 8008108:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800810c:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008110:	f00b f894 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008114:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008118:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 800811c:	4b23      	ldr	r3, [pc, #140]	; (80081ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800811e:	930a      	str	r3, [sp, #40]	; 0x28
 8008120:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008124:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008126:	a90a      	add	r1, sp, #40	; 0x28
 8008128:	4640      	mov	r0, r8
 800812a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800812e:	f00b fb1f 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008132:	4641      	mov	r1, r8
 8008134:	4630      	mov	r0, r6
 8008136:	f008 fcf3 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800813a:	ee18 0a90 	vmov	r0, s17
 800813e:	f240 1201 	movw	r2, #257	; 0x101
 8008142:	2121      	movs	r1, #33	; 0x21
 8008144:	f7fa fc66 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8008148:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800814a:	aa0a      	add	r2, sp, #40	; 0x28
 800814c:	a909      	add	r1, sp, #36	; 0x24
 800814e:	ee18 0a90 	vmov	r0, s17
 8008152:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008156:	2302      	movs	r3, #2
 8008158:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800815c:	f00b fec3 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008160:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8008162:	ee18 0a90 	vmov	r0, s17
 8008166:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800816a:	f7fa fc97 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800816e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8008172:	330c      	adds	r3, #12
 8008174:	4630      	mov	r0, r6
        colorPressed = col;
 8008176:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800817a:	ee18 1a90 	vmov	r1, s17
 800817e:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8008182:	f008 fccd 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008186:	4620      	mov	r0, r4
 8008188:	b00d      	add	sp, #52	; 0x34
 800818a:	ecbd 8b02 	vpop	{d8}
 800818e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008192:	bf00      	nop
 8008194:	0802eda8 	.word	0x0802eda8
 8008198:	0802fb44 	.word	0x0802fb44
 800819c:	0802fd90 	.word	0x0802fd90
 80081a0:	0802f878 	.word	0x0802f878
 80081a4:	0802ed90 	.word	0x0802ed90
 80081a8:	08007ed5 	.word	0x08007ed5
 80081ac:	0802d5f0 	.word	0x0802d5f0

080081b0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80081b0:	4770      	bx	lr

080081b2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081b2:	4770      	bx	lr

080081b4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80081b4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081b6:	68c2      	ldr	r2, [r0, #12]
 80081b8:	6844      	ldr	r4, [r0, #4]
 80081ba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80081bc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80081be:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80081c2:	07d2      	lsls	r2, r2, #31
 80081c4:	bf48      	it	mi
 80081c6:	5962      	ldrmi	r2, [r4, r5]
 80081c8:	689b      	ldr	r3, [r3, #8]
    }
 80081ca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081cc:	bf48      	it	mi
 80081ce:	58d3      	ldrmi	r3, [r2, r3]
 80081d0:	4718      	bx	r3

080081d2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80081d2:	6843      	ldr	r3, [r0, #4]
 80081d4:	b12b      	cbz	r3, 80081e2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80081d6:	6883      	ldr	r3, [r0, #8]
 80081d8:	b92b      	cbnz	r3, 80081e6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80081da:	68c0      	ldr	r0, [r0, #12]
 80081dc:	f000 0001 	and.w	r0, r0, #1
 80081e0:	4770      	bx	lr
 80081e2:	4618      	mov	r0, r3
 80081e4:	4770      	bx	lr
 80081e6:	2001      	movs	r0, #1
    }
 80081e8:	4770      	bx	lr

080081ea <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081ea:	b510      	push	{r4, lr}
 80081ec:	2110      	movs	r1, #16
 80081ee:	4604      	mov	r4, r0
 80081f0:	f022 fe23 	bl	802ae3a <_ZdlPvj>
 80081f4:	4620      	mov	r0, r4
 80081f6:	bd10      	pop	{r4, pc}

080081f8 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80081f8:	b510      	push	{r4, lr}
 80081fa:	4b03      	ldr	r3, [pc, #12]	; (8008208 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80081fc:	6003      	str	r3, [r0, #0]
 80081fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008200:	f00d f864 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008204:	4620      	mov	r0, r4
 8008206:	bd10      	pop	{r4, pc}
 8008208:	0802edf4 	.word	0x0802edf4

0800820c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800820c:	b507      	push	{r0, r1, r2, lr}
 800820e:	4b07      	ldr	r3, [pc, #28]	; (800822c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008210:	6003      	str	r3, [r0, #0]
 8008212:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008214:	f00d f85a 	bl	80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008218:	9801      	ldr	r0, [sp, #4]
 800821a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800821e:	f022 fe0c 	bl	802ae3a <_ZdlPvj>
 8008222:	9801      	ldr	r0, [sp, #4]
 8008224:	b003      	add	sp, #12
 8008226:	f85d fb04 	ldr.w	pc, [sp], #4
 800822a:	bf00      	nop
 800822c:	0802edf4 	.word	0x0802edf4

08008230 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008230:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008234:	4288      	cmp	r0, r1
{
 8008236:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008238:	d105      	bne.n	8008246 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800823a:	f00e fd49 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800823e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008242:	f7fc bbb9 	b.w	80049b8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008246:	bd08      	pop	{r3, pc}

08008248 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800824c:	ed2d 8b04 	vpush	{d8-d9}
 8008250:	4604      	mov	r4, r0
 8008252:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008254:	46a3      	mov	fp, r4
 8008256:	2500      	movs	r5, #0
 8008258:	f010 f9ba 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 800825c:	4bd1      	ldr	r3, [pc, #836]	; (80085a4 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800825e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008260:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008264:	2226      	movs	r2, #38	; 0x26
 8008266:	4629      	mov	r1, r5
 8008268:	4658      	mov	r0, fp
 800826a:	f023 fdfe 	bl	802be6a <memset>
 800826e:	4658      	mov	r0, fp
 8008270:	f7fa fc02 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8008274:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008278:	26ff      	movs	r6, #255	; 0xff
 800827a:	4bcb      	ldr	r3, [pc, #812]	; (80085a8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800827c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800827e:	2226      	movs	r2, #38	; 0x26
 8008280:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008284:	4629      	mov	r1, r5
 8008286:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800828a:	4650      	mov	r0, sl
 800828c:	66a5      	str	r5, [r4, #104]	; 0x68
 800828e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008292:	f023 fdea 	bl	802be6a <memset>
 8008296:	4650      	mov	r0, sl
 8008298:	f7fa fbee 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 800829c:	4bc3      	ldr	r3, [pc, #780]	; (80085ac <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800829e:	66e3      	str	r3, [r4, #108]	; 0x6c
 80082a0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80082a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80082a8:	a90a      	add	r1, sp, #40	; 0x28
 80082aa:	4650      	mov	r0, sl
 80082ac:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80082b0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80082b4:	f00c f80d 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80082b8:	4648      	mov	r0, r9
 80082ba:	f7fa fc41 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 80082be:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80082c2:	4bbb      	ldr	r3, [pc, #748]	; (80085b0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80082c4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80082c8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80082cc:	4638      	mov	r0, r7
 80082ce:	f00a fcf3 	bl	8012cb8 <_ZN8touchgfx4LineC1Ev>
 80082d2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80082d6:	4618      	mov	r0, r3
 80082d8:	9303      	str	r3, [sp, #12]
 80082da:	f7fa f9d1 	bl	8002680 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80082de:	4bb5      	ldr	r3, [pc, #724]	; (80085b4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80082e0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80082e4:	3324      	adds	r3, #36	; 0x24
 80082e6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80082ea:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80082ee:	4618      	mov	r0, r3
 80082f0:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80082f4:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80082f8:	ee09 3a10 	vmov	s18, r3
 80082fc:	f00c f920 	bl	8014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008300:	4640      	mov	r0, r8
 8008302:	f7fa fc1d 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8008306:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800830a:	4618      	mov	r0, r3
 800830c:	ee08 3a10 	vmov	s16, r3
 8008310:	f7fa fc16 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
 8008314:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008318:	4618      	mov	r0, r3
 800831a:	ee08 3a90 	vmov	s17, r3
 800831e:	f7fa fc0f 	bl	8002b40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008322:	4aa5      	ldr	r2, [pc, #660]	; (80085b8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008324:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008328:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 800832c:	4aa3      	ldr	r2, [pc, #652]	; (80085bc <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800832e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008332:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008336:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800833a:	f00c ffbd 	bl	80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800833e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008342:	462a      	mov	r2, r5
 8008344:	4658      	mov	r0, fp
 8008346:	9300      	str	r3, [sp, #0]
 8008348:	4629      	mov	r1, r5
 800834a:	23f0      	movs	r3, #240	; 0xf0
 800834c:	f7fa fb6f 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008350:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008352:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008356:	66a3      	str	r3, [r4, #104]	; 0x68
 8008358:	4659      	mov	r1, fp
 800835a:	4630      	mov	r0, r6
 800835c:	f008 fbe0 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008360:	462a      	mov	r2, r5
 8008362:	4650      	mov	r0, sl
 8008364:	4629      	mov	r1, r5
 8008366:	f7fa fb55 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 800836a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800836c:	4650      	mov	r0, sl
 800836e:	a90a      	add	r1, sp, #40	; 0x28
 8008370:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008374:	f00b ffad 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008378:	4651      	mov	r1, sl
 800837a:	4630      	mov	r0, r6
 800837c:	f008 fbd0 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008380:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008384:	2156      	movs	r1, #86	; 0x56
 8008386:	4648      	mov	r0, r9
 8008388:	f7fa fb44 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 800838c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008390:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008394:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008398:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800839c:	4650      	mov	r0, sl
 800839e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80083a2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80083a6:	4649      	mov	r1, r9
 80083a8:	4798      	blx	r3
 80083aa:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80083ae:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80083b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80083b6:	4b82      	ldr	r3, [pc, #520]	; (80085c0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80083b8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80083ba:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80083be:	b92b      	cbnz	r3, 80083cc <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80083c0:	4b80      	ldr	r3, [pc, #512]	; (80085c4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80083c2:	4a81      	ldr	r2, [pc, #516]	; (80085c8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083c4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083c6:	4881      	ldr	r0, [pc, #516]	; (80085cc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80083c8:	f023 fb4a 	bl	802ba60 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80083cc:	4b80      	ldr	r3, [pc, #512]	; (80085d0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083ce:	881b      	ldrh	r3, [r3, #0]
 80083d0:	2b22      	cmp	r3, #34	; 0x22
 80083d2:	d803      	bhi.n	80083dc <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80083d4:	4b7f      	ldr	r3, [pc, #508]	; (80085d4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80083d6:	4a7c      	ldr	r2, [pc, #496]	; (80085c8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083d8:	2161      	movs	r1, #97	; 0x61
 80083da:	e7f4      	b.n	80083c6 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80083dc:	4b7e      	ldr	r3, [pc, #504]	; (80085d8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80083de:	2122      	movs	r1, #34	; 0x22
 80083e0:	6818      	ldr	r0, [r3, #0]
 80083e2:	f000 fb1b 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80083e6:	4a7d      	ldr	r2, [pc, #500]	; (80085dc <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80083e8:	4603      	mov	r3, r0
 80083ea:	2104      	movs	r1, #4
 80083ec:	4650      	mov	r0, sl
 80083ee:	f011 fe1d 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80083f2:	4648      	mov	r0, r9
        wc1 = value;
 80083f4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80083f8:	f00b f99a 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80083fc:	4b78      	ldr	r3, [pc, #480]	; (80085e0 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80083fe:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008400:	a90a      	add	r1, sp, #40	; 0x28
 8008402:	2323      	movs	r3, #35	; 0x23
 8008404:	4648      	mov	r0, r9
 8008406:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800840a:	f00b f9b1 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800840e:	4649      	mov	r1, r9
 8008410:	4630      	mov	r0, r6
 8008412:	f008 fb85 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008416:	230a      	movs	r3, #10
 8008418:	9300      	str	r3, [sp, #0]
 800841a:	2232      	movs	r2, #50	; 0x32
 800841c:	23f0      	movs	r3, #240	; 0xf0
 800841e:	4629      	mov	r1, r5
 8008420:	4638      	mov	r0, r7
 8008422:	f7fa fb04 	bl	8002a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008426:	9b03      	ldr	r3, [sp, #12]
 8008428:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800842c:	22a0      	movs	r2, #160	; 0xa0
 800842e:	4611      	mov	r1, r2
 8008430:	4638      	mov	r0, r7
 8008432:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008436:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800843a:	f00a fd53 	bl	8012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800843e:	22a0      	movs	r2, #160	; 0xa0
 8008440:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008444:	4638      	mov	r0, r7
 8008446:	f00a fd58 	bl	8012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800844a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800844e:	2b20      	cmp	r3, #32
 8008450:	d005      	beq.n	800845e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008452:	2320      	movs	r3, #32
 8008454:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008458:	4638      	mov	r0, r7
 800845a:	f00a fc4d 	bl	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800845e:	4638      	mov	r0, r7
 8008460:	2101      	movs	r1, #1
 8008462:	f00a fd55 	bl	8012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008466:	4639      	mov	r1, r7
 8008468:	4630      	mov	r0, r6
 800846a:	f008 fb59 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800846e:	ee19 0a10 	vmov	r0, s18
 8008472:	22f0      	movs	r2, #240	; 0xf0
 8008474:	2121      	movs	r1, #33	; 0x21
 8008476:	f7fa facd 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 800847a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800847c:	aa0a      	add	r2, sp, #40	; 0x28
 800847e:	a909      	add	r1, sp, #36	; 0x24
 8008480:	ee19 0a10 	vmov	r0, s18
 8008484:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008488:	2302      	movs	r3, #2
 800848a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800848e:	f00b fd2a 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008492:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 8008494:	ee19 0a10 	vmov	r0, s18
 8008498:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 800849c:	f7fa fafe 	bl	8002a9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80084a0:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80084a4:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80084a8:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80084ac:	ee19 1a10 	vmov	r1, s18
 80084b0:	4630      	mov	r0, r6
        colorPressed = col;
 80084b2:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80084b6:	ad04      	add	r5, sp, #16
 80084b8:	f008 fb32 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80084bc:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80084c0:	225b      	movs	r2, #91	; 0x5b
 80084c2:	4640      	mov	r0, r8
 80084c4:	2105      	movs	r1, #5
 80084c6:	f7fa faa5 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80084ca:	4641      	mov	r1, r8
 80084cc:	4628      	mov	r0, r5
        color = newColor;
 80084ce:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80084d2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80084d6:	f00a feb1 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80084de:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80084e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80084e6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80085e0 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80084ea:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80084ee:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80084f0:	a90a      	add	r1, sp, #40	; 0x28
 80084f2:	4640      	mov	r0, r8
 80084f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80084f8:	f00b f93a 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084fc:	4641      	mov	r1, r8
 80084fe:	4630      	mov	r0, r6
 8008500:	f008 fb0e 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008504:	ee18 0a10 	vmov	r0, s16
 8008508:	2223      	movs	r2, #35	; 0x23
 800850a:	2145      	movs	r1, #69	; 0x45
 800850c:	f7fa fa82 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8008510:	ee18 1a10 	vmov	r1, s16
 8008514:	4628      	mov	r0, r5
        color = newColor;
 8008516:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800851a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800851e:	f00a fe8d 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008522:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008526:	ee18 3a10 	vmov	r3, s16
 800852a:	333c      	adds	r3, #60	; 0x3c
 800852c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008530:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008532:	ee18 0a10 	vmov	r0, s16
 8008536:	a90a      	add	r1, sp, #40	; 0x28
 8008538:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800853c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008540:	f00b f916 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008544:	ee18 1a10 	vmov	r1, s16
 8008548:	4630      	mov	r0, r6
 800854a:	f008 fae9 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800854e:	ee18 0a90 	vmov	r0, s17
 8008552:	220c      	movs	r2, #12
 8008554:	2136      	movs	r1, #54	; 0x36
 8008556:	f7fa fa5d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 800855a:	ee18 1a90 	vmov	r1, s17
 800855e:	4628      	mov	r0, r5
        color = newColor;
 8008560:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008564:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008568:	f00a fe68 	bl	801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800856c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008570:	ee18 3a90 	vmov	r3, s17
 8008574:	333c      	adds	r3, #60	; 0x3c
 8008576:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800857a:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800857c:	ee18 0a90 	vmov	r0, s17
 8008580:	a90a      	add	r1, sp, #40	; 0x28
 8008582:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008586:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800858a:	f00b f8f1 	bl	8013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800858e:	4630      	mov	r0, r6
 8008590:	ee18 1a90 	vmov	r1, s17
 8008594:	f008 fac4 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008598:	4620      	mov	r0, r4
 800859a:	b00d      	add	sp, #52	; 0x34
 800859c:	ecbd 8b04 	vpop	{d8-d9}
 80085a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085a4:	0802edf4 	.word	0x0802edf4
 80085a8:	0802fb44 	.word	0x0802fb44
 80085ac:	0802fd90 	.word	0x0802fd90
 80085b0:	0802d690 	.word	0x0802d690
 80085b4:	0802f878 	.word	0x0802f878
 80085b8:	0802eddc 	.word	0x0802eddc
 80085bc:	08008231 	.word	0x08008231
 80085c0:	2001388c 	.word	0x2001388c
 80085c4:	0802d440 	.word	0x0802d440
 80085c8:	0802d545 	.word	0x0802d545
 80085cc:	0802d4bd 	.word	0x0802d4bd
 80085d0:	20013890 	.word	0x20013890
 80085d4:	0802d504 	.word	0x0802d504
 80085d8:	20013898 	.word	0x20013898
 80085dc:	0802d57d 	.word	0x0802d57d
 80085e0:	0802d5f0 	.word	0x0802d5f0

080085e4 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80085e4:	4770      	bx	lr

080085e6 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80085e6:	4770      	bx	lr

080085e8 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085e8:	b510      	push	{r4, lr}
}
 80085ea:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085ec:	4604      	mov	r4, r0
}
 80085ee:	f022 fc24 	bl	802ae3a <_ZdlPvj>
 80085f2:	4620      	mov	r0, r4
 80085f4:	bd10      	pop	{r4, pc}
	...

080085f8 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80085f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80085fc:	4604      	mov	r4, r0
 80085fe:	4626      	mov	r6, r4
 8008600:	f00f ffe6 	bl	80185d0 <_ZN8touchgfx6ScreenC1Ev>
 8008604:	2500      	movs	r5, #0
 8008606:	4b2e      	ldr	r3, [pc, #184]	; (80086c0 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008608:	63e5      	str	r5, [r4, #60]	; 0x3c
 800860a:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800860e:	4b2d      	ldr	r3, [pc, #180]	; (80086c4 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008610:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008612:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008616:	f44f 7280 	mov.w	r2, #256	; 0x100
 800861a:	23ff      	movs	r3, #255	; 0xff
 800861c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008620:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008624:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008628:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800862c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008630:	4a25      	ldr	r2, [pc, #148]	; (80086c8 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008632:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008636:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800863a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800863c:	a901      	add	r1, sp, #4
 800863e:	4638      	mov	r0, r7
 8008640:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008644:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008648:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800864c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008650:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008654:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008658:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800865c:	66a5      	str	r5, [r4, #104]	; 0x68
 800865e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008662:	f00b fe36 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008666:	462a      	mov	r2, r5
 8008668:	4629      	mov	r1, r5
 800866a:	4630      	mov	r0, r6
 800866c:	f7fa f9d2 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008670:	4630      	mov	r0, r6
 8008672:	21f0      	movs	r1, #240	; 0xf0
 8008674:	f7f9 ff50 	bl	8002518 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008678:	4630      	mov	r0, r6
 800867a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800867e:	f7f9 ff4d 	bl	800251c <_ZN8touchgfx8Drawable9setHeightEs>
 8008682:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008686:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800868a:	66a3      	str	r3, [r4, #104]	; 0x68
 800868c:	4631      	mov	r1, r6
 800868e:	4640      	mov	r0, r8
 8008690:	f008 fa46 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008694:	462a      	mov	r2, r5
 8008696:	4638      	mov	r0, r7
 8008698:	f06f 0102 	mvn.w	r1, #2
 800869c:	f7fa f9ba 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80086a0:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80086a2:	a901      	add	r1, sp, #4
 80086a4:	4638      	mov	r0, r7
 80086a6:	f8ad 3004 	strh.w	r3, [sp, #4]
 80086aa:	f00b fe12 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80086ae:	4640      	mov	r0, r8
 80086b0:	4639      	mov	r1, r7
 80086b2:	f008 fa35 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80086b6:	4620      	mov	r0, r4
 80086b8:	b002      	add	sp, #8
 80086ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80086be:	bf00      	nop
 80086c0:	0802ee28 	.word	0x0802ee28
 80086c4:	0802fb44 	.word	0x0802fb44
 80086c8:	0802fd90 	.word	0x0802fd90

080086cc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086cc:	4770      	bx	lr
	...

080086d0 <_Z23getFont_verdana_10_4bppv>:
{
 80086d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086d2:	4d17      	ldr	r5, [pc, #92]	; (8008730 <_Z23getFont_verdana_10_4bppv+0x60>)
 80086d4:	682c      	ldr	r4, [r5, #0]
 80086d6:	f3bf 8f5b 	dmb	ish
 80086da:	f014 0401 	ands.w	r4, r4, #1
{
 80086de:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086e0:	d122      	bne.n	8008728 <_Z23getFont_verdana_10_4bppv+0x58>
 80086e2:	4628      	mov	r0, r5
 80086e4:	f022 fbab 	bl	802ae3e <__cxa_guard_acquire>
 80086e8:	b1f0      	cbz	r0, 8008728 <_Z23getFont_verdana_10_4bppv+0x58>
 80086ea:	233f      	movs	r3, #63	; 0x3f
 80086ec:	9309      	str	r3, [sp, #36]	; 0x24
 80086ee:	4b11      	ldr	r3, [pc, #68]	; (8008734 <_Z23getFont_verdana_10_4bppv+0x64>)
 80086f0:	9308      	str	r3, [sp, #32]
 80086f2:	4b11      	ldr	r3, [pc, #68]	; (8008738 <_Z23getFont_verdana_10_4bppv+0x68>)
 80086f4:	9307      	str	r3, [sp, #28]
 80086f6:	2301      	movs	r3, #1
 80086f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80086fc:	9304      	str	r3, [sp, #16]
 80086fe:	2304      	movs	r3, #4
 8008700:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008704:	230a      	movs	r3, #10
 8008706:	490d      	ldr	r1, [pc, #52]	; (800873c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008708:	9300      	str	r3, [sp, #0]
 800870a:	225f      	movs	r2, #95	; 0x5f
 800870c:	230c      	movs	r3, #12
 800870e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008712:	480b      	ldr	r0, [pc, #44]	; (8008740 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008714:	940a      	str	r4, [sp, #40]	; 0x28
 8008716:	9401      	str	r4, [sp, #4]
 8008718:	f7fd fa34 	bl	8005b84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800871c:	4809      	ldr	r0, [pc, #36]	; (8008744 <_Z23getFont_verdana_10_4bppv+0x74>)
 800871e:	f023 f9bd 	bl	802ba9c <atexit>
 8008722:	4628      	mov	r0, r5
 8008724:	f022 fb97 	bl	802ae56 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008728:	4805      	ldr	r0, [pc, #20]	; (8008740 <_Z23getFont_verdana_10_4bppv+0x70>)
 800872a:	b00f      	add	sp, #60	; 0x3c
 800872c:	bd30      	pop	{r4, r5, pc}
 800872e:	bf00      	nop
 8008730:	20002934 	.word	0x20002934
 8008734:	08047a14 	.word	0x08047a14
 8008738:	08047c50 	.word	0x08047c50
 800873c:	08046a5c 	.word	0x08046a5c
 8008740:	20002938 	.word	0x20002938
 8008744:	080086cd 	.word	0x080086cd

08008748 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008748:	4770      	bx	lr
	...

0800874c <_Z23getFont_verdana_12_4bppv>:
{
 800874c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800874e:	4d17      	ldr	r5, [pc, #92]	; (80087ac <_Z23getFont_verdana_12_4bppv+0x60>)
 8008750:	682c      	ldr	r4, [r5, #0]
 8008752:	f3bf 8f5b 	dmb	ish
 8008756:	f014 0401 	ands.w	r4, r4, #1
{
 800875a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800875c:	d122      	bne.n	80087a4 <_Z23getFont_verdana_12_4bppv+0x58>
 800875e:	4628      	mov	r0, r5
 8008760:	f022 fb6d 	bl	802ae3e <__cxa_guard_acquire>
 8008764:	b1f0      	cbz	r0, 80087a4 <_Z23getFont_verdana_12_4bppv+0x58>
 8008766:	233f      	movs	r3, #63	; 0x3f
 8008768:	9309      	str	r3, [sp, #36]	; 0x24
 800876a:	4b11      	ldr	r3, [pc, #68]	; (80087b0 <_Z23getFont_verdana_12_4bppv+0x64>)
 800876c:	9308      	str	r3, [sp, #32]
 800876e:	4b11      	ldr	r3, [pc, #68]	; (80087b4 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008770:	9307      	str	r3, [sp, #28]
 8008772:	2301      	movs	r3, #1
 8008774:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008778:	9304      	str	r3, [sp, #16]
 800877a:	2304      	movs	r3, #4
 800877c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008780:	230c      	movs	r3, #12
 8008782:	490d      	ldr	r1, [pc, #52]	; (80087b8 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008784:	9300      	str	r3, [sp, #0]
 8008786:	2260      	movs	r2, #96	; 0x60
 8008788:	230f      	movs	r3, #15
 800878a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800878e:	480b      	ldr	r0, [pc, #44]	; (80087bc <_Z23getFont_verdana_12_4bppv+0x70>)
 8008790:	940a      	str	r4, [sp, #40]	; 0x28
 8008792:	9401      	str	r4, [sp, #4]
 8008794:	f7fd f9f6 	bl	8005b84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008798:	4809      	ldr	r0, [pc, #36]	; (80087c0 <_Z23getFont_verdana_12_4bppv+0x74>)
 800879a:	f023 f97f 	bl	802ba9c <atexit>
 800879e:	4628      	mov	r0, r5
 80087a0:	f022 fb59 	bl	802ae56 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80087a4:	4805      	ldr	r0, [pc, #20]	; (80087bc <_Z23getFont_verdana_12_4bppv+0x70>)
 80087a6:	b00f      	add	sp, #60	; 0x3c
 80087a8:	bd30      	pop	{r4, r5, pc}
 80087aa:	bf00      	nop
 80087ac:	20002964 	.word	0x20002964
 80087b0:	08047a48 	.word	0x08047a48
 80087b4:	08047c54 	.word	0x08047c54
 80087b8:	08046f90 	.word	0x08046f90
 80087bc:	20002968 	.word	0x20002968
 80087c0:	08008749 	.word	0x08008749

080087c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087c4:	4770      	bx	lr
	...

080087c8 <_Z23getFont_verdana_19_4bppv>:
{
 80087c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087ca:	4d17      	ldr	r5, [pc, #92]	; (8008828 <_Z23getFont_verdana_19_4bppv+0x60>)
 80087cc:	682c      	ldr	r4, [r5, #0]
 80087ce:	f3bf 8f5b 	dmb	ish
 80087d2:	f014 0401 	ands.w	r4, r4, #1
{
 80087d6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087d8:	d122      	bne.n	8008820 <_Z23getFont_verdana_19_4bppv+0x58>
 80087da:	4628      	mov	r0, r5
 80087dc:	f022 fb2f 	bl	802ae3e <__cxa_guard_acquire>
 80087e0:	b1f0      	cbz	r0, 8008820 <_Z23getFont_verdana_19_4bppv+0x58>
 80087e2:	233f      	movs	r3, #63	; 0x3f
 80087e4:	9309      	str	r3, [sp, #36]	; 0x24
 80087e6:	4b11      	ldr	r3, [pc, #68]	; (800882c <_Z23getFont_verdana_19_4bppv+0x64>)
 80087e8:	9308      	str	r3, [sp, #32]
 80087ea:	4b11      	ldr	r3, [pc, #68]	; (8008830 <_Z23getFont_verdana_19_4bppv+0x68>)
 80087ec:	9307      	str	r3, [sp, #28]
 80087ee:	2301      	movs	r3, #1
 80087f0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80087f4:	9304      	str	r3, [sp, #16]
 80087f6:	2304      	movs	r3, #4
 80087f8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80087fc:	2313      	movs	r3, #19
 80087fe:	490d      	ldr	r1, [pc, #52]	; (8008834 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008800:	9300      	str	r3, [sp, #0]
 8008802:	225f      	movs	r2, #95	; 0x5f
 8008804:	2317      	movs	r3, #23
 8008806:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800880a:	480b      	ldr	r0, [pc, #44]	; (8008838 <_Z23getFont_verdana_19_4bppv+0x70>)
 800880c:	940a      	str	r4, [sp, #40]	; 0x28
 800880e:	9401      	str	r4, [sp, #4]
 8008810:	f7fd f9b8 	bl	8005b84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008814:	4809      	ldr	r0, [pc, #36]	; (800883c <_Z23getFont_verdana_19_4bppv+0x74>)
 8008816:	f023 f941 	bl	802ba9c <atexit>
 800881a:	4628      	mov	r0, r5
 800881c:	f022 fb1b 	bl	802ae56 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008820:	4805      	ldr	r0, [pc, #20]	; (8008838 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008822:	b00f      	add	sp, #60	; 0x3c
 8008824:	bd30      	pop	{r4, r5, pc}
 8008826:	bf00      	nop
 8008828:	20002994 	.word	0x20002994
 800882c:	08047acc 	.word	0x08047acc
 8008830:	08047c58 	.word	0x08047c58
 8008834:	080474d0 	.word	0x080474d0
 8008838:	20002998 	.word	0x20002998
 800883c:	080087c5 	.word	0x080087c5

08008840 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008840:	4770      	bx	lr
	...

08008844 <_Z23getFont_verdana_40_4bppv>:
{
 8008844:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008846:	4d16      	ldr	r5, [pc, #88]	; (80088a0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008848:	682c      	ldr	r4, [r5, #0]
 800884a:	f3bf 8f5b 	dmb	ish
 800884e:	f014 0401 	ands.w	r4, r4, #1
{
 8008852:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008854:	d120      	bne.n	8008898 <_Z23getFont_verdana_40_4bppv+0x54>
 8008856:	4628      	mov	r0, r5
 8008858:	f022 faf1 	bl	802ae3e <__cxa_guard_acquire>
 800885c:	b1e0      	cbz	r0, 8008898 <_Z23getFont_verdana_40_4bppv+0x54>
 800885e:	233f      	movs	r3, #63	; 0x3f
 8008860:	9309      	str	r3, [sp, #36]	; 0x24
 8008862:	4b10      	ldr	r3, [pc, #64]	; (80088a4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008864:	9308      	str	r3, [sp, #32]
 8008866:	4b10      	ldr	r3, [pc, #64]	; (80088a8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008868:	4910      	ldr	r1, [pc, #64]	; (80088ac <_Z23getFont_verdana_40_4bppv+0x68>)
 800886a:	4811      	ldr	r0, [pc, #68]	; (80088b0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800886c:	940a      	str	r4, [sp, #40]	; 0x28
 800886e:	2201      	movs	r2, #1
 8008870:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008874:	2304      	movs	r3, #4
 8008876:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800887a:	2328      	movs	r3, #40	; 0x28
 800887c:	9300      	str	r3, [sp, #0]
 800887e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008882:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008886:	9405      	str	r4, [sp, #20]
 8008888:	f7fd f97c 	bl	8005b84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800888c:	4809      	ldr	r0, [pc, #36]	; (80088b4 <_Z23getFont_verdana_40_4bppv+0x70>)
 800888e:	f023 f905 	bl	802ba9c <atexit>
 8008892:	4628      	mov	r0, r5
 8008894:	f022 fadf 	bl	802ae56 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008898:	4805      	ldr	r0, [pc, #20]	; (80088b0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800889a:	b00f      	add	sp, #60	; 0x3c
 800889c:	bd30      	pop	{r4, r5, pc}
 800889e:	bf00      	nop
 80088a0:	200029c4 	.word	0x200029c4
 80088a4:	08047c4c 	.word	0x08047c4c
 80088a8:	08047c5c 	.word	0x08047c5c
 80088ac:	08047a04 	.word	0x08047a04
 80088b0:	200029c8 	.word	0x200029c8
 80088b4:	08008841 	.word	0x08008841

080088b8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80088b8:	2000      	movs	r0, #0
 80088ba:	4770      	bx	lr

080088bc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80088bc:	2000      	movs	r0, #0
 80088be:	4770      	bx	lr

080088c0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088c0:	b40e      	push	{r1, r2, r3}
 80088c2:	b503      	push	{r0, r1, lr}
 80088c4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088c6:	2100      	movs	r1, #0
{
 80088c8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80088cc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088ce:	f00f f9bd 	bl	8017c4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088d2:	b002      	add	sp, #8
 80088d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80088d8:	b003      	add	sp, #12
 80088da:	4770      	bx	lr

080088dc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088dc:	b40c      	push	{r2, r3}
 80088de:	b507      	push	{r0, r1, r2, lr}
 80088e0:	ab04      	add	r3, sp, #16
 80088e2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80088e6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80088e8:	f00f f9b0 	bl	8017c4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088ec:	b003      	add	sp, #12
 80088ee:	f85d eb04 	ldr.w	lr, [sp], #4
 80088f2:	b002      	add	sp, #8
 80088f4:	4770      	bx	lr
	...

080088f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80088f8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80088fa:	b510      	push	{r4, lr}
 80088fc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80088fe:	b373      	cbz	r3, 800895e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008900:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008902:	b92b      	cbnz	r3, 8008910 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008904:	4b18      	ldr	r3, [pc, #96]	; (8008968 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008906:	4a19      	ldr	r2, [pc, #100]	; (800896c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008908:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800890a:	4819      	ldr	r0, [pc, #100]	; (8008970 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800890c:	f023 f8a8 	bl	802ba60 <__assert_func>
            return buffer[pos];
 8008910:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008912:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008916:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008918:	b30b      	cbz	r3, 800895e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800891a:	f010 fdd2 	bl	80194c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800891e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008920:	2b01      	cmp	r3, #1
 8008922:	d803      	bhi.n	800892c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008924:	4b13      	ldr	r3, [pc, #76]	; (8008974 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008926:	4a14      	ldr	r2, [pc, #80]	; (8008978 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008928:	21cb      	movs	r1, #203	; 0xcb
 800892a:	e7ee      	b.n	800890a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800892c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800892e:	1c53      	adds	r3, r2, #1
 8008930:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008932:	2b09      	cmp	r3, #9
 8008934:	4619      	mov	r1, r3
 8008936:	bf88      	it	hi
 8008938:	f1a3 010a 	subhi.w	r1, r3, #10
 800893c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008940:	f640 103f 	movw	r0, #2367	; 0x93f
 8008944:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008946:	4281      	cmp	r1, r0
 8008948:	d109      	bne.n	800895e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800894a:	2b0a      	cmp	r3, #10
 800894c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008950:	bf28      	it	cs
 8008952:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008954:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008958:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800895a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800895c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800895e:	4620      	mov	r0, r4
}
 8008960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008964:	f010 bcb0 	b.w	80192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008968:	0802ee54 	.word	0x0802ee54
 800896c:	0802ee5d 	.word	0x0802ee5d
 8008970:	0802ef08 	.word	0x0802ef08
 8008974:	0802ef52 	.word	0x0802ef52
 8008978:	0802ef60 	.word	0x0802ef60

0800897c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800897c:	f010 bc6b 	b.w	8019256 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008980 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008980:	b510      	push	{r4, lr}
 8008982:	b086      	sub	sp, #24
 8008984:	ac02      	add	r4, sp, #8
 8008986:	e884 0006 	stmia.w	r4, {r1, r2}
 800898a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800898c:	ab0a      	add	r3, sp, #40	; 0x28
 800898e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008990:	9301      	str	r3, [sp, #4]
 8008992:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008994:	9300      	str	r3, [sp, #0]
 8008996:	4621      	mov	r1, r4
 8008998:	9b08      	ldr	r3, [sp, #32]
 800899a:	f00d fd1b 	bl	80163d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800899e:	b006      	add	sp, #24
 80089a0:	bd10      	pop	{r4, pc}
	...

080089a4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80089a4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80089a6:	bb18      	cbnz	r0, 80089f0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80089a8:	4b12      	ldr	r3, [pc, #72]	; (80089f4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80089aa:	4813      	ldr	r0, [pc, #76]	; (80089f8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80089ac:	681c      	ldr	r4, [r3, #0]
 80089ae:	4913      	ldr	r1, [pc, #76]	; (80089fc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80089b0:	b1b4      	cbz	r4, 80089e0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80089b2:	6822      	ldr	r2, [r4, #0]
 80089b4:	4422      	add	r2, r4
 80089b6:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80089b8:	6862      	ldr	r2, [r4, #4]
 80089ba:	4422      	add	r2, r4
 80089bc:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80089be:	68a2      	ldr	r2, [r4, #8]
 80089c0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80089c2:	4b0f      	ldr	r3, [pc, #60]	; (8008a00 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80089c4:	2200      	movs	r2, #0
 80089c6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80089c8:	f000 f838 	bl	8008a3c <_ZN17TypedTextDatabase8getFontsEv>
 80089cc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80089ce:	f000 f833 	bl	8008a38 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80089d2:	4b0c      	ldr	r3, [pc, #48]	; (8008a04 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80089d4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80089d6:	4b0c      	ldr	r3, [pc, #48]	; (8008a08 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80089d8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80089da:	4b0c      	ldr	r3, [pc, #48]	; (8008a0c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80089dc:	8018      	strh	r0, [r3, #0]
    }
}
 80089de:	e007      	b.n	80089f0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80089e0:	4b0b      	ldr	r3, [pc, #44]	; (8008a10 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80089e2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80089e4:	4b0b      	ldr	r3, [pc, #44]	; (8008a14 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80089e6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80089e8:	4b0b      	ldr	r3, [pc, #44]	; (8008a18 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80089ea:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80089ec:	2c00      	cmp	r4, #0
 80089ee:	d1e8      	bne.n	80089c2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80089f0:	bd38      	pop	{r3, r4, r5, pc}
 80089f2:	bf00      	nop
 80089f4:	200029f4 	.word	0x200029f4
 80089f8:	200029f8 	.word	0x200029f8
 80089fc:	200029fc 	.word	0x200029fc
 8008a00:	20002a00 	.word	0x20002a00
 8008a04:	2001388c 	.word	0x2001388c
 8008a08:	20013894 	.word	0x20013894
 8008a0c:	20013890 	.word	0x20013890
 8008a10:	08047dc0 	.word	0x08047dc0
 8008a14:	08047c60 	.word	0x08047c60
 8008a18:	080482dc 	.word	0x080482dc

08008a1c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008a1c:	4b04      	ldr	r3, [pc, #16]	; (8008a30 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008a1e:	681b      	ldr	r3, [r3, #0]
 8008a20:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008a24:	4b03      	ldr	r3, [pc, #12]	; (8008a34 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008a26:	681b      	ldr	r3, [r3, #0]
}
 8008a28:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008a2c:	4770      	bx	lr
 8008a2e:	bf00      	nop
 8008a30:	200029fc 	.word	0x200029fc
 8008a34:	200029f8 	.word	0x200029f8

08008a38 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008a38:	2058      	movs	r0, #88	; 0x58
 8008a3a:	4770      	bx	lr

08008a3c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008a3c:	4800      	ldr	r0, [pc, #0]	; (8008a40 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008a3e:	4770      	bx	lr
 8008a40:	20002a04 	.word	0x20002a04

08008a44 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008a44:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008a46:	f7ff febf 	bl	80087c8 <_Z23getFont_verdana_19_4bppv>
};
 8008a4a:	4c06      	ldr	r4, [pc, #24]	; (8008a64 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008a4c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008a4e:	f7ff fef9 	bl	8008844 <_Z23getFont_verdana_40_4bppv>
};
 8008a52:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008a54:	f7ff fe3c 	bl	80086d0 <_Z23getFont_verdana_10_4bppv>
};
 8008a58:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008a5a:	f7ff fe77 	bl	800874c <_Z23getFont_verdana_12_4bppv>
};
 8008a5e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008a60:	bd10      	pop	{r4, pc}
 8008a62:	bf00      	nop
 8008a64:	20002a04 	.word	0x20002a04

08008a68 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008a68:	4770      	bx	lr

08008a6a <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008a6a:	3804      	subs	r0, #4
 8008a6c:	4770      	bx	lr

08008a6e <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008a6e:	4770      	bx	lr

08008a70 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008a70:	4770      	bx	lr

08008a72 <_ZN24Calibration_PadPresenterD0Ev>:
 8008a72:	b510      	push	{r4, lr}
 8008a74:	2110      	movs	r1, #16
 8008a76:	4604      	mov	r4, r0
 8008a78:	f022 f9df 	bl	802ae3a <_ZdlPvj>
 8008a7c:	4620      	mov	r0, r4
 8008a7e:	bd10      	pop	{r4, pc}

08008a80 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008a80:	f1a0 0004 	sub.w	r0, r0, #4
 8008a84:	e7f5      	b.n	8008a72 <_ZN24Calibration_PadPresenterD0Ev>

08008a86 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008a86:	4770      	bx	lr

08008a88 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008a88:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008a8a:	2200      	movs	r2, #0
 8008a8c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a8e:	4a04      	ldr	r2, [pc, #16]	; (8008aa0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008a90:	60c1      	str	r1, [r0, #12]
 8008a92:	f102 0408 	add.w	r4, r2, #8
 8008a96:	3224      	adds	r2, #36	; 0x24
 8008a98:	6004      	str	r4, [r0, #0]
 8008a9a:	6042      	str	r2, [r0, #4]
}
 8008a9c:	bd10      	pop	{r4, pc}
 8008a9e:	bf00      	nop
 8008aa0:	0802f034 	.word	0x0802f034

08008aa4 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008aa4:	4770      	bx	lr

08008aa6 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008aa6:	4770      	bx	lr

08008aa8 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008aa8:	b510      	push	{r4, lr}
 8008aaa:	4b03      	ldr	r3, [pc, #12]	; (8008ab8 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008aac:	6003      	str	r3, [r0, #0]
 8008aae:	4604      	mov	r4, r0
 8008ab0:	f7f9 ff5a 	bl	8002968 <_ZN23Calibration_PadViewBaseD1Ev>
 8008ab4:	4620      	mov	r0, r4
 8008ab6:	bd10      	pop	{r4, pc}
 8008ab8:	0802f06c 	.word	0x0802f06c

08008abc <_ZN19Calibration_PadViewD0Ev>:
 8008abc:	b510      	push	{r4, lr}
 8008abe:	4604      	mov	r4, r0
 8008ac0:	f7ff fff2 	bl	8008aa8 <_ZN19Calibration_PadViewD1Ev>
 8008ac4:	4620      	mov	r0, r4
 8008ac6:	f641 5104 	movw	r1, #7428	; 0x1d04
 8008aca:	f022 f9b6 	bl	802ae3a <_ZdlPvj>
 8008ace:	4620      	mov	r0, r4
 8008ad0:	bd10      	pop	{r4, pc}
	...

08008ad4 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008ad4:	b510      	push	{r4, lr}
 8008ad6:	4604      	mov	r4, r0
 8008ad8:	f7fa fb32 	bl	8003140 <_ZN23Calibration_PadViewBaseC1Ev>
 8008adc:	4b01      	ldr	r3, [pc, #4]	; (8008ae4 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008ade:	6023      	str	r3, [r4, #0]
}
 8008ae0:	4620      	mov	r0, r4
 8008ae2:	bd10      	pop	{r4, pc}
 8008ae4:	0802f06c 	.word	0x0802f06c

08008ae8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008ae8:	b570      	push	{r4, r5, r6, lr}
 8008aea:	4604      	mov	r4, r0
 8008aec:	b0ca      	sub	sp, #296	; 0x128
 8008aee:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8008af2:	4631      	mov	r1, r6
 8008af4:	a80d      	add	r0, sp, #52	; 0x34
 8008af6:	f7fa f84f 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008afa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008afe:	9317      	str	r3, [sp, #92]	; 0x5c
 8008b00:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008b04:	9318      	str	r3, [sp, #96]	; 0x60
 8008b06:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008b0a:	4a57      	ldr	r2, [pc, #348]	; (8008c68 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 8008b0c:	9319      	str	r3, [sp, #100]	; 0x64
 8008b0e:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8008b12:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008b16:	920d      	str	r2, [sp, #52]	; 0x34
 8008b18:	a81b      	add	r0, sp, #108	; 0x6c
 8008b1a:	931a      	str	r3, [sp, #104]	; 0x68
 8008b1c:	f7fa f83c 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b20:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008b24:	9325      	str	r3, [sp, #148]	; 0x94
 8008b26:	4b51      	ldr	r3, [pc, #324]	; (8008c6c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 8008b28:	931b      	str	r3, [sp, #108]	; 0x6c
 8008b2a:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8008b2e:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 8008b32:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008b36:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008b3a:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 8008b3e:	a827      	add	r0, sp, #156	; 0x9c
 8008b40:	f7fa f82a 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b44:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008b48:	9331      	str	r3, [sp, #196]	; 0xc4
 8008b4a:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008b4e:	4b48      	ldr	r3, [pc, #288]	; (8008c70 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 8008b50:	9327      	str	r3, [sp, #156]	; 0x9c
 8008b52:	a832      	add	r0, sp, #200	; 0xc8
 8008b54:	f7fa f820 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008b58:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008b5c:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 8008b60:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008b64:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8008b68:	4b42      	ldr	r3, [pc, #264]	; (8008c74 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8008b6a:	9332      	str	r3, [sp, #200]	; 0xc8
 8008b6c:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008b70:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 8008b74:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008b78:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008b7c:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 8008b80:	a83e      	add	r0, sp, #248	; 0xf8
 8008b82:	f7fa f809 	bl	8002b98 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b86:	4b3c      	ldr	r3, [pc, #240]	; (8008c78 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 8008b88:	933e      	str	r3, [sp, #248]	; 0xf8
 8008b8a:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008b8e:	4d3b      	ldr	r5, [pc, #236]	; (8008c7c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 8008b90:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8008b94:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008b98:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 8008b9c:	a901      	add	r1, sp, #4
 8008b9e:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008ba2:	4837      	ldr	r0, [pc, #220]	; (8008c80 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8008ba4:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 8008ba8:	220c      	movs	r2, #12
 8008baa:	f7f7 fe51 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008bae:	9b01      	ldr	r3, [sp, #4]
 8008bb0:	462a      	mov	r2, r5
 8008bb2:	210a      	movs	r1, #10
 8008bb4:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8008bb8:	f011 fa38 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008bbc:	9b02      	ldr	r3, [sp, #8]
 8008bbe:	462a      	mov	r2, r5
 8008bc0:	210a      	movs	r1, #10
 8008bc2:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8008bc6:	f011 fa31 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008bca:	9b03      	ldr	r3, [sp, #12]
 8008bcc:	462a      	mov	r2, r5
 8008bce:	210a      	movs	r1, #10
 8008bd0:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8008bd4:	f011 fa2a 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008bd8:	9b04      	ldr	r3, [sp, #16]
 8008bda:	462a      	mov	r2, r5
 8008bdc:	210a      	movs	r1, #10
 8008bde:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8008be2:	f011 fa23 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008be6:	9b05      	ldr	r3, [sp, #20]
 8008be8:	462a      	mov	r2, r5
 8008bea:	210a      	movs	r1, #10
 8008bec:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8008bf0:	f011 fa1c 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008bf4:	9b06      	ldr	r3, [sp, #24]
 8008bf6:	462a      	mov	r2, r5
 8008bf8:	210a      	movs	r1, #10
 8008bfa:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8008bfe:	f011 fa15 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 8008c02:	9b07      	ldr	r3, [sp, #28]
 8008c04:	462a      	mov	r2, r5
 8008c06:	210a      	movs	r1, #10
 8008c08:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8008c0c:	f011 fa0e 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 8008c10:	9b08      	ldr	r3, [sp, #32]
 8008c12:	462a      	mov	r2, r5
 8008c14:	210a      	movs	r1, #10
 8008c16:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8008c1a:	f011 fa07 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 8008c1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c20:	462a      	mov	r2, r5
 8008c22:	210a      	movs	r1, #10
 8008c24:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8008c28:	f011 fa00 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 8008c2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008c2e:	462a      	mov	r2, r5
 8008c30:	210a      	movs	r1, #10
 8008c32:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8008c36:	f011 f9f9 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8008c3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008c3c:	462a      	mov	r2, r5
 8008c3e:	210a      	movs	r1, #10
 8008c40:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8008c44:	f011 f9f2 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8008c48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008c4a:	462a      	mov	r2, r5
 8008c4c:	210a      	movs	r1, #10
 8008c4e:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8008c52:	f011 f9eb 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008c56:	4630      	mov	r0, r6
 8008c58:	f00f f922 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008c5c:	a80d      	add	r0, sp, #52	; 0x34
 8008c5e:	f008 f9ed 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
 8008c62:	b04a      	add	sp, #296	; 0x128
 8008c64:	bd70      	pop	{r4, r5, r6, pc}
 8008c66:	bf00      	nop
 8008c68:	0802f6ec 	.word	0x0802f6ec
 8008c6c:	0802f7b0 	.word	0x0802f7b0
 8008c70:	0802d600 	.word	0x0802d600
 8008c74:	0802fbac 	.word	0x0802fbac
 8008c78:	0802fd90 	.word	0x0802fd90
 8008c7c:	0802d542 	.word	0x0802d542
 8008c80:	081e0000 	.word	0x081e0000

08008c84 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008c84:	f7f9 be30 	b.w	80028e8 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008c88 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008c88:	4770      	bx	lr

08008c8a <_ZN19FrontendApplicationD0Ev>:
 8008c8a:	b510      	push	{r4, lr}
 8008c8c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008c90:	4604      	mov	r4, r0
 8008c92:	f022 f8d2 	bl	802ae3a <_ZdlPvj>
 8008c96:	4620      	mov	r0, r4
 8008c98:	bd10      	pop	{r4, pc}

08008c9a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008c9a:	b510      	push	{r4, lr}
 8008c9c:	4604      	mov	r4, r0
    {
        model.tick();
 8008c9e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008ca2:	f000 fafb 	bl	800929c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008ca6:	4620      	mov	r0, r4
    }
 8008ca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008cac:	f00e b8d4 	b.w	8016e58 <_ZN8touchgfx11Application15handleTickEventEv>

08008cb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008cb0:	b510      	push	{r4, lr}
 8008cb2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008cb4:	f7fb fe40 	bl	8004938 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008cb8:	4b01      	ldr	r3, [pc, #4]	; (8008cc0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008cba:	6023      	str	r3, [r4, #0]
{

}
 8008cbc:	4620      	mov	r0, r4
 8008cbe:	bd10      	pop	{r4, pc}
 8008cc0:	0802f0ac 	.word	0x0802f0ac

08008cc4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008cc4:	4770      	bx	lr

08008cc6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008cc6:	3804      	subs	r0, #4
 8008cc8:	4770      	bx	lr

08008cca <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008cca:	4770      	bx	lr

08008ccc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008ccc:	68c0      	ldr	r0, [r0, #12]
 8008cce:	6803      	ldr	r3, [r0, #0]
 8008cd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cd2:	4718      	bx	r3

08008cd4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008cd4:	f1a0 0004 	sub.w	r0, r0, #4
 8008cd8:	f7ff bff8 	b.w	8008ccc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008cdc <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008cdc:	b510      	push	{r4, lr}
 8008cde:	2110      	movs	r1, #16
 8008ce0:	4604      	mov	r4, r0
 8008ce2:	f022 f8aa 	bl	802ae3a <_ZdlPvj>
 8008ce6:	4620      	mov	r0, r4
 8008ce8:	bd10      	pop	{r4, pc}

08008cea <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008cea:	f1a0 0004 	sub.w	r0, r0, #4
 8008cee:	e7f5      	b.n	8008cdc <_ZN18Main_MenuPresenterD0Ev>

08008cf0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008cf0:	b510      	push	{r4, lr}
 8008cf2:	2200      	movs	r2, #0
 8008cf4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008cf6:	4a04      	ldr	r2, [pc, #16]	; (8008d08 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008cf8:	60c1      	str	r1, [r0, #12]
 8008cfa:	f102 0408 	add.w	r4, r2, #8
 8008cfe:	3224      	adds	r2, #36	; 0x24
 8008d00:	6004      	str	r4, [r0, #0]
 8008d02:	6042      	str	r2, [r0, #4]
}
 8008d04:	bd10      	pop	{r4, pc}
 8008d06:	bf00      	nop
 8008d08:	0802f0f8 	.word	0x0802f0f8

08008d0c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008d0c:	4770      	bx	lr
	...

08008d10 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008d10:	b510      	push	{r4, lr}
 8008d12:	4b03      	ldr	r3, [pc, #12]	; (8008d20 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008d14:	6003      	str	r3, [r0, #0]
 8008d16:	4604      	mov	r4, r0
 8008d18:	f7fc ff88 	bl	8005c2c <_ZN17Main_MenuViewBaseD1Ev>
 8008d1c:	4620      	mov	r0, r4
 8008d1e:	bd10      	pop	{r4, pc}
 8008d20:	0802f130 	.word	0x0802f130

08008d24 <_ZN13Main_MenuViewD0Ev>:
 8008d24:	b510      	push	{r4, lr}
 8008d26:	4604      	mov	r4, r0
 8008d28:	f7ff fff2 	bl	8008d10 <_ZN13Main_MenuViewD1Ev>
 8008d2c:	4620      	mov	r0, r4
 8008d2e:	f241 117c 	movw	r1, #4476	; 0x117c
 8008d32:	f022 f882 	bl	802ae3a <_ZdlPvj>
 8008d36:	4620      	mov	r0, r4
 8008d38:	bd10      	pop	{r4, pc}
	...

08008d3c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008d3c:	b510      	push	{r4, lr}
 8008d3e:	4604      	mov	r4, r0
 8008d40:	f7fc ffbe 	bl	8005cc0 <_ZN17Main_MenuViewBaseC1Ev>
 8008d44:	4b01      	ldr	r3, [pc, #4]	; (8008d4c <_ZN13Main_MenuViewC1Ev+0x10>)
 8008d46:	6023      	str	r3, [r4, #0]
}
 8008d48:	4620      	mov	r0, r4
 8008d4a:	bd10      	pop	{r4, pc}
 8008d4c:	0802f130 	.word	0x0802f130

08008d50 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008d50:	f7fc bf48 	b.w	8005be4 <_ZN17Main_MenuViewBase11setupScreenEv>

08008d54 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008d54:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d56:	4a0a      	ldr	r2, [pc, #40]	; (8008d80 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008d58:	4605      	mov	r5, r0
 8008d5a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d5c:	460b      	mov	r3, r1
 8008d5e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008d62:	2104      	movs	r1, #4
 8008d64:	f011 f962 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008d68:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d6c:	f00f f898 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d70:	b92c      	cbnz	r4, 8008d7e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008d72:	f00d ffad 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d7a:	f7fb bedd 	b.w	8004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d7e:	bd38      	pop	{r3, r4, r5, pc}
 8008d80:	0802d542 	.word	0x0802d542

08008d84 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008d84:	4770      	bx	lr

08008d86 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008d86:	3804      	subs	r0, #4
 8008d88:	4770      	bx	lr

08008d8a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008d8a:	4770      	bx	lr

08008d8c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d8c:	68c0      	ldr	r0, [r0, #12]
 8008d8e:	6803      	ldr	r3, [r0, #0]
 8008d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d92:	4718      	bx	r3

08008d94 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d94:	f1a0 0004 	sub.w	r0, r0, #4
 8008d98:	f7ff bff8 	b.w	8008d8c <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008d9c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008d9c:	b510      	push	{r4, lr}
 8008d9e:	2110      	movs	r1, #16
 8008da0:	4604      	mov	r4, r0
 8008da2:	f022 f84a 	bl	802ae3a <_ZdlPvj>
 8008da6:	4620      	mov	r0, r4
 8008da8:	bd10      	pop	{r4, pc}

08008daa <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008daa:	f1a0 0004 	sub.w	r0, r0, #4
 8008dae:	e7f5      	b.n	8008d9c <_ZN20MeasurementPresenterD0Ev>

08008db0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008db0:	b510      	push	{r4, lr}
 8008db2:	2200      	movs	r2, #0
 8008db4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008db6:	4a04      	ldr	r2, [pc, #16]	; (8008dc8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008db8:	60c1      	str	r1, [r0, #12]
 8008dba:	f102 0408 	add.w	r4, r2, #8
 8008dbe:	3224      	adds	r2, #36	; 0x24
 8008dc0:	6004      	str	r4, [r0, #0]
 8008dc2:	6042      	str	r2, [r0, #4]
}
 8008dc4:	bd10      	pop	{r4, pc}
 8008dc6:	bf00      	nop
 8008dc8:	0802f160 	.word	0x0802f160

08008dcc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008dcc:	4770      	bx	lr
	...

08008dd0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008dd0:	b510      	push	{r4, lr}
 8008dd2:	4b03      	ldr	r3, [pc, #12]	; (8008de0 <_ZN15MeasurementViewD1Ev+0x10>)
 8008dd4:	6003      	str	r3, [r0, #0]
 8008dd6:	4604      	mov	r4, r0
 8008dd8:	f7fd f9e2 	bl	80061a0 <_ZN19MeasurementViewBaseD1Ev>
 8008ddc:	4620      	mov	r0, r4
 8008dde:	bd10      	pop	{r4, pc}
 8008de0:	0802f198 	.word	0x0802f198

08008de4 <_ZN15MeasurementViewD0Ev>:
 8008de4:	b510      	push	{r4, lr}
 8008de6:	4604      	mov	r4, r0
 8008de8:	f7ff fff2 	bl	8008dd0 <_ZN15MeasurementViewD1Ev>
 8008dec:	4620      	mov	r0, r4
 8008dee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008df2:	f022 f822 	bl	802ae3a <_ZdlPvj>
 8008df6:	4620      	mov	r0, r4
 8008df8:	bd10      	pop	{r4, pc}
	...

08008dfc <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008dfc:	b510      	push	{r4, lr}
 8008dfe:	4604      	mov	r4, r0
 8008e00:	f7fd fa08 	bl	8006214 <_ZN19MeasurementViewBaseC1Ev>
 8008e04:	4b01      	ldr	r3, [pc, #4]	; (8008e0c <_ZN15MeasurementViewC1Ev+0x10>)
 8008e06:	6023      	str	r3, [r4, #0]
}
 8008e08:	4620      	mov	r0, r4
 8008e0a:	bd10      	pop	{r4, pc}
 8008e0c:	0802f198 	.word	0x0802f198

08008e10 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008e10:	f7fd b9a2 	b.w	8006158 <_ZN19MeasurementViewBase11setupScreenEv>

08008e14 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008e14:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e16:	4a0a      	ldr	r2, [pc, #40]	; (8008e40 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008e18:	4605      	mov	r5, r0
 8008e1a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e1c:	460b      	mov	r3, r1
 8008e1e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008e22:	2104      	movs	r1, #4
 8008e24:	f011 f902 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008e28:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e2c:	f00f f838 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e30:	b92c      	cbnz	r4, 8008e3e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008e32:	f00d ff4d 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e3a:	f7fb be7d 	b.w	8004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e3e:	bd38      	pop	{r3, r4, r5, pc}
 8008e40:	0802d542 	.word	0x0802d542

08008e44 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008e44:	4770      	bx	lr

08008e46 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008e46:	3804      	subs	r0, #4
 8008e48:	4770      	bx	lr

08008e4a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008e4a:	4770      	bx	lr

08008e4c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e4c:	68c0      	ldr	r0, [r0, #12]
 8008e4e:	6803      	ldr	r3, [r0, #0]
 8008e50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e52:	4718      	bx	r3

08008e54 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e54:	f1a0 0004 	sub.w	r0, r0, #4
 8008e58:	f7ff bff8 	b.w	8008e4c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008e5c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008e5c:	b510      	push	{r4, lr}
 8008e5e:	2110      	movs	r1, #16
 8008e60:	4604      	mov	r4, r0
 8008e62:	f021 ffea 	bl	802ae3a <_ZdlPvj>
 8008e66:	4620      	mov	r0, r4
 8008e68:	bd10      	pop	{r4, pc}

08008e6a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008e6a:	f1a0 0004 	sub.w	r0, r0, #4
 8008e6e:	e7f5      	b.n	8008e5c <_ZN29Measurement_AccuratePresenterD0Ev>

08008e70 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008e70:	b510      	push	{r4, lr}
 8008e72:	2200      	movs	r2, #0
 8008e74:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e76:	4a04      	ldr	r2, [pc, #16]	; (8008e88 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008e78:	60c1      	str	r1, [r0, #12]
 8008e7a:	f102 0408 	add.w	r4, r2, #8
 8008e7e:	3224      	adds	r2, #36	; 0x24
 8008e80:	6004      	str	r4, [r0, #0]
 8008e82:	6042      	str	r2, [r0, #4]
}
 8008e84:	bd10      	pop	{r4, pc}
 8008e86:	bf00      	nop
 8008e88:	0802f1c8 	.word	0x0802f1c8

08008e8c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008e8c:	4770      	bx	lr
	...

08008e90 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008e90:	b510      	push	{r4, lr}
 8008e92:	4b03      	ldr	r3, [pc, #12]	; (8008ea0 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008e94:	6003      	str	r3, [r0, #0]
 8008e96:	4604      	mov	r4, r0
 8008e98:	f7fd fc04 	bl	80066a4 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008e9c:	4620      	mov	r0, r4
 8008e9e:	bd10      	pop	{r4, pc}
 8008ea0:	0802f200 	.word	0x0802f200

08008ea4 <_ZN24Measurement_AccurateViewD0Ev>:
 8008ea4:	b510      	push	{r4, lr}
 8008ea6:	4604      	mov	r4, r0
 8008ea8:	f7ff fff2 	bl	8008e90 <_ZN24Measurement_AccurateViewD1Ev>
 8008eac:	4620      	mov	r0, r4
 8008eae:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008eb2:	f021 ffc2 	bl	802ae3a <_ZdlPvj>
 8008eb6:	4620      	mov	r0, r4
 8008eb8:	bd10      	pop	{r4, pc}
	...

08008ebc <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008ebc:	b510      	push	{r4, lr}
 8008ebe:	4604      	mov	r4, r0
 8008ec0:	f7fd fc2a 	bl	8006718 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008ec4:	4b01      	ldr	r3, [pc, #4]	; (8008ecc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008ec6:	6023      	str	r3, [r4, #0]
}
 8008ec8:	4620      	mov	r0, r4
 8008eca:	bd10      	pop	{r4, pc}
 8008ecc:	0802f200 	.word	0x0802f200

08008ed0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008ed0:	f7fd bbc4 	b.w	800665c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008ed4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008ed4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ed6:	4a0a      	ldr	r2, [pc, #40]	; (8008f00 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008ed8:	4605      	mov	r5, r0
 8008eda:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008edc:	460b      	mov	r3, r1
 8008ede:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008ee2:	2104      	movs	r1, #4
 8008ee4:	f011 f8a2 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ee8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008eec:	f00e ffd8 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008ef0:	b92c      	cbnz	r4, 8008efe <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008ef2:	f00d feed 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008ef6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008efa:	f7fb be1d 	b.w	8004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008efe:	bd38      	pop	{r3, r4, r5, pc}
 8008f00:	0802d542 	.word	0x0802d542

08008f04 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008f04:	4770      	bx	lr

08008f06 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008f06:	3804      	subs	r0, #4
 8008f08:	4770      	bx	lr

08008f0a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008f0a:	4770      	bx	lr

08008f0c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008f0c:	4770      	bx	lr

08008f0e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f0e:	b510      	push	{r4, lr}
 8008f10:	2110      	movs	r1, #16
 8008f12:	4604      	mov	r4, r0
 8008f14:	f021 ff91 	bl	802ae3a <_ZdlPvj>
 8008f18:	4620      	mov	r0, r4
 8008f1a:	bd10      	pop	{r4, pc}

08008f1c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f1c:	f1a0 0004 	sub.w	r0, r0, #4
 8008f20:	e7f5      	b.n	8008f0e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008f22 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008f22:	4770      	bx	lr

08008f24 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008f24:	b510      	push	{r4, lr}
 8008f26:	2200      	movs	r2, #0
 8008f28:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f2a:	4a04      	ldr	r2, [pc, #16]	; (8008f3c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008f2c:	60c1      	str	r1, [r0, #12]
 8008f2e:	f102 0408 	add.w	r4, r2, #8
 8008f32:	3224      	adds	r2, #36	; 0x24
 8008f34:	6004      	str	r4, [r0, #0]
 8008f36:	6042      	str	r2, [r0, #4]
}
 8008f38:	bd10      	pop	{r4, pc}
 8008f3a:	bf00      	nop
 8008f3c:	0802f230 	.word	0x0802f230

08008f40 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008f40:	4770      	bx	lr
	...

08008f44 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008f44:	b510      	push	{r4, lr}
 8008f46:	4b03      	ldr	r3, [pc, #12]	; (8008f54 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008f48:	6003      	str	r3, [r0, #0]
 8008f4a:	4604      	mov	r4, r0
 8008f4c:	f7fd fe28 	bl	8006ba0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008f50:	4620      	mov	r0, r4
 8008f52:	bd10      	pop	{r4, pc}
 8008f54:	0802f268 	.word	0x0802f268

08008f58 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008f58:	b510      	push	{r4, lr}
 8008f5a:	4604      	mov	r4, r0
 8008f5c:	f7ff fff2 	bl	8008f44 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008f60:	4620      	mov	r0, r4
 8008f62:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f66:	f021 ff68 	bl	802ae3a <_ZdlPvj>
 8008f6a:	4620      	mov	r0, r4
 8008f6c:	bd10      	pop	{r4, pc}
	...

08008f70 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008f70:	b510      	push	{r4, lr}
 8008f72:	4604      	mov	r4, r0
 8008f74:	f7fd fe3c 	bl	8006bf0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008f78:	4b01      	ldr	r3, [pc, #4]	; (8008f80 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008f7a:	6023      	str	r3, [r4, #0]
}
 8008f7c:	4620      	mov	r0, r4
 8008f7e:	bd10      	pop	{r4, pc}
 8008f80:	0802f268 	.word	0x0802f268

08008f84 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008f84:	f7fd bde8 	b.w	8006b58 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008f88 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008f88:	4770      	bx	lr

08008f8a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008f8a:	3804      	subs	r0, #4
 8008f8c:	4770      	bx	lr

08008f8e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008f8e:	4770      	bx	lr

08008f90 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008f90:	4770      	bx	lr

08008f92 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f92:	b510      	push	{r4, lr}
 8008f94:	2110      	movs	r1, #16
 8008f96:	4604      	mov	r4, r0
 8008f98:	f021 ff4f 	bl	802ae3a <_ZdlPvj>
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	bd10      	pop	{r4, pc}

08008fa0 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008fa0:	f1a0 0004 	sub.w	r0, r0, #4
 8008fa4:	e7f5      	b.n	8008f92 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008fa6 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008fa6:	4770      	bx	lr

08008fa8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008fa8:	b510      	push	{r4, lr}
 8008faa:	2200      	movs	r2, #0
 8008fac:	6082      	str	r2, [r0, #8]
    : view(v)
 8008fae:	4a04      	ldr	r2, [pc, #16]	; (8008fc0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008fb0:	60c1      	str	r1, [r0, #12]
 8008fb2:	f102 0408 	add.w	r4, r2, #8
 8008fb6:	3224      	adds	r2, #36	; 0x24
 8008fb8:	6004      	str	r4, [r0, #0]
 8008fba:	6042      	str	r2, [r0, #4]
}
 8008fbc:	bd10      	pop	{r4, pc}
 8008fbe:	bf00      	nop
 8008fc0:	0802f294 	.word	0x0802f294

08008fc4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008fc4:	4770      	bx	lr
	...

08008fc8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008fc8:	b510      	push	{r4, lr}
 8008fca:	4b03      	ldr	r3, [pc, #12]	; (8008fd8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008fcc:	6003      	str	r3, [r0, #0]
 8008fce:	4604      	mov	r4, r0
 8008fd0:	f7fd ff96 	bl	8006f00 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008fd4:	4620      	mov	r0, r4
 8008fd6:	bd10      	pop	{r4, pc}
 8008fd8:	0802f2cc 	.word	0x0802f2cc

08008fdc <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008fdc:	b510      	push	{r4, lr}
 8008fde:	4604      	mov	r4, r0
 8008fe0:	f7ff fff2 	bl	8008fc8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008fe4:	4620      	mov	r0, r4
 8008fe6:	f241 015c 	movw	r1, #4188	; 0x105c
 8008fea:	f021 ff26 	bl	802ae3a <_ZdlPvj>
 8008fee:	4620      	mov	r0, r4
 8008ff0:	bd10      	pop	{r4, pc}
	...

08008ff4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008ff4:	b510      	push	{r4, lr}
 8008ff6:	4604      	mov	r4, r0
 8008ff8:	f7fd ffaa 	bl	8006f50 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008ffc:	4b01      	ldr	r3, [pc, #4]	; (8009004 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008ffe:	6023      	str	r3, [r4, #0]
}
 8009000:	4620      	mov	r0, r4
 8009002:	bd10      	pop	{r4, pc}
 8009004:	0802f2cc 	.word	0x0802f2cc

08009008 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009008:	f7fd bf56 	b.w	8006eb8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800900c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800900c:	4770      	bx	lr

0800900e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800900e:	3804      	subs	r0, #4
 8009010:	4770      	bx	lr

08009012 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009012:	4770      	bx	lr

08009014 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009014:	68c0      	ldr	r0, [r0, #12]
 8009016:	6803      	ldr	r3, [r0, #0]
 8009018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800901a:	4718      	bx	r3

0800901c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800901c:	f1a0 0004 	sub.w	r0, r0, #4
 8009020:	f7ff bff8 	b.w	8009014 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009024 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009024:	b510      	push	{r4, lr}
 8009026:	2110      	movs	r1, #16
 8009028:	4604      	mov	r4, r0
 800902a:	f021 ff06 	bl	802ae3a <_ZdlPvj>
 800902e:	4620      	mov	r0, r4
 8009030:	bd10      	pop	{r4, pc}

08009032 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009032:	f1a0 0004 	sub.w	r0, r0, #4
 8009036:	e7f5      	b.n	8009024 <_ZN27Measurement_SinglePresenterD0Ev>

08009038 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009038:	b510      	push	{r4, lr}
 800903a:	2200      	movs	r2, #0
 800903c:	6082      	str	r2, [r0, #8]
    : view(v)
 800903e:	4a04      	ldr	r2, [pc, #16]	; (8009050 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009040:	60c1      	str	r1, [r0, #12]
 8009042:	f102 0408 	add.w	r4, r2, #8
 8009046:	3224      	adds	r2, #36	; 0x24
 8009048:	6004      	str	r4, [r0, #0]
 800904a:	6042      	str	r2, [r0, #4]
}
 800904c:	bd10      	pop	{r4, pc}
 800904e:	bf00      	nop
 8009050:	0802f2f8 	.word	0x0802f2f8

08009054 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009054:	4770      	bx	lr
	...

08009058 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009058:	b510      	push	{r4, lr}
 800905a:	4b03      	ldr	r3, [pc, #12]	; (8009068 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800905c:	6003      	str	r3, [r0, #0]
 800905e:	4604      	mov	r4, r0
 8009060:	f7fe f8fe 	bl	8007260 <_ZN26Measurement_SingleViewBaseD1Ev>
 8009064:	4620      	mov	r0, r4
 8009066:	bd10      	pop	{r4, pc}
 8009068:	0802f330 	.word	0x0802f330

0800906c <_ZN22Measurement_SingleViewD0Ev>:
 800906c:	b510      	push	{r4, lr}
 800906e:	4604      	mov	r4, r0
 8009070:	f7ff fff2 	bl	8009058 <_ZN22Measurement_SingleViewD1Ev>
 8009074:	4620      	mov	r0, r4
 8009076:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800907a:	f021 fede 	bl	802ae3a <_ZdlPvj>
 800907e:	4620      	mov	r0, r4
 8009080:	bd10      	pop	{r4, pc}
	...

08009084 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009084:	b510      	push	{r4, lr}
 8009086:	4604      	mov	r4, r0
 8009088:	f7fe f924 	bl	80072d4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800908c:	4b01      	ldr	r3, [pc, #4]	; (8009094 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800908e:	6023      	str	r3, [r4, #0]
}
 8009090:	4620      	mov	r0, r4
 8009092:	bd10      	pop	{r4, pc}
 8009094:	0802f330 	.word	0x0802f330

08009098 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009098:	f7fe b8be 	b.w	8007218 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800909c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800909c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800909e:	4a0a      	ldr	r2, [pc, #40]	; (80090c8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80090a0:	4605      	mov	r5, r0
 80090a2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80090a4:	460b      	mov	r3, r1
 80090a6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80090aa:	2104      	movs	r1, #4
 80090ac:	f010 ffbe 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80090b0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80090b4:	f00e fef4 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80090b8:	b92c      	cbnz	r4, 80090c6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80090ba:	f00d fe09 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80090be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80090c2:	f7fb bd39 	b.w	8004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80090c6:	bd38      	pop	{r3, r4, r5, pc}
 80090c8:	0802d542 	.word	0x0802d542

080090cc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80090cc:	4770      	bx	lr

080090ce <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80090ce:	3804      	subs	r0, #4
 80090d0:	4770      	bx	lr

080090d2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80090d2:	4770      	bx	lr

080090d4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80090d4:	4770      	bx	lr

080090d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80090d6:	b510      	push	{r4, lr}
 80090d8:	2110      	movs	r1, #16
 80090da:	4604      	mov	r4, r0
 80090dc:	f021 fead 	bl	802ae3a <_ZdlPvj>
 80090e0:	4620      	mov	r0, r4
 80090e2:	bd10      	pop	{r4, pc}

080090e4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80090e4:	f1a0 0004 	sub.w	r0, r0, #4
 80090e8:	e7f5      	b.n	80090d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080090ea <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80090ea:	4770      	bx	lr

080090ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80090ec:	b510      	push	{r4, lr}
 80090ee:	2200      	movs	r2, #0
 80090f0:	6082      	str	r2, [r0, #8]
    : view(v)
 80090f2:	4a04      	ldr	r2, [pc, #16]	; (8009104 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80090f4:	60c1      	str	r1, [r0, #12]
 80090f6:	f102 0408 	add.w	r4, r2, #8
 80090fa:	3224      	adds	r2, #36	; 0x24
 80090fc:	6004      	str	r4, [r0, #0]
 80090fe:	6042      	str	r2, [r0, #4]
}
 8009100:	bd10      	pop	{r4, pc}
 8009102:	bf00      	nop
 8009104:	0802f360 	.word	0x0802f360

08009108 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009108:	4770      	bx	lr
	...

0800910c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800910c:	b510      	push	{r4, lr}
 800910e:	4b03      	ldr	r3, [pc, #12]	; (800911c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009110:	6003      	str	r3, [r0, #0]
 8009112:	4604      	mov	r4, r0
 8009114:	f7fe fb28 	bl	8007768 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009118:	4620      	mov	r0, r4
 800911a:	bd10      	pop	{r4, pc}
 800911c:	0802f3a0 	.word	0x0802f3a0

08009120 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009120:	b510      	push	{r4, lr}
 8009122:	4604      	mov	r4, r0
 8009124:	f7ff fff2 	bl	800910c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009128:	4620      	mov	r0, r4
 800912a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800912e:	f021 fe84 	bl	802ae3a <_ZdlPvj>
 8009132:	4620      	mov	r0, r4
 8009134:	bd10      	pop	{r4, pc}
	...

08009138 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009138:	b510      	push	{r4, lr}
 800913a:	4604      	mov	r4, r0
 800913c:	f7fe fb4e 	bl	80077dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009140:	4b01      	ldr	r3, [pc, #4]	; (8009148 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009142:	6023      	str	r3, [r4, #0]
}
 8009144:	4620      	mov	r0, r4
 8009146:	bd10      	pop	{r4, pc}
 8009148:	0802f3a0 	.word	0x0802f3a0

0800914c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800914c:	f7fe bae7 	b.w	800771e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009150 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009150:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009152:	4e2a      	ldr	r6, [pc, #168]	; (80091fc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009154:	4f2a      	ldr	r7, [pc, #168]	; (8009200 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8009156:	4604      	mov	r4, r0
 8009158:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 800915a:	6803      	ldr	r3, [r0, #0]
{
 800915c:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 800915e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009160:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009162:	2201      	movs	r2, #1
 8009164:	2180      	movs	r1, #128	; 0x80
 8009166:	4638      	mov	r0, r7
 8009168:	f000 ffe2 	bl	800a130 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 800916c:	f7f7 fc30 	bl	80009d0 <updateGUI_test>
 8009170:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8009172:	f7f8 f9eb 	bl	800154c <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009176:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8009178:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800917a:	2001      	movs	r0, #1
 800917c:	f7f7 fb74 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8009180:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8009184:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009186:	ed8d 0a04 	vstr	s0, [sp, #16]
 800918a:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 800918e:	9001      	str	r0, [sp, #4]
 8009190:	f00a fe3c 	bl	8013e0c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009194:	9801      	ldr	r0, [sp, #4]
 8009196:	f00e fe83 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800919a:	462b      	mov	r3, r5
 800919c:	4a19      	ldr	r2, [pc, #100]	; (8009204 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 800919e:	210a      	movs	r1, #10
 80091a0:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80091a4:	f010 ff42 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80091a8:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80091ac:	f00e fe78 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80091b0:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80091b2:	4a15      	ldr	r2, [pc, #84]	; (8009208 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091b4:	9303      	str	r3, [sp, #12]
 80091b6:	210a      	movs	r1, #10
 80091b8:	ab03      	add	r3, sp, #12
 80091ba:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80091be:	f011 f921 	bl	801a404 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80091c2:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80091c6:	f00e fe6b 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80091ca:	9b05      	ldr	r3, [sp, #20]
 80091cc:	4a0e      	ldr	r2, [pc, #56]	; (8009208 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091ce:	9303      	str	r3, [sp, #12]
 80091d0:	210a      	movs	r1, #10
 80091d2:	ab03      	add	r3, sp, #12
 80091d4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80091d8:	f011 f914 	bl	801a404 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80091dc:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80091e0:	f00e fe5e 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80091e4:	4638      	mov	r0, r7
 80091e6:	2200      	movs	r2, #0
 80091e8:	2180      	movs	r1, #128	; 0x80
 80091ea:	f000 ffa1 	bl	800a130 <HAL_GPIO_WritePin>
 80091ee:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091f0:	6803      	ldr	r3, [r0, #0]
 80091f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80091f4:	b007      	add	sp, #28
 80091f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091fa:	4718      	bx	r3
 80091fc:	20013834 	.word	0x20013834
 8009200:	40020000 	.word	0x40020000
 8009204:	0802d542 	.word	0x0802d542
 8009208:	0802f390 	.word	0x0802f390

0800920c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800920c:	4770      	bx	lr

0800920e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800920e:	3804      	subs	r0, #4
 8009210:	4770      	bx	lr

08009212 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8009212:	4770      	bx	lr

08009214 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009214:	4770      	bx	lr

08009216 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8009216:	b510      	push	{r4, lr}
 8009218:	2110      	movs	r1, #16
 800921a:	4604      	mov	r4, r0
 800921c:	f021 fe0d 	bl	802ae3a <_ZdlPvj>
 8009220:	4620      	mov	r0, r4
 8009222:	bd10      	pop	{r4, pc}

08009224 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009224:	f1a0 0004 	sub.w	r0, r0, #4
 8009228:	e7f5      	b.n	8009216 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800922a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800922a:	4770      	bx	lr

0800922c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800922c:	b510      	push	{r4, lr}
 800922e:	2200      	movs	r2, #0
 8009230:	6082      	str	r2, [r0, #8]
    : view(v)
 8009232:	4a04      	ldr	r2, [pc, #16]	; (8009244 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009234:	60c1      	str	r1, [r0, #12]
 8009236:	f102 0408 	add.w	r4, r2, #8
 800923a:	3224      	adds	r2, #36	; 0x24
 800923c:	6004      	str	r4, [r0, #0]
 800923e:	6042      	str	r2, [r0, #4]
}
 8009240:	bd10      	pop	{r4, pc}
 8009242:	bf00      	nop
 8009244:	0802f3d0 	.word	0x0802f3d0

08009248 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009248:	4770      	bx	lr
	...

0800924c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800924c:	b510      	push	{r4, lr}
 800924e:	4b03      	ldr	r3, [pc, #12]	; (800925c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009250:	6003      	str	r3, [r0, #0]
 8009252:	4604      	mov	r4, r0
 8009254:	f7fe fe22 	bl	8007e9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009258:	4620      	mov	r0, r4
 800925a:	bd10      	pop	{r4, pc}
 800925c:	0802f408 	.word	0x0802f408

08009260 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009260:	b510      	push	{r4, lr}
 8009262:	4604      	mov	r4, r0
 8009264:	f7ff fff2 	bl	800924c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009268:	4620      	mov	r0, r4
 800926a:	f241 015c 	movw	r1, #4188	; 0x105c
 800926e:	f021 fde4 	bl	802ae3a <_ZdlPvj>
 8009272:	4620      	mov	r0, r4
 8009274:	bd10      	pop	{r4, pc}
	...

08009278 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009278:	b510      	push	{r4, lr}
 800927a:	4604      	mov	r4, r0
 800927c:	f7fe fe36 	bl	8007eec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009280:	4b01      	ldr	r3, [pc, #4]	; (8009288 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009282:	6023      	str	r3, [r4, #0]
}
 8009284:	4620      	mov	r0, r4
 8009286:	bd10      	pop	{r4, pc}
 8009288:	0802f408 	.word	0x0802f408

0800928c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800928c:	f7fe bde2 	b.w	8007e54 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009290 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009290:	2100      	movs	r1, #0
 8009292:	223c      	movs	r2, #60	; 0x3c
 8009294:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009298:	4770      	bx	lr
	...

0800929c <_ZN5Model4tickEv>:

void Model::tick()
{
 800929c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800929e:	4d0a      	ldr	r5, [pc, #40]	; (80092c8 <_ZN5Model4tickEv+0x2c>)
{
 80092a0:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80092a2:	6828      	ldr	r0, [r5, #0]
 80092a4:	f004 fe30 	bl	800df08 <osMessageQueueGetCount>
 80092a8:	b168      	cbz	r0, 80092c6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80092aa:	2300      	movs	r3, #0
 80092ac:	6828      	ldr	r0, [r5, #0]
 80092ae:	461a      	mov	r2, r3
 80092b0:	1d21      	adds	r1, r4, #4
 80092b2:	f004 fdf5 	bl	800dea0 <osMessageQueueGet>
 80092b6:	b930      	cbnz	r0, 80092c6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80092b8:	6820      	ldr	r0, [r4, #0]
 80092ba:	6861      	ldr	r1, [r4, #4]
 80092bc:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80092be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80092c2:	689b      	ldr	r3, [r3, #8]
 80092c4:	4718      	bx	r3
}
 80092c6:	bd70      	pop	{r4, r5, r6, pc}
 80092c8:	200001d0 	.word	0x200001d0

080092cc <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80092cc:	4770      	bx	lr

080092ce <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80092ce:	3804      	subs	r0, #4
 80092d0:	4770      	bx	lr

080092d2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80092d2:	4770      	bx	lr

080092d4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80092d4:	68c0      	ldr	r0, [r0, #12]
 80092d6:	6803      	ldr	r3, [r0, #0]
 80092d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092da:	4718      	bx	r3

080092dc <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80092dc:	f1a0 0004 	sub.w	r0, r0, #4
 80092e0:	f7ff bff8 	b.w	80092d4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080092e4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80092e4:	b510      	push	{r4, lr}
 80092e6:	2110      	movs	r1, #16
 80092e8:	4604      	mov	r4, r0
 80092ea:	f021 fda6 	bl	802ae3a <_ZdlPvj>
 80092ee:	4620      	mov	r0, r4
 80092f0:	bd10      	pop	{r4, pc}

080092f2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80092f2:	f1a0 0004 	sub.w	r0, r0, #4
 80092f6:	e7f5      	b.n	80092e4 <_ZN21Project_InfoPresenterD0Ev>

080092f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80092f8:	b510      	push	{r4, lr}
 80092fa:	2200      	movs	r2, #0
 80092fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80092fe:	4a04      	ldr	r2, [pc, #16]	; (8009310 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009300:	60c1      	str	r1, [r0, #12]
 8009302:	f102 0408 	add.w	r4, r2, #8
 8009306:	3224      	adds	r2, #36	; 0x24
 8009308:	6004      	str	r4, [r0, #0]
 800930a:	6042      	str	r2, [r0, #4]
}
 800930c:	bd10      	pop	{r4, pc}
 800930e:	bf00      	nop
 8009310:	0802f434 	.word	0x0802f434

08009314 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009314:	4770      	bx	lr
	...

08009318 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009318:	b510      	push	{r4, lr}
 800931a:	4b03      	ldr	r3, [pc, #12]	; (8009328 <_ZN16Project_InfoViewD1Ev+0x10>)
 800931c:	6003      	str	r3, [r0, #0]
 800931e:	4604      	mov	r4, r0
 8009320:	f7fe ff6a 	bl	80081f8 <_ZN20Project_InfoViewBaseD1Ev>
 8009324:	4620      	mov	r0, r4
 8009326:	bd10      	pop	{r4, pc}
 8009328:	0802f46c 	.word	0x0802f46c

0800932c <_ZN16Project_InfoViewD0Ev>:
 800932c:	b510      	push	{r4, lr}
 800932e:	4604      	mov	r4, r0
 8009330:	f7ff fff2 	bl	8009318 <_ZN16Project_InfoViewD1Ev>
 8009334:	4620      	mov	r0, r4
 8009336:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800933a:	f021 fd7e 	bl	802ae3a <_ZdlPvj>
 800933e:	4620      	mov	r0, r4
 8009340:	bd10      	pop	{r4, pc}
	...

08009344 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009344:	b510      	push	{r4, lr}
 8009346:	4604      	mov	r4, r0
 8009348:	f7fe ff7e 	bl	8008248 <_ZN20Project_InfoViewBaseC1Ev>
 800934c:	4b01      	ldr	r3, [pc, #4]	; (8009354 <_ZN16Project_InfoViewC1Ev+0x10>)
 800934e:	6023      	str	r3, [r4, #0]
}
 8009350:	4620      	mov	r0, r4
 8009352:	bd10      	pop	{r4, pc}
 8009354:	0802f46c 	.word	0x0802f46c

08009358 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009358:	f7fe bf2a 	b.w	80081b0 <_ZN20Project_InfoViewBase11setupScreenEv>

0800935c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800935c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800935e:	4a0a      	ldr	r2, [pc, #40]	; (8009388 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009360:	4605      	mov	r5, r0
 8009362:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009364:	460b      	mov	r3, r1
 8009366:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800936a:	2104      	movs	r1, #4
 800936c:	f010 fe5e 	bl	801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009370:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009374:	f00e fd94 	bl	8017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009378:	b92c      	cbnz	r4, 8009386 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800937a:	f00d fca9 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800937e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009382:	f7fb bbd9 	b.w	8004b38 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009386:	bd38      	pop	{r3, r4, r5, pc}
 8009388:	0802d542 	.word	0x0802d542

0800938c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800938c:	4770      	bx	lr

0800938e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800938e:	3804      	subs	r0, #4
 8009390:	4770      	bx	lr

08009392 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009392:	4770      	bx	lr

08009394 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009394:	4770      	bx	lr

08009396 <_ZN21Shutting_OffPresenterD0Ev>:
 8009396:	b510      	push	{r4, lr}
 8009398:	2110      	movs	r1, #16
 800939a:	4604      	mov	r4, r0
 800939c:	f021 fd4d 	bl	802ae3a <_ZdlPvj>
 80093a0:	4620      	mov	r0, r4
 80093a2:	bd10      	pop	{r4, pc}

080093a4 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80093a4:	f1a0 0004 	sub.w	r0, r0, #4
 80093a8:	e7f5      	b.n	8009396 <_ZN21Shutting_OffPresenterD0Ev>

080093aa <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80093aa:	4770      	bx	lr

080093ac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80093ac:	b510      	push	{r4, lr}
 80093ae:	2200      	movs	r2, #0
 80093b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80093b2:	4a04      	ldr	r2, [pc, #16]	; (80093c4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80093b4:	60c1      	str	r1, [r0, #12]
 80093b6:	f102 0408 	add.w	r4, r2, #8
 80093ba:	3224      	adds	r2, #36	; 0x24
 80093bc:	6004      	str	r4, [r0, #0]
 80093be:	6042      	str	r2, [r0, #4]
}
 80093c0:	bd10      	pop	{r4, pc}
 80093c2:	bf00      	nop
 80093c4:	0802f49c 	.word	0x0802f49c

080093c8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80093c8:	4770      	bx	lr
	...

080093cc <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80093cc:	b510      	push	{r4, lr}
 80093ce:	4b03      	ldr	r3, [pc, #12]	; (80093dc <_ZN16Shutting_OffViewD1Ev+0x10>)
 80093d0:	6003      	str	r3, [r0, #0]
 80093d2:	4604      	mov	r4, r0
 80093d4:	f7ff f906 	bl	80085e4 <_ZN20Shutting_OffViewBaseD1Ev>
 80093d8:	4620      	mov	r0, r4
 80093da:	bd10      	pop	{r4, pc}
 80093dc:	0802f4d4 	.word	0x0802f4d4

080093e0 <_ZN16Shutting_OffViewD0Ev>:
 80093e0:	b510      	push	{r4, lr}
 80093e2:	4604      	mov	r4, r0
 80093e4:	f7ff fff2 	bl	80093cc <_ZN16Shutting_OffViewD1Ev>
 80093e8:	4620      	mov	r0, r4
 80093ea:	2198      	movs	r1, #152	; 0x98
 80093ec:	f021 fd25 	bl	802ae3a <_ZdlPvj>
 80093f0:	4620      	mov	r0, r4
 80093f2:	bd10      	pop	{r4, pc}

080093f4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80093f4:	b510      	push	{r4, lr}
 80093f6:	4604      	mov	r4, r0
 80093f8:	f7ff f8fe 	bl	80085f8 <_ZN20Shutting_OffViewBaseC1Ev>
 80093fc:	4b01      	ldr	r3, [pc, #4]	; (8009404 <_ZN16Shutting_OffViewC1Ev+0x10>)
 80093fe:	6023      	str	r3, [r4, #0]
}
 8009400:	4620      	mov	r0, r4
 8009402:	bd10      	pop	{r4, pc}
 8009404:	0802f4d4 	.word	0x0802f4d4

08009408 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009408:	f7ff b8ed 	b.w	80085e6 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800940c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800940c:	20f0      	movs	r0, #240	; 0xf0
 800940e:	4770      	bx	lr

08009410 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009410:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009414:	4770      	bx	lr
 8009416:	bf00      	nop

08009418 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009418:	2029      	movs	r0, #41	; 0x29
 800941a:	f7f7 bf0f 	b.w	800123c <LCD_IO_WriteReg>
 800941e:	bf00      	nop

08009420 <ili9341_DisplayOff>:
 8009420:	2028      	movs	r0, #40	; 0x28
 8009422:	f7f7 bf0b 	b.w	800123c <LCD_IO_WriteReg>
 8009426:	bf00      	nop

08009428 <ili9341_Init>:
{
 8009428:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800942a:	f7f7 fecd 	bl	80011c8 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800942e:	20ca      	movs	r0, #202	; 0xca
 8009430:	f7f7 ff04 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009434:	20c3      	movs	r0, #195	; 0xc3
 8009436:	f7f7 fed7 	bl	80011e8 <LCD_IO_WriteData>
 800943a:	2008      	movs	r0, #8
 800943c:	f7f7 fed4 	bl	80011e8 <LCD_IO_WriteData>
 8009440:	2050      	movs	r0, #80	; 0x50
 8009442:	f7f7 fed1 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009446:	20cf      	movs	r0, #207	; 0xcf
 8009448:	f7f7 fef8 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800944c:	2000      	movs	r0, #0
 800944e:	f7f7 fecb 	bl	80011e8 <LCD_IO_WriteData>
 8009452:	20c1      	movs	r0, #193	; 0xc1
 8009454:	f7f7 fec8 	bl	80011e8 <LCD_IO_WriteData>
 8009458:	2030      	movs	r0, #48	; 0x30
 800945a:	f7f7 fec5 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800945e:	20ed      	movs	r0, #237	; 0xed
 8009460:	f7f7 feec 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009464:	2064      	movs	r0, #100	; 0x64
 8009466:	f7f7 febf 	bl	80011e8 <LCD_IO_WriteData>
 800946a:	2003      	movs	r0, #3
 800946c:	f7f7 febc 	bl	80011e8 <LCD_IO_WriteData>
 8009470:	2012      	movs	r0, #18
 8009472:	f7f7 feb9 	bl	80011e8 <LCD_IO_WriteData>
 8009476:	2081      	movs	r0, #129	; 0x81
 8009478:	f7f7 feb6 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800947c:	20e8      	movs	r0, #232	; 0xe8
 800947e:	f7f7 fedd 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009482:	2085      	movs	r0, #133	; 0x85
 8009484:	f7f7 feb0 	bl	80011e8 <LCD_IO_WriteData>
 8009488:	2000      	movs	r0, #0
 800948a:	f7f7 fead 	bl	80011e8 <LCD_IO_WriteData>
 800948e:	2078      	movs	r0, #120	; 0x78
 8009490:	f7f7 feaa 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009494:	20cb      	movs	r0, #203	; 0xcb
 8009496:	f7f7 fed1 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800949a:	2039      	movs	r0, #57	; 0x39
 800949c:	f7f7 fea4 	bl	80011e8 <LCD_IO_WriteData>
 80094a0:	202c      	movs	r0, #44	; 0x2c
 80094a2:	f7f7 fea1 	bl	80011e8 <LCD_IO_WriteData>
 80094a6:	2000      	movs	r0, #0
 80094a8:	f7f7 fe9e 	bl	80011e8 <LCD_IO_WriteData>
 80094ac:	2034      	movs	r0, #52	; 0x34
 80094ae:	f7f7 fe9b 	bl	80011e8 <LCD_IO_WriteData>
 80094b2:	2002      	movs	r0, #2
 80094b4:	f7f7 fe98 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094b8:	20f7      	movs	r0, #247	; 0xf7
 80094ba:	f7f7 febf 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094be:	2020      	movs	r0, #32
 80094c0:	f7f7 fe92 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094c4:	20ea      	movs	r0, #234	; 0xea
 80094c6:	f7f7 feb9 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094ca:	2000      	movs	r0, #0
 80094cc:	f7f7 fe8c 	bl	80011e8 <LCD_IO_WriteData>
 80094d0:	2000      	movs	r0, #0
 80094d2:	f7f7 fe89 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094d6:	20b1      	movs	r0, #177	; 0xb1
 80094d8:	f7f7 feb0 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094dc:	2000      	movs	r0, #0
 80094de:	f7f7 fe83 	bl	80011e8 <LCD_IO_WriteData>
 80094e2:	201b      	movs	r0, #27
 80094e4:	f7f7 fe80 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094e8:	20b6      	movs	r0, #182	; 0xb6
 80094ea:	f7f7 fea7 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094ee:	200a      	movs	r0, #10
 80094f0:	f7f7 fe7a 	bl	80011e8 <LCD_IO_WriteData>
 80094f4:	20a2      	movs	r0, #162	; 0xa2
 80094f6:	f7f7 fe77 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094fa:	20c0      	movs	r0, #192	; 0xc0
 80094fc:	f7f7 fe9e 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009500:	2010      	movs	r0, #16
 8009502:	f7f7 fe71 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009506:	20c1      	movs	r0, #193	; 0xc1
 8009508:	f7f7 fe98 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800950c:	2010      	movs	r0, #16
 800950e:	f7f7 fe6b 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009512:	20c5      	movs	r0, #197	; 0xc5
 8009514:	f7f7 fe92 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009518:	2045      	movs	r0, #69	; 0x45
 800951a:	f7f7 fe65 	bl	80011e8 <LCD_IO_WriteData>
 800951e:	2015      	movs	r0, #21
 8009520:	f7f7 fe62 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009524:	20c7      	movs	r0, #199	; 0xc7
 8009526:	f7f7 fe89 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800952a:	2090      	movs	r0, #144	; 0x90
 800952c:	f7f7 fe5c 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009530:	2036      	movs	r0, #54	; 0x36
 8009532:	f7f7 fe83 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009536:	20c8      	movs	r0, #200	; 0xc8
 8009538:	f7f7 fe56 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800953c:	20f2      	movs	r0, #242	; 0xf2
 800953e:	f7f7 fe7d 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009542:	2000      	movs	r0, #0
 8009544:	f7f7 fe50 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009548:	20b0      	movs	r0, #176	; 0xb0
 800954a:	f7f7 fe77 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800954e:	20c2      	movs	r0, #194	; 0xc2
 8009550:	f7f7 fe4a 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009554:	20b6      	movs	r0, #182	; 0xb6
 8009556:	f7f7 fe71 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800955a:	200a      	movs	r0, #10
 800955c:	f7f7 fe44 	bl	80011e8 <LCD_IO_WriteData>
 8009560:	20a7      	movs	r0, #167	; 0xa7
 8009562:	f7f7 fe41 	bl	80011e8 <LCD_IO_WriteData>
 8009566:	2027      	movs	r0, #39	; 0x27
 8009568:	f7f7 fe3e 	bl	80011e8 <LCD_IO_WriteData>
 800956c:	2004      	movs	r0, #4
 800956e:	f7f7 fe3b 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009572:	202a      	movs	r0, #42	; 0x2a
 8009574:	f7f7 fe62 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009578:	2000      	movs	r0, #0
 800957a:	f7f7 fe35 	bl	80011e8 <LCD_IO_WriteData>
 800957e:	2000      	movs	r0, #0
 8009580:	f7f7 fe32 	bl	80011e8 <LCD_IO_WriteData>
 8009584:	2000      	movs	r0, #0
 8009586:	f7f7 fe2f 	bl	80011e8 <LCD_IO_WriteData>
 800958a:	20ef      	movs	r0, #239	; 0xef
 800958c:	f7f7 fe2c 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009590:	202b      	movs	r0, #43	; 0x2b
 8009592:	f7f7 fe53 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009596:	2000      	movs	r0, #0
 8009598:	f7f7 fe26 	bl	80011e8 <LCD_IO_WriteData>
 800959c:	2000      	movs	r0, #0
 800959e:	f7f7 fe23 	bl	80011e8 <LCD_IO_WriteData>
 80095a2:	2001      	movs	r0, #1
 80095a4:	f7f7 fe20 	bl	80011e8 <LCD_IO_WriteData>
 80095a8:	203f      	movs	r0, #63	; 0x3f
 80095aa:	f7f7 fe1d 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095ae:	20f6      	movs	r0, #246	; 0xf6
 80095b0:	f7f7 fe44 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095b4:	2001      	movs	r0, #1
 80095b6:	f7f7 fe17 	bl	80011e8 <LCD_IO_WriteData>
 80095ba:	2000      	movs	r0, #0
 80095bc:	f7f7 fe14 	bl	80011e8 <LCD_IO_WriteData>
 80095c0:	2006      	movs	r0, #6
 80095c2:	f7f7 fe11 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095c6:	202c      	movs	r0, #44	; 0x2c
 80095c8:	f7f7 fe38 	bl	800123c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80095cc:	20c8      	movs	r0, #200	; 0xc8
 80095ce:	f7f7 fe9d 	bl	800130c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80095d2:	2026      	movs	r0, #38	; 0x26
 80095d4:	f7f7 fe32 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095d8:	2001      	movs	r0, #1
 80095da:	f7f7 fe05 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095de:	20e0      	movs	r0, #224	; 0xe0
 80095e0:	f7f7 fe2c 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095e4:	200f      	movs	r0, #15
 80095e6:	f7f7 fdff 	bl	80011e8 <LCD_IO_WriteData>
 80095ea:	2029      	movs	r0, #41	; 0x29
 80095ec:	f7f7 fdfc 	bl	80011e8 <LCD_IO_WriteData>
 80095f0:	2024      	movs	r0, #36	; 0x24
 80095f2:	f7f7 fdf9 	bl	80011e8 <LCD_IO_WriteData>
 80095f6:	200c      	movs	r0, #12
 80095f8:	f7f7 fdf6 	bl	80011e8 <LCD_IO_WriteData>
 80095fc:	200e      	movs	r0, #14
 80095fe:	f7f7 fdf3 	bl	80011e8 <LCD_IO_WriteData>
 8009602:	2009      	movs	r0, #9
 8009604:	f7f7 fdf0 	bl	80011e8 <LCD_IO_WriteData>
 8009608:	204e      	movs	r0, #78	; 0x4e
 800960a:	f7f7 fded 	bl	80011e8 <LCD_IO_WriteData>
 800960e:	2078      	movs	r0, #120	; 0x78
 8009610:	f7f7 fdea 	bl	80011e8 <LCD_IO_WriteData>
 8009614:	203c      	movs	r0, #60	; 0x3c
 8009616:	f7f7 fde7 	bl	80011e8 <LCD_IO_WriteData>
 800961a:	2009      	movs	r0, #9
 800961c:	f7f7 fde4 	bl	80011e8 <LCD_IO_WriteData>
 8009620:	2013      	movs	r0, #19
 8009622:	f7f7 fde1 	bl	80011e8 <LCD_IO_WriteData>
 8009626:	2005      	movs	r0, #5
 8009628:	f7f7 fdde 	bl	80011e8 <LCD_IO_WriteData>
 800962c:	2017      	movs	r0, #23
 800962e:	f7f7 fddb 	bl	80011e8 <LCD_IO_WriteData>
 8009632:	2011      	movs	r0, #17
 8009634:	f7f7 fdd8 	bl	80011e8 <LCD_IO_WriteData>
 8009638:	2000      	movs	r0, #0
 800963a:	f7f7 fdd5 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800963e:	20e1      	movs	r0, #225	; 0xe1
 8009640:	f7f7 fdfc 	bl	800123c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009644:	2000      	movs	r0, #0
 8009646:	f7f7 fdcf 	bl	80011e8 <LCD_IO_WriteData>
 800964a:	2016      	movs	r0, #22
 800964c:	f7f7 fdcc 	bl	80011e8 <LCD_IO_WriteData>
 8009650:	201b      	movs	r0, #27
 8009652:	f7f7 fdc9 	bl	80011e8 <LCD_IO_WriteData>
 8009656:	2004      	movs	r0, #4
 8009658:	f7f7 fdc6 	bl	80011e8 <LCD_IO_WriteData>
 800965c:	2011      	movs	r0, #17
 800965e:	f7f7 fdc3 	bl	80011e8 <LCD_IO_WriteData>
 8009662:	2007      	movs	r0, #7
 8009664:	f7f7 fdc0 	bl	80011e8 <LCD_IO_WriteData>
 8009668:	2031      	movs	r0, #49	; 0x31
 800966a:	f7f7 fdbd 	bl	80011e8 <LCD_IO_WriteData>
 800966e:	2033      	movs	r0, #51	; 0x33
 8009670:	f7f7 fdba 	bl	80011e8 <LCD_IO_WriteData>
 8009674:	2042      	movs	r0, #66	; 0x42
 8009676:	f7f7 fdb7 	bl	80011e8 <LCD_IO_WriteData>
 800967a:	2005      	movs	r0, #5
 800967c:	f7f7 fdb4 	bl	80011e8 <LCD_IO_WriteData>
 8009680:	200c      	movs	r0, #12
 8009682:	f7f7 fdb1 	bl	80011e8 <LCD_IO_WriteData>
 8009686:	200a      	movs	r0, #10
 8009688:	f7f7 fdae 	bl	80011e8 <LCD_IO_WriteData>
 800968c:	2028      	movs	r0, #40	; 0x28
 800968e:	f7f7 fdab 	bl	80011e8 <LCD_IO_WriteData>
 8009692:	202f      	movs	r0, #47	; 0x2f
 8009694:	f7f7 fda8 	bl	80011e8 <LCD_IO_WriteData>
 8009698:	200f      	movs	r0, #15
 800969a:	f7f7 fda5 	bl	80011e8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800969e:	2011      	movs	r0, #17
 80096a0:	f7f7 fdcc 	bl	800123c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80096a4:	20c8      	movs	r0, #200	; 0xc8
 80096a6:	f7f7 fe31 	bl	800130c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80096aa:	2029      	movs	r0, #41	; 0x29
 80096ac:	f7f7 fdc6 	bl	800123c <LCD_IO_WriteReg>
}
 80096b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80096b4:	202c      	movs	r0, #44	; 0x2c
 80096b6:	f7f7 bdc1 	b.w	800123c <LCD_IO_WriteReg>
 80096ba:	bf00      	nop

080096bc <ili9341_ReadID>:
{
 80096bc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80096be:	f7f7 fd83 	bl	80011c8 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80096c2:	2103      	movs	r1, #3
 80096c4:	20d3      	movs	r0, #211	; 0xd3
 80096c6:	f7f7 fde3 	bl	8001290 <LCD_IO_ReadData>
}
 80096ca:	b280      	uxth	r0, r0
 80096cc:	bd08      	pop	{r3, pc}
 80096ce:	bf00      	nop

080096d0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80096d0:	221f      	movs	r2, #31
 80096d2:	210b      	movs	r1, #11
 80096d4:	b2c0      	uxtb	r0, r0
 80096d6:	f7f7 bd29 	b.w	800112c <IOE_Write>
 80096da:	bf00      	nop

080096dc <stmpe811_Reset>:
{
 80096dc:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80096de:	b2c4      	uxtb	r4, r0
 80096e0:	2202      	movs	r2, #2
 80096e2:	2103      	movs	r1, #3
 80096e4:	4620      	mov	r0, r4
 80096e6:	f7f7 fd21 	bl	800112c <IOE_Write>
  IOE_Delay(10); 
 80096ea:	200a      	movs	r0, #10
 80096ec:	f7f7 fd6a 	bl	80011c4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80096f0:	4620      	mov	r0, r4
 80096f2:	2200      	movs	r2, #0
 80096f4:	2103      	movs	r1, #3
 80096f6:	f7f7 fd19 	bl	800112c <IOE_Write>
}
 80096fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80096fe:	2002      	movs	r0, #2
 8009700:	f7f7 bd60 	b.w	80011c4 <IOE_Delay>

08009704 <stmpe811_ReadID>:
{
 8009704:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009706:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009708:	f7f7 fd0c 	bl	8001124 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800970c:	2100      	movs	r1, #0
 800970e:	4620      	mov	r0, r4
 8009710:	f7f7 fd24 	bl	800115c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009714:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009716:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009718:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800971a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800971c:	f7f7 fd1e 	bl	800115c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009720:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009724:	b280      	uxth	r0, r0
 8009726:	bd10      	pop	{r4, pc}

08009728 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009728:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800972a:	b2c4      	uxtb	r4, r0
 800972c:	2140      	movs	r1, #64	; 0x40
 800972e:	4620      	mov	r0, r4
 8009730:	f7f7 fd14 	bl	800115c <IOE_Read>
  
  if(state > 0)
 8009734:	0603      	lsls	r3, r0, #24
 8009736:	d40b      	bmi.n	8009750 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009738:	4620      	mov	r0, r4
 800973a:	2201      	movs	r2, #1
 800973c:	214b      	movs	r1, #75	; 0x4b
 800973e:	f7f7 fcf5 	bl	800112c <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009742:	4620      	mov	r0, r4
 8009744:	2200      	movs	r2, #0
 8009746:	214b      	movs	r1, #75	; 0x4b
 8009748:	f7f7 fcf0 	bl	800112c <IOE_Write>
  uint8_t ret = 0;
 800974c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800974e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009750:	214c      	movs	r1, #76	; 0x4c
 8009752:	4620      	mov	r0, r4
 8009754:	f7f7 fd02 	bl	800115c <IOE_Read>
      ret = 1;
 8009758:	3800      	subs	r0, #0
 800975a:	bf18      	it	ne
 800975c:	2001      	movne	r0, #1
}
 800975e:	bd10      	pop	{r4, pc}

08009760 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009760:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009762:	210b      	movs	r1, #11
 8009764:	b2c0      	uxtb	r0, r0
 8009766:	f7f7 fcf9 	bl	800115c <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800976a:	f000 001f 	and.w	r0, r0, #31
 800976e:	bd08      	pop	{r3, pc}

08009770 <stmpe811_TS_GetXY>:
{
 8009770:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009772:	2304      	movs	r3, #4
{
 8009774:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009776:	b2c4      	uxtb	r4, r0
{
 8009778:	4615      	mov	r5, r2
 800977a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800977c:	eb0d 0203 	add.w	r2, sp, r3
 8009780:	21d7      	movs	r1, #215	; 0xd7
 8009782:	4620      	mov	r0, r4
 8009784:	f7f7 fd06 	bl	8001194 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009788:	9b01      	ldr	r3, [sp, #4]
 800978a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800978c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800978e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009792:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009794:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009796:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009798:	2201      	movs	r2, #1
 800979a:	214b      	movs	r1, #75	; 0x4b
 800979c:	f7f7 fcc6 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80097a0:	2200      	movs	r2, #0
 80097a2:	214b      	movs	r1, #75	; 0x4b
 80097a4:	4620      	mov	r0, r4
 80097a6:	f7f7 fcc1 	bl	800112c <IOE_Write>
}
 80097aa:	b002      	add	sp, #8
 80097ac:	bd70      	pop	{r4, r5, r6, pc}
 80097ae:	bf00      	nop

080097b0 <stmpe811_TS_Start>:
{
 80097b0:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097b2:	b2c4      	uxtb	r4, r0
 80097b4:	2104      	movs	r1, #4
 80097b6:	4620      	mov	r0, r4
 80097b8:	f7f7 fcd0 	bl	800115c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097bc:	2104      	movs	r1, #4
 80097be:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097c2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097c4:	4620      	mov	r0, r4
 80097c6:	f7f7 fcb1 	bl	800112c <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80097ca:	2117      	movs	r1, #23
 80097cc:	4620      	mov	r0, r4
 80097ce:	f7f7 fcc5 	bl	800115c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80097d2:	2117      	movs	r1, #23
 80097d4:	f000 020f 	and.w	r2, r0, #15
 80097d8:	4620      	mov	r0, r4
 80097da:	f7f7 fca7 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097de:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80097e2:	4620      	mov	r0, r4
 80097e4:	2104      	movs	r1, #4
 80097e6:	f7f7 fca1 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80097ea:	2249      	movs	r2, #73	; 0x49
 80097ec:	2120      	movs	r1, #32
 80097ee:	4620      	mov	r0, r4
 80097f0:	f7f7 fc9c 	bl	800112c <IOE_Write>
  IOE_Delay(2); 
 80097f4:	2002      	movs	r0, #2
 80097f6:	f7f7 fce5 	bl	80011c4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80097fa:	4620      	mov	r0, r4
 80097fc:	2201      	movs	r2, #1
 80097fe:	2121      	movs	r1, #33	; 0x21
 8009800:	f7f7 fc94 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009804:	4620      	mov	r0, r4
 8009806:	229a      	movs	r2, #154	; 0x9a
 8009808:	2141      	movs	r1, #65	; 0x41
 800980a:	f7f7 fc8f 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800980e:	4620      	mov	r0, r4
 8009810:	2201      	movs	r2, #1
 8009812:	214a      	movs	r1, #74	; 0x4a
 8009814:	f7f7 fc8a 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009818:	4620      	mov	r0, r4
 800981a:	2201      	movs	r2, #1
 800981c:	214b      	movs	r1, #75	; 0x4b
 800981e:	f7f7 fc85 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009822:	4620      	mov	r0, r4
 8009824:	2200      	movs	r2, #0
 8009826:	214b      	movs	r1, #75	; 0x4b
 8009828:	f7f7 fc80 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800982c:	4620      	mov	r0, r4
 800982e:	2201      	movs	r2, #1
 8009830:	2156      	movs	r1, #86	; 0x56
 8009832:	f7f7 fc7b 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009836:	4620      	mov	r0, r4
 8009838:	2201      	movs	r2, #1
 800983a:	2158      	movs	r1, #88	; 0x58
 800983c:	f7f7 fc76 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009840:	4620      	mov	r0, r4
 8009842:	2201      	movs	r2, #1
 8009844:	2140      	movs	r1, #64	; 0x40
 8009846:	f7f7 fc71 	bl	800112c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800984a:	4620      	mov	r0, r4
 800984c:	22ff      	movs	r2, #255	; 0xff
 800984e:	210b      	movs	r1, #11
 8009850:	f7f7 fc6c 	bl	800112c <IOE_Write>
}
 8009854:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009858:	2002      	movs	r0, #2
 800985a:	f7f7 bcb3 	b.w	80011c4 <IOE_Delay>
 800985e:	bf00      	nop

08009860 <stmpe811_TS_DisableIT>:
{
 8009860:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009862:	b2c4      	uxtb	r4, r0
 8009864:	2109      	movs	r1, #9
 8009866:	4620      	mov	r0, r4
 8009868:	f7f7 fc78 	bl	800115c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800986c:	2109      	movs	r1, #9
 800986e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009872:	4620      	mov	r0, r4
 8009874:	f7f7 fc5a 	bl	800112c <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009878:	210a      	movs	r1, #10
 800987a:	4620      	mov	r0, r4
 800987c:	f7f7 fc6e 	bl	800115c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009880:	210a      	movs	r1, #10
 8009882:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009886:	4620      	mov	r0, r4
}
 8009888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800988c:	f7f7 bc4e 	b.w	800112c <IOE_Write>

08009890 <stmpe811_TS_EnableIT>:
{
 8009890:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009892:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009894:	f7f7 fc48 	bl	8001128 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009898:	210a      	movs	r1, #10
 800989a:	4620      	mov	r0, r4
 800989c:	f7f7 fc5e 	bl	800115c <IOE_Read>
  tmp |= Source; 
 80098a0:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80098a4:	b2c2      	uxtb	r2, r0
 80098a6:	210a      	movs	r1, #10
 80098a8:	4620      	mov	r0, r4
 80098aa:	f7f7 fc3f 	bl	800112c <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80098ae:	2109      	movs	r1, #9
 80098b0:	4620      	mov	r0, r4
 80098b2:	f7f7 fc53 	bl	800115c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80098b6:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098ba:	b2c2      	uxtb	r2, r0
 80098bc:	2109      	movs	r1, #9
 80098be:	4620      	mov	r0, r4
}
 80098c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098c4:	f7f7 bc32 	b.w	800112c <IOE_Write>

080098c8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80098c8:	4a10      	ldr	r2, [pc, #64]	; (800990c <stmpe811_Init+0x44>)
 80098ca:	7813      	ldrb	r3, [r2, #0]
 80098cc:	4298      	cmp	r0, r3
 80098ce:	d004      	beq.n	80098da <stmpe811_Init+0x12>
 80098d0:	7851      	ldrb	r1, [r2, #1]
 80098d2:	4288      	cmp	r0, r1
 80098d4:	d001      	beq.n	80098da <stmpe811_Init+0x12>
 80098d6:	b113      	cbz	r3, 80098de <stmpe811_Init+0x16>
 80098d8:	b101      	cbz	r1, 80098dc <stmpe811_Init+0x14>
 80098da:	4770      	bx	lr
 80098dc:	2301      	movs	r3, #1
{
 80098de:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80098e0:	b2c4      	uxtb	r4, r0
 80098e2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80098e4:	f7f7 fc1e 	bl	8001124 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80098e8:	2202      	movs	r2, #2
 80098ea:	2103      	movs	r1, #3
 80098ec:	4620      	mov	r0, r4
 80098ee:	f7f7 fc1d 	bl	800112c <IOE_Write>
  IOE_Delay(10); 
 80098f2:	200a      	movs	r0, #10
 80098f4:	f7f7 fc66 	bl	80011c4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80098f8:	4620      	mov	r0, r4
 80098fa:	2200      	movs	r2, #0
 80098fc:	2103      	movs	r1, #3
 80098fe:	f7f7 fc15 	bl	800112c <IOE_Write>
}
 8009902:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009906:	2002      	movs	r0, #2
 8009908:	f7f7 bc5c 	b.w	80011c4 <IOE_Delay>
 800990c:	20002a14 	.word	0x20002a14

08009910 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009910:	4b05      	ldr	r3, [pc, #20]	; (8009928 <SystemInit+0x18>)
 8009912:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009916:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800991a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800991e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009922:	6099      	str	r1, [r3, #8]
#endif
}
 8009924:	4770      	bx	lr
 8009926:	bf00      	nop
 8009928:	e000ed00 	.word	0xe000ed00

0800992c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800992c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800992e:	4b0b      	ldr	r3, [pc, #44]	; (800995c <HAL_Init+0x30>)
 8009930:	681a      	ldr	r2, [r3, #0]
 8009932:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009936:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009938:	681a      	ldr	r2, [r3, #0]
 800993a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800993e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009940:	681a      	ldr	r2, [r3, #0]
 8009942:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009946:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009948:	2003      	movs	r0, #3
 800994a:	f000 f82d 	bl	80099a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800994e:	2000      	movs	r0, #0
 8009950:	f7f8 f8ea 	bl	8001b28 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009954:	f7f7 fe2e 	bl	80015b4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009958:	2000      	movs	r0, #0
 800995a:	bd08      	pop	{r3, pc}
 800995c:	40023c00 	.word	0x40023c00

08009960 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009960:	4a03      	ldr	r2, [pc, #12]	; (8009970 <HAL_IncTick+0x10>)
 8009962:	4b04      	ldr	r3, [pc, #16]	; (8009974 <HAL_IncTick+0x14>)
 8009964:	6811      	ldr	r1, [r2, #0]
 8009966:	781b      	ldrb	r3, [r3, #0]
 8009968:	440b      	add	r3, r1
 800996a:	6013      	str	r3, [r2, #0]
}
 800996c:	4770      	bx	lr
 800996e:	bf00      	nop
 8009970:	20002a18 	.word	0x20002a18
 8009974:	2000007c 	.word	0x2000007c

08009978 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009978:	4b01      	ldr	r3, [pc, #4]	; (8009980 <HAL_GetTick+0x8>)
 800997a:	6818      	ldr	r0, [r3, #0]
}
 800997c:	4770      	bx	lr
 800997e:	bf00      	nop
 8009980:	20002a18 	.word	0x20002a18

08009984 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009984:	b538      	push	{r3, r4, r5, lr}
 8009986:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009988:	f7ff fff6 	bl	8009978 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800998c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800998e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009990:	d002      	beq.n	8009998 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009992:	4b04      	ldr	r3, [pc, #16]	; (80099a4 <HAL_Delay+0x20>)
 8009994:	781b      	ldrb	r3, [r3, #0]
 8009996:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009998:	f7ff ffee 	bl	8009978 <HAL_GetTick>
 800999c:	1b43      	subs	r3, r0, r5
 800999e:	42a3      	cmp	r3, r4
 80099a0:	d3fa      	bcc.n	8009998 <HAL_Delay+0x14>
  {
  }
}
 80099a2:	bd38      	pop	{r3, r4, r5, pc}
 80099a4:	2000007c 	.word	0x2000007c

080099a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80099a8:	4907      	ldr	r1, [pc, #28]	; (80099c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80099aa:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099ac:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099ae:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099b2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099b6:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80099b8:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80099ba:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80099be:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80099c2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80099c4:	4770      	bx	lr
 80099c6:	bf00      	nop
 80099c8:	e000ed00 	.word	0xe000ed00

080099cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80099cc:	4b1c      	ldr	r3, [pc, #112]	; (8009a40 <HAL_NVIC_SetPriority+0x74>)
 80099ce:	68db      	ldr	r3, [r3, #12]
 80099d0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80099d4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099d6:	f1c3 0e07 	rsb	lr, r3, #7
 80099da:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099de:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099e2:	bf28      	it	cs
 80099e4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099e8:	f1bc 0f06 	cmp.w	ip, #6
 80099ec:	d91b      	bls.n	8009a26 <HAL_NVIC_SetPriority+0x5a>
 80099ee:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80099f0:	f04f 3cff 	mov.w	ip, #4294967295
 80099f4:	fa0c fc03 	lsl.w	ip, ip, r3
 80099f8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80099fc:	f04f 3cff 	mov.w	ip, #4294967295
 8009a00:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009a04:	ea21 010c 	bic.w	r1, r1, ip
 8009a08:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009a0a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009a0c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009a10:	db0c      	blt.n	8009a2c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a12:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009a16:	0109      	lsls	r1, r1, #4
 8009a18:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009a1c:	b2c9      	uxtb	r1, r1
 8009a1e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009a22:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a26:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009a28:	4613      	mov	r3, r2
 8009a2a:	e7e7      	b.n	80099fc <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a2c:	4b05      	ldr	r3, [pc, #20]	; (8009a44 <HAL_NVIC_SetPriority+0x78>)
 8009a2e:	f000 000f 	and.w	r0, r0, #15
 8009a32:	0109      	lsls	r1, r1, #4
 8009a34:	4403      	add	r3, r0
 8009a36:	b2c9      	uxtb	r1, r1
 8009a38:	7619      	strb	r1, [r3, #24]
 8009a3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a3e:	bf00      	nop
 8009a40:	e000ed00 	.word	0xe000ed00
 8009a44:	e000ecfc 	.word	0xe000ecfc

08009a48 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009a48:	2800      	cmp	r0, #0
 8009a4a:	db07      	blt.n	8009a5c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009a4c:	0941      	lsrs	r1, r0, #5
 8009a4e:	4a04      	ldr	r2, [pc, #16]	; (8009a60 <HAL_NVIC_EnableIRQ+0x18>)
 8009a50:	f000 001f 	and.w	r0, r0, #31
 8009a54:	2301      	movs	r3, #1
 8009a56:	4083      	lsls	r3, r0
 8009a58:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009a5c:	4770      	bx	lr
 8009a5e:	bf00      	nop
 8009a60:	e000e100 	.word	0xe000e100

08009a64 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009a64:	b180      	cbz	r0, 8009a88 <HAL_CRC_Init+0x24>
{
 8009a66:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009a68:	7943      	ldrb	r3, [r0, #5]
 8009a6a:	4604      	mov	r4, r0
 8009a6c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a70:	b11b      	cbz	r3, 8009a7a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009a72:	2301      	movs	r3, #1
 8009a74:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009a76:	2000      	movs	r0, #0
}
 8009a78:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009a7a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009a7c:	f7f7 fdba 	bl	80015f4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009a80:	2301      	movs	r3, #1
 8009a82:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009a84:	2000      	movs	r0, #0
}
 8009a86:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009a88:	2001      	movs	r0, #1
}
 8009a8a:	4770      	bx	lr

08009a8c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009a8c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009a90:	2b02      	cmp	r3, #2
 8009a92:	d003      	beq.n	8009a9c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009a94:	2380      	movs	r3, #128	; 0x80
 8009a96:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009a98:	2001      	movs	r0, #1
 8009a9a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009a9c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009a9e:	2305      	movs	r3, #5
 8009aa0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009aa4:	6813      	ldr	r3, [r2, #0]
 8009aa6:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009aaa:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009aac:	6013      	str	r3, [r2, #0]
}
 8009aae:	4770      	bx	lr

08009ab0 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009ab0:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009ab4:	4770      	bx	lr
 8009ab6:	bf00      	nop

08009ab8 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8009ab8:	4b21      	ldr	r3, [pc, #132]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009aba:	68da      	ldr	r2, [r3, #12]
 8009abc:	06d0      	lsls	r0, r2, #27
 8009abe:	d505      	bpl.n	8009acc <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ac0:	4920      	ldr	r1, [pc, #128]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009ac2:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009ac4:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ac6:	4302      	orrs	r2, r0
 8009ac8:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009aca:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009acc:	4b1c      	ldr	r3, [pc, #112]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009ace:	68da      	ldr	r2, [r3, #12]
 8009ad0:	0691      	lsls	r1, r2, #26
 8009ad2:	d506      	bpl.n	8009ae2 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ad4:	491b      	ldr	r1, [pc, #108]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009ad6:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ad8:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ada:	f042 0208 	orr.w	r2, r2, #8
 8009ade:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ae0:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009ae2:	4b17      	ldr	r3, [pc, #92]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009ae4:	68da      	ldr	r2, [r3, #12]
 8009ae6:	0652      	lsls	r2, r2, #25
 8009ae8:	d506      	bpl.n	8009af8 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009aea:	4916      	ldr	r1, [pc, #88]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009aec:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009aee:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009af0:	f042 0204 	orr.w	r2, r2, #4
 8009af4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009af6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009af8:	4b11      	ldr	r3, [pc, #68]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009afa:	68da      	ldr	r2, [r3, #12]
 8009afc:	0610      	lsls	r0, r2, #24
 8009afe:	d506      	bpl.n	8009b0e <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009b00:	4910      	ldr	r1, [pc, #64]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009b02:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009b04:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009b06:	f042 0202 	orr.w	r2, r2, #2
 8009b0a:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009b0c:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009b0e:	4b0c      	ldr	r3, [pc, #48]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009b10:	68da      	ldr	r2, [r3, #12]
 8009b12:	05d1      	lsls	r1, r2, #23
 8009b14:	d507      	bpl.n	8009b26 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b16:	490b      	ldr	r1, [pc, #44]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009b18:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b1a:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b1e:	f042 0201 	orr.w	r2, r2, #1
 8009b22:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b24:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009b26:	4b06      	ldr	r3, [pc, #24]	; (8009b40 <FLASH_SetErrorCode+0x88>)
 8009b28:	68da      	ldr	r2, [r3, #12]
 8009b2a:	0792      	lsls	r2, r2, #30
 8009b2c:	d506      	bpl.n	8009b3c <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b2e:	4905      	ldr	r1, [pc, #20]	; (8009b44 <FLASH_SetErrorCode+0x8c>)
 8009b30:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b32:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b34:	f042 0220 	orr.w	r2, r2, #32
 8009b38:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b3a:	60d8      	str	r0, [r3, #12]
  }
}
 8009b3c:	4770      	bx	lr
 8009b3e:	bf00      	nop
 8009b40:	40023c00 	.word	0x40023c00
 8009b44:	20002a1c 	.word	0x20002a1c

08009b48 <HAL_FLASH_Program>:
{
 8009b48:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009b4c:	4f4d      	ldr	r7, [pc, #308]	; (8009c84 <HAL_FLASH_Program+0x13c>)
{
 8009b4e:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009b50:	7e3b      	ldrb	r3, [r7, #24]
 8009b52:	2b01      	cmp	r3, #1
 8009b54:	d060      	beq.n	8009c18 <HAL_FLASH_Program+0xd0>
 8009b56:	2301      	movs	r3, #1
 8009b58:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009b5a:	2300      	movs	r3, #0
 8009b5c:	4681      	mov	r9, r0
 8009b5e:	468a      	mov	sl, r1
 8009b60:	4690      	mov	r8, r2
 8009b62:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009b64:	f7ff ff08 	bl	8009978 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b68:	4d47      	ldr	r5, [pc, #284]	; (8009c88 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009b6a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b6c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b70:	e004      	b.n	8009b7c <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b72:	f7ff ff01 	bl	8009978 <HAL_GetTick>
 8009b76:	1b00      	subs	r0, r0, r4
 8009b78:	42b0      	cmp	r0, r6
 8009b7a:	d848      	bhi.n	8009c0e <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b7c:	68eb      	ldr	r3, [r5, #12]
 8009b7e:	03d8      	lsls	r0, r3, #15
 8009b80:	d4f7      	bmi.n	8009b72 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009b82:	68eb      	ldr	r3, [r5, #12]
 8009b84:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009b86:	bf44      	itt	mi
 8009b88:	2301      	movmi	r3, #1
 8009b8a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009b8c:	4b3e      	ldr	r3, [pc, #248]	; (8009c88 <HAL_FLASH_Program+0x140>)
 8009b8e:	68da      	ldr	r2, [r3, #12]
 8009b90:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009b94:	d154      	bne.n	8009c40 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009b96:	f1b9 0f00 	cmp.w	r9, #0
 8009b9a:	d040      	beq.n	8009c1e <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009b9c:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009ba0:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009ba2:	d051      	beq.n	8009c48 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009ba4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009ba8:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009baa:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009bae:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009bb0:	d05e      	beq.n	8009c70 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009bb2:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009bb6:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009bb8:	691a      	ldr	r2, [r3, #16]
 8009bba:	f042 0201 	orr.w	r2, r2, #1
 8009bbe:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009bc0:	f8ca 8000 	str.w	r8, [sl]
 8009bc4:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009bc8:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009bcc:	2300      	movs	r3, #0
 8009bce:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009bd0:	f7ff fed2 	bl	8009978 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bd4:	4d2c      	ldr	r5, [pc, #176]	; (8009c88 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009bd6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bd8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bdc:	e004      	b.n	8009be8 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bde:	f7ff fecb 	bl	8009978 <HAL_GetTick>
 8009be2:	1b00      	subs	r0, r0, r4
 8009be4:	42b0      	cmp	r0, r6
 8009be6:	d829      	bhi.n	8009c3c <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009be8:	68eb      	ldr	r3, [r5, #12]
 8009bea:	03da      	lsls	r2, r3, #15
 8009bec:	d4f7      	bmi.n	8009bde <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009bee:	68eb      	ldr	r3, [r5, #12]
 8009bf0:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009bf2:	bf44      	itt	mi
 8009bf4:	2301      	movmi	r3, #1
 8009bf6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009bf8:	4b23      	ldr	r3, [pc, #140]	; (8009c88 <HAL_FLASH_Program+0x140>)
 8009bfa:	68d8      	ldr	r0, [r3, #12]
 8009bfc:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009c00:	d132      	bne.n	8009c68 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009c02:	4a21      	ldr	r2, [pc, #132]	; (8009c88 <HAL_FLASH_Program+0x140>)
 8009c04:	6913      	ldr	r3, [r2, #16]
 8009c06:	f023 0301 	bic.w	r3, r3, #1
 8009c0a:	6113      	str	r3, [r2, #16]
 8009c0c:	e000      	b.n	8009c10 <HAL_FLASH_Program+0xc8>
 8009c0e:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009c10:	2300      	movs	r3, #0
 8009c12:	763b      	strb	r3, [r7, #24]
}
 8009c14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009c18:	2002      	movs	r0, #2
}
 8009c1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c1e:	691a      	ldr	r2, [r3, #16]
 8009c20:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c24:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009c26:	691a      	ldr	r2, [r3, #16]
 8009c28:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c2a:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009c2c:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c30:	f042 0201 	orr.w	r2, r2, #1
 8009c34:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009c36:	f88a 8000 	strb.w	r8, [sl]
}
 8009c3a:	e7c7      	b.n	8009bcc <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009c3c:	2003      	movs	r0, #3
 8009c3e:	e7e0      	b.n	8009c02 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009c40:	f7ff ff3a 	bl	8009ab8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c44:	2001      	movs	r0, #1
 8009c46:	e7e3      	b.n	8009c10 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c48:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c4c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009c4e:	691a      	ldr	r2, [r3, #16]
 8009c50:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009c54:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c56:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009c58:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c5c:	f042 0201 	orr.w	r2, r2, #1
 8009c60:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009c62:	f8aa 8000 	strh.w	r8, [sl]
}
 8009c66:	e7b1      	b.n	8009bcc <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009c68:	f7ff ff26 	bl	8009ab8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c6c:	2001      	movs	r0, #1
 8009c6e:	e7c8      	b.n	8009c02 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009c70:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c74:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c76:	691a      	ldr	r2, [r3, #16]
 8009c78:	f042 0201 	orr.w	r2, r2, #1
 8009c7c:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009c7e:	f8ca 8000 	str.w	r8, [sl]
}
 8009c82:	e7a3      	b.n	8009bcc <HAL_FLASH_Program+0x84>
 8009c84:	20002a1c 	.word	0x20002a1c
 8009c88:	40023c00 	.word	0x40023c00

08009c8c <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c8c:	4b06      	ldr	r3, [pc, #24]	; (8009ca8 <HAL_FLASH_Unlock+0x1c>)
 8009c8e:	691a      	ldr	r2, [r3, #16]
 8009c90:	2a00      	cmp	r2, #0
 8009c92:	db01      	blt.n	8009c98 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009c94:	2000      	movs	r0, #0
}
 8009c96:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c98:	4904      	ldr	r1, [pc, #16]	; (8009cac <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c9a:	4a05      	ldr	r2, [pc, #20]	; (8009cb0 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c9c:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c9e:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009ca0:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009ca2:	0fc0      	lsrs	r0, r0, #31
 8009ca4:	4770      	bx	lr
 8009ca6:	bf00      	nop
 8009ca8:	40023c00 	.word	0x40023c00
 8009cac:	45670123 	.word	0x45670123
 8009cb0:	cdef89ab 	.word	0xcdef89ab

08009cb4 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009cb4:	4a03      	ldr	r2, [pc, #12]	; (8009cc4 <HAL_FLASH_Lock+0x10>)
 8009cb6:	6913      	ldr	r3, [r2, #16]
 8009cb8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009cbc:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009cbe:	6113      	str	r3, [r2, #16]
}
 8009cc0:	4770      	bx	lr
 8009cc2:	bf00      	nop
 8009cc4:	40023c00 	.word	0x40023c00

08009cc8 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009cc8:	4b01      	ldr	r3, [pc, #4]	; (8009cd0 <HAL_FLASH_GetError+0x8>)
 8009cca:	69d8      	ldr	r0, [r3, #28]
}  
 8009ccc:	4770      	bx	lr
 8009cce:	bf00      	nop
 8009cd0:	20002a1c 	.word	0x20002a1c

08009cd4 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cd4:	4b14      	ldr	r3, [pc, #80]	; (8009d28 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009cd6:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cd8:	2200      	movs	r2, #0
{ 
 8009cda:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cdc:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009cde:	f7ff fe4b 	bl	8009978 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009ce2:	4e12      	ldr	r6, [pc, #72]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009ce4:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009ce6:	1c63      	adds	r3, r4, #1
 8009ce8:	d10f      	bne.n	8009d0a <FLASH_WaitForLastOperation+0x36>
 8009cea:	4a10      	ldr	r2, [pc, #64]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
 8009cec:	68d3      	ldr	r3, [r2, #12]
 8009cee:	03d8      	lsls	r0, r3, #15
 8009cf0:	d4fc      	bmi.n	8009cec <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009cf2:	4b0e      	ldr	r3, [pc, #56]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
 8009cf4:	68da      	ldr	r2, [r3, #12]
 8009cf6:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009cf8:	bf44      	itt	mi
 8009cfa:	2201      	movmi	r2, #1
 8009cfc:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009cfe:	4b0b      	ldr	r3, [pc, #44]	; (8009d2c <FLASH_WaitForLastOperation+0x58>)
 8009d00:	68d8      	ldr	r0, [r3, #12]
 8009d02:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009d06:	d10b      	bne.n	8009d20 <FLASH_WaitForLastOperation+0x4c>
}  
 8009d08:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009d0a:	68f3      	ldr	r3, [r6, #12]
 8009d0c:	03d9      	lsls	r1, r3, #15
 8009d0e:	d5f0      	bpl.n	8009cf2 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009d10:	b124      	cbz	r4, 8009d1c <FLASH_WaitForLastOperation+0x48>
 8009d12:	f7ff fe31 	bl	8009978 <HAL_GetTick>
 8009d16:	1b40      	subs	r0, r0, r5
 8009d18:	42a0      	cmp	r0, r4
 8009d1a:	d9e4      	bls.n	8009ce6 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009d1c:	2003      	movs	r0, #3
}  
 8009d1e:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009d20:	f7ff feca 	bl	8009ab8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009d24:	2001      	movs	r0, #1
}  
 8009d26:	bd70      	pop	{r4, r5, r6, pc}
 8009d28:	20002a1c 	.word	0x20002a1c
 8009d2c:	40023c00 	.word	0x40023c00

08009d30 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009d30:	4b14      	ldr	r3, [pc, #80]	; (8009d84 <FLASH_FlushCaches+0x54>)
 8009d32:	681a      	ldr	r2, [r3, #0]
 8009d34:	0591      	lsls	r1, r2, #22
 8009d36:	d50f      	bpl.n	8009d58 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009d3e:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009d40:	681a      	ldr	r2, [r3, #0]
 8009d42:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d46:	601a      	str	r2, [r3, #0]
 8009d48:	681a      	ldr	r2, [r3, #0]
 8009d4a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009d4e:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009d50:	681a      	ldr	r2, [r3, #0]
 8009d52:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d56:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009d58:	4b0a      	ldr	r3, [pc, #40]	; (8009d84 <FLASH_FlushCaches+0x54>)
 8009d5a:	681a      	ldr	r2, [r3, #0]
 8009d5c:	0552      	lsls	r2, r2, #21
 8009d5e:	d50f      	bpl.n	8009d80 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009d60:	681a      	ldr	r2, [r3, #0]
 8009d62:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d66:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009d68:	681a      	ldr	r2, [r3, #0]
 8009d6a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009d6e:	601a      	str	r2, [r3, #0]
 8009d70:	681a      	ldr	r2, [r3, #0]
 8009d72:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009d76:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009d78:	681a      	ldr	r2, [r3, #0]
 8009d7a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009d7e:	601a      	str	r2, [r3, #0]
  }
}
 8009d80:	4770      	bx	lr
 8009d82:	bf00      	nop
 8009d84:	40023c00 	.word	0x40023c00

08009d88 <HAL_FLASHEx_Erase>:
{
 8009d88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009d8c:	4f44      	ldr	r7, [pc, #272]	; (8009ea0 <HAL_FLASHEx_Erase+0x118>)
 8009d8e:	7e3b      	ldrb	r3, [r7, #24]
 8009d90:	2b01      	cmp	r3, #1
 8009d92:	d053      	beq.n	8009e3c <HAL_FLASHEx_Erase+0xb4>
 8009d94:	2301      	movs	r3, #1
 8009d96:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d98:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009d9c:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009d9e:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009da0:	f7ff ff98 	bl	8009cd4 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009da4:	4606      	mov	r6, r0
 8009da6:	2800      	cmp	r0, #0
 8009da8:	d143      	bne.n	8009e32 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009daa:	f04f 33ff 	mov.w	r3, #4294967295
 8009dae:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009db2:	f8d9 3000 	ldr.w	r3, [r9]
 8009db6:	2b01      	cmp	r3, #1
 8009db8:	d044      	beq.n	8009e44 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009dba:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009dbe:	442b      	add	r3, r5
 8009dc0:	429d      	cmp	r5, r3
 8009dc2:	d234      	bcs.n	8009e2e <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009dc4:	4c37      	ldr	r4, [pc, #220]	; (8009ea4 <HAL_FLASHEx_Erase+0x11c>)
 8009dc6:	e005      	b.n	8009dd4 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009dc8:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009dcc:	3501      	adds	r5, #1
 8009dce:	4413      	add	r3, r2
 8009dd0:	42ab      	cmp	r3, r5
 8009dd2:	d92c      	bls.n	8009e2e <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009dd4:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009dd8:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009dda:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009dde:	bf98      	it	ls
 8009de0:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009de2:	6923      	ldr	r3, [r4, #16]
 8009de4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009de8:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009dea:	6923      	ldr	r3, [r4, #16]
 8009dec:	430b      	orrs	r3, r1
 8009dee:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009df0:	6923      	ldr	r3, [r4, #16]
 8009df2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009df6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009df8:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009dfa:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009dfc:	bf8c      	ite	hi
 8009dfe:	1d2a      	addhi	r2, r5, #4
 8009e00:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009e02:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009e06:	f043 0302 	orr.w	r3, r3, #2
 8009e0a:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009e0c:	6923      	ldr	r3, [r4, #16]
 8009e0e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e12:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e14:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e18:	f7ff ff5c 	bl	8009cd4 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009e1c:	6923      	ldr	r3, [r4, #16]
 8009e1e:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009e22:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009e24:	2800      	cmp	r0, #0
 8009e26:	d0cf      	beq.n	8009dc8 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009e28:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e2c:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009e2e:	f7ff ff7f 	bl	8009d30 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009e32:	2300      	movs	r3, #0
 8009e34:	763b      	strb	r3, [r7, #24]
}
 8009e36:	4630      	mov	r0, r6
 8009e38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009e3c:	2602      	movs	r6, #2
}
 8009e3e:	4630      	mov	r0, r6
 8009e40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e44:	4a17      	ldr	r2, [pc, #92]	; (8009ea4 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e46:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e4a:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e4c:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e50:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009e54:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e56:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009e58:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e5a:	d01a      	beq.n	8009e92 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009e5c:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009e5e:	bf0c      	ite	eq
 8009e60:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009e64:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009e68:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009e6a:	4c0e      	ldr	r4, [pc, #56]	; (8009ea4 <HAL_FLASHEx_Erase+0x11c>)
 8009e6c:	021b      	lsls	r3, r3, #8
 8009e6e:	6922      	ldr	r2, [r4, #16]
 8009e70:	b29b      	uxth	r3, r3
 8009e72:	4313      	orrs	r3, r2
 8009e74:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e78:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e7a:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e7e:	f7ff ff29 	bl	8009cd4 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e82:	6923      	ldr	r3, [r4, #16]
 8009e84:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009e88:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e8c:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e8e:	6123      	str	r3, [r4, #16]
 8009e90:	e7cd      	b.n	8009e2e <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009e92:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009e96:	f041 0104 	orr.w	r1, r1, #4
 8009e9a:	6111      	str	r1, [r2, #16]
 8009e9c:	e7e5      	b.n	8009e6a <HAL_FLASHEx_Erase+0xe2>
 8009e9e:	bf00      	nop
 8009ea0:	20002a1c 	.word	0x20002a1c
 8009ea4:	40023c00 	.word	0x40023c00

08009ea8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009eac:	2200      	movs	r2, #0
 8009eae:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009eb0:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a114 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009eb4:	4e90      	ldr	r6, [pc, #576]	; (800a0f8 <HAL_GPIO_Init+0x250>)
{
 8009eb6:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009eb8:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009eba:	4689      	mov	r9, r1
 8009ebc:	e005      	b.n	8009eca <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ebe:	3301      	adds	r3, #1
 8009ec0:	2b10      	cmp	r3, #16
 8009ec2:	f102 0202 	add.w	r2, r2, #2
 8009ec6:	f000 8095 	beq.w	8009ff4 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009eca:	2101      	movs	r1, #1
 8009ecc:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009ece:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009ed2:	43a1      	bics	r1, r4
 8009ed4:	d1f3      	bne.n	8009ebe <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009ed6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009eda:	f00c 0103 	and.w	r1, ip, #3
 8009ede:	1e4d      	subs	r5, r1, #1
 8009ee0:	2d01      	cmp	r5, #1
 8009ee2:	f240 808a 	bls.w	8009ffa <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009ee6:	2903      	cmp	r1, #3
 8009ee8:	f040 80ca 	bne.w	800a080 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009eec:	4091      	lsls	r1, r2
 8009eee:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009ef0:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009ef2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009ef4:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009ef6:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009efa:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009efc:	d0df      	beq.n	8009ebe <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009efe:	2100      	movs	r1, #0
 8009f00:	9103      	str	r1, [sp, #12]
 8009f02:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f06:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009f0a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009f0e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f12:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009f16:	9103      	str	r1, [sp, #12]
 8009f18:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f1a:	f023 0103 	bic.w	r1, r3, #3
 8009f1e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009f22:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f26:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f2a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f2c:	00bf      	lsls	r7, r7, #2
 8009f2e:	f04f 0e0f 	mov.w	lr, #15
 8009f32:	fa0e fe07 	lsl.w	lr, lr, r7
 8009f36:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009f3a:	4d70      	ldr	r5, [pc, #448]	; (800a0fc <HAL_GPIO_Init+0x254>)
 8009f3c:	42a8      	cmp	r0, r5
 8009f3e:	d02e      	beq.n	8009f9e <HAL_GPIO_Init+0xf6>
 8009f40:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009f44:	42a8      	cmp	r0, r5
 8009f46:	f000 809f 	beq.w	800a088 <HAL_GPIO_Init+0x1e0>
 8009f4a:	4d6d      	ldr	r5, [pc, #436]	; (800a100 <HAL_GPIO_Init+0x258>)
 8009f4c:	42a8      	cmp	r0, r5
 8009f4e:	f000 80a2 	beq.w	800a096 <HAL_GPIO_Init+0x1ee>
 8009f52:	4d6c      	ldr	r5, [pc, #432]	; (800a104 <HAL_GPIO_Init+0x25c>)
 8009f54:	42a8      	cmp	r0, r5
 8009f56:	f000 80a5 	beq.w	800a0a4 <HAL_GPIO_Init+0x1fc>
 8009f5a:	4d6b      	ldr	r5, [pc, #428]	; (800a108 <HAL_GPIO_Init+0x260>)
 8009f5c:	42a8      	cmp	r0, r5
 8009f5e:	f000 80a8 	beq.w	800a0b2 <HAL_GPIO_Init+0x20a>
 8009f62:	4d6a      	ldr	r5, [pc, #424]	; (800a10c <HAL_GPIO_Init+0x264>)
 8009f64:	42a8      	cmp	r0, r5
 8009f66:	f000 80b2 	beq.w	800a0ce <HAL_GPIO_Init+0x226>
 8009f6a:	4d69      	ldr	r5, [pc, #420]	; (800a110 <HAL_GPIO_Init+0x268>)
 8009f6c:	42a8      	cmp	r0, r5
 8009f6e:	f000 80b5 	beq.w	800a0dc <HAL_GPIO_Init+0x234>
 8009f72:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a118 <HAL_GPIO_Init+0x270>
 8009f76:	4570      	cmp	r0, lr
 8009f78:	f000 80a2 	beq.w	800a0c0 <HAL_GPIO_Init+0x218>
 8009f7c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a11c <HAL_GPIO_Init+0x274>
 8009f80:	4570      	cmp	r0, lr
 8009f82:	f000 80b2 	beq.w	800a0ea <HAL_GPIO_Init+0x242>
 8009f86:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a120 <HAL_GPIO_Init+0x278>
 8009f8a:	4570      	cmp	r0, lr
 8009f8c:	bf0c      	ite	eq
 8009f8e:	f04f 0e09 	moveq.w	lr, #9
 8009f92:	f04f 0e0a 	movne.w	lr, #10
 8009f96:	fa0e f707 	lsl.w	r7, lr, r7
 8009f9a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009f9e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009fa2:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009fa4:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009fa8:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009fac:	bf0c      	ite	eq
 8009fae:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fb0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009fb4:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009fb6:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009fb8:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009fbc:	bf0c      	ite	eq
 8009fbe:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fc0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009fc4:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009fc6:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009fc8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009fcc:	bf0c      	ite	eq
 8009fce:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fd0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009fd4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009fd6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009fd8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fdc:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009fe0:	bf0c      	ite	eq
 8009fe2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fe4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fe8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009fea:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fec:	f102 0202 	add.w	r2, r2, #2
 8009ff0:	f47f af6b 	bne.w	8009eca <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009ff4:	b005      	add	sp, #20
 8009ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009ffa:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009ffe:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a002:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a006:	2503      	movs	r5, #3
 800a008:	fa05 f802 	lsl.w	r8, r5, r2
 800a00c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a010:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a014:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a016:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a018:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a01c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a020:	409f      	lsls	r7, r3
 800a022:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a026:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a02a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a02c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a02e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a032:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a036:	4097      	lsls	r7, r2
 800a038:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a03c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a03e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a040:	fa01 f102 	lsl.w	r1, r1, r2
 800a044:	f47f af54 	bne.w	8009ef0 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a048:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a04c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a050:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a054:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a058:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a05a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a05e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a062:	fa07 f708 	lsl.w	r7, r7, r8
 800a066:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a068:	270f      	movs	r7, #15
 800a06a:	fa07 f808 	lsl.w	r8, r7, r8
 800a06e:	9f00      	ldr	r7, [sp, #0]
 800a070:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a074:	9f01      	ldr	r7, [sp, #4]
 800a076:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a07a:	f8ce 7020 	str.w	r7, [lr, #32]
 800a07e:	e737      	b.n	8009ef0 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a080:	2503      	movs	r5, #3
 800a082:	4095      	lsls	r5, r2
 800a084:	43ed      	mvns	r5, r5
 800a086:	e7d1      	b.n	800a02c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a088:	f04f 0e01 	mov.w	lr, #1
 800a08c:	fa0e f707 	lsl.w	r7, lr, r7
 800a090:	ea48 0807 	orr.w	r8, r8, r7
 800a094:	e783      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a096:	f04f 0e02 	mov.w	lr, #2
 800a09a:	fa0e f707 	lsl.w	r7, lr, r7
 800a09e:	ea48 0807 	orr.w	r8, r8, r7
 800a0a2:	e77c      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0a4:	f04f 0e03 	mov.w	lr, #3
 800a0a8:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ac:	ea48 0807 	orr.w	r8, r8, r7
 800a0b0:	e775      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0b2:	f04f 0e04 	mov.w	lr, #4
 800a0b6:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ba:	ea48 0807 	orr.w	r8, r8, r7
 800a0be:	e76e      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0c0:	f04f 0e07 	mov.w	lr, #7
 800a0c4:	fa0e f707 	lsl.w	r7, lr, r7
 800a0c8:	ea48 0807 	orr.w	r8, r8, r7
 800a0cc:	e767      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0ce:	f04f 0e05 	mov.w	lr, #5
 800a0d2:	fa0e f707 	lsl.w	r7, lr, r7
 800a0d6:	ea48 0807 	orr.w	r8, r8, r7
 800a0da:	e760      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0dc:	f04f 0e06 	mov.w	lr, #6
 800a0e0:	fa0e f707 	lsl.w	r7, lr, r7
 800a0e4:	ea48 0807 	orr.w	r8, r8, r7
 800a0e8:	e759      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0ea:	f04f 0e08 	mov.w	lr, #8
 800a0ee:	fa0e f707 	lsl.w	r7, lr, r7
 800a0f2:	ea48 0807 	orr.w	r8, r8, r7
 800a0f6:	e752      	b.n	8009f9e <HAL_GPIO_Init+0xf6>
 800a0f8:	40013c00 	.word	0x40013c00
 800a0fc:	40020000 	.word	0x40020000
 800a100:	40020800 	.word	0x40020800
 800a104:	40020c00 	.word	0x40020c00
 800a108:	40021000 	.word	0x40021000
 800a10c:	40021400 	.word	0x40021400
 800a110:	40021800 	.word	0x40021800
 800a114:	40023800 	.word	0x40023800
 800a118:	40021c00 	.word	0x40021c00
 800a11c:	40022000 	.word	0x40022000
 800a120:	40022400 	.word	0x40022400

0800a124 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a124:	6903      	ldr	r3, [r0, #16]
 800a126:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a128:	bf14      	ite	ne
 800a12a:	2001      	movne	r0, #1
 800a12c:	2000      	moveq	r0, #0
 800a12e:	4770      	bx	lr

0800a130 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a130:	b902      	cbnz	r2, 800a134 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a132:	0409      	lsls	r1, r1, #16
 800a134:	6181      	str	r1, [r0, #24]
  }
}
 800a136:	4770      	bx	lr

0800a138 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a138:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a13a:	ea01 0203 	and.w	r2, r1, r3
 800a13e:	ea21 0103 	bic.w	r1, r1, r3
 800a142:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a146:	6181      	str	r1, [r0, #24]
}
 800a148:	4770      	bx	lr
 800a14a:	bf00      	nop

0800a14c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a14c:	4770      	bx	lr
 800a14e:	bf00      	nop

0800a150 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a150:	4a04      	ldr	r2, [pc, #16]	; (800a164 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a152:	6951      	ldr	r1, [r2, #20]
 800a154:	4201      	tst	r1, r0
 800a156:	d100      	bne.n	800a15a <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a158:	4770      	bx	lr
{
 800a15a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a15c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a15e:	f7ff fff5 	bl	800a14c <HAL_GPIO_EXTI_Callback>
}
 800a162:	bd08      	pop	{r3, pc}
 800a164:	40013c00 	.word	0x40013c00

0800a168 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a16c:	6804      	ldr	r4, [r0, #0]
{
 800a16e:	b083      	sub	sp, #12
 800a170:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a172:	6823      	ldr	r3, [r4, #0]
{
 800a174:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a178:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a17c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a180:	4606      	mov	r6, r0
 800a182:	468a      	mov	sl, r1
 800a184:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a186:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a188:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a18c:	d136      	bne.n	800a1fc <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a18e:	6965      	ldr	r5, [r4, #20]
 800a190:	07e8      	lsls	r0, r5, #31
 800a192:	d5fc      	bpl.n	800a18e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a194:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a198:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a19a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a19e:	d003      	beq.n	800a1a8 <I2C_RequestMemoryWrite+0x40>
 800a1a0:	e04f      	b.n	800a242 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1a2:	6961      	ldr	r1, [r4, #20]
 800a1a4:	054d      	lsls	r5, r1, #21
 800a1a6:	d45d      	bmi.n	800a264 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a1a8:	6961      	ldr	r1, [r4, #20]
 800a1aa:	078b      	lsls	r3, r1, #30
 800a1ac:	d5f9      	bpl.n	800a1a2 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1ae:	2300      	movs	r3, #0
 800a1b0:	9301      	str	r3, [sp, #4]
 800a1b2:	6963      	ldr	r3, [r4, #20]
 800a1b4:	9301      	str	r3, [sp, #4]
 800a1b6:	69a3      	ldr	r3, [r4, #24]
 800a1b8:	9301      	str	r3, [sp, #4]
 800a1ba:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1bc:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a1c0:	f040 8088 	bne.w	800a2d4 <I2C_RequestMemoryWrite+0x16c>
 800a1c4:	6963      	ldr	r3, [r4, #20]
 800a1c6:	061a      	lsls	r2, r3, #24
 800a1c8:	d464      	bmi.n	800a294 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1ca:	6963      	ldr	r3, [r4, #20]
 800a1cc:	055b      	lsls	r3, r3, #21
 800a1ce:	d5f9      	bpl.n	800a1c4 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1d0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1d2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1d6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1d8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1da:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1dc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a1e0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1e4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a1e6:	f043 0304 	orr.w	r3, r3, #4
 800a1ea:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1ec:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a1ee:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1f0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a1f2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1f6:	d066      	beq.n	800a2c6 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a1f8:	2001      	movs	r0, #1
 800a1fa:	e01f      	b.n	800a23c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1fc:	6963      	ldr	r3, [r4, #20]
 800a1fe:	07d9      	lsls	r1, r3, #31
 800a200:	d4c8      	bmi.n	800a194 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a202:	f7ff fbb9 	bl	8009978 <HAL_GetTick>
 800a206:	eba0 000b 	sub.w	r0, r0, fp
 800a20a:	4581      	cmp	r9, r0
 800a20c:	d304      	bcc.n	800a218 <I2C_RequestMemoryWrite+0xb0>
 800a20e:	f1b9 0f00 	cmp.w	r9, #0
 800a212:	d001      	beq.n	800a218 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a214:	6834      	ldr	r4, [r6, #0]
 800a216:	e7b7      	b.n	800a188 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a218:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a21a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a21c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a21e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a222:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a226:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a228:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a22a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a22e:	f042 0220 	orr.w	r2, r2, #32
 800a232:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a234:	680b      	ldr	r3, [r1, #0]
 800a236:	05dc      	lsls	r4, r3, #23
 800a238:	d435      	bmi.n	800a2a6 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a23a:	2003      	movs	r0, #3
}
 800a23c:	b003      	add	sp, #12
 800a23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a242:	6963      	ldr	r3, [r4, #20]
 800a244:	0798      	lsls	r0, r3, #30
 800a246:	d4b2      	bmi.n	800a1ae <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a248:	6963      	ldr	r3, [r4, #20]
 800a24a:	055a      	lsls	r2, r3, #21
 800a24c:	d40a      	bmi.n	800a264 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a24e:	f7ff fb93 	bl	8009978 <HAL_GetTick>
 800a252:	eba0 000b 	sub.w	r0, r0, fp
 800a256:	4581      	cmp	r9, r0
 800a258:	d34e      	bcc.n	800a2f8 <I2C_RequestMemoryWrite+0x190>
 800a25a:	f1b9 0f00 	cmp.w	r9, #0
 800a25e:	d04b      	beq.n	800a2f8 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a260:	6834      	ldr	r4, [r6, #0]
 800a262:	e79a      	b.n	800a19a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a264:	6823      	ldr	r3, [r4, #0]
 800a266:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a26a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a26c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a26e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a272:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a274:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a276:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a278:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a27c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a280:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a282:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a286:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a28a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a28c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a28e:	b003      	add	sp, #12
 800a290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a294:	f1b8 0f01 	cmp.w	r8, #1
 800a298:	d109      	bne.n	800a2ae <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a29a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a29c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a29e:	6127      	str	r7, [r4, #16]
}
 800a2a0:	b003      	add	sp, #12
 800a2a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a2a6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2aa:	6433      	str	r3, [r6, #64]	; 0x40
 800a2ac:	e7c5      	b.n	800a23a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a2ae:	0a3b      	lsrs	r3, r7, #8
 800a2b0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2b2:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a2b6:	d12e      	bne.n	800a316 <I2C_RequestMemoryWrite+0x1ae>
 800a2b8:	6963      	ldr	r3, [r4, #20]
 800a2ba:	0619      	lsls	r1, r3, #24
 800a2bc:	d4ed      	bmi.n	800a29a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2be:	6963      	ldr	r3, [r4, #20]
 800a2c0:	055a      	lsls	r2, r3, #21
 800a2c2:	d5f9      	bpl.n	800a2b8 <I2C_RequestMemoryWrite+0x150>
 800a2c4:	e784      	b.n	800a1d0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2c6:	6832      	ldr	r2, [r6, #0]
 800a2c8:	6813      	ldr	r3, [r2, #0]
 800a2ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a2ce:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2d0:	6013      	str	r3, [r2, #0]
 800a2d2:	e7b3      	b.n	800a23c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2d4:	6963      	ldr	r3, [r4, #20]
 800a2d6:	061d      	lsls	r5, r3, #24
 800a2d8:	d4dc      	bmi.n	800a294 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2da:	6963      	ldr	r3, [r4, #20]
 800a2dc:	0559      	lsls	r1, r3, #21
 800a2de:	f53f af77 	bmi.w	800a1d0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2e2:	f7ff fb49 	bl	8009978 <HAL_GetTick>
 800a2e6:	eba0 000b 	sub.w	r0, r0, fp
 800a2ea:	4581      	cmp	r9, r0
 800a2ec:	d325      	bcc.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
 800a2ee:	f1b9 0f00 	cmp.w	r9, #0
 800a2f2:	d022      	beq.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2f4:	6834      	ldr	r4, [r6, #0]
 800a2f6:	e761      	b.n	800a1bc <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2f8:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2fa:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2fc:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2fe:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a302:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a306:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a308:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a30c:	f043 0320 	orr.w	r3, r3, #32
 800a310:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a312:	2001      	movs	r0, #1
 800a314:	e792      	b.n	800a23c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a316:	6963      	ldr	r3, [r4, #20]
 800a318:	061b      	lsls	r3, r3, #24
 800a31a:	d4be      	bmi.n	800a29a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a31c:	6963      	ldr	r3, [r4, #20]
 800a31e:	0558      	lsls	r0, r3, #21
 800a320:	f53f af56 	bmi.w	800a1d0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a324:	f7ff fb28 	bl	8009978 <HAL_GetTick>
 800a328:	eba0 000b 	sub.w	r0, r0, fp
 800a32c:	4581      	cmp	r9, r0
 800a32e:	d304      	bcc.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
 800a330:	f1b9 0f00 	cmp.w	r9, #0
 800a334:	d001      	beq.n	800a33a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a336:	6834      	ldr	r4, [r6, #0]
 800a338:	e7bb      	b.n	800a2b2 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a33a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a33c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a33e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a340:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a344:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a348:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a34a:	4313      	orrs	r3, r2
 800a34c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a34e:	e74d      	b.n	800a1ec <I2C_RequestMemoryWrite+0x84>

0800a350 <I2C_RequestMemoryRead>:
{
 800a350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a354:	6804      	ldr	r4, [r0, #0]
{
 800a356:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a358:	6823      	ldr	r3, [r4, #0]
 800a35a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a35e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a360:	6823      	ldr	r3, [r4, #0]
{
 800a362:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a364:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a368:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a36c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a370:	6023      	str	r3, [r4, #0]
{
 800a372:	4606      	mov	r6, r0
 800a374:	468b      	mov	fp, r1
 800a376:	4617      	mov	r7, r2
 800a378:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a37c:	d13a      	bne.n	800a3f4 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a37e:	6965      	ldr	r5, [r4, #20]
 800a380:	07eb      	lsls	r3, r5, #31
 800a382:	d5fc      	bpl.n	800a37e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a384:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a388:	6123      	str	r3, [r4, #16]
 800a38a:	fa5f fb8b 	uxtb.w	fp, fp
 800a38e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a392:	d003      	beq.n	800a39c <I2C_RequestMemoryRead+0x4c>
 800a394:	e069      	b.n	800a46a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a396:	6965      	ldr	r5, [r4, #20]
 800a398:	056a      	lsls	r2, r5, #21
 800a39a:	d44e      	bmi.n	800a43a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a39c:	6965      	ldr	r5, [r4, #20]
 800a39e:	07a9      	lsls	r1, r5, #30
 800a3a0:	d5f9      	bpl.n	800a396 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3a2:	2300      	movs	r3, #0
 800a3a4:	9301      	str	r3, [sp, #4]
 800a3a6:	6963      	ldr	r3, [r4, #20]
 800a3a8:	9301      	str	r3, [sp, #4]
 800a3aa:	69a3      	ldr	r3, [r4, #24]
 800a3ac:	9301      	str	r3, [sp, #4]
 800a3ae:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3b0:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a3b4:	f040 80bd 	bne.w	800a532 <I2C_RequestMemoryRead+0x1e2>
 800a3b8:	6963      	ldr	r3, [r4, #20]
 800a3ba:	0618      	lsls	r0, r3, #24
 800a3bc:	d468      	bmi.n	800a490 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3be:	6963      	ldr	r3, [r4, #20]
 800a3c0:	0559      	lsls	r1, r3, #21
 800a3c2:	d5f9      	bpl.n	800a3b8 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3c4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3c6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3ca:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3cc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3ce:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3d0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3d4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a3d8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a3da:	f043 0304 	orr.w	r3, r3, #4
 800a3de:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a3e2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a3e6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3ea:	d070      	beq.n	800a4ce <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a3ec:	2001      	movs	r0, #1
}
 800a3ee:	b003      	add	sp, #12
 800a3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3f4:	6963      	ldr	r3, [r4, #20]
 800a3f6:	07dd      	lsls	r5, r3, #31
 800a3f8:	d4c4      	bmi.n	800a384 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3fa:	f7ff fabd 	bl	8009978 <HAL_GetTick>
 800a3fe:	eba0 0009 	sub.w	r0, r0, r9
 800a402:	4582      	cmp	sl, r0
 800a404:	d304      	bcc.n	800a410 <I2C_RequestMemoryRead+0xc0>
 800a406:	f1ba 0f00 	cmp.w	sl, #0
 800a40a:	d001      	beq.n	800a410 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a40c:	6834      	ldr	r4, [r6, #0]
 800a40e:	e7b3      	b.n	800a378 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a410:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a412:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a414:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a416:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a41a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a41e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a420:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a422:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a426:	f042 0220 	orr.w	r2, r2, #32
 800a42a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a42c:	680b      	ldr	r3, [r1, #0]
 800a42e:	05dc      	lsls	r4, r3, #23
 800a430:	d43d      	bmi.n	800a4ae <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a432:	2003      	movs	r0, #3
}
 800a434:	b003      	add	sp, #12
 800a436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a43a:	6823      	ldr	r3, [r4, #0]
 800a43c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a440:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a442:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a444:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a448:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a44a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a44c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a44e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a452:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a456:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a458:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a45c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a460:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a462:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a464:	b003      	add	sp, #12
 800a466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a46a:	6963      	ldr	r3, [r4, #20]
 800a46c:	079b      	lsls	r3, r3, #30
 800a46e:	d498      	bmi.n	800a3a2 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a470:	6963      	ldr	r3, [r4, #20]
 800a472:	0558      	lsls	r0, r3, #21
 800a474:	d4e1      	bmi.n	800a43a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a476:	f7ff fa7f 	bl	8009978 <HAL_GetTick>
 800a47a:	eba0 0009 	sub.w	r0, r0, r9
 800a47e:	4582      	cmp	sl, r0
 800a480:	f0c0 808f 	bcc.w	800a5a2 <I2C_RequestMemoryRead+0x252>
 800a484:	f1ba 0f00 	cmp.w	sl, #0
 800a488:	f000 808b 	beq.w	800a5a2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a48c:	6834      	ldr	r4, [r6, #0]
 800a48e:	e77e      	b.n	800a38e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a490:	f1b8 0f01 	cmp.w	r8, #1
 800a494:	d10f      	bne.n	800a4b6 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a496:	b2ff      	uxtb	r7, r7
 800a498:	6127      	str	r7, [r4, #16]
 800a49a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a49e:	d16e      	bne.n	800a57e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4a0:	6963      	ldr	r3, [r4, #20]
 800a4a2:	061b      	lsls	r3, r3, #24
 800a4a4:	d41a      	bmi.n	800a4dc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4a6:	6963      	ldr	r3, [r4, #20]
 800a4a8:	055f      	lsls	r7, r3, #21
 800a4aa:	d5f9      	bpl.n	800a4a0 <I2C_RequestMemoryRead+0x150>
 800a4ac:	e78a      	b.n	800a3c4 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a4ae:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a4b2:	6433      	str	r3, [r6, #64]	; 0x40
 800a4b4:	e7bd      	b.n	800a432 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a4b6:	0a3b      	lsrs	r3, r7, #8
 800a4b8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4ba:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4be:	d17e      	bne.n	800a5be <I2C_RequestMemoryRead+0x26e>
 800a4c0:	6963      	ldr	r3, [r4, #20]
 800a4c2:	061d      	lsls	r5, r3, #24
 800a4c4:	d4e7      	bmi.n	800a496 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4c6:	6963      	ldr	r3, [r4, #20]
 800a4c8:	0558      	lsls	r0, r3, #21
 800a4ca:	d5f9      	bpl.n	800a4c0 <I2C_RequestMemoryRead+0x170>
 800a4cc:	e77a      	b.n	800a3c4 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4ce:	6832      	ldr	r2, [r6, #0]
 800a4d0:	6813      	ldr	r3, [r2, #0]
 800a4d2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a4d6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4d8:	6013      	str	r3, [r2, #0]
 800a4da:	e7ab      	b.n	800a434 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4dc:	6823      	ldr	r3, [r4, #0]
 800a4de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a4e2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a4e4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4e8:	d113      	bne.n	800a512 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4ea:	6963      	ldr	r3, [r4, #20]
 800a4ec:	07d8      	lsls	r0, r3, #31
 800a4ee:	d5fc      	bpl.n	800a4ea <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a4f0:	f04b 0301 	orr.w	r3, fp, #1
 800a4f4:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a4f6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4fa:	d003      	beq.n	800a504 <I2C_RequestMemoryRead+0x1b4>
 800a4fc:	e02b      	b.n	800a556 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4fe:	6963      	ldr	r3, [r4, #20]
 800a500:	055b      	lsls	r3, r3, #21
 800a502:	d49a      	bmi.n	800a43a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a504:	6963      	ldr	r3, [r4, #20]
 800a506:	43db      	mvns	r3, r3
 800a508:	f013 0302 	ands.w	r3, r3, #2
 800a50c:	d1f7      	bne.n	800a4fe <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a50e:	4618      	mov	r0, r3
 800a510:	e790      	b.n	800a434 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a512:	6963      	ldr	r3, [r4, #20]
 800a514:	07d9      	lsls	r1, r3, #31
 800a516:	d4eb      	bmi.n	800a4f0 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a518:	f7ff fa2e 	bl	8009978 <HAL_GetTick>
 800a51c:	eba0 0009 	sub.w	r0, r0, r9
 800a520:	4582      	cmp	sl, r0
 800a522:	f4ff af75 	bcc.w	800a410 <I2C_RequestMemoryRead+0xc0>
 800a526:	f1ba 0f00 	cmp.w	sl, #0
 800a52a:	f43f af71 	beq.w	800a410 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a52e:	6834      	ldr	r4, [r6, #0]
 800a530:	e7d8      	b.n	800a4e4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a532:	6963      	ldr	r3, [r4, #20]
 800a534:	061a      	lsls	r2, r3, #24
 800a536:	d4ab      	bmi.n	800a490 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a538:	6963      	ldr	r3, [r4, #20]
 800a53a:	055d      	lsls	r5, r3, #21
 800a53c:	f53f af42 	bmi.w	800a3c4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a540:	f7ff fa1a 	bl	8009978 <HAL_GetTick>
 800a544:	eba0 0009 	sub.w	r0, r0, r9
 800a548:	4582      	cmp	sl, r0
 800a54a:	d34b      	bcc.n	800a5e4 <I2C_RequestMemoryRead+0x294>
 800a54c:	f1ba 0f00 	cmp.w	sl, #0
 800a550:	d048      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a552:	6834      	ldr	r4, [r6, #0]
 800a554:	e72c      	b.n	800a3b0 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a556:	6963      	ldr	r3, [r4, #20]
 800a558:	43db      	mvns	r3, r3
 800a55a:	f013 0302 	ands.w	r3, r3, #2
 800a55e:	d0d6      	beq.n	800a50e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a560:	6963      	ldr	r3, [r4, #20]
 800a562:	055a      	lsls	r2, r3, #21
 800a564:	f53f af69 	bmi.w	800a43a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a568:	f7ff fa06 	bl	8009978 <HAL_GetTick>
 800a56c:	eba0 0009 	sub.w	r0, r0, r9
 800a570:	4582      	cmp	sl, r0
 800a572:	d316      	bcc.n	800a5a2 <I2C_RequestMemoryRead+0x252>
 800a574:	f1ba 0f00 	cmp.w	sl, #0
 800a578:	d013      	beq.n	800a5a2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a57a:	6834      	ldr	r4, [r6, #0]
 800a57c:	e7bb      	b.n	800a4f6 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a57e:	6963      	ldr	r3, [r4, #20]
 800a580:	061d      	lsls	r5, r3, #24
 800a582:	d4ab      	bmi.n	800a4dc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a584:	6963      	ldr	r3, [r4, #20]
 800a586:	055a      	lsls	r2, r3, #21
 800a588:	f53f af1c 	bmi.w	800a3c4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a58c:	f7ff f9f4 	bl	8009978 <HAL_GetTick>
 800a590:	eba0 0009 	sub.w	r0, r0, r9
 800a594:	4582      	cmp	sl, r0
 800a596:	d325      	bcc.n	800a5e4 <I2C_RequestMemoryRead+0x294>
 800a598:	f1ba 0f00 	cmp.w	sl, #0
 800a59c:	d022      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a59e:	6834      	ldr	r4, [r6, #0]
 800a5a0:	e77b      	b.n	800a49a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5a2:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5a4:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5a6:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5a8:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5ac:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5b0:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a5b2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5b6:	f043 0320 	orr.w	r3, r3, #32
 800a5ba:	6433      	str	r3, [r6, #64]	; 0x40
 800a5bc:	e716      	b.n	800a3ec <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5be:	6963      	ldr	r3, [r4, #20]
 800a5c0:	0619      	lsls	r1, r3, #24
 800a5c2:	f53f af68 	bmi.w	800a496 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5c6:	6963      	ldr	r3, [r4, #20]
 800a5c8:	055b      	lsls	r3, r3, #21
 800a5ca:	f53f aefb 	bmi.w	800a3c4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5ce:	f7ff f9d3 	bl	8009978 <HAL_GetTick>
 800a5d2:	eba0 0009 	sub.w	r0, r0, r9
 800a5d6:	4582      	cmp	sl, r0
 800a5d8:	d304      	bcc.n	800a5e4 <I2C_RequestMemoryRead+0x294>
 800a5da:	f1ba 0f00 	cmp.w	sl, #0
 800a5de:	d001      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5e0:	6834      	ldr	r4, [r6, #0]
 800a5e2:	e76a      	b.n	800a4ba <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5e4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5e6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5e8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5ea:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a5ee:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a5f2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5f4:	4313      	orrs	r3, r2
 800a5f6:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a5f8:	e6f2      	b.n	800a3e0 <I2C_RequestMemoryRead+0x90>
 800a5fa:	bf00      	nop

0800a5fc <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a5fc:	2800      	cmp	r0, #0
 800a5fe:	f000 80b9 	beq.w	800a774 <HAL_I2C_Init+0x178>
{
 800a602:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a604:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a608:	4604      	mov	r4, r0
 800a60a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a60e:	2b00      	cmp	r3, #0
 800a610:	f000 8098 	beq.w	800a744 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a614:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a616:	2224      	movs	r2, #36	; 0x24
 800a618:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a61c:	681a      	ldr	r2, [r3, #0]
 800a61e:	f022 0201 	bic.w	r2, r2, #1
 800a622:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a624:	681a      	ldr	r2, [r3, #0]
 800a626:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a62a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a62c:	681a      	ldr	r2, [r3, #0]
 800a62e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a632:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a634:	f001 fe70 	bl	800c318 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a638:	6865      	ldr	r5, [r4, #4]
 800a63a:	4b4f      	ldr	r3, [pc, #316]	; (800a778 <HAL_I2C_Init+0x17c>)
 800a63c:	429d      	cmp	r5, r3
 800a63e:	d84f      	bhi.n	800a6e0 <HAL_I2C_Init+0xe4>
 800a640:	4b4e      	ldr	r3, [pc, #312]	; (800a77c <HAL_I2C_Init+0x180>)
 800a642:	4298      	cmp	r0, r3
 800a644:	d97c      	bls.n	800a740 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a646:	4b4e      	ldr	r3, [pc, #312]	; (800a780 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a648:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a64a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a64e:	1e43      	subs	r3, r0, #1
 800a650:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a654:	6822      	ldr	r2, [r4, #0]
 800a656:	6851      	ldr	r1, [r2, #4]
 800a658:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a65c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a660:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a662:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a664:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a668:	f10c 0c01 	add.w	ip, ip, #1
 800a66c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a670:	ea41 010c 	orr.w	r1, r1, ip
 800a674:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a676:	69d1      	ldr	r1, [r2, #28]
 800a678:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a67c:	3301      	adds	r3, #1
 800a67e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a682:	4203      	tst	r3, r0
 800a684:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a688:	d161      	bne.n	800a74e <HAL_I2C_Init+0x152>
 800a68a:	2304      	movs	r3, #4
 800a68c:	430b      	orrs	r3, r1
 800a68e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a690:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a694:	6811      	ldr	r1, [r2, #0]
 800a696:	4303      	orrs	r3, r0
 800a698:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a69c:	430b      	orrs	r3, r1
 800a69e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a6a0:	6891      	ldr	r1, [r2, #8]
 800a6a2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a6a6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a6aa:	4303      	orrs	r3, r0
 800a6ac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6b0:	430b      	orrs	r3, r1
 800a6b2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a6b4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a6b8:	68d1      	ldr	r1, [r2, #12]
 800a6ba:	4303      	orrs	r3, r0
 800a6bc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6c0:	430b      	orrs	r3, r1
 800a6c2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a6c4:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6c6:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a6c8:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a6cc:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a6ce:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6d0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a6d2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a6d6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a6dc:	4618      	mov	r0, r3
}
 800a6de:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a6e0:	4b28      	ldr	r3, [pc, #160]	; (800a784 <HAL_I2C_Init+0x188>)
 800a6e2:	4298      	cmp	r0, r3
 800a6e4:	d92c      	bls.n	800a740 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6e6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6e8:	4b25      	ldr	r3, [pc, #148]	; (800a780 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6ea:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6ec:	4e26      	ldr	r6, [pc, #152]	; (800a788 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a6ee:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6f2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a6f6:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a6fa:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6fc:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a700:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a704:	fb01 f303 	mul.w	r3, r1, r3
 800a708:	fba6 6303 	umull	r6, r3, r6, r3
 800a70c:	6a11      	ldr	r1, [r2, #32]
 800a70e:	099b      	lsrs	r3, r3, #6
 800a710:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a714:	3301      	adds	r3, #1
 800a716:	430b      	orrs	r3, r1
 800a718:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a71a:	69d1      	ldr	r1, [r2, #28]
 800a71c:	68a3      	ldr	r3, [r4, #8]
 800a71e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a722:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a726:	b9ab      	cbnz	r3, 800a754 <HAL_I2C_Init+0x158>
 800a728:	1e43      	subs	r3, r0, #1
 800a72a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a72e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a732:	3301      	adds	r3, #1
 800a734:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a738:	b1d3      	cbz	r3, 800a770 <HAL_I2C_Init+0x174>
 800a73a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a73e:	e7a5      	b.n	800a68c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a740:	2001      	movs	r0, #1
}
 800a742:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a744:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a748:	f7f6 ff6e 	bl	8001628 <HAL_I2C_MspInit>
 800a74c:	e762      	b.n	800a614 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a74e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a752:	e79b      	b.n	800a68c <HAL_I2C_Init+0x90>
 800a754:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a758:	1e43      	subs	r3, r0, #1
 800a75a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a75e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a762:	3301      	adds	r3, #1
 800a764:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a768:	b113      	cbz	r3, 800a770 <HAL_I2C_Init+0x174>
 800a76a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a76e:	e78d      	b.n	800a68c <HAL_I2C_Init+0x90>
 800a770:	2301      	movs	r3, #1
 800a772:	e78b      	b.n	800a68c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a774:	2001      	movs	r0, #1
}
 800a776:	4770      	bx	lr
 800a778:	000186a0 	.word	0x000186a0
 800a77c:	001e847f 	.word	0x001e847f
 800a780:	431bde83 	.word	0x431bde83
 800a784:	003d08ff 	.word	0x003d08ff
 800a788:	10624dd3 	.word	0x10624dd3

0800a78c <HAL_I2C_Mem_Write>:
{
 800a78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a790:	4604      	mov	r4, r0
 800a792:	b083      	sub	sp, #12
 800a794:	4699      	mov	r9, r3
 800a796:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a79a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a79c:	460f      	mov	r7, r1
 800a79e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a7a0:	f7ff f8ea 	bl	8009978 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a7a4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a7a8:	2b20      	cmp	r3, #32
 800a7aa:	d004      	beq.n	800a7b6 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a7ac:	2702      	movs	r7, #2
}
 800a7ae:	4638      	mov	r0, r7
 800a7b0:	b003      	add	sp, #12
 800a7b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7b6:	4605      	mov	r5, r0
 800a7b8:	e005      	b.n	800a7c6 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7ba:	f7ff f8dd 	bl	8009978 <HAL_GetTick>
 800a7be:	1b40      	subs	r0, r0, r5
 800a7c0:	2819      	cmp	r0, #25
 800a7c2:	f200 80a8 	bhi.w	800a916 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7c6:	6820      	ldr	r0, [r4, #0]
 800a7c8:	6983      	ldr	r3, [r0, #24]
 800a7ca:	ea6f 0c03 	mvn.w	ip, r3
 800a7ce:	f01c 0b02 	ands.w	fp, ip, #2
 800a7d2:	d0f2      	beq.n	800a7ba <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a7d4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a7d8:	2b01      	cmp	r3, #1
 800a7da:	d0e7      	beq.n	800a7ac <HAL_I2C_Mem_Write+0x20>
 800a7dc:	2301      	movs	r3, #1
 800a7de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a7e2:	6803      	ldr	r3, [r0, #0]
 800a7e4:	07db      	lsls	r3, r3, #31
 800a7e6:	d572      	bpl.n	800a8ce <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7e8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a7ea:	6807      	ldr	r7, [r0, #0]
 800a7ec:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a7f0:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a7f2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a7f4:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7f6:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7f8:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7fc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a800:	2040      	movs	r0, #64	; 0x40
 800a802:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a806:	2000      	movs	r0, #0
 800a808:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a80a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a80e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a810:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a812:	4856      	ldr	r0, [pc, #344]	; (800a96c <HAL_I2C_Mem_Write+0x1e0>)
 800a814:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a816:	464b      	mov	r3, r9
 800a818:	4642      	mov	r2, r8
 800a81a:	4620      	mov	r0, r4
 800a81c:	f7ff fca4 	bl	800a168 <I2C_RequestMemoryWrite>
 800a820:	4607      	mov	r7, r0
 800a822:	bb00      	cbnz	r0, 800a866 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a824:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a826:	2b00      	cmp	r3, #0
 800a828:	f000 809e 	beq.w	800a968 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a82c:	6823      	ldr	r3, [r4, #0]
 800a82e:	1c72      	adds	r2, r6, #1
 800a830:	d159      	bne.n	800a8e6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a832:	695a      	ldr	r2, [r3, #20]
 800a834:	0610      	lsls	r0, r2, #24
 800a836:	d41b      	bmi.n	800a870 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a838:	695a      	ldr	r2, [r3, #20]
 800a83a:	0551      	lsls	r1, r2, #21
 800a83c:	d5f9      	bpl.n	800a832 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a83e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a840:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a844:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a846:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a848:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a84a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a84e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a852:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a854:	f043 0304 	orr.w	r3, r3, #4
 800a858:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a85a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a85c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a85e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a860:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a864:	d038      	beq.n	800a8d8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a866:	2701      	movs	r7, #1
}
 800a868:	4638      	mov	r0, r7
 800a86a:	b003      	add	sp, #12
 800a86c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a870:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a874:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a878:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a87a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a87e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a882:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a884:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a886:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a888:	3a01      	subs	r2, #1
 800a88a:	b292      	uxth	r2, r2
 800a88c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a88e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a890:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a892:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a894:	0740      	lsls	r0, r0, #29
 800a896:	d517      	bpl.n	800a8c8 <HAL_I2C_Mem_Write+0x13c>
 800a898:	b942      	cbnz	r2, 800a8ac <HAL_I2C_Mem_Write+0x120>
 800a89a:	1c72      	adds	r2, r6, #1
 800a89c:	d156      	bne.n	800a94c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a89e:	695a      	ldr	r2, [r3, #20]
 800a8a0:	0750      	lsls	r0, r2, #29
 800a8a2:	d446      	bmi.n	800a932 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8a4:	695a      	ldr	r2, [r3, #20]
 800a8a6:	0551      	lsls	r1, r2, #21
 800a8a8:	d5f9      	bpl.n	800a89e <HAL_I2C_Mem_Write+0x112>
 800a8aa:	e7c8      	b.n	800a83e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a8ac:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a8b0:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a8b2:	f10c 0102 	add.w	r1, ip, #2
 800a8b6:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a8b8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a8ba:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a8be:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a8c0:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a8c2:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a8c4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a8c6:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a8c8:	2a00      	cmp	r2, #0
 800a8ca:	d1b0      	bne.n	800a82e <HAL_I2C_Mem_Write+0xa2>
 800a8cc:	e7e5      	b.n	800a89a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a8ce:	6803      	ldr	r3, [r0, #0]
 800a8d0:	f043 0301 	orr.w	r3, r3, #1
 800a8d4:	6003      	str	r3, [r0, #0]
 800a8d6:	e787      	b.n	800a7e8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8d8:	6822      	ldr	r2, [r4, #0]
 800a8da:	6813      	ldr	r3, [r2, #0]
 800a8dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a8e0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8e2:	6013      	str	r3, [r2, #0]
 800a8e4:	e763      	b.n	800a7ae <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8e6:	695a      	ldr	r2, [r3, #20]
 800a8e8:	0612      	lsls	r2, r2, #24
 800a8ea:	d4c1      	bmi.n	800a870 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8ec:	695a      	ldr	r2, [r3, #20]
 800a8ee:	0551      	lsls	r1, r2, #21
 800a8f0:	d4a5      	bmi.n	800a83e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8f2:	f7ff f841 	bl	8009978 <HAL_GetTick>
 800a8f6:	1b40      	subs	r0, r0, r5
 800a8f8:	4286      	cmp	r6, r0
 800a8fa:	d301      	bcc.n	800a900 <HAL_I2C_Mem_Write+0x174>
 800a8fc:	2e00      	cmp	r6, #0
 800a8fe:	d195      	bne.n	800a82c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a900:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a902:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a904:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a906:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a90a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a90e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a910:	4313      	orrs	r3, r2
 800a912:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a914:	e7a1      	b.n	800a85a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a916:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a918:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a91c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a920:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a924:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a926:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a92a:	f043 0320 	orr.w	r3, r3, #32
 800a92e:	6423      	str	r3, [r4, #64]	; 0x40
 800a930:	e73c      	b.n	800a7ac <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a932:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a934:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a936:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a93a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a93c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a93e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a942:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a946:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a94a:	e730      	b.n	800a7ae <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a94c:	695a      	ldr	r2, [r3, #20]
 800a94e:	0752      	lsls	r2, r2, #29
 800a950:	d4ef      	bmi.n	800a932 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a952:	695a      	ldr	r2, [r3, #20]
 800a954:	0551      	lsls	r1, r2, #21
 800a956:	f53f af72 	bmi.w	800a83e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a95a:	f7ff f80d 	bl	8009978 <HAL_GetTick>
 800a95e:	1b40      	subs	r0, r0, r5
 800a960:	4286      	cmp	r6, r0
 800a962:	d3cd      	bcc.n	800a900 <HAL_I2C_Mem_Write+0x174>
 800a964:	2e00      	cmp	r6, #0
 800a966:	d0cb      	beq.n	800a900 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a968:	6823      	ldr	r3, [r4, #0]
 800a96a:	e796      	b.n	800a89a <HAL_I2C_Mem_Write+0x10e>
 800a96c:	ffff0000 	.word	0xffff0000

0800a970 <HAL_I2C_Mem_Read>:
{
 800a970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a974:	4604      	mov	r4, r0
 800a976:	b087      	sub	sp, #28
 800a978:	4699      	mov	r9, r3
 800a97a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a97e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a980:	460f      	mov	r7, r1
 800a982:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a984:	f7fe fff8 	bl	8009978 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a988:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a98c:	2b20      	cmp	r3, #32
 800a98e:	d004      	beq.n	800a99a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a990:	2702      	movs	r7, #2
}
 800a992:	4638      	mov	r0, r7
 800a994:	b007      	add	sp, #28
 800a996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a99a:	4606      	mov	r6, r0
 800a99c:	e005      	b.n	800a9aa <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a99e:	f7fe ffeb 	bl	8009978 <HAL_GetTick>
 800a9a2:	1b80      	subs	r0, r0, r6
 800a9a4:	2819      	cmp	r0, #25
 800a9a6:	f200 80d2 	bhi.w	800ab4e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a9aa:	f8d4 c000 	ldr.w	ip, [r4]
 800a9ae:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a9b2:	43c0      	mvns	r0, r0
 800a9b4:	f010 0b02 	ands.w	fp, r0, #2
 800a9b8:	d0f1      	beq.n	800a99e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a9ba:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a9be:	2b01      	cmp	r3, #1
 800a9c0:	d0e6      	beq.n	800a990 <HAL_I2C_Mem_Read+0x20>
 800a9c2:	2301      	movs	r3, #1
 800a9c4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a9c8:	f8dc 3000 	ldr.w	r3, [ip]
 800a9cc:	07d9      	lsls	r1, r3, #31
 800a9ce:	d537      	bpl.n	800aa40 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9d0:	f8dc 0000 	ldr.w	r0, [ip]
 800a9d4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a9d8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a9dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a9de:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9e0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9e2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9e6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a9ea:	2040      	movs	r0, #64	; 0x40
 800a9ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9f0:	2000      	movs	r0, #0
 800a9f2:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a9f4:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a9f8:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a9fa:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a9fc:	4893      	ldr	r0, [pc, #588]	; (800ac4c <HAL_I2C_Mem_Read+0x2dc>)
 800a9fe:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa00:	4639      	mov	r1, r7
 800aa02:	464b      	mov	r3, r9
 800aa04:	4642      	mov	r2, r8
 800aa06:	4620      	mov	r0, r4
 800aa08:	f7ff fca2 	bl	800a350 <I2C_RequestMemoryRead>
 800aa0c:	4607      	mov	r7, r0
 800aa0e:	2800      	cmp	r0, #0
 800aa10:	f040 80ab 	bne.w	800ab6a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800aa14:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800aa16:	b9d2      	cbnz	r2, 800aa4e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa18:	6823      	ldr	r3, [r4, #0]
 800aa1a:	9002      	str	r0, [sp, #8]
 800aa1c:	695a      	ldr	r2, [r3, #20]
 800aa1e:	9202      	str	r2, [sp, #8]
 800aa20:	699a      	ldr	r2, [r3, #24]
 800aa22:	9202      	str	r2, [sp, #8]
 800aa24:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa26:	681a      	ldr	r2, [r3, #0]
 800aa28:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa2c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa2e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800aa30:	2220      	movs	r2, #32
 800aa32:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aa36:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa3a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800aa3e:	e7a8      	b.n	800a992 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800aa40:	f8dc 3000 	ldr.w	r3, [ip]
 800aa44:	f043 0301 	orr.w	r3, r3, #1
 800aa48:	f8cc 3000 	str.w	r3, [ip]
 800aa4c:	e7c0      	b.n	800a9d0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800aa4e:	2a01      	cmp	r2, #1
 800aa50:	f000 812c 	beq.w	800acac <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800aa54:	2a02      	cmp	r2, #2
 800aa56:	f000 80bd 	beq.w	800abd4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa5a:	6823      	ldr	r3, [r4, #0]
 800aa5c:	9005      	str	r0, [sp, #20]
 800aa5e:	6959      	ldr	r1, [r3, #20]
 800aa60:	9105      	str	r1, [sp, #20]
 800aa62:	6999      	ldr	r1, [r3, #24]
 800aa64:	9105      	str	r1, [sp, #20]
 800aa66:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800aa68:	2a03      	cmp	r2, #3
 800aa6a:	d849      	bhi.n	800ab00 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800aa6c:	2a01      	cmp	r2, #1
 800aa6e:	f000 80eb 	beq.w	800ac48 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800aa72:	2a02      	cmp	r2, #2
 800aa74:	f000 8089 	beq.w	800ab8a <HAL_I2C_Mem_Read+0x21a>
 800aa78:	1c69      	adds	r1, r5, #1
 800aa7a:	f040 80bb 	bne.w	800abf4 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa7e:	695a      	ldr	r2, [r3, #20]
 800aa80:	0752      	lsls	r2, r2, #29
 800aa82:	d5fc      	bpl.n	800aa7e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa84:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa86:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa88:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa8c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa8e:	691b      	ldr	r3, [r3, #16]
 800aa90:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aa92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aa94:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa96:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa98:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aa9a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aa9c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aa9e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aaa0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaa2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaa4:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800aaa6:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aaa8:	6822      	ldr	r2, [r4, #0]
 800aaaa:	f040 80af 	bne.w	800ac0c <HAL_I2C_Mem_Read+0x29c>
 800aaae:	6953      	ldr	r3, [r2, #20]
 800aab0:	075b      	lsls	r3, r3, #29
 800aab2:	d5fc      	bpl.n	800aaae <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aab4:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aab6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aab8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aabc:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aabe:	6913      	ldr	r3, [r2, #16]
 800aac0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aac2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aac4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aac6:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aac8:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800aaca:	3b01      	subs	r3, #1
 800aacc:	b29b      	uxth	r3, r3
 800aace:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aad0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aad2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aad4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aad8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aada:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aade:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aae0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aae2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aae4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aae6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aae8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aaea:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aaec:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aaee:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aaf0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaf2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaf4:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aaf6:	2a00      	cmp	r2, #0
 800aaf8:	d099      	beq.n	800aa2e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800aafa:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aafc:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800aafe:	d9b5      	bls.n	800aa6c <HAL_I2C_Mem_Read+0xfc>
 800ab00:	b95d      	cbnz	r5, 800ab1a <HAL_I2C_Mem_Read+0x1aa>
 800ab02:	e0c5      	b.n	800ac90 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ab04:	695a      	ldr	r2, [r3, #20]
 800ab06:	06d0      	lsls	r0, r2, #27
 800ab08:	f100 80b2 	bmi.w	800ac70 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab0c:	f7fe ff34 	bl	8009978 <HAL_GetTick>
 800ab10:	1b80      	subs	r0, r0, r6
 800ab12:	4285      	cmp	r5, r0
 800ab14:	f0c0 8086 	bcc.w	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ab18:	6823      	ldr	r3, [r4, #0]
 800ab1a:	695a      	ldr	r2, [r3, #20]
 800ab1c:	0652      	lsls	r2, r2, #25
 800ab1e:	d5f1      	bpl.n	800ab04 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab20:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab22:	691b      	ldr	r3, [r3, #16]
 800ab24:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ab26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab28:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ab2a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab2e:	3b01      	subs	r3, #1
 800ab30:	b29b      	uxth	r3, r3
 800ab32:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab34:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ab36:	3a01      	subs	r2, #1
 800ab38:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ab3a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab3e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ab40:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab42:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab46:	d5d6      	bpl.n	800aaf6 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab48:	6903      	ldr	r3, [r0, #16]
 800ab4a:	704b      	strb	r3, [r1, #1]
 800ab4c:	e036      	b.n	800abbc <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab4e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab50:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab54:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab58:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab5e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab62:	f043 0320 	orr.w	r3, r3, #32
 800ab66:	6423      	str	r3, [r4, #64]	; 0x40
 800ab68:	e712      	b.n	800a990 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ab6a:	2701      	movs	r7, #1
}
 800ab6c:	4638      	mov	r0, r7
 800ab6e:	b007      	add	sp, #28
 800ab70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab74:	695a      	ldr	r2, [r3, #20]
 800ab76:	0750      	lsls	r0, r2, #29
 800ab78:	d40c      	bmi.n	800ab94 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab7a:	f7fe fefd 	bl	8009978 <HAL_GetTick>
 800ab7e:	1b80      	subs	r0, r0, r6
 800ab80:	4285      	cmp	r5, r0
 800ab82:	d34f      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
 800ab84:	2d00      	cmp	r5, #0
 800ab86:	d04d      	beq.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab88:	6823      	ldr	r3, [r4, #0]
 800ab8a:	1c69      	adds	r1, r5, #1
 800ab8c:	d1f2      	bne.n	800ab74 <HAL_I2C_Mem_Read+0x204>
 800ab8e:	695a      	ldr	r2, [r3, #20]
 800ab90:	0752      	lsls	r2, r2, #29
 800ab92:	d5fc      	bpl.n	800ab8e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab94:	681a      	ldr	r2, [r3, #0]
 800ab96:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab9a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab9c:	691a      	ldr	r2, [r3, #16]
 800ab9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aba0:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800aba2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aba4:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800aba6:	3b01      	subs	r3, #1
 800aba8:	b29b      	uxth	r3, r3
 800abaa:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800abae:	3b01      	subs	r3, #1
 800abb0:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abb2:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800abb4:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abb6:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800abb8:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abba:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800abbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800abbe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800abc0:	3301      	adds	r3, #1
 800abc2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800abc4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abc6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800abc8:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800abca:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800abcc:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800abce:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800abd0:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abd2:	e790      	b.n	800aaf6 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abd4:	6823      	ldr	r3, [r4, #0]
 800abd6:	6819      	ldr	r1, [r3, #0]
 800abd8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abdc:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abde:	6819      	ldr	r1, [r3, #0]
 800abe0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800abe4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abe6:	9004      	str	r0, [sp, #16]
 800abe8:	6959      	ldr	r1, [r3, #20]
 800abea:	9104      	str	r1, [sp, #16]
 800abec:	6999      	ldr	r1, [r3, #24]
 800abee:	9104      	str	r1, [sp, #16]
 800abf0:	9904      	ldr	r1, [sp, #16]
 800abf2:	e739      	b.n	800aa68 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abf4:	695a      	ldr	r2, [r3, #20]
 800abf6:	0750      	lsls	r0, r2, #29
 800abf8:	f53f af44 	bmi.w	800aa84 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abfc:	f7fe febc 	bl	8009978 <HAL_GetTick>
 800ac00:	1b80      	subs	r0, r0, r6
 800ac02:	4285      	cmp	r5, r0
 800ac04:	d30e      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
 800ac06:	b16d      	cbz	r5, 800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac08:	6823      	ldr	r3, [r4, #0]
 800ac0a:	e735      	b.n	800aa78 <HAL_I2C_Mem_Read+0x108>
 800ac0c:	6953      	ldr	r3, [r2, #20]
 800ac0e:	0758      	lsls	r0, r3, #29
 800ac10:	f53f af50 	bmi.w	800aab4 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac14:	f7fe feb0 	bl	8009978 <HAL_GetTick>
 800ac18:	1b80      	subs	r0, r0, r6
 800ac1a:	4285      	cmp	r5, r0
 800ac1c:	d302      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
 800ac1e:	2d00      	cmp	r5, #0
 800ac20:	f47f af41 	bne.w	800aaa6 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac24:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac26:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac28:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac2e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac32:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac34:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac38:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac3a:	f043 0320 	orr.w	r3, r3, #32
}
 800ac3e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac40:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ac42:	b007      	add	sp, #28
 800ac44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac48:	b95d      	cbnz	r5, 800ac62 <HAL_I2C_Mem_Read+0x2f2>
 800ac4a:	e02b      	b.n	800aca4 <HAL_I2C_Mem_Read+0x334>
 800ac4c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac50:	695a      	ldr	r2, [r3, #20]
 800ac52:	06d2      	lsls	r2, r2, #27
 800ac54:	d40c      	bmi.n	800ac70 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac56:	f7fe fe8f 	bl	8009978 <HAL_GetTick>
 800ac5a:	1b80      	subs	r0, r0, r6
 800ac5c:	4285      	cmp	r5, r0
 800ac5e:	d3e1      	bcc.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac60:	6823      	ldr	r3, [r4, #0]
 800ac62:	695a      	ldr	r2, [r3, #20]
 800ac64:	0651      	lsls	r1, r2, #25
 800ac66:	d5f3      	bpl.n	800ac50 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac68:	691a      	ldr	r2, [r3, #16]
 800ac6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac6c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ac6e:	e7a5      	b.n	800abbc <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac70:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac72:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac76:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac78:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac7a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac7c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac80:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ac84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac86:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ac88:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac8c:	2701      	movs	r7, #1
 800ac8e:	e680      	b.n	800a992 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac90:	695a      	ldr	r2, [r3, #20]
 800ac92:	0652      	lsls	r2, r2, #25
 800ac94:	f53f af44 	bmi.w	800ab20 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac98:	695a      	ldr	r2, [r3, #20]
 800ac9a:	06d1      	lsls	r1, r2, #27
 800ac9c:	d4e8      	bmi.n	800ac70 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac9e:	f7fe fe6b 	bl	8009978 <HAL_GetTick>
 800aca2:	e7bf      	b.n	800ac24 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aca4:	695a      	ldr	r2, [r3, #20]
 800aca6:	0650      	lsls	r0, r2, #25
 800aca8:	d5f6      	bpl.n	800ac98 <HAL_I2C_Mem_Read+0x328>
 800acaa:	e7dd      	b.n	800ac68 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acac:	6823      	ldr	r3, [r4, #0]
 800acae:	6819      	ldr	r1, [r3, #0]
 800acb0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800acb4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acb6:	9003      	str	r0, [sp, #12]
 800acb8:	6959      	ldr	r1, [r3, #20]
 800acba:	9103      	str	r1, [sp, #12]
 800acbc:	6999      	ldr	r1, [r3, #24]
 800acbe:	9103      	str	r1, [sp, #12]
 800acc0:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acc2:	6819      	ldr	r1, [r3, #0]
 800acc4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800acc8:	6019      	str	r1, [r3, #0]
 800acca:	e6cd      	b.n	800aa68 <HAL_I2C_Mem_Read+0xf8>

0800accc <HAL_I2C_MasterTxCpltCallback>:
 800accc:	4770      	bx	lr
 800acce:	bf00      	nop

0800acd0 <HAL_I2C_MasterRxCpltCallback>:
 800acd0:	4770      	bx	lr
 800acd2:	bf00      	nop

0800acd4 <HAL_I2C_SlaveTxCpltCallback>:
 800acd4:	4770      	bx	lr
 800acd6:	bf00      	nop

0800acd8 <HAL_I2C_SlaveRxCpltCallback>:
 800acd8:	4770      	bx	lr
 800acda:	bf00      	nop

0800acdc <HAL_I2C_AddrCallback>:
}
 800acdc:	4770      	bx	lr
 800acde:	bf00      	nop

0800ace0 <HAL_I2C_ListenCpltCallback>:
 800ace0:	4770      	bx	lr
 800ace2:	bf00      	nop

0800ace4 <HAL_I2C_MemTxCpltCallback>:
 800ace4:	4770      	bx	lr
 800ace6:	bf00      	nop

0800ace8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ace8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800acec:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800acee:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800acf0:	b959      	cbnz	r1, 800ad0a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acf2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acf4:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acf6:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acf8:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acfa:	d00d      	beq.n	800ad18 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800acfc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ad00:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800ad02:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad04:	3201      	adds	r2, #1
 800ad06:	6502      	str	r2, [r0, #80]	; 0x50
 800ad08:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800ad0a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad0c:	2901      	cmp	r1, #1
 800ad0e:	d009      	beq.n	800ad24 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ad10:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad12:	2902      	cmp	r1, #2
 800ad14:	d00e      	beq.n	800ad34 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800ad16:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad18:	b2d2      	uxtb	r2, r2
 800ad1a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800ad1c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad1e:	3202      	adds	r2, #2
 800ad20:	6502      	str	r2, [r0, #80]	; 0x50
 800ad22:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad24:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800ad26:	6801      	ldr	r1, [r0, #0]
 800ad28:	b2d2      	uxtb	r2, r2
 800ad2a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ad2c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad2e:	3201      	adds	r2, #1
 800ad30:	6502      	str	r2, [r0, #80]	; 0x50
 800ad32:	4770      	bx	lr
 800ad34:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ad36:	2a22      	cmp	r2, #34	; 0x22
 800ad38:	d01f      	beq.n	800ad7a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad3a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad3c:	b289      	uxth	r1, r1
 800ad3e:	b9c1      	cbnz	r1, 800ad72 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad40:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad42:	b289      	uxth	r1, r1
 800ad44:	2900      	cmp	r1, #0
 800ad46:	d1e6      	bne.n	800ad16 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ad48:	2a21      	cmp	r2, #33	; 0x21
 800ad4a:	d1e4      	bne.n	800ad16 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad4c:	6802      	ldr	r2, [r0, #0]
{
 800ad4e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad50:	6854      	ldr	r4, [r2, #4]
 800ad52:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ad56:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad58:	6814      	ldr	r4, [r2, #0]
 800ad5a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ad5e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ad60:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad62:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ad64:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad68:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ad6c:	f7ff ffba 	bl	800ace4 <HAL_I2C_MemTxCpltCallback>
}
 800ad70:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad72:	2a21      	cmp	r2, #33	; 0x21
 800ad74:	d00a      	beq.n	800ad8c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ad78:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ad7a:	6801      	ldr	r1, [r0, #0]
 800ad7c:	680a      	ldr	r2, [r1, #0]
 800ad7e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ad82:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ad84:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad86:	3201      	adds	r2, #1
 800ad88:	6502      	str	r2, [r0, #80]	; 0x50
 800ad8a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ad8c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ad8e:	6802      	ldr	r2, [r0, #0]
 800ad90:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ad94:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ad96:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ad98:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ad9a:	3a01      	subs	r2, #1
 800ad9c:	b292      	uxth	r2, r2
 800ad9e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ada0:	4770      	bx	lr
 800ada2:	bf00      	nop

0800ada4 <HAL_I2C_MemRxCpltCallback>:
 800ada4:	4770      	bx	lr
 800ada6:	bf00      	nop

0800ada8 <HAL_I2C_ErrorCallback>:
 800ada8:	4770      	bx	lr
 800adaa:	bf00      	nop

0800adac <HAL_I2C_AbortCpltCallback>:
 800adac:	4770      	bx	lr
 800adae:	bf00      	nop

0800adb0 <I2C_DMAAbort>:
{
 800adb0:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adb2:	4b3a      	ldr	r3, [pc, #232]	; (800ae9c <I2C_DMAAbort+0xec>)
 800adb4:	4a3a      	ldr	r2, [pc, #232]	; (800aea0 <I2C_DMAAbort+0xf0>)
 800adb6:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800adb8:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800adba:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adbc:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800adbe:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc0:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800adc4:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc6:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adc8:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800adcc:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adce:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800add2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800add6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800add8:	9301      	str	r3, [sp, #4]
 800adda:	e005      	b.n	800ade8 <I2C_DMAAbort+0x38>
    count--;
 800addc:	9b01      	ldr	r3, [sp, #4]
 800adde:	3b01      	subs	r3, #1
 800ade0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ade2:	6813      	ldr	r3, [r2, #0]
 800ade4:	059b      	lsls	r3, r3, #22
 800ade6:	d506      	bpl.n	800adf6 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ade8:	9b01      	ldr	r3, [sp, #4]
 800adea:	2b00      	cmp	r3, #0
 800adec:	d1f6      	bne.n	800addc <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800adee:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800adf0:	f043 0320 	orr.w	r3, r3, #32
 800adf4:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800adf6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800adf8:	b34c      	cbz	r4, 800ae4e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800adfa:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800adfc:	2500      	movs	r5, #0
 800adfe:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ae00:	b1f3      	cbz	r3, 800ae40 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae02:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae04:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae06:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ae0a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ae0c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae0e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ae10:	2400      	movs	r4, #0
 800ae12:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ae14:	6813      	ldr	r3, [r2, #0]
 800ae16:	f023 0301 	bic.w	r3, r3, #1
 800ae1a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ae1c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ae20:	2b60      	cmp	r3, #96	; 0x60
 800ae22:	d02a      	beq.n	800ae7a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ae24:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ae28:	2928      	cmp	r1, #40	; 0x28
 800ae2a:	d019      	beq.n	800ae60 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ae2c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae2e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ae30:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae34:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ae38:	f7ff ffb6 	bl	800ada8 <HAL_I2C_ErrorCallback>
}
 800ae3c:	b002      	add	sp, #8
 800ae3e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae40:	6815      	ldr	r5, [r2, #0]
 800ae42:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae46:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae48:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae4a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ae4c:	e7e2      	b.n	800ae14 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ae4e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ae50:	b1f3      	cbz	r3, 800ae90 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae52:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae54:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae56:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae5a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae5c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae5e:	e7d7      	b.n	800ae10 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ae60:	6813      	ldr	r3, [r2, #0]
 800ae62:	f043 0301 	orr.w	r3, r3, #1
 800ae66:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae68:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae6a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae6c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ae70:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae72:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae74:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ae78:	e7de      	b.n	800ae38 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae7a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ae7c:	2220      	movs	r2, #32
 800ae7e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae82:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800ae86:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800ae88:	f7ff ff90 	bl	800adac <HAL_I2C_AbortCpltCallback>
}
 800ae8c:	b002      	add	sp, #8
 800ae8e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae90:	6814      	ldr	r4, [r2, #0]
 800ae92:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800ae96:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800ae98:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae9a:	e7bb      	b.n	800ae14 <I2C_DMAAbort+0x64>
 800ae9c:	20000078 	.word	0x20000078
 800aea0:	14f8b589 	.word	0x14f8b589

0800aea4 <I2C_ITError>:
{
 800aea4:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aea6:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800aeaa:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aeae:	2b10      	cmp	r3, #16
{
 800aeb0:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aeb2:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aeb4:	d039      	beq.n	800af2a <I2C_ITError+0x86>
 800aeb6:	b2d9      	uxtb	r1, r3
 800aeb8:	2940      	cmp	r1, #64	; 0x40
 800aeba:	d036      	beq.n	800af2a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800aebc:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800aec0:	2928      	cmp	r1, #40	; 0x28
 800aec2:	d03d      	beq.n	800af40 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aec4:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800aec6:	6859      	ldr	r1, [r3, #4]
 800aec8:	0508      	lsls	r0, r1, #20
 800aeca:	d407      	bmi.n	800aedc <I2C_ITError+0x38>
 800aecc:	2a60      	cmp	r2, #96	; 0x60
 800aece:	d005      	beq.n	800aedc <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800aed0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aed4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800aedc:	2200      	movs	r2, #0
 800aede:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aee0:	685a      	ldr	r2, [r3, #4]
 800aee2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800aee6:	d134      	bne.n	800af52 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aee8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aeec:	2960      	cmp	r1, #96	; 0x60
 800aeee:	d075      	beq.n	800afdc <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aef0:	695a      	ldr	r2, [r3, #20]
 800aef2:	0650      	lsls	r0, r2, #25
 800aef4:	d505      	bpl.n	800af02 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aef6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aef8:	691b      	ldr	r3, [r3, #16]
 800aefa:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aefc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aefe:	3301      	adds	r3, #1
 800af00:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800af02:	4620      	mov	r0, r4
 800af04:	f7ff ff50 	bl	800ada8 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800af08:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800af0a:	0719      	lsls	r1, r3, #28
 800af0c:	d004      	beq.n	800af18 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af0e:	6822      	ldr	r2, [r4, #0]
 800af10:	6853      	ldr	r3, [r2, #4]
 800af12:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800af16:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800af18:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af1c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af1e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800af20:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af22:	d501      	bpl.n	800af28 <I2C_ITError+0x84>
 800af24:	2b28      	cmp	r3, #40	; 0x28
 800af26:	d02f      	beq.n	800af88 <I2C_ITError+0xe4>
}
 800af28:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af2a:	2a22      	cmp	r2, #34	; 0x22
 800af2c:	d1c6      	bne.n	800aebc <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af2e:	6823      	ldr	r3, [r4, #0]
 800af30:	681a      	ldr	r2, [r3, #0]
 800af32:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af36:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800af38:	685a      	ldr	r2, [r3, #4]
 800af3a:	0512      	lsls	r2, r2, #20
 800af3c:	d5c8      	bpl.n	800aed0 <I2C_ITError+0x2c>
 800af3e:	e7cd      	b.n	800aedc <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af40:	2300      	movs	r3, #0
 800af42:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af44:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800af46:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af4a:	685a      	ldr	r2, [r3, #4]
 800af4c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af50:	d0ca      	beq.n	800aee8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af52:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af54:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af56:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af5a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af5c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800af60:	2b01      	cmp	r3, #1
 800af62:	d01e      	beq.n	800afa2 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800af64:	4b28      	ldr	r3, [pc, #160]	; (800b008 <I2C_ITError+0x164>)
 800af66:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800af68:	f7fe fd90 	bl	8009a8c <HAL_DMA_Abort_IT>
 800af6c:	2800      	cmp	r0, #0
 800af6e:	d0cb      	beq.n	800af08 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800af70:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af72:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800af74:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af76:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800af78:	f023 0301 	bic.w	r3, r3, #1
 800af7c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af7e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af82:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af84:	4798      	blx	r3
 800af86:	e7bf      	b.n	800af08 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af88:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800af8a:	4920      	ldr	r1, [pc, #128]	; (800b00c <I2C_ITError+0x168>)
 800af8c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800af8e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800af90:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800af92:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800af94:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800af98:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800af9c:	f7ff fea0 	bl	800ace0 <HAL_I2C_ListenCpltCallback>
}
 800afa0:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800afa2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800afa4:	4b18      	ldr	r3, [pc, #96]	; (800b008 <I2C_ITError+0x164>)
 800afa6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800afa8:	f7fe fd70 	bl	8009a8c <HAL_DMA_Abort_IT>
 800afac:	2800      	cmp	r0, #0
 800afae:	d0ab      	beq.n	800af08 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afb0:	6823      	ldr	r3, [r4, #0]
 800afb2:	695a      	ldr	r2, [r3, #20]
 800afb4:	0651      	lsls	r1, r2, #25
 800afb6:	d506      	bpl.n	800afc6 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afb8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afba:	691b      	ldr	r3, [r3, #16]
 800afbc:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800afbe:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afc0:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800afc2:	3201      	adds	r2, #1
 800afc4:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afc6:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afc8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800afca:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afce:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800afd0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800afd2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afd6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800afd8:	4798      	blx	r3
 800afda:	e795      	b.n	800af08 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800afdc:	2120      	movs	r1, #32
 800afde:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800afe2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afe4:	695a      	ldr	r2, [r3, #20]
 800afe6:	0652      	lsls	r2, r2, #25
 800afe8:	d506      	bpl.n	800aff8 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afec:	691b      	ldr	r3, [r3, #16]
 800afee:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aff0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800aff2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800aff4:	3201      	adds	r2, #1
 800aff6:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800aff8:	681a      	ldr	r2, [r3, #0]
 800affa:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800affe:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b000:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b002:	f7ff fed3 	bl	800adac <HAL_I2C_AbortCpltCallback>
 800b006:	e77f      	b.n	800af08 <I2C_ITError+0x64>
 800b008:	0800adb1 	.word	0x0800adb1
 800b00c:	ffff0000 	.word	0xffff0000

0800b010 <HAL_I2C_EV_IRQHandler>:
{
 800b010:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b012:	6803      	ldr	r3, [r0, #0]
{
 800b014:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b016:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b018:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b01a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b01e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b022:	2910      	cmp	r1, #16
{
 800b024:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b026:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b028:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b02c:	d022      	beq.n	800b074 <HAL_I2C_EV_IRQHandler+0x64>
 800b02e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b032:	d01f      	beq.n	800b074 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b034:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b036:	2900      	cmp	r1, #0
 800b038:	f000 8094 	beq.w	800b164 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b03c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b03e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b040:	f011 0602 	ands.w	r6, r1, #2
 800b044:	d059      	beq.n	800b0fa <HAL_I2C_EV_IRQHandler+0xea>
 800b046:	0586      	lsls	r6, r0, #22
 800b048:	d559      	bpl.n	800b0fe <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b04a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b04c:	b102      	cbz	r2, 800b050 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b04e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b050:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b054:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b058:	2a28      	cmp	r2, #40	; 0x28
 800b05a:	f000 821e 	beq.w	800b49a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b05e:	2200      	movs	r2, #0
 800b060:	920c      	str	r2, [sp, #48]	; 0x30
 800b062:	6959      	ldr	r1, [r3, #20]
 800b064:	910c      	str	r1, [sp, #48]	; 0x30
 800b066:	699b      	ldr	r3, [r3, #24]
 800b068:	930c      	str	r3, [sp, #48]	; 0x30
 800b06a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b06c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b070:	b00e      	add	sp, #56	; 0x38
 800b072:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b074:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b076:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b078:	f011 0f01 	tst.w	r1, #1
 800b07c:	d11a      	bne.n	800b0b4 <HAL_I2C_EV_IRQHandler+0xa4>
 800b07e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b082:	d0f5      	beq.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b084:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b088:	d0f2      	beq.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b08a:	070d      	lsls	r5, r1, #28
 800b08c:	d56d      	bpl.n	800b16a <HAL_I2C_EV_IRQHandler+0x15a>
 800b08e:	0585      	lsls	r5, r0, #22
 800b090:	f140 8083 	bpl.w	800b19a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b094:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b096:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b098:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b09a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b09c:	2900      	cmp	r1, #0
 800b09e:	f000 81e3 	beq.w	800b468 <HAL_I2C_EV_IRQHandler+0x458>
 800b0a2:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b0a4:	2a00      	cmp	r2, #0
 800b0a6:	f000 81df 	beq.w	800b468 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b0aa:	685a      	ldr	r2, [r3, #4]
 800b0ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b0b0:	605a      	str	r2, [r3, #4]
 800b0b2:	e7dd      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0b4:	0585      	lsls	r5, r0, #22
 800b0b6:	d56e      	bpl.n	800b196 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b0b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0ba:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b0be:	f000 81e9 	beq.w	800b494 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b0c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0c4:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b0c8:	bf04      	itt	eq
 800b0ca:	2208      	moveq	r2, #8
 800b0cc:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b0ce:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b0d2:	2a40      	cmp	r2, #64	; 0x40
 800b0d4:	f000 81d7 	beq.w	800b486 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b0d8:	6922      	ldr	r2, [r4, #16]
 800b0da:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b0de:	f000 81b2 	beq.w	800b446 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b0e2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b0e4:	2a00      	cmp	r2, #0
 800b0e6:	f040 81ef 	bne.w	800b4c8 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b0ea:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b0ec:	11d2      	asrs	r2, r2, #7
 800b0ee:	f002 0206 	and.w	r2, r2, #6
 800b0f2:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b0f6:	611a      	str	r2, [r3, #16]
 800b0f8:	e7ba      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0fa:	06cd      	lsls	r5, r1, #27
 800b0fc:	d47c      	bmi.n	800b1f8 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b0fe:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b102:	2a21      	cmp	r2, #33	; 0x21
 800b104:	f000 80f5 	beq.w	800b2f2 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b108:	064e      	lsls	r6, r1, #25
 800b10a:	f140 8132 	bpl.w	800b372 <HAL_I2C_EV_IRQHandler+0x362>
 800b10e:	0545      	lsls	r5, r0, #21
 800b110:	f140 812f 	bpl.w	800b372 <HAL_I2C_EV_IRQHandler+0x362>
 800b114:	0749      	lsls	r1, r1, #29
 800b116:	f100 812f 	bmi.w	800b378 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b11a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b11e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b120:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b122:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b124:	2a00      	cmp	r2, #0
 800b126:	d0a3      	beq.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b128:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b12a:	691b      	ldr	r3, [r3, #16]
 800b12c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b12e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b130:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b132:	3b01      	subs	r3, #1
 800b134:	b29b      	uxth	r3, r3
 800b136:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b138:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b13a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b13c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b13e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b140:	2b00      	cmp	r3, #0
 800b142:	d195      	bne.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b144:	292a      	cmp	r1, #42	; 0x2a
 800b146:	d193      	bne.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b148:	6822      	ldr	r2, [r4, #0]
 800b14a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b14c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b14e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b150:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b154:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b156:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b158:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b15a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b15e:	f7ff fdbb 	bl	800acd8 <HAL_I2C_SlaveRxCpltCallback>
 800b162:	e785      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b164:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b166:	6959      	ldr	r1, [r3, #20]
 800b168:	e76a      	b.n	800b040 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b16a:	078d      	lsls	r5, r1, #30
 800b16c:	d515      	bpl.n	800b19a <HAL_I2C_EV_IRQHandler+0x18a>
 800b16e:	0585      	lsls	r5, r0, #22
 800b170:	d513      	bpl.n	800b19a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b172:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b176:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b178:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b17a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b17e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b180:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b182:	f000 81b3 	beq.w	800b4ec <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b186:	2200      	movs	r2, #0
 800b188:	920a      	str	r2, [sp, #40]	; 0x28
 800b18a:	695a      	ldr	r2, [r3, #20]
 800b18c:	920a      	str	r2, [sp, #40]	; 0x28
 800b18e:	699b      	ldr	r3, [r3, #24]
 800b190:	930a      	str	r3, [sp, #40]	; 0x28
 800b192:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b194:	e76c      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b196:	070d      	lsls	r5, r1, #28
 800b198:	d5e7      	bpl.n	800b16a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b19a:	0776      	lsls	r6, r6, #29
 800b19c:	f140 80f5 	bpl.w	800b38a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b1a0:	685d      	ldr	r5, [r3, #4]
 800b1a2:	052d      	lsls	r5, r5, #20
 800b1a4:	f53f af64 	bmi.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b1a8:	060e      	lsls	r6, r1, #24
 800b1aa:	f140 8115 	bpl.w	800b3d8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1ae:	0545      	lsls	r5, r0, #21
 800b1b0:	f140 8112 	bpl.w	800b3d8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1b4:	074e      	lsls	r6, r1, #29
 800b1b6:	f100 8112 	bmi.w	800b3de <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ba:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1be:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1c0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b1c4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1c6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1c8:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1ca:	2800      	cmp	r0, #0
 800b1cc:	f040 8235 	bne.w	800b63a <HAL_I2C_EV_IRQHandler+0x62a>
 800b1d0:	2a21      	cmp	r2, #33	; 0x21
 800b1d2:	f000 8347 	beq.w	800b864 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b1d6:	2940      	cmp	r1, #64	; 0x40
 800b1d8:	f47f af4a 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b1dc:	2a22      	cmp	r2, #34	; 0x22
 800b1de:	f47f af47 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b1e2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1e4:	b292      	uxth	r2, r2
 800b1e6:	2a00      	cmp	r2, #0
 800b1e8:	f000 8268 	beq.w	800b6bc <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1ec:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b1f0:	2a40      	cmp	r2, #64	; 0x40
 800b1f2:	f040 80b4 	bne.w	800b35e <HAL_I2C_EV_IRQHandler+0x34e>
 800b1f6:	e0fc      	b.n	800b3f2 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b1f8:	0585      	lsls	r5, r0, #22
 800b1fa:	d580      	bpl.n	800b0fe <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1fc:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b200:	685a      	ldr	r2, [r3, #4]
 800b202:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b206:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b208:	960d      	str	r6, [sp, #52]	; 0x34
 800b20a:	695a      	ldr	r2, [r3, #20]
 800b20c:	920d      	str	r2, [sp, #52]	; 0x34
 800b20e:	681a      	ldr	r2, [r3, #0]
 800b210:	f042 0201 	orr.w	r2, r2, #1
 800b214:	601a      	str	r2, [r3, #0]
 800b216:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b218:	681a      	ldr	r2, [r3, #0]
 800b21a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b21e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b220:	685a      	ldr	r2, [r3, #4]
 800b222:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b224:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b226:	d521      	bpl.n	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b228:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b22c:	2a22      	cmp	r2, #34	; 0x22
 800b22e:	f000 817a 	beq.w	800b526 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b232:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b234:	6802      	ldr	r2, [r0, #0]
 800b236:	6852      	ldr	r2, [r2, #4]
 800b238:	b292      	uxth	r2, r2
 800b23a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b23c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b23e:	b292      	uxth	r2, r2
 800b240:	b11a      	cbz	r2, 800b24a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b242:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b244:	f042 0204 	orr.w	r2, r2, #4
 800b248:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b24a:	685a      	ldr	r2, [r3, #4]
 800b24c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b250:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b252:	f7fe fc2d 	bl	8009ab0 <HAL_DMA_GetState>
 800b256:	2801      	cmp	r0, #1
 800b258:	d008      	beq.n	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b25a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b25c:	4b99      	ldr	r3, [pc, #612]	; (800b4c4 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b25e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b260:	f7fe fc14 	bl	8009a8c <HAL_DMA_Abort_IT>
 800b264:	b110      	cbz	r0, 800b26c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b266:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b268:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b26a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b26c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b26e:	b29b      	uxth	r3, r3
 800b270:	b313      	cbz	r3, 800b2b8 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b272:	6823      	ldr	r3, [r4, #0]
 800b274:	695a      	ldr	r2, [r3, #20]
 800b276:	0752      	lsls	r2, r2, #29
 800b278:	d50a      	bpl.n	800b290 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b27a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b27c:	691b      	ldr	r3, [r3, #16]
 800b27e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b280:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b282:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b284:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b286:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b288:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b28a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b28c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b28e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b290:	695a      	ldr	r2, [r3, #20]
 800b292:	0656      	lsls	r6, r2, #25
 800b294:	d509      	bpl.n	800b2aa <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b296:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b298:	691b      	ldr	r3, [r3, #16]
 800b29a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b29c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b29e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b2a0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b2a2:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b2a4:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b2a6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b2a8:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b2aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b2ac:	b29b      	uxth	r3, r3
 800b2ae:	b11b      	cbz	r3, 800b2b8 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b2b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2b2:	f043 0304 	orr.w	r3, r3, #4
 800b2b6:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b2b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2ba:	2b00      	cmp	r3, #0
 800b2bc:	f040 80dd 	bne.w	800b47a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b2c0:	2d2a      	cmp	r5, #42	; 0x2a
 800b2c2:	f000 8151 	beq.w	800b568 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b2c6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b2ca:	2b28      	cmp	r3, #40	; 0x28
 800b2cc:	f000 8154 	beq.w	800b578 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b2d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b2d2:	2b22      	cmp	r3, #34	; 0x22
 800b2d4:	d002      	beq.n	800b2dc <HAL_I2C_EV_IRQHandler+0x2cc>
 800b2d6:	2d22      	cmp	r5, #34	; 0x22
 800b2d8:	f47f aeca 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2dc:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b2de:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2e0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2e2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b2e4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2ec:	f7ff fcf4 	bl	800acd8 <HAL_I2C_SlaveRxCpltCallback>
 800b2f0:	e6be      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2f2:	060d      	lsls	r5, r1, #24
 800b2f4:	d528      	bpl.n	800b348 <HAL_I2C_EV_IRQHandler+0x338>
 800b2f6:	0546      	lsls	r6, r0, #21
 800b2f8:	d526      	bpl.n	800b348 <HAL_I2C_EV_IRQHandler+0x338>
 800b2fa:	074d      	lsls	r5, r1, #29
 800b2fc:	d427      	bmi.n	800b34e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2fe:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b302:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b304:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b306:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b308:	2900      	cmp	r1, #0
 800b30a:	f43f aeb1 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b30e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b310:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b314:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b316:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b318:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b31a:	3901      	subs	r1, #1
 800b31c:	b289      	uxth	r1, r1
 800b31e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b320:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b322:	b289      	uxth	r1, r1
 800b324:	2900      	cmp	r1, #0
 800b326:	f47f aea3 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b32a:	2829      	cmp	r0, #41	; 0x29
 800b32c:	f47f aea0 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b330:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b332:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b334:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b338:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b33a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b33c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b33e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b342:	f7ff fcc7 	bl	800acd4 <HAL_I2C_SlaveTxCpltCallback>
 800b346:	e693      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b348:	0749      	lsls	r1, r1, #29
 800b34a:	f57f ae91 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b34e:	0582      	lsls	r2, r0, #22
 800b350:	f57f ae8e 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b354:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b356:	b292      	uxth	r2, r2
 800b358:	2a00      	cmp	r2, #0
 800b35a:	f43f ae89 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b35e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b360:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b364:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b366:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b368:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b36a:	3b01      	subs	r3, #1
 800b36c:	b29b      	uxth	r3, r3
 800b36e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b370:	e67e      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b372:	074a      	lsls	r2, r1, #29
 800b374:	f57f ae7c 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b378:	0586      	lsls	r6, r0, #22
 800b37a:	f57f ae79 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b37e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b380:	b292      	uxth	r2, r2
 800b382:	2a00      	cmp	r2, #0
 800b384:	f43f ae74 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b388:	e01b      	b.n	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b38a:	685a      	ldr	r2, [r3, #4]
 800b38c:	0512      	lsls	r2, r2, #20
 800b38e:	f53f ae6f 	bmi.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b392:	064e      	lsls	r6, r1, #25
 800b394:	d433      	bmi.n	800b3fe <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b396:	0749      	lsls	r1, r1, #29
 800b398:	f57f ae6a 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b39c:	0582      	lsls	r2, r0, #22
 800b39e:	f57f ae67 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b3a2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b3a4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3a6:	b292      	uxth	r2, r2
 800b3a8:	2a04      	cmp	r2, #4
 800b3aa:	f000 8113 	beq.w	800b5d4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b3ae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3b0:	b292      	uxth	r2, r2
 800b3b2:	2a03      	cmp	r2, #3
 800b3b4:	f000 8153 	beq.w	800b65e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b3b8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3ba:	b292      	uxth	r2, r2
 800b3bc:	2a02      	cmp	r2, #2
 800b3be:	f000 8182 	beq.w	800b6c6 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3c4:	691b      	ldr	r3, [r3, #16]
 800b3c6:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b3c8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3cc:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b3ce:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b3d0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b3d2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3d4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b3d6:	e64b      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3d8:	074d      	lsls	r5, r1, #29
 800b3da:	f57f ae49 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b3de:	0581      	lsls	r1, r0, #22
 800b3e0:	f57f ae46 	bpl.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b3e4:	2a21      	cmp	r2, #33	; 0x21
 800b3e6:	f000 80fd 	beq.w	800b5e4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b3ea:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b3ee:	f47f ae3f 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3f2:	4620      	mov	r0, r4
}
 800b3f4:	b00e      	add	sp, #56	; 0x38
 800b3f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3fa:	f7ff bc75 	b.w	800ace8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3fe:	0545      	lsls	r5, r0, #21
 800b400:	d5c9      	bpl.n	800b396 <HAL_I2C_EV_IRQHandler+0x386>
 800b402:	f011 0104 	ands.w	r1, r1, #4
 800b406:	d1c9      	bne.n	800b39c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b408:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b40c:	2a22      	cmp	r2, #34	; 0x22
 800b40e:	f47f ae2f 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b412:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b414:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b416:	2a03      	cmp	r2, #3
 800b418:	f240 81ec 	bls.w	800b7f4 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b41c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b41e:	691b      	ldr	r3, [r3, #16]
 800b420:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b422:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b424:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b426:	3b01      	subs	r3, #1
 800b428:	b29b      	uxth	r3, r3
 800b42a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b42c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b42e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b430:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b432:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b434:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b436:	f47f ae1b 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b43a:	6822      	ldr	r2, [r4, #0]
 800b43c:	6853      	ldr	r3, [r2, #4]
 800b43e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b442:	6053      	str	r3, [r2, #4]
 800b444:	e614      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b446:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b44a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b44c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b44e:	bf16      	itet	ne
 800b450:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b454:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b458:	b2d2      	uxtbne	r2, r2
 800b45a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b45c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b45e:	b11a      	cbz	r2, 800b468 <HAL_I2C_EV_IRQHandler+0x458>
 800b460:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b462:	2a00      	cmp	r2, #0
 800b464:	f47f ae21 	bne.w	800b0aa <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b468:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b46a:	2a00      	cmp	r2, #0
 800b46c:	f43f ae00 	beq.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b470:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b472:	2a00      	cmp	r2, #0
 800b474:	f47f ae19 	bne.w	800b0aa <HAL_I2C_EV_IRQHandler+0x9a>
 800b478:	e5fa      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b47a:	4620      	mov	r0, r4
}
 800b47c:	b00e      	add	sp, #56	; 0x38
 800b47e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b482:	f7ff bd0f 	b.w	800aea4 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b486:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b488:	bb52      	cbnz	r2, 800b4e0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b48a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b48c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b490:	611a      	str	r2, [r3, #16]
 800b492:	e5ed      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b494:	2201      	movs	r2, #1
 800b496:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b498:	e619      	b.n	800b0ce <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b49a:	685a      	ldr	r2, [r3, #4]
 800b49c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b4a0:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b4a2:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b4a4:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b4a8:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b4ac:	bf54      	ite	pl
 800b4ae:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b4b0:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b4b2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b4b6:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b4ba:	4620      	mov	r0, r4
 800b4bc:	f7ff fc0e 	bl	800acdc <HAL_I2C_AddrCallback>
 800b4c0:	e5d6      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b4c2:	bf00      	nop
 800b4c4:	0800adb1 	.word	0x0800adb1
      else if (hi2c->EventCount == 1U)
 800b4c8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4ca:	2a01      	cmp	r2, #1
 800b4cc:	f47f add0 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b4d0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4d2:	11d2      	asrs	r2, r2, #7
 800b4d4:	f002 0206 	and.w	r2, r2, #6
 800b4d8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b4dc:	611a      	str	r2, [r3, #16]
 800b4de:	e5c7      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b4e0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4e2:	f042 0201 	orr.w	r2, r2, #1
 800b4e6:	b2d2      	uxtb	r2, r2
 800b4e8:	611a      	str	r2, [r3, #16]
 800b4ea:	e5c1      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b4ec:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b4ee:	b911      	cbnz	r1, 800b4f6 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b4f0:	2a40      	cmp	r2, #64	; 0x40
 800b4f2:	f000 809b 	beq.w	800b62c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b4f6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4f8:	b922      	cbnz	r2, 800b504 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b4fa:	6921      	ldr	r1, [r4, #16]
 800b4fc:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b500:	f000 809f 	beq.w	800b642 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b504:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b506:	b292      	uxth	r2, r2
 800b508:	2a00      	cmp	r2, #0
 800b50a:	d142      	bne.n	800b592 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b50c:	9203      	str	r2, [sp, #12]
 800b50e:	695a      	ldr	r2, [r3, #20]
 800b510:	9203      	str	r2, [sp, #12]
 800b512:	699a      	ldr	r2, [r3, #24]
 800b514:	9203      	str	r2, [sp, #12]
 800b516:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b518:	681a      	ldr	r2, [r3, #0]
 800b51a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b51e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b520:	2300      	movs	r3, #0
 800b522:	6523      	str	r3, [r4, #80]	; 0x50
 800b524:	e5a4      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b526:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b528:	6802      	ldr	r2, [r0, #0]
 800b52a:	6852      	ldr	r2, [r2, #4]
 800b52c:	b292      	uxth	r2, r2
 800b52e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b530:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b532:	b292      	uxth	r2, r2
 800b534:	b11a      	cbz	r2, 800b53e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b536:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b538:	f042 0204 	orr.w	r2, r2, #4
 800b53c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b53e:	685a      	ldr	r2, [r3, #4]
 800b540:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b544:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b546:	f7fe fab3 	bl	8009ab0 <HAL_DMA_GetState>
 800b54a:	2801      	cmp	r0, #1
 800b54c:	f43f ae8e 	beq.w	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b550:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b552:	4b98      	ldr	r3, [pc, #608]	; (800b7b4 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b554:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b556:	f7fe fa99 	bl	8009a8c <HAL_DMA_Abort_IT>
 800b55a:	2800      	cmp	r0, #0
 800b55c:	f43f ae86 	beq.w	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b560:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b562:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b564:	4798      	blx	r3
 800b566:	e681      	b.n	800b26c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b568:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b56a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b56c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b56e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b572:	f7ff fbb1 	bl	800acd8 <HAL_I2C_SlaveRxCpltCallback>
 800b576:	e6a6      	b.n	800b2c6 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b578:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b57a:	498f      	ldr	r1, [pc, #572]	; (800b7b8 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b57c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b57e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b580:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b582:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b584:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b588:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b58c:	f7ff fba8 	bl	800ace0 <HAL_I2C_ListenCpltCallback>
 800b590:	e56e      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b592:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b594:	b292      	uxth	r2, r2
 800b596:	2a01      	cmp	r2, #1
 800b598:	d070      	beq.n	800b67c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b59a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b59c:	b292      	uxth	r2, r2
 800b59e:	2a02      	cmp	r2, #2
 800b5a0:	f000 80d6 	beq.w	800b750 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5a4:	681a      	ldr	r2, [r3, #0]
 800b5a6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b5aa:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b5ac:	685a      	ldr	r2, [r3, #4]
 800b5ae:	0511      	lsls	r1, r2, #20
 800b5b0:	d508      	bpl.n	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b5b2:	2820      	cmp	r0, #32
 800b5b4:	f200 80f8 	bhi.w	800b7a8 <HAL_I2C_EV_IRQHandler+0x798>
 800b5b8:	2807      	cmp	r0, #7
 800b5ba:	f200 80ea 	bhi.w	800b792 <HAL_I2C_EV_IRQHandler+0x782>
 800b5be:	2801      	cmp	r0, #1
 800b5c0:	f000 80ed 	beq.w	800b79e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5c4:	2200      	movs	r2, #0
 800b5c6:	9209      	str	r2, [sp, #36]	; 0x24
 800b5c8:	695a      	ldr	r2, [r3, #20]
 800b5ca:	9209      	str	r2, [sp, #36]	; 0x24
 800b5cc:	699b      	ldr	r3, [r3, #24]
 800b5ce:	9309      	str	r3, [sp, #36]	; 0x24
 800b5d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5d2:	e7a5      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5d4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5d6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5dc:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5de:	691b      	ldr	r3, [r3, #16]
 800b5e0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b5e2:	e6f1      	b.n	800b3c8 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b5e4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b5e6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b5ea:	2a21      	cmp	r2, #33	; 0x21
 800b5ec:	f47f ad40 	bne.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b5f0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5f2:	b292      	uxth	r2, r2
 800b5f4:	2a00      	cmp	r2, #0
 800b5f6:	f47f aeb2 	bne.w	800b35e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b5fa:	2908      	cmp	r1, #8
 800b5fc:	f000 80e2 	beq.w	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b600:	2920      	cmp	r1, #32
 800b602:	f000 80df 	beq.w	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b606:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b60a:	f000 80db 	beq.w	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b60e:	6859      	ldr	r1, [r3, #4]
 800b610:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b614:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b616:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b618:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b61a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b61c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b620:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b622:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b626:	f7ff fb51 	bl	800accc <HAL_I2C_MasterTxCpltCallback>
 800b62a:	e521      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b62c:	9101      	str	r1, [sp, #4]
 800b62e:	695a      	ldr	r2, [r3, #20]
 800b630:	9201      	str	r2, [sp, #4]
 800b632:	699b      	ldr	r3, [r3, #24]
 800b634:	9301      	str	r3, [sp, #4]
 800b636:	9b01      	ldr	r3, [sp, #4]
 800b638:	e51a      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b63a:	2a21      	cmp	r2, #33	; 0x21
 800b63c:	f43f add1 	beq.w	800b1e2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b640:	e5c9      	b.n	800b1d6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b642:	9202      	str	r2, [sp, #8]
 800b644:	695a      	ldr	r2, [r3, #20]
 800b646:	9202      	str	r2, [sp, #8]
 800b648:	699a      	ldr	r2, [r3, #24]
 800b64a:	9202      	str	r2, [sp, #8]
 800b64c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b64e:	681a      	ldr	r2, [r3, #0]
 800b650:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b654:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b656:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b658:	3301      	adds	r3, #1
 800b65a:	6523      	str	r3, [r4, #80]	; 0x50
 800b65c:	e508      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b65e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b660:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b662:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b666:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b668:	f43f aeab 	beq.w	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b66c:	2902      	cmp	r1, #2
 800b66e:	f43f aea8 	beq.w	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b672:	681a      	ldr	r2, [r3, #0]
 800b674:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b678:	601a      	str	r2, [r3, #0]
 800b67a:	e6a2      	b.n	800b3c2 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b67c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b680:	f000 811b 	beq.w	800b8ba <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b684:	2808      	cmp	r0, #8
 800b686:	f000 8108 	beq.w	800b89a <HAL_I2C_EV_IRQHandler+0x88a>
 800b68a:	2820      	cmp	r0, #32
 800b68c:	f000 8105 	beq.w	800b89a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b690:	2d12      	cmp	r5, #18
 800b692:	f000 80ff 	beq.w	800b894 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b696:	2810      	cmp	r0, #16
 800b698:	d804      	bhi.n	800b6a4 <HAL_I2C_EV_IRQHandler+0x694>
 800b69a:	4a48      	ldr	r2, [pc, #288]	; (800b7bc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b69c:	40c2      	lsrs	r2, r0
 800b69e:	07d1      	lsls	r1, r2, #31
 800b6a0:	f100 814c 	bmi.w	800b93c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b6a4:	681a      	ldr	r2, [r3, #0]
 800b6a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6aa:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b6ac:	2200      	movs	r2, #0
 800b6ae:	9206      	str	r2, [sp, #24]
 800b6b0:	695a      	ldr	r2, [r3, #20]
 800b6b2:	9206      	str	r2, [sp, #24]
 800b6b4:	699b      	ldr	r3, [r3, #24]
 800b6b6:	9306      	str	r3, [sp, #24]
 800b6b8:	9b06      	ldr	r3, [sp, #24]
 800b6ba:	e731      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6bc:	685a      	ldr	r2, [r3, #4]
 800b6be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6c2:	605a      	str	r2, [r3, #4]
 800b6c4:	e4d4      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b6c6:	3901      	subs	r1, #1
 800b6c8:	290f      	cmp	r1, #15
 800b6ca:	d809      	bhi.n	800b6e0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b6cc:	e8df f001 	tbb	[pc, r1]
 800b6d0:	3608363b 	.word	0x3608363b
 800b6d4:	08080808 	.word	0x08080808
 800b6d8:	08080808 	.word	0x08080808
 800b6dc:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6e0:	681a      	ldr	r2, [r3, #0]
 800b6e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6e6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6ea:	691b      	ldr	r3, [r3, #16]
 800b6ec:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b6ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b6f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6f2:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b6f4:	3b01      	subs	r3, #1
 800b6f6:	b29b      	uxth	r3, r3
 800b6f8:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6fa:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b6fc:	1c51      	adds	r1, r2, #1
 800b6fe:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b700:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b702:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b704:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b706:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b708:	3b01      	subs	r3, #1
 800b70a:	b29b      	uxth	r3, r3
 800b70c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b70e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b710:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b712:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b716:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b718:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b71a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b71c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b720:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b724:	2b40      	cmp	r3, #64	; 0x40
 800b726:	f000 80f5 	beq.w	800b914 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b72a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b72c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b72e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b732:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b734:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b736:	f7ff facb 	bl	800acd0 <HAL_I2C_MasterRxCpltCallback>
 800b73a:	e499      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b73c:	681a      	ldr	r2, [r3, #0]
 800b73e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b742:	601a      	str	r2, [r3, #0]
 800b744:	e7d0      	b.n	800b6e8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b746:	681a      	ldr	r2, [r3, #0]
 800b748:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b74c:	601a      	str	r2, [r3, #0]
 800b74e:	e7cb      	b.n	800b6e8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b750:	2810      	cmp	r0, #16
 800b752:	d804      	bhi.n	800b75e <HAL_I2C_EV_IRQHandler+0x74e>
 800b754:	4a19      	ldr	r2, [pc, #100]	; (800b7bc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b756:	40c2      	lsrs	r2, r0
 800b758:	07d2      	lsls	r2, r2, #31
 800b75a:	f100 80c2 	bmi.w	800b8e2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b75e:	681a      	ldr	r2, [r3, #0]
 800b760:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b764:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b766:	681a      	ldr	r2, [r3, #0]
 800b768:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b76c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b76e:	685a      	ldr	r2, [r3, #4]
 800b770:	0516      	lsls	r6, r2, #20
 800b772:	d506      	bpl.n	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b774:	2820      	cmp	r0, #32
 800b776:	f240 80bc 	bls.w	800b8f2 <HAL_I2C_EV_IRQHandler+0x8e2>
 800b77a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b77e:	f000 80bd 	beq.w	800b8fc <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b782:	2200      	movs	r2, #0
 800b784:	9208      	str	r2, [sp, #32]
 800b786:	695a      	ldr	r2, [r3, #20]
 800b788:	9208      	str	r2, [sp, #32]
 800b78a:	699b      	ldr	r3, [r3, #24]
 800b78c:	9308      	str	r3, [sp, #32]
 800b78e:	9b08      	ldr	r3, [sp, #32]
 800b790:	e6c6      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
 800b792:	4a0b      	ldr	r2, [pc, #44]	; (800b7c0 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b794:	3808      	subs	r0, #8
 800b796:	40c2      	lsrs	r2, r0
 800b798:	07d2      	lsls	r2, r2, #31
 800b79a:	f57f af13 	bpl.w	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b79e:	685a      	ldr	r2, [r3, #4]
 800b7a0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b7a4:	605a      	str	r2, [r3, #4]
 800b7a6:	e70d      	b.n	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7a8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b7ac:	f47f af0a 	bne.w	800b5c4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7b0:	e7f5      	b.n	800b79e <HAL_I2C_EV_IRQHandler+0x78e>
 800b7b2:	bf00      	nop
 800b7b4:	0800adb1 	.word	0x0800adb1
 800b7b8:	ffff0000 	.word	0xffff0000
 800b7bc:	00010014 	.word	0x00010014
 800b7c0:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b7c4:	6859      	ldr	r1, [r3, #4]
 800b7c6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b7ca:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7cc:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7ce:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b7d0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7d2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b7d6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7d8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b7da:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7de:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7e2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7e6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7e8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7ea:	f47f af1c 	bne.w	800b626 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7ee:	f7ff fa79 	bl	800ace4 <HAL_I2C_MemTxCpltCallback>
 800b7f2:	e43d      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b7f4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b7f6:	2802      	cmp	r0, #2
 800b7f8:	f43f af60 	beq.w	800b6bc <HAL_I2C_EV_IRQHandler+0x6ac>
 800b7fc:	2a01      	cmp	r2, #1
 800b7fe:	f63f af5d 	bhi.w	800b6bc <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b802:	4a62      	ldr	r2, [pc, #392]	; (800b98c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b804:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b806:	6812      	ldr	r2, [r2, #0]
 800b808:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b80c:	fbb2 f2f0 	udiv	r2, r2, r0
 800b810:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b814:	920b      	str	r2, [sp, #44]	; 0x2c
 800b816:	e004      	b.n	800b822 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b818:	681a      	ldr	r2, [r3, #0]
 800b81a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b81e:	f000 8092 	beq.w	800b946 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b822:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b824:	3a01      	subs	r2, #1
 800b826:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b828:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b82a:	2900      	cmp	r1, #0
 800b82c:	d1f4      	bne.n	800b818 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b82e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b830:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b832:	f042 0220 	orr.w	r2, r2, #32
 800b836:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b838:	685a      	ldr	r2, [r3, #4]
 800b83a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b83e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b840:	691b      	ldr	r3, [r3, #16]
 800b842:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b844:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b846:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b848:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b84a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b84c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b84e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b850:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b852:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b854:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b858:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b85a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b85e:	f7ff faa3 	bl	800ada8 <HAL_I2C_ErrorCallback>
 800b862:	e405      	b.n	800b070 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b864:	2d08      	cmp	r5, #8
 800b866:	d0ad      	beq.n	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b868:	2d20      	cmp	r5, #32
 800b86a:	d0ab      	beq.n	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b86c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b870:	d0a8      	beq.n	800b7c4 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b872:	685a      	ldr	r2, [r3, #4]
 800b874:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b878:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b87a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b87c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b87e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b880:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b882:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b886:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b888:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b88c:	f7ff fa1e 	bl	800accc <HAL_I2C_MasterTxCpltCallback>
 800b890:	f7ff bbee 	b.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b894:	2801      	cmp	r0, #1
 800b896:	f43f af05 	beq.w	800b6a4 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b89a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b89c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b89e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8a2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8a4:	9107      	str	r1, [sp, #28]
 800b8a6:	695a      	ldr	r2, [r3, #20]
 800b8a8:	9207      	str	r2, [sp, #28]
 800b8aa:	699a      	ldr	r2, [r3, #24]
 800b8ac:	9207      	str	r2, [sp, #28]
 800b8ae:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8b0:	681a      	ldr	r2, [r3, #0]
 800b8b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8b6:	601a      	str	r2, [r3, #0]
 800b8b8:	e632      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ba:	681a      	ldr	r2, [r3, #0]
 800b8bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8c0:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b8c2:	685a      	ldr	r2, [r3, #4]
 800b8c4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b8c8:	d02d      	beq.n	800b926 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ca:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8cc:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8d2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8d4:	9104      	str	r1, [sp, #16]
 800b8d6:	695a      	ldr	r2, [r3, #20]
 800b8d8:	9204      	str	r2, [sp, #16]
 800b8da:	699b      	ldr	r3, [r3, #24]
 800b8dc:	9304      	str	r3, [sp, #16]
 800b8de:	9b04      	ldr	r3, [sp, #16]
 800b8e0:	e61e      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8e2:	681a      	ldr	r2, [r3, #0]
 800b8e4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b8e8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b8ea:	685a      	ldr	r2, [r3, #4]
 800b8ec:	0515      	lsls	r5, r2, #20
 800b8ee:	f57f af48 	bpl.w	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b8f2:	2807      	cmp	r0, #7
 800b8f4:	d807      	bhi.n	800b906 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b8f6:	2801      	cmp	r0, #1
 800b8f8:	f47f af43 	bne.w	800b782 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b8fc:	685a      	ldr	r2, [r3, #4]
 800b8fe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b902:	605a      	str	r2, [r3, #4]
 800b904:	e73d      	b.n	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b906:	4a22      	ldr	r2, [pc, #136]	; (800b990 <HAL_I2C_EV_IRQHandler+0x980>)
 800b908:	3808      	subs	r0, #8
 800b90a:	40c2      	lsrs	r2, r0
 800b90c:	07d0      	lsls	r0, r2, #31
 800b90e:	f57f af38 	bpl.w	800b782 <HAL_I2C_EV_IRQHandler+0x772>
 800b912:	e7f3      	b.n	800b8fc <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b914:	2300      	movs	r3, #0
 800b916:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b91a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b91c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b91e:	f7ff fa41 	bl	800ada4 <HAL_I2C_MemRxCpltCallback>
 800b922:	f7ff bba5 	b.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b926:	9205      	str	r2, [sp, #20]
 800b928:	695a      	ldr	r2, [r3, #20]
 800b92a:	9205      	str	r2, [sp, #20]
 800b92c:	699a      	ldr	r2, [r3, #24]
 800b92e:	9205      	str	r2, [sp, #20]
 800b930:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b932:	681a      	ldr	r2, [r3, #0]
 800b934:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b938:	601a      	str	r2, [r3, #0]
 800b93a:	e5f1      	b.n	800b520 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b93c:	681a      	ldr	r2, [r3, #0]
 800b93e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b942:	601a      	str	r2, [r3, #0]
 800b944:	e6b2      	b.n	800b6ac <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b946:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b948:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b94a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b94e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b950:	6859      	ldr	r1, [r3, #4]
 800b952:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b956:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b958:	691b      	ldr	r3, [r3, #16]
 800b95a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b95c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b95e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b960:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b962:	b29b      	uxth	r3, r3
 800b964:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b966:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b96a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b96c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b970:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b972:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b974:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b976:	f47f aed9 	bne.w	800b72c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b97a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b97e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b980:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b982:	f7ff fa0f 	bl	800ada4 <HAL_I2C_MemRxCpltCallback>
 800b986:	f7ff bb73 	b.w	800b070 <HAL_I2C_EV_IRQHandler+0x60>
 800b98a:	bf00      	nop
 800b98c:	20000078 	.word	0x20000078
 800b990:	01000101 	.word	0x01000101

0800b994 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b994:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b998:	2a20      	cmp	r2, #32
{
 800b99a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b99c:	fa5f fc82 	uxtb.w	ip, r2
 800b9a0:	d001      	beq.n	800b9a6 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9a2:	2002      	movs	r0, #2
  }
}
 800b9a4:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b9a6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9a8:	2024      	movs	r0, #36	; 0x24
 800b9aa:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9ae:	6810      	ldr	r0, [r2, #0]
 800b9b0:	f020 0001 	bic.w	r0, r0, #1
 800b9b4:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b9b6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9b8:	f020 0010 	bic.w	r0, r0, #16
 800b9bc:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b9be:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9c0:	4301      	orrs	r1, r0
 800b9c2:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b9c4:	6811      	ldr	r1, [r2, #0]
 800b9c6:	f041 0101 	orr.w	r1, r1, #1
 800b9ca:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b9cc:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b9ce:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b9d2:	4770      	bx	lr

0800b9d4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b9d4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b9d8:	2a20      	cmp	r2, #32
 800b9da:	d001      	beq.n	800b9e0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9dc:	2002      	movs	r0, #2
  }
}
 800b9de:	4770      	bx	lr
{
 800b9e0:	b410      	push	{r4}
 800b9e2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b9e6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9e8:	2224      	movs	r2, #36	; 0x24
 800b9ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9ee:	6822      	ldr	r2, [r4, #0]
 800b9f0:	f022 0201 	bic.w	r2, r2, #1
 800b9f4:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b9f6:	4603      	mov	r3, r0
 800b9f8:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b9fa:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b9fe:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ba00:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ba02:	b289      	uxth	r1, r1
 800ba04:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ba06:	6822      	ldr	r2, [r4, #0]
 800ba08:	f042 0201 	orr.w	r2, r2, #1
 800ba0c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ba0e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ba12:	2000      	movs	r0, #0
}
 800ba14:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba18:	4770      	bx	lr
 800ba1a:	bf00      	nop

0800ba1c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ba1c:	2800      	cmp	r0, #0
 800ba1e:	d069      	beq.n	800baf4 <HAL_LTDC_Init+0xd8>
{
 800ba20:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ba22:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ba26:	4604      	mov	r4, r0
 800ba28:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba2c:	2b00      	cmp	r3, #0
 800ba2e:	d05c      	beq.n	800baea <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba30:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba32:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba34:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba38:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba3c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba3e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba40:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba44:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ba48:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba4a:	6999      	ldr	r1, [r3, #24]
 800ba4c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba4e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba50:	430a      	orrs	r2, r1
 800ba52:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba54:	689a      	ldr	r2, [r3, #8]
 800ba56:	4928      	ldr	r1, [pc, #160]	; (800baf8 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ba58:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba5a:	400a      	ands	r2, r1
 800ba5c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ba5e:	689a      	ldr	r2, [r3, #8]
 800ba60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba64:	69a0      	ldr	r0, [r4, #24]
 800ba66:	4302      	orrs	r2, r0
 800ba68:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba6a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ba6c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba6e:	400a      	ands	r2, r1
 800ba70:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ba72:	68da      	ldr	r2, [r3, #12]
 800ba74:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba78:	6a20      	ldr	r0, [r4, #32]
 800ba7a:	4302      	orrs	r2, r0
 800ba7c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba7e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ba80:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba82:	400a      	ands	r2, r1
 800ba84:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ba86:	691a      	ldr	r2, [r3, #16]
 800ba88:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba8c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ba8e:	4302      	orrs	r2, r0
 800ba90:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba92:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ba94:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba96:	400a      	ands	r2, r1
 800ba98:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ba9a:	695a      	ldr	r2, [r3, #20]
 800ba9c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ba9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800baa2:	430a      	orrs	r2, r1
 800baa4:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800baa6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800baa8:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800baac:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bab0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bab4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bab6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bab8:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800babc:	432a      	orrs	r2, r5
 800babe:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bac2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bac6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bac8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800baca:	f042 0206 	orr.w	r2, r2, #6
 800bace:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bad0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bad2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bad6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bad8:	ea42 020c 	orr.w	r2, r2, ip
 800badc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bade:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bae2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bae6:	4608      	mov	r0, r1
}
 800bae8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800baea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800baee:	f7f5 fe03 	bl	80016f8 <HAL_LTDC_MspInit>
 800baf2:	e79d      	b.n	800ba30 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800baf4:	2001      	movs	r0, #1
}
 800baf6:	4770      	bx	lr
 800baf8:	f000f800 	.word	0xf000f800

0800bafc <HAL_LTDC_ErrorCallback>:
 800bafc:	4770      	bx	lr
 800bafe:	bf00      	nop

0800bb00 <HAL_LTDC_ReloadEventCallback>:
 800bb00:	4770      	bx	lr
 800bb02:	bf00      	nop

0800bb04 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bb04:	6803      	ldr	r3, [r0, #0]
{
 800bb06:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bb08:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bb0a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb0c:	076a      	lsls	r2, r5, #29
{
 800bb0e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb10:	d501      	bpl.n	800bb16 <HAL_LTDC_IRQHandler+0x12>
 800bb12:	0771      	lsls	r1, r6, #29
 800bb14:	d41d      	bmi.n	800bb52 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bb16:	07aa      	lsls	r2, r5, #30
 800bb18:	d501      	bpl.n	800bb1e <HAL_LTDC_IRQHandler+0x1a>
 800bb1a:	07b3      	lsls	r3, r6, #30
 800bb1c:	d42d      	bmi.n	800bb7a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bb1e:	07e8      	lsls	r0, r5, #31
 800bb20:	d501      	bpl.n	800bb26 <HAL_LTDC_IRQHandler+0x22>
 800bb22:	07f1      	lsls	r1, r6, #31
 800bb24:	d440      	bmi.n	800bba8 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bb26:	072a      	lsls	r2, r5, #28
 800bb28:	d501      	bpl.n	800bb2e <HAL_LTDC_IRQHandler+0x2a>
 800bb2a:	0733      	lsls	r3, r6, #28
 800bb2c:	d400      	bmi.n	800bb30 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bb2e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb30:	6823      	ldr	r3, [r4, #0]
 800bb32:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb34:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb36:	f022 0208 	bic.w	r2, r2, #8
 800bb3a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb3c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb3e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bb40:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb42:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb46:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bb4a:	4620      	mov	r0, r4
 800bb4c:	f7ff ffd8 	bl	800bb00 <HAL_LTDC_ReloadEventCallback>
}
 800bb50:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bb52:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb54:	f022 0204 	bic.w	r2, r2, #4
 800bb58:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bb5a:	2204      	movs	r2, #4
 800bb5c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bb5e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bb62:	f043 0301 	orr.w	r3, r3, #1
 800bb66:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bb6a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb6c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb70:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb74:	f7ff ffc2 	bl	800bafc <HAL_LTDC_ErrorCallback>
 800bb78:	e7cd      	b.n	800bb16 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bb7a:	6823      	ldr	r3, [r4, #0]
 800bb7c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb7e:	f022 0202 	bic.w	r2, r2, #2
 800bb82:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bb84:	2202      	movs	r2, #2
 800bb86:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bb88:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bb8c:	f043 0302 	orr.w	r3, r3, #2
 800bb90:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb94:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bb96:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb98:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb9c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bba0:	4620      	mov	r0, r4
 800bba2:	f7ff ffab 	bl	800bafc <HAL_LTDC_ErrorCallback>
 800bba6:	e7ba      	b.n	800bb1e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bba8:	6823      	ldr	r3, [r4, #0]
 800bbaa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bbac:	f022 0201 	bic.w	r2, r2, #1
 800bbb0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bbb2:	2201      	movs	r2, #1
 800bbb4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bbb6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bbb8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bbbc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bbc0:	4620      	mov	r0, r4
 800bbc2:	f7f6 fdd1 	bl	8002768 <HAL_LTDC_LineEventCallback>
 800bbc6:	e7ae      	b.n	800bb26 <HAL_LTDC_IRQHandler+0x22>

0800bbc8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bbc8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bbcc:	2b01      	cmp	r3, #1
 800bbce:	f000 80c2 	beq.w	800bd56 <HAL_LTDC_ConfigLayer+0x18e>
{
 800bbd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbd6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbda:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbde:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbe2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbe4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbe6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbea:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bbee:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbf2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bbf6:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbfa:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bbfe:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc00:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc04:	460c      	mov	r4, r1
 800bc06:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc08:	9301      	str	r3, [sp, #4]
 800bc0a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc0c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc0e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bc12:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc16:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc18:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc1a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc20:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc24:	6823      	ldr	r3, [r4, #0]
 800bc26:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc2a:	9b01      	ldr	r3, [sp, #4]
 800bc2c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc30:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc34:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc36:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bc38:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc3c:	1c51      	adds	r1, r2, #1
 800bc3e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bc42:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc44:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc46:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc4a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc4e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bc52:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bc56:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bc5a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc5e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc62:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc64:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc66:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bc6a:	3301      	adds	r3, #1
 800bc6c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bc70:	4403      	add	r3, r0
 800bc72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bc76:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc7a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc7e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc80:	f023 0307 	bic.w	r3, r3, #7
 800bc84:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc88:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc8c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc90:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bc94:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bc98:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc9c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bca0:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bca4:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bca8:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bcac:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bcb0:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bcb4:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bcb8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bcbc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bcc0:	696b      	ldr	r3, [r5, #20]
 800bcc2:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bcc6:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bcca:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bcce:	f023 0307 	bic.w	r3, r3, #7
 800bcd2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bcd6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bcda:	4303      	orrs	r3, r0
 800bcdc:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bce0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bce4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bce6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcea:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bcee:	bb69      	cbnz	r1, 800bd4c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bcf0:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcf2:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcf4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcf6:	fb03 f707 	mul.w	r7, r3, r7
 800bcfa:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcfc:	fb02 f303 	mul.w	r3, r2, r3
 800bd00:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bd04:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd08:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bd0a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bd0e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bd12:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bd16:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bd1a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bd1e:	f023 0307 	bic.w	r3, r3, #7
 800bd22:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd26:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd2a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd2e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd30:	4313      	orrs	r3, r2
 800bd32:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bd36:	2300      	movs	r3, #0
  return HAL_OK;
 800bd38:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd3a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bd3e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd42:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bd46:	b003      	add	sp, #12
 800bd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bd4c:	3901      	subs	r1, #1
 800bd4e:	2906      	cmp	r1, #6
 800bd50:	d903      	bls.n	800bd5a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bd52:	2301      	movs	r3, #1
 800bd54:	e7cd      	b.n	800bcf2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bd56:	2002      	movs	r0, #2
}
 800bd58:	4770      	bx	lr
 800bd5a:	4b02      	ldr	r3, [pc, #8]	; (800bd64 <HAL_LTDC_ConfigLayer+0x19c>)
 800bd5c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bd60:	e7c7      	b.n	800bcf2 <HAL_LTDC_ConfigLayer+0x12a>
 800bd62:	bf00      	nop
 800bd64:	0802f518 	.word	0x0802f518

0800bd68 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bd68:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bd6c:	2b01      	cmp	r3, #1
 800bd6e:	d019      	beq.n	800bda4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd70:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd72:	2302      	movs	r3, #2
{
 800bd74:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd76:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd7a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd7c:	4c0a      	ldr	r4, [pc, #40]	; (800bda8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd7e:	f023 0301 	bic.w	r3, r3, #1
 800bd82:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd84:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd86:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bd88:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd8a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd8e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd92:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd94:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd98:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bd9c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bda0:	4618      	mov	r0, r3
}
 800bda2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bda4:	2002      	movs	r0, #2
}
 800bda6:	4770      	bx	lr
 800bda8:	40016800 	.word	0x40016800

0800bdac <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bdac:	2800      	cmp	r0, #0
 800bdae:	f000 81a2 	beq.w	800c0f6 <HAL_RCC_OscConfig+0x34a>
{
 800bdb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdb6:	6803      	ldr	r3, [r0, #0]
 800bdb8:	07dd      	lsls	r5, r3, #31
{
 800bdba:	b082      	sub	sp, #8
 800bdbc:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdbe:	d52f      	bpl.n	800be20 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdc0:	499e      	ldr	r1, [pc, #632]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bdc2:	688a      	ldr	r2, [r1, #8]
 800bdc4:	f002 020c 	and.w	r2, r2, #12
 800bdc8:	2a04      	cmp	r2, #4
 800bdca:	f000 80ed 	beq.w	800bfa8 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bdce:	688a      	ldr	r2, [r1, #8]
 800bdd0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdd4:	2a08      	cmp	r2, #8
 800bdd6:	f000 80e3 	beq.w	800bfa0 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bdda:	6863      	ldr	r3, [r4, #4]
 800bddc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bde0:	f000 80ec 	beq.w	800bfbc <HAL_RCC_OscConfig+0x210>
 800bde4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bde8:	f000 8175 	beq.w	800c0d6 <HAL_RCC_OscConfig+0x32a>
 800bdec:	4d93      	ldr	r5, [pc, #588]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bdee:	682a      	ldr	r2, [r5, #0]
 800bdf0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bdf4:	602a      	str	r2, [r5, #0]
 800bdf6:	682a      	ldr	r2, [r5, #0]
 800bdf8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bdfc:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bdfe:	2b00      	cmp	r3, #0
 800be00:	f040 80e1 	bne.w	800bfc6 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800be04:	f7fd fdb8 	bl	8009978 <HAL_GetTick>
 800be08:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be0a:	e005      	b.n	800be18 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800be0c:	f7fd fdb4 	bl	8009978 <HAL_GetTick>
 800be10:	1b80      	subs	r0, r0, r6
 800be12:	2864      	cmp	r0, #100	; 0x64
 800be14:	f200 8101 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be18:	682b      	ldr	r3, [r5, #0]
 800be1a:	039b      	lsls	r3, r3, #14
 800be1c:	d4f6      	bmi.n	800be0c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800be1e:	6823      	ldr	r3, [r4, #0]
 800be20:	079f      	lsls	r7, r3, #30
 800be22:	d528      	bpl.n	800be76 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be24:	4a85      	ldr	r2, [pc, #532]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800be26:	6891      	ldr	r1, [r2, #8]
 800be28:	f011 0f0c 	tst.w	r1, #12
 800be2c:	f000 8090 	beq.w	800bf50 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800be30:	6891      	ldr	r1, [r2, #8]
 800be32:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be36:	2908      	cmp	r1, #8
 800be38:	f000 8086 	beq.w	800bf48 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800be3c:	68e3      	ldr	r3, [r4, #12]
 800be3e:	2b00      	cmp	r3, #0
 800be40:	f000 810e 	beq.w	800c060 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800be44:	4b7e      	ldr	r3, [pc, #504]	; (800c040 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be46:	4e7d      	ldr	r6, [pc, #500]	; (800c03c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800be48:	2201      	movs	r2, #1
 800be4a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800be4c:	f7fd fd94 	bl	8009978 <HAL_GetTick>
 800be50:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be52:	e005      	b.n	800be60 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800be54:	f7fd fd90 	bl	8009978 <HAL_GetTick>
 800be58:	1b40      	subs	r0, r0, r5
 800be5a:	2802      	cmp	r0, #2
 800be5c:	f200 80dd 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be60:	6833      	ldr	r3, [r6, #0]
 800be62:	0798      	lsls	r0, r3, #30
 800be64:	d5f6      	bpl.n	800be54 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800be66:	6833      	ldr	r3, [r6, #0]
 800be68:	6922      	ldr	r2, [r4, #16]
 800be6a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800be6e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800be72:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800be74:	6823      	ldr	r3, [r4, #0]
 800be76:	071a      	lsls	r2, r3, #28
 800be78:	d451      	bmi.n	800bf1e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800be7a:	0758      	lsls	r0, r3, #29
 800be7c:	d52f      	bpl.n	800bede <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800be7e:	4a6f      	ldr	r2, [pc, #444]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800be80:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800be82:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800be86:	d07f      	beq.n	800bf88 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800be88:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800be8a:	4e6e      	ldr	r6, [pc, #440]	; (800c044 <HAL_RCC_OscConfig+0x298>)
 800be8c:	6833      	ldr	r3, [r6, #0]
 800be8e:	05d9      	lsls	r1, r3, #23
 800be90:	f140 80b3 	bpl.w	800bffa <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800be94:	68a3      	ldr	r3, [r4, #8]
 800be96:	2b01      	cmp	r3, #1
 800be98:	f000 80c3 	beq.w	800c022 <HAL_RCC_OscConfig+0x276>
 800be9c:	2b05      	cmp	r3, #5
 800be9e:	f000 812c 	beq.w	800c0fa <HAL_RCC_OscConfig+0x34e>
 800bea2:	4e66      	ldr	r6, [pc, #408]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bea4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bea6:	f022 0201 	bic.w	r2, r2, #1
 800beaa:	6732      	str	r2, [r6, #112]	; 0x70
 800beac:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800beae:	f022 0204 	bic.w	r2, r2, #4
 800beb2:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800beb4:	2b00      	cmp	r3, #0
 800beb6:	f040 80b9 	bne.w	800c02c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800beba:	f7fd fd5d 	bl	8009978 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bebe:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800bec2:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bec4:	e005      	b.n	800bed2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bec6:	f7fd fd57 	bl	8009978 <HAL_GetTick>
 800beca:	1bc0      	subs	r0, r0, r7
 800becc:	4540      	cmp	r0, r8
 800bece:	f200 80a4 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bed2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800bed4:	0798      	lsls	r0, r3, #30
 800bed6:	d4f6      	bmi.n	800bec6 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800bed8:	2d00      	cmp	r5, #0
 800beda:	f040 8106 	bne.w	800c0ea <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800bede:	69a0      	ldr	r0, [r4, #24]
 800bee0:	b1c8      	cbz	r0, 800bf16 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800bee2:	4d56      	ldr	r5, [pc, #344]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bee4:	68ab      	ldr	r3, [r5, #8]
 800bee6:	f003 030c 	and.w	r3, r3, #12
 800beea:	2b08      	cmp	r3, #8
 800beec:	f000 80c9 	beq.w	800c082 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bef0:	4b53      	ldr	r3, [pc, #332]	; (800c040 <HAL_RCC_OscConfig+0x294>)
 800bef2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bef4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800bef6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bef8:	f000 8109 	beq.w	800c10e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800befc:	f7fd fd3c 	bl	8009978 <HAL_GetTick>
 800bf00:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf02:	e005      	b.n	800bf10 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bf04:	f7fd fd38 	bl	8009978 <HAL_GetTick>
 800bf08:	1b00      	subs	r0, r0, r4
 800bf0a:	2802      	cmp	r0, #2
 800bf0c:	f200 8085 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf10:	682b      	ldr	r3, [r5, #0]
 800bf12:	019b      	lsls	r3, r3, #6
 800bf14:	d4f6      	bmi.n	800bf04 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800bf16:	2000      	movs	r0, #0
}
 800bf18:	b002      	add	sp, #8
 800bf1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bf1e:	6963      	ldr	r3, [r4, #20]
 800bf20:	b30b      	cbz	r3, 800bf66 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bf22:	4b47      	ldr	r3, [pc, #284]	; (800c040 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf24:	4e45      	ldr	r6, [pc, #276]	; (800c03c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bf26:	2201      	movs	r2, #1
 800bf28:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf2c:	f7fd fd24 	bl	8009978 <HAL_GetTick>
 800bf30:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf32:	e004      	b.n	800bf3e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf34:	f7fd fd20 	bl	8009978 <HAL_GetTick>
 800bf38:	1b40      	subs	r0, r0, r5
 800bf3a:	2802      	cmp	r0, #2
 800bf3c:	d86d      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf3e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf40:	079b      	lsls	r3, r3, #30
 800bf42:	d5f7      	bpl.n	800bf34 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bf44:	6823      	ldr	r3, [r4, #0]
 800bf46:	e798      	b.n	800be7a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bf48:	6852      	ldr	r2, [r2, #4]
 800bf4a:	0256      	lsls	r6, r2, #9
 800bf4c:	f53f af76 	bmi.w	800be3c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bf50:	4a3a      	ldr	r2, [pc, #232]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bf52:	6812      	ldr	r2, [r2, #0]
 800bf54:	0795      	lsls	r5, r2, #30
 800bf56:	d544      	bpl.n	800bfe2 <HAL_RCC_OscConfig+0x236>
 800bf58:	68e2      	ldr	r2, [r4, #12]
 800bf5a:	2a01      	cmp	r2, #1
 800bf5c:	d041      	beq.n	800bfe2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bf5e:	2001      	movs	r0, #1
}
 800bf60:	b002      	add	sp, #8
 800bf62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bf66:	4a36      	ldr	r2, [pc, #216]	; (800c040 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf68:	4e34      	ldr	r6, [pc, #208]	; (800c03c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bf6a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf6e:	f7fd fd03 	bl	8009978 <HAL_GetTick>
 800bf72:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf74:	e004      	b.n	800bf80 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf76:	f7fd fcff 	bl	8009978 <HAL_GetTick>
 800bf7a:	1b40      	subs	r0, r0, r5
 800bf7c:	2802      	cmp	r0, #2
 800bf7e:	d84c      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf80:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf82:	079f      	lsls	r7, r3, #30
 800bf84:	d4f7      	bmi.n	800bf76 <HAL_RCC_OscConfig+0x1ca>
 800bf86:	e7dd      	b.n	800bf44 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bf88:	9301      	str	r3, [sp, #4]
 800bf8a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf8c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bf90:	6413      	str	r3, [r2, #64]	; 0x40
 800bf92:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf94:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bf98:	9301      	str	r3, [sp, #4]
 800bf9a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bf9c:	2501      	movs	r5, #1
 800bf9e:	e774      	b.n	800be8a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bfa0:	684a      	ldr	r2, [r1, #4]
 800bfa2:	0250      	lsls	r0, r2, #9
 800bfa4:	f57f af19 	bpl.w	800bdda <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bfa8:	4a24      	ldr	r2, [pc, #144]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bfaa:	6812      	ldr	r2, [r2, #0]
 800bfac:	0391      	lsls	r1, r2, #14
 800bfae:	f57f af37 	bpl.w	800be20 <HAL_RCC_OscConfig+0x74>
 800bfb2:	6862      	ldr	r2, [r4, #4]
 800bfb4:	2a00      	cmp	r2, #0
 800bfb6:	f47f af33 	bne.w	800be20 <HAL_RCC_OscConfig+0x74>
 800bfba:	e7d0      	b.n	800bf5e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bfbc:	4a1f      	ldr	r2, [pc, #124]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bfbe:	6813      	ldr	r3, [r2, #0]
 800bfc0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bfc4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bfc6:	f7fd fcd7 	bl	8009978 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfca:	4e1c      	ldr	r6, [pc, #112]	; (800c03c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bfcc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfce:	e004      	b.n	800bfda <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bfd0:	f7fd fcd2 	bl	8009978 <HAL_GetTick>
 800bfd4:	1b40      	subs	r0, r0, r5
 800bfd6:	2864      	cmp	r0, #100	; 0x64
 800bfd8:	d81f      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfda:	6833      	ldr	r3, [r6, #0]
 800bfdc:	039a      	lsls	r2, r3, #14
 800bfde:	d5f7      	bpl.n	800bfd0 <HAL_RCC_OscConfig+0x224>
 800bfe0:	e71d      	b.n	800be1e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bfe2:	4916      	ldr	r1, [pc, #88]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800bfe4:	6920      	ldr	r0, [r4, #16]
 800bfe6:	680a      	ldr	r2, [r1, #0]
 800bfe8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bfec:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bff0:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bff2:	071a      	lsls	r2, r3, #28
 800bff4:	f57f af41 	bpl.w	800be7a <HAL_RCC_OscConfig+0xce>
 800bff8:	e791      	b.n	800bf1e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bffa:	6833      	ldr	r3, [r6, #0]
 800bffc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c000:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c002:	f7fd fcb9 	bl	8009978 <HAL_GetTick>
 800c006:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c008:	6833      	ldr	r3, [r6, #0]
 800c00a:	05da      	lsls	r2, r3, #23
 800c00c:	f53f af42 	bmi.w	800be94 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c010:	f7fd fcb2 	bl	8009978 <HAL_GetTick>
 800c014:	1bc0      	subs	r0, r0, r7
 800c016:	2802      	cmp	r0, #2
 800c018:	d9f6      	bls.n	800c008 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c01a:	2003      	movs	r0, #3
}
 800c01c:	b002      	add	sp, #8
 800c01e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c022:	4a06      	ldr	r2, [pc, #24]	; (800c03c <HAL_RCC_OscConfig+0x290>)
 800c024:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c026:	f043 0301 	orr.w	r3, r3, #1
 800c02a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c02c:	f7fd fca4 	bl	8009978 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c030:	4f02      	ldr	r7, [pc, #8]	; (800c03c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c032:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c034:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c038:	e00b      	b.n	800c052 <HAL_RCC_OscConfig+0x2a6>
 800c03a:	bf00      	nop
 800c03c:	40023800 	.word	0x40023800
 800c040:	42470000 	.word	0x42470000
 800c044:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c048:	f7fd fc96 	bl	8009978 <HAL_GetTick>
 800c04c:	1b80      	subs	r0, r0, r6
 800c04e:	4540      	cmp	r0, r8
 800c050:	d8e3      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c052:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c054:	079b      	lsls	r3, r3, #30
 800c056:	d5f7      	bpl.n	800c048 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c058:	2d00      	cmp	r5, #0
 800c05a:	f43f af40 	beq.w	800bede <HAL_RCC_OscConfig+0x132>
 800c05e:	e044      	b.n	800c0ea <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c060:	4a42      	ldr	r2, [pc, #264]	; (800c16c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c062:	4e43      	ldr	r6, [pc, #268]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c064:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c066:	f7fd fc87 	bl	8009978 <HAL_GetTick>
 800c06a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c06c:	e004      	b.n	800c078 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c06e:	f7fd fc83 	bl	8009978 <HAL_GetTick>
 800c072:	1b40      	subs	r0, r0, r5
 800c074:	2802      	cmp	r0, #2
 800c076:	d8d0      	bhi.n	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c078:	6833      	ldr	r3, [r6, #0]
 800c07a:	0799      	lsls	r1, r3, #30
 800c07c:	d4f7      	bmi.n	800c06e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c07e:	6823      	ldr	r3, [r4, #0]
 800c080:	e6f9      	b.n	800be76 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c082:	2801      	cmp	r0, #1
 800c084:	f43f af48 	beq.w	800bf18 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c088:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c08a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c08c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c090:	4291      	cmp	r1, r2
 800c092:	f47f af64 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c096:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c098:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c09c:	4291      	cmp	r1, r2
 800c09e:	f47f af5e 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c0a4:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c0a8:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c0aa:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c0ae:	f47f af56 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c0b4:	0852      	lsrs	r2, r2, #1
 800c0b6:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c0ba:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0bc:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c0c0:	f47f af4d 	bne.w	800bf5e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c0c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c0c6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0ca:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c0ce:	bf14      	ite	ne
 800c0d0:	2001      	movne	r0, #1
 800c0d2:	2000      	moveq	r0, #0
 800c0d4:	e720      	b.n	800bf18 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c0d6:	4b26      	ldr	r3, [pc, #152]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
 800c0d8:	681a      	ldr	r2, [r3, #0]
 800c0da:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c0de:	601a      	str	r2, [r3, #0]
 800c0e0:	681a      	ldr	r2, [r3, #0]
 800c0e2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c0e6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c0e8:	e76d      	b.n	800bfc6 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c0ea:	4a21      	ldr	r2, [pc, #132]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
 800c0ec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c0ee:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c0f2:	6413      	str	r3, [r2, #64]	; 0x40
 800c0f4:	e6f3      	b.n	800bede <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c0f6:	2001      	movs	r0, #1
}
 800c0f8:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c0fa:	4b1d      	ldr	r3, [pc, #116]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
 800c0fc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c0fe:	f042 0204 	orr.w	r2, r2, #4
 800c102:	671a      	str	r2, [r3, #112]	; 0x70
 800c104:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c106:	f042 0201 	orr.w	r2, r2, #1
 800c10a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c10c:	e78e      	b.n	800c02c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c10e:	f7fd fc33 	bl	8009978 <HAL_GetTick>
 800c112:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c114:	e005      	b.n	800c122 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c116:	f7fd fc2f 	bl	8009978 <HAL_GetTick>
 800c11a:	1b80      	subs	r0, r0, r6
 800c11c:	2802      	cmp	r0, #2
 800c11e:	f63f af7c 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c122:	682b      	ldr	r3, [r5, #0]
 800c124:	0199      	lsls	r1, r3, #6
 800c126:	d4f6      	bmi.n	800c116 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c128:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c12c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c12e:	430b      	orrs	r3, r1
 800c130:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c134:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c138:	0852      	lsrs	r2, r2, #1
 800c13a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c13e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c140:	490a      	ldr	r1, [pc, #40]	; (800c16c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c142:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c146:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c148:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c14a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c14c:	f7fd fc14 	bl	8009978 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c150:	4d07      	ldr	r5, [pc, #28]	; (800c170 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c152:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c154:	e005      	b.n	800c162 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c156:	f7fd fc0f 	bl	8009978 <HAL_GetTick>
 800c15a:	1b00      	subs	r0, r0, r4
 800c15c:	2802      	cmp	r0, #2
 800c15e:	f63f af5c 	bhi.w	800c01a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c162:	682b      	ldr	r3, [r5, #0]
 800c164:	019a      	lsls	r2, r3, #6
 800c166:	d5f6      	bpl.n	800c156 <HAL_RCC_OscConfig+0x3aa>
 800c168:	e6d5      	b.n	800bf16 <HAL_RCC_OscConfig+0x16a>
 800c16a:	bf00      	nop
 800c16c:	42470000 	.word	0x42470000
 800c170:	40023800 	.word	0x40023800

0800c174 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c174:	4916      	ldr	r1, [pc, #88]	; (800c1d0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c176:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c178:	688b      	ldr	r3, [r1, #8]
 800c17a:	f003 030c 	and.w	r3, r3, #12
 800c17e:	2b04      	cmp	r3, #4
 800c180:	d01b      	beq.n	800c1ba <HAL_RCC_GetSysClockFreq+0x46>
 800c182:	2b08      	cmp	r3, #8
 800c184:	d117      	bne.n	800c1b6 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c186:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c188:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c18a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c18c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c190:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c194:	d113      	bne.n	800c1be <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c196:	480f      	ldr	r0, [pc, #60]	; (800c1d4 <HAL_RCC_GetSysClockFreq+0x60>)
 800c198:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c19c:	fba1 0100 	umull	r0, r1, r1, r0
 800c1a0:	f7f4 f8d6 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c1a4:	4b0a      	ldr	r3, [pc, #40]	; (800c1d0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c1a6:	685b      	ldr	r3, [r3, #4]
 800c1a8:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c1ac:	3301      	adds	r3, #1
 800c1ae:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c1b0:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c1b4:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c1b6:	4807      	ldr	r0, [pc, #28]	; (800c1d4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c1b8:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c1ba:	4807      	ldr	r0, [pc, #28]	; (800c1d8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c1bc:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c1be:	4806      	ldr	r0, [pc, #24]	; (800c1d8 <HAL_RCC_GetSysClockFreq+0x64>)
 800c1c0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c1c4:	2300      	movs	r3, #0
 800c1c6:	fba1 0100 	umull	r0, r1, r1, r0
 800c1ca:	f7f4 f8c1 	bl	8000350 <__aeabi_uldivmod>
 800c1ce:	e7e9      	b.n	800c1a4 <HAL_RCC_GetSysClockFreq+0x30>
 800c1d0:	40023800 	.word	0x40023800
 800c1d4:	00f42400 	.word	0x00f42400
 800c1d8:	007a1200 	.word	0x007a1200

0800c1dc <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c1dc:	2800      	cmp	r0, #0
 800c1de:	f000 8087 	beq.w	800c2f0 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1e2:	4a48      	ldr	r2, [pc, #288]	; (800c304 <HAL_RCC_ClockConfig+0x128>)
 800c1e4:	6813      	ldr	r3, [r2, #0]
 800c1e6:	f003 030f 	and.w	r3, r3, #15
 800c1ea:	428b      	cmp	r3, r1
{
 800c1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1f0:	460d      	mov	r5, r1
 800c1f2:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1f4:	d209      	bcs.n	800c20a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1f6:	b2cb      	uxtb	r3, r1
 800c1f8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1fa:	6813      	ldr	r3, [r2, #0]
 800c1fc:	f003 030f 	and.w	r3, r3, #15
 800c200:	428b      	cmp	r3, r1
 800c202:	d002      	beq.n	800c20a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c204:	2001      	movs	r0, #1
}
 800c206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c20a:	6823      	ldr	r3, [r4, #0]
 800c20c:	0798      	lsls	r0, r3, #30
 800c20e:	d514      	bpl.n	800c23a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c210:	0759      	lsls	r1, r3, #29
 800c212:	d504      	bpl.n	800c21e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c214:	493c      	ldr	r1, [pc, #240]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c216:	688a      	ldr	r2, [r1, #8]
 800c218:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c21c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c21e:	071a      	lsls	r2, r3, #28
 800c220:	d504      	bpl.n	800c22c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c222:	4939      	ldr	r1, [pc, #228]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c224:	688a      	ldr	r2, [r1, #8]
 800c226:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c22a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c22c:	4936      	ldr	r1, [pc, #216]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c22e:	68a0      	ldr	r0, [r4, #8]
 800c230:	688a      	ldr	r2, [r1, #8]
 800c232:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c236:	4302      	orrs	r2, r0
 800c238:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c23a:	07df      	lsls	r7, r3, #31
 800c23c:	d521      	bpl.n	800c282 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c23e:	6862      	ldr	r2, [r4, #4]
 800c240:	2a01      	cmp	r2, #1
 800c242:	d057      	beq.n	800c2f4 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c244:	1e93      	subs	r3, r2, #2
 800c246:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c248:	4b2f      	ldr	r3, [pc, #188]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c24a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c24c:	d94d      	bls.n	800c2ea <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c24e:	0799      	lsls	r1, r3, #30
 800c250:	d5d8      	bpl.n	800c204 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c252:	4e2d      	ldr	r6, [pc, #180]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c254:	68b3      	ldr	r3, [r6, #8]
 800c256:	f023 0303 	bic.w	r3, r3, #3
 800c25a:	4313      	orrs	r3, r2
 800c25c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c25e:	f7fd fb8b 	bl	8009978 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c262:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c266:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c268:	e004      	b.n	800c274 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c26a:	f7fd fb85 	bl	8009978 <HAL_GetTick>
 800c26e:	1bc0      	subs	r0, r0, r7
 800c270:	4540      	cmp	r0, r8
 800c272:	d844      	bhi.n	800c2fe <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c274:	68b3      	ldr	r3, [r6, #8]
 800c276:	6862      	ldr	r2, [r4, #4]
 800c278:	f003 030c 	and.w	r3, r3, #12
 800c27c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c280:	d1f3      	bne.n	800c26a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c282:	4a20      	ldr	r2, [pc, #128]	; (800c304 <HAL_RCC_ClockConfig+0x128>)
 800c284:	6813      	ldr	r3, [r2, #0]
 800c286:	f003 030f 	and.w	r3, r3, #15
 800c28a:	42ab      	cmp	r3, r5
 800c28c:	d906      	bls.n	800c29c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c28e:	b2eb      	uxtb	r3, r5
 800c290:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c292:	6813      	ldr	r3, [r2, #0]
 800c294:	f003 030f 	and.w	r3, r3, #15
 800c298:	42ab      	cmp	r3, r5
 800c29a:	d1b3      	bne.n	800c204 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c29c:	6823      	ldr	r3, [r4, #0]
 800c29e:	075a      	lsls	r2, r3, #29
 800c2a0:	d506      	bpl.n	800c2b0 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c2a2:	4919      	ldr	r1, [pc, #100]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2a4:	68e0      	ldr	r0, [r4, #12]
 800c2a6:	688a      	ldr	r2, [r1, #8]
 800c2a8:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c2ac:	4302      	orrs	r2, r0
 800c2ae:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c2b0:	071b      	lsls	r3, r3, #28
 800c2b2:	d507      	bpl.n	800c2c4 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c2b4:	4a14      	ldr	r2, [pc, #80]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2b6:	6921      	ldr	r1, [r4, #16]
 800c2b8:	6893      	ldr	r3, [r2, #8]
 800c2ba:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c2be:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c2c2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2c4:	f7ff ff56 	bl	800c174 <HAL_RCC_GetSysClockFreq>
 800c2c8:	4a0f      	ldr	r2, [pc, #60]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2ca:	4c10      	ldr	r4, [pc, #64]	; (800c30c <HAL_RCC_ClockConfig+0x130>)
 800c2cc:	6892      	ldr	r2, [r2, #8]
 800c2ce:	4910      	ldr	r1, [pc, #64]	; (800c310 <HAL_RCC_ClockConfig+0x134>)
 800c2d0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c2d4:	4603      	mov	r3, r0
 800c2d6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c2d8:	480e      	ldr	r0, [pc, #56]	; (800c314 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2da:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c2dc:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2de:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c2e0:	f7f5 fc22 	bl	8001b28 <HAL_InitTick>
  return HAL_OK;
 800c2e4:	2000      	movs	r0, #0
}
 800c2e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c2ea:	0198      	lsls	r0, r3, #6
 800c2ec:	d4b1      	bmi.n	800c252 <HAL_RCC_ClockConfig+0x76>
 800c2ee:	e789      	b.n	800c204 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c2f0:	2001      	movs	r0, #1
}
 800c2f2:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c2f4:	4b04      	ldr	r3, [pc, #16]	; (800c308 <HAL_RCC_ClockConfig+0x12c>)
 800c2f6:	681b      	ldr	r3, [r3, #0]
 800c2f8:	039e      	lsls	r6, r3, #14
 800c2fa:	d4aa      	bmi.n	800c252 <HAL_RCC_ClockConfig+0x76>
 800c2fc:	e782      	b.n	800c204 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c2fe:	2003      	movs	r0, #3
 800c300:	e781      	b.n	800c206 <HAL_RCC_ClockConfig+0x2a>
 800c302:	bf00      	nop
 800c304:	40023c00 	.word	0x40023c00
 800c308:	40023800 	.word	0x40023800
 800c30c:	0802f500 	.word	0x0802f500
 800c310:	20000078 	.word	0x20000078
 800c314:	20000080 	.word	0x20000080

0800c318 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c318:	4b04      	ldr	r3, [pc, #16]	; (800c32c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c31a:	4905      	ldr	r1, [pc, #20]	; (800c330 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c31c:	689b      	ldr	r3, [r3, #8]
 800c31e:	4a05      	ldr	r2, [pc, #20]	; (800c334 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c320:	6808      	ldr	r0, [r1, #0]
 800c322:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c326:	5cd3      	ldrb	r3, [r2, r3]
}
 800c328:	40d8      	lsrs	r0, r3
 800c32a:	4770      	bx	lr
 800c32c:	40023800 	.word	0x40023800
 800c330:	20000078 	.word	0x20000078
 800c334:	0802f510 	.word	0x0802f510

0800c338 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c338:	4b0e      	ldr	r3, [pc, #56]	; (800c374 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c33a:	220f      	movs	r2, #15
 800c33c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c33e:	689a      	ldr	r2, [r3, #8]
 800c340:	f002 0203 	and.w	r2, r2, #3
 800c344:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c346:	689a      	ldr	r2, [r3, #8]
 800c348:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c34c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c34e:	689a      	ldr	r2, [r3, #8]
 800c350:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c354:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c356:	689b      	ldr	r3, [r3, #8]
 800c358:	08db      	lsrs	r3, r3, #3
{
 800c35a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c35c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c360:	4c05      	ldr	r4, [pc, #20]	; (800c378 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c362:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c364:	6823      	ldr	r3, [r4, #0]
}
 800c366:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c36a:	f003 030f 	and.w	r3, r3, #15
 800c36e:	600b      	str	r3, [r1, #0]
}
 800c370:	4770      	bx	lr
 800c372:	bf00      	nop
 800c374:	40023800 	.word	0x40023800
 800c378:	40023c00 	.word	0x40023c00

0800c37c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c37c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c37e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c380:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c384:	b083      	sub	sp, #12
 800c386:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c388:	d111      	bne.n	800c3ae <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c38a:	f013 0f0c 	tst.w	r3, #12
 800c38e:	d16f      	bne.n	800c470 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c390:	0698      	lsls	r0, r3, #26
 800c392:	f100 80c2 	bmi.w	800c51a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c396:	f013 0310 	ands.w	r3, r3, #16
 800c39a:	f000 80bb 	beq.w	800c514 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c39e:	4b89      	ldr	r3, [pc, #548]	; (800c5c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c3a0:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c3a4:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c3a8:	2000      	movs	r0, #0
}
 800c3aa:	b003      	add	sp, #12
 800c3ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c3ae:	4b86      	ldr	r3, [pc, #536]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3b0:	4e86      	ldr	r6, [pc, #536]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c3b2:	2200      	movs	r2, #0
 800c3b4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c3b6:	f7fd fadf 	bl	8009978 <HAL_GetTick>
 800c3ba:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3bc:	e004      	b.n	800c3c8 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c3be:	f7fd fadb 	bl	8009978 <HAL_GetTick>
 800c3c2:	1b43      	subs	r3, r0, r5
 800c3c4:	2b02      	cmp	r3, #2
 800c3c6:	d850      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3c8:	6833      	ldr	r3, [r6, #0]
 800c3ca:	0118      	lsls	r0, r3, #4
 800c3cc:	d4f7      	bmi.n	800c3be <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c3ce:	6823      	ldr	r3, [r4, #0]
 800c3d0:	07d9      	lsls	r1, r3, #31
 800c3d2:	d506      	bpl.n	800c3e2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c3d4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c3d8:	0712      	lsls	r2, r2, #28
 800c3da:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c3de:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c3e2:	079a      	lsls	r2, r3, #30
 800c3e4:	d515      	bpl.n	800c412 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3e6:	4979      	ldr	r1, [pc, #484]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3e8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3ea:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3ee:	6865      	ldr	r5, [r4, #4]
 800c3f0:	0612      	lsls	r2, r2, #24
 800c3f2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c3f6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c3fa:	4302      	orrs	r2, r0
 800c3fc:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c400:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c404:	69e2      	ldr	r2, [r4, #28]
 800c406:	f020 001f 	bic.w	r0, r0, #31
 800c40a:	3a01      	subs	r2, #1
 800c40c:	4302      	orrs	r2, r0
 800c40e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c412:	065b      	lsls	r3, r3, #25
 800c414:	d509      	bpl.n	800c42a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c416:	1d20      	adds	r0, r4, #4
 800c418:	c80b      	ldmia	r0, {r0, r1, r3}
 800c41a:	061b      	lsls	r3, r3, #24
 800c41c:	4a6b      	ldr	r2, [pc, #428]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c41e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c422:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c426:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c42a:	4b67      	ldr	r3, [pc, #412]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c42c:	4e67      	ldr	r6, [pc, #412]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c42e:	2201      	movs	r2, #1
 800c430:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c432:	f7fd faa1 	bl	8009978 <HAL_GetTick>
 800c436:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c438:	e004      	b.n	800c444 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c43a:	f7fd fa9d 	bl	8009978 <HAL_GetTick>
 800c43e:	1b40      	subs	r0, r0, r5
 800c440:	2802      	cmp	r0, #2
 800c442:	d812      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c444:	6833      	ldr	r3, [r6, #0]
 800c446:	011f      	lsls	r7, r3, #4
 800c448:	d5f7      	bpl.n	800c43a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c44a:	6823      	ldr	r3, [r4, #0]
 800c44c:	e79d      	b.n	800c38a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c44e:	f7fd fa93 	bl	8009978 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c452:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c456:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c458:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c45a:	079b      	lsls	r3, r3, #30
 800c45c:	f100 80a5 	bmi.w	800c5aa <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c460:	f7fd fa8a 	bl	8009978 <HAL_GetTick>
 800c464:	1b80      	subs	r0, r0, r6
 800c466:	42b8      	cmp	r0, r7
 800c468:	d9f6      	bls.n	800c458 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c46a:	2003      	movs	r0, #3
}
 800c46c:	b003      	add	sp, #12
 800c46e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c470:	4b55      	ldr	r3, [pc, #340]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c472:	4e56      	ldr	r6, [pc, #344]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c474:	2200      	movs	r2, #0
 800c476:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c478:	f7fd fa7e 	bl	8009978 <HAL_GetTick>
 800c47c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c47e:	e004      	b.n	800c48a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c480:	f7fd fa7a 	bl	8009978 <HAL_GetTick>
 800c484:	1b43      	subs	r3, r0, r5
 800c486:	2b02      	cmp	r3, #2
 800c488:	d8ef      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c48a:	6833      	ldr	r3, [r6, #0]
 800c48c:	0098      	lsls	r0, r3, #2
 800c48e:	d4f7      	bmi.n	800c480 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c490:	6822      	ldr	r2, [r4, #0]
 800c492:	0751      	lsls	r1, r2, #29
 800c494:	d515      	bpl.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c496:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c498:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c49c:	6920      	ldr	r0, [r4, #16]
 800c49e:	061b      	lsls	r3, r3, #24
 800c4a0:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c4a4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4a8:	430b      	orrs	r3, r1
 800c4aa:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c4ae:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c4b2:	6a21      	ldr	r1, [r4, #32]
 800c4b4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c4b8:	3901      	subs	r1, #1
 800c4ba:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c4be:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c4c2:	0713      	lsls	r3, r2, #28
 800c4c4:	d514      	bpl.n	800c4f0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4c6:	4a41      	ldr	r2, [pc, #260]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4c8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4ca:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4ce:	6920      	ldr	r0, [r4, #16]
 800c4d0:	071b      	lsls	r3, r3, #28
 800c4d2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c4d6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4da:	430b      	orrs	r3, r1
 800c4dc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c4e0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c4e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c4e6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c4ea:	430b      	orrs	r3, r1
 800c4ec:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c4f0:	4b35      	ldr	r3, [pc, #212]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4f2:	4e36      	ldr	r6, [pc, #216]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c4f4:	2201      	movs	r2, #1
 800c4f6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c4f8:	f7fd fa3e 	bl	8009978 <HAL_GetTick>
 800c4fc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4fe:	e004      	b.n	800c50a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c500:	f7fd fa3a 	bl	8009978 <HAL_GetTick>
 800c504:	1b40      	subs	r0, r0, r5
 800c506:	2802      	cmp	r0, #2
 800c508:	d8af      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c50a:	6833      	ldr	r3, [r6, #0]
 800c50c:	009f      	lsls	r7, r3, #2
 800c50e:	d5f7      	bpl.n	800c500 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c510:	6823      	ldr	r3, [r4, #0]
 800c512:	e73d      	b.n	800c390 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c514:	4618      	mov	r0, r3
}
 800c516:	b003      	add	sp, #12
 800c518:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c51a:	4b2c      	ldr	r3, [pc, #176]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c51c:	4d2c      	ldr	r5, [pc, #176]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c51e:	2200      	movs	r2, #0
 800c520:	9201      	str	r2, [sp, #4]
 800c522:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c524:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c528:	641a      	str	r2, [r3, #64]	; 0x40
 800c52a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c52c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c530:	9301      	str	r3, [sp, #4]
 800c532:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c534:	682b      	ldr	r3, [r5, #0]
 800c536:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c53a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c53c:	f7fd fa1c 	bl	8009978 <HAL_GetTick>
 800c540:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c542:	e004      	b.n	800c54e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c544:	f7fd fa18 	bl	8009978 <HAL_GetTick>
 800c548:	1b83      	subs	r3, r0, r6
 800c54a:	2b02      	cmp	r3, #2
 800c54c:	d88d      	bhi.n	800c46a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c54e:	682b      	ldr	r3, [r5, #0]
 800c550:	05d9      	lsls	r1, r3, #23
 800c552:	d5f7      	bpl.n	800c544 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c554:	4d1d      	ldr	r5, [pc, #116]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c556:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c558:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c55a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c55e:	d111      	bne.n	800c584 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c560:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c564:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c568:	d021      	beq.n	800c5ae <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c56a:	4918      	ldr	r1, [pc, #96]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c56c:	688a      	ldr	r2, [r1, #8]
 800c56e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c572:	608a      	str	r2, [r1, #8]
 800c574:	4a15      	ldr	r2, [pc, #84]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c576:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c578:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c57c:	430b      	orrs	r3, r1
 800c57e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c580:	6823      	ldr	r3, [r4, #0]
 800c582:	e708      	b.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c584:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c588:	4291      	cmp	r1, r2
 800c58a:	d0eb      	beq.n	800c564 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c58c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c58e:	4a0e      	ldr	r2, [pc, #56]	; (800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c590:	2101      	movs	r1, #1
 800c592:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c596:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c59a:	2100      	movs	r1, #0
 800c59c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c5a0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c5a2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c5a4:	07da      	lsls	r2, r3, #31
 800c5a6:	f53f af52 	bmi.w	800c44e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c5aa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c5ac:	e7d8      	b.n	800c560 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c5ae:	4807      	ldr	r0, [pc, #28]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c5b0:	6882      	ldr	r2, [r0, #8]
 800c5b2:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c5b6:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c5ba:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c5be:	430a      	orrs	r2, r1
 800c5c0:	6082      	str	r2, [r0, #8]
 800c5c2:	e7d7      	b.n	800c574 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c5c4:	42471000 	.word	0x42471000
 800c5c8:	42470000 	.word	0x42470000
 800c5cc:	40023800 	.word	0x40023800
 800c5d0:	40007000 	.word	0x40007000

0800c5d4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c5d4:	b1f0      	cbz	r0, 800c614 <HAL_SDRAM_Init+0x40>
{
 800c5d6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c5d8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5dc:	460d      	mov	r5, r1
 800c5de:	4604      	mov	r4, r0
 800c5e0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c5e4:	b18b      	cbz	r3, 800c60a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5e6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c5e8:	2302      	movs	r3, #2
 800c5ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5ee:	f851 0b04 	ldr.w	r0, [r1], #4
 800c5f2:	f001 f9dd 	bl	800d9b0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c5f6:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c5fa:	4629      	mov	r1, r5
 800c5fc:	f001 fa16 	bl	800da2c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c600:	2301      	movs	r3, #1
 800c602:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c606:	2000      	movs	r0, #0
}
 800c608:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c60a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c60e:	f7f5 fa23 	bl	8001a58 <HAL_SDRAM_MspInit>
 800c612:	e7e8      	b.n	800c5e6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c614:	2001      	movs	r0, #1
}
 800c616:	4770      	bx	lr

0800c618 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c618:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c61a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c61e:	2b02      	cmp	r3, #2
{
 800c620:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c622:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c624:	d004      	beq.n	800c630 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c626:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c62a:	2c01      	cmp	r4, #1
 800c62c:	d001      	beq.n	800c632 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c62e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c630:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c632:	460e      	mov	r6, r1
 800c634:	2302      	movs	r3, #2
 800c636:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c63a:	6828      	ldr	r0, [r5, #0]
 800c63c:	f001 fa42 	bl	800dac4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c640:	6833      	ldr	r3, [r6, #0]
 800c642:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c644:	bf06      	itte	eq
 800c646:	2305      	moveq	r3, #5
 800c648:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c64c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c650:	2000      	movs	r0, #0
}
 800c652:	bd70      	pop	{r4, r5, r6, pc}

0800c654 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c654:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c656:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c65a:	2b02      	cmp	r3, #2
{
 800c65c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c65e:	b2d8      	uxtb	r0, r3
 800c660:	d005      	beq.n	800c66e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c662:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c666:	2b01      	cmp	r3, #1
 800c668:	b2dd      	uxtb	r5, r3
 800c66a:	d001      	beq.n	800c670 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c66c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c66e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c670:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c672:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c674:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c678:	f001 fa4e 	bl	800db18 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c67c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c680:	2000      	movs	r0, #0
}
 800c682:	bd38      	pop	{r3, r4, r5, pc}

0800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c688:	b082      	sub	sp, #8
 800c68a:	461d      	mov	r5, r3
 800c68c:	4616      	mov	r6, r2
 800c68e:	460c      	mov	r4, r1
 800c690:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c692:	f7fd f971 	bl	8009978 <HAL_GetTick>
 800c696:	4435      	add	r5, r6
 800c698:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c69a:	f7fd f96d 	bl	8009978 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c69e:	4b27      	ldr	r3, [pc, #156]	; (800c73c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c6a0:	681b      	ldr	r3, [r3, #0]
 800c6a2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c6a6:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c6aa:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c6ac:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6ae:	1c73      	adds	r3, r6, #1
 800c6b0:	6839      	ldr	r1, [r7, #0]
 800c6b2:	d107      	bne.n	800c6c4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c6b4:	688b      	ldr	r3, [r1, #8]
 800c6b6:	ea34 0303 	bics.w	r3, r4, r3
 800c6ba:	d0fb      	beq.n	800c6b4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c6bc:	2000      	movs	r0, #0
}
 800c6be:	b002      	add	sp, #8
 800c6c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6c4:	688b      	ldr	r3, [r1, #8]
 800c6c6:	ea34 0303 	bics.w	r3, r4, r3
 800c6ca:	d1f7      	bne.n	800c6bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c6cc:	f7fd f954 	bl	8009978 <HAL_GetTick>
 800c6d0:	eba0 0008 	sub.w	r0, r0, r8
 800c6d4:	42a8      	cmp	r0, r5
 800c6d6:	d208      	bcs.n	800c6ea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c6d8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c6da:	2b00      	cmp	r3, #0
      count--;
 800c6dc:	9b01      	ldr	r3, [sp, #4]
 800c6de:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c6e2:	bf08      	it	eq
 800c6e4:	2500      	moveq	r5, #0
      count--;
 800c6e6:	9301      	str	r3, [sp, #4]
 800c6e8:	e7e1      	b.n	800c6ae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6ea:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6ee:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6f0:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6f4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c6f8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6fa:	d013      	beq.n	800c724 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c6fc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c6fe:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c702:	d107      	bne.n	800c714 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c704:	681a      	ldr	r2, [r3, #0]
 800c706:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c70a:	601a      	str	r2, [r3, #0]
 800c70c:	681a      	ldr	r2, [r3, #0]
 800c70e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c712:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c714:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c716:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c718:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c71c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c720:	2003      	movs	r0, #3
 800c722:	e7cc      	b.n	800c6be <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c724:	68ba      	ldr	r2, [r7, #8]
 800c726:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c72a:	d002      	beq.n	800c732 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c72c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c730:	d1e4      	bne.n	800c6fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c732:	681a      	ldr	r2, [r3, #0]
 800c734:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c738:	601a      	str	r2, [r3, #0]
 800c73a:	e7df      	b.n	800c6fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c73c:	20000078 	.word	0x20000078

0800c740 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c740:	b538      	push	{r3, r4, r5, lr}
 800c742:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c744:	6842      	ldr	r2, [r0, #4]
 800c746:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c74a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c74c:	d006      	beq.n	800c75c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c74e:	460a      	mov	r2, r1
 800c750:	2101      	movs	r1, #1
 800c752:	f7ff ff97 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c756:	b978      	cbnz	r0, 800c778 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c758:	2000      	movs	r0, #0
}
 800c75a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c75c:	6882      	ldr	r2, [r0, #8]
 800c75e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c762:	d01c      	beq.n	800c79e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c764:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c768:	d00c      	beq.n	800c784 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c76a:	460a      	mov	r2, r1
 800c76c:	4620      	mov	r0, r4
 800c76e:	2180      	movs	r1, #128	; 0x80
 800c770:	f7ff ff88 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c774:	2800      	cmp	r0, #0
 800c776:	d0ef      	beq.n	800c758 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c778:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c77a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c77e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c780:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c782:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c784:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c786:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c788:	6829      	ldr	r1, [r5, #0]
 800c78a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c78e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c790:	2101      	movs	r1, #1
 800c792:	f7ff ff77 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c796:	2800      	cmp	r0, #0
 800c798:	d1ee      	bne.n	800c778 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c79a:	2000      	movs	r0, #0
 800c79c:	e7dd      	b.n	800c75a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c79e:	6800      	ldr	r0, [r0, #0]
 800c7a0:	6802      	ldr	r2, [r0, #0]
 800c7a2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c7a6:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c7a8:	460a      	mov	r2, r1
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	2180      	movs	r1, #128	; 0x80
 800c7ae:	f7ff ff69 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c7b2:	2800      	cmp	r0, #0
 800c7b4:	d0d0      	beq.n	800c758 <SPI_EndRxTransaction+0x18>
 800c7b6:	e7df      	b.n	800c778 <SPI_EndRxTransaction+0x38>

0800c7b8 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c7b8:	2800      	cmp	r0, #0
 800c7ba:	d05c      	beq.n	800c876 <HAL_SPI_Init+0xbe>
{
 800c7bc:	b570      	push	{r4, r5, r6, lr}
 800c7be:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c7c0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c7c2:	2800      	cmp	r0, #0
 800c7c4:	d047      	beq.n	800c856 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c7c6:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c7c8:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7cc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c7d0:	2200      	movs	r2, #0
 800c7d2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7d4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c7d8:	2b00      	cmp	r3, #0
 800c7da:	d042      	beq.n	800c862 <HAL_SPI_Init+0xaa>
 800c7dc:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c7de:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7e0:	68a5      	ldr	r5, [r4, #8]
 800c7e2:	69a2      	ldr	r2, [r4, #24]
 800c7e4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c7e6:	2302      	movs	r3, #2
 800c7e8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c7ec:	680b      	ldr	r3, [r1, #0]
 800c7ee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c7f2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7f4:	6863      	ldr	r3, [r4, #4]
 800c7f6:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c7fa:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c7fe:	432b      	orrs	r3, r5
 800c800:	68e5      	ldr	r5, [r4, #12]
 800c802:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c806:	432b      	orrs	r3, r5
 800c808:	6925      	ldr	r5, [r4, #16]
 800c80a:	f005 0502 	and.w	r5, r5, #2
 800c80e:	432b      	orrs	r3, r5
 800c810:	6965      	ldr	r5, [r4, #20]
 800c812:	f005 0501 	and.w	r5, r5, #1
 800c816:	432b      	orrs	r3, r5
 800c818:	69e5      	ldr	r5, [r4, #28]
 800c81a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c81e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c822:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c826:	4333      	orrs	r3, r6
 800c828:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c82a:	0c12      	lsrs	r2, r2, #16
 800c82c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c830:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c834:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c838:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c83c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c83e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c840:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c842:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c844:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c846:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c84a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c84c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c84e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c850:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c854:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c856:	6863      	ldr	r3, [r4, #4]
 800c858:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c85c:	d0b6      	beq.n	800c7cc <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c85e:	61e0      	str	r0, [r4, #28]
 800c860:	e7b4      	b.n	800c7cc <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c862:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c864:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c868:	f7f5 f836 	bl	80018d8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c86c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c870:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c874:	e7b3      	b.n	800c7de <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c876:	2001      	movs	r0, #1
}
 800c878:	4770      	bx	lr
 800c87a:	bf00      	nop

0800c87c <HAL_SPI_Transmit>:
{
 800c87c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c880:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c882:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c886:	2801      	cmp	r0, #1
{
 800c888:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c88a:	f000 8085 	beq.w	800c998 <HAL_SPI_Transmit+0x11c>
 800c88e:	461d      	mov	r5, r3
 800c890:	2301      	movs	r3, #1
 800c892:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c896:	4688      	mov	r8, r1
 800c898:	4617      	mov	r7, r2
 800c89a:	f7fd f86d 	bl	8009978 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c89e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c8a2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c8a4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c8a6:	b2d8      	uxtb	r0, r3
 800c8a8:	d009      	beq.n	800c8be <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c8aa:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c8ac:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c8ae:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c8b0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c8b4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c8b8:	b002      	add	sp, #8
 800c8ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c8be:	f1b8 0f00 	cmp.w	r8, #0
 800c8c2:	d0f3      	beq.n	800c8ac <HAL_SPI_Transmit+0x30>
 800c8c4:	2f00      	cmp	r7, #0
 800c8c6:	d0f1      	beq.n	800c8ac <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8c8:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c8ca:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c8cc:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8d0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8d2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8d4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8d8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c8dc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8e0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c8e2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c8e4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c8e6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c8e8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c8ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8ec:	f000 8085 	beq.w	800c9fa <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8f0:	6803      	ldr	r3, [r0, #0]
 800c8f2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c8f4:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8f6:	d403      	bmi.n	800c900 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c8f8:	6803      	ldr	r3, [r0, #0]
 800c8fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c8fe:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c900:	68e3      	ldr	r3, [r4, #12]
 800c902:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c906:	d04b      	beq.n	800c9a0 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c908:	6863      	ldr	r3, [r4, #4]
 800c90a:	2b00      	cmp	r3, #0
 800c90c:	f000 8097 	beq.w	800ca3e <HAL_SPI_Transmit+0x1c2>
 800c910:	2f01      	cmp	r7, #1
 800c912:	f000 8094 	beq.w	800ca3e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c916:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c918:	b29b      	uxth	r3, r3
 800c91a:	b1ab      	cbz	r3, 800c948 <HAL_SPI_Transmit+0xcc>
 800c91c:	1c68      	adds	r0, r5, #1
 800c91e:	f040 8083 	bne.w	800ca28 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c922:	6823      	ldr	r3, [r4, #0]
 800c924:	689a      	ldr	r2, [r3, #8]
 800c926:	0791      	lsls	r1, r2, #30
 800c928:	f140 8094 	bpl.w	800ca54 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c92c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c92e:	7812      	ldrb	r2, [r2, #0]
 800c930:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c932:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c934:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c936:	3901      	subs	r1, #1
 800c938:	b289      	uxth	r1, r1
 800c93a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c93c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c93e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c940:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c942:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c944:	2900      	cmp	r1, #0
 800c946:	d1ec      	bne.n	800c922 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c948:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c94a:	4b5b      	ldr	r3, [pc, #364]	; (800cab8 <HAL_SPI_Transmit+0x23c>)
 800c94c:	4a5b      	ldr	r2, [pc, #364]	; (800cabc <HAL_SPI_Transmit+0x240>)
 800c94e:	681b      	ldr	r3, [r3, #0]
 800c950:	fba2 2303 	umull	r2, r3, r2, r3
 800c954:	0d5b      	lsrs	r3, r3, #21
 800c956:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c95a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c95e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c962:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c964:	d107      	bne.n	800c976 <HAL_SPI_Transmit+0xfa>
 800c966:	e098      	b.n	800ca9a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c968:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c96a:	6822      	ldr	r2, [r4, #0]
      count--;
 800c96c:	3b01      	subs	r3, #1
 800c96e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c970:	6893      	ldr	r3, [r2, #8]
 800c972:	061b      	lsls	r3, r3, #24
 800c974:	d502      	bpl.n	800c97c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c976:	9b01      	ldr	r3, [sp, #4]
 800c978:	2b00      	cmp	r3, #0
 800c97a:	d1f5      	bne.n	800c968 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c97c:	68a3      	ldr	r3, [r4, #8]
 800c97e:	b933      	cbnz	r3, 800c98e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c980:	6822      	ldr	r2, [r4, #0]
 800c982:	9300      	str	r3, [sp, #0]
 800c984:	68d3      	ldr	r3, [r2, #12]
 800c986:	9300      	str	r3, [sp, #0]
 800c988:	6893      	ldr	r3, [r2, #8]
 800c98a:	9300      	str	r3, [sp, #0]
 800c98c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c98e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c990:	3800      	subs	r0, #0
 800c992:	bf18      	it	ne
 800c994:	2001      	movne	r0, #1
error:
 800c996:	e789      	b.n	800c8ac <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c998:	2002      	movs	r0, #2
}
 800c99a:	b002      	add	sp, #8
 800c99c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c9a0:	6861      	ldr	r1, [r4, #4]
 800c9a2:	2900      	cmp	r1, #0
 800c9a4:	d176      	bne.n	800ca94 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9a6:	4643      	mov	r3, r8
 800c9a8:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c9ac:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9ae:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9b2:	3b01      	subs	r3, #1
 800c9b4:	b29b      	uxth	r3, r3
 800c9b6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9ba:	b29b      	uxth	r3, r3
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	d0c4      	beq.n	800c94a <HAL_SPI_Transmit+0xce>
 800c9c0:	1c6b      	adds	r3, r5, #1
 800c9c2:	d15e      	bne.n	800ca82 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9c4:	6883      	ldr	r3, [r0, #8]
 800c9c6:	079f      	lsls	r7, r3, #30
 800c9c8:	d50f      	bpl.n	800c9ea <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9ca:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9cc:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c9d0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c9d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9d4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9d6:	3b01      	subs	r3, #1
 800c9d8:	b29b      	uxth	r3, r3
 800c9da:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9de:	b29b      	uxth	r3, r3
 800c9e0:	2b00      	cmp	r3, #0
 800c9e2:	d0b1      	beq.n	800c948 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9e4:	6883      	ldr	r3, [r0, #8]
 800c9e6:	079f      	lsls	r7, r3, #30
 800c9e8:	d4ef      	bmi.n	800c9ca <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c9ea:	f7fc ffc5 	bl	8009978 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c9ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9f0:	b29b      	uxth	r3, r3
 800c9f2:	2b00      	cmp	r3, #0
 800c9f4:	d0a8      	beq.n	800c948 <HAL_SPI_Transmit+0xcc>
 800c9f6:	6820      	ldr	r0, [r4, #0]
 800c9f8:	e7e4      	b.n	800c9c4 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c9fa:	6803      	ldr	r3, [r0, #0]
 800c9fc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ca00:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800ca02:	6803      	ldr	r3, [r0, #0]
 800ca04:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800ca08:	6003      	str	r3, [r0, #0]
 800ca0a:	e771      	b.n	800c8f0 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ca0e:	7812      	ldrb	r2, [r2, #0]
 800ca10:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ca12:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca14:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca16:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca18:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ca1a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca1c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca1e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca22:	b29b      	uxth	r3, r3
 800ca24:	2b00      	cmp	r3, #0
 800ca26:	d08f      	beq.n	800c948 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca28:	6823      	ldr	r3, [r4, #0]
 800ca2a:	689a      	ldr	r2, [r3, #8]
 800ca2c:	0792      	lsls	r2, r2, #30
 800ca2e:	d4ed      	bmi.n	800ca0c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca30:	f7fc ffa2 	bl	8009978 <HAL_GetTick>
 800ca34:	1b80      	subs	r0, r0, r6
 800ca36:	42a8      	cmp	r0, r5
 800ca38:	d3f2      	bcc.n	800ca20 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ca3a:	2003      	movs	r0, #3
 800ca3c:	e736      	b.n	800c8ac <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca3e:	f898 3000 	ldrb.w	r3, [r8]
 800ca42:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ca44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca46:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca48:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca4a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ca4c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca4e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca50:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ca52:	e760      	b.n	800c916 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca54:	f7fc ff90 	bl	8009978 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ca58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca5a:	b29b      	uxth	r3, r3
 800ca5c:	2b00      	cmp	r3, #0
 800ca5e:	f47f af60 	bne.w	800c922 <HAL_SPI_Transmit+0xa6>
 800ca62:	e771      	b.n	800c948 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca64:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca66:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ca6a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ca6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca6e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca70:	3b01      	subs	r3, #1
 800ca72:	b29b      	uxth	r3, r3
 800ca74:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca76:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca78:	b29b      	uxth	r3, r3
 800ca7a:	2b00      	cmp	r3, #0
 800ca7c:	f43f af64 	beq.w	800c948 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca80:	6822      	ldr	r2, [r4, #0]
 800ca82:	6893      	ldr	r3, [r2, #8]
 800ca84:	0799      	lsls	r1, r3, #30
 800ca86:	d4ed      	bmi.n	800ca64 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca88:	f7fc ff76 	bl	8009978 <HAL_GetTick>
 800ca8c:	1b80      	subs	r0, r0, r6
 800ca8e:	42a8      	cmp	r0, r5
 800ca90:	d3f1      	bcc.n	800ca76 <HAL_SPI_Transmit+0x1fa>
 800ca92:	e7d2      	b.n	800ca3a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca94:	2f01      	cmp	r7, #1
 800ca96:	d18f      	bne.n	800c9b8 <HAL_SPI_Transmit+0x13c>
 800ca98:	e785      	b.n	800c9a6 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ca9a:	4633      	mov	r3, r6
 800ca9c:	462a      	mov	r2, r5
 800ca9e:	2180      	movs	r1, #128	; 0x80
 800caa0:	4620      	mov	r0, r4
 800caa2:	f7ff fdef 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800caa6:	2800      	cmp	r0, #0
 800caa8:	f43f af68 	beq.w	800c97c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800caac:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800caae:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cab0:	4313      	orrs	r3, r2
 800cab2:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cab4:	6562      	str	r2, [r4, #84]	; 0x54
 800cab6:	e761      	b.n	800c97c <HAL_SPI_Transmit+0x100>
 800cab8:	20000078 	.word	0x20000078
 800cabc:	165e9f81 	.word	0x165e9f81

0800cac0 <HAL_SPI_TransmitReceive>:
{
 800cac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cac4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cac6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800caca:	2801      	cmp	r0, #1
{
 800cacc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cace:	f000 80ac 	beq.w	800cc2a <HAL_SPI_TransmitReceive+0x16a>
 800cad2:	461e      	mov	r6, r3
 800cad4:	2301      	movs	r3, #1
 800cad6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cada:	4690      	mov	r8, r2
 800cadc:	460f      	mov	r7, r1
 800cade:	f7fc ff4b 	bl	8009978 <HAL_GetTick>
 800cae2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cae4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cae8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800caea:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800caec:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800caee:	d011      	beq.n	800cb14 <HAL_SPI_TransmitReceive+0x54>
 800caf0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800caf4:	d009      	beq.n	800cb0a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800caf6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800caf8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cafa:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cafc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cb00:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cb04:	b002      	add	sp, #8
 800cb06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cb0a:	68a1      	ldr	r1, [r4, #8]
 800cb0c:	2900      	cmp	r1, #0
 800cb0e:	d1f2      	bne.n	800caf6 <HAL_SPI_TransmitReceive+0x36>
 800cb10:	2a04      	cmp	r2, #4
 800cb12:	d1f0      	bne.n	800caf6 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cb14:	2f00      	cmp	r7, #0
 800cb16:	f000 808c 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x172>
 800cb1a:	f1b8 0f00 	cmp.w	r8, #0
 800cb1e:	f000 8088 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x172>
 800cb22:	2e00      	cmp	r6, #0
 800cb24:	f000 8085 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb28:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cb2c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb30:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cb32:	bf1c      	itt	ne
 800cb34:	2205      	movne	r2, #5
 800cb36:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb3a:	2200      	movs	r2, #0
 800cb3c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cb3e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb42:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cb44:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cb46:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb48:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cb4a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb4c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cb4e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cb50:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb52:	d403      	bmi.n	800cb5c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cb54:	6811      	ldr	r1, [r2, #0]
 800cb56:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cb5a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cb5c:	68e1      	ldr	r1, [r4, #12]
 800cb5e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cb62:	f000 809e 	beq.w	800cca2 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb66:	2b00      	cmp	r3, #0
 800cb68:	f000 8091 	beq.w	800cc8e <HAL_SPI_TransmitReceive+0x1ce>
 800cb6c:	2e01      	cmp	r6, #1
 800cb6e:	f000 808e 	beq.w	800cc8e <HAL_SPI_TransmitReceive+0x1ce>
 800cb72:	9b08      	ldr	r3, [sp, #32]
 800cb74:	3301      	adds	r3, #1
        txallowed = 1U;
 800cb76:	f04f 0601 	mov.w	r6, #1
 800cb7a:	d028      	beq.n	800cbce <HAL_SPI_TransmitReceive+0x10e>
 800cb7c:	e05b      	b.n	800cc36 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cb7e:	6821      	ldr	r1, [r4, #0]
 800cb80:	688b      	ldr	r3, [r1, #8]
 800cb82:	0798      	lsls	r0, r3, #30
 800cb84:	d50f      	bpl.n	800cba6 <HAL_SPI_TransmitReceive+0xe6>
 800cb86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb88:	b29b      	uxth	r3, r3
 800cb8a:	b163      	cbz	r3, 800cba6 <HAL_SPI_TransmitReceive+0xe6>
 800cb8c:	b15e      	cbz	r6, 800cba6 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cb8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb90:	781b      	ldrb	r3, [r3, #0]
 800cb92:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cb94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb96:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb98:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cb9a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cb9c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cb9e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cba0:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cba2:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cba4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cba6:	688a      	ldr	r2, [r1, #8]
 800cba8:	f012 0201 	ands.w	r2, r2, #1
 800cbac:	d00d      	beq.n	800cbca <HAL_SPI_TransmitReceive+0x10a>
 800cbae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbb0:	b29b      	uxth	r3, r3
 800cbb2:	b153      	cbz	r3, 800cbca <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cbb4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cbb6:	68c9      	ldr	r1, [r1, #12]
 800cbb8:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cbba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cbbc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbbe:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cbc0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cbc2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cbc4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbc6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cbc8:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cbca:	f7fc fed5 	bl	8009978 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cbce:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cbd0:	b292      	uxth	r2, r2
 800cbd2:	2a00      	cmp	r2, #0
 800cbd4:	d1d3      	bne.n	800cb7e <HAL_SPI_TransmitReceive+0xbe>
 800cbd6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbd8:	b29b      	uxth	r3, r3
 800cbda:	2b00      	cmp	r3, #0
 800cbdc:	d1cf      	bne.n	800cb7e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbde:	4b79      	ldr	r3, [pc, #484]	; (800cdc4 <HAL_SPI_TransmitReceive+0x304>)
 800cbe0:	4a79      	ldr	r2, [pc, #484]	; (800cdc8 <HAL_SPI_TransmitReceive+0x308>)
 800cbe2:	681b      	ldr	r3, [r3, #0]
 800cbe4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbe8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbea:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cbee:	0d5b      	lsrs	r3, r3, #21
 800cbf0:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbf4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbf8:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbfa:	d107      	bne.n	800cc0c <HAL_SPI_TransmitReceive+0x14c>
 800cbfc:	e0d2      	b.n	800cda4 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cbfe:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc00:	6822      	ldr	r2, [r4, #0]
      count--;
 800cc02:	3b01      	subs	r3, #1
 800cc04:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc06:	6893      	ldr	r3, [r2, #8]
 800cc08:	061b      	lsls	r3, r3, #24
 800cc0a:	d502      	bpl.n	800cc12 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cc0c:	9b01      	ldr	r3, [sp, #4]
 800cc0e:	2b00      	cmp	r3, #0
 800cc10:	d1f5      	bne.n	800cbfe <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cc12:	68a0      	ldr	r0, [r4, #8]
 800cc14:	2800      	cmp	r0, #0
 800cc16:	f040 8082 	bne.w	800cd1e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cc1a:	6823      	ldr	r3, [r4, #0]
 800cc1c:	9000      	str	r0, [sp, #0]
 800cc1e:	68da      	ldr	r2, [r3, #12]
 800cc20:	9200      	str	r2, [sp, #0]
 800cc22:	689b      	ldr	r3, [r3, #8]
 800cc24:	9300      	str	r3, [sp, #0]
 800cc26:	9b00      	ldr	r3, [sp, #0]
 800cc28:	e766      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cc2a:	2002      	movs	r0, #2
}
 800cc2c:	b002      	add	sp, #8
 800cc2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cc32:	2001      	movs	r0, #1
 800cc34:	e760      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc36:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc38:	b29b      	uxth	r3, r3
 800cc3a:	b91b      	cbnz	r3, 800cc44 <HAL_SPI_TransmitReceive+0x184>
 800cc3c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc3e:	b29b      	uxth	r3, r3
 800cc40:	2b00      	cmp	r3, #0
 800cc42:	d0cc      	beq.n	800cbde <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc44:	6822      	ldr	r2, [r4, #0]
 800cc46:	6893      	ldr	r3, [r2, #8]
 800cc48:	0799      	lsls	r1, r3, #30
 800cc4a:	d50f      	bpl.n	800cc6c <HAL_SPI_TransmitReceive+0x1ac>
 800cc4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc4e:	b29b      	uxth	r3, r3
 800cc50:	b163      	cbz	r3, 800cc6c <HAL_SPI_TransmitReceive+0x1ac>
 800cc52:	b15e      	cbz	r6, 800cc6c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cc54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc56:	781b      	ldrb	r3, [r3, #0]
 800cc58:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc5c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc5e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cc60:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc62:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cc64:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc66:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cc68:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cc6a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc6c:	6893      	ldr	r3, [r2, #8]
 800cc6e:	f013 0301 	ands.w	r3, r3, #1
 800cc72:	d004      	beq.n	800cc7e <HAL_SPI_TransmitReceive+0x1be>
 800cc74:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc76:	b289      	uxth	r1, r1
 800cc78:	2900      	cmp	r1, #0
 800cc7a:	f040 8087 	bne.w	800cd8c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cc7e:	f7fc fe7b 	bl	8009978 <HAL_GetTick>
 800cc82:	9b08      	ldr	r3, [sp, #32]
 800cc84:	1b40      	subs	r0, r0, r5
 800cc86:	4298      	cmp	r0, r3
 800cc88:	d3d5      	bcc.n	800cc36 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cc8a:	2003      	movs	r0, #3
 800cc8c:	e734      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc8e:	783b      	ldrb	r3, [r7, #0]
 800cc90:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc92:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc94:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc96:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc98:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cc9a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc9c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc9e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cca0:	e767      	b.n	800cb72 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cca2:	2b00      	cmp	r3, #0
 800cca4:	d13d      	bne.n	800cd22 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cca6:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ccaa:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ccac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccae:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ccb0:	3b01      	subs	r3, #1
 800ccb2:	b29b      	uxth	r3, r3
 800ccb4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ccb6:	9b08      	ldr	r3, [sp, #32]
 800ccb8:	3301      	adds	r3, #1
{
 800ccba:	f04f 0601 	mov.w	r6, #1
 800ccbe:	d025      	beq.n	800cd0c <HAL_SPI_TransmitReceive+0x24c>
 800ccc0:	e032      	b.n	800cd28 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ccc2:	6823      	ldr	r3, [r4, #0]
 800ccc4:	689a      	ldr	r2, [r3, #8]
 800ccc6:	0792      	lsls	r2, r2, #30
 800ccc8:	d50d      	bpl.n	800cce6 <HAL_SPI_TransmitReceive+0x226>
 800ccca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cccc:	b292      	uxth	r2, r2
 800ccce:	b152      	cbz	r2, 800cce6 <HAL_SPI_TransmitReceive+0x226>
 800ccd0:	b14e      	cbz	r6, 800cce6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccd2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ccd4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ccd8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ccda:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccdc:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ccde:	3a01      	subs	r2, #1
 800cce0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800cce2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cce4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cce6:	689a      	ldr	r2, [r3, #8]
 800cce8:	f012 0201 	ands.w	r2, r2, #1
 800ccec:	d00c      	beq.n	800cd08 <HAL_SPI_TransmitReceive+0x248>
 800ccee:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ccf0:	b289      	uxth	r1, r1
 800ccf2:	b149      	cbz	r1, 800cd08 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ccf4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ccf6:	68db      	ldr	r3, [r3, #12]
 800ccf8:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ccfc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ccfe:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd00:	3b01      	subs	r3, #1
 800cd02:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cd04:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cd06:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd08:	f7fc fe36 	bl	8009978 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd0e:	b29b      	uxth	r3, r3
 800cd10:	2b00      	cmp	r3, #0
 800cd12:	d1d6      	bne.n	800ccc2 <HAL_SPI_TransmitReceive+0x202>
 800cd14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd16:	b29b      	uxth	r3, r3
 800cd18:	2b00      	cmp	r3, #0
 800cd1a:	d1d2      	bne.n	800ccc2 <HAL_SPI_TransmitReceive+0x202>
 800cd1c:	e75f      	b.n	800cbde <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cd1e:	2000      	movs	r0, #0
 800cd20:	e6ea      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd22:	2e01      	cmp	r6, #1
 800cd24:	d1c7      	bne.n	800ccb6 <HAL_SPI_TransmitReceive+0x1f6>
 800cd26:	e7be      	b.n	800cca6 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd2a:	b29b      	uxth	r3, r3
 800cd2c:	b923      	cbnz	r3, 800cd38 <HAL_SPI_TransmitReceive+0x278>
 800cd2e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd30:	b29b      	uxth	r3, r3
 800cd32:	2b00      	cmp	r3, #0
 800cd34:	f43f af53 	beq.w	800cbde <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd38:	6822      	ldr	r2, [r4, #0]
 800cd3a:	6893      	ldr	r3, [r2, #8]
 800cd3c:	079f      	lsls	r7, r3, #30
 800cd3e:	d50d      	bpl.n	800cd5c <HAL_SPI_TransmitReceive+0x29c>
 800cd40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd42:	b29b      	uxth	r3, r3
 800cd44:	b153      	cbz	r3, 800cd5c <HAL_SPI_TransmitReceive+0x29c>
 800cd46:	b14e      	cbz	r6, 800cd5c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd48:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd4a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cd4e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd52:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd54:	3b01      	subs	r3, #1
 800cd56:	b29b      	uxth	r3, r3
 800cd58:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cd5a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd5c:	6893      	ldr	r3, [r2, #8]
 800cd5e:	f013 0301 	ands.w	r3, r3, #1
 800cd62:	d00c      	beq.n	800cd7e <HAL_SPI_TransmitReceive+0x2be>
 800cd64:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cd66:	b289      	uxth	r1, r1
 800cd68:	b149      	cbz	r1, 800cd7e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cd6a:	68d1      	ldr	r1, [r2, #12]
 800cd6c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cd6e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cd72:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cd74:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cd76:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd78:	3b01      	subs	r3, #1
 800cd7a:	b29b      	uxth	r3, r3
 800cd7c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd7e:	f7fc fdfb 	bl	8009978 <HAL_GetTick>
 800cd82:	9b08      	ldr	r3, [sp, #32]
 800cd84:	1b40      	subs	r0, r0, r5
 800cd86:	4298      	cmp	r0, r3
 800cd88:	d3ce      	bcc.n	800cd28 <HAL_SPI_TransmitReceive+0x268>
 800cd8a:	e77e      	b.n	800cc8a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cd8c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cd8e:	68d2      	ldr	r2, [r2, #12]
 800cd90:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cd92:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cd94:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd96:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cd98:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cd9a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cd9c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd9e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cda0:	461e      	mov	r6, r3
 800cda2:	e76c      	b.n	800cc7e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cda4:	9a08      	ldr	r2, [sp, #32]
 800cda6:	462b      	mov	r3, r5
 800cda8:	2180      	movs	r1, #128	; 0x80
 800cdaa:	4620      	mov	r0, r4
 800cdac:	f7ff fc6a 	bl	800c684 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cdb0:	2800      	cmp	r0, #0
 800cdb2:	f43f af2e 	beq.w	800cc12 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdb6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdb8:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdba:	4313      	orrs	r3, r2
 800cdbc:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800cdbe:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdc0:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800cdc2:	e699      	b.n	800caf8 <HAL_SPI_TransmitReceive+0x38>
 800cdc4:	20000078 	.word	0x20000078
 800cdc8:	165e9f81 	.word	0x165e9f81

0800cdcc <HAL_SPI_Receive>:
{
 800cdcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdd0:	6846      	ldr	r6, [r0, #4]
 800cdd2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cdd6:	b082      	sub	sp, #8
 800cdd8:	4604      	mov	r4, r0
 800cdda:	4690      	mov	r8, r2
 800cddc:	461d      	mov	r5, r3
 800cdde:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cde0:	d06e      	beq.n	800cec0 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cde2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cde6:	2b01      	cmp	r3, #1
 800cde8:	d076      	beq.n	800ced8 <HAL_SPI_Receive+0x10c>
 800cdea:	2301      	movs	r3, #1
 800cdec:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cdf0:	f7fc fdc2 	bl	8009978 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdf4:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cdf8:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cdfc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdfe:	fa5f f08c 	uxtb.w	r0, ip
 800ce02:	d009      	beq.n	800ce18 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ce04:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ce06:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ce08:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ce0a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ce0e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ce12:	b002      	add	sp, #8
 800ce14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ce18:	2f00      	cmp	r7, #0
 800ce1a:	d0f4      	beq.n	800ce06 <HAL_SPI_Receive+0x3a>
 800ce1c:	f1b8 0f00 	cmp.w	r8, #0
 800ce20:	d0f1      	beq.n	800ce06 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce22:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ce24:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce26:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ce2a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ce2c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce30:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ce34:	f04f 0104 	mov.w	r1, #4
 800ce38:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ce3c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce40:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ce42:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ce44:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ce46:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ce4a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ce4c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce4e:	d107      	bne.n	800ce60 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ce50:	6811      	ldr	r1, [r2, #0]
 800ce52:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ce56:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ce58:	6811      	ldr	r1, [r2, #0]
 800ce5a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ce5e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce60:	6811      	ldr	r1, [r2, #0]
 800ce62:	0648      	lsls	r0, r1, #25
 800ce64:	d403      	bmi.n	800ce6e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ce66:	6811      	ldr	r1, [r2, #0]
 800ce68:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ce6c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ce6e:	68e1      	ldr	r1, [r4, #12]
 800ce70:	2900      	cmp	r1, #0
 800ce72:	d054      	beq.n	800cf1e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ce74:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce76:	b289      	uxth	r1, r1
 800ce78:	b1a9      	cbz	r1, 800cea6 <HAL_SPI_Receive+0xda>
 800ce7a:	1c69      	adds	r1, r5, #1
 800ce7c:	d13e      	bne.n	800cefc <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce7e:	6893      	ldr	r3, [r2, #8]
 800ce80:	07db      	lsls	r3, r3, #31
 800ce82:	d544      	bpl.n	800cf0e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce84:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce86:	68d1      	ldr	r1, [r2, #12]
 800ce88:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ce8c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce90:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce92:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ce96:	fa1f fc8c 	uxth.w	ip, ip
 800ce9a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ce9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cea0:	b29b      	uxth	r3, r3
 800cea2:	2b00      	cmp	r3, #0
 800cea4:	d1eb      	bne.n	800ce7e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800cea6:	4632      	mov	r2, r6
 800cea8:	4629      	mov	r1, r5
 800ceaa:	4620      	mov	r0, r4
 800ceac:	f7ff fc48 	bl	800c740 <SPI_EndRxTransaction>
 800ceb0:	b108      	cbz	r0, 800ceb6 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ceb2:	2320      	movs	r3, #32
 800ceb4:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ceb6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ceb8:	3800      	subs	r0, #0
 800ceba:	bf18      	it	ne
 800cebc:	2001      	movne	r0, #1
error :
 800cebe:	e7a2      	b.n	800ce06 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cec0:	6883      	ldr	r3, [r0, #8]
 800cec2:	2b00      	cmp	r3, #0
 800cec4:	d18d      	bne.n	800cde2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cec6:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cec8:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ceca:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cecc:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ced0:	460a      	mov	r2, r1
 800ced2:	f7ff fdf5 	bl	800cac0 <HAL_SPI_TransmitReceive>
 800ced6:	e79c      	b.n	800ce12 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ced8:	2002      	movs	r0, #2
}
 800ceda:	b002      	add	sp, #8
 800cedc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cee0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cee2:	68db      	ldr	r3, [r3, #12]
 800cee4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800cee8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ceea:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ceec:	3b01      	subs	r3, #1
 800ceee:	b29b      	uxth	r3, r3
 800cef0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cef2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cef4:	b29b      	uxth	r3, r3
 800cef6:	2b00      	cmp	r3, #0
 800cef8:	d0d5      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cefa:	6823      	ldr	r3, [r4, #0]
 800cefc:	689a      	ldr	r2, [r3, #8]
 800cefe:	07d2      	lsls	r2, r2, #31
 800cf00:	d4ee      	bmi.n	800cee0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf02:	f7fc fd39 	bl	8009978 <HAL_GetTick>
 800cf06:	1b80      	subs	r0, r0, r6
 800cf08:	42a8      	cmp	r0, r5
 800cf0a:	d243      	bcs.n	800cf94 <HAL_SPI_Receive+0x1c8>
 800cf0c:	e7f1      	b.n	800cef2 <HAL_SPI_Receive+0x126>
 800cf0e:	f7fc fd33 	bl	8009978 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf14:	b29b      	uxth	r3, r3
 800cf16:	2b00      	cmp	r3, #0
 800cf18:	d0c5      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
 800cf1a:	6822      	ldr	r2, [r4, #0]
 800cf1c:	e7af      	b.n	800ce7e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cf1e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cf20:	b292      	uxth	r2, r2
 800cf22:	2a00      	cmp	r2, #0
 800cf24:	d0bf      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
 800cf26:	1c6f      	adds	r7, r5, #1
 800cf28:	d013      	beq.n	800cf52 <HAL_SPI_Receive+0x186>
 800cf2a:	e02b      	b.n	800cf84 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf2c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf2e:	7b1b      	ldrb	r3, [r3, #12]
 800cf30:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf32:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf36:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf38:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cf3c:	fa1f fc8c 	uxth.w	ip, ip
 800cf40:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf46:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cf48:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf4a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cf4c:	2b00      	cmp	r3, #0
 800cf4e:	d0aa      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf50:	6823      	ldr	r3, [r4, #0]
 800cf52:	689a      	ldr	r2, [r3, #8]
 800cf54:	07d0      	lsls	r0, r2, #31
 800cf56:	d4e9      	bmi.n	800cf2c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf58:	f7fc fd0e 	bl	8009978 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf5c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf5e:	b29b      	uxth	r3, r3
 800cf60:	2b00      	cmp	r3, #0
 800cf62:	d1f5      	bne.n	800cf50 <HAL_SPI_Receive+0x184>
 800cf64:	e79f      	b.n	800cea6 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf66:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf68:	7b1b      	ldrb	r3, [r3, #12]
 800cf6a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf6c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf6e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf70:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf72:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cf74:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf76:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf78:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf7a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf7c:	b29b      	uxth	r3, r3
 800cf7e:	2b00      	cmp	r3, #0
 800cf80:	d091      	beq.n	800cea6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf82:	6823      	ldr	r3, [r4, #0]
 800cf84:	689a      	ldr	r2, [r3, #8]
 800cf86:	07d1      	lsls	r1, r2, #31
 800cf88:	d4ed      	bmi.n	800cf66 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf8a:	f7fc fcf5 	bl	8009978 <HAL_GetTick>
 800cf8e:	1b80      	subs	r0, r0, r6
 800cf90:	42a8      	cmp	r0, r5
 800cf92:	d3f2      	bcc.n	800cf7a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cf94:	2003      	movs	r0, #3
 800cf96:	e736      	b.n	800ce06 <HAL_SPI_Receive+0x3a>

0800cf98 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cf98:	2800      	cmp	r0, #0
 800cf9a:	f000 8087 	beq.w	800d0ac <HAL_TIM_Base_Init+0x114>
{
 800cf9e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cfa0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cfa4:	4604      	mov	r4, r0
 800cfa6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cfaa:	2b00      	cmp	r3, #0
 800cfac:	d079      	beq.n	800d0a2 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cfae:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfb0:	493f      	ldr	r1, [pc, #252]	; (800d0b0 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cfb2:	2302      	movs	r3, #2
 800cfb4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfb8:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cfba:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfbc:	d05d      	beq.n	800d07a <HAL_TIM_Base_Init+0xe2>
 800cfbe:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800cfc2:	d031      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfc4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cfc8:	428a      	cmp	r2, r1
 800cfca:	d02d      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfcc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfd0:	428a      	cmp	r2, r1
 800cfd2:	d029      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfd4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfd8:	428a      	cmp	r2, r1
 800cfda:	d025      	beq.n	800d028 <HAL_TIM_Base_Init+0x90>
 800cfdc:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cfe0:	428a      	cmp	r2, r1
 800cfe2:	d04a      	beq.n	800d07a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cfe4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cfe8:	428a      	cmp	r2, r1
 800cfea:	d021      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800cfec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cff0:	428a      	cmp	r2, r1
 800cff2:	d01d      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800cff4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cff8:	428a      	cmp	r2, r1
 800cffa:	d019      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800cffc:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d000:	428a      	cmp	r2, r1
 800d002:	d015      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800d004:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d008:	428a      	cmp	r2, r1
 800d00a:	d011      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
 800d00c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d010:	428a      	cmp	r2, r1
 800d012:	d00d      	beq.n	800d030 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d014:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d016:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d018:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d01c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d01e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d020:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d022:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d024:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d026:	e010      	b.n	800d04a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d028:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d02a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d02e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d030:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d032:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d034:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d038:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d03a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d03e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d040:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d042:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d044:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d046:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d048:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d04a:	2301      	movs	r3, #1
 800d04c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d04e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d052:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d056:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d05a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d05e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d062:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d066:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d06a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d06e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d072:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d076:	2000      	movs	r0, #0
}
 800d078:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d07a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d07c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d07e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d082:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d084:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d088:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d08a:	69a1      	ldr	r1, [r4, #24]
 800d08c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d090:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d092:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d094:	68e3      	ldr	r3, [r4, #12]
 800d096:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d098:	6863      	ldr	r3, [r4, #4]
 800d09a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d09c:	6963      	ldr	r3, [r4, #20]
 800d09e:	6313      	str	r3, [r2, #48]	; 0x30
 800d0a0:	e7d3      	b.n	800d04a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d0a2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d0a6:	f7f4 fc53 	bl	8001950 <HAL_TIM_Base_MspInit>
 800d0aa:	e780      	b.n	800cfae <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d0ac:	2001      	movs	r0, #1
}
 800d0ae:	4770      	bx	lr
 800d0b0:	40010000 	.word	0x40010000

0800d0b4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d0b4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0b8:	2b01      	cmp	r3, #1
 800d0ba:	d12f      	bne.n	800d11c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0bc:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0be:	4919      	ldr	r1, [pc, #100]	; (800d124 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d0c0:	2202      	movs	r2, #2
 800d0c2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0c6:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0c8:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0ca:	f042 0201 	orr.w	r2, r2, #1
 800d0ce:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0d0:	d019      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0d2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d0d6:	d016      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0d8:	4a13      	ldr	r2, [pc, #76]	; (800d128 <HAL_TIM_Base_Start_IT+0x74>)
 800d0da:	4293      	cmp	r3, r2
 800d0dc:	d013      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0e2:	4293      	cmp	r3, r2
 800d0e4:	d00f      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0ea:	4293      	cmp	r3, r2
 800d0ec:	d00b      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0ee:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d0f2:	4293      	cmp	r3, r2
 800d0f4:	d007      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0f6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d0fa:	4293      	cmp	r3, r2
 800d0fc:	d003      	beq.n	800d106 <HAL_TIM_Base_Start_IT+0x52>
 800d0fe:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d102:	4293      	cmp	r3, r2
 800d104:	d104      	bne.n	800d110 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d106:	689a      	ldr	r2, [r3, #8]
 800d108:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d10c:	2a06      	cmp	r2, #6
 800d10e:	d007      	beq.n	800d120 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d110:	681a      	ldr	r2, [r3, #0]
 800d112:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d116:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d118:	601a      	str	r2, [r3, #0]
 800d11a:	4770      	bx	lr
    return HAL_ERROR;
 800d11c:	2001      	movs	r0, #1
 800d11e:	4770      	bx	lr
  return HAL_OK;
 800d120:	2000      	movs	r0, #0
}
 800d122:	4770      	bx	lr
 800d124:	40010000 	.word	0x40010000
 800d128:	40000400 	.word	0x40000400

0800d12c <HAL_TIM_PWM_MspInit>:
 800d12c:	4770      	bx	lr
 800d12e:	bf00      	nop

0800d130 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800d130:	2800      	cmp	r0, #0
 800d132:	f000 8087 	beq.w	800d244 <HAL_TIM_PWM_Init+0x114>
{
 800d136:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800d138:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d13c:	4604      	mov	r4, r0
 800d13e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d142:	2b00      	cmp	r3, #0
 800d144:	d079      	beq.n	800d23a <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d146:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d148:	493f      	ldr	r1, [pc, #252]	; (800d248 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d14a:	2302      	movs	r3, #2
 800d14c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d150:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d152:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d154:	d05d      	beq.n	800d212 <HAL_TIM_PWM_Init+0xe2>
 800d156:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d15a:	d031      	beq.n	800d1c0 <HAL_TIM_PWM_Init+0x90>
 800d15c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d160:	428a      	cmp	r2, r1
 800d162:	d02d      	beq.n	800d1c0 <HAL_TIM_PWM_Init+0x90>
 800d164:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d168:	428a      	cmp	r2, r1
 800d16a:	d029      	beq.n	800d1c0 <HAL_TIM_PWM_Init+0x90>
 800d16c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d170:	428a      	cmp	r2, r1
 800d172:	d025      	beq.n	800d1c0 <HAL_TIM_PWM_Init+0x90>
 800d174:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d178:	428a      	cmp	r2, r1
 800d17a:	d04a      	beq.n	800d212 <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d17c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d180:	428a      	cmp	r2, r1
 800d182:	d021      	beq.n	800d1c8 <HAL_TIM_PWM_Init+0x98>
 800d184:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d188:	428a      	cmp	r2, r1
 800d18a:	d01d      	beq.n	800d1c8 <HAL_TIM_PWM_Init+0x98>
 800d18c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d190:	428a      	cmp	r2, r1
 800d192:	d019      	beq.n	800d1c8 <HAL_TIM_PWM_Init+0x98>
 800d194:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d198:	428a      	cmp	r2, r1
 800d19a:	d015      	beq.n	800d1c8 <HAL_TIM_PWM_Init+0x98>
 800d19c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1a0:	428a      	cmp	r2, r1
 800d1a2:	d011      	beq.n	800d1c8 <HAL_TIM_PWM_Init+0x98>
 800d1a4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1a8:	428a      	cmp	r2, r1
 800d1aa:	d00d      	beq.n	800d1c8 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1ac:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1ae:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d1b4:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d1b6:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800d1b8:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1ba:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d1bc:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d1be:	e010      	b.n	800d1e2 <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d1c0:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d1c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d1c6:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1c8:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1ca:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d1cc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1d0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1d2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1d6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1d8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d1da:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d1dc:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1de:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d1e0:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800d1e2:	2301      	movs	r3, #1
 800d1e4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d1e6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d1ea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d1ee:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d1f2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d1f6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d1fa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d1fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d202:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d206:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d20a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d20e:	2000      	movs	r0, #0
}
 800d210:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d212:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d214:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d216:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d21a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d21c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d220:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d222:	69a1      	ldr	r1, [r4, #24]
 800d224:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d228:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d22a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d22c:	68e3      	ldr	r3, [r4, #12]
 800d22e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d230:	6863      	ldr	r3, [r4, #4]
 800d232:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d234:	6963      	ldr	r3, [r4, #20]
 800d236:	6313      	str	r3, [r2, #48]	; 0x30
 800d238:	e7d3      	b.n	800d1e2 <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d23a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800d23e:	f7ff ff75 	bl	800d12c <HAL_TIM_PWM_MspInit>
 800d242:	e780      	b.n	800d146 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800d244:	2001      	movs	r0, #1
}
 800d246:	4770      	bx	lr
 800d248:	40010000 	.word	0x40010000

0800d24c <HAL_TIM_PWM_Start>:
 800d24c:	2900      	cmp	r1, #0
 800d24e:	d13c      	bne.n	800d2ca <HAL_TIM_PWM_Start+0x7e>
 800d250:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800d254:	2b01      	cmp	r3, #1
 800d256:	d140      	bne.n	800d2da <HAL_TIM_PWM_Start+0x8e>
 800d258:	2302      	movs	r3, #2
 800d25a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800d25e:	6803      	ldr	r3, [r0, #0]
 800d260:	f001 011f 	and.w	r1, r1, #31
 800d264:	6a18      	ldr	r0, [r3, #32]
 800d266:	2201      	movs	r2, #1
 800d268:	408a      	lsls	r2, r1
 800d26a:	ea20 0002 	bic.w	r0, r0, r2
 800d26e:	6218      	str	r0, [r3, #32]
 800d270:	6a18      	ldr	r0, [r3, #32]
 800d272:	492c      	ldr	r1, [pc, #176]	; (800d324 <HAL_TIM_PWM_Start+0xd8>)
 800d274:	4302      	orrs	r2, r0
 800d276:	428b      	cmp	r3, r1
 800d278:	621a      	str	r2, [r3, #32]
 800d27a:	d038      	beq.n	800d2ee <HAL_TIM_PWM_Start+0xa2>
 800d27c:	4a2a      	ldr	r2, [pc, #168]	; (800d328 <HAL_TIM_PWM_Start+0xdc>)
 800d27e:	4293      	cmp	r3, r2
 800d280:	d035      	beq.n	800d2ee <HAL_TIM_PWM_Start+0xa2>
 800d282:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d286:	d015      	beq.n	800d2b4 <HAL_TIM_PWM_Start+0x68>
 800d288:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d28c:	428b      	cmp	r3, r1
 800d28e:	d011      	beq.n	800d2b4 <HAL_TIM_PWM_Start+0x68>
 800d290:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d294:	428b      	cmp	r3, r1
 800d296:	d00d      	beq.n	800d2b4 <HAL_TIM_PWM_Start+0x68>
 800d298:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d29c:	428b      	cmp	r3, r1
 800d29e:	d009      	beq.n	800d2b4 <HAL_TIM_PWM_Start+0x68>
 800d2a0:	4293      	cmp	r3, r2
 800d2a2:	d007      	beq.n	800d2b4 <HAL_TIM_PWM_Start+0x68>
 800d2a4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d2a8:	4293      	cmp	r3, r2
 800d2aa:	d003      	beq.n	800d2b4 <HAL_TIM_PWM_Start+0x68>
 800d2ac:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d2b0:	4293      	cmp	r3, r2
 800d2b2:	d104      	bne.n	800d2be <HAL_TIM_PWM_Start+0x72>
 800d2b4:	689a      	ldr	r2, [r3, #8]
 800d2b6:	f002 0207 	and.w	r2, r2, #7
 800d2ba:	2a06      	cmp	r2, #6
 800d2bc:	d020      	beq.n	800d300 <HAL_TIM_PWM_Start+0xb4>
 800d2be:	681a      	ldr	r2, [r3, #0]
 800d2c0:	f042 0201 	orr.w	r2, r2, #1
 800d2c4:	2000      	movs	r0, #0
 800d2c6:	601a      	str	r2, [r3, #0]
 800d2c8:	4770      	bx	lr
 800d2ca:	2904      	cmp	r1, #4
 800d2cc:	d022      	beq.n	800d314 <HAL_TIM_PWM_Start+0xc8>
 800d2ce:	2908      	cmp	r1, #8
 800d2d0:	d018      	beq.n	800d304 <HAL_TIM_PWM_Start+0xb8>
 800d2d2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800d2d6:	2b01      	cmp	r3, #1
 800d2d8:	d001      	beq.n	800d2de <HAL_TIM_PWM_Start+0x92>
 800d2da:	2001      	movs	r0, #1
 800d2dc:	4770      	bx	lr
 800d2de:	2904      	cmp	r1, #4
 800d2e0:	d01c      	beq.n	800d31c <HAL_TIM_PWM_Start+0xd0>
 800d2e2:	2908      	cmp	r1, #8
 800d2e4:	d012      	beq.n	800d30c <HAL_TIM_PWM_Start+0xc0>
 800d2e6:	2302      	movs	r3, #2
 800d2e8:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800d2ec:	e7b7      	b.n	800d25e <HAL_TIM_PWM_Start+0x12>
 800d2ee:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d2f0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800d2f4:	645a      	str	r2, [r3, #68]	; 0x44
 800d2f6:	689a      	ldr	r2, [r3, #8]
 800d2f8:	f002 0207 	and.w	r2, r2, #7
 800d2fc:	2a06      	cmp	r2, #6
 800d2fe:	d1de      	bne.n	800d2be <HAL_TIM_PWM_Start+0x72>
 800d300:	2000      	movs	r0, #0
 800d302:	4770      	bx	lr
 800d304:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800d308:	2b01      	cmp	r3, #1
 800d30a:	d1e6      	bne.n	800d2da <HAL_TIM_PWM_Start+0x8e>
 800d30c:	2302      	movs	r3, #2
 800d30e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d312:	e7a4      	b.n	800d25e <HAL_TIM_PWM_Start+0x12>
 800d314:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800d318:	2b01      	cmp	r3, #1
 800d31a:	d1de      	bne.n	800d2da <HAL_TIM_PWM_Start+0x8e>
 800d31c:	2302      	movs	r3, #2
 800d31e:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800d322:	e79c      	b.n	800d25e <HAL_TIM_PWM_Start+0x12>
 800d324:	40010000 	.word	0x40010000
 800d328:	40010400 	.word	0x40010400

0800d32c <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800d32c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d330:	2b01      	cmp	r3, #1
 800d332:	f000 80d2 	beq.w	800d4da <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800d336:	2301      	movs	r3, #1
{
 800d338:	b570      	push	{r4, r5, r6, lr}
 800d33a:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800d33c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800d340:	2a0c      	cmp	r2, #12
 800d342:	d808      	bhi.n	800d356 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800d344:	e8df f002 	tbb	[pc, r2]
 800d348:	0707073e 	.word	0x0707073e
 800d34c:	0707076b 	.word	0x0707076b
 800d350:	0707079b 	.word	0x0707079b
 800d354:	0c          	.byte	0x0c
 800d355:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800d356:	2300      	movs	r3, #0
 800d358:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800d35c:	2001      	movs	r0, #1
}
 800d35e:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800d360:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d362:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800d364:	6a1a      	ldr	r2, [r3, #32]
 800d366:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800d36a:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d36c:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d36e:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d370:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800d372:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d376:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d37a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800d37c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d380:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d384:	4d70      	ldr	r5, [pc, #448]	; (800d548 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d386:	42ab      	cmp	r3, r5
 800d388:	f000 80c8 	beq.w	800d51c <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800d38c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d390:	42ab      	cmp	r3, r5
 800d392:	f000 80c3 	beq.w	800d51c <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d396:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800d398:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800d39a:	6848      	ldr	r0, [r1, #4]
 800d39c:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d39e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d3a0:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d3a2:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d3a4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d3a8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800d3aa:	69da      	ldr	r2, [r3, #28]
 800d3ac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3b0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d3b2:	69da      	ldr	r2, [r3, #28]
 800d3b4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d3b8:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d3ba:	2300      	movs	r3, #0
 800d3bc:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d3c0:	2000      	movs	r0, #0
}
 800d3c2:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800d3c4:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d3c6:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d3c8:	6a1a      	ldr	r2, [r3, #32]
 800d3ca:	f022 0201 	bic.w	r2, r2, #1
 800d3ce:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d3d0:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d3d2:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d3d4:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800d3d6:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d3da:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800d3dc:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800d3de:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800d3e2:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800d3e4:	4d58      	ldr	r5, [pc, #352]	; (800d548 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d3e6:	42ab      	cmp	r3, r5
 800d3e8:	d079      	beq.n	800d4de <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800d3ea:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d3ee:	42ab      	cmp	r3, r5
 800d3f0:	d075      	beq.n	800d4de <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800d3f2:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d3f4:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800d3f6:	6848      	ldr	r0, [r1, #4]
 800d3f8:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800d3fa:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d3fc:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d3fe:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d400:	f042 0208 	orr.w	r2, r2, #8
 800d404:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800d406:	699a      	ldr	r2, [r3, #24]
 800d408:	f022 0204 	bic.w	r2, r2, #4
 800d40c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d40e:	699a      	ldr	r2, [r3, #24]
 800d410:	430a      	orrs	r2, r1
 800d412:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d414:	2300      	movs	r3, #0
 800d416:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d41a:	2000      	movs	r0, #0
}
 800d41c:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800d41e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d420:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d422:	6a1a      	ldr	r2, [r3, #32]
 800d424:	f022 0210 	bic.w	r2, r2, #16
 800d428:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d42a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d42c:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d42e:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800d430:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d434:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d438:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800d43a:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d43e:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800d442:	4d41      	ldr	r5, [pc, #260]	; (800d548 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d444:	42ab      	cmp	r3, r5
 800d446:	d059      	beq.n	800d4fc <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800d448:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d44c:	42ab      	cmp	r3, r5
 800d44e:	d055      	beq.n	800d4fc <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800d450:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d452:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800d454:	6848      	ldr	r0, [r1, #4]
 800d456:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800d458:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d45a:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d45c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d45e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d462:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800d464:	699a      	ldr	r2, [r3, #24]
 800d466:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d46a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d46c:	699a      	ldr	r2, [r3, #24]
 800d46e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d472:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d474:	2300      	movs	r3, #0
 800d476:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d47a:	2000      	movs	r0, #0
}
 800d47c:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800d47e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d480:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800d482:	6a1a      	ldr	r2, [r3, #32]
 800d484:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d488:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d48a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d48c:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d48e:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800d490:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d494:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d496:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800d498:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d49c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800d4a0:	4d29      	ldr	r5, [pc, #164]	; (800d548 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d4a2:	42ab      	cmp	r3, r5
 800d4a4:	d040      	beq.n	800d528 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800d4a6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d4aa:	42ab      	cmp	r3, r5
 800d4ac:	d03c      	beq.n	800d528 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800d4ae:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800d4b0:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800d4b2:	6848      	ldr	r0, [r1, #4]
 800d4b4:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800d4b6:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d4b8:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d4ba:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d4bc:	f042 0208 	orr.w	r2, r2, #8
 800d4c0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800d4c2:	69da      	ldr	r2, [r3, #28]
 800d4c4:	f022 0204 	bic.w	r2, r2, #4
 800d4c8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d4ca:	69da      	ldr	r2, [r3, #28]
 800d4cc:	430a      	orrs	r2, r1
 800d4ce:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d4d0:	2300      	movs	r3, #0
 800d4d2:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d4d6:	2000      	movs	r0, #0
}
 800d4d8:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800d4da:	2002      	movs	r0, #2
}
 800d4dc:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800d4de:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800d4e0:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800d4e4:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4e6:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800d4ea:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4ee:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800d4f2:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4f6:	ea4e 0404 	orr.w	r4, lr, r4
 800d4fa:	e77a      	b.n	800d3f2 <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d4fc:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800d4fe:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d502:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d506:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800d50a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d50e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800d512:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d516:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800d51a:	e799      	b.n	800d450 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d51c:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800d51e:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d522:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800d526:	e736      	b.n	800d396 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d528:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800d52a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d52e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d532:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800d536:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d53a:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800d53e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d542:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800d546:	e7b2      	b.n	800d4ae <HAL_TIM_PWM_ConfigChannel+0x182>
 800d548:	40010000 	.word	0x40010000

0800d54c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800d54c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d550:	2b01      	cmp	r3, #1
 800d552:	d075      	beq.n	800d640 <HAL_TIM_ConfigClockSource+0xf4>
 800d554:	4602      	mov	r2, r0
{
 800d556:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d558:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800d55a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d55c:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d560:	2001      	movs	r0, #1
 800d562:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d566:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d568:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800d56c:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800d570:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800d572:	680b      	ldr	r3, [r1, #0]
 800d574:	2b60      	cmp	r3, #96	; 0x60
 800d576:	d065      	beq.n	800d644 <HAL_TIM_ConfigClockSource+0xf8>
 800d578:	d824      	bhi.n	800d5c4 <HAL_TIM_ConfigClockSource+0x78>
 800d57a:	2b40      	cmp	r3, #64	; 0x40
 800d57c:	d07c      	beq.n	800d678 <HAL_TIM_ConfigClockSource+0x12c>
 800d57e:	d94b      	bls.n	800d618 <HAL_TIM_ConfigClockSource+0xcc>
 800d580:	2b50      	cmp	r3, #80	; 0x50
 800d582:	d117      	bne.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d584:	684b      	ldr	r3, [r1, #4]
 800d586:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800d588:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d58a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d58e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d590:	6a23      	ldr	r3, [r4, #32]
 800d592:	f023 0301 	bic.w	r3, r3, #1
 800d596:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d598:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d59a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d59e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800d5a2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d5a4:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800d5a6:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800d5a8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d5ac:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800d5b0:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d5b2:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800d5b4:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800d5b6:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d5b8:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d5bc:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800d5c0:	bc30      	pop	{r4, r5}
 800d5c2:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800d5c4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d5c8:	d038      	beq.n	800d63c <HAL_TIM_ConfigClockSource+0xf0>
 800d5ca:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800d5ce:	d110      	bne.n	800d5f2 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5d0:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d5d4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5d6:	432b      	orrs	r3, r5
 800d5d8:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d5da:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5de:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d5e2:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d5e4:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d5e6:	68a3      	ldr	r3, [r4, #8]
 800d5e8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800d5ec:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d5ee:	60a3      	str	r3, [r4, #8]
      break;
 800d5f0:	e7e0      	b.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d5f2:	2b70      	cmp	r3, #112	; 0x70
 800d5f4:	d1de      	bne.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5f6:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d5fa:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5fc:	432b      	orrs	r3, r5
 800d5fe:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d600:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d604:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d608:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800d60a:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800d60c:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800d60e:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800d612:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800d614:	60a3      	str	r3, [r4, #8]
      break;
 800d616:	e7cd      	b.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d618:	2b20      	cmp	r3, #32
 800d61a:	d002      	beq.n	800d622 <HAL_TIM_ConfigClockSource+0xd6>
 800d61c:	d90a      	bls.n	800d634 <HAL_TIM_ConfigClockSource+0xe8>
 800d61e:	2b30      	cmp	r3, #48	; 0x30
 800d620:	d1c8      	bne.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800d622:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d624:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d628:	430b      	orrs	r3, r1
 800d62a:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800d62e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d630:	60a3      	str	r3, [r4, #8]
}
 800d632:	e7bf      	b.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d634:	f033 0110 	bics.w	r1, r3, #16
 800d638:	d1bc      	bne.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
 800d63a:	e7f2      	b.n	800d622 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800d63c:	2000      	movs	r0, #0
 800d63e:	e7b9      	b.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800d640:	2002      	movs	r0, #2
}
 800d642:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d644:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d646:	6848      	ldr	r0, [r1, #4]
 800d648:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d64a:	f023 0310 	bic.w	r3, r3, #16
 800d64e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d650:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d652:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d654:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d658:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800d65c:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d660:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800d664:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d666:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d668:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d66a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d66e:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800d672:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d674:	60a3      	str	r3, [r4, #8]
}
 800d676:	e79d      	b.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d678:	684b      	ldr	r3, [r1, #4]
 800d67a:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800d67c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d67e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d682:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d684:	6a23      	ldr	r3, [r4, #32]
 800d686:	f023 0301 	bic.w	r3, r3, #1
 800d68a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d68c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d68e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d692:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d696:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d698:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d69a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d69c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d6a0:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800d6a4:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d6a6:	60a3      	str	r3, [r4, #8]
}
 800d6a8:	e784      	b.n	800d5b4 <HAL_TIM_ConfigClockSource+0x68>
 800d6aa:	bf00      	nop

0800d6ac <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800d6ac:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800d6b0:	2a01      	cmp	r2, #1
 800d6b2:	d050      	beq.n	800d756 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800d6b4:	4603      	mov	r3, r0
{
 800d6b6:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d6b8:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800d6ba:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d6bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d6c0:	2001      	movs	r0, #1
 800d6c2:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d6c6:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d6c8:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d6ca:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d6cc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d6d0:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800d6d2:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d6d6:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800d6d8:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800d6da:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800d6dc:	d060      	beq.n	800d7a0 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800d6de:	d90f      	bls.n	800d700 <HAL_TIM_SlaveConfigSynchro+0x54>
 800d6e0:	2860      	cmp	r0, #96	; 0x60
 800d6e2:	d03a      	beq.n	800d75a <HAL_TIM_SlaveConfigSynchro+0xae>
 800d6e4:	2870      	cmp	r0, #112	; 0x70
 800d6e6:	d10e      	bne.n	800d706 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6e8:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800d6ec:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6ee:	432a      	orrs	r2, r5
 800d6f0:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d6f2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6f6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d6fa:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d6fc:	60a2      	str	r2, [r4, #8]
 800d6fe:	e00f      	b.n	800d720 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d700:	2840      	cmp	r0, #64	; 0x40
 800d702:	d03d      	beq.n	800d780 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d704:	d907      	bls.n	800d716 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d706:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d708:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d70a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d70e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d712:	bc30      	pop	{r4, r5}
 800d714:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d716:	2820      	cmp	r0, #32
 800d718:	d002      	beq.n	800d720 <HAL_TIM_SlaveConfigSynchro+0x74>
 800d71a:	d912      	bls.n	800d742 <HAL_TIM_SlaveConfigSynchro+0x96>
 800d71c:	2830      	cmp	r0, #48	; 0x30
 800d71e:	d1f2      	bne.n	800d706 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d720:	68e2      	ldr	r2, [r4, #12]
 800d722:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d726:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d728:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d72a:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d72c:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d72e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d732:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d734:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d738:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d73c:	4608      	mov	r0, r1
}
 800d73e:	bc30      	pop	{r4, r5}
 800d740:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d742:	f030 0210 	bics.w	r2, r0, #16
 800d746:	d0eb      	beq.n	800d720 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d748:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d74a:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d74c:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d750:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d754:	e7dd      	b.n	800d712 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d756:	2002      	movs	r0, #2
}
 800d758:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d75a:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d75c:	6888      	ldr	r0, [r1, #8]
 800d75e:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d760:	f022 0210 	bic.w	r2, r2, #16
 800d764:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d766:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d768:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d76a:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d76e:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d772:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d776:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d77a:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d77c:	6222      	str	r2, [r4, #32]
 800d77e:	e7cf      	b.n	800d720 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d780:	2d05      	cmp	r5, #5
 800d782:	d0c0      	beq.n	800d706 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d784:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d786:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d788:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d78a:	f022 0201 	bic.w	r2, r2, #1
 800d78e:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d790:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d792:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d796:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d79a:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d79c:	6220      	str	r0, [r4, #32]
      break;
 800d79e:	e7bf      	b.n	800d720 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d7a0:	688a      	ldr	r2, [r1, #8]
 800d7a2:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d7a4:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d7a6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d7aa:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d7ac:	6a22      	ldr	r2, [r4, #32]
 800d7ae:	f022 0201 	bic.w	r2, r2, #1
 800d7b2:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d7b4:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d7b6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d7ba:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d7be:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d7c0:	6221      	str	r1, [r4, #32]
 800d7c2:	e7ad      	b.n	800d720 <HAL_TIM_SlaveConfigSynchro+0x74>

0800d7c4 <HAL_TIM_OC_DelayElapsedCallback>:
 800d7c4:	4770      	bx	lr
 800d7c6:	bf00      	nop

0800d7c8 <HAL_TIM_IC_CaptureCallback>:
 800d7c8:	4770      	bx	lr
 800d7ca:	bf00      	nop

0800d7cc <HAL_TIM_PWM_PulseFinishedCallback>:
 800d7cc:	4770      	bx	lr
 800d7ce:	bf00      	nop

0800d7d0 <HAL_TIM_TriggerCallback>:
 800d7d0:	4770      	bx	lr
 800d7d2:	bf00      	nop

0800d7d4 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7d4:	6803      	ldr	r3, [r0, #0]
 800d7d6:	691a      	ldr	r2, [r3, #16]
 800d7d8:	0791      	lsls	r1, r2, #30
{
 800d7da:	b510      	push	{r4, lr}
 800d7dc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7de:	d502      	bpl.n	800d7e6 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d7e0:	68da      	ldr	r2, [r3, #12]
 800d7e2:	0792      	lsls	r2, r2, #30
 800d7e4:	d45f      	bmi.n	800d8a6 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d7e6:	691a      	ldr	r2, [r3, #16]
 800d7e8:	0750      	lsls	r0, r2, #29
 800d7ea:	d502      	bpl.n	800d7f2 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d7ec:	68da      	ldr	r2, [r3, #12]
 800d7ee:	0751      	lsls	r1, r2, #29
 800d7f0:	d446      	bmi.n	800d880 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d7f2:	691a      	ldr	r2, [r3, #16]
 800d7f4:	0712      	lsls	r2, r2, #28
 800d7f6:	d502      	bpl.n	800d7fe <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d7f8:	68da      	ldr	r2, [r3, #12]
 800d7fa:	0710      	lsls	r0, r2, #28
 800d7fc:	d42e      	bmi.n	800d85c <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d7fe:	691a      	ldr	r2, [r3, #16]
 800d800:	06d2      	lsls	r2, r2, #27
 800d802:	d502      	bpl.n	800d80a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d804:	68da      	ldr	r2, [r3, #12]
 800d806:	06d0      	lsls	r0, r2, #27
 800d808:	d418      	bmi.n	800d83c <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d80a:	691a      	ldr	r2, [r3, #16]
 800d80c:	07d1      	lsls	r1, r2, #31
 800d80e:	d502      	bpl.n	800d816 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d810:	68da      	ldr	r2, [r3, #12]
 800d812:	07d2      	lsls	r2, r2, #31
 800d814:	d45d      	bmi.n	800d8d2 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d816:	691a      	ldr	r2, [r3, #16]
 800d818:	0610      	lsls	r0, r2, #24
 800d81a:	d502      	bpl.n	800d822 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d81c:	68da      	ldr	r2, [r3, #12]
 800d81e:	0611      	lsls	r1, r2, #24
 800d820:	d45f      	bmi.n	800d8e2 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d822:	691a      	ldr	r2, [r3, #16]
 800d824:	0652      	lsls	r2, r2, #25
 800d826:	d502      	bpl.n	800d82e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d828:	68da      	ldr	r2, [r3, #12]
 800d82a:	0650      	lsls	r0, r2, #25
 800d82c:	d461      	bmi.n	800d8f2 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d82e:	691a      	ldr	r2, [r3, #16]
 800d830:	0691      	lsls	r1, r2, #26
 800d832:	d502      	bpl.n	800d83a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d834:	68da      	ldr	r2, [r3, #12]
 800d836:	0692      	lsls	r2, r2, #26
 800d838:	d443      	bmi.n	800d8c2 <HAL_TIM_IRQHandler+0xee>
}
 800d83a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d83c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d840:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d842:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d844:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d846:	69db      	ldr	r3, [r3, #28]
 800d848:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d84c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d84e:	d064      	beq.n	800d91a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d850:	f7ff ffba 	bl	800d7c8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d854:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d856:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d858:	7722      	strb	r2, [r4, #28]
 800d85a:	e7d6      	b.n	800d80a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d85c:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d860:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d862:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d864:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d866:	69db      	ldr	r3, [r3, #28]
 800d868:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d86a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d86c:	d152      	bne.n	800d914 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d86e:	f7ff ffa9 	bl	800d7c4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d872:	4620      	mov	r0, r4
 800d874:	f7ff ffaa 	bl	800d7cc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d878:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d87a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d87c:	7722      	strb	r2, [r4, #28]
 800d87e:	e7be      	b.n	800d7fe <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d880:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d884:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d886:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d888:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d88a:	699b      	ldr	r3, [r3, #24]
 800d88c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d890:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d892:	d13c      	bne.n	800d90e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d894:	f7ff ff96 	bl	800d7c4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d898:	4620      	mov	r0, r4
 800d89a:	f7ff ff97 	bl	800d7cc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d89e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d8a0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8a2:	7722      	strb	r2, [r4, #28]
 800d8a4:	e7a5      	b.n	800d7f2 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d8a6:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d8aa:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d8ac:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d8ae:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d8b0:	699b      	ldr	r3, [r3, #24]
 800d8b2:	079b      	lsls	r3, r3, #30
 800d8b4:	d025      	beq.n	800d902 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d8b6:	f7ff ff87 	bl	800d7c8 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8ba:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d8bc:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8be:	7722      	strb	r2, [r4, #28]
 800d8c0:	e791      	b.n	800d7e6 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8c2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d8c6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8c8:	611a      	str	r2, [r3, #16]
}
 800d8ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d8ce:	f000 b86b 	b.w	800d9a8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d8d2:	f06f 0201 	mvn.w	r2, #1
 800d8d6:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d8d8:	4620      	mov	r0, r4
 800d8da:	f7f3 fd19 	bl	8001310 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d8de:	6823      	ldr	r3, [r4, #0]
 800d8e0:	e799      	b.n	800d816 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d8e2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d8e6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d8e8:	4620      	mov	r0, r4
 800d8ea:	f000 f85f 	bl	800d9ac <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d8ee:	6823      	ldr	r3, [r4, #0]
 800d8f0:	e797      	b.n	800d822 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d8f2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d8f6:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d8f8:	4620      	mov	r0, r4
 800d8fa:	f7ff ff69 	bl	800d7d0 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d8fe:	6823      	ldr	r3, [r4, #0]
 800d900:	e795      	b.n	800d82e <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d902:	f7ff ff5f 	bl	800d7c4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d906:	4620      	mov	r0, r4
 800d908:	f7ff ff60 	bl	800d7cc <HAL_TIM_PWM_PulseFinishedCallback>
 800d90c:	e7d5      	b.n	800d8ba <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d90e:	f7ff ff5b 	bl	800d7c8 <HAL_TIM_IC_CaptureCallback>
 800d912:	e7c4      	b.n	800d89e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d914:	f7ff ff58 	bl	800d7c8 <HAL_TIM_IC_CaptureCallback>
 800d918:	e7ae      	b.n	800d878 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d91a:	f7ff ff53 	bl	800d7c4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d91e:	4620      	mov	r0, r4
 800d920:	f7ff ff54 	bl	800d7cc <HAL_TIM_PWM_PulseFinishedCallback>
 800d924:	e796      	b.n	800d854 <HAL_TIM_IRQHandler+0x80>
 800d926:	bf00      	nop

0800d928 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d928:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d92c:	2b01      	cmp	r3, #1
 800d92e:	d037      	beq.n	800d9a0 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d930:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d932:	2202      	movs	r2, #2
{
 800d934:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d936:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d93a:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d93c:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d93e:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d940:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d944:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d946:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d948:	4a16      	ldr	r2, [pc, #88]	; (800d9a4 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d94a:	4293      	cmp	r3, r2
 800d94c:	d01a      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d94e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d952:	d017      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d954:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d958:	4293      	cmp	r3, r2
 800d95a:	d013      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d95c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d960:	4293      	cmp	r3, r2
 800d962:	d00f      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d964:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d968:	4293      	cmp	r3, r2
 800d96a:	d00b      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d96c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d970:	4293      	cmp	r3, r2
 800d972:	d007      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d974:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d978:	4293      	cmp	r3, r2
 800d97a:	d003      	beq.n	800d984 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d97c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d980:	4293      	cmp	r3, r2
 800d982:	d104      	bne.n	800d98e <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d984:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d986:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d98a:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d98c:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d98e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d990:	2201      	movs	r2, #1
 800d992:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d996:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d99a:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d99c:	4618      	mov	r0, r3
}
 800d99e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d9a0:	2002      	movs	r0, #2
}
 800d9a2:	4770      	bx	lr
 800d9a4:	40010000 	.word	0x40010000

0800d9a8 <HAL_TIMEx_CommutCallback>:
 800d9a8:	4770      	bx	lr
 800d9aa:	bf00      	nop

0800d9ac <HAL_TIMEx_BreakCallback>:
 800d9ac:	4770      	bx	lr
 800d9ae:	bf00      	nop

0800d9b0 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d9b0:	680b      	ldr	r3, [r1, #0]
{
 800d9b2:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d9b4:	b9d3      	cbnz	r3, 800d9ec <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9b6:	6803      	ldr	r3, [r0, #0]
 800d9b8:	684c      	ldr	r4, [r1, #4]
 800d9ba:	688a      	ldr	r2, [r1, #8]
 800d9bc:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d9c0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d9c4:	4323      	orrs	r3, r4
 800d9c6:	4313      	orrs	r3, r2
 800d9c8:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d9cc:	4323      	orrs	r3, r4
 800d9ce:	4313      	orrs	r3, r2
 800d9d0:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d9d4:	4323      	orrs	r3, r4
 800d9d6:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d9da:	4313      	orrs	r3, r2
 800d9dc:	432b      	orrs	r3, r5
 800d9de:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d9e0:	4323      	orrs	r3, r4
 800d9e2:	4313      	orrs	r3, r2
 800d9e4:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d9e6:	bc30      	pop	{r4, r5}
 800d9e8:	2000      	movs	r0, #0
 800d9ea:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9ec:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d9f0:	6803      	ldr	r3, [r0, #0]
 800d9f2:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d9f6:	4323      	orrs	r3, r4
 800d9f8:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d9fa:	4313      	orrs	r3, r2
 800d9fc:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d9fe:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800da00:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800da02:	6843      	ldr	r3, [r0, #4]
 800da04:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800da08:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800da0c:	4313      	orrs	r3, r2
 800da0e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800da12:	4323      	orrs	r3, r4
 800da14:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800da18:	4313      	orrs	r3, r2
 800da1a:	432b      	orrs	r3, r5
 800da1c:	698a      	ldr	r2, [r1, #24]
 800da1e:	4323      	orrs	r3, r4
 800da20:	4313      	orrs	r3, r2
 800da22:	6043      	str	r3, [r0, #4]
}
 800da24:	bc30      	pop	{r4, r5}
 800da26:	2000      	movs	r0, #0
 800da28:	4770      	bx	lr
 800da2a:	bf00      	nop

0800da2c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800da2c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da2e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800da30:	bb02      	cbnz	r2, 800da74 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da32:	e9d1 2400 	ldrd	r2, r4, [r1]
 800da36:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800da3a:	3c01      	subs	r4, #1
 800da3c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800da40:	3a01      	subs	r2, #1
 800da42:	4313      	orrs	r3, r2
 800da44:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800da48:	3c01      	subs	r4, #1
 800da4a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800da4e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800da52:	3a01      	subs	r2, #1
 800da54:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800da58:	698a      	ldr	r2, [r1, #24]
 800da5a:	1e69      	subs	r1, r5, #1
 800da5c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800da60:	1e61      	subs	r1, r4, #1
 800da62:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800da66:	3a01      	subs	r2, #1
 800da68:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800da6c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800da6e:	bc30      	pop	{r4, r5}
 800da70:	2000      	movs	r0, #0
 800da72:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da74:	68cc      	ldr	r4, [r1, #12]
 800da76:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800da78:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da7a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800da7e:	3c01      	subs	r4, #1
 800da80:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800da84:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800da88:	3a01      	subs	r2, #1
 800da8a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800da8e:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800da90:	e9d1 2400 	ldrd	r2, r4, [r1]
 800da94:	68c3      	ldr	r3, [r0, #12]
 800da96:	3c01      	subs	r4, #1
 800da98:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800da9c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800daa0:	3a01      	subs	r2, #1
 800daa2:	690c      	ldr	r4, [r1, #16]
 800daa4:	4313      	orrs	r3, r2
 800daa6:	698a      	ldr	r2, [r1, #24]
 800daa8:	1e69      	subs	r1, r5, #1
 800daaa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800daae:	1e61      	subs	r1, r4, #1
 800dab0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800dab4:	3a01      	subs	r2, #1
 800dab6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800daba:	60c3      	str	r3, [r0, #12]
}
 800dabc:	bc30      	pop	{r4, r5}
 800dabe:	2000      	movs	r0, #0
 800dac0:	4770      	bx	lr
 800dac2:	bf00      	nop

0800dac4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800dac4:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dac6:	680b      	ldr	r3, [r1, #0]
{
 800dac8:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800daca:	684a      	ldr	r2, [r1, #4]
{
 800dacc:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dace:	4313      	orrs	r3, r2
 800dad0:	6900      	ldr	r0, [r0, #16]
 800dad2:	68ca      	ldr	r2, [r1, #12]
 800dad4:	0d80      	lsrs	r0, r0, #22
 800dad6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800dada:	688a      	ldr	r2, [r1, #8]
 800dadc:	0580      	lsls	r0, r0, #22
 800dade:	4303      	orrs	r3, r0
 800dae0:	3a01      	subs	r2, #1
 800dae2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800dae6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800dae8:	f7fb ff46 	bl	8009978 <HAL_GetTick>
 800daec:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800daee:	1c6b      	adds	r3, r5, #1
 800daf0:	d105      	bne.n	800dafe <FMC_SDRAM_SendCommand+0x3a>
 800daf2:	69a3      	ldr	r3, [r4, #24]
 800daf4:	f013 0320 	ands.w	r3, r3, #32
 800daf8:	d1fb      	bne.n	800daf2 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800dafa:	4618      	mov	r0, r3
}
 800dafc:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800dafe:	69a3      	ldr	r3, [r4, #24]
 800db00:	f013 0320 	ands.w	r3, r3, #32
 800db04:	d0f9      	beq.n	800dafa <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800db06:	b125      	cbz	r5, 800db12 <FMC_SDRAM_SendCommand+0x4e>
 800db08:	f7fb ff36 	bl	8009978 <HAL_GetTick>
 800db0c:	1b80      	subs	r0, r0, r6
 800db0e:	42a8      	cmp	r0, r5
 800db10:	d9ed      	bls.n	800daee <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800db12:	2003      	movs	r0, #3
}
 800db14:	bd70      	pop	{r4, r5, r6, pc}
 800db16:	bf00      	nop

0800db18 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db18:	6943      	ldr	r3, [r0, #20]
 800db1a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800db1e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db20:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800db24:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800db28:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db2a:	6151      	str	r1, [r2, #20]
}
 800db2c:	4770      	bx	lr
 800db2e:	bf00      	nop

0800db30 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800db30:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800db32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db36:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800db38:	f002 fb04 	bl	8010144 <xTaskGetSchedulerState>
 800db3c:	2801      	cmp	r0, #1
 800db3e:	d100      	bne.n	800db42 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800db40:	bd08      	pop	{r3, pc}
 800db42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800db46:	f000 bc45 	b.w	800e3d4 <xPortSysTickHandler>
 800db4a:	bf00      	nop

0800db4c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800db4c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800db50:	b92b      	cbnz	r3, 800db5e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800db52:	4b06      	ldr	r3, [pc, #24]	; (800db6c <osKernelInitialize+0x20>)
 800db54:	6818      	ldr	r0, [r3, #0]
 800db56:	b928      	cbnz	r0, 800db64 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800db58:	2201      	movs	r2, #1
 800db5a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800db5c:	4770      	bx	lr
    stat = osErrorISR;
 800db5e:	f06f 0005 	mvn.w	r0, #5
 800db62:	4770      	bx	lr
    } else {
      stat = osError;
 800db64:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800db68:	4770      	bx	lr
 800db6a:	bf00      	nop
 800db6c:	20002ce8 	.word	0x20002ce8

0800db70 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800db70:	b510      	push	{r4, lr}
 800db72:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800db76:	b974      	cbnz	r4, 800db96 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800db78:	4b08      	ldr	r3, [pc, #32]	; (800db9c <osKernelStart+0x2c>)
 800db7a:	681a      	ldr	r2, [r3, #0]
 800db7c:	2a01      	cmp	r2, #1
 800db7e:	d107      	bne.n	800db90 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800db80:	4907      	ldr	r1, [pc, #28]	; (800dba0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800db82:	2202      	movs	r2, #2
 800db84:	77cc      	strb	r4, [r1, #31]
 800db86:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800db88:	f002 f8b6 	bl	800fcf8 <vTaskStartScheduler>
      stat = osOK;
 800db8c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800db8e:	bd10      	pop	{r4, pc}
      stat = osError;
 800db90:	f04f 30ff 	mov.w	r0, #4294967295
}
 800db94:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800db96:	f06f 0005 	mvn.w	r0, #5
}
 800db9a:	bd10      	pop	{r4, pc}
 800db9c:	20002ce8 	.word	0x20002ce8
 800dba0:	e000ed00 	.word	0xe000ed00

0800dba4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800dba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dba6:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800dba8:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800dbaa:	4615      	mov	r5, r2
  hTask = NULL;
 800dbac:	9405      	str	r4, [sp, #20]
 800dbae:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800dbb2:	b9ea      	cbnz	r2, 800dbf0 <osThreadNew+0x4c>
 800dbb4:	b350      	cbz	r0, 800dc0c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800dbb6:	b1f5      	cbz	r5, 800dbf6 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800dbb8:	69ab      	ldr	r3, [r5, #24]
 800dbba:	bb5b      	cbnz	r3, 800dc14 <osThreadNew+0x70>
 800dbbc:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dbbe:	686a      	ldr	r2, [r5, #4]
 800dbc0:	07d2      	lsls	r2, r2, #31
 800dbc2:	d423      	bmi.n	800dc0c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800dbc4:	696e      	ldr	r6, [r5, #20]
 800dbc6:	b34e      	cbz	r6, 800dc1c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800dbc8:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbcc:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800dbce:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbd0:	b34c      	cbz	r4, 800dc26 <osThreadNew+0x82>
 800dbd2:	68ea      	ldr	r2, [r5, #12]
 800dbd4:	2aab      	cmp	r2, #171	; 0xab
 800dbd6:	d919      	bls.n	800dc0c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dbd8:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbda:	b1bd      	cbz	r5, 800dc0c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dbdc:	b1b6      	cbz	r6, 800dc0c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800dbde:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800dbe2:	9300      	str	r3, [sp, #0]
 800dbe4:	4662      	mov	r2, ip
 800dbe6:	460b      	mov	r3, r1
 800dbe8:	4639      	mov	r1, r7
 800dbea:	f001 ffc3 	bl	800fb74 <xTaskCreateStatic>
 800dbee:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800dbf0:	4620      	mov	r0, r4
 800dbf2:	b007      	add	sp, #28
 800dbf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dbf6:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800dbf8:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dbfa:	ac05      	add	r4, sp, #20
 800dbfc:	9300      	str	r3, [sp, #0]
 800dbfe:	9401      	str	r4, [sp, #4]
 800dc00:	460b      	mov	r3, r1
 800dc02:	4629      	mov	r1, r5
 800dc04:	f001 fff0 	bl	800fbe8 <xTaskCreate>
 800dc08:	2801      	cmp	r0, #1
 800dc0a:	d00a      	beq.n	800dc22 <osThreadNew+0x7e>
        return (NULL);
 800dc0c:	2400      	movs	r4, #0
}
 800dc0e:	4620      	mov	r0, r4
 800dc10:	b007      	add	sp, #28
 800dc12:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dc14:	1e5c      	subs	r4, r3, #1
 800dc16:	2c37      	cmp	r4, #55	; 0x37
 800dc18:	d9d1      	bls.n	800dbbe <osThreadNew+0x1a>
 800dc1a:	e7f7      	b.n	800dc0c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800dc1c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800dc20:	e7d4      	b.n	800dbcc <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800dc22:	9c05      	ldr	r4, [sp, #20]
 800dc24:	e7e4      	b.n	800dbf0 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800dc26:	68ee      	ldr	r6, [r5, #12]
 800dc28:	2e00      	cmp	r6, #0
 800dc2a:	d1e1      	bne.n	800dbf0 <osThreadNew+0x4c>
 800dc2c:	692d      	ldr	r5, [r5, #16]
 800dc2e:	2d00      	cmp	r5, #0
 800dc30:	d1de      	bne.n	800dbf0 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dc32:	fa1f f28c 	uxth.w	r2, ip
 800dc36:	463d      	mov	r5, r7
 800dc38:	e7df      	b.n	800dbfa <osThreadNew+0x56>
 800dc3a:	bf00      	nop

0800dc3c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800dc3c:	b510      	push	{r4, lr}
 800dc3e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800dc42:	b92c      	cbnz	r4, 800dc50 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800dc44:	b900      	cbnz	r0, 800dc48 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800dc46:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800dc48:	f002 f800 	bl	800fc4c <vTaskDelay>
    stat = osOK;
 800dc4c:	4620      	mov	r0, r4
}
 800dc4e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800dc50:	f06f 0005 	mvn.w	r0, #5
}
 800dc54:	bd10      	pop	{r4, pc}
 800dc56:	bf00      	nop

0800dc58 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800dc58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc5a:	b083      	sub	sp, #12
 800dc5c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800dc60:	b9fe      	cbnz	r6, 800dca2 <osSemaphoreNew+0x4a>
 800dc62:	b1f0      	cbz	r0, 800dca2 <osSemaphoreNew+0x4a>
 800dc64:	4288      	cmp	r0, r1
 800dc66:	460f      	mov	r7, r1
 800dc68:	d31b      	bcc.n	800dca2 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800dc6a:	4615      	mov	r5, r2
 800dc6c:	b192      	cbz	r2, 800dc94 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800dc6e:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800dc72:	b1d2      	cbz	r2, 800dcaa <osSemaphoreNew+0x52>
 800dc74:	2b4f      	cmp	r3, #79	; 0x4f
 800dc76:	d914      	bls.n	800dca2 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800dc78:	2801      	cmp	r0, #1
 800dc7a:	d038      	beq.n	800dcee <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800dc7c:	f000 fd90 	bl	800e7a0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800dc80:	4604      	mov	r4, r0
 800dc82:	b170      	cbz	r0, 800dca2 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800dc84:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800dc86:	4620      	mov	r0, r4
 800dc88:	4629      	mov	r1, r5
 800dc8a:	f001 fc3b 	bl	800f504 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800dc8e:	4620      	mov	r0, r4
 800dc90:	b003      	add	sp, #12
 800dc92:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800dc94:	2801      	cmp	r0, #1
 800dc96:	d012      	beq.n	800dcbe <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800dc98:	f000 fde2 	bl	800e860 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800dc9c:	4604      	mov	r4, r0
 800dc9e:	2800      	cmp	r0, #0
 800dca0:	d1f1      	bne.n	800dc86 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800dca2:	2400      	movs	r4, #0
}
 800dca4:	4620      	mov	r0, r4
 800dca6:	b003      	add	sp, #12
 800dca8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800dcaa:	2b00      	cmp	r3, #0
 800dcac:	d1f9      	bne.n	800dca2 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800dcae:	2801      	cmp	r0, #1
 800dcb0:	d005      	beq.n	800dcbe <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800dcb2:	f000 fdd5 	bl	800e860 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800dcb6:	4604      	mov	r4, r0
 800dcb8:	2800      	cmp	r0, #0
 800dcba:	d1e3      	bne.n	800dc84 <osSemaphoreNew+0x2c>
 800dcbc:	e7f1      	b.n	800dca2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800dcbe:	2203      	movs	r2, #3
 800dcc0:	2100      	movs	r1, #0
 800dcc2:	2001      	movs	r0, #1
 800dcc4:	f000 fd2a 	bl	800e71c <xQueueGenericCreate>
 800dcc8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800dcca:	2c00      	cmp	r4, #0
 800dccc:	d0e9      	beq.n	800dca2 <osSemaphoreNew+0x4a>
 800dcce:	b917      	cbnz	r7, 800dcd6 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800dcd0:	2d00      	cmp	r5, #0
 800dcd2:	d1d7      	bne.n	800dc84 <osSemaphoreNew+0x2c>
 800dcd4:	e7d7      	b.n	800dc86 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800dcd6:	2300      	movs	r3, #0
 800dcd8:	461a      	mov	r2, r3
 800dcda:	4619      	mov	r1, r3
 800dcdc:	4620      	mov	r0, r4
 800dcde:	f000 fe05 	bl	800e8ec <xQueueGenericSend>
 800dce2:	2801      	cmp	r0, #1
 800dce4:	d0f4      	beq.n	800dcd0 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800dce6:	4620      	mov	r0, r4
 800dce8:	f001 fbc6 	bl	800f478 <vQueueDelete>
 800dcec:	e7d9      	b.n	800dca2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800dcee:	4613      	mov	r3, r2
 800dcf0:	2203      	movs	r2, #3
 800dcf2:	9200      	str	r2, [sp, #0]
 800dcf4:	4631      	mov	r1, r6
 800dcf6:	4632      	mov	r2, r6
 800dcf8:	f000 fca2 	bl	800e640 <xQueueGenericCreateStatic>
 800dcfc:	4604      	mov	r4, r0
 800dcfe:	e7e4      	b.n	800dcca <osSemaphoreNew+0x72>

0800dd00 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dd00:	b370      	cbz	r0, 800dd60 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800dd02:	b510      	push	{r4, lr}
 800dd04:	460c      	mov	r4, r1
 800dd06:	b082      	sub	sp, #8
 800dd08:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dd0c:	b1c3      	cbz	r3, 800dd40 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800dd0e:	bb21      	cbnz	r1, 800dd5a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800dd10:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dd12:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800dd14:	f001 fb2e 	bl	800f374 <xQueueReceiveFromISR>
 800dd18:	2801      	cmp	r0, #1
 800dd1a:	d11a      	bne.n	800dd52 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dd1c:	9b01      	ldr	r3, [sp, #4]
 800dd1e:	b913      	cbnz	r3, 800dd26 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800dd20:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800dd22:	b002      	add	sp, #8
 800dd24:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800dd26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd32:	f3bf 8f4f 	dsb	sy
 800dd36:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dd3a:	4620      	mov	r0, r4
}
 800dd3c:	b002      	add	sp, #8
 800dd3e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800dd40:	f001 f98e 	bl	800f060 <xQueueSemaphoreTake>
 800dd44:	2801      	cmp	r0, #1
 800dd46:	d0eb      	beq.n	800dd20 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800dd48:	b11c      	cbz	r4, 800dd52 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800dd4a:	f06f 0001 	mvn.w	r0, #1
}
 800dd4e:	b002      	add	sp, #8
 800dd50:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800dd52:	f06f 0002 	mvn.w	r0, #2
}
 800dd56:	b002      	add	sp, #8
 800dd58:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800dd5a:	f06f 0003 	mvn.w	r0, #3
 800dd5e:	e7e0      	b.n	800dd22 <osSemaphoreAcquire+0x22>
 800dd60:	f06f 0003 	mvn.w	r0, #3
}
 800dd64:	4770      	bx	lr
 800dd66:	bf00      	nop

0800dd68 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dd68:	b330      	cbz	r0, 800ddb8 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800dd6a:	b510      	push	{r4, lr}
 800dd6c:	b082      	sub	sp, #8
 800dd6e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dd72:	b1ab      	cbz	r3, 800dda0 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800dd74:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dd76:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800dd78:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dd7a:	f000 ff9b 	bl	800ecb4 <xQueueGiveFromISR>
 800dd7e:	2801      	cmp	r0, #1
 800dd80:	d117      	bne.n	800ddb2 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800dd82:	9b01      	ldr	r3, [sp, #4]
 800dd84:	b193      	cbz	r3, 800ddac <osSemaphoreRelease+0x44>
 800dd86:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd8a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd92:	f3bf 8f4f 	dsb	sy
 800dd96:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dd9a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800dd9c:	b002      	add	sp, #8
 800dd9e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800dda0:	461a      	mov	r2, r3
 800dda2:	4619      	mov	r1, r3
 800dda4:	f000 fda2 	bl	800e8ec <xQueueGenericSend>
 800dda8:	2801      	cmp	r0, #1
 800ddaa:	d102      	bne.n	800ddb2 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800ddac:	2000      	movs	r0, #0
}
 800ddae:	b002      	add	sp, #8
 800ddb0:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800ddb2:	f06f 0002 	mvn.w	r0, #2
 800ddb6:	e7fa      	b.n	800ddae <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800ddb8:	f06f 0003 	mvn.w	r0, #3
}
 800ddbc:	4770      	bx	lr
 800ddbe:	bf00      	nop

0800ddc0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800ddc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddc2:	b085      	sub	sp, #20
 800ddc4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ddc8:	b987      	cbnz	r7, 800ddec <osMessageQueueNew+0x2c>
 800ddca:	4605      	mov	r5, r0
 800ddcc:	b170      	cbz	r0, 800ddec <osMessageQueueNew+0x2c>
 800ddce:	b169      	cbz	r1, 800ddec <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800ddd0:	4614      	mov	r4, r2
 800ddd2:	b1ea      	cbz	r2, 800de10 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ddd4:	6893      	ldr	r3, [r2, #8]
 800ddd6:	b163      	cbz	r3, 800ddf2 <osMessageQueueNew+0x32>
 800ddd8:	68d2      	ldr	r2, [r2, #12]
 800ddda:	2a4f      	cmp	r2, #79	; 0x4f
 800dddc:	d906      	bls.n	800ddec <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ddde:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800dde0:	b122      	cbz	r2, 800ddec <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800dde2:	6966      	ldr	r6, [r4, #20]
 800dde4:	fb01 f505 	mul.w	r5, r1, r5
 800dde8:	42ae      	cmp	r6, r5
 800ddea:	d21c      	bcs.n	800de26 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800ddec:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ddee:	b005      	add	sp, #20
 800ddf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800ddf2:	68d3      	ldr	r3, [r2, #12]
 800ddf4:	2b00      	cmp	r3, #0
 800ddf6:	d1f9      	bne.n	800ddec <osMessageQueueNew+0x2c>
 800ddf8:	6913      	ldr	r3, [r2, #16]
 800ddfa:	2b00      	cmp	r3, #0
 800ddfc:	d1f6      	bne.n	800ddec <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800ddfe:	6952      	ldr	r2, [r2, #20]
 800de00:	2a00      	cmp	r2, #0
 800de02:	d1f3      	bne.n	800ddec <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800de04:	f000 fc8a 	bl	800e71c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800de08:	2800      	cmp	r0, #0
 800de0a:	d0ef      	beq.n	800ddec <osMessageQueueNew+0x2c>
        name = attr->name;
 800de0c:	6824      	ldr	r4, [r4, #0]
 800de0e:	e003      	b.n	800de18 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800de10:	f000 fc84 	bl	800e71c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800de14:	2800      	cmp	r0, #0
 800de16:	d0e9      	beq.n	800ddec <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800de18:	4621      	mov	r1, r4
 800de1a:	9003      	str	r0, [sp, #12]
 800de1c:	f001 fb72 	bl	800f504 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800de20:	9803      	ldr	r0, [sp, #12]
}
 800de22:	b005      	add	sp, #20
 800de24:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800de26:	9700      	str	r7, [sp, #0]
 800de28:	f000 fc0a 	bl	800e640 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800de2c:	2800      	cmp	r0, #0
 800de2e:	d1ed      	bne.n	800de0c <osMessageQueueNew+0x4c>
 800de30:	e7dc      	b.n	800ddec <osMessageQueueNew+0x2c>
 800de32:	bf00      	nop

0800de34 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800de34:	b570      	push	{r4, r5, r6, lr}
 800de36:	461c      	mov	r4, r3
 800de38:	b082      	sub	sp, #8
 800de3a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800de3e:	b1be      	cbz	r6, 800de70 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800de40:	b350      	cbz	r0, 800de98 <osMessageQueuePut+0x64>
 800de42:	b349      	cbz	r1, 800de98 <osMessageQueuePut+0x64>
 800de44:	bb43      	cbnz	r3, 800de98 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800de46:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800de48:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800de4a:	f000 fecd 	bl	800ebe8 <xQueueGenericSendFromISR>
 800de4e:	2801      	cmp	r0, #1
 800de50:	d11e      	bne.n	800de90 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800de52:	9b01      	ldr	r3, [sp, #4]
 800de54:	b1cb      	cbz	r3, 800de8a <osMessageQueuePut+0x56>
 800de56:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de5a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de5e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de62:	f3bf 8f4f 	dsb	sy
 800de66:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800de6a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800de6c:	b002      	add	sp, #8
 800de6e:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800de70:	b190      	cbz	r0, 800de98 <osMessageQueuePut+0x64>
 800de72:	b189      	cbz	r1, 800de98 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800de74:	4633      	mov	r3, r6
 800de76:	4622      	mov	r2, r4
 800de78:	f000 fd38 	bl	800e8ec <xQueueGenericSend>
 800de7c:	2801      	cmp	r0, #1
 800de7e:	d004      	beq.n	800de8a <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800de80:	b134      	cbz	r4, 800de90 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800de82:	f06f 0001 	mvn.w	r0, #1
}
 800de86:	b002      	add	sp, #8
 800de88:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800de8a:	2000      	movs	r0, #0
}
 800de8c:	b002      	add	sp, #8
 800de8e:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800de90:	f06f 0002 	mvn.w	r0, #2
}
 800de94:	b002      	add	sp, #8
 800de96:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800de98:	f06f 0003 	mvn.w	r0, #3
 800de9c:	e7e6      	b.n	800de6c <osMessageQueuePut+0x38>
 800de9e:	bf00      	nop

0800dea0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800dea0:	b530      	push	{r4, r5, lr}
 800dea2:	461c      	mov	r4, r3
 800dea4:	b083      	sub	sp, #12
 800dea6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800deaa:	b1bb      	cbz	r3, 800dedc <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800deac:	b348      	cbz	r0, 800df02 <osMessageQueueGet+0x62>
 800deae:	b341      	cbz	r1, 800df02 <osMessageQueueGet+0x62>
 800deb0:	bb3c      	cbnz	r4, 800df02 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800deb2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800deb4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800deb6:	f001 fa5d 	bl	800f374 <xQueueReceiveFromISR>
 800deba:	2801      	cmp	r0, #1
 800debc:	d11d      	bne.n	800defa <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800debe:	9b01      	ldr	r3, [sp, #4]
 800dec0:	b1c3      	cbz	r3, 800def4 <osMessageQueueGet+0x54>
 800dec2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dec6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dece:	f3bf 8f4f 	dsb	sy
 800ded2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ded6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ded8:	b003      	add	sp, #12
 800deda:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800dedc:	b188      	cbz	r0, 800df02 <osMessageQueueGet+0x62>
 800dede:	b181      	cbz	r1, 800df02 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dee0:	4622      	mov	r2, r4
 800dee2:	f000 ff3f 	bl	800ed64 <xQueueReceive>
 800dee6:	2801      	cmp	r0, #1
 800dee8:	d004      	beq.n	800def4 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800deea:	b134      	cbz	r4, 800defa <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800deec:	f06f 0001 	mvn.w	r0, #1
}
 800def0:	b003      	add	sp, #12
 800def2:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800def4:	2000      	movs	r0, #0
}
 800def6:	b003      	add	sp, #12
 800def8:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800defa:	f06f 0002 	mvn.w	r0, #2
}
 800defe:	b003      	add	sp, #12
 800df00:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800df02:	f06f 0003 	mvn.w	r0, #3
 800df06:	e7e7      	b.n	800ded8 <osMessageQueueGet+0x38>

0800df08 <osMessageQueueGetCount>:
 800df08:	b130      	cbz	r0, 800df18 <osMessageQueueGetCount+0x10>
 800df0a:	f3ef 8305 	mrs	r3, IPSR
 800df0e:	b10b      	cbz	r3, 800df14 <osMessageQueueGetCount+0xc>
 800df10:	f001 baa4 	b.w	800f45c <uxQueueMessagesWaitingFromISR>
 800df14:	f001 ba8c 	b.w	800f430 <uxQueueMessagesWaiting>
 800df18:	4770      	bx	lr
 800df1a:	bf00      	nop

0800df1c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800df1c:	4b04      	ldr	r3, [pc, #16]	; (800df30 <vApplicationGetIdleTaskMemory+0x14>)
 800df1e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800df20:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800df22:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800df24:	4c03      	ldr	r4, [pc, #12]	; (800df34 <vApplicationGetIdleTaskMemory+0x18>)
 800df26:	600c      	str	r4, [r1, #0]
}
 800df28:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800df2c:	6013      	str	r3, [r2, #0]
}
 800df2e:	4770      	bx	lr
 800df30:	20002c3c 	.word	0x20002c3c
 800df34:	20002a3c 	.word	0x20002a3c

0800df38 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800df38:	4b05      	ldr	r3, [pc, #20]	; (800df50 <vApplicationGetTimerTaskMemory+0x18>)
 800df3a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800df3c:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800df3e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800df42:	4c04      	ldr	r4, [pc, #16]	; (800df54 <vApplicationGetTimerTaskMemory+0x1c>)
 800df44:	600c      	str	r4, [r1, #0]
}
 800df46:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800df4a:	6013      	str	r3, [r2, #0]
}
 800df4c:	4770      	bx	lr
 800df4e:	bf00      	nop
 800df50:	200030ec 	.word	0x200030ec
 800df54:	20002cec 	.word	0x20002cec

0800df58 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800df58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df5c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800df5e:	f001 ff47 	bl	800fdf0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800df62:	4a54      	ldr	r2, [pc, #336]	; (800e0b4 <pvPortMalloc+0x15c>)
 800df64:	6816      	ldr	r6, [r2, #0]
 800df66:	2e00      	cmp	r6, #0
 800df68:	d06e      	beq.n	800e048 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800df6a:	4b53      	ldr	r3, [pc, #332]	; (800e0b8 <pvPortMalloc+0x160>)
 800df6c:	681f      	ldr	r7, [r3, #0]
 800df6e:	423d      	tst	r5, r7
 800df70:	d12e      	bne.n	800dfd0 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800df72:	b36d      	cbz	r5, 800dfd0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800df74:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800df78:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800df7a:	bf1c      	itt	ne
 800df7c:	f024 0407 	bicne.w	r4, r4, #7
 800df80:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800df82:	b32c      	cbz	r4, 800dfd0 <pvPortMalloc+0x78>
 800df84:	f8df c144 	ldr.w	ip, [pc, #324]	; 800e0cc <pvPortMalloc+0x174>
 800df88:	f8dc 5000 	ldr.w	r5, [ip]
 800df8c:	42a5      	cmp	r5, r4
 800df8e:	d31f      	bcc.n	800dfd0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800df90:	484a      	ldr	r0, [pc, #296]	; (800e0bc <pvPortMalloc+0x164>)
 800df92:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800df94:	e003      	b.n	800df9e <pvPortMalloc+0x46>
 800df96:	681a      	ldr	r2, [r3, #0]
 800df98:	b122      	cbz	r2, 800dfa4 <pvPortMalloc+0x4c>
 800df9a:	4618      	mov	r0, r3
 800df9c:	4613      	mov	r3, r2
 800df9e:	6859      	ldr	r1, [r3, #4]
 800dfa0:	42a1      	cmp	r1, r4
 800dfa2:	d3f8      	bcc.n	800df96 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800dfa4:	42b3      	cmp	r3, r6
 800dfa6:	d013      	beq.n	800dfd0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800dfa8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dfaa:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800dfac:	f858 eb08 	ldr.w	lr, [r8], #8
 800dfb0:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dfb4:	2a10      	cmp	r2, #16
 800dfb6:	d929      	bls.n	800e00c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dfb8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dfba:	0748      	lsls	r0, r1, #29
 800dfbc:	d00f      	beq.n	800dfde <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800dfbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfc2:	f383 8811 	msr	BASEPRI, r3
 800dfc6:	f3bf 8f6f 	isb	sy
 800dfca:	f3bf 8f4f 	dsb	sy
 800dfce:	e7fe      	b.n	800dfce <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dfd0:	f001 ff16 	bl	800fe00 <xTaskResumeAll>
 800dfd4:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dfd8:	4640      	mov	r0, r8
 800dfda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dfde:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dfe0:	4a36      	ldr	r2, [pc, #216]	; (800e0bc <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dfe2:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dfe4:	4614      	mov	r4, r2
 800dfe6:	6812      	ldr	r2, [r2, #0]
 800dfe8:	4291      	cmp	r1, r2
 800dfea:	d8fb      	bhi.n	800dfe4 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dfec:	6860      	ldr	r0, [r4, #4]
 800dfee:	eb04 0e00 	add.w	lr, r4, r0
 800dff2:	4571      	cmp	r1, lr
 800dff4:	d04b      	beq.n	800e08e <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dff6:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dffa:	eb01 000e 	add.w	r0, r1, lr
 800dffe:	4282      	cmp	r2, r0
 800e000:	d051      	beq.n	800e0a6 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800e002:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e004:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e006:	bf18      	it	ne
 800e008:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e00a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e00c:	4a2c      	ldr	r2, [pc, #176]	; (800e0c0 <pvPortMalloc+0x168>)
 800e00e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e010:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e012:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e014:	bf38      	it	cc
 800e016:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800e018:	4a2a      	ldr	r2, [pc, #168]	; (800e0c4 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e01a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e01e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800e020:	2000      	movs	r0, #0
 800e022:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800e026:	6813      	ldr	r3, [r2, #0]
 800e028:	3301      	adds	r3, #1
 800e02a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800e02c:	f001 fee8 	bl	800fe00 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e030:	f018 0f07 	tst.w	r8, #7
 800e034:	d0d0      	beq.n	800dfd8 <pvPortMalloc+0x80>
 800e036:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e03a:	f383 8811 	msr	BASEPRI, r3
 800e03e:	f3bf 8f6f 	isb	sy
 800e042:	f3bf 8f4f 	dsb	sy
 800e046:	e7fe      	b.n	800e046 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800e048:	4b1f      	ldr	r3, [pc, #124]	; (800e0c8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e04a:	075e      	lsls	r6, r3, #29
 800e04c:	d118      	bne.n	800e080 <pvPortMalloc+0x128>
 800e04e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800e052:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800e054:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e056:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800e05a:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e05c:	4a18      	ldr	r2, [pc, #96]	; (800e0c0 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e05e:	4817      	ldr	r0, [pc, #92]	; (800e0bc <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e060:	4c15      	ldr	r4, [pc, #84]	; (800e0b8 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e062:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e064:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e066:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e068:	4a18      	ldr	r2, [pc, #96]	; (800e0cc <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e06a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e06e:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800e070:	2200      	movs	r2, #0
 800e072:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e074:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e076:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e07a:	e9c1 6300 	strd	r6, r3, [r1]
}
 800e07e:	e776      	b.n	800df6e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e080:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800e082:	f021 0107 	bic.w	r1, r1, #7
 800e086:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e08a:	460b      	mov	r3, r1
 800e08c:	e7e2      	b.n	800e054 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e08e:	6849      	ldr	r1, [r1, #4]
 800e090:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e094:	eb04 010e 	add.w	r1, r4, lr
 800e098:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e09a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e09e:	d001      	beq.n	800e0a4 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e0a0:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800e0a2:	e7b2      	b.n	800e00a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e0a4:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e0a6:	42b2      	cmp	r2, r6
 800e0a8:	d0ab      	beq.n	800e002 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e0aa:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e0ac:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e0ae:	4470      	add	r0, lr
 800e0b0:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e0b2:	e7a6      	b.n	800e002 <pvPortMalloc+0xaa>
 800e0b4:	20003198 	.word	0x20003198
 800e0b8:	2001319c 	.word	0x2001319c
 800e0bc:	200131b0 	.word	0x200131b0
 800e0c0:	200131a4 	.word	0x200131a4
 800e0c4:	200131a8 	.word	0x200131a8
 800e0c8:	2000319c 	.word	0x2000319c
 800e0cc:	200131a0 	.word	0x200131a0

0800e0d0 <vPortFree>:
	if( pv != NULL )
 800e0d0:	b1d0      	cbz	r0, 800e108 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e0d2:	4a2c      	ldr	r2, [pc, #176]	; (800e184 <vPortFree+0xb4>)
 800e0d4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e0d8:	6812      	ldr	r2, [r2, #0]
 800e0da:	4213      	tst	r3, r2
 800e0dc:	d00b      	beq.n	800e0f6 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800e0de:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e0e2:	b191      	cbz	r1, 800e10a <vPortFree+0x3a>
 800e0e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0e8:	f383 8811 	msr	BASEPRI, r3
 800e0ec:	f3bf 8f6f 	isb	sy
 800e0f0:	f3bf 8f4f 	dsb	sy
 800e0f4:	e7fe      	b.n	800e0f4 <vPortFree+0x24>
 800e0f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0fa:	f383 8811 	msr	BASEPRI, r3
 800e0fe:	f3bf 8f6f 	isb	sy
 800e102:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e106:	e7fe      	b.n	800e106 <vPortFree+0x36>
 800e108:	4770      	bx	lr
{
 800e10a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e10c:	ea23 0302 	bic.w	r3, r3, r2
{
 800e110:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e112:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e116:	4c1c      	ldr	r4, [pc, #112]	; (800e188 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e118:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800e11a:	f001 fe69 	bl	800fdf0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e11e:	9801      	ldr	r0, [sp, #4]
 800e120:	6822      	ldr	r2, [r4, #0]
 800e122:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e126:	4b19      	ldr	r3, [pc, #100]	; (800e18c <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e128:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800e12a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e12c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e12e:	461a      	mov	r2, r3
 800e130:	681b      	ldr	r3, [r3, #0]
 800e132:	4298      	cmp	r0, r3
 800e134:	d8fb      	bhi.n	800e12e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e136:	6854      	ldr	r4, [r2, #4]
 800e138:	eb02 0e04 	add.w	lr, r2, r4
 800e13c:	4570      	cmp	r0, lr
 800e13e:	d010      	beq.n	800e162 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e140:	eb00 0c01 	add.w	ip, r0, r1
 800e144:	4563      	cmp	r3, ip
 800e146:	d014      	beq.n	800e172 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800e148:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e14a:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e14c:	bf18      	it	ne
 800e14e:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800e150:	4a0f      	ldr	r2, [pc, #60]	; (800e190 <vPortFree+0xc0>)
 800e152:	6813      	ldr	r3, [r2, #0]
 800e154:	3301      	adds	r3, #1
 800e156:	6013      	str	r3, [r2, #0]
}
 800e158:	b002      	add	sp, #8
 800e15a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800e15e:	f001 be4f 	b.w	800fe00 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e162:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e164:	1850      	adds	r0, r2, r1
 800e166:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e168:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e16a:	d001      	beq.n	800e170 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e16c:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800e16e:	e7ef      	b.n	800e150 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e170:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e172:	4c08      	ldr	r4, [pc, #32]	; (800e194 <vPortFree+0xc4>)
 800e174:	6824      	ldr	r4, [r4, #0]
 800e176:	42a3      	cmp	r3, r4
 800e178:	d0e6      	beq.n	800e148 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e17a:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e17e:	4421      	add	r1, r4
 800e180:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e182:	e7e1      	b.n	800e148 <vPortFree+0x78>
 800e184:	2001319c 	.word	0x2001319c
 800e188:	200131a0 	.word	0x200131a0
 800e18c:	200131b0 	.word	0x200131b0
 800e190:	200131ac 	.word	0x200131ac
 800e194:	20003198 	.word	0x20003198

0800e198 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e198:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e19c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e1a0:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e1a2:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e1a6:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e1aa:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800e1ac:	4770      	bx	lr
 800e1ae:	bf00      	nop

0800e1b0 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800e1b0:	2300      	movs	r3, #0
 800e1b2:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800e1b4:	4770      	bx	lr
 800e1b6:	bf00      	nop

0800e1b8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800e1b8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800e1ba:	689a      	ldr	r2, [r3, #8]
 800e1bc:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e1be:	6802      	ldr	r2, [r0, #0]
{
 800e1c0:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e1c2:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800e1c4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e1c6:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e1c8:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800e1ca:	6099      	str	r1, [r3, #8]
}
 800e1cc:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800e1d0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e1d2:	6002      	str	r2, [r0, #0]
}
 800e1d4:	4770      	bx	lr
 800e1d6:	bf00      	nop

0800e1d8 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800e1d8:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800e1da:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800e1dc:	1c6b      	adds	r3, r5, #1
 800e1de:	d010      	beq.n	800e202 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800e1e0:	f100 0308 	add.w	r3, r0, #8
 800e1e4:	461c      	mov	r4, r3
 800e1e6:	685b      	ldr	r3, [r3, #4]
 800e1e8:	681a      	ldr	r2, [r3, #0]
 800e1ea:	42aa      	cmp	r2, r5
 800e1ec:	d9fa      	bls.n	800e1e4 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e1ee:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e1f0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e1f2:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800e1f4:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800e1f6:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800e1f8:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800e1fa:	6108      	str	r0, [r1, #16]
}
 800e1fc:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800e1fe:	6002      	str	r2, [r0, #0]
}
 800e200:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800e202:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e204:	6863      	ldr	r3, [r4, #4]
 800e206:	e7f2      	b.n	800e1ee <vListInsert+0x16>

0800e208 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800e208:	6903      	ldr	r3, [r0, #16]
{
 800e20a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e20c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800e210:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e212:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800e214:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800e216:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800e218:	bf08      	it	eq
 800e21a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800e21c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800e21e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800e222:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800e224:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800e226:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800e228:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800e22a:	6818      	ldr	r0, [r3, #0]
}
 800e22c:	4770      	bx	lr
 800e22e:	bf00      	nop

0800e230 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800e230:	4808      	ldr	r0, [pc, #32]	; (800e254 <prvPortStartFirstTask+0x24>)
 800e232:	6800      	ldr	r0, [r0, #0]
 800e234:	6800      	ldr	r0, [r0, #0]
 800e236:	f380 8808 	msr	MSP, r0
 800e23a:	f04f 0000 	mov.w	r0, #0
 800e23e:	f380 8814 	msr	CONTROL, r0
 800e242:	b662      	cpsie	i
 800e244:	b661      	cpsie	f
 800e246:	f3bf 8f4f 	dsb	sy
 800e24a:	f3bf 8f6f 	isb	sy
 800e24e:	df00      	svc	0
 800e250:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800e252:	0000      	.short	0x0000
 800e254:	e000ed08 	.word	0xe000ed08

0800e258 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800e258:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800e268 <vPortEnableVFP+0x10>
 800e25c:	6801      	ldr	r1, [r0, #0]
 800e25e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800e262:	6001      	str	r1, [r0, #0]
 800e264:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800e266:	0000      	.short	0x0000
 800e268:	e000ed88 	.word	0xe000ed88

0800e26c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800e26c:	4b0e      	ldr	r3, [pc, #56]	; (800e2a8 <prvTaskExitError+0x3c>)
 800e26e:	681b      	ldr	r3, [r3, #0]
{
 800e270:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800e272:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800e274:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800e276:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800e278:	d008      	beq.n	800e28c <prvTaskExitError+0x20>
 800e27a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e27e:	f383 8811 	msr	BASEPRI, r3
 800e282:	f3bf 8f6f 	isb	sy
 800e286:	f3bf 8f4f 	dsb	sy
 800e28a:	e7fe      	b.n	800e28a <prvTaskExitError+0x1e>
 800e28c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e290:	f383 8811 	msr	BASEPRI, r3
 800e294:	f3bf 8f6f 	isb	sy
 800e298:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e29c:	9b01      	ldr	r3, [sp, #4]
 800e29e:	2b00      	cmp	r3, #0
 800e2a0:	d0fc      	beq.n	800e29c <prvTaskExitError+0x30>
}
 800e2a2:	b002      	add	sp, #8
 800e2a4:	4770      	bx	lr
 800e2a6:	bf00      	nop
 800e2a8:	20000084 	.word	0x20000084

0800e2ac <pxPortInitialiseStack>:
{
 800e2ac:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e2ae:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e2b2:	4c07      	ldr	r4, [pc, #28]	; (800e2d0 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e2b4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e2b8:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e2bc:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e2c0:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e2c4:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800e2c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e2cc:	3844      	subs	r0, #68	; 0x44
 800e2ce:	4770      	bx	lr
 800e2d0:	0800e26d 	.word	0x0800e26d
	...

0800e2e0 <SVC_Handler>:
	__asm volatile (
 800e2e0:	4b07      	ldr	r3, [pc, #28]	; (800e300 <pxCurrentTCBConst2>)
 800e2e2:	6819      	ldr	r1, [r3, #0]
 800e2e4:	6808      	ldr	r0, [r1, #0]
 800e2e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2ea:	f380 8809 	msr	PSP, r0
 800e2ee:	f3bf 8f6f 	isb	sy
 800e2f2:	f04f 0000 	mov.w	r0, #0
 800e2f6:	f380 8811 	msr	BASEPRI, r0
 800e2fa:	4770      	bx	lr
 800e2fc:	f3af 8000 	nop.w

0800e300 <pxCurrentTCBConst2>:
 800e300:	20013200 	.word	0x20013200

0800e304 <vPortEnterCritical>:
 800e304:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e308:	f383 8811 	msr	BASEPRI, r3
 800e30c:	f3bf 8f6f 	isb	sy
 800e310:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e314:	4a0b      	ldr	r2, [pc, #44]	; (800e344 <vPortEnterCritical+0x40>)
 800e316:	6813      	ldr	r3, [r2, #0]
 800e318:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e31a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e31c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e31e:	d000      	beq.n	800e322 <vPortEnterCritical+0x1e>
}
 800e320:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e322:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e326:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800e32a:	b2db      	uxtb	r3, r3
 800e32c:	2b00      	cmp	r3, #0
 800e32e:	d0f7      	beq.n	800e320 <vPortEnterCritical+0x1c>
 800e330:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e334:	f383 8811 	msr	BASEPRI, r3
 800e338:	f3bf 8f6f 	isb	sy
 800e33c:	f3bf 8f4f 	dsb	sy
 800e340:	e7fe      	b.n	800e340 <vPortEnterCritical+0x3c>
 800e342:	bf00      	nop
 800e344:	20000084 	.word	0x20000084

0800e348 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e348:	4a08      	ldr	r2, [pc, #32]	; (800e36c <vPortExitCritical+0x24>)
 800e34a:	6813      	ldr	r3, [r2, #0]
 800e34c:	b943      	cbnz	r3, 800e360 <vPortExitCritical+0x18>
 800e34e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e352:	f383 8811 	msr	BASEPRI, r3
 800e356:	f3bf 8f6f 	isb	sy
 800e35a:	f3bf 8f4f 	dsb	sy
 800e35e:	e7fe      	b.n	800e35e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e360:	3b01      	subs	r3, #1
 800e362:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e364:	b90b      	cbnz	r3, 800e36a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e366:	f383 8811 	msr	BASEPRI, r3
}
 800e36a:	4770      	bx	lr
 800e36c:	20000084 	.word	0x20000084

0800e370 <PendSV_Handler>:
	__asm volatile
 800e370:	f3ef 8009 	mrs	r0, PSP
 800e374:	f3bf 8f6f 	isb	sy
 800e378:	4b15      	ldr	r3, [pc, #84]	; (800e3d0 <pxCurrentTCBConst>)
 800e37a:	681a      	ldr	r2, [r3, #0]
 800e37c:	f01e 0f10 	tst.w	lr, #16
 800e380:	bf08      	it	eq
 800e382:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e386:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e38a:	6010      	str	r0, [r2, #0]
 800e38c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e390:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e394:	f380 8811 	msr	BASEPRI, r0
 800e398:	f3bf 8f4f 	dsb	sy
 800e39c:	f3bf 8f6f 	isb	sy
 800e3a0:	f001 fd54 	bl	800fe4c <vTaskSwitchContext>
 800e3a4:	f04f 0000 	mov.w	r0, #0
 800e3a8:	f380 8811 	msr	BASEPRI, r0
 800e3ac:	bc09      	pop	{r0, r3}
 800e3ae:	6819      	ldr	r1, [r3, #0]
 800e3b0:	6808      	ldr	r0, [r1, #0]
 800e3b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3b6:	f01e 0f10 	tst.w	lr, #16
 800e3ba:	bf08      	it	eq
 800e3bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e3c0:	f380 8809 	msr	PSP, r0
 800e3c4:	f3bf 8f6f 	isb	sy
 800e3c8:	4770      	bx	lr
 800e3ca:	bf00      	nop
 800e3cc:	f3af 8000 	nop.w

0800e3d0 <pxCurrentTCBConst>:
 800e3d0:	20013200 	.word	0x20013200

0800e3d4 <xPortSysTickHandler>:
{
 800e3d4:	b508      	push	{r3, lr}
	__asm volatile
 800e3d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3da:	f383 8811 	msr	BASEPRI, r3
 800e3de:	f3bf 8f6f 	isb	sy
 800e3e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e3e6:	f001 fd21 	bl	800fe2c <xTaskIncrementTick>
 800e3ea:	b128      	cbz	r0, 800e3f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e3ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e3f8:	2300      	movs	r3, #0
 800e3fa:	f383 8811 	msr	BASEPRI, r3
}
 800e3fe:	bd08      	pop	{r3, pc}

0800e400 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e400:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e404:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e406:	4906      	ldr	r1, [pc, #24]	; (800e420 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e408:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e40a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e40c:	680b      	ldr	r3, [r1, #0]
 800e40e:	4905      	ldr	r1, [pc, #20]	; (800e424 <vPortSetupTimerInterrupt+0x24>)
 800e410:	fba1 1303 	umull	r1, r3, r1, r3
 800e414:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e416:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e418:	3b01      	subs	r3, #1
 800e41a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e41c:	6110      	str	r0, [r2, #16]
}
 800e41e:	4770      	bx	lr
 800e420:	20000078 	.word	0x20000078
 800e424:	10624dd3 	.word	0x10624dd3

0800e428 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e428:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e42c:	4a49      	ldr	r2, [pc, #292]	; (800e554 <xPortStartScheduler+0x12c>)
 800e42e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e432:	4291      	cmp	r1, r2
 800e434:	d043      	beq.n	800e4be <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e436:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e43a:	4b47      	ldr	r3, [pc, #284]	; (800e558 <xPortStartScheduler+0x130>)
 800e43c:	429a      	cmp	r2, r3
 800e43e:	d035      	beq.n	800e4ac <xPortStartScheduler+0x84>
{
 800e440:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e442:	4b46      	ldr	r3, [pc, #280]	; (800e55c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e444:	4846      	ldr	r0, [pc, #280]	; (800e560 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e446:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e448:	4c46      	ldr	r4, [pc, #280]	; (800e564 <xPortStartScheduler+0x13c>)
{
 800e44a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e44c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e44e:	b2d2      	uxtb	r2, r2
 800e450:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e452:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e454:	781b      	ldrb	r3, [r3, #0]
 800e456:	b2db      	uxtb	r3, r3
 800e458:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e45c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e460:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e464:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e468:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e46a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e46c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e46e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e470:	bf48      	it	mi
 800e472:	2206      	movmi	r2, #6
 800e474:	d511      	bpl.n	800e49a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e476:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e47a:	005b      	lsls	r3, r3, #1
 800e47c:	b2db      	uxtb	r3, r3
 800e47e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e482:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e486:	0609      	lsls	r1, r1, #24
 800e488:	4610      	mov	r0, r2
 800e48a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e48e:	d4f2      	bmi.n	800e476 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e490:	2803      	cmp	r0, #3
 800e492:	6020      	str	r0, [r4, #0]
 800e494:	f88d 3007 	strb.w	r3, [sp, #7]
 800e498:	d01a      	beq.n	800e4d0 <xPortStartScheduler+0xa8>
	__asm volatile
 800e49a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e49e:	f383 8811 	msr	BASEPRI, r3
 800e4a2:	f3bf 8f6f 	isb	sy
 800e4a6:	f3bf 8f4f 	dsb	sy
 800e4aa:	e7fe      	b.n	800e4aa <xPortStartScheduler+0x82>
 800e4ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4b0:	f383 8811 	msr	BASEPRI, r3
 800e4b4:	f3bf 8f6f 	isb	sy
 800e4b8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e4bc:	e7fe      	b.n	800e4bc <xPortStartScheduler+0x94>
 800e4be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4c2:	f383 8811 	msr	BASEPRI, r3
 800e4c6:	f3bf 8f6f 	isb	sy
 800e4ca:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e4ce:	e7fe      	b.n	800e4ce <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4d0:	9b02      	ldr	r3, [sp, #8]
 800e4d2:	4a22      	ldr	r2, [pc, #136]	; (800e55c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4d4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e4d8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4dc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e4de:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4e0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4e2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e4e6:	4c20      	ldr	r4, [pc, #128]	; (800e568 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e4ec:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e4f0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e4f4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e4f8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e4fc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e4fe:	f7ff ff7f 	bl	800e400 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e502:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e504:	f7ff fea8 	bl	800e258 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e508:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e50c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e510:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e514:	f7ff fe8c 	bl	800e230 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e518:	f001 fc98 	bl	800fe4c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e51c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e51e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e520:	3301      	adds	r3, #1
 800e522:	d008      	beq.n	800e536 <xPortStartScheduler+0x10e>
 800e524:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e528:	f383 8811 	msr	BASEPRI, r3
 800e52c:	f3bf 8f6f 	isb	sy
 800e530:	f3bf 8f4f 	dsb	sy
 800e534:	e7fe      	b.n	800e534 <xPortStartScheduler+0x10c>
 800e536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e53a:	f383 8811 	msr	BASEPRI, r3
 800e53e:	f3bf 8f6f 	isb	sy
 800e542:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e546:	9b03      	ldr	r3, [sp, #12]
 800e548:	2b00      	cmp	r3, #0
 800e54a:	d0fc      	beq.n	800e546 <xPortStartScheduler+0x11e>
}
 800e54c:	2000      	movs	r0, #0
 800e54e:	b004      	add	sp, #16
 800e550:	bd70      	pop	{r4, r5, r6, pc}
 800e552:	bf00      	nop
 800e554:	410fc271 	.word	0x410fc271
 800e558:	410fc270 	.word	0x410fc270
 800e55c:	e000e400 	.word	0xe000e400
 800e560:	200131b8 	.word	0x200131b8
 800e564:	200131bc 	.word	0x200131bc
 800e568:	20000084 	.word	0x20000084

0800e56c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e56c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e570:	2b0f      	cmp	r3, #15
 800e572:	d90e      	bls.n	800e592 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e574:	4911      	ldr	r1, [pc, #68]	; (800e5bc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e576:	4a12      	ldr	r2, [pc, #72]	; (800e5c0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e578:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e57a:	7812      	ldrb	r2, [r2, #0]
 800e57c:	429a      	cmp	r2, r3
 800e57e:	d908      	bls.n	800e592 <vPortValidateInterruptPriority+0x26>
 800e580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e584:	f383 8811 	msr	BASEPRI, r3
 800e588:	f3bf 8f6f 	isb	sy
 800e58c:	f3bf 8f4f 	dsb	sy
 800e590:	e7fe      	b.n	800e590 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e592:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e596:	4a0b      	ldr	r2, [pc, #44]	; (800e5c4 <vPortValidateInterruptPriority+0x58>)
 800e598:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e59c:	6812      	ldr	r2, [r2, #0]
 800e59e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e5a2:	4293      	cmp	r3, r2
 800e5a4:	d908      	bls.n	800e5b8 <vPortValidateInterruptPriority+0x4c>
 800e5a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5aa:	f383 8811 	msr	BASEPRI, r3
 800e5ae:	f3bf 8f6f 	isb	sy
 800e5b2:	f3bf 8f4f 	dsb	sy
 800e5b6:	e7fe      	b.n	800e5b6 <vPortValidateInterruptPriority+0x4a>
	}
 800e5b8:	4770      	bx	lr
 800e5ba:	bf00      	nop
 800e5bc:	e000e3f0 	.word	0xe000e3f0
 800e5c0:	200131b8 	.word	0x200131b8
 800e5c4:	200131bc 	.word	0x200131bc

0800e5c8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e5c8:	b570      	push	{r4, r5, r6, lr}
 800e5ca:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e5cc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e5ce:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e5d0:	b920      	cbnz	r0, 800e5dc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e5d2:	6825      	ldr	r5, [r4, #0]
 800e5d4:	b34d      	cbz	r5, 800e62a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5d6:	3601      	adds	r6, #1
 800e5d8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e5da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e5dc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e5de:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e5e0:	b97d      	cbnz	r5, 800e602 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e5e2:	6860      	ldr	r0, [r4, #4]
 800e5e4:	f01d fd67 	bl	802c0b6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e5e8:	6863      	ldr	r3, [r4, #4]
 800e5ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e5ec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5ee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e5f0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5f2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e5f4:	bf24      	itt	cs
 800e5f6:	6823      	ldrcs	r3, [r4, #0]
 800e5f8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5fa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e5fc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5fe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e600:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e602:	68e0      	ldr	r0, [r4, #12]
 800e604:	f01d fd57 	bl	802c0b6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e608:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e60a:	68e3      	ldr	r3, [r4, #12]
 800e60c:	4251      	negs	r1, r2
 800e60e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e610:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e612:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e614:	4293      	cmp	r3, r2
 800e616:	d202      	bcs.n	800e61e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e618:	68a3      	ldr	r3, [r4, #8]
 800e61a:	440b      	add	r3, r1
 800e61c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e61e:	2d02      	cmp	r5, #2
 800e620:	d008      	beq.n	800e634 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e622:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e624:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e626:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e628:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e62a:	68a0      	ldr	r0, [r4, #8]
 800e62c:	f001 fde0 	bl	80101f0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e630:	60a5      	str	r5, [r4, #8]
 800e632:	e7d0      	b.n	800e5d6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e634:	2e01      	cmp	r6, #1
 800e636:	bf38      	it	cc
 800e638:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e63a:	2000      	movs	r0, #0
 800e63c:	e7cc      	b.n	800e5d8 <prvCopyDataToQueue+0x10>
 800e63e:	bf00      	nop

0800e640 <xQueueGenericCreateStatic>:
	{
 800e640:	b530      	push	{r4, r5, lr}
 800e642:	b083      	sub	sp, #12
 800e644:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e648:	b940      	cbnz	r0, 800e65c <xQueueGenericCreateStatic+0x1c>
 800e64a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e64e:	f383 8811 	msr	BASEPRI, r3
 800e652:	f3bf 8f6f 	isb	sy
 800e656:	f3bf 8f4f 	dsb	sy
 800e65a:	e7fe      	b.n	800e65a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e65c:	461d      	mov	r5, r3
 800e65e:	b17b      	cbz	r3, 800e680 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e660:	b302      	cbz	r2, 800e6a4 <xQueueGenericCreateStatic+0x64>
 800e662:	b1b1      	cbz	r1, 800e692 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e664:	2350      	movs	r3, #80	; 0x50
 800e666:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e668:	9b01      	ldr	r3, [sp, #4]
 800e66a:	2b50      	cmp	r3, #80	; 0x50
 800e66c:	d023      	beq.n	800e6b6 <xQueueGenericCreateStatic+0x76>
 800e66e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e672:	f383 8811 	msr	BASEPRI, r3
 800e676:	f3bf 8f6f 	isb	sy
 800e67a:	f3bf 8f4f 	dsb	sy
 800e67e:	e7fe      	b.n	800e67e <xQueueGenericCreateStatic+0x3e>
 800e680:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e684:	f383 8811 	msr	BASEPRI, r3
 800e688:	f3bf 8f6f 	isb	sy
 800e68c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e690:	e7fe      	b.n	800e690 <xQueueGenericCreateStatic+0x50>
 800e692:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e696:	f383 8811 	msr	BASEPRI, r3
 800e69a:	f3bf 8f6f 	isb	sy
 800e69e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e6a2:	e7fe      	b.n	800e6a2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e6a4:	bb89      	cbnz	r1, 800e70a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e6a6:	2250      	movs	r2, #80	; 0x50
 800e6a8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e6aa:	9a01      	ldr	r2, [sp, #4]
 800e6ac:	2a50      	cmp	r2, #80	; 0x50
 800e6ae:	d1de      	bne.n	800e66e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e6b0:	9a01      	ldr	r2, [sp, #4]
 800e6b2:	462a      	mov	r2, r5
 800e6b4:	e000      	b.n	800e6b8 <xQueueGenericCreateStatic+0x78>
 800e6b6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e6b8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e6ba:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e6bc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e6c0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e6c4:	f7ff fe1e 	bl	800e304 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6c8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e6cc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e6ce:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6d0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6d4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6d6:	4401      	add	r1, r0
 800e6d8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e6da:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6dc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e6de:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e6e0:	21ff      	movs	r1, #255	; 0xff
 800e6e2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6e6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e6e8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e6ec:	f105 0010 	add.w	r0, r5, #16
 800e6f0:	f7ff fd52 	bl	800e198 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e6f4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e6f8:	f7ff fd4e 	bl	800e198 <vListInitialise>
	taskEXIT_CRITICAL();
 800e6fc:	f7ff fe24 	bl	800e348 <vPortExitCritical>
	}
 800e700:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e702:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e706:	b003      	add	sp, #12
 800e708:	bd30      	pop	{r4, r5, pc}
 800e70a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e70e:	f383 8811 	msr	BASEPRI, r3
 800e712:	f3bf 8f6f 	isb	sy
 800e716:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e71a:	e7fe      	b.n	800e71a <xQueueGenericCreateStatic+0xda>

0800e71c <xQueueGenericCreate>:
	{
 800e71c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e71e:	b940      	cbnz	r0, 800e732 <xQueueGenericCreate+0x16>
 800e720:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e724:	f383 8811 	msr	BASEPRI, r3
 800e728:	f3bf 8f6f 	isb	sy
 800e72c:	f3bf 8f4f 	dsb	sy
 800e730:	e7fe      	b.n	800e730 <xQueueGenericCreate+0x14>
 800e732:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e734:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e738:	3050      	adds	r0, #80	; 0x50
 800e73a:	460e      	mov	r6, r1
 800e73c:	4617      	mov	r7, r2
 800e73e:	f7ff fc0b 	bl	800df58 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e742:	4604      	mov	r4, r0
 800e744:	b340      	cbz	r0, 800e798 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e746:	2300      	movs	r3, #0
 800e748:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e74c:	b336      	cbz	r6, 800e79c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e74e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e752:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e754:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e758:	f7ff fdd4 	bl	800e304 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e75c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e760:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e762:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e764:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e768:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e76a:	440a      	add	r2, r1
 800e76c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e76e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e770:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e772:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e774:	22ff      	movs	r2, #255	; 0xff
 800e776:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e77a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e77c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e780:	f104 0010 	add.w	r0, r4, #16
 800e784:	f7ff fd08 	bl	800e198 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e788:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e78c:	f7ff fd04 	bl	800e198 <vListInitialise>
	taskEXIT_CRITICAL();
 800e790:	f7ff fdda 	bl	800e348 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e794:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e798:	4620      	mov	r0, r4
 800e79a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e79c:	4603      	mov	r3, r0
 800e79e:	e7d8      	b.n	800e752 <xQueueGenericCreate+0x36>

0800e7a0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e7a0:	b940      	cbnz	r0, 800e7b4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e7a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a6:	f383 8811 	msr	BASEPRI, r3
 800e7aa:	f3bf 8f6f 	isb	sy
 800e7ae:	f3bf 8f4f 	dsb	sy
 800e7b2:	e7fe      	b.n	800e7b2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e7b4:	4288      	cmp	r0, r1
 800e7b6:	d208      	bcs.n	800e7ca <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e7b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7bc:	f383 8811 	msr	BASEPRI, r3
 800e7c0:	f3bf 8f6f 	isb	sy
 800e7c4:	f3bf 8f4f 	dsb	sy
 800e7c8:	e7fe      	b.n	800e7c8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e7ca:	b530      	push	{r4, r5, lr}
 800e7cc:	4615      	mov	r5, r2
 800e7ce:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e7d0:	2a00      	cmp	r2, #0
 800e7d2:	d03c      	beq.n	800e84e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e7d4:	2350      	movs	r3, #80	; 0x50
 800e7d6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e7d8:	9b03      	ldr	r3, [sp, #12]
 800e7da:	2b50      	cmp	r3, #80	; 0x50
 800e7dc:	d008      	beq.n	800e7f0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e2:	f383 8811 	msr	BASEPRI, r3
 800e7e6:	f3bf 8f6f 	isb	sy
 800e7ea:	f3bf 8f4f 	dsb	sy
 800e7ee:	e7fe      	b.n	800e7ee <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e7f0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e7f2:	2301      	movs	r3, #1
 800e7f4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e7f8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e7fa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e7fe:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e800:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e802:	f7ff fd7f 	bl	800e304 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e806:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e80a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e80c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e80e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e812:	1ac3      	subs	r3, r0, r3
 800e814:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e816:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e818:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e81c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e820:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e822:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e824:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e828:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e82a:	f105 0010 	add.w	r0, r5, #16
 800e82e:	f7ff fcb3 	bl	800e198 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e832:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e836:	f7ff fcaf 	bl	800e198 <vListInitialise>
	taskEXIT_CRITICAL();
 800e83a:	f7ff fd85 	bl	800e348 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e83e:	9901      	ldr	r1, [sp, #4]
 800e840:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e842:	2302      	movs	r3, #2
	}
 800e844:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e846:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e84a:	b005      	add	sp, #20
 800e84c:	bd30      	pop	{r4, r5, pc}
 800e84e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e852:	f383 8811 	msr	BASEPRI, r3
 800e856:	f3bf 8f6f 	isb	sy
 800e85a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e85e:	e7fe      	b.n	800e85e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e860 <xQueueCreateCountingSemaphore>:
	{
 800e860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e862:	b940      	cbnz	r0, 800e876 <xQueueCreateCountingSemaphore+0x16>
 800e864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e868:	f383 8811 	msr	BASEPRI, r3
 800e86c:	f3bf 8f6f 	isb	sy
 800e870:	f3bf 8f4f 	dsb	sy
 800e874:	e7fe      	b.n	800e874 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e876:	4288      	cmp	r0, r1
 800e878:	460e      	mov	r6, r1
 800e87a:	4604      	mov	r4, r0
 800e87c:	d208      	bcs.n	800e890 <xQueueCreateCountingSemaphore+0x30>
 800e87e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e882:	f383 8811 	msr	BASEPRI, r3
 800e886:	f3bf 8f6f 	isb	sy
 800e88a:	f3bf 8f4f 	dsb	sy
 800e88e:	e7fe      	b.n	800e88e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e890:	2050      	movs	r0, #80	; 0x50
 800e892:	f7ff fb61 	bl	800df58 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e896:	4605      	mov	r5, r0
 800e898:	b330      	cbz	r0, 800e8e8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e89a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e89c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e8a0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e8a4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e8a6:	f7ff fd2d 	bl	800e304 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8aa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e8ae:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e8b0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8b2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8b6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8b8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8ba:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8bc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e8be:	22ff      	movs	r2, #255	; 0xff
 800e8c0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8c4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e8c6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e8c8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e8cc:	f105 0010 	add.w	r0, r5, #16
 800e8d0:	f7ff fc62 	bl	800e198 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e8d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e8d8:	f7ff fc5e 	bl	800e198 <vListInitialise>
	taskEXIT_CRITICAL();
 800e8dc:	f7ff fd34 	bl	800e348 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e8e0:	2302      	movs	r3, #2
 800e8e2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e8e6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e8e8:	4628      	mov	r0, r5
 800e8ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e8ec <xQueueGenericSend>:
{
 800e8ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e8f0:	b085      	sub	sp, #20
 800e8f2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e8f4:	2800      	cmp	r0, #0
 800e8f6:	f000 80a4 	beq.w	800ea42 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e8fa:	4688      	mov	r8, r1
 800e8fc:	461f      	mov	r7, r3
 800e8fe:	4604      	mov	r4, r0
 800e900:	2900      	cmp	r1, #0
 800e902:	f000 8091 	beq.w	800ea28 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e906:	2f02      	cmp	r7, #2
 800e908:	d10b      	bne.n	800e922 <xQueueGenericSend+0x36>
 800e90a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e90c:	2b01      	cmp	r3, #1
 800e90e:	d008      	beq.n	800e922 <xQueueGenericSend+0x36>
 800e910:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e914:	f383 8811 	msr	BASEPRI, r3
 800e918:	f3bf 8f6f 	isb	sy
 800e91c:	f3bf 8f4f 	dsb	sy
 800e920:	e7fe      	b.n	800e920 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e922:	f001 fc0f 	bl	8010144 <xTaskGetSchedulerState>
 800e926:	4605      	mov	r5, r0
 800e928:	2800      	cmp	r0, #0
 800e92a:	f000 8093 	beq.w	800ea54 <xQueueGenericSend+0x168>
 800e92e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e930:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e934:	f7ff fce6 	bl	800e304 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e938:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e93a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e93c:	429a      	cmp	r2, r3
 800e93e:	f0c0 80ef 	bcc.w	800eb20 <xQueueGenericSend+0x234>
 800e942:	2f02      	cmp	r7, #2
 800e944:	f000 80ec 	beq.w	800eb20 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e948:	9801      	ldr	r0, [sp, #4]
 800e94a:	2800      	cmp	r0, #0
 800e94c:	f000 8101 	beq.w	800eb52 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e950:	2d00      	cmp	r5, #0
 800e952:	f000 80e1 	beq.w	800eb18 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e956:	f7ff fcf7 	bl	800e348 <vPortExitCritical>
		vTaskSuspendAll();
 800e95a:	f001 fa49 	bl	800fdf0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e95e:	f7ff fcd1 	bl	800e304 <vPortEnterCritical>
 800e962:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e966:	2bff      	cmp	r3, #255	; 0xff
 800e968:	bf04      	itt	eq
 800e96a:	2300      	moveq	r3, #0
 800e96c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e970:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e974:	2bff      	cmp	r3, #255	; 0xff
 800e976:	bf04      	itt	eq
 800e978:	2300      	moveq	r3, #0
 800e97a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e97e:	f7ff fce3 	bl	800e348 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e982:	a901      	add	r1, sp, #4
 800e984:	a802      	add	r0, sp, #8
 800e986:	f001 fb8f 	bl	80100a8 <xTaskCheckForTimeOut>
 800e98a:	2800      	cmp	r0, #0
 800e98c:	f040 80e6 	bne.w	800eb5c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e990:	f7ff fcb8 	bl	800e304 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e994:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e996:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e998:	429a      	cmp	r2, r3
 800e99a:	d068      	beq.n	800ea6e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e99c:	f7ff fcd4 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9a0:	f7ff fcb0 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9a4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e9a8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9aa:	2d00      	cmp	r5, #0
 800e9ac:	dc04      	bgt.n	800e9b8 <xQueueGenericSend+0xcc>
 800e9ae:	e011      	b.n	800e9d4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e9b0:	1e6a      	subs	r2, r5, #1
 800e9b2:	b2d3      	uxtb	r3, r2
 800e9b4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9b6:	b16b      	cbz	r3, 800e9d4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9bc:	b153      	cbz	r3, 800e9d4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9be:	f001 fb1f 	bl	8010000 <xTaskRemoveFromEventList>
 800e9c2:	2800      	cmp	r0, #0
 800e9c4:	d0f4      	beq.n	800e9b0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e9c6:	f001 fbb7 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800e9ca:	1e6a      	subs	r2, r5, #1
 800e9cc:	b2d3      	uxtb	r3, r2
 800e9ce:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d1f1      	bne.n	800e9b8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9d4:	23ff      	movs	r3, #255	; 0xff
 800e9d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9da:	f7ff fcb5 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9de:	f7ff fc91 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9e2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e9e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9e8:	2d00      	cmp	r5, #0
 800e9ea:	dd14      	ble.n	800ea16 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9ec:	f104 0910 	add.w	r9, r4, #16
 800e9f0:	e003      	b.n	800e9fa <xQueueGenericSend+0x10e>
				--cRxLock;
 800e9f2:	1e6a      	subs	r2, r5, #1
 800e9f4:	b2d3      	uxtb	r3, r2
 800e9f6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9f8:	b16b      	cbz	r3, 800ea16 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9fe:	b153      	cbz	r3, 800ea16 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea00:	f001 fafe 	bl	8010000 <xTaskRemoveFromEventList>
 800ea04:	2800      	cmp	r0, #0
 800ea06:	d0f4      	beq.n	800e9f2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800ea08:	f001 fb96 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800ea0c:	1e6a      	subs	r2, r5, #1
 800ea0e:	b2d3      	uxtb	r3, r2
 800ea10:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea12:	2b00      	cmp	r3, #0
 800ea14:	d1f1      	bne.n	800e9fa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea16:	23ff      	movs	r3, #255	; 0xff
 800ea18:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea1c:	f7ff fc94 	bl	800e348 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ea20:	f001 f9ee 	bl	800fe00 <xTaskResumeAll>
 800ea24:	2501      	movs	r5, #1
 800ea26:	e785      	b.n	800e934 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea28:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ea2a:	2b00      	cmp	r3, #0
 800ea2c:	f43f af6b 	beq.w	800e906 <xQueueGenericSend+0x1a>
 800ea30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea34:	f383 8811 	msr	BASEPRI, r3
 800ea38:	f3bf 8f6f 	isb	sy
 800ea3c:	f3bf 8f4f 	dsb	sy
 800ea40:	e7fe      	b.n	800ea40 <xQueueGenericSend+0x154>
 800ea42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea46:	f383 8811 	msr	BASEPRI, r3
 800ea4a:	f3bf 8f6f 	isb	sy
 800ea4e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ea52:	e7fe      	b.n	800ea52 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea54:	9b01      	ldr	r3, [sp, #4]
 800ea56:	2b00      	cmp	r3, #0
 800ea58:	f43f af6a 	beq.w	800e930 <xQueueGenericSend+0x44>
 800ea5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea60:	f383 8811 	msr	BASEPRI, r3
 800ea64:	f3bf 8f6f 	isb	sy
 800ea68:	f3bf 8f4f 	dsb	sy
 800ea6c:	e7fe      	b.n	800ea6c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ea6e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800ea72:	f7ff fc69 	bl	800e348 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ea76:	9901      	ldr	r1, [sp, #4]
 800ea78:	4648      	mov	r0, r9
 800ea7a:	f001 fa33 	bl	800fee4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ea7e:	f7ff fc41 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea82:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea86:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea88:	2d00      	cmp	r5, #0
 800ea8a:	dc04      	bgt.n	800ea96 <xQueueGenericSend+0x1aa>
 800ea8c:	e011      	b.n	800eab2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800ea8e:	1e6b      	subs	r3, r5, #1
 800ea90:	b2da      	uxtb	r2, r3
 800ea92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea94:	b16a      	cbz	r2, 800eab2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea96:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea98:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea9a:	b153      	cbz	r3, 800eab2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea9c:	f001 fab0 	bl	8010000 <xTaskRemoveFromEventList>
 800eaa0:	2800      	cmp	r0, #0
 800eaa2:	d0f4      	beq.n	800ea8e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800eaa4:	f001 fb48 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800eaa8:	1e6b      	subs	r3, r5, #1
 800eaaa:	b2da      	uxtb	r2, r3
 800eaac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eaae:	2a00      	cmp	r2, #0
 800eab0:	d1f1      	bne.n	800ea96 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800eab2:	23ff      	movs	r3, #255	; 0xff
 800eab4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eab8:	f7ff fc46 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eabc:	f7ff fc22 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eac0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eac4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eac6:	2d00      	cmp	r5, #0
 800eac8:	dc04      	bgt.n	800ead4 <xQueueGenericSend+0x1e8>
 800eaca:	e011      	b.n	800eaf0 <xQueueGenericSend+0x204>
				--cRxLock;
 800eacc:	1e6b      	subs	r3, r5, #1
 800eace:	b2da      	uxtb	r2, r3
 800ead0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ead2:	b16a      	cbz	r2, 800eaf0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ead4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ead6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ead8:	b153      	cbz	r3, 800eaf0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eada:	f001 fa91 	bl	8010000 <xTaskRemoveFromEventList>
 800eade:	2800      	cmp	r0, #0
 800eae0:	d0f4      	beq.n	800eacc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800eae2:	f001 fb29 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800eae6:	1e6b      	subs	r3, r5, #1
 800eae8:	b2da      	uxtb	r2, r3
 800eaea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaec:	2a00      	cmp	r2, #0
 800eaee:	d1f1      	bne.n	800ead4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800eaf0:	23ff      	movs	r3, #255	; 0xff
 800eaf2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eaf6:	f7ff fc27 	bl	800e348 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eafa:	f001 f981 	bl	800fe00 <xTaskResumeAll>
 800eafe:	2800      	cmp	r0, #0
 800eb00:	d190      	bne.n	800ea24 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800eb02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb0e:	f3bf 8f4f 	dsb	sy
 800eb12:	f3bf 8f6f 	isb	sy
 800eb16:	e785      	b.n	800ea24 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eb18:	a802      	add	r0, sp, #8
 800eb1a:	f001 fab9 	bl	8010090 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800eb1e:	e71a      	b.n	800e956 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800eb20:	463a      	mov	r2, r7
 800eb22:	4641      	mov	r1, r8
 800eb24:	4620      	mov	r0, r4
 800eb26:	f7ff fd4f 	bl	800e5c8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800eb2c:	2b00      	cmp	r3, #0
 800eb2e:	d153      	bne.n	800ebd8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800eb30:	b148      	cbz	r0, 800eb46 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800eb32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb3e:	f3bf 8f4f 	dsb	sy
 800eb42:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800eb46:	f7ff fbff 	bl	800e348 <vPortExitCritical>
				return pdPASS;
 800eb4a:	2001      	movs	r0, #1
}
 800eb4c:	b005      	add	sp, #20
 800eb4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb52:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800eb54:	f7ff fbf8 	bl	800e348 <vPortExitCritical>
					return errQUEUE_FULL;
 800eb58:	9800      	ldr	r0, [sp, #0]
 800eb5a:	e7f7      	b.n	800eb4c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800eb5c:	f7ff fbd2 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb60:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb66:	2d00      	cmp	r5, #0
 800eb68:	dd10      	ble.n	800eb8c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb6a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800eb6e:	e003      	b.n	800eb78 <xQueueGenericSend+0x28c>
			--cTxLock;
 800eb70:	1e6b      	subs	r3, r5, #1
 800eb72:	b2da      	uxtb	r2, r3
 800eb74:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb76:	b14a      	cbz	r2, 800eb8c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb78:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb7a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb7c:	b133      	cbz	r3, 800eb8c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb7e:	f001 fa3f 	bl	8010000 <xTaskRemoveFromEventList>
 800eb82:	2800      	cmp	r0, #0
 800eb84:	d0f4      	beq.n	800eb70 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800eb86:	f001 fad7 	bl	8010138 <vTaskMissedYield>
 800eb8a:	e7f1      	b.n	800eb70 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb8c:	23ff      	movs	r3, #255	; 0xff
 800eb8e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb92:	f7ff fbd9 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb96:	f7ff fbb5 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb9e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eba0:	2d00      	cmp	r5, #0
 800eba2:	dd10      	ble.n	800ebc6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eba4:	f104 0610 	add.w	r6, r4, #16
 800eba8:	e003      	b.n	800ebb2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800ebaa:	1e6b      	subs	r3, r5, #1
 800ebac:	b2da      	uxtb	r2, r3
 800ebae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebb0:	b14a      	cbz	r2, 800ebc6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebb2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebb4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebb6:	b133      	cbz	r3, 800ebc6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebb8:	f001 fa22 	bl	8010000 <xTaskRemoveFromEventList>
 800ebbc:	2800      	cmp	r0, #0
 800ebbe:	d0f4      	beq.n	800ebaa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800ebc0:	f001 faba 	bl	8010138 <vTaskMissedYield>
 800ebc4:	e7f1      	b.n	800ebaa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800ebc6:	23ff      	movs	r3, #255	; 0xff
 800ebc8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ebcc:	f7ff fbbc 	bl	800e348 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ebd0:	f001 f916 	bl	800fe00 <xTaskResumeAll>
			return errQUEUE_FULL;
 800ebd4:	2000      	movs	r0, #0
 800ebd6:	e7b9      	b.n	800eb4c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ebd8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ebdc:	f001 fa10 	bl	8010000 <xTaskRemoveFromEventList>
 800ebe0:	2800      	cmp	r0, #0
 800ebe2:	d0b0      	beq.n	800eb46 <xQueueGenericSend+0x25a>
 800ebe4:	e7a5      	b.n	800eb32 <xQueueGenericSend+0x246>
 800ebe6:	bf00      	nop

0800ebe8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800ebe8:	2800      	cmp	r0, #0
 800ebea:	d04b      	beq.n	800ec84 <xQueueGenericSendFromISR+0x9c>
{
 800ebec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebf0:	460e      	mov	r6, r1
 800ebf2:	4617      	mov	r7, r2
 800ebf4:	461d      	mov	r5, r3
 800ebf6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ebf8:	b321      	cbz	r1, 800ec44 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ebfa:	2d02      	cmp	r5, #2
 800ebfc:	d10b      	bne.n	800ec16 <xQueueGenericSendFromISR+0x2e>
 800ebfe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec00:	2b01      	cmp	r3, #1
 800ec02:	d008      	beq.n	800ec16 <xQueueGenericSendFromISR+0x2e>
 800ec04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec08:	f383 8811 	msr	BASEPRI, r3
 800ec0c:	f3bf 8f6f 	isb	sy
 800ec10:	f3bf 8f4f 	dsb	sy
 800ec14:	e7fe      	b.n	800ec14 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ec16:	f7ff fca9 	bl	800e56c <vPortValidateInterruptPriority>
	__asm volatile
 800ec1a:	f3ef 8811 	mrs	r8, BASEPRI
 800ec1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec22:	f383 8811 	msr	BASEPRI, r3
 800ec26:	f3bf 8f6f 	isb	sy
 800ec2a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ec2e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec30:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec32:	429a      	cmp	r2, r3
 800ec34:	d312      	bcc.n	800ec5c <xQueueGenericSendFromISR+0x74>
 800ec36:	2d02      	cmp	r5, #2
 800ec38:	d010      	beq.n	800ec5c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800ec3a:	2000      	movs	r0, #0
	__asm volatile
 800ec3c:	f388 8811 	msr	BASEPRI, r8
}
 800ec40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec44:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ec46:	2b00      	cmp	r3, #0
 800ec48:	d0d7      	beq.n	800ebfa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800ec4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec4e:	f383 8811 	msr	BASEPRI, r3
 800ec52:	f3bf 8f6f 	isb	sy
 800ec56:	f3bf 8f4f 	dsb	sy
 800ec5a:	e7fe      	b.n	800ec5a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec5c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800ec5e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec62:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec64:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800ec66:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec68:	4620      	mov	r0, r4
 800ec6a:	f7ff fcad 	bl	800e5c8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ec6e:	1c6b      	adds	r3, r5, #1
 800ec70:	d011      	beq.n	800ec96 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ec72:	1c6b      	adds	r3, r5, #1
 800ec74:	b25b      	sxtb	r3, r3
 800ec76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800ec7a:	2001      	movs	r0, #1
	__asm volatile
 800ec7c:	f388 8811 	msr	BASEPRI, r8
}
 800ec80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800ec84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec88:	f383 8811 	msr	BASEPRI, r3
 800ec8c:	f3bf 8f6f 	isb	sy
 800ec90:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ec94:	e7fe      	b.n	800ec94 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ec98:	2b00      	cmp	r3, #0
 800ec9a:	d0ee      	beq.n	800ec7a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800eca0:	f001 f9ae 	bl	8010000 <xTaskRemoveFromEventList>
 800eca4:	2800      	cmp	r0, #0
 800eca6:	d0e8      	beq.n	800ec7a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800eca8:	2f00      	cmp	r7, #0
 800ecaa:	d0e6      	beq.n	800ec7a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ecac:	2001      	movs	r0, #1
 800ecae:	6038      	str	r0, [r7, #0]
 800ecb0:	e7c4      	b.n	800ec3c <xQueueGenericSendFromISR+0x54>
 800ecb2:	bf00      	nop

0800ecb4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800ecb4:	b370      	cbz	r0, 800ed14 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ecb6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800ecb8:	b570      	push	{r4, r5, r6, lr}
 800ecba:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800ecbc:	b143      	cbz	r3, 800ecd0 <xQueueGiveFromISR+0x1c>
 800ecbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecc2:	f383 8811 	msr	BASEPRI, r3
 800ecc6:	f3bf 8f6f 	isb	sy
 800ecca:	f3bf 8f4f 	dsb	sy
 800ecce:	e7fe      	b.n	800ecce <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ecd0:	6803      	ldr	r3, [r0, #0]
 800ecd2:	460c      	mov	r4, r1
 800ecd4:	b33b      	cbz	r3, 800ed26 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ecd6:	f7ff fc49 	bl	800e56c <vPortValidateInterruptPriority>
	__asm volatile
 800ecda:	f3ef 8511 	mrs	r5, BASEPRI
 800ecde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece2:	f383 8811 	msr	BASEPRI, r3
 800ece6:	f3bf 8f6f 	isb	sy
 800ecea:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ecee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ecf0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ecf2:	429a      	cmp	r2, r3
 800ecf4:	d923      	bls.n	800ed3e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ecf6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ecfa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800ecfc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ecfe:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ed00:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800ed02:	d020      	beq.n	800ed46 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ed04:	3301      	adds	r3, #1
 800ed06:	b25b      	sxtb	r3, r3
 800ed08:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800ed0c:	2001      	movs	r0, #1
	__asm volatile
 800ed0e:	f385 8811 	msr	BASEPRI, r5
}
 800ed12:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800ed14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed18:	f383 8811 	msr	BASEPRI, r3
 800ed1c:	f3bf 8f6f 	isb	sy
 800ed20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ed24:	e7fe      	b.n	800ed24 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ed26:	6883      	ldr	r3, [r0, #8]
 800ed28:	2b00      	cmp	r3, #0
 800ed2a:	d0d4      	beq.n	800ecd6 <xQueueGiveFromISR+0x22>
 800ed2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed30:	f383 8811 	msr	BASEPRI, r3
 800ed34:	f3bf 8f6f 	isb	sy
 800ed38:	f3bf 8f4f 	dsb	sy
 800ed3c:	e7fe      	b.n	800ed3c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800ed3e:	2000      	movs	r0, #0
	__asm volatile
 800ed40:	f385 8811 	msr	BASEPRI, r5
}
 800ed44:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed46:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ed48:	2b00      	cmp	r3, #0
 800ed4a:	d0df      	beq.n	800ed0c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed4c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800ed50:	f001 f956 	bl	8010000 <xTaskRemoveFromEventList>
 800ed54:	2800      	cmp	r0, #0
 800ed56:	d0d9      	beq.n	800ed0c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800ed58:	2c00      	cmp	r4, #0
 800ed5a:	d0d7      	beq.n	800ed0c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ed5c:	2001      	movs	r0, #1
 800ed5e:	6020      	str	r0, [r4, #0]
 800ed60:	e7ee      	b.n	800ed40 <xQueueGiveFromISR+0x8c>
 800ed62:	bf00      	nop

0800ed64 <xQueueReceive>:
{
 800ed64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed68:	b085      	sub	sp, #20
 800ed6a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ed6c:	2800      	cmp	r0, #0
 800ed6e:	f000 815c 	beq.w	800f02a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ed72:	460f      	mov	r7, r1
 800ed74:	4604      	mov	r4, r0
 800ed76:	2900      	cmp	r1, #0
 800ed78:	d079      	beq.n	800ee6e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ed7a:	f001 f9e3 	bl	8010144 <xTaskGetSchedulerState>
 800ed7e:	2800      	cmp	r0, #0
 800ed80:	f000 8081 	beq.w	800ee86 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800ed84:	f7ff fabe 	bl	800e304 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ed88:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ed8a:	2d00      	cmp	r5, #0
 800ed8c:	f040 8138 	bne.w	800f000 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ed90:	9b01      	ldr	r3, [sp, #4]
 800ed92:	2b00      	cmp	r3, #0
 800ed94:	f000 80d5 	beq.w	800ef42 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ed98:	a802      	add	r0, sp, #8
 800ed9a:	f001 f979 	bl	8010090 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800ed9e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eda0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800eda4:	f7ff fad0 	bl	800e348 <vPortExitCritical>
		vTaskSuspendAll();
 800eda8:	f001 f822 	bl	800fdf0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800edac:	f7ff faaa 	bl	800e304 <vPortEnterCritical>
 800edb0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800edb4:	2bff      	cmp	r3, #255	; 0xff
 800edb6:	bf08      	it	eq
 800edb8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800edbc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800edc0:	2bff      	cmp	r3, #255	; 0xff
 800edc2:	bf08      	it	eq
 800edc4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800edc8:	f7ff fabe 	bl	800e348 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800edcc:	a901      	add	r1, sp, #4
 800edce:	a802      	add	r0, sp, #8
 800edd0:	f001 f96a 	bl	80100a8 <xTaskCheckForTimeOut>
 800edd4:	2800      	cmp	r0, #0
 800edd6:	d163      	bne.n	800eea0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800edd8:	f7ff fa94 	bl	800e304 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eddc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800edde:	2b00      	cmp	r3, #0
 800ede0:	f000 80b5 	beq.w	800ef4e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800ede4:	f7ff fab0 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ede8:	f7ff fa8c 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800edec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800edf0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edf2:	2d00      	cmp	r5, #0
 800edf4:	dc04      	bgt.n	800ee00 <xQueueReceive+0x9c>
 800edf6:	e011      	b.n	800ee1c <xQueueReceive+0xb8>
			--cTxLock;
 800edf8:	1e6b      	subs	r3, r5, #1
 800edfa:	b2da      	uxtb	r2, r3
 800edfc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edfe:	b16a      	cbz	r2, 800ee1c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee00:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee02:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee04:	b153      	cbz	r3, 800ee1c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee06:	f001 f8fb 	bl	8010000 <xTaskRemoveFromEventList>
 800ee0a:	2800      	cmp	r0, #0
 800ee0c:	d0f4      	beq.n	800edf8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800ee0e:	f001 f993 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800ee12:	1e6b      	subs	r3, r5, #1
 800ee14:	b2da      	uxtb	r2, r3
 800ee16:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee18:	2a00      	cmp	r2, #0
 800ee1a:	d1f1      	bne.n	800ee00 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee1c:	23ff      	movs	r3, #255	; 0xff
 800ee1e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ee22:	f7ff fa91 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee26:	f7ff fa6d 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ee2a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee30:	2d00      	cmp	r5, #0
 800ee32:	dd14      	ble.n	800ee5e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee34:	f104 0910 	add.w	r9, r4, #16
 800ee38:	e003      	b.n	800ee42 <xQueueReceive+0xde>
				--cRxLock;
 800ee3a:	1e6b      	subs	r3, r5, #1
 800ee3c:	b2da      	uxtb	r2, r3
 800ee3e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee40:	b16a      	cbz	r2, 800ee5e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee42:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee44:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee46:	b153      	cbz	r3, 800ee5e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee48:	f001 f8da 	bl	8010000 <xTaskRemoveFromEventList>
 800ee4c:	2800      	cmp	r0, #0
 800ee4e:	d0f4      	beq.n	800ee3a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800ee50:	f001 f972 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800ee54:	1e6b      	subs	r3, r5, #1
 800ee56:	b2da      	uxtb	r2, r3
 800ee58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee5a:	2a00      	cmp	r2, #0
 800ee5c:	d1f1      	bne.n	800ee42 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee5e:	23ff      	movs	r3, #255	; 0xff
 800ee60:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee64:	f7ff fa70 	bl	800e348 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ee68:	f000 ffca 	bl	800fe00 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ee6c:	e060      	b.n	800ef30 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee6e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ee70:	2b00      	cmp	r3, #0
 800ee72:	d082      	beq.n	800ed7a <xQueueReceive+0x16>
	__asm volatile
 800ee74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee78:	f383 8811 	msr	BASEPRI, r3
 800ee7c:	f3bf 8f6f 	isb	sy
 800ee80:	f3bf 8f4f 	dsb	sy
 800ee84:	e7fe      	b.n	800ee84 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ee86:	9b01      	ldr	r3, [sp, #4]
 800ee88:	2b00      	cmp	r3, #0
 800ee8a:	f43f af7b 	beq.w	800ed84 <xQueueReceive+0x20>
 800ee8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee92:	f383 8811 	msr	BASEPRI, r3
 800ee96:	f3bf 8f6f 	isb	sy
 800ee9a:	f3bf 8f4f 	dsb	sy
 800ee9e:	e7fe      	b.n	800ee9e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800eea0:	f7ff fa30 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eea4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eea8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eeaa:	2d00      	cmp	r5, #0
 800eeac:	dc04      	bgt.n	800eeb8 <xQueueReceive+0x154>
 800eeae:	e011      	b.n	800eed4 <xQueueReceive+0x170>
			--cTxLock;
 800eeb0:	1e6b      	subs	r3, r5, #1
 800eeb2:	b2da      	uxtb	r2, r3
 800eeb4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eeb6:	b16a      	cbz	r2, 800eed4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eeb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eeba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eebc:	b153      	cbz	r3, 800eed4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eebe:	f001 f89f 	bl	8010000 <xTaskRemoveFromEventList>
 800eec2:	2800      	cmp	r0, #0
 800eec4:	d0f4      	beq.n	800eeb0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800eec6:	f001 f937 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800eeca:	1e6b      	subs	r3, r5, #1
 800eecc:	b2da      	uxtb	r2, r3
 800eece:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eed0:	2a00      	cmp	r2, #0
 800eed2:	d1f1      	bne.n	800eeb8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800eed4:	23ff      	movs	r3, #255	; 0xff
 800eed6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eeda:	f7ff fa35 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eede:	f7ff fa11 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eee2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eee6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eee8:	2d00      	cmp	r5, #0
 800eeea:	dd14      	ble.n	800ef16 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeec:	f104 0910 	add.w	r9, r4, #16
 800eef0:	e003      	b.n	800eefa <xQueueReceive+0x196>
				--cRxLock;
 800eef2:	1e6b      	subs	r3, r5, #1
 800eef4:	b2da      	uxtb	r2, r3
 800eef6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eef8:	b16a      	cbz	r2, 800ef16 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eefa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eefc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eefe:	b153      	cbz	r3, 800ef16 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef00:	f001 f87e 	bl	8010000 <xTaskRemoveFromEventList>
 800ef04:	2800      	cmp	r0, #0
 800ef06:	d0f4      	beq.n	800eef2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ef08:	f001 f916 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800ef0c:	1e6b      	subs	r3, r5, #1
 800ef0e:	b2da      	uxtb	r2, r3
 800ef10:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef12:	2a00      	cmp	r2, #0
 800ef14:	d1f1      	bne.n	800eefa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef16:	23ff      	movs	r3, #255	; 0xff
 800ef18:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ef1c:	f7ff fa14 	bl	800e348 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ef20:	f000 ff6e 	bl	800fe00 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ef24:	f7ff f9ee 	bl	800e304 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ef28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ef2a:	b153      	cbz	r3, 800ef42 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ef2c:	f7ff fa0c 	bl	800e348 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ef30:	f7ff f9e8 	bl	800e304 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ef34:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef36:	2d00      	cmp	r5, #0
 800ef38:	d162      	bne.n	800f000 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ef3a:	9b01      	ldr	r3, [sp, #4]
 800ef3c:	2b00      	cmp	r3, #0
 800ef3e:	f47f af31 	bne.w	800eda4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ef42:	f7ff fa01 	bl	800e348 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ef46:	2000      	movs	r0, #0
}
 800ef48:	b005      	add	sp, #20
 800ef4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ef4e:	f7ff f9fb 	bl	800e348 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ef52:	9901      	ldr	r1, [sp, #4]
 800ef54:	4630      	mov	r0, r6
 800ef56:	f000 ffc5 	bl	800fee4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ef5a:	f7ff f9d3 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef5e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ef62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef64:	2d00      	cmp	r5, #0
 800ef66:	dc04      	bgt.n	800ef72 <xQueueReceive+0x20e>
 800ef68:	e011      	b.n	800ef8e <xQueueReceive+0x22a>
			--cTxLock;
 800ef6a:	1e6b      	subs	r3, r5, #1
 800ef6c:	b2da      	uxtb	r2, r3
 800ef6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef70:	b16a      	cbz	r2, 800ef8e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef72:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef74:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef76:	b153      	cbz	r3, 800ef8e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef78:	f001 f842 	bl	8010000 <xTaskRemoveFromEventList>
 800ef7c:	2800      	cmp	r0, #0
 800ef7e:	d0f4      	beq.n	800ef6a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ef80:	f001 f8da 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800ef84:	1e6b      	subs	r3, r5, #1
 800ef86:	b2da      	uxtb	r2, r3
 800ef88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef8a:	2a00      	cmp	r2, #0
 800ef8c:	d1f1      	bne.n	800ef72 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef8e:	23ff      	movs	r3, #255	; 0xff
 800ef90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef94:	f7ff f9d8 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef98:	f7ff f9b4 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef9c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800efa0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efa2:	2d00      	cmp	r5, #0
 800efa4:	dd14      	ble.n	800efd0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efa6:	f104 0910 	add.w	r9, r4, #16
 800efaa:	e003      	b.n	800efb4 <xQueueReceive+0x250>
				--cRxLock;
 800efac:	1e6b      	subs	r3, r5, #1
 800efae:	b2da      	uxtb	r2, r3
 800efb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efb2:	b16a      	cbz	r2, 800efd0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efb4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efb6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efb8:	b153      	cbz	r3, 800efd0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efba:	f001 f821 	bl	8010000 <xTaskRemoveFromEventList>
 800efbe:	2800      	cmp	r0, #0
 800efc0:	d0f4      	beq.n	800efac <xQueueReceive+0x248>
					vTaskMissedYield();
 800efc2:	f001 f8b9 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800efc6:	1e6b      	subs	r3, r5, #1
 800efc8:	b2da      	uxtb	r2, r3
 800efca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efcc:	2a00      	cmp	r2, #0
 800efce:	d1f1      	bne.n	800efb4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800efd0:	23ff      	movs	r3, #255	; 0xff
 800efd2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800efd6:	f7ff f9b7 	bl	800e348 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800efda:	f000 ff11 	bl	800fe00 <xTaskResumeAll>
 800efde:	2800      	cmp	r0, #0
 800efe0:	d1a6      	bne.n	800ef30 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800efe2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800efe6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800efea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800efee:	f3bf 8f4f 	dsb	sy
 800eff2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800eff6:	f7ff f985 	bl	800e304 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800effa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800effc:	2d00      	cmp	r5, #0
 800effe:	d09c      	beq.n	800ef3a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f000:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800f002:	b152      	cbz	r2, 800f01a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f004:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f006:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f008:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f00a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f00c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f00e:	bf24      	itt	cs
 800f010:	6821      	ldrcs	r1, [r4, #0]
 800f012:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f014:	4638      	mov	r0, r7
 800f016:	f01d f84e 	bl	802c0b6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f01a:	3d01      	subs	r5, #1
 800f01c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f01e:	6923      	ldr	r3, [r4, #16]
 800f020:	b963      	cbnz	r3, 800f03c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800f022:	f7ff f991 	bl	800e348 <vPortExitCritical>
				return pdPASS;
 800f026:	2001      	movs	r0, #1
 800f028:	e78e      	b.n	800ef48 <xQueueReceive+0x1e4>
 800f02a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f02e:	f383 8811 	msr	BASEPRI, r3
 800f032:	f3bf 8f6f 	isb	sy
 800f036:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f03a:	e7fe      	b.n	800f03a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f03c:	f104 0010 	add.w	r0, r4, #16
 800f040:	f000 ffde 	bl	8010000 <xTaskRemoveFromEventList>
 800f044:	2800      	cmp	r0, #0
 800f046:	d0ec      	beq.n	800f022 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800f048:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f04c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f050:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f054:	f3bf 8f4f 	dsb	sy
 800f058:	f3bf 8f6f 	isb	sy
 800f05c:	e7e1      	b.n	800f022 <xQueueReceive+0x2be>
 800f05e:	bf00      	nop

0800f060 <xQueueSemaphoreTake>:
{
 800f060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f064:	b084      	sub	sp, #16
 800f066:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f068:	2800      	cmp	r0, #0
 800f06a:	d05c      	beq.n	800f126 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f06c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800f06e:	4604      	mov	r4, r0
 800f070:	b147      	cbz	r7, 800f084 <xQueueSemaphoreTake+0x24>
 800f072:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f076:	f383 8811 	msr	BASEPRI, r3
 800f07a:	f3bf 8f6f 	isb	sy
 800f07e:	f3bf 8f4f 	dsb	sy
 800f082:	e7fe      	b.n	800f082 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f084:	f001 f85e 	bl	8010144 <xTaskGetSchedulerState>
 800f088:	4605      	mov	r5, r0
 800f08a:	2800      	cmp	r0, #0
 800f08c:	d054      	beq.n	800f138 <xQueueSemaphoreTake+0xd8>
 800f08e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f090:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800f094:	f7ff f936 	bl	800e304 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f098:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f09a:	2b00      	cmp	r3, #0
 800f09c:	f040 8148 	bne.w	800f330 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f0a0:	9b01      	ldr	r3, [sp, #4]
 800f0a2:	2b00      	cmp	r3, #0
 800f0a4:	f000 813a 	beq.w	800f31c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800f0a8:	2d00      	cmp	r5, #0
 800f0aa:	f000 809d 	beq.w	800f1e8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800f0ae:	f7ff f94b 	bl	800e348 <vPortExitCritical>
		vTaskSuspendAll();
 800f0b2:	f000 fe9d 	bl	800fdf0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f0b6:	f7ff f925 	bl	800e304 <vPortEnterCritical>
 800f0ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f0be:	2bff      	cmp	r3, #255	; 0xff
 800f0c0:	bf04      	itt	eq
 800f0c2:	2300      	moveq	r3, #0
 800f0c4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f0c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f0cc:	2bff      	cmp	r3, #255	; 0xff
 800f0ce:	bf04      	itt	eq
 800f0d0:	2300      	moveq	r3, #0
 800f0d2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f0d6:	f7ff f937 	bl	800e348 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f0da:	a901      	add	r1, sp, #4
 800f0dc:	a802      	add	r0, sp, #8
 800f0de:	f000 ffe3 	bl	80100a8 <xTaskCheckForTimeOut>
 800f0e2:	2800      	cmp	r0, #0
 800f0e4:	d135      	bne.n	800f152 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800f0e6:	f7ff f90d 	bl	800e304 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f0ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f0ec:	2b00      	cmp	r3, #0
 800f0ee:	f000 80a4 	beq.w	800f23a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800f0f2:	f7ff f929 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f0f6:	f7ff f905 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f0fa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f0fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f100:	2d00      	cmp	r5, #0
 800f102:	dc05      	bgt.n	800f110 <xQueueSemaphoreTake+0xb0>
 800f104:	e074      	b.n	800f1f0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800f106:	1e6b      	subs	r3, r5, #1
 800f108:	b2da      	uxtb	r2, r3
 800f10a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f10c:	2a00      	cmp	r2, #0
 800f10e:	d06f      	beq.n	800f1f0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f110:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f112:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f114:	2b00      	cmp	r3, #0
 800f116:	d06b      	beq.n	800f1f0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f118:	f000 ff72 	bl	8010000 <xTaskRemoveFromEventList>
 800f11c:	2800      	cmp	r0, #0
 800f11e:	d0f2      	beq.n	800f106 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800f120:	f001 f80a 	bl	8010138 <vTaskMissedYield>
 800f124:	e7ef      	b.n	800f106 <xQueueSemaphoreTake+0xa6>
 800f126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f12a:	f383 8811 	msr	BASEPRI, r3
 800f12e:	f3bf 8f6f 	isb	sy
 800f132:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f136:	e7fe      	b.n	800f136 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f138:	9b01      	ldr	r3, [sp, #4]
 800f13a:	2b00      	cmp	r3, #0
 800f13c:	f000 80d4 	beq.w	800f2e8 <xQueueSemaphoreTake+0x288>
 800f140:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f144:	f383 8811 	msr	BASEPRI, r3
 800f148:	f3bf 8f6f 	isb	sy
 800f14c:	f3bf 8f4f 	dsb	sy
 800f150:	e7fe      	b.n	800f150 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800f152:	f7ff f8d7 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f156:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f15a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f15c:	2d00      	cmp	r5, #0
 800f15e:	dc04      	bgt.n	800f16a <xQueueSemaphoreTake+0x10a>
 800f160:	e011      	b.n	800f186 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800f162:	1e6b      	subs	r3, r5, #1
 800f164:	b2da      	uxtb	r2, r3
 800f166:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f168:	b16a      	cbz	r2, 800f186 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f16a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f16c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f16e:	b153      	cbz	r3, 800f186 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f170:	f000 ff46 	bl	8010000 <xTaskRemoveFromEventList>
 800f174:	2800      	cmp	r0, #0
 800f176:	d0f4      	beq.n	800f162 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800f178:	f000 ffde 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800f17c:	1e6b      	subs	r3, r5, #1
 800f17e:	b2da      	uxtb	r2, r3
 800f180:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f182:	2a00      	cmp	r2, #0
 800f184:	d1f1      	bne.n	800f16a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800f186:	23ff      	movs	r3, #255	; 0xff
 800f188:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f18c:	f7ff f8dc 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f190:	f7ff f8b8 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f194:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f198:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f19a:	2d00      	cmp	r5, #0
 800f19c:	dd14      	ble.n	800f1c8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f19e:	f104 0810 	add.w	r8, r4, #16
 800f1a2:	e003      	b.n	800f1ac <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800f1a4:	1e6b      	subs	r3, r5, #1
 800f1a6:	b2da      	uxtb	r2, r3
 800f1a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1aa:	b16a      	cbz	r2, 800f1c8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1ac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1ae:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1b0:	b153      	cbz	r3, 800f1c8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1b2:	f000 ff25 	bl	8010000 <xTaskRemoveFromEventList>
 800f1b6:	2800      	cmp	r0, #0
 800f1b8:	d0f4      	beq.n	800f1a4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800f1ba:	f000 ffbd 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800f1be:	1e6b      	subs	r3, r5, #1
 800f1c0:	b2da      	uxtb	r2, r3
 800f1c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1c4:	2a00      	cmp	r2, #0
 800f1c6:	d1f1      	bne.n	800f1ac <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800f1c8:	23ff      	movs	r3, #255	; 0xff
 800f1ca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f1ce:	f7ff f8bb 	bl	800e348 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800f1d2:	f000 fe15 	bl	800fe00 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800f1d6:	f7ff f895 	bl	800e304 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f1da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f1dc:	2b00      	cmp	r3, #0
 800f1de:	d07c      	beq.n	800f2da <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800f1e0:	f7ff f8b2 	bl	800e348 <vPortExitCritical>
	return xReturn;
 800f1e4:	2501      	movs	r5, #1
 800f1e6:	e755      	b.n	800f094 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f1e8:	a802      	add	r0, sp, #8
 800f1ea:	f000 ff51 	bl	8010090 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800f1ee:	e75e      	b.n	800f0ae <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f1f0:	23ff      	movs	r3, #255	; 0xff
 800f1f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f1f6:	f7ff f8a7 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f1fa:	f7ff f883 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f1fe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f202:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f204:	2d00      	cmp	r5, #0
 800f206:	dd10      	ble.n	800f22a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f208:	f104 0810 	add.w	r8, r4, #16
 800f20c:	e003      	b.n	800f216 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800f20e:	1e6b      	subs	r3, r5, #1
 800f210:	b2da      	uxtb	r2, r3
 800f212:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f214:	b14a      	cbz	r2, 800f22a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f216:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f218:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f21a:	b133      	cbz	r3, 800f22a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f21c:	f000 fef0 	bl	8010000 <xTaskRemoveFromEventList>
 800f220:	2800      	cmp	r0, #0
 800f222:	d0f4      	beq.n	800f20e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800f224:	f000 ff88 	bl	8010138 <vTaskMissedYield>
 800f228:	e7f1      	b.n	800f20e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800f22a:	23ff      	movs	r3, #255	; 0xff
 800f22c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f230:	f7ff f88a 	bl	800e348 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800f234:	f000 fde4 	bl	800fe00 <xTaskResumeAll>
 800f238:	e7d4      	b.n	800f1e4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f23a:	f7ff f885 	bl	800e348 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f23e:	6823      	ldr	r3, [r4, #0]
 800f240:	2b00      	cmp	r3, #0
 800f242:	d062      	beq.n	800f30a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f244:	9901      	ldr	r1, [sp, #4]
 800f246:	4630      	mov	r0, r6
 800f248:	f000 fe4c 	bl	800fee4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800f24c:	f7ff f85a 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f250:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f254:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f256:	2d00      	cmp	r5, #0
 800f258:	dc04      	bgt.n	800f264 <xQueueSemaphoreTake+0x204>
 800f25a:	e00d      	b.n	800f278 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800f25c:	1e6b      	subs	r3, r5, #1
 800f25e:	b2da      	uxtb	r2, r3
 800f260:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f262:	b14a      	cbz	r2, 800f278 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f264:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f266:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f268:	b133      	cbz	r3, 800f278 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f26a:	f000 fec9 	bl	8010000 <xTaskRemoveFromEventList>
 800f26e:	2800      	cmp	r0, #0
 800f270:	d0f4      	beq.n	800f25c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800f272:	f000 ff61 	bl	8010138 <vTaskMissedYield>
 800f276:	e7f1      	b.n	800f25c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800f278:	23ff      	movs	r3, #255	; 0xff
 800f27a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f27e:	f7ff f863 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f282:	f7ff f83f 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f286:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f28a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f28c:	2d00      	cmp	r5, #0
 800f28e:	dd10      	ble.n	800f2b2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f290:	f104 0810 	add.w	r8, r4, #16
 800f294:	e003      	b.n	800f29e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800f296:	1e6b      	subs	r3, r5, #1
 800f298:	b2da      	uxtb	r2, r3
 800f29a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f29c:	b14a      	cbz	r2, 800f2b2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f29e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f2a0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f2a2:	b133      	cbz	r3, 800f2b2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f2a4:	f000 feac 	bl	8010000 <xTaskRemoveFromEventList>
 800f2a8:	2800      	cmp	r0, #0
 800f2aa:	d0f4      	beq.n	800f296 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800f2ac:	f000 ff44 	bl	8010138 <vTaskMissedYield>
 800f2b0:	e7f1      	b.n	800f296 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800f2b2:	23ff      	movs	r3, #255	; 0xff
 800f2b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f2b8:	f7ff f846 	bl	800e348 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f2bc:	f000 fda0 	bl	800fe00 <xTaskResumeAll>
 800f2c0:	2800      	cmp	r0, #0
 800f2c2:	d18f      	bne.n	800f1e4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800f2c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f2c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f2cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f2d0:	f3bf 8f4f 	dsb	sy
 800f2d4:	f3bf 8f6f 	isb	sy
 800f2d8:	e784      	b.n	800f1e4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f2da:	f7ff f835 	bl	800e348 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800f2de:	b92f      	cbnz	r7, 800f2ec <xQueueSemaphoreTake+0x28c>
}
 800f2e0:	4638      	mov	r0, r7
 800f2e2:	b004      	add	sp, #16
 800f2e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2e8:	4607      	mov	r7, r0
 800f2ea:	e6d1      	b.n	800f090 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800f2ec:	f7ff f80a 	bl	800e304 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f2f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f2f2:	b119      	cbz	r1, 800f2fc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f2f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f2f6:	6819      	ldr	r1, [r3, #0]
 800f2f8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f2fc:	68a0      	ldr	r0, [r4, #8]
 800f2fe:	f000 ffbd 	bl	801027c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f302:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800f304:	f7ff f820 	bl	800e348 <vPortExitCritical>
 800f308:	e7ea      	b.n	800f2e0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800f30a:	f7fe fffb 	bl	800e304 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f30e:	68a0      	ldr	r0, [r4, #8]
 800f310:	f000 ff28 	bl	8010164 <xTaskPriorityInherit>
 800f314:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800f316:	f7ff f817 	bl	800e348 <vPortExitCritical>
 800f31a:	e793      	b.n	800f244 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f31c:	b197      	cbz	r7, 800f344 <xQueueSemaphoreTake+0x2e4>
 800f31e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f322:	f383 8811 	msr	BASEPRI, r3
 800f326:	f3bf 8f6f 	isb	sy
 800f32a:	f3bf 8f4f 	dsb	sy
 800f32e:	e7fe      	b.n	800f32e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f330:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f332:	3b01      	subs	r3, #1
 800f334:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f336:	b1ca      	cbz	r2, 800f36c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f338:	6923      	ldr	r3, [r4, #16]
 800f33a:	b933      	cbnz	r3, 800f34a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800f33c:	f7ff f804 	bl	800e348 <vPortExitCritical>
				return pdPASS;
 800f340:	2701      	movs	r7, #1
 800f342:	e7cd      	b.n	800f2e0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800f344:	f7ff f800 	bl	800e348 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f348:	e7ca      	b.n	800f2e0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f34a:	f104 0010 	add.w	r0, r4, #16
 800f34e:	f000 fe57 	bl	8010000 <xTaskRemoveFromEventList>
 800f352:	2800      	cmp	r0, #0
 800f354:	d0f2      	beq.n	800f33c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800f356:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f35a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f35e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f362:	f3bf 8f4f 	dsb	sy
 800f366:	f3bf 8f6f 	isb	sy
 800f36a:	e7e7      	b.n	800f33c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f36c:	f000 ffda 	bl	8010324 <pvTaskIncrementMutexHeldCount>
 800f370:	60a0      	str	r0, [r4, #8]
 800f372:	e7e1      	b.n	800f338 <xQueueSemaphoreTake+0x2d8>

0800f374 <xQueueReceiveFromISR>:
{
 800f374:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800f378:	b310      	cbz	r0, 800f3c0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f37a:	460e      	mov	r6, r1
 800f37c:	4617      	mov	r7, r2
 800f37e:	4604      	mov	r4, r0
 800f380:	b191      	cbz	r1, 800f3a8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f382:	f7ff f8f3 	bl	800e56c <vPortValidateInterruptPriority>
	__asm volatile
 800f386:	f3ef 8911 	mrs	r9, BASEPRI
 800f38a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f38e:	f383 8811 	msr	BASEPRI, r3
 800f392:	f3bf 8f6f 	isb	sy
 800f396:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f39a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f39c:	b9cd      	cbnz	r5, 800f3d2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800f39e:	4628      	mov	r0, r5
	__asm volatile
 800f3a0:	f389 8811 	msr	BASEPRI, r9
}
 800f3a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f3a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f3aa:	2b00      	cmp	r3, #0
 800f3ac:	d0e9      	beq.n	800f382 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800f3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3b2:	f383 8811 	msr	BASEPRI, r3
 800f3b6:	f3bf 8f6f 	isb	sy
 800f3ba:	f3bf 8f4f 	dsb	sy
 800f3be:	e7fe      	b.n	800f3be <xQueueReceiveFromISR+0x4a>
 800f3c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3c4:	f383 8811 	msr	BASEPRI, r3
 800f3c8:	f3bf 8f6f 	isb	sy
 800f3cc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f3d0:	e7fe      	b.n	800f3d0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f3d2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f3d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f3d8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f3dc:	b152      	cbz	r2, 800f3f4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3de:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f3e0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3e2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f3e4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3e6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f3e8:	bf24      	itt	cs
 800f3ea:	6821      	ldrcs	r1, [r4, #0]
 800f3ec:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f3ee:	4630      	mov	r0, r6
 800f3f0:	f01c fe61 	bl	802c0b6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f3f4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f3f6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f3fa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f3fc:	d009      	beq.n	800f412 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f3fe:	f108 0301 	add.w	r3, r8, #1
 800f402:	b25b      	sxtb	r3, r3
 800f404:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f408:	2001      	movs	r0, #1
	__asm volatile
 800f40a:	f389 8811 	msr	BASEPRI, r9
}
 800f40e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f412:	6923      	ldr	r3, [r4, #16]
 800f414:	2b00      	cmp	r3, #0
 800f416:	d0f7      	beq.n	800f408 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f418:	f104 0010 	add.w	r0, r4, #16
 800f41c:	f000 fdf0 	bl	8010000 <xTaskRemoveFromEventList>
 800f420:	2800      	cmp	r0, #0
 800f422:	d0f1      	beq.n	800f408 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f424:	2f00      	cmp	r7, #0
 800f426:	d0ef      	beq.n	800f408 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f428:	2001      	movs	r0, #1
 800f42a:	6038      	str	r0, [r7, #0]
 800f42c:	e7b8      	b.n	800f3a0 <xQueueReceiveFromISR+0x2c>
 800f42e:	bf00      	nop

0800f430 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f430:	b158      	cbz	r0, 800f44a <uxQueueMessagesWaiting+0x1a>
{
 800f432:	b510      	push	{r4, lr}
 800f434:	4604      	mov	r4, r0
 800f436:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f438:	f7fe ff64 	bl	800e304 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f43c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f43e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f440:	f7fe ff82 	bl	800e348 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f444:	9801      	ldr	r0, [sp, #4]
 800f446:	b002      	add	sp, #8
 800f448:	bd10      	pop	{r4, pc}
	__asm volatile
 800f44a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f44e:	f383 8811 	msr	BASEPRI, r3
 800f452:	f3bf 8f6f 	isb	sy
 800f456:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f45a:	e7fe      	b.n	800f45a <uxQueueMessagesWaiting+0x2a>

0800f45c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f45c:	b108      	cbz	r0, 800f462 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f45e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f460:	4770      	bx	lr
 800f462:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f466:	f383 8811 	msr	BASEPRI, r3
 800f46a:	f3bf 8f6f 	isb	sy
 800f46e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f472:	e7fe      	b.n	800f472 <uxQueueMessagesWaitingFromISR+0x16>
 800f474:	0000      	movs	r0, r0
	...

0800f478 <vQueueDelete>:
	configASSERT( pxQueue );
 800f478:	b1f0      	cbz	r0, 800f4b8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f47a:	4b21      	ldr	r3, [pc, #132]	; (800f500 <vQueueDelete+0x88>)
 800f47c:	685a      	ldr	r2, [r3, #4]
 800f47e:	4290      	cmp	r0, r2
 800f480:	d025      	beq.n	800f4ce <vQueueDelete+0x56>
 800f482:	68da      	ldr	r2, [r3, #12]
 800f484:	4290      	cmp	r0, r2
 800f486:	d02c      	beq.n	800f4e2 <vQueueDelete+0x6a>
 800f488:	695a      	ldr	r2, [r3, #20]
 800f48a:	4290      	cmp	r0, r2
 800f48c:	d02b      	beq.n	800f4e6 <vQueueDelete+0x6e>
 800f48e:	69da      	ldr	r2, [r3, #28]
 800f490:	4290      	cmp	r0, r2
 800f492:	d02a      	beq.n	800f4ea <vQueueDelete+0x72>
 800f494:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f496:	4290      	cmp	r0, r2
 800f498:	d029      	beq.n	800f4ee <vQueueDelete+0x76>
 800f49a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f49c:	4290      	cmp	r0, r2
 800f49e:	d01e      	beq.n	800f4de <vQueueDelete+0x66>
 800f4a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f4a2:	4290      	cmp	r0, r2
 800f4a4:	d025      	beq.n	800f4f2 <vQueueDelete+0x7a>
 800f4a6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f4a8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4aa:	bf08      	it	eq
 800f4ac:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f4ae:	d00f      	beq.n	800f4d0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f4b0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f4b4:	b14b      	cbz	r3, 800f4ca <vQueueDelete+0x52>
}
 800f4b6:	4770      	bx	lr
 800f4b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4bc:	f383 8811 	msr	BASEPRI, r3
 800f4c0:	f3bf 8f6f 	isb	sy
 800f4c4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f4c8:	e7fe      	b.n	800f4c8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f4ca:	f7fe be01 	b.w	800e0d0 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4ce:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f4d0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f4f8 <vQueueDelete+0x80>
 800f4d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f4d8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f4dc:	e7e8      	b.n	800f4b0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4de:	2205      	movs	r2, #5
 800f4e0:	e7f6      	b.n	800f4d0 <vQueueDelete+0x58>
 800f4e2:	2201      	movs	r2, #1
 800f4e4:	e7f4      	b.n	800f4d0 <vQueueDelete+0x58>
 800f4e6:	2202      	movs	r2, #2
 800f4e8:	e7f2      	b.n	800f4d0 <vQueueDelete+0x58>
 800f4ea:	2203      	movs	r2, #3
 800f4ec:	e7f0      	b.n	800f4d0 <vQueueDelete+0x58>
 800f4ee:	2204      	movs	r2, #4
 800f4f0:	e7ee      	b.n	800f4d0 <vQueueDelete+0x58>
 800f4f2:	2206      	movs	r2, #6
 800f4f4:	e7ec      	b.n	800f4d0 <vQueueDelete+0x58>
 800f4f6:	bf00      	nop
	...
 800f500:	200131c0 	.word	0x200131c0

0800f504 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f504:	4b12      	ldr	r3, [pc, #72]	; (800f550 <vQueueAddToRegistry+0x4c>)
 800f506:	681a      	ldr	r2, [r3, #0]
 800f508:	b17a      	cbz	r2, 800f52a <vQueueAddToRegistry+0x26>
 800f50a:	689a      	ldr	r2, [r3, #8]
 800f50c:	b162      	cbz	r2, 800f528 <vQueueAddToRegistry+0x24>
 800f50e:	691a      	ldr	r2, [r3, #16]
 800f510:	b192      	cbz	r2, 800f538 <vQueueAddToRegistry+0x34>
 800f512:	699a      	ldr	r2, [r3, #24]
 800f514:	b192      	cbz	r2, 800f53c <vQueueAddToRegistry+0x38>
 800f516:	6a1a      	ldr	r2, [r3, #32]
 800f518:	b192      	cbz	r2, 800f540 <vQueueAddToRegistry+0x3c>
 800f51a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f51c:	b192      	cbz	r2, 800f544 <vQueueAddToRegistry+0x40>
 800f51e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f520:	b192      	cbz	r2, 800f548 <vQueueAddToRegistry+0x44>
 800f522:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f524:	b192      	cbz	r2, 800f54c <vQueueAddToRegistry+0x48>
	}
 800f526:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f528:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f52a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f52e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f532:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f536:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f538:	2202      	movs	r2, #2
 800f53a:	e7f6      	b.n	800f52a <vQueueAddToRegistry+0x26>
 800f53c:	2203      	movs	r2, #3
 800f53e:	e7f4      	b.n	800f52a <vQueueAddToRegistry+0x26>
 800f540:	2204      	movs	r2, #4
 800f542:	e7f2      	b.n	800f52a <vQueueAddToRegistry+0x26>
 800f544:	2205      	movs	r2, #5
 800f546:	e7f0      	b.n	800f52a <vQueueAddToRegistry+0x26>
 800f548:	2206      	movs	r2, #6
 800f54a:	e7ee      	b.n	800f52a <vQueueAddToRegistry+0x26>
 800f54c:	2207      	movs	r2, #7
 800f54e:	e7ec      	b.n	800f52a <vQueueAddToRegistry+0x26>
 800f550:	200131c0 	.word	0x200131c0

0800f554 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f554:	b570      	push	{r4, r5, r6, lr}
 800f556:	4605      	mov	r5, r0
 800f558:	460e      	mov	r6, r1
 800f55a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f55c:	f7fe fed2 	bl	800e304 <vPortEnterCritical>
 800f560:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f564:	2bff      	cmp	r3, #255	; 0xff
 800f566:	bf04      	itt	eq
 800f568:	2300      	moveq	r3, #0
 800f56a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f56e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f572:	2bff      	cmp	r3, #255	; 0xff
 800f574:	bf04      	itt	eq
 800f576:	2300      	moveq	r3, #0
 800f578:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f57c:	f7fe fee4 	bl	800e348 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f580:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f582:	2b00      	cmp	r3, #0
 800f584:	d043      	beq.n	800f60e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f586:	f7fe febd 	bl	800e304 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f58a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f58e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f590:	2c00      	cmp	r4, #0
 800f592:	dd14      	ble.n	800f5be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f594:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f598:	e003      	b.n	800f5a2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f59a:	1e63      	subs	r3, r4, #1
 800f59c:	b2da      	uxtb	r2, r3
 800f59e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f5a0:	b16a      	cbz	r2, 800f5be <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f5a2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f5a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f5a6:	b153      	cbz	r3, 800f5be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f5a8:	f000 fd2a 	bl	8010000 <xTaskRemoveFromEventList>
 800f5ac:	2800      	cmp	r0, #0
 800f5ae:	d0f4      	beq.n	800f59a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f5b0:	f000 fdc2 	bl	8010138 <vTaskMissedYield>
			--cTxLock;
 800f5b4:	1e63      	subs	r3, r4, #1
 800f5b6:	b2da      	uxtb	r2, r3
 800f5b8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f5ba:	2a00      	cmp	r2, #0
 800f5bc:	d1f1      	bne.n	800f5a2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f5be:	23ff      	movs	r3, #255	; 0xff
 800f5c0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f5c4:	f7fe fec0 	bl	800e348 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f5c8:	f7fe fe9c 	bl	800e304 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f5cc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f5d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5d2:	2c00      	cmp	r4, #0
 800f5d4:	dd14      	ble.n	800f600 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5d6:	f105 0610 	add.w	r6, r5, #16
 800f5da:	e003      	b.n	800f5e4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f5dc:	1e63      	subs	r3, r4, #1
 800f5de:	b2da      	uxtb	r2, r3
 800f5e0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5e2:	b16a      	cbz	r2, 800f600 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5e4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5e6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5e8:	b153      	cbz	r3, 800f600 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5ea:	f000 fd09 	bl	8010000 <xTaskRemoveFromEventList>
 800f5ee:	2800      	cmp	r0, #0
 800f5f0:	d0f4      	beq.n	800f5dc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f5f2:	f000 fda1 	bl	8010138 <vTaskMissedYield>
				--cRxLock;
 800f5f6:	1e63      	subs	r3, r4, #1
 800f5f8:	b2da      	uxtb	r2, r3
 800f5fa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5fc:	2a00      	cmp	r2, #0
 800f5fe:	d1f1      	bne.n	800f5e4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f600:	23ff      	movs	r3, #255	; 0xff
 800f602:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f606:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f60a:	f7fe be9d 	b.w	800e348 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f60e:	4622      	mov	r2, r4
 800f610:	4631      	mov	r1, r6
 800f612:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f616:	f000 fca9 	bl	800ff6c <vTaskPlaceOnEventListRestricted>
 800f61a:	e7b4      	b.n	800f586 <vQueueWaitForMessageRestricted+0x32>

0800f61c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f61c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f620:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f622:	f7fe fe6f 	bl	800e304 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f626:	4a34      	ldr	r2, [pc, #208]	; (800f6f8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f628:	4e34      	ldr	r6, [pc, #208]	; (800f6fc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f62a:	6813      	ldr	r3, [r2, #0]
 800f62c:	3301      	adds	r3, #1
 800f62e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f630:	6833      	ldr	r3, [r6, #0]
 800f632:	2b00      	cmp	r3, #0
 800f634:	d032      	beq.n	800f69c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f636:	4c32      	ldr	r4, [pc, #200]	; (800f700 <prvAddNewTaskToReadyList+0xe4>)
 800f638:	6823      	ldr	r3, [r4, #0]
 800f63a:	b33b      	cbz	r3, 800f68c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f63c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f63e:	4f31      	ldr	r7, [pc, #196]	; (800f704 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f640:	4a31      	ldr	r2, [pc, #196]	; (800f708 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f642:	4932      	ldr	r1, [pc, #200]	; (800f70c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f644:	6813      	ldr	r3, [r2, #0]
 800f646:	3301      	adds	r3, #1
 800f648:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f64a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f64c:	680b      	ldr	r3, [r1, #0]
 800f64e:	4283      	cmp	r3, r0
 800f650:	bf38      	it	cc
 800f652:	6008      	strcc	r0, [r1, #0]
 800f654:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f658:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f65c:	1d29      	adds	r1, r5, #4
 800f65e:	f7fe fdab 	bl	800e1b8 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f662:	f7fe fe71 	bl	800e348 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f666:	6823      	ldr	r3, [r4, #0]
 800f668:	b173      	cbz	r3, 800f688 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f66a:	6832      	ldr	r2, [r6, #0]
 800f66c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f66e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f670:	429a      	cmp	r2, r3
 800f672:	d209      	bcs.n	800f688 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f674:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f678:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f67c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f680:	f3bf 8f4f 	dsb	sy
 800f684:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f688:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f68c:	6833      	ldr	r3, [r6, #0]
 800f68e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f690:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f692:	4f1c      	ldr	r7, [pc, #112]	; (800f704 <prvAddNewTaskToReadyList+0xe8>)
 800f694:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f696:	bf98      	it	ls
 800f698:	6035      	strls	r5, [r6, #0]
 800f69a:	e7d1      	b.n	800f640 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f69c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f69e:	6813      	ldr	r3, [r2, #0]
 800f6a0:	2b01      	cmp	r3, #1
 800f6a2:	d003      	beq.n	800f6ac <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f6a4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f6a6:	4f17      	ldr	r7, [pc, #92]	; (800f704 <prvAddNewTaskToReadyList+0xe8>)
 800f6a8:	4c15      	ldr	r4, [pc, #84]	; (800f700 <prvAddNewTaskToReadyList+0xe4>)
 800f6aa:	e7c9      	b.n	800f640 <prvAddNewTaskToReadyList+0x24>
 800f6ac:	4f15      	ldr	r7, [pc, #84]	; (800f704 <prvAddNewTaskToReadyList+0xe8>)
 800f6ae:	463c      	mov	r4, r7
 800f6b0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f6b4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f6b6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f6b8:	f7fe fd6e 	bl	800e198 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f6bc:	45a0      	cmp	r8, r4
 800f6be:	d1f9      	bne.n	800f6b4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f6c0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f724 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f6c4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f728 <prvAddNewTaskToReadyList+0x10c>
 800f6c8:	4c0d      	ldr	r4, [pc, #52]	; (800f700 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f6ca:	4648      	mov	r0, r9
 800f6cc:	f7fe fd64 	bl	800e198 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f6d0:	4640      	mov	r0, r8
 800f6d2:	f7fe fd61 	bl	800e198 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f6d6:	480e      	ldr	r0, [pc, #56]	; (800f710 <prvAddNewTaskToReadyList+0xf4>)
 800f6d8:	f7fe fd5e 	bl	800e198 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f6dc:	480d      	ldr	r0, [pc, #52]	; (800f714 <prvAddNewTaskToReadyList+0xf8>)
 800f6de:	f7fe fd5b 	bl	800e198 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f6e2:	480d      	ldr	r0, [pc, #52]	; (800f718 <prvAddNewTaskToReadyList+0xfc>)
 800f6e4:	f7fe fd58 	bl	800e198 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f6e8:	4b0c      	ldr	r3, [pc, #48]	; (800f71c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f6ea:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f6ec:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f6f0:	4b0b      	ldr	r3, [pc, #44]	; (800f720 <prvAddNewTaskToReadyList+0x104>)
 800f6f2:	f8c3 8000 	str.w	r8, [r3]
}
 800f6f6:	e7a3      	b.n	800f640 <prvAddNewTaskToReadyList+0x24>
 800f6f8:	2001366c 	.word	0x2001366c
 800f6fc:	20013200 	.word	0x20013200
 800f700:	200136c8 	.word	0x200136c8
 800f704:	2001320c 	.word	0x2001320c
 800f708:	20013678 	.word	0x20013678
 800f70c:	2001367c 	.word	0x2001367c
 800f710:	200136b4 	.word	0x200136b4
 800f714:	200136e0 	.word	0x200136e0
 800f718:	200136cc 	.word	0x200136cc
 800f71c:	20013204 	.word	0x20013204
 800f720:	20013208 	.word	0x20013208
 800f724:	20013680 	.word	0x20013680
 800f728:	20013694 	.word	0x20013694

0800f72c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f72c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f730:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f732:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f736:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f73a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f73c:	4606      	mov	r6, r0
 800f73e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f740:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f742:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f744:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f746:	f01c fb90 	bl	802be6a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f74a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f74c:	f1a9 0904 	sub.w	r9, r9, #4
 800f750:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f752:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f756:	2d00      	cmp	r5, #0
 800f758:	d079      	beq.n	800f84e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f75a:	782b      	ldrb	r3, [r5, #0]
 800f75c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f760:	2b00      	cmp	r3, #0
 800f762:	d03b      	beq.n	800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f764:	786b      	ldrb	r3, [r5, #1]
 800f766:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f76a:	2b00      	cmp	r3, #0
 800f76c:	d036      	beq.n	800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f76e:	78ab      	ldrb	r3, [r5, #2]
 800f770:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f774:	b393      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f776:	78eb      	ldrb	r3, [r5, #3]
 800f778:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f77c:	b373      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f77e:	792b      	ldrb	r3, [r5, #4]
 800f780:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f784:	b353      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f786:	796b      	ldrb	r3, [r5, #5]
 800f788:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f78c:	b333      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f78e:	79ab      	ldrb	r3, [r5, #6]
 800f790:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f794:	b313      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f796:	79eb      	ldrb	r3, [r5, #7]
 800f798:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f79c:	b1f3      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f79e:	7a2b      	ldrb	r3, [r5, #8]
 800f7a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f7a4:	b1d3      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7a6:	7a6b      	ldrb	r3, [r5, #9]
 800f7a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f7ac:	b1b3      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7ae:	7aab      	ldrb	r3, [r5, #10]
 800f7b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f7b4:	b193      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7b6:	7aeb      	ldrb	r3, [r5, #11]
 800f7b8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f7bc:	b173      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7be:	7b2b      	ldrb	r3, [r5, #12]
 800f7c0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f7c4:	b153      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7c6:	7b6b      	ldrb	r3, [r5, #13]
 800f7c8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f7cc:	b133      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7ce:	7bab      	ldrb	r3, [r5, #14]
 800f7d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f7d4:	b113      	cbz	r3, 800f7dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7d6:	7beb      	ldrb	r3, [r5, #15]
 800f7d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f7dc:	2300      	movs	r3, #0
 800f7de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f7e2:	9d08      	ldr	r5, [sp, #32]
 800f7e4:	2d37      	cmp	r5, #55	; 0x37
 800f7e6:	bf28      	it	cs
 800f7e8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f7ea:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f7ee:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f7f0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f7f2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f7f4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f7f8:	f7fe fcda 	bl	800e1b0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f7fc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f800:	f104 0018 	add.w	r0, r4, #24
 800f804:	f7fe fcd4 	bl	800e1b0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f808:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f80a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f80e:	4651      	mov	r1, sl
 800f810:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f812:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f814:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f816:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f81a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f81e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f822:	f01c fb22 	bl	802be6a <memset>
 800f826:	4b0b      	ldr	r3, [pc, #44]	; (800f854 <prvInitialiseNewTask.constprop.0+0x128>)
 800f828:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f82a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f82e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f830:	463a      	mov	r2, r7
 800f832:	4631      	mov	r1, r6
 800f834:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f836:	6625      	str	r5, [r4, #96]	; 0x60
 800f838:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f83a:	f7fe fd37 	bl	800e2ac <pxPortInitialiseStack>
 800f83e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f840:	f1b8 0f00 	cmp.w	r8, #0
 800f844:	d001      	beq.n	800f84a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f846:	f8c8 4000 	str.w	r4, [r8]
}
 800f84a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f84e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f852:	e7c6      	b.n	800f7e2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f854:	20014190 	.word	0x20014190

0800f858 <prvIdleTask>:
{
 800f858:	b580      	push	{r7, lr}
 800f85a:	4d23      	ldr	r5, [pc, #140]	; (800f8e8 <prvIdleTask+0x90>)
 800f85c:	4f23      	ldr	r7, [pc, #140]	; (800f8ec <prvIdleTask+0x94>)
 800f85e:	4e24      	ldr	r6, [pc, #144]	; (800f8f0 <prvIdleTask+0x98>)
 800f860:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f8f4 <prvIdleTask+0x9c>
				taskYIELD();
 800f864:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f868:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f86c:	682b      	ldr	r3, [r5, #0]
 800f86e:	b35b      	cbz	r3, 800f8c8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f870:	f7fe fd48 	bl	800e304 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f874:	68fb      	ldr	r3, [r7, #12]
 800f876:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f878:	1d20      	adds	r0, r4, #4
 800f87a:	f7fe fcc5 	bl	800e208 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f87e:	6833      	ldr	r3, [r6, #0]
 800f880:	3b01      	subs	r3, #1
 800f882:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f884:	682b      	ldr	r3, [r5, #0]
 800f886:	3b01      	subs	r3, #1
 800f888:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f88a:	f7fe fd5d 	bl	800e348 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f88e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f892:	f01c fb33 	bl	802befc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f896:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f89a:	b163      	cbz	r3, 800f8b6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f89c:	2b01      	cmp	r3, #1
 800f89e:	d01e      	beq.n	800f8de <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f8a0:	2b02      	cmp	r3, #2
 800f8a2:	d0e3      	beq.n	800f86c <prvIdleTask+0x14>
 800f8a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8a8:	f383 8811 	msr	BASEPRI, r3
 800f8ac:	f3bf 8f6f 	isb	sy
 800f8b0:	f3bf 8f4f 	dsb	sy
 800f8b4:	e7fe      	b.n	800f8b4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f8b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f8b8:	f7fe fc0a 	bl	800e0d0 <vPortFree>
				vPortFree( pxTCB );
 800f8bc:	4620      	mov	r0, r4
 800f8be:	f7fe fc07 	bl	800e0d0 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f8c2:	682b      	ldr	r3, [r5, #0]
 800f8c4:	2b00      	cmp	r3, #0
 800f8c6:	d1d3      	bne.n	800f870 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f8c8:	f8d8 3000 	ldr.w	r3, [r8]
 800f8cc:	2b01      	cmp	r3, #1
 800f8ce:	d9cd      	bls.n	800f86c <prvIdleTask+0x14>
				taskYIELD();
 800f8d0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f8d4:	f3bf 8f4f 	dsb	sy
 800f8d8:	f3bf 8f6f 	isb	sy
 800f8dc:	e7c6      	b.n	800f86c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f8de:	4620      	mov	r0, r4
 800f8e0:	f7fe fbf6 	bl	800e0d0 <vPortFree>
 800f8e4:	e7c2      	b.n	800f86c <prvIdleTask+0x14>
 800f8e6:	bf00      	nop
 800f8e8:	20013670 	.word	0x20013670
 800f8ec:	200136e0 	.word	0x200136e0
 800f8f0:	2001366c 	.word	0x2001366c
 800f8f4:	2001320c 	.word	0x2001320c

0800f8f8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f8f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f8fc:	4b47      	ldr	r3, [pc, #284]	; (800fa1c <xTaskIncrementTick.part.0+0x124>)
 800f8fe:	681e      	ldr	r6, [r3, #0]
 800f900:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f902:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f904:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f906:	2e00      	cmp	r6, #0
 800f908:	d040      	beq.n	800f98c <xTaskIncrementTick.part.0+0x94>
 800f90a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800fa30 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f90e:	f8db 3000 	ldr.w	r3, [fp]
 800f912:	429e      	cmp	r6, r3
 800f914:	d347      	bcc.n	800f9a6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f916:	4f42      	ldr	r7, [pc, #264]	; (800fa20 <xTaskIncrementTick.part.0+0x128>)
 800f918:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800fa34 <xTaskIncrementTick.part.0+0x13c>
 800f91c:	683b      	ldr	r3, [r7, #0]
 800f91e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800fa38 <xTaskIncrementTick.part.0+0x140>
 800f922:	681d      	ldr	r5, [r3, #0]
 800f924:	2d00      	cmp	r5, #0
 800f926:	d073      	beq.n	800fa10 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f928:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800fa3c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f92c:	2500      	movs	r5, #0
 800f92e:	e022      	b.n	800f976 <xTaskIncrementTick.part.0+0x7e>
 800f930:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f932:	f7fe fc69 	bl	800e208 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f936:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f938:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f93a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f93e:	b113      	cbz	r3, 800f946 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f940:	f7fe fc62 	bl	800e208 <uxListRemove>
 800f944:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f946:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f948:	f8d8 2000 	ldr.w	r2, [r8]
 800f94c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f950:	4293      	cmp	r3, r2
 800f952:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f956:	bf88      	it	hi
 800f958:	f8c8 3000 	strhi.w	r3, [r8]
 800f95c:	f7fe fc2c 	bl	800e1b8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f960:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f964:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f966:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f968:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f96a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f96c:	4291      	cmp	r1, r2
 800f96e:	bf28      	it	cs
 800f970:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f972:	2b00      	cmp	r3, #0
 800f974:	d04c      	beq.n	800fa10 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f976:	683b      	ldr	r3, [r7, #0]
 800f978:	68db      	ldr	r3, [r3, #12]
 800f97a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f97c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f97e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f980:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f982:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f984:	d2d4      	bcs.n	800f930 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f986:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f98a:	e011      	b.n	800f9b0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f98c:	4b24      	ldr	r3, [pc, #144]	; (800fa20 <xTaskIncrementTick.part.0+0x128>)
 800f98e:	681a      	ldr	r2, [r3, #0]
 800f990:	6812      	ldr	r2, [r2, #0]
 800f992:	b30a      	cbz	r2, 800f9d8 <xTaskIncrementTick.part.0+0xe0>
 800f994:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f998:	f383 8811 	msr	BASEPRI, r3
 800f99c:	f3bf 8f6f 	isb	sy
 800f9a0:	f3bf 8f4f 	dsb	sy
 800f9a4:	e7fe      	b.n	800f9a4 <xTaskIncrementTick.part.0+0xac>
 800f9a6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800fa34 <xTaskIncrementTick.part.0+0x13c>
 800f9aa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800fa38 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f9ae:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f9b0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f9b4:	491b      	ldr	r1, [pc, #108]	; (800fa24 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f9b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f9b8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f9bc:	009b      	lsls	r3, r3, #2
 800f9be:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f9c2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f9c4:	2a02      	cmp	r2, #2
 800f9c6:	bf28      	it	cs
 800f9c8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f9ca:	2b00      	cmp	r3, #0
}
 800f9cc:	bf0c      	ite	eq
 800f9ce:	4628      	moveq	r0, r5
 800f9d0:	2001      	movne	r0, #1
 800f9d2:	b003      	add	sp, #12
 800f9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f9d8:	4a13      	ldr	r2, [pc, #76]	; (800fa28 <xTaskIncrementTick.part.0+0x130>)
 800f9da:	6818      	ldr	r0, [r3, #0]
 800f9dc:	6811      	ldr	r1, [r2, #0]
 800f9de:	6019      	str	r1, [r3, #0]
 800f9e0:	4912      	ldr	r1, [pc, #72]	; (800fa2c <xTaskIncrementTick.part.0+0x134>)
 800f9e2:	6010      	str	r0, [r2, #0]
 800f9e4:	680a      	ldr	r2, [r1, #0]
 800f9e6:	3201      	adds	r2, #1
 800f9e8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f9ea:	681a      	ldr	r2, [r3, #0]
 800f9ec:	6812      	ldr	r2, [r2, #0]
 800f9ee:	b932      	cbnz	r2, 800f9fe <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9f0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800fa30 <xTaskIncrementTick.part.0+0x138>
 800f9f4:	f04f 33ff 	mov.w	r3, #4294967295
 800f9f8:	f8cb 3000 	str.w	r3, [fp]
 800f9fc:	e787      	b.n	800f90e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9fe:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fa00:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800fa30 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa04:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fa06:	68db      	ldr	r3, [r3, #12]
 800fa08:	685b      	ldr	r3, [r3, #4]
 800fa0a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800fa0e:	e77e      	b.n	800f90e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa10:	f04f 33ff 	mov.w	r3, #4294967295
 800fa14:	f8cb 3000 	str.w	r3, [fp]
					break;
 800fa18:	e7ca      	b.n	800f9b0 <xTaskIncrementTick.part.0+0xb8>
 800fa1a:	bf00      	nop
 800fa1c:	200136f4 	.word	0x200136f4
 800fa20:	20013204 	.word	0x20013204
 800fa24:	200136f8 	.word	0x200136f8
 800fa28:	20013208 	.word	0x20013208
 800fa2c:	200136ac 	.word	0x200136ac
 800fa30:	200136a8 	.word	0x200136a8
 800fa34:	2001320c 	.word	0x2001320c
 800fa38:	20013200 	.word	0x20013200
 800fa3c:	2001367c 	.word	0x2001367c

0800fa40 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800fa40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800fa44:	4d41      	ldr	r5, [pc, #260]	; (800fb4c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800fa46:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800fa48:	f7fe fc5c 	bl	800e304 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800fa4c:	682b      	ldr	r3, [r5, #0]
 800fa4e:	3b01      	subs	r3, #1
 800fa50:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa52:	682b      	ldr	r3, [r5, #0]
 800fa54:	2b00      	cmp	r3, #0
 800fa56:	d161      	bne.n	800fb1c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800fa58:	4b3d      	ldr	r3, [pc, #244]	; (800fb50 <xTaskResumeAll.part.0+0x110>)
 800fa5a:	681b      	ldr	r3, [r3, #0]
 800fa5c:	2b00      	cmp	r3, #0
 800fa5e:	d05d      	beq.n	800fb1c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fa60:	4e3c      	ldr	r6, [pc, #240]	; (800fb54 <xTaskResumeAll.part.0+0x114>)
 800fa62:	6833      	ldr	r3, [r6, #0]
 800fa64:	2b00      	cmp	r3, #0
 800fa66:	d06e      	beq.n	800fb46 <xTaskResumeAll.part.0+0x106>
 800fa68:	4f3b      	ldr	r7, [pc, #236]	; (800fb58 <xTaskResumeAll.part.0+0x118>)
 800fa6a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800fb68 <xTaskResumeAll.part.0+0x128>
 800fa6e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800fb6c <xTaskResumeAll.part.0+0x12c>
 800fa72:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800fb70 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa76:	68f3      	ldr	r3, [r6, #12]
 800fa78:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa7a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fa7e:	f104 0018 	add.w	r0, r4, #24
 800fa82:	f7fe fbc1 	bl	800e208 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa86:	4658      	mov	r0, fp
 800fa88:	f7fe fbbe 	bl	800e208 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fa8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fa8e:	683a      	ldr	r2, [r7, #0]
 800fa90:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800fa94:	4293      	cmp	r3, r2
 800fa96:	4659      	mov	r1, fp
 800fa98:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800fa9c:	bf88      	it	hi
 800fa9e:	603b      	strhi	r3, [r7, #0]
 800faa0:	f7fe fb8a 	bl	800e1b8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800faa4:	f8d8 3000 	ldr.w	r3, [r8]
 800faa8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800faaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800faac:	429a      	cmp	r2, r3
 800faae:	d33d      	bcc.n	800fb2c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800fab0:	2301      	movs	r3, #1
 800fab2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fab6:	6833      	ldr	r3, [r6, #0]
 800fab8:	2b00      	cmp	r3, #0
 800faba:	d1dc      	bne.n	800fa76 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fabc:	4b27      	ldr	r3, [pc, #156]	; (800fb5c <xTaskResumeAll.part.0+0x11c>)
 800fabe:	681a      	ldr	r2, [r3, #0]
 800fac0:	6812      	ldr	r2, [r2, #0]
 800fac2:	2a00      	cmp	r2, #0
 800fac4:	d03a      	beq.n	800fb3c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fac6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fac8:	4b25      	ldr	r3, [pc, #148]	; (800fb60 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800faca:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800facc:	68d2      	ldr	r2, [r2, #12]
 800face:	6852      	ldr	r2, [r2, #4]
 800fad0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800fad2:	4e24      	ldr	r6, [pc, #144]	; (800fb64 <xTaskResumeAll.part.0+0x124>)
 800fad4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800fad6:	b194      	cbz	r4, 800fafe <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800fad8:	2701      	movs	r7, #1
 800fada:	e006      	b.n	800faea <xTaskResumeAll.part.0+0xaa>
 800fadc:	f7ff ff0c 	bl	800f8f8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800fae0:	b108      	cbz	r0, 800fae6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800fae2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fae6:	3c01      	subs	r4, #1
 800fae8:	d008      	beq.n	800fafc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800faea:	682b      	ldr	r3, [r5, #0]
 800faec:	2b00      	cmp	r3, #0
 800faee:	d0f5      	beq.n	800fadc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800faf0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800faf2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800faf4:	f103 0301 	add.w	r3, r3, #1
 800faf8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fafa:	d1f6      	bne.n	800faea <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800fafc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800fafe:	f8da 3000 	ldr.w	r3, [sl]
 800fb02:	b15b      	cbz	r3, 800fb1c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800fb04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb10:	f3bf 8f4f 	dsb	sy
 800fb14:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800fb18:	2001      	movs	r0, #1
 800fb1a:	e000      	b.n	800fb1e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800fb1c:	2000      	movs	r0, #0
 800fb1e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fb20:	f7fe fc12 	bl	800e348 <vPortExitCritical>
}
 800fb24:	9801      	ldr	r0, [sp, #4]
 800fb26:	b003      	add	sp, #12
 800fb28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fb2c:	6833      	ldr	r3, [r6, #0]
 800fb2e:	2b00      	cmp	r3, #0
 800fb30:	d1a1      	bne.n	800fa76 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fb32:	4b0a      	ldr	r3, [pc, #40]	; (800fb5c <xTaskResumeAll.part.0+0x11c>)
 800fb34:	681a      	ldr	r2, [r3, #0]
 800fb36:	6812      	ldr	r2, [r2, #0]
 800fb38:	2a00      	cmp	r2, #0
 800fb3a:	d1c4      	bne.n	800fac6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800fb3c:	4b08      	ldr	r3, [pc, #32]	; (800fb60 <xTaskResumeAll.part.0+0x120>)
 800fb3e:	f04f 32ff 	mov.w	r2, #4294967295
 800fb42:	601a      	str	r2, [r3, #0]
 800fb44:	e7c5      	b.n	800fad2 <xTaskResumeAll.part.0+0x92>
 800fb46:	f8df a028 	ldr.w	sl, [pc, #40]	; 800fb70 <xTaskResumeAll.part.0+0x130>
 800fb4a:	e7c2      	b.n	800fad2 <xTaskResumeAll.part.0+0x92>
 800fb4c:	20013674 	.word	0x20013674
 800fb50:	2001366c 	.word	0x2001366c
 800fb54:	200136b4 	.word	0x200136b4
 800fb58:	2001367c 	.word	0x2001367c
 800fb5c:	20013204 	.word	0x20013204
 800fb60:	200136a8 	.word	0x200136a8
 800fb64:	200136b0 	.word	0x200136b0
 800fb68:	2001320c 	.word	0x2001320c
 800fb6c:	20013200 	.word	0x20013200
 800fb70:	200136f8 	.word	0x200136f8

0800fb74 <xTaskCreateStatic>:
	{
 800fb74:	b530      	push	{r4, r5, lr}
 800fb76:	b087      	sub	sp, #28
 800fb78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800fb7a:	b1c4      	cbz	r4, 800fbae <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800fb7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fb7e:	b16d      	cbz	r5, 800fb9c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fb80:	25ac      	movs	r5, #172	; 0xac
 800fb82:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800fb84:	9d05      	ldr	r5, [sp, #20]
 800fb86:	2dac      	cmp	r5, #172	; 0xac
 800fb88:	d01a      	beq.n	800fbc0 <xTaskCreateStatic+0x4c>
 800fb8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb8e:	f383 8811 	msr	BASEPRI, r3
 800fb92:	f3bf 8f6f 	isb	sy
 800fb96:	f3bf 8f4f 	dsb	sy
 800fb9a:	e7fe      	b.n	800fb9a <xTaskCreateStatic+0x26>
 800fb9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fba0:	f383 8811 	msr	BASEPRI, r3
 800fba4:	f3bf 8f6f 	isb	sy
 800fba8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fbac:	e7fe      	b.n	800fbac <xTaskCreateStatic+0x38>
 800fbae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbb2:	f383 8811 	msr	BASEPRI, r3
 800fbb6:	f3bf 8f6f 	isb	sy
 800fbba:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fbbe:	e7fe      	b.n	800fbbe <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fbc0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fbc2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fbc4:	2402      	movs	r4, #2
 800fbc6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fbca:	ac04      	add	r4, sp, #16
 800fbcc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800fbd0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800fbd2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fbd4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fbd6:	f7ff fda9 	bl	800f72c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fbda:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fbdc:	f7ff fd1e 	bl	800f61c <prvAddNewTaskToReadyList>
	}
 800fbe0:	9804      	ldr	r0, [sp, #16]
 800fbe2:	b007      	add	sp, #28
 800fbe4:	bd30      	pop	{r4, r5, pc}
 800fbe6:	bf00      	nop

0800fbe8 <xTaskCreate>:
	{
 800fbe8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fbec:	4607      	mov	r7, r0
 800fbee:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbf0:	0090      	lsls	r0, r2, #2
	{
 800fbf2:	4615      	mov	r5, r2
 800fbf4:	4688      	mov	r8, r1
 800fbf6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbf8:	f7fe f9ae 	bl	800df58 <pvPortMalloc>
			if( pxStack != NULL )
 800fbfc:	b1d8      	cbz	r0, 800fc36 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800fbfe:	4604      	mov	r4, r0
 800fc00:	20ac      	movs	r0, #172	; 0xac
 800fc02:	f7fe f9a9 	bl	800df58 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800fc06:	4606      	mov	r6, r0
 800fc08:	b1d0      	cbz	r0, 800fc40 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800fc0a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800fc0c:	2400      	movs	r4, #0
 800fc0e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fc12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800fc14:	9401      	str	r4, [sp, #4]
 800fc16:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fc18:	9602      	str	r6, [sp, #8]
 800fc1a:	464b      	mov	r3, r9
 800fc1c:	462a      	mov	r2, r5
 800fc1e:	4641      	mov	r1, r8
 800fc20:	4638      	mov	r0, r7
 800fc22:	9400      	str	r4, [sp, #0]
 800fc24:	f7ff fd82 	bl	800f72c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fc28:	4630      	mov	r0, r6
 800fc2a:	f7ff fcf7 	bl	800f61c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800fc2e:	2001      	movs	r0, #1
	}
 800fc30:	b005      	add	sp, #20
 800fc32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc36:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800fc3a:	b005      	add	sp, #20
 800fc3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800fc40:	4620      	mov	r0, r4
 800fc42:	f7fe fa45 	bl	800e0d0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc46:	f04f 30ff 	mov.w	r0, #4294967295
 800fc4a:	e7f1      	b.n	800fc30 <xTaskCreate+0x48>

0800fc4c <vTaskDelay>:
	{
 800fc4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800fc4e:	b950      	cbnz	r0, 800fc66 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800fc50:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc54:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc58:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc5c:	f3bf 8f4f 	dsb	sy
 800fc60:	f3bf 8f6f 	isb	sy
	}
 800fc64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800fc66:	4d1e      	ldr	r5, [pc, #120]	; (800fce0 <vTaskDelay+0x94>)
 800fc68:	682b      	ldr	r3, [r5, #0]
 800fc6a:	b143      	cbz	r3, 800fc7e <vTaskDelay+0x32>
 800fc6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc70:	f383 8811 	msr	BASEPRI, r3
 800fc74:	f3bf 8f6f 	isb	sy
 800fc78:	f3bf 8f4f 	dsb	sy
 800fc7c:	e7fe      	b.n	800fc7c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800fc7e:	682b      	ldr	r3, [r5, #0]
 800fc80:	3301      	adds	r3, #1
 800fc82:	4604      	mov	r4, r0
 800fc84:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800fc86:	4b17      	ldr	r3, [pc, #92]	; (800fce4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc88:	4e17      	ldr	r6, [pc, #92]	; (800fce8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800fc8a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc8c:	6830      	ldr	r0, [r6, #0]
 800fc8e:	3004      	adds	r0, #4
 800fc90:	f7fe faba 	bl	800e208 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fc94:	6833      	ldr	r3, [r6, #0]
 800fc96:	19e4      	adds	r4, r4, r7
 800fc98:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800fc9a:	d310      	bcc.n	800fcbe <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc9c:	4b13      	ldr	r3, [pc, #76]	; (800fcec <vTaskDelay+0xa0>)
 800fc9e:	6818      	ldr	r0, [r3, #0]
 800fca0:	6831      	ldr	r1, [r6, #0]
 800fca2:	3104      	adds	r1, #4
 800fca4:	f7fe fa98 	bl	800e1d8 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800fca8:	682b      	ldr	r3, [r5, #0]
 800fcaa:	b9a3      	cbnz	r3, 800fcd6 <vTaskDelay+0x8a>
 800fcac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcb0:	f383 8811 	msr	BASEPRI, r3
 800fcb4:	f3bf 8f6f 	isb	sy
 800fcb8:	f3bf 8f4f 	dsb	sy
 800fcbc:	e7fe      	b.n	800fcbc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fcbe:	4b0c      	ldr	r3, [pc, #48]	; (800fcf0 <vTaskDelay+0xa4>)
 800fcc0:	6818      	ldr	r0, [r3, #0]
 800fcc2:	6831      	ldr	r1, [r6, #0]
 800fcc4:	3104      	adds	r1, #4
 800fcc6:	f7fe fa87 	bl	800e1d8 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800fcca:	4b0a      	ldr	r3, [pc, #40]	; (800fcf4 <vTaskDelay+0xa8>)
 800fccc:	681a      	ldr	r2, [r3, #0]
 800fcce:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800fcd0:	bf38      	it	cc
 800fcd2:	601c      	strcc	r4, [r3, #0]
 800fcd4:	e7e8      	b.n	800fca8 <vTaskDelay+0x5c>
 800fcd6:	f7ff feb3 	bl	800fa40 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800fcda:	2800      	cmp	r0, #0
 800fcdc:	d0b8      	beq.n	800fc50 <vTaskDelay+0x4>
	}
 800fcde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fce0:	20013674 	.word	0x20013674
 800fce4:	200136f4 	.word	0x200136f4
 800fce8:	20013200 	.word	0x20013200
 800fcec:	20013208 	.word	0x20013208
 800fcf0:	20013204 	.word	0x20013204
 800fcf4:	200136a8 	.word	0x200136a8

0800fcf8 <vTaskStartScheduler>:
{
 800fcf8:	b530      	push	{r4, r5, lr}
 800fcfa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fcfc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800fcfe:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fd00:	a906      	add	r1, sp, #24
 800fd02:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800fd04:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fd08:	f7fe f908 	bl	800df1c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800fd0c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fd10:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800fd12:	b1bb      	cbz	r3, 800fd44 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800fd14:	b16d      	cbz	r5, 800fd32 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fd16:	21ac      	movs	r1, #172	; 0xac
 800fd18:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800fd1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fd1c:	29ac      	cmp	r1, #172	; 0xac
 800fd1e:	d01a      	beq.n	800fd56 <vTaskStartScheduler+0x5e>
 800fd20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd24:	f383 8811 	msr	BASEPRI, r3
 800fd28:	f3bf 8f6f 	isb	sy
 800fd2c:	f3bf 8f4f 	dsb	sy
 800fd30:	e7fe      	b.n	800fd30 <vTaskStartScheduler+0x38>
 800fd32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd36:	f383 8811 	msr	BASEPRI, r3
 800fd3a:	f3bf 8f6f 	isb	sy
 800fd3e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fd42:	e7fe      	b.n	800fd42 <vTaskStartScheduler+0x4a>
 800fd44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd48:	f383 8811 	msr	BASEPRI, r3
 800fd4c:	f3bf 8f6f 	isb	sy
 800fd50:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fd54:	e7fe      	b.n	800fd54 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd56:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd58:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fd5a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd5c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd60:	4623      	mov	r3, r4
 800fd62:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800fd66:	491b      	ldr	r1, [pc, #108]	; (800fdd4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fd68:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd6a:	9400      	str	r4, [sp, #0]
 800fd6c:	481a      	ldr	r0, [pc, #104]	; (800fdd8 <vTaskStartScheduler+0xe0>)
 800fd6e:	f7ff fcdd 	bl	800f72c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fd72:	4628      	mov	r0, r5
 800fd74:	f7ff fc52 	bl	800f61c <prvAddNewTaskToReadyList>
		return xReturn;
 800fd78:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800fd7a:	b1eb      	cbz	r3, 800fdb8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800fd7c:	f000 fc6e 	bl	801065c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fd80:	2801      	cmp	r0, #1
 800fd82:	d11b      	bne.n	800fdbc <vTaskStartScheduler+0xc4>
 800fd84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd88:	f383 8811 	msr	BASEPRI, r3
 800fd8c:	f3bf 8f6f 	isb	sy
 800fd90:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fd94:	4b11      	ldr	r3, [pc, #68]	; (800fddc <vTaskStartScheduler+0xe4>)
 800fd96:	4a12      	ldr	r2, [pc, #72]	; (800fde0 <vTaskStartScheduler+0xe8>)
 800fd98:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800fd9a:	4912      	ldr	r1, [pc, #72]	; (800fde4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fd9c:	3358      	adds	r3, #88	; 0x58
 800fd9e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800fda0:	4a11      	ldr	r2, [pc, #68]	; (800fde8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fda2:	4b12      	ldr	r3, [pc, #72]	; (800fdec <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800fda4:	f04f 35ff 	mov.w	r5, #4294967295
 800fda8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800fdaa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fdac:	601c      	str	r4, [r3, #0]
}
 800fdae:	b00b      	add	sp, #44	; 0x2c
 800fdb0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800fdb4:	f7fe bb38 	b.w	800e428 <xPortStartScheduler>
}
 800fdb8:	b00b      	add	sp, #44	; 0x2c
 800fdba:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800fdbc:	3001      	adds	r0, #1
 800fdbe:	d1fb      	bne.n	800fdb8 <vTaskStartScheduler+0xc0>
 800fdc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdc4:	f383 8811 	msr	BASEPRI, r3
 800fdc8:	f3bf 8f6f 	isb	sy
 800fdcc:	f3bf 8f4f 	dsb	sy
 800fdd0:	e7fe      	b.n	800fdd0 <vTaskStartScheduler+0xd8>
 800fdd2:	bf00      	nop
 800fdd4:	0802f534 	.word	0x0802f534
 800fdd8:	0800f859 	.word	0x0800f859
 800fddc:	20013200 	.word	0x20013200
 800fde0:	20000160 	.word	0x20000160
 800fde4:	200136a8 	.word	0x200136a8
 800fde8:	200136c8 	.word	0x200136c8
 800fdec:	200136f4 	.word	0x200136f4

0800fdf0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fdf0:	4a02      	ldr	r2, [pc, #8]	; (800fdfc <vTaskSuspendAll+0xc>)
 800fdf2:	6813      	ldr	r3, [r2, #0]
 800fdf4:	3301      	adds	r3, #1
 800fdf6:	6013      	str	r3, [r2, #0]
}
 800fdf8:	4770      	bx	lr
 800fdfa:	bf00      	nop
 800fdfc:	20013674 	.word	0x20013674

0800fe00 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800fe00:	4b06      	ldr	r3, [pc, #24]	; (800fe1c <xTaskResumeAll+0x1c>)
 800fe02:	681b      	ldr	r3, [r3, #0]
 800fe04:	b943      	cbnz	r3, 800fe18 <xTaskResumeAll+0x18>
 800fe06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe0a:	f383 8811 	msr	BASEPRI, r3
 800fe0e:	f3bf 8f6f 	isb	sy
 800fe12:	f3bf 8f4f 	dsb	sy
 800fe16:	e7fe      	b.n	800fe16 <xTaskResumeAll+0x16>
 800fe18:	f7ff be12 	b.w	800fa40 <xTaskResumeAll.part.0>
 800fe1c:	20013674 	.word	0x20013674

0800fe20 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fe20:	4b01      	ldr	r3, [pc, #4]	; (800fe28 <xTaskGetTickCount+0x8>)
 800fe22:	6818      	ldr	r0, [r3, #0]
}
 800fe24:	4770      	bx	lr
 800fe26:	bf00      	nop
 800fe28:	200136f4 	.word	0x200136f4

0800fe2c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fe2c:	4b05      	ldr	r3, [pc, #20]	; (800fe44 <xTaskIncrementTick+0x18>)
 800fe2e:	681b      	ldr	r3, [r3, #0]
 800fe30:	b90b      	cbnz	r3, 800fe36 <xTaskIncrementTick+0xa>
 800fe32:	f7ff bd61 	b.w	800f8f8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800fe36:	4a04      	ldr	r2, [pc, #16]	; (800fe48 <xTaskIncrementTick+0x1c>)
 800fe38:	6813      	ldr	r3, [r2, #0]
 800fe3a:	3301      	adds	r3, #1
}
 800fe3c:	2000      	movs	r0, #0
		++xPendedTicks;
 800fe3e:	6013      	str	r3, [r2, #0]
}
 800fe40:	4770      	bx	lr
 800fe42:	bf00      	nop
 800fe44:	20013674 	.word	0x20013674
 800fe48:	200136b0 	.word	0x200136b0

0800fe4c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fe4c:	4b1f      	ldr	r3, [pc, #124]	; (800fecc <vTaskSwitchContext+0x80>)
 800fe4e:	681b      	ldr	r3, [r3, #0]
 800fe50:	b11b      	cbz	r3, 800fe5a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fe52:	4b1f      	ldr	r3, [pc, #124]	; (800fed0 <vTaskSwitchContext+0x84>)
 800fe54:	2201      	movs	r2, #1
 800fe56:	601a      	str	r2, [r3, #0]
 800fe58:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fe5a:	4a1d      	ldr	r2, [pc, #116]	; (800fed0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe5c:	491d      	ldr	r1, [pc, #116]	; (800fed4 <vTaskSwitchContext+0x88>)
{
 800fe5e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe60:	4c1d      	ldr	r4, [pc, #116]	; (800fed8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fe62:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe64:	6823      	ldr	r3, [r4, #0]
 800fe66:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fe6a:	0092      	lsls	r2, r2, #2
 800fe6c:	0098      	lsls	r0, r3, #2
 800fe6e:	588a      	ldr	r2, [r1, r2]
 800fe70:	b942      	cbnz	r2, 800fe84 <vTaskSwitchContext+0x38>
 800fe72:	b313      	cbz	r3, 800feba <vTaskSwitchContext+0x6e>
 800fe74:	3b01      	subs	r3, #1
 800fe76:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fe7a:	0098      	lsls	r0, r3, #2
 800fe7c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fe80:	2a00      	cmp	r2, #0
 800fe82:	d0f6      	beq.n	800fe72 <vTaskSwitchContext+0x26>
 800fe84:	4418      	add	r0, r3
 800fe86:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fe8a:	4662      	mov	r2, ip
 800fe8c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fe90:	6849      	ldr	r1, [r1, #4]
 800fe92:	f8cc 1004 	str.w	r1, [ip, #4]
 800fe96:	3208      	adds	r2, #8
 800fe98:	4291      	cmp	r1, r2
 800fe9a:	bf08      	it	eq
 800fe9c:	6849      	ldreq	r1, [r1, #4]
 800fe9e:	4a0f      	ldr	r2, [pc, #60]	; (800fedc <vTaskSwitchContext+0x90>)
 800fea0:	bf08      	it	eq
 800fea2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fea6:	68c9      	ldr	r1, [r1, #12]
 800fea8:	6011      	str	r1, [r2, #0]
 800feaa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800feac:	6813      	ldr	r3, [r2, #0]
 800feae:	4a0c      	ldr	r2, [pc, #48]	; (800fee0 <vTaskSwitchContext+0x94>)
}
 800feb0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800feb4:	3358      	adds	r3, #88	; 0x58
 800feb6:	6013      	str	r3, [r2, #0]
}
 800feb8:	4770      	bx	lr
 800feba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800febe:	f383 8811 	msr	BASEPRI, r3
 800fec2:	f3bf 8f6f 	isb	sy
 800fec6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800feca:	e7fe      	b.n	800feca <vTaskSwitchContext+0x7e>
 800fecc:	20013674 	.word	0x20013674
 800fed0:	200136f8 	.word	0x200136f8
 800fed4:	2001320c 	.word	0x2001320c
 800fed8:	2001367c 	.word	0x2001367c
 800fedc:	20013200 	.word	0x20013200
 800fee0:	20000160 	.word	0x20000160

0800fee4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fee4:	b1d0      	cbz	r0, 800ff1c <vTaskPlaceOnEventList+0x38>
{
 800fee6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fee8:	4d1a      	ldr	r5, [pc, #104]	; (800ff54 <vTaskPlaceOnEventList+0x70>)
 800feea:	460c      	mov	r4, r1
 800feec:	6829      	ldr	r1, [r5, #0]
 800feee:	3118      	adds	r1, #24
 800fef0:	f7fe f972 	bl	800e1d8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fef4:	4b18      	ldr	r3, [pc, #96]	; (800ff58 <vTaskPlaceOnEventList+0x74>)
 800fef6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fef8:	6828      	ldr	r0, [r5, #0]
 800fefa:	3004      	adds	r0, #4
 800fefc:	f7fe f984 	bl	800e208 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ff00:	1c63      	adds	r3, r4, #1
 800ff02:	d014      	beq.n	800ff2e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ff04:	682b      	ldr	r3, [r5, #0]
 800ff06:	19a4      	adds	r4, r4, r6
 800ff08:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ff0a:	d317      	bcc.n	800ff3c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff0c:	4b13      	ldr	r3, [pc, #76]	; (800ff5c <vTaskPlaceOnEventList+0x78>)
 800ff0e:	6818      	ldr	r0, [r3, #0]
 800ff10:	6829      	ldr	r1, [r5, #0]
}
 800ff12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff16:	3104      	adds	r1, #4
 800ff18:	f7fe b95e 	b.w	800e1d8 <vListInsert>
 800ff1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff20:	f383 8811 	msr	BASEPRI, r3
 800ff24:	f3bf 8f6f 	isb	sy
 800ff28:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ff2c:	e7fe      	b.n	800ff2c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff2e:	6829      	ldr	r1, [r5, #0]
 800ff30:	480b      	ldr	r0, [pc, #44]	; (800ff60 <vTaskPlaceOnEventList+0x7c>)
}
 800ff32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff36:	3104      	adds	r1, #4
 800ff38:	f7fe b93e 	b.w	800e1b8 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff3c:	4b09      	ldr	r3, [pc, #36]	; (800ff64 <vTaskPlaceOnEventList+0x80>)
 800ff3e:	6818      	ldr	r0, [r3, #0]
 800ff40:	6829      	ldr	r1, [r5, #0]
 800ff42:	3104      	adds	r1, #4
 800ff44:	f7fe f948 	bl	800e1d8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ff48:	4b07      	ldr	r3, [pc, #28]	; (800ff68 <vTaskPlaceOnEventList+0x84>)
 800ff4a:	681a      	ldr	r2, [r3, #0]
 800ff4c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ff4e:	bf38      	it	cc
 800ff50:	601c      	strcc	r4, [r3, #0]
}
 800ff52:	bd70      	pop	{r4, r5, r6, pc}
 800ff54:	20013200 	.word	0x20013200
 800ff58:	200136f4 	.word	0x200136f4
 800ff5c:	20013208 	.word	0x20013208
 800ff60:	200136cc 	.word	0x200136cc
 800ff64:	20013204 	.word	0x20013204
 800ff68:	200136a8 	.word	0x200136a8

0800ff6c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ff6c:	b330      	cbz	r0, 800ffbc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ff6e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ff70:	4e1d      	ldr	r6, [pc, #116]	; (800ffe8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ff72:	460c      	mov	r4, r1
 800ff74:	6831      	ldr	r1, [r6, #0]
 800ff76:	4615      	mov	r5, r2
 800ff78:	3118      	adds	r1, #24
 800ff7a:	f7fe f91d 	bl	800e1b8 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ff7e:	4b1b      	ldr	r3, [pc, #108]	; (800ffec <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ff80:	b985      	cbnz	r5, 800ffa4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ff82:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff84:	6830      	ldr	r0, [r6, #0]
 800ff86:	3004      	adds	r0, #4
 800ff88:	f7fe f93e 	bl	800e208 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ff8c:	6833      	ldr	r3, [r6, #0]
 800ff8e:	1964      	adds	r4, r4, r5
 800ff90:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ff92:	d31c      	bcc.n	800ffce <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff94:	4b16      	ldr	r3, [pc, #88]	; (800fff0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ff96:	6818      	ldr	r0, [r3, #0]
 800ff98:	6831      	ldr	r1, [r6, #0]
	}
 800ff9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff9e:	3104      	adds	r1, #4
 800ffa0:	f7fe b91a 	b.w	800e1d8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ffa4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ffa6:	6830      	ldr	r0, [r6, #0]
 800ffa8:	3004      	adds	r0, #4
 800ffaa:	f7fe f92d 	bl	800e208 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ffae:	6831      	ldr	r1, [r6, #0]
 800ffb0:	4810      	ldr	r0, [pc, #64]	; (800fff4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ffb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ffb6:	3104      	adds	r1, #4
 800ffb8:	f7fe b8fe 	b.w	800e1b8 <vListInsertEnd>
 800ffbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffc0:	f383 8811 	msr	BASEPRI, r3
 800ffc4:	f3bf 8f6f 	isb	sy
 800ffc8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ffcc:	e7fe      	b.n	800ffcc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ffce:	4b0a      	ldr	r3, [pc, #40]	; (800fff8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ffd0:	6818      	ldr	r0, [r3, #0]
 800ffd2:	6831      	ldr	r1, [r6, #0]
 800ffd4:	3104      	adds	r1, #4
 800ffd6:	f7fe f8ff 	bl	800e1d8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ffda:	4b08      	ldr	r3, [pc, #32]	; (800fffc <vTaskPlaceOnEventListRestricted+0x90>)
 800ffdc:	681a      	ldr	r2, [r3, #0]
 800ffde:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ffe0:	bf38      	it	cc
 800ffe2:	601c      	strcc	r4, [r3, #0]
	}
 800ffe4:	bd70      	pop	{r4, r5, r6, pc}
 800ffe6:	bf00      	nop
 800ffe8:	20013200 	.word	0x20013200
 800ffec:	200136f4 	.word	0x200136f4
 800fff0:	20013208 	.word	0x20013208
 800fff4:	200136cc 	.word	0x200136cc
 800fff8:	20013204 	.word	0x20013204
 800fffc:	200136a8 	.word	0x200136a8

08010000 <xTaskRemoveFromEventList>:
{
 8010000:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010002:	68c3      	ldr	r3, [r0, #12]
 8010004:	68dc      	ldr	r4, [r3, #12]
{
 8010006:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8010008:	2c00      	cmp	r4, #0
 801000a:	d02b      	beq.n	8010064 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 801000c:	f104 0518 	add.w	r5, r4, #24
 8010010:	4628      	mov	r0, r5
 8010012:	f7fe f8f9 	bl	800e208 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010016:	4b18      	ldr	r3, [pc, #96]	; (8010078 <xTaskRemoveFromEventList+0x78>)
 8010018:	681b      	ldr	r3, [r3, #0]
 801001a:	b17b      	cbz	r3, 801003c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 801001c:	4817      	ldr	r0, [pc, #92]	; (801007c <xTaskRemoveFromEventList+0x7c>)
 801001e:	4629      	mov	r1, r5
 8010020:	f7fe f8ca 	bl	800e1b8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010024:	4b16      	ldr	r3, [pc, #88]	; (8010080 <xTaskRemoveFromEventList+0x80>)
 8010026:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010028:	681b      	ldr	r3, [r3, #0]
 801002a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801002c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 801002e:	bf85      	ittet	hi
 8010030:	4b14      	ldrhi	r3, [pc, #80]	; (8010084 <xTaskRemoveFromEventList+0x84>)
 8010032:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010034:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010036:	6018      	strhi	r0, [r3, #0]
}
 8010038:	b003      	add	sp, #12
 801003a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 801003c:	1d21      	adds	r1, r4, #4
 801003e:	4608      	mov	r0, r1
 8010040:	9101      	str	r1, [sp, #4]
 8010042:	f7fe f8e1 	bl	800e208 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010046:	4a10      	ldr	r2, [pc, #64]	; (8010088 <xTaskRemoveFromEventList+0x88>)
 8010048:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801004a:	6810      	ldr	r0, [r2, #0]
 801004c:	9901      	ldr	r1, [sp, #4]
 801004e:	4283      	cmp	r3, r0
 8010050:	480e      	ldr	r0, [pc, #56]	; (801008c <xTaskRemoveFromEventList+0x8c>)
 8010052:	bf88      	it	hi
 8010054:	6013      	strhi	r3, [r2, #0]
 8010056:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801005a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801005e:	f7fe f8ab 	bl	800e1b8 <vListInsertEnd>
 8010062:	e7df      	b.n	8010024 <xTaskRemoveFromEventList+0x24>
 8010064:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010068:	f383 8811 	msr	BASEPRI, r3
 801006c:	f3bf 8f6f 	isb	sy
 8010070:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8010074:	e7fe      	b.n	8010074 <xTaskRemoveFromEventList+0x74>
 8010076:	bf00      	nop
 8010078:	20013674 	.word	0x20013674
 801007c:	200136b4 	.word	0x200136b4
 8010080:	20013200 	.word	0x20013200
 8010084:	200136f8 	.word	0x200136f8
 8010088:	2001367c 	.word	0x2001367c
 801008c:	2001320c 	.word	0x2001320c

08010090 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010090:	4a03      	ldr	r2, [pc, #12]	; (80100a0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010092:	4b04      	ldr	r3, [pc, #16]	; (80100a4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010094:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010096:	681b      	ldr	r3, [r3, #0]
 8010098:	e9c0 2300 	strd	r2, r3, [r0]
}
 801009c:	4770      	bx	lr
 801009e:	bf00      	nop
 80100a0:	200136ac 	.word	0x200136ac
 80100a4:	200136f4 	.word	0x200136f4

080100a8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 80100a8:	b328      	cbz	r0, 80100f6 <xTaskCheckForTimeOut+0x4e>
{
 80100aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80100ac:	460d      	mov	r5, r1
 80100ae:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 80100b0:	b1c1      	cbz	r1, 80100e4 <xTaskCheckForTimeOut+0x3c>
 80100b2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80100b4:	f7fe f926 	bl	800e304 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 80100b8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 80100ba:	4a1d      	ldr	r2, [pc, #116]	; (8010130 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 80100bc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 80100be:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80100c0:	d030      	beq.n	8010124 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80100c2:	f8df c070 	ldr.w	ip, [pc, #112]	; 8010134 <xTaskCheckForTimeOut+0x8c>
 80100c6:	e9d4 6000 	ldrd	r6, r0, [r4]
 80100ca:	f8dc 7000 	ldr.w	r7, [ip]
 80100ce:	42be      	cmp	r6, r7
 80100d0:	d01a      	beq.n	8010108 <xTaskCheckForTimeOut+0x60>
 80100d2:	4288      	cmp	r0, r1
 80100d4:	d818      	bhi.n	8010108 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 80100d6:	2001      	movs	r0, #1
 80100d8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80100da:	f7fe f935 	bl	800e348 <vPortExitCritical>
}
 80100de:	9801      	ldr	r0, [sp, #4]
 80100e0:	b003      	add	sp, #12
 80100e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100e8:	f383 8811 	msr	BASEPRI, r3
 80100ec:	f3bf 8f6f 	isb	sy
 80100f0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 80100f4:	e7fe      	b.n	80100f4 <xTaskCheckForTimeOut+0x4c>
 80100f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100fa:	f383 8811 	msr	BASEPRI, r3
 80100fe:	f3bf 8f6f 	isb	sy
 8010102:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8010106:	e7fe      	b.n	8010106 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010108:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 801010c:	4573      	cmp	r3, lr
 801010e:	d90b      	bls.n	8010128 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8010110:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010112:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010116:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8010118:	4403      	add	r3, r0
 801011a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 801011c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 801011e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8010122:	e7d9      	b.n	80100d8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8010124:	2000      	movs	r0, #0
 8010126:	e7d7      	b.n	80100d8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8010128:	2300      	movs	r3, #0
 801012a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 801012c:	2001      	movs	r0, #1
 801012e:	e7d3      	b.n	80100d8 <xTaskCheckForTimeOut+0x30>
 8010130:	200136f4 	.word	0x200136f4
 8010134:	200136ac 	.word	0x200136ac

08010138 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8010138:	4b01      	ldr	r3, [pc, #4]	; (8010140 <vTaskMissedYield+0x8>)
 801013a:	2201      	movs	r2, #1
 801013c:	601a      	str	r2, [r3, #0]
}
 801013e:	4770      	bx	lr
 8010140:	200136f8 	.word	0x200136f8

08010144 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8010144:	4b05      	ldr	r3, [pc, #20]	; (801015c <xTaskGetSchedulerState+0x18>)
 8010146:	681b      	ldr	r3, [r3, #0]
 8010148:	b133      	cbz	r3, 8010158 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801014a:	4b05      	ldr	r3, [pc, #20]	; (8010160 <xTaskGetSchedulerState+0x1c>)
 801014c:	6818      	ldr	r0, [r3, #0]
 801014e:	fab0 f080 	clz	r0, r0
 8010152:	0940      	lsrs	r0, r0, #5
 8010154:	0040      	lsls	r0, r0, #1
 8010156:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010158:	2001      	movs	r0, #1
	}
 801015a:	4770      	bx	lr
 801015c:	200136c8 	.word	0x200136c8
 8010160:	20013674 	.word	0x20013674

08010164 <xTaskPriorityInherit>:
	{
 8010164:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010166:	4604      	mov	r4, r0
	{
 8010168:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 801016a:	b1c8      	cbz	r0, 80101a0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 801016c:	4d1d      	ldr	r5, [pc, #116]	; (80101e4 <xTaskPriorityInherit+0x80>)
 801016e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010170:	682a      	ldr	r2, [r5, #0]
 8010172:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010174:	4293      	cmp	r3, r2
 8010176:	d215      	bcs.n	80101a4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010178:	6982      	ldr	r2, [r0, #24]
 801017a:	2a00      	cmp	r2, #0
 801017c:	db04      	blt.n	8010188 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801017e:	682a      	ldr	r2, [r5, #0]
 8010180:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010182:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8010186:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010188:	4e17      	ldr	r6, [pc, #92]	; (80101e8 <xTaskPriorityInherit+0x84>)
 801018a:	6962      	ldr	r2, [r4, #20]
 801018c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010190:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010194:	429a      	cmp	r2, r3
 8010196:	d00e      	beq.n	80101b6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010198:	682b      	ldr	r3, [r5, #0]
 801019a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801019c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 801019e:	2001      	movs	r0, #1
	}
 80101a0:	b002      	add	sp, #8
 80101a2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80101a4:	682b      	ldr	r3, [r5, #0]
 80101a6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80101a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80101aa:	4298      	cmp	r0, r3
 80101ac:	bf2c      	ite	cs
 80101ae:	2000      	movcs	r0, #0
 80101b0:	2001      	movcc	r0, #1
	}
 80101b2:	b002      	add	sp, #8
 80101b4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80101b6:	1d21      	adds	r1, r4, #4
 80101b8:	4608      	mov	r0, r1
 80101ba:	9101      	str	r1, [sp, #4]
 80101bc:	f7fe f824 	bl	800e208 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80101c0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80101c2:	4b0a      	ldr	r3, [pc, #40]	; (80101ec <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80101c4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80101c6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80101c8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80101ca:	4290      	cmp	r0, r2
 80101cc:	bf88      	it	hi
 80101ce:	6018      	strhi	r0, [r3, #0]
 80101d0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80101d4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 80101d8:	9901      	ldr	r1, [sp, #4]
 80101da:	f7fd ffed 	bl	800e1b8 <vListInsertEnd>
				xReturn = pdTRUE;
 80101de:	2001      	movs	r0, #1
 80101e0:	e7de      	b.n	80101a0 <xTaskPriorityInherit+0x3c>
 80101e2:	bf00      	nop
 80101e4:	20013200 	.word	0x20013200
 80101e8:	2001320c 	.word	0x2001320c
 80101ec:	2001367c 	.word	0x2001367c

080101f0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 80101f0:	b318      	cbz	r0, 801023a <xTaskPriorityDisinherit+0x4a>
	{
 80101f2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 80101f4:	4b1e      	ldr	r3, [pc, #120]	; (8010270 <xTaskPriorityDisinherit+0x80>)
 80101f6:	681c      	ldr	r4, [r3, #0]
 80101f8:	4284      	cmp	r4, r0
	{
 80101fa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 80101fc:	d008      	beq.n	8010210 <xTaskPriorityDisinherit+0x20>
 80101fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010202:	f383 8811 	msr	BASEPRI, r3
 8010206:	f3bf 8f6f 	isb	sy
 801020a:	f3bf 8f4f 	dsb	sy
 801020e:	e7fe      	b.n	801020e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8010210:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010212:	b14b      	cbz	r3, 8010228 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010214:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010216:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8010218:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801021a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 801021c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801021e:	d000      	beq.n	8010222 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8010220:	b16b      	cbz	r3, 801023e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8010222:	2000      	movs	r0, #0
	}
 8010224:	b002      	add	sp, #8
 8010226:	bd10      	pop	{r4, pc}
 8010228:	f04f 0350 	mov.w	r3, #80	; 0x50
 801022c:	f383 8811 	msr	BASEPRI, r3
 8010230:	f3bf 8f6f 	isb	sy
 8010234:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010238:	e7fe      	b.n	8010238 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 801023a:	2000      	movs	r0, #0
	}
 801023c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801023e:	1d21      	adds	r1, r4, #4
 8010240:	4608      	mov	r0, r1
 8010242:	9101      	str	r1, [sp, #4]
 8010244:	f7fd ffe0 	bl	800e208 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010248:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 801024a:	4a0a      	ldr	r2, [pc, #40]	; (8010274 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 801024c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801024e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8010252:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8010254:	6810      	ldr	r0, [r2, #0]
 8010256:	9901      	ldr	r1, [sp, #4]
 8010258:	4283      	cmp	r3, r0
 801025a:	4807      	ldr	r0, [pc, #28]	; (8010278 <xTaskPriorityDisinherit+0x88>)
 801025c:	bf88      	it	hi
 801025e:	6013      	strhi	r3, [r2, #0]
 8010260:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010264:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8010268:	f7fd ffa6 	bl	800e1b8 <vListInsertEnd>
					xReturn = pdTRUE;
 801026c:	2001      	movs	r0, #1
		return xReturn;
 801026e:	e7d9      	b.n	8010224 <xTaskPriorityDisinherit+0x34>
 8010270:	20013200 	.word	0x20013200
 8010274:	2001367c 	.word	0x2001367c
 8010278:	2001320c 	.word	0x2001320c

0801027c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 801027c:	2800      	cmp	r0, #0
 801027e:	d041      	beq.n	8010304 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8010280:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8010282:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8010284:	b083      	sub	sp, #12
 8010286:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8010288:	b153      	cbz	r3, 80102a0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801028a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 801028c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801028e:	4281      	cmp	r1, r0
 8010290:	bf38      	it	cc
 8010292:	4601      	movcc	r1, r0
 8010294:	428a      	cmp	r2, r1
 8010296:	d001      	beq.n	801029c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010298:	2b01      	cmp	r3, #1
 801029a:	d00a      	beq.n	80102b2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 801029c:	b003      	add	sp, #12
 801029e:	bd30      	pop	{r4, r5, pc}
 80102a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102a4:	f383 8811 	msr	BASEPRI, r3
 80102a8:	f3bf 8f6f 	isb	sy
 80102ac:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 80102b0:	e7fe      	b.n	80102b0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 80102b2:	4b19      	ldr	r3, [pc, #100]	; (8010318 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 80102b4:	681b      	ldr	r3, [r3, #0]
 80102b6:	42a3      	cmp	r3, r4
 80102b8:	d025      	beq.n	8010306 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80102ba:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 80102bc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80102be:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102c0:	bfa8      	it	ge
 80102c2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80102c6:	4d15      	ldr	r5, [pc, #84]	; (801031c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102c8:	bfa8      	it	ge
 80102ca:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80102cc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80102d0:	6961      	ldr	r1, [r4, #20]
 80102d2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 80102d6:	4299      	cmp	r1, r3
 80102d8:	d1e0      	bne.n	801029c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80102da:	1d21      	adds	r1, r4, #4
 80102dc:	4608      	mov	r0, r1
 80102de:	9101      	str	r1, [sp, #4]
 80102e0:	f7fd ff92 	bl	800e208 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80102e4:	4b0e      	ldr	r3, [pc, #56]	; (8010320 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 80102e6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80102e8:	681a      	ldr	r2, [r3, #0]
 80102ea:	9901      	ldr	r1, [sp, #4]
 80102ec:	4290      	cmp	r0, r2
 80102ee:	bf88      	it	hi
 80102f0:	6018      	strhi	r0, [r3, #0]
 80102f2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80102f6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 80102fa:	b003      	add	sp, #12
 80102fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8010300:	f7fd bf5a 	b.w	800e1b8 <vListInsertEnd>
 8010304:	4770      	bx	lr
 8010306:	f04f 0350 	mov.w	r3, #80	; 0x50
 801030a:	f383 8811 	msr	BASEPRI, r3
 801030e:	f3bf 8f6f 	isb	sy
 8010312:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8010316:	e7fe      	b.n	8010316 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8010318:	20013200 	.word	0x20013200
 801031c:	2001320c 	.word	0x2001320c
 8010320:	2001367c 	.word	0x2001367c

08010324 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8010324:	4b04      	ldr	r3, [pc, #16]	; (8010338 <pvTaskIncrementMutexHeldCount+0x14>)
 8010326:	681a      	ldr	r2, [r3, #0]
 8010328:	b11a      	cbz	r2, 8010332 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801032a:	6819      	ldr	r1, [r3, #0]
 801032c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801032e:	3201      	adds	r2, #1
 8010330:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8010332:	6818      	ldr	r0, [r3, #0]
	}
 8010334:	4770      	bx	lr
 8010336:	bf00      	nop
 8010338:	20013200 	.word	0x20013200

0801033c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801033c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010340:	4e22      	ldr	r6, [pc, #136]	; (80103cc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8010342:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80103d4 <prvSwitchTimerLists+0x98>
{
 8010346:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8010348:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801034c:	e00d      	b.n	801036a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801034e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010350:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010352:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010354:	1d25      	adds	r5, r4, #4
 8010356:	4628      	mov	r0, r5
 8010358:	f7fd ff56 	bl	800e208 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801035c:	6a23      	ldr	r3, [r4, #32]
 801035e:	4620      	mov	r0, r4
 8010360:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010362:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8010366:	075b      	lsls	r3, r3, #29
 8010368:	d40a      	bmi.n	8010380 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801036a:	6833      	ldr	r3, [r6, #0]
 801036c:	681a      	ldr	r2, [r3, #0]
 801036e:	2a00      	cmp	r2, #0
 8010370:	d1ed      	bne.n	801034e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8010372:	4a17      	ldr	r2, [pc, #92]	; (80103d0 <prvSwitchTimerLists+0x94>)
 8010374:	6811      	ldr	r1, [r2, #0]
 8010376:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8010378:	6013      	str	r3, [r2, #0]
}
 801037a:	b005      	add	sp, #20
 801037c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8010380:	69a3      	ldr	r3, [r4, #24]
 8010382:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8010384:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010386:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8010388:	d205      	bcs.n	8010396 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801038a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801038c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801038e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010390:	f7fd ff22 	bl	800e1d8 <vListInsert>
 8010394:	e7e9      	b.n	801036a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8010396:	f8d9 3000 	ldr.w	r3, [r9]
 801039a:	b16b      	cbz	r3, 80103b8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801039c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80103a0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80103a2:	f7ff fecf 	bl	8010144 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80103a6:	2300      	movs	r3, #0
 80103a8:	f8d9 0000 	ldr.w	r0, [r9]
 80103ac:	461a      	mov	r2, r3
 80103ae:	4669      	mov	r1, sp
 80103b0:	f7fe fa9c 	bl	800e8ec <xQueueGenericSend>
				configASSERT( xResult );
 80103b4:	2800      	cmp	r0, #0
 80103b6:	d1d8      	bne.n	801036a <prvSwitchTimerLists+0x2e>
 80103b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103bc:	f383 8811 	msr	BASEPRI, r3
 80103c0:	f3bf 8f6f 	isb	sy
 80103c4:	f3bf 8f4f 	dsb	sy
 80103c8:	e7fe      	b.n	80103c8 <prvSwitchTimerLists+0x8c>
 80103ca:	bf00      	nop
 80103cc:	200136fc 	.word	0x200136fc
 80103d0:	20013700 	.word	0x20013700
 80103d4:	20013820 	.word	0x20013820

080103d8 <prvTimerTask>:
{
 80103d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103dc:	4e9b      	ldr	r6, [pc, #620]	; (801064c <prvTimerTask+0x274>)
 80103de:	4d9c      	ldr	r5, [pc, #624]	; (8010650 <prvTimerTask+0x278>)
 80103e0:	4c9c      	ldr	r4, [pc, #624]	; (8010654 <prvTimerTask+0x27c>)
 80103e2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80103e4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80103e8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80103ec:	6833      	ldr	r3, [r6, #0]
 80103ee:	681f      	ldr	r7, [r3, #0]
 80103f0:	2f00      	cmp	r7, #0
 80103f2:	f000 80a8 	beq.w	8010546 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80103f6:	68db      	ldr	r3, [r3, #12]
 80103f8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80103fa:	f7ff fcf9 	bl	800fdf0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80103fe:	f7ff fd0f 	bl	800fe20 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010402:	682a      	ldr	r2, [r5, #0]
 8010404:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8010406:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010408:	f0c0 80ae 	bcc.w	8010568 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801040c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 801040e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8010410:	f240 80b4 	bls.w	801057c <prvTimerTask+0x1a4>
 8010414:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8010416:	6820      	ldr	r0, [r4, #0]
 8010418:	eba7 010a 	sub.w	r1, r7, sl
 801041c:	f7ff f89a 	bl	800f554 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8010420:	f7ff fcee 	bl	800fe00 <xTaskResumeAll>
 8010424:	b928      	cbnz	r0, 8010432 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8010426:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801042a:	f3bf 8f4f 	dsb	sy
 801042e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010432:	6820      	ldr	r0, [r4, #0]
 8010434:	2200      	movs	r2, #0
 8010436:	a902      	add	r1, sp, #8
 8010438:	f7fe fc94 	bl	800ed64 <xQueueReceive>
 801043c:	2800      	cmp	r0, #0
 801043e:	d0d5      	beq.n	80103ec <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010440:	9b02      	ldr	r3, [sp, #8]
 8010442:	2b00      	cmp	r3, #0
 8010444:	db76      	blt.n	8010534 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010446:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010448:	697b      	ldr	r3, [r7, #20]
 801044a:	b113      	cbz	r3, 8010452 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801044c:	1d38      	adds	r0, r7, #4
 801044e:	f7fd fedb 	bl	800e208 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8010452:	f7ff fce5 	bl	800fe20 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010456:	682b      	ldr	r3, [r5, #0]
 8010458:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801045a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801045c:	f0c0 808b 	bcc.w	8010576 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010460:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010462:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010466:	2b09      	cmp	r3, #9
 8010468:	d8e3      	bhi.n	8010432 <prvTimerTask+0x5a>
 801046a:	e8df f003 	tbb	[pc, r3]
 801046e:	0505      	.short	0x0505
 8010470:	5a3d5305 	.word	0x5a3d5305
 8010474:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010478:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801047c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801047e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010480:	f043 0301 	orr.w	r3, r3, #1
 8010484:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010488:	9b03      	ldr	r3, [sp, #12]
 801048a:	1899      	adds	r1, r3, r2
 801048c:	bf2c      	ite	cs
 801048e:	2001      	movcs	r0, #1
 8010490:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010492:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010494:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010496:	f200 808c 	bhi.w	80105b2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801049a:	ebaa 0303 	sub.w	r3, sl, r3
 801049e:	429a      	cmp	r2, r3
 80104a0:	d832      	bhi.n	8010508 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80104a2:	6a3b      	ldr	r3, [r7, #32]
 80104a4:	4638      	mov	r0, r7
 80104a6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80104a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80104ac:	075b      	lsls	r3, r3, #29
 80104ae:	d5c0      	bpl.n	8010432 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 80104b0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80104b2:	9903      	ldr	r1, [sp, #12]
 80104b4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 80104b6:	b172      	cbz	r2, 80104d6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80104b8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80104ba:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 80104be:	2300      	movs	r3, #0
 80104c0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80104c2:	f7ff fe3f 	bl	8010144 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80104c6:	2300      	movs	r3, #0
 80104c8:	6820      	ldr	r0, [r4, #0]
 80104ca:	461a      	mov	r2, r3
 80104cc:	a906      	add	r1, sp, #24
 80104ce:	f7fe fa0d 	bl	800e8ec <xQueueGenericSend>
							configASSERT( xResult );
 80104d2:	2800      	cmp	r0, #0
 80104d4:	d1ad      	bne.n	8010432 <prvTimerTask+0x5a>
 80104d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104da:	f383 8811 	msr	BASEPRI, r3
 80104de:	f3bf 8f6f 	isb	sy
 80104e2:	f3bf 8f4f 	dsb	sy
 80104e6:	e7fe      	b.n	80104e6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80104e8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80104ec:	f043 0301 	orr.w	r3, r3, #1
 80104f0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80104f4:	9b03      	ldr	r3, [sp, #12]
 80104f6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80104f8:	2b00      	cmp	r3, #0
 80104fa:	f000 809d 	beq.w	8010638 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80104fe:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8010500:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010502:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010504:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8010506:	d85e      	bhi.n	80105c6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010508:	4b53      	ldr	r3, [pc, #332]	; (8010658 <prvTimerTask+0x280>)
 801050a:	1d39      	adds	r1, r7, #4
 801050c:	6818      	ldr	r0, [r3, #0]
 801050e:	f7fd fe63 	bl	800e1d8 <vListInsert>
	return xProcessTimerNow;
 8010512:	e78e      	b.n	8010432 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010514:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010518:	f023 0301 	bic.w	r3, r3, #1
 801051c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010520:	e787      	b.n	8010432 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010522:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010526:	079a      	lsls	r2, r3, #30
 8010528:	d552      	bpl.n	80105d0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801052a:	f023 0301 	bic.w	r3, r3, #1
 801052e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010532:	e77e      	b.n	8010432 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010534:	9b03      	ldr	r3, [sp, #12]
 8010536:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801053a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801053c:	9b02      	ldr	r3, [sp, #8]
 801053e:	2b00      	cmp	r3, #0
 8010540:	f6ff af77 	blt.w	8010432 <prvTimerTask+0x5a>
 8010544:	e77f      	b.n	8010446 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010546:	f7ff fc53 	bl	800fdf0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801054a:	f7ff fc69 	bl	800fe20 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801054e:	682a      	ldr	r2, [r5, #0]
 8010550:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010552:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010554:	d808      	bhi.n	8010568 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010556:	4b40      	ldr	r3, [pc, #256]	; (8010658 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010558:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801055c:	681a      	ldr	r2, [r3, #0]
 801055e:	6812      	ldr	r2, [r2, #0]
 8010560:	fab2 f282 	clz	r2, r2
 8010564:	0952      	lsrs	r2, r2, #5
 8010566:	e756      	b.n	8010416 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010568:	f7ff fee8 	bl	801033c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801056c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010570:	f7ff fc46 	bl	800fe00 <xTaskResumeAll>
 8010574:	e75d      	b.n	8010432 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010576:	f7ff fee1 	bl	801033c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801057a:	e771      	b.n	8010460 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801057c:	f7ff fc40 	bl	800fe00 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010580:	6832      	ldr	r2, [r6, #0]
 8010582:	68d2      	ldr	r2, [r2, #12]
 8010584:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010588:	f10b 0104 	add.w	r1, fp, #4
 801058c:	4608      	mov	r0, r1
 801058e:	9101      	str	r1, [sp, #4]
 8010590:	f7fd fe3a 	bl	800e208 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010594:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010598:	9901      	ldr	r1, [sp, #4]
 801059a:	f010 0f04 	tst.w	r0, #4
 801059e:	d11b      	bne.n	80105d8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80105a0:	f020 0001 	bic.w	r0, r0, #1
 80105a4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80105a8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80105ac:	4658      	mov	r0, fp
 80105ae:	4798      	blx	r3
}
 80105b0:	e73f      	b.n	8010432 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80105b2:	4553      	cmp	r3, sl
 80105b4:	d902      	bls.n	80105bc <prvTimerTask+0x1e4>
 80105b6:	2800      	cmp	r0, #0
 80105b8:	f43f af73 	beq.w	80104a2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105bc:	6830      	ldr	r0, [r6, #0]
 80105be:	1d39      	adds	r1, r7, #4
 80105c0:	f7fd fe0a 	bl	800e1d8 <vListInsert>
	return xProcessTimerNow;
 80105c4:	e735      	b.n	8010432 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105c6:	6830      	ldr	r0, [r6, #0]
 80105c8:	1d39      	adds	r1, r7, #4
 80105ca:	f7fd fe05 	bl	800e1d8 <vListInsert>
 80105ce:	e730      	b.n	8010432 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80105d0:	4638      	mov	r0, r7
 80105d2:	f7fd fd7d 	bl	800e0d0 <vPortFree>
 80105d6:	e72c      	b.n	8010432 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80105d8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80105dc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80105e0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80105e2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80105e4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80105e8:	d903      	bls.n	80105f2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105ea:	6830      	ldr	r0, [r6, #0]
 80105ec:	f7fd fdf4 	bl	800e1d8 <vListInsert>
	return xProcessTimerNow;
 80105f0:	e7da      	b.n	80105a8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80105f2:	ebaa 0307 	sub.w	r3, sl, r7
 80105f6:	429a      	cmp	r2, r3
 80105f8:	d819      	bhi.n	801062e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80105fa:	6823      	ldr	r3, [r4, #0]
 80105fc:	b173      	cbz	r3, 801061c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80105fe:	2300      	movs	r3, #0
 8010600:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8010602:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010604:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010608:	f7ff fd9c 	bl	8010144 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801060c:	2300      	movs	r3, #0
 801060e:	6820      	ldr	r0, [r4, #0]
 8010610:	461a      	mov	r2, r3
 8010612:	a906      	add	r1, sp, #24
 8010614:	f7fe f96a 	bl	800e8ec <xQueueGenericSend>
			configASSERT( xResult );
 8010618:	2800      	cmp	r0, #0
 801061a:	d1c5      	bne.n	80105a8 <prvTimerTask+0x1d0>
 801061c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010620:	f383 8811 	msr	BASEPRI, r3
 8010624:	f3bf 8f6f 	isb	sy
 8010628:	f3bf 8f4f 	dsb	sy
 801062c:	e7fe      	b.n	801062c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801062e:	4b0a      	ldr	r3, [pc, #40]	; (8010658 <prvTimerTask+0x280>)
 8010630:	6818      	ldr	r0, [r3, #0]
 8010632:	f7fd fdd1 	bl	800e1d8 <vListInsert>
	return xProcessTimerNow;
 8010636:	e7b7      	b.n	80105a8 <prvTimerTask+0x1d0>
 8010638:	f04f 0350 	mov.w	r3, #80	; 0x50
 801063c:	f383 8811 	msr	BASEPRI, r3
 8010640:	f3bf 8f6f 	isb	sy
 8010644:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010648:	e7fe      	b.n	8010648 <prvTimerTask+0x270>
 801064a:	bf00      	nop
 801064c:	200136fc 	.word	0x200136fc
 8010650:	200137cc 	.word	0x200137cc
 8010654:	20013820 	.word	0x20013820
 8010658:	20013700 	.word	0x20013700

0801065c <xTimerCreateTimerTask>:
{
 801065c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801065e:	4c23      	ldr	r4, [pc, #140]	; (80106ec <xTimerCreateTimerTask+0x90>)
{
 8010660:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010662:	f7fd fe4f 	bl	800e304 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010666:	6825      	ldr	r5, [r4, #0]
 8010668:	b335      	cbz	r5, 80106b8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801066a:	f7fd fe6d 	bl	800e348 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801066e:	6823      	ldr	r3, [r4, #0]
 8010670:	b1cb      	cbz	r3, 80106a6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010672:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010674:	aa07      	add	r2, sp, #28
 8010676:	a906      	add	r1, sp, #24
 8010678:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801067a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801067e:	f7fd fc5b 	bl	800df38 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010682:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010686:	2302      	movs	r3, #2
 8010688:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801068c:	9300      	str	r3, [sp, #0]
 801068e:	9a07      	ldr	r2, [sp, #28]
 8010690:	4917      	ldr	r1, [pc, #92]	; (80106f0 <xTimerCreateTimerTask+0x94>)
 8010692:	4818      	ldr	r0, [pc, #96]	; (80106f4 <xTimerCreateTimerTask+0x98>)
 8010694:	4623      	mov	r3, r4
 8010696:	f7ff fa6d 	bl	800fb74 <xTaskCreateStatic>
 801069a:	4b17      	ldr	r3, [pc, #92]	; (80106f8 <xTimerCreateTimerTask+0x9c>)
 801069c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801069e:	b110      	cbz	r0, 80106a6 <xTimerCreateTimerTask+0x4a>
}
 80106a0:	2001      	movs	r0, #1
 80106a2:	b009      	add	sp, #36	; 0x24
 80106a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106aa:	f383 8811 	msr	BASEPRI, r3
 80106ae:	f3bf 8f6f 	isb	sy
 80106b2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80106b6:	e7fe      	b.n	80106b6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80106b8:	4f10      	ldr	r7, [pc, #64]	; (80106fc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80106ba:	4e11      	ldr	r6, [pc, #68]	; (8010700 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80106bc:	4638      	mov	r0, r7
 80106be:	f7fd fd6b 	bl	800e198 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80106c2:	4630      	mov	r0, r6
 80106c4:	f7fd fd68 	bl	800e198 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80106c8:	4a0e      	ldr	r2, [pc, #56]	; (8010704 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106ca:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80106cc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80106ce:	4a0e      	ldr	r2, [pc, #56]	; (8010708 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106d0:	4b0e      	ldr	r3, [pc, #56]	; (801070c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80106d2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106d4:	2110      	movs	r1, #16
 80106d6:	4a0e      	ldr	r2, [pc, #56]	; (8010710 <xTimerCreateTimerTask+0xb4>)
 80106d8:	200a      	movs	r0, #10
 80106da:	f7fd ffb1 	bl	800e640 <xQueueGenericCreateStatic>
 80106de:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80106e0:	2800      	cmp	r0, #0
 80106e2:	d0c2      	beq.n	801066a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80106e4:	490b      	ldr	r1, [pc, #44]	; (8010714 <xTimerCreateTimerTask+0xb8>)
 80106e6:	f7fe ff0d 	bl	800f504 <vQueueAddToRegistry>
 80106ea:	e7be      	b.n	801066a <xTimerCreateTimerTask+0xe>
 80106ec:	20013820 	.word	0x20013820
 80106f0:	0802f544 	.word	0x0802f544
 80106f4:	080103d9 	.word	0x080103d9
 80106f8:	20013824 	.word	0x20013824
 80106fc:	200137a4 	.word	0x200137a4
 8010700:	200137b8 	.word	0x200137b8
 8010704:	200136fc 	.word	0x200136fc
 8010708:	20013700 	.word	0x20013700
 801070c:	200137d0 	.word	0x200137d0
 8010710:	20013704 	.word	0x20013704
 8010714:	0802f53c 	.word	0x0802f53c

08010718 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010718:	8880      	ldrh	r0, [r0, #4]
 801071a:	4770      	bx	lr

0801071c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801071c:	b570      	push	{r4, r5, r6, lr}
 801071e:	6803      	ldr	r3, [r0, #0]
 8010720:	4605      	mov	r5, r0
 8010722:	460c      	mov	r4, r1
 8010724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010726:	2100      	movs	r1, #0
 8010728:	4798      	blx	r3
 801072a:	682b      	ldr	r3, [r5, #0]
 801072c:	4606      	mov	r6, r0
 801072e:	6a1b      	ldr	r3, [r3, #32]
 8010730:	4628      	mov	r0, r5
 8010732:	4798      	blx	r3
 8010734:	1ba4      	subs	r4, r4, r6
 8010736:	b2a4      	uxth	r4, r4
 8010738:	fbb4 f0f0 	udiv	r0, r4, r0
 801073c:	bd70      	pop	{r4, r5, r6, pc}

0801073e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801073e:	2300      	movs	r3, #0
 8010740:	8083      	strh	r3, [r0, #4]
 8010742:	4770      	bx	lr

08010744 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010744:	b510      	push	{r4, lr}
 8010746:	6803      	ldr	r3, [r0, #0]
 8010748:	8881      	ldrh	r1, [r0, #4]
 801074a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801074c:	4604      	mov	r4, r0
 801074e:	4798      	blx	r3
 8010750:	88a3      	ldrh	r3, [r4, #4]
 8010752:	3301      	adds	r3, #1
 8010754:	80a3      	strh	r3, [r4, #4]
 8010756:	bd10      	pop	{r4, pc}

08010758 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010758:	6803      	ldr	r3, [r0, #0]
 801075a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801075c:	4718      	bx	r3

0801075e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801075e:	4770      	bx	lr

08010760 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010760:	4a02      	ldr	r2, [pc, #8]	; (801076c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010762:	6002      	str	r2, [r0, #0]
 8010764:	2200      	movs	r2, #0
 8010766:	8082      	strh	r2, [r0, #4]
 8010768:	4770      	bx	lr
 801076a:	bf00      	nop
 801076c:	0802f554 	.word	0x0802f554

08010770 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010770:	b510      	push	{r4, lr}
 8010772:	6803      	ldr	r3, [r0, #0]
 8010774:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010778:	4604      	mov	r4, r0
 801077a:	4798      	blx	r3
 801077c:	b110      	cbz	r0, 8010784 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801077e:	4620      	mov	r0, r4
 8010780:	f7f1 ff6a 	bl	8002658 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010784:	bd10      	pop	{r4, pc}

08010786 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010786:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801078a:	4770      	bx	lr

0801078c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801078c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010790:	4770      	bx	lr

08010792 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010792:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010796:	4770      	bx	lr

08010798 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010798:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801079c:	4770      	bx	lr

0801079e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801079e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107a0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80107a4:	461e      	mov	r6, r3
 80107a6:	6803      	ldr	r3, [r0, #0]
 80107a8:	460f      	mov	r7, r1
 80107aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80107ae:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80107b2:	4604      	mov	r4, r0
 80107b4:	4615      	mov	r5, r2
 80107b6:	4798      	blx	r3
 80107b8:	b93e      	cbnz	r6, 80107ca <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80107ba:	1bed      	subs	r5, r5, r7
 80107bc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80107c0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80107c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80107c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80107ca:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80107ce:	e7f7      	b.n	80107c0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080107d0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80107d0:	b510      	push	{r4, lr}
 80107d2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80107d6:	600c      	str	r4, [r1, #0]
 80107d8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80107dc:	6011      	str	r1, [r2, #0]
 80107de:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80107e2:	801a      	strh	r2, [r3, #0]
 80107e4:	9b02      	ldr	r3, [sp, #8]
 80107e6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80107ea:	801a      	strh	r2, [r3, #0]
 80107ec:	bd10      	pop	{r4, pc}

080107ee <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80107ee:	b510      	push	{r4, lr}
 80107f0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80107f4:	600c      	str	r4, [r1, #0]
 80107f6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80107fa:	6011      	str	r1, [r2, #0]
 80107fc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010800:	801a      	strh	r2, [r3, #0]
 8010802:	bd10      	pop	{r4, pc}

08010804 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010804:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010808:	600b      	str	r3, [r1, #0]
 801080a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801080e:	6013      	str	r3, [r2, #0]
 8010810:	4770      	bx	lr

08010812 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010812:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010816:	4770      	bx	lr

08010818 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010818:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801081c:	4770      	bx	lr

0801081e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801081e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010822:	4770      	bx	lr

08010824 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010824:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010828:	4770      	bx	lr

0801082a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801082a:	4770      	bx	lr

0801082c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801082c:	b510      	push	{r4, lr}
 801082e:	21b4      	movs	r1, #180	; 0xb4
 8010830:	4604      	mov	r4, r0
 8010832:	f01a fb02 	bl	802ae3a <_ZdlPvj>
 8010836:	4620      	mov	r0, r4
 8010838:	bd10      	pop	{r4, pc}

0801083a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801083a:	b570      	push	{r4, r5, r6, lr}
 801083c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010840:	428d      	cmp	r5, r1
 8010842:	bfb8      	it	lt
 8010844:	460d      	movlt	r5, r1
 8010846:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801084a:	428d      	cmp	r5, r1
 801084c:	4604      	mov	r4, r0
 801084e:	bfa8      	it	ge
 8010850:	460d      	movge	r5, r1
 8010852:	4616      	mov	r6, r2
 8010854:	b99a      	cbnz	r2, 801087e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010856:	6803      	ldr	r3, [r0, #0]
 8010858:	4629      	mov	r1, r5
 801085a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801085e:	4798      	blx	r3
 8010860:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010864:	b368      	cbz	r0, 80108c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010866:	6803      	ldr	r3, [r0, #0]
 8010868:	68db      	ldr	r3, [r3, #12]
 801086a:	4798      	blx	r3
 801086c:	b348      	cbz	r0, 80108c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801086e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010872:	6803      	ldr	r3, [r0, #0]
 8010874:	4621      	mov	r1, r4
 8010876:	689b      	ldr	r3, [r3, #8]
 8010878:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801087c:	4718      	bx	r3
 801087e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010882:	2b00      	cmp	r3, #0
 8010884:	dd08      	ble.n	8010898 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010886:	f006 fa23 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 801088a:	4621      	mov	r1, r4
 801088c:	3004      	adds	r0, #4
 801088e:	f006 fa6c 	bl	8016d6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010892:	2300      	movs	r3, #0
 8010894:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010898:	6823      	ldr	r3, [r4, #0]
 801089a:	4620      	mov	r0, r4
 801089c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80108a0:	4798      	blx	r3
 80108a2:	2300      	movs	r3, #0
 80108a4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80108a8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80108ac:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80108b0:	f006 fa0e 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 80108b4:	4621      	mov	r1, r4
 80108b6:	3004      	adds	r0, #4
 80108b8:	f006 fb00 	bl	8016ebc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80108bc:	2301      	movs	r3, #1
 80108be:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80108c2:	bd70      	pop	{r4, r5, r6, pc}

080108c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80108c4:	b510      	push	{r4, lr}
 80108c6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80108ca:	4299      	cmp	r1, r3
 80108cc:	bfb8      	it	lt
 80108ce:	4619      	movlt	r1, r3
 80108d0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80108d4:	4299      	cmp	r1, r3
 80108d6:	bfa8      	it	ge
 80108d8:	4619      	movge	r1, r3
 80108da:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80108de:	428b      	cmp	r3, r1
 80108e0:	4604      	mov	r4, r0
 80108e2:	d010      	beq.n	8010906 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108e4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80108e8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80108ec:	b158      	cbz	r0, 8010906 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108ee:	6803      	ldr	r3, [r0, #0]
 80108f0:	68db      	ldr	r3, [r3, #12]
 80108f2:	4798      	blx	r3
 80108f4:	b138      	cbz	r0, 8010906 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108f6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80108fa:	6803      	ldr	r3, [r0, #0]
 80108fc:	4621      	mov	r1, r4
 80108fe:	689b      	ldr	r3, [r3, #8]
 8010900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010904:	4718      	bx	r3
 8010906:	bd10      	pop	{r4, pc}

08010908 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010908:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801090a:	4604      	mov	r4, r0
 801090c:	460d      	mov	r5, r1
 801090e:	b1a9      	cbz	r1, 801093c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010910:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010914:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010918:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801091c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010920:	ab01      	add	r3, sp, #4
 8010922:	1a12      	subs	r2, r2, r0
 8010924:	1b89      	subs	r1, r1, r6
 8010926:	1a38      	subs	r0, r7, r0
 8010928:	f007 fc88 	bl	801823c <_ZN8touchgfx6muldivElllRl>
 801092c:	4629      	mov	r1, r5
 801092e:	ab01      	add	r3, sp, #4
 8010930:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010934:	4430      	add	r0, r6
 8010936:	f007 fc81 	bl	801823c <_ZN8touchgfx6muldivElllRl>
 801093a:	b285      	uxth	r5, r0
 801093c:	4628      	mov	r0, r5
 801093e:	b003      	add	sp, #12
 8010940:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010942 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010942:	b570      	push	{r4, r5, r6, lr}
 8010944:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010948:	4604      	mov	r4, r0
 801094a:	2b00      	cmp	r3, #0
 801094c:	d035      	beq.n	80109ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801094e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010952:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010956:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801095a:	3001      	adds	r0, #1
 801095c:	1ad2      	subs	r2, r2, r3
 801095e:	b212      	sxth	r2, r2
 8010960:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010964:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010968:	2100      	movs	r1, #0
 801096a:	b280      	uxth	r0, r0
 801096c:	47a8      	blx	r5
 801096e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010972:	6823      	ldr	r3, [r4, #0]
 8010974:	4401      	add	r1, r0
 8010976:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801097a:	4620      	mov	r0, r4
 801097c:	4798      	blx	r3
 801097e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010982:	429a      	cmp	r2, r3
 8010984:	db19      	blt.n	80109ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010986:	2500      	movs	r5, #0
 8010988:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801098c:	f006 f9a0 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8010990:	4621      	mov	r1, r4
 8010992:	3004      	adds	r0, #4
 8010994:	f006 f9e9 	bl	8016d6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010998:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801099c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80109a0:	b158      	cbz	r0, 80109ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80109a2:	6803      	ldr	r3, [r0, #0]
 80109a4:	68db      	ldr	r3, [r3, #12]
 80109a6:	4798      	blx	r3
 80109a8:	b138      	cbz	r0, 80109ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80109aa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80109ae:	6803      	ldr	r3, [r0, #0]
 80109b0:	4621      	mov	r1, r4
 80109b2:	689b      	ldr	r3, [r3, #8]
 80109b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109b8:	4718      	bx	r3
 80109ba:	bd70      	pop	{r4, r5, r6, pc}

080109bc <_ZN8touchgfx8DrawableC1Ev>:
 80109bc:	4a0a      	ldr	r2, [pc, #40]	; (80109e8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80109be:	6002      	str	r2, [r0, #0]
 80109c0:	2200      	movs	r2, #0
 80109c2:	8082      	strh	r2, [r0, #4]
 80109c4:	80c2      	strh	r2, [r0, #6]
 80109c6:	8102      	strh	r2, [r0, #8]
 80109c8:	8142      	strh	r2, [r0, #10]
 80109ca:	8182      	strh	r2, [r0, #12]
 80109cc:	81c2      	strh	r2, [r0, #14]
 80109ce:	8202      	strh	r2, [r0, #16]
 80109d0:	8242      	strh	r2, [r0, #18]
 80109d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80109d6:	61c2      	str	r2, [r0, #28]
 80109d8:	8402      	strh	r2, [r0, #32]
 80109da:	8442      	strh	r2, [r0, #34]	; 0x22
 80109dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80109e0:	2201      	movs	r2, #1
 80109e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80109e6:	4770      	bx	lr
 80109e8:	0802fed4 	.word	0x0802fed4

080109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80109ec:	b570      	push	{r4, r5, r6, lr}
 80109ee:	6803      	ldr	r3, [r0, #0]
 80109f0:	4604      	mov	r4, r0
 80109f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80109f4:	4615      	mov	r5, r2
 80109f6:	4798      	blx	r3
 80109f8:	6823      	ldr	r3, [r4, #0]
 80109fa:	4629      	mov	r1, r5
 80109fc:	4620      	mov	r0, r4
 80109fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010a00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a04:	4718      	bx	r3

08010a06 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010a06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a0a:	4604      	mov	r4, r0
 8010a0c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010a10:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010a14:	460e      	mov	r6, r1
 8010a16:	4615      	mov	r5, r2
 8010a18:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8010a1c:	4619      	mov	r1, r3
 8010a1e:	463a      	mov	r2, r7
 8010a20:	3058      	adds	r0, #88	; 0x58
 8010a22:	4698      	mov	r8, r3
 8010a24:	f7ff ffe2 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010a28:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010a2c:	4446      	add	r6, r8
 8010a2e:	42b3      	cmp	r3, r6
 8010a30:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010a34:	bfb8      	it	lt
 8010a36:	8126      	strhlt	r6, [r4, #8]
 8010a38:	443d      	add	r5, r7
 8010a3a:	42ab      	cmp	r3, r5
 8010a3c:	bfb8      	it	lt
 8010a3e:	8165      	strhlt	r5, [r4, #10]
 8010a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a44 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010a44:	b510      	push	{r4, lr}
 8010a46:	4604      	mov	r4, r0
 8010a48:	302c      	adds	r0, #44	; 0x2c
 8010a4a:	f003 fc42 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010a4e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010a52:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010a56:	4620      	mov	r0, r4
 8010a58:	f7ff ffc8 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010a5c:	bd10      	pop	{r4, pc}
	...

08010a60 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010a60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a62:	4604      	mov	r4, r0
 8010a64:	4626      	mov	r6, r4
 8010a66:	2500      	movs	r5, #0
 8010a68:	f7ff ffa8 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 8010a6c:	4b23      	ldr	r3, [pc, #140]	; (8010afc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8010a6e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010a70:	f846 3b2c 	str.w	r3, [r6], #44
 8010a74:	2226      	movs	r2, #38	; 0x26
 8010a76:	4629      	mov	r1, r5
 8010a78:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010a7c:	4630      	mov	r0, r6
 8010a7e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010a82:	f01b f9f2 	bl	802be6a <memset>
 8010a86:	4630      	mov	r0, r6
 8010a88:	f7ff ff98 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 8010a8c:	a902      	add	r1, sp, #8
 8010a8e:	4b1c      	ldr	r3, [pc, #112]	; (8010b00 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010a90:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010a92:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010a96:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8010a9a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8010a9e:	4630      	mov	r0, r6
 8010aa0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010aa4:	f003 fc15 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010aa8:	4638      	mov	r0, r7
 8010aaa:	f7ff ff87 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 8010aae:	4b15      	ldr	r3, [pc, #84]	; (8010b04 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010ab0:	65a3      	str	r3, [r4, #88]	; 0x58
 8010ab2:	2364      	movs	r3, #100	; 0x64
 8010ab4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010ab8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8010abc:	4b12      	ldr	r3, [pc, #72]	; (8010b08 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8010abe:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010ac2:	4629      	mov	r1, r5
 8010ac4:	4630      	mov	r0, r6
 8010ac6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8010aca:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010ace:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010ad2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010ad6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8010ada:	f7f1 fd19 	bl	8002510 <_ZN8touchgfx8Drawable4setXEs>
 8010ade:	4629      	mov	r1, r5
 8010ae0:	4630      	mov	r0, r6
 8010ae2:	f7f1 fd17 	bl	8002514 <_ZN8touchgfx8Drawable4setYEs>
 8010ae6:	4631      	mov	r1, r6
 8010ae8:	4620      	mov	r0, r4
 8010aea:	f000 f819 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010aee:	4620      	mov	r0, r4
 8010af0:	4639      	mov	r1, r7
 8010af2:	f000 f815 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010af6:	4620      	mov	r0, r4
 8010af8:	b003      	add	sp, #12
 8010afa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010afc:	0802f588 	.word	0x0802f588
 8010b00:	0802fd90 	.word	0x0802fd90
 8010b04:	0802f65c 	.word	0x0802f65c
 8010b08:	08018a17 	.word	0x08018a17

08010b0c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8010b0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b0e:	2000      	movs	r0, #0
 8010b10:	b12b      	cbz	r3, 8010b1e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010b12:	b920      	cbnz	r0, 8010b1e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010b14:	1a5a      	subs	r2, r3, r1
 8010b16:	4250      	negs	r0, r2
 8010b18:	4150      	adcs	r0, r2
 8010b1a:	699b      	ldr	r3, [r3, #24]
 8010b1c:	e7f8      	b.n	8010b10 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8010b1e:	4770      	bx	lr

08010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010b20:	2300      	movs	r3, #0
 8010b22:	6148      	str	r0, [r1, #20]
 8010b24:	618b      	str	r3, [r1, #24]
 8010b26:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b28:	b913      	cbnz	r3, 8010b30 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010b2a:	6281      	str	r1, [r0, #40]	; 0x28
 8010b2c:	4770      	bx	lr
 8010b2e:	4613      	mov	r3, r2
 8010b30:	699a      	ldr	r2, [r3, #24]
 8010b32:	2a00      	cmp	r2, #0
 8010b34:	d1fb      	bne.n	8010b2e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010b36:	6199      	str	r1, [r3, #24]
 8010b38:	4770      	bx	lr

08010b3a <_ZN8touchgfx9Container9removeAllEv>:
 8010b3a:	2200      	movs	r2, #0
 8010b3c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b3e:	b123      	cbz	r3, 8010b4a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010b40:	6999      	ldr	r1, [r3, #24]
 8010b42:	6281      	str	r1, [r0, #40]	; 0x28
 8010b44:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010b48:	e7f8      	b.n	8010b3c <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010b4a:	4770      	bx	lr

08010b4c <_ZN8touchgfx9Container6unlinkEv>:
 8010b4c:	2300      	movs	r3, #0
 8010b4e:	6283      	str	r3, [r0, #40]	; 0x28
 8010b50:	4770      	bx	lr

08010b52 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010b52:	2200      	movs	r2, #0
 8010b54:	8002      	strh	r2, [r0, #0]
 8010b56:	8042      	strh	r2, [r0, #2]
 8010b58:	8082      	strh	r2, [r0, #4]
 8010b5a:	80c2      	strh	r2, [r0, #6]
 8010b5c:	4770      	bx	lr

08010b5e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010b5e:	b570      	push	{r4, r5, r6, lr}
 8010b60:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b62:	460d      	mov	r5, r1
 8010b64:	4616      	mov	r6, r2
 8010b66:	b13c      	cbz	r4, 8010b78 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010b68:	6823      	ldr	r3, [r4, #0]
 8010b6a:	4620      	mov	r0, r4
 8010b6c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010b6e:	4632      	mov	r2, r6
 8010b70:	4629      	mov	r1, r5
 8010b72:	4798      	blx	r3
 8010b74:	69a4      	ldr	r4, [r4, #24]
 8010b76:	e7f6      	b.n	8010b66 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010b78:	bd70      	pop	{r4, r5, r6, pc}

08010b7a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010b7a:	b538      	push	{r3, r4, r5, lr}
 8010b7c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b7e:	460d      	mov	r5, r1
 8010b80:	b134      	cbz	r4, 8010b90 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010b82:	682b      	ldr	r3, [r5, #0]
 8010b84:	4621      	mov	r1, r4
 8010b86:	689b      	ldr	r3, [r3, #8]
 8010b88:	4628      	mov	r0, r5
 8010b8a:	4798      	blx	r3
 8010b8c:	69a4      	ldr	r4, [r4, #24]
 8010b8e:	e7f7      	b.n	8010b80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010b90:	bd38      	pop	{r3, r4, r5, pc}

08010b92 <_ZN8touchgfx9ContainerD1Ev>:
 8010b92:	4770      	bx	lr

08010b94 <_ZN8touchgfx9ContainerD0Ev>:
 8010b94:	b510      	push	{r4, lr}
 8010b96:	212c      	movs	r1, #44	; 0x2c
 8010b98:	4604      	mov	r4, r0
 8010b9a:	f01a f94e 	bl	802ae3a <_ZdlPvj>
 8010b9e:	4620      	mov	r0, r4
 8010ba0:	bd10      	pop	{r4, pc}

08010ba2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010ba2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010ba4:	b19b      	cbz	r3, 8010bce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010ba6:	428b      	cmp	r3, r1
 8010ba8:	d109      	bne.n	8010bbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010baa:	699a      	ldr	r2, [r3, #24]
 8010bac:	2100      	movs	r1, #0
 8010bae:	6159      	str	r1, [r3, #20]
 8010bb0:	6282      	str	r2, [r0, #40]	; 0x28
 8010bb2:	b902      	cbnz	r2, 8010bb6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010bb4:	4770      	bx	lr
 8010bb6:	6199      	str	r1, [r3, #24]
 8010bb8:	4770      	bx	lr
 8010bba:	4613      	mov	r3, r2
 8010bbc:	b13a      	cbz	r2, 8010bce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010bbe:	699a      	ldr	r2, [r3, #24]
 8010bc0:	428a      	cmp	r2, r1
 8010bc2:	d1fa      	bne.n	8010bba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010bc4:	698a      	ldr	r2, [r1, #24]
 8010bc6:	619a      	str	r2, [r3, #24]
 8010bc8:	2300      	movs	r3, #0
 8010bca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010bce:	4770      	bx	lr

08010bd0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010bd0:	b410      	push	{r4}
 8010bd2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010bd4:	4604      	mov	r4, r0
 8010bd6:	b92b      	cbnz	r3, 8010be4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010bd8:	6803      	ldr	r3, [r0, #0]
 8010bda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010bde:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010be0:	4611      	mov	r1, r2
 8010be2:	4718      	bx	r3
 8010be4:	b941      	cbnz	r1, 8010bf8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010be6:	6193      	str	r3, [r2, #24]
 8010be8:	6282      	str	r2, [r0, #40]	; 0x28
 8010bea:	6154      	str	r4, [r2, #20]
 8010bec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010bf0:	4770      	bx	lr
 8010bf2:	4603      	mov	r3, r0
 8010bf4:	2800      	cmp	r0, #0
 8010bf6:	d0f9      	beq.n	8010bec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010bf8:	4299      	cmp	r1, r3
 8010bfa:	6998      	ldr	r0, [r3, #24]
 8010bfc:	d1f9      	bne.n	8010bf2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8010bfe:	6190      	str	r0, [r2, #24]
 8010c00:	618a      	str	r2, [r1, #24]
 8010c02:	e7f2      	b.n	8010bea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010c04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c08:	461f      	mov	r7, r3
 8010c0a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010c0e:	460d      	mov	r5, r1
 8010c10:	4616      	mov	r6, r2
 8010c12:	b103      	cbz	r3, 8010c16 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010c14:	6038      	str	r0, [r7, #0]
 8010c16:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010c18:	b314      	cbz	r4, 8010c60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010c1a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010c1e:	b1eb      	cbz	r3, 8010c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010c24:	428d      	cmp	r5, r1
 8010c26:	db19      	blt.n	8010c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c28:	8923      	ldrh	r3, [r4, #8]
 8010c2a:	b289      	uxth	r1, r1
 8010c2c:	440b      	add	r3, r1
 8010c2e:	b21b      	sxth	r3, r3
 8010c30:	429d      	cmp	r5, r3
 8010c32:	da13      	bge.n	8010c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c34:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010c38:	4296      	cmp	r6, r2
 8010c3a:	db0f      	blt.n	8010c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c3c:	8963      	ldrh	r3, [r4, #10]
 8010c3e:	b292      	uxth	r2, r2
 8010c40:	4413      	add	r3, r2
 8010c42:	b21b      	sxth	r3, r3
 8010c44:	429e      	cmp	r6, r3
 8010c46:	da09      	bge.n	8010c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c48:	6823      	ldr	r3, [r4, #0]
 8010c4a:	1ab2      	subs	r2, r6, r2
 8010c4c:	1a69      	subs	r1, r5, r1
 8010c4e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010c52:	b212      	sxth	r2, r2
 8010c54:	463b      	mov	r3, r7
 8010c56:	b209      	sxth	r1, r1
 8010c58:	4620      	mov	r0, r4
 8010c5a:	47c0      	blx	r8
 8010c5c:	69a4      	ldr	r4, [r4, #24]
 8010c5e:	e7db      	b.n	8010c18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c68:	4c6e      	ldr	r4, [pc, #440]	; (8010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010c6a:	b0a1      	sub	sp, #132	; 0x84
 8010c6c:	6824      	ldr	r4, [r4, #0]
 8010c6e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010c70:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010c74:	9303      	str	r3, [sp, #12]
 8010c76:	2400      	movs	r4, #0
 8010c78:	802c      	strh	r4, [r5, #0]
 8010c7a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8010c7c:	802c      	strh	r4, [r5, #0]
 8010c7e:	601c      	str	r4, [r3, #0]
 8010c80:	4606      	mov	r6, r0
 8010c82:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010c86:	f7ff ffbd 	bl	8010c04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010c8a:	f1b9 0f03 	cmp.w	r9, #3
 8010c8e:	f340 80c2 	ble.w	8010e16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010c92:	4631      	mov	r1, r6
 8010c94:	a80c      	add	r0, sp, #48	; 0x30
 8010c96:	f007 f99f 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010c9a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010c9e:	9306      	str	r3, [sp, #24]
 8010ca0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010ca4:	9307      	str	r3, [sp, #28]
 8010ca6:	9b03      	ldr	r3, [sp, #12]
 8010ca8:	f8d3 a000 	ldr.w	sl, [r3]
 8010cac:	f1ba 0f00 	cmp.w	sl, #0
 8010cb0:	f000 80b4 	beq.w	8010e1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010cb4:	4651      	mov	r1, sl
 8010cb6:	a810      	add	r0, sp, #64	; 0x40
 8010cb8:	f007 f98e 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010cbc:	9b01      	ldr	r3, [sp, #4]
 8010cbe:	9a06      	ldr	r2, [sp, #24]
 8010cc0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010cc4:	189d      	adds	r5, r3, r2
 8010cc6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010cca:	9a07      	ldr	r2, [sp, #28]
 8010ccc:	2002      	movs	r0, #2
 8010cce:	fb91 f1f0 	sdiv	r1, r1, r0
 8010cd2:	4419      	add	r1, r3
 8010cd4:	1a6d      	subs	r5, r5, r1
 8010cd6:	9b02      	ldr	r3, [sp, #8]
 8010cd8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010cdc:	4413      	add	r3, r2
 8010cde:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010ce2:	fb92 f2f0 	sdiv	r2, r2, r0
 8010ce6:	440a      	add	r2, r1
 8010ce8:	1a9b      	subs	r3, r3, r2
 8010cea:	435b      	muls	r3, r3
 8010cec:	fb05 3505 	mla	r5, r5, r5, r3
 8010cf0:	4f4d      	ldr	r7, [pc, #308]	; (8010e28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010cf2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cf4:	ac10      	add	r4, sp, #64	; 0x40
 8010cf6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010cf8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010cfc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cfe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010d00:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010d04:	f1b9 0f0c 	cmp.w	r9, #12
 8010d08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010d0c:	f04f 0303 	mov.w	r3, #3
 8010d10:	bfc8      	it	gt
 8010d12:	4698      	movgt	r8, r3
 8010d14:	f8cd 9000 	str.w	r9, [sp]
 8010d18:	f04f 0400 	mov.w	r4, #0
 8010d1c:	bfdc      	itt	le
 8010d1e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010d22:	fb92 f8f3 	sdivle	r8, r2, r3
 8010d26:	1c63      	adds	r3, r4, #1
 8010d28:	aa10      	add	r2, sp, #64	; 0x40
 8010d2a:	f004 0401 	and.w	r4, r4, #1
 8010d2e:	9308      	str	r3, [sp, #32]
 8010d30:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010d34:	9b00      	ldr	r3, [sp, #0]
 8010d36:	fb93 f3f8 	sdiv	r3, r3, r8
 8010d3a:	b29b      	uxth	r3, r3
 8010d3c:	3404      	adds	r4, #4
 8010d3e:	f04f 0b00 	mov.w	fp, #0
 8010d42:	9304      	str	r3, [sp, #16]
 8010d44:	9a04      	ldr	r2, [sp, #16]
 8010d46:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010d4a:	fb13 f302 	smulbb	r3, r3, r2
 8010d4e:	9a01      	ldr	r2, [sp, #4]
 8010d50:	b29b      	uxth	r3, r3
 8010d52:	1899      	adds	r1, r3, r2
 8010d54:	9305      	str	r3, [sp, #20]
 8010d56:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010d5a:	b209      	sxth	r1, r1
 8010d5c:	4299      	cmp	r1, r3
 8010d5e:	db4d      	blt.n	8010dfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d60:	8932      	ldrh	r2, [r6, #8]
 8010d62:	4413      	add	r3, r2
 8010d64:	b21b      	sxth	r3, r3
 8010d66:	4299      	cmp	r1, r3
 8010d68:	da48      	bge.n	8010dfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d6a:	9b04      	ldr	r3, [sp, #16]
 8010d6c:	6827      	ldr	r7, [r4, #0]
 8010d6e:	fb17 f703 	smulbb	r7, r7, r3
 8010d72:	9b02      	ldr	r3, [sp, #8]
 8010d74:	b2bf      	uxth	r7, r7
 8010d76:	18fa      	adds	r2, r7, r3
 8010d78:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010d7c:	b212      	sxth	r2, r2
 8010d7e:	429a      	cmp	r2, r3
 8010d80:	db3c      	blt.n	8010dfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d82:	8970      	ldrh	r0, [r6, #10]
 8010d84:	4403      	add	r3, r0
 8010d86:	b21b      	sxth	r3, r3
 8010d88:	429a      	cmp	r2, r3
 8010d8a:	da37      	bge.n	8010dfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d8c:	2300      	movs	r3, #0
 8010d8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010d90:	4630      	mov	r0, r6
 8010d92:	ab0b      	add	r3, sp, #44	; 0x2c
 8010d94:	f7ff ff36 	bl	8010c04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010d98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010d9a:	b37a      	cbz	r2, 8010dfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d9c:	4552      	cmp	r2, sl
 8010d9e:	d02d      	beq.n	8010dfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010da0:	4611      	mov	r1, r2
 8010da2:	a80e      	add	r0, sp, #56	; 0x38
 8010da4:	9209      	str	r2, [sp, #36]	; 0x24
 8010da6:	f007 f917 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010daa:	9a06      	ldr	r2, [sp, #24]
 8010dac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010db0:	9b01      	ldr	r3, [sp, #4]
 8010db2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010db6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010dba:	4413      	add	r3, r2
 8010dbc:	f04f 0e02 	mov.w	lr, #2
 8010dc0:	fb91 f1fe 	sdiv	r1, r1, lr
 8010dc4:	4401      	add	r1, r0
 8010dc6:	1a58      	subs	r0, r3, r1
 8010dc8:	9a07      	ldr	r2, [sp, #28]
 8010dca:	9b02      	ldr	r3, [sp, #8]
 8010dcc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010dd0:	fb9c fcfe 	sdiv	ip, ip, lr
 8010dd4:	4413      	add	r3, r2
 8010dd6:	448c      	add	ip, r1
 8010dd8:	eba3 030c 	sub.w	r3, r3, ip
 8010ddc:	435b      	muls	r3, r3
 8010dde:	fb00 3300 	mla	r3, r0, r0, r3
 8010de2:	42ab      	cmp	r3, r5
 8010de4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010de6:	d208      	bcs.n	8010dfa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010de8:	9803      	ldr	r0, [sp, #12]
 8010dea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010dec:	6001      	str	r1, [r0, #0]
 8010dee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010df0:	9805      	ldr	r0, [sp, #20]
 8010df2:	8008      	strh	r0, [r1, #0]
 8010df4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010df6:	461d      	mov	r5, r3
 8010df8:	800f      	strh	r7, [r1, #0]
 8010dfa:	4692      	mov	sl, r2
 8010dfc:	f10b 0b01 	add.w	fp, fp, #1
 8010e00:	f1bb 0f04 	cmp.w	fp, #4
 8010e04:	f104 0408 	add.w	r4, r4, #8
 8010e08:	d19c      	bne.n	8010d44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010e0a:	9b00      	ldr	r3, [sp, #0]
 8010e0c:	9c08      	ldr	r4, [sp, #32]
 8010e0e:	444b      	add	r3, r9
 8010e10:	4544      	cmp	r4, r8
 8010e12:	9300      	str	r3, [sp, #0]
 8010e14:	d187      	bne.n	8010d26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010e16:	b021      	add	sp, #132	; 0x84
 8010e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e1c:	f04f 35ff 	mov.w	r5, #4294967295
 8010e20:	e766      	b.n	8010cf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010e22:	bf00      	nop
 8010e24:	20013834 	.word	0x20013834
 8010e28:	0802cb78 	.word	0x0802cb78

08010e2c <_ZN8touchgfx4RectaNERKS0_>:
 8010e2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e30:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010e34:	888c      	ldrh	r4, [r1, #4]
 8010e36:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010e3a:	443c      	add	r4, r7
 8010e3c:	b2a4      	uxth	r4, r4
 8010e3e:	fa0f f884 	sxth.w	r8, r4
 8010e42:	45c1      	cmp	r9, r8
 8010e44:	da2f      	bge.n	8010ea6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e46:	8882      	ldrh	r2, [r0, #4]
 8010e48:	444a      	add	r2, r9
 8010e4a:	b292      	uxth	r2, r2
 8010e4c:	fa0f fe82 	sxth.w	lr, r2
 8010e50:	4577      	cmp	r7, lr
 8010e52:	da28      	bge.n	8010ea6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e54:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010e58:	88cb      	ldrh	r3, [r1, #6]
 8010e5a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010e5e:	442b      	add	r3, r5
 8010e60:	b21b      	sxth	r3, r3
 8010e62:	429e      	cmp	r6, r3
 8010e64:	da1f      	bge.n	8010ea6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e66:	88c3      	ldrh	r3, [r0, #6]
 8010e68:	4433      	add	r3, r6
 8010e6a:	b29b      	uxth	r3, r3
 8010e6c:	fa0f fc83 	sxth.w	ip, r3
 8010e70:	4565      	cmp	r5, ip
 8010e72:	da18      	bge.n	8010ea6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e74:	454f      	cmp	r7, r9
 8010e76:	bfb8      	it	lt
 8010e78:	464f      	movlt	r7, r9
 8010e7a:	42b5      	cmp	r5, r6
 8010e7c:	bfb8      	it	lt
 8010e7e:	4635      	movlt	r5, r6
 8010e80:	45f0      	cmp	r8, lr
 8010e82:	bfd8      	it	le
 8010e84:	4622      	movle	r2, r4
 8010e86:	1bd2      	subs	r2, r2, r7
 8010e88:	8082      	strh	r2, [r0, #4]
 8010e8a:	884a      	ldrh	r2, [r1, #2]
 8010e8c:	88c9      	ldrh	r1, [r1, #6]
 8010e8e:	8007      	strh	r7, [r0, #0]
 8010e90:	440a      	add	r2, r1
 8010e92:	b292      	uxth	r2, r2
 8010e94:	b211      	sxth	r1, r2
 8010e96:	458c      	cmp	ip, r1
 8010e98:	bfa8      	it	ge
 8010e9a:	4613      	movge	r3, r2
 8010e9c:	1b5b      	subs	r3, r3, r5
 8010e9e:	80c3      	strh	r3, [r0, #6]
 8010ea0:	8045      	strh	r5, [r0, #2]
 8010ea2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010ea6:	2300      	movs	r3, #0
 8010ea8:	8003      	strh	r3, [r0, #0]
 8010eaa:	8043      	strh	r3, [r0, #2]
 8010eac:	8083      	strh	r3, [r0, #4]
 8010eae:	80c3      	strh	r3, [r0, #6]
 8010eb0:	e7f7      	b.n	8010ea2 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010eb2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010eb6:	2b00      	cmp	r3, #0
 8010eb8:	dd06      	ble.n	8010ec8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010eba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010ebe:	2800      	cmp	r0, #0
 8010ec0:	bfcc      	ite	gt
 8010ec2:	2000      	movgt	r0, #0
 8010ec4:	2001      	movle	r0, #1
 8010ec6:	4770      	bx	lr
 8010ec8:	2001      	movs	r0, #1
 8010eca:	4770      	bx	lr

08010ecc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010ecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ed0:	2300      	movs	r3, #0
 8010ed2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010ed4:	8003      	strh	r3, [r0, #0]
 8010ed6:	4604      	mov	r4, r0
 8010ed8:	8043      	strh	r3, [r0, #2]
 8010eda:	8083      	strh	r3, [r0, #4]
 8010edc:	80c3      	strh	r3, [r0, #6]
 8010ede:	2d00      	cmp	r5, #0
 8010ee0:	d040      	beq.n	8010f64 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010ee2:	1d28      	adds	r0, r5, #4
 8010ee4:	f7ff ffe5 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ee8:	b988      	cbnz	r0, 8010f0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010eea:	4620      	mov	r0, r4
 8010eec:	f7ff ffe1 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ef0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010ef4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010ef8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010efc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010f00:	b138      	cbz	r0, 8010f12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010f02:	8022      	strh	r2, [r4, #0]
 8010f04:	8063      	strh	r3, [r4, #2]
 8010f06:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010f0a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010f0e:	69ad      	ldr	r5, [r5, #24]
 8010f10:	e7e5      	b.n	8010ede <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010f12:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010f16:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010f1a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010f1e:	4290      	cmp	r0, r2
 8010f20:	4607      	mov	r7, r0
 8010f22:	bfa8      	it	ge
 8010f24:	4617      	movge	r7, r2
 8010f26:	4472      	add	r2, lr
 8010f28:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010f2c:	8027      	strh	r7, [r4, #0]
 8010f2e:	4299      	cmp	r1, r3
 8010f30:	460e      	mov	r6, r1
 8010f32:	4440      	add	r0, r8
 8010f34:	bfa8      	it	ge
 8010f36:	461e      	movge	r6, r3
 8010f38:	4471      	add	r1, lr
 8010f3a:	4463      	add	r3, ip
 8010f3c:	b200      	sxth	r0, r0
 8010f3e:	b212      	sxth	r2, r2
 8010f40:	b209      	sxth	r1, r1
 8010f42:	b21b      	sxth	r3, r3
 8010f44:	4290      	cmp	r0, r2
 8010f46:	bfac      	ite	ge
 8010f48:	ebc7 0200 	rsbge	r2, r7, r0
 8010f4c:	ebc7 0202 	rsblt	r2, r7, r2
 8010f50:	4299      	cmp	r1, r3
 8010f52:	bfac      	ite	ge
 8010f54:	ebc6 0301 	rsbge	r3, r6, r1
 8010f58:	ebc6 0303 	rsblt	r3, r6, r3
 8010f5c:	8066      	strh	r6, [r4, #2]
 8010f5e:	80a2      	strh	r2, [r4, #4]
 8010f60:	80e3      	strh	r3, [r4, #6]
 8010f62:	e7d4      	b.n	8010f0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010f64:	4620      	mov	r0, r4
 8010f66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010f6a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010f6e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010f72:	b383      	cbz	r3, 8010fd6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010f74:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010f76:	b374      	cbz	r4, 8010fd6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010f78:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010f7c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010f80:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010f84:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010f88:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010f8c:	b303      	cbz	r3, 8010fd0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010f8e:	4668      	mov	r0, sp
 8010f90:	1d21      	adds	r1, r4, #4
 8010f92:	f8ad 5000 	strh.w	r5, [sp]
 8010f96:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010f9a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010f9e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010fa2:	f7ff ff43 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8010fa6:	4668      	mov	r0, sp
 8010fa8:	f7ff ff83 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010fac:	b980      	cbnz	r0, 8010fd0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010fae:	f8bd 3000 	ldrh.w	r3, [sp]
 8010fb2:	88a2      	ldrh	r2, [r4, #4]
 8010fb4:	1a9b      	subs	r3, r3, r2
 8010fb6:	f8ad 3000 	strh.w	r3, [sp]
 8010fba:	88e2      	ldrh	r2, [r4, #6]
 8010fbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010fc0:	1a9b      	subs	r3, r3, r2
 8010fc2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010fc6:	6823      	ldr	r3, [r4, #0]
 8010fc8:	4669      	mov	r1, sp
 8010fca:	689b      	ldr	r3, [r3, #8]
 8010fcc:	4620      	mov	r0, r4
 8010fce:	4798      	blx	r3
 8010fd0:	69a4      	ldr	r4, [r4, #24]
 8010fd2:	2c00      	cmp	r4, #0
 8010fd4:	d1d8      	bne.n	8010f88 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010fd6:	b002      	add	sp, #8
 8010fd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010fdc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010fdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010fde:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010fe2:	460d      	mov	r5, r1
 8010fe4:	4616      	mov	r6, r2
 8010fe6:	b323      	cbz	r3, 8011032 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010fe8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010fea:	b314      	cbz	r4, 8011032 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010fec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010ff0:	b1eb      	cbz	r3, 801102e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010ff2:	6828      	ldr	r0, [r5, #0]
 8010ff4:	6869      	ldr	r1, [r5, #4]
 8010ff6:	466b      	mov	r3, sp
 8010ff8:	c303      	stmia	r3!, {r0, r1}
 8010ffa:	4668      	mov	r0, sp
 8010ffc:	1d21      	adds	r1, r4, #4
 8010ffe:	f7ff ff15 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8011002:	4668      	mov	r0, sp
 8011004:	f7ff ff55 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011008:	b988      	cbnz	r0, 801102e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801100a:	f8bd 3000 	ldrh.w	r3, [sp]
 801100e:	88a2      	ldrh	r2, [r4, #4]
 8011010:	1a9b      	subs	r3, r3, r2
 8011012:	f8ad 3000 	strh.w	r3, [sp]
 8011016:	88e2      	ldrh	r2, [r4, #6]
 8011018:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801101c:	1a9b      	subs	r3, r3, r2
 801101e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011022:	6823      	ldr	r3, [r4, #0]
 8011024:	4632      	mov	r2, r6
 8011026:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011028:	4669      	mov	r1, sp
 801102a:	4620      	mov	r0, r4
 801102c:	4798      	blx	r3
 801102e:	69a4      	ldr	r4, [r4, #24]
 8011030:	e7db      	b.n	8010fea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8011032:	b002      	add	sp, #8
 8011034:	bd70      	pop	{r4, r5, r6, pc}

08011036 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8011036:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011038:	4770      	bx	lr
	...

0801103c <_ZN8touchgfx14SwipeContainerD1Ev>:
 801103c:	4b05      	ldr	r3, [pc, #20]	; (8011054 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 801103e:	b510      	push	{r4, lr}
 8011040:	6003      	str	r3, [r0, #0]
 8011042:	4604      	mov	r4, r0
 8011044:	f005 fe44 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8011048:	4621      	mov	r1, r4
 801104a:	3004      	adds	r0, #4
 801104c:	f005 fe8d 	bl	8016d6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011050:	4620      	mov	r0, r4
 8011052:	bd10      	pop	{r4, pc}
 8011054:	0802f6ec 	.word	0x0802f6ec

08011058 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8011058:	b510      	push	{r4, lr}
 801105a:	4604      	mov	r4, r0
 801105c:	f7ff ffee 	bl	801103c <_ZN8touchgfx14SwipeContainerD1Ev>
 8011060:	4620      	mov	r0, r4
 8011062:	21f4      	movs	r1, #244	; 0xf4
 8011064:	f019 fee9 	bl	802ae3a <_ZdlPvj>
 8011068:	4620      	mov	r0, r4
 801106a:	bd10      	pop	{r4, pc}

0801106c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 801106c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011070:	2b04      	cmp	r3, #4
 8011072:	d117      	bne.n	80110a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8011074:	790b      	ldrb	r3, [r1, #4]
 8011076:	2b01      	cmp	r3, #1
 8011078:	d114      	bne.n	80110a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801107a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 801107e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8011080:	8643      	strh	r3, [r0, #50]	; 0x32
 8011082:	2b00      	cmp	r3, #0
 8011084:	8682      	strh	r2, [r0, #52]	; 0x34
 8011086:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801108a:	da0e      	bge.n	80110aa <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 801108c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011090:	3a01      	subs	r2, #1
 8011092:	4291      	cmp	r1, r2
 8011094:	d007      	beq.n	80110a6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8011096:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011098:	4252      	negs	r2, r2
 801109a:	4293      	cmp	r3, r2
 801109c:	dc03      	bgt.n	80110a6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801109e:	2302      	movs	r3, #2
 80110a0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80110a4:	4770      	bx	lr
 80110a6:	2300      	movs	r3, #0
 80110a8:	e7fa      	b.n	80110a0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 80110aa:	d0fb      	beq.n	80110a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 80110ac:	b111      	cbz	r1, 80110b4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 80110ae:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 80110b0:	4293      	cmp	r3, r2
 80110b2:	da01      	bge.n	80110b8 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 80110b4:	2301      	movs	r3, #1
 80110b6:	e7f3      	b.n	80110a0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 80110b8:	2303      	movs	r3, #3
 80110ba:	e7f1      	b.n	80110a0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

080110bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 80110bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80110c0:	2b04      	cmp	r3, #4
 80110c2:	d113      	bne.n	80110ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110c4:	790b      	ldrb	r3, [r1, #4]
 80110c6:	b98b      	cbnz	r3, 80110ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110c8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80110ca:	8643      	strh	r3, [r0, #50]	; 0x32
 80110cc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80110ce:	8683      	strh	r3, [r0, #52]	; 0x34
 80110d0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80110d4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 80110d8:	2b00      	cmp	r3, #0
 80110da:	da08      	bge.n	80110ee <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 80110dc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80110e0:	3b01      	subs	r3, #1
 80110e2:	429a      	cmp	r2, r3
 80110e4:	da02      	bge.n	80110ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110e6:	2302      	movs	r3, #2
 80110e8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80110ec:	4770      	bx	lr
 80110ee:	d0fd      	beq.n	80110ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110f0:	2a00      	cmp	r2, #0
 80110f2:	d0fb      	beq.n	80110ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110f4:	2303      	movs	r3, #3
 80110f6:	e7f7      	b.n	80110e8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

080110f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80110f8:	b538      	push	{r3, r4, r5, lr}
 80110fa:	2226      	movs	r2, #38	; 0x26
 80110fc:	4604      	mov	r4, r0
 80110fe:	460d      	mov	r5, r1
 8011100:	2100      	movs	r1, #0
 8011102:	f01a feb2 	bl	802be6a <memset>
 8011106:	4620      	mov	r0, r4
 8011108:	f7ff fc58 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 801110c:	4b06      	ldr	r3, [pc, #24]	; (8011128 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 801110e:	6023      	str	r3, [r4, #0]
 8011110:	882b      	ldrh	r3, [r5, #0]
 8011112:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011114:	23ff      	movs	r3, #255	; 0xff
 8011116:	4620      	mov	r0, r4
 8011118:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 801111c:	4629      	mov	r1, r5
 801111e:	f003 f8d8 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011122:	4620      	mov	r0, r4
 8011124:	bd38      	pop	{r3, r4, r5, pc}
 8011126:	bf00      	nop
 8011128:	0802fd90 	.word	0x0802fd90

0801112c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 801112c:	86c1      	strh	r1, [r0, #54]	; 0x36
 801112e:	4770      	bx	lr

08011130 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8011130:	b508      	push	{r3, lr}
 8011132:	3068      	adds	r0, #104	; 0x68
 8011134:	f7f1 fc6e 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8011138:	bd08      	pop	{r3, pc}

0801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 801113a:	b508      	push	{r3, lr}
 801113c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 801113e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8011142:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011146:	fb03 2111 	mls	r1, r3, r1, r2
 801114a:	b209      	sxth	r1, r1
 801114c:	2200      	movs	r2, #0
 801114e:	3038      	adds	r0, #56	; 0x38
 8011150:	f7f1 f9eb 	bl	800252a <_ZN8touchgfx8Drawable6moveToEss>
 8011154:	bd08      	pop	{r3, pc}

08011156 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8011156:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801115a:	2b04      	cmp	r3, #4
 801115c:	d119      	bne.n	8011192 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 801115e:	88ca      	ldrh	r2, [r1, #6]
 8011160:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011162:	1a9b      	subs	r3, r3, r2
 8011164:	894a      	ldrh	r2, [r1, #10]
 8011166:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801116a:	4413      	add	r3, r2
 801116c:	b21b      	sxth	r3, r3
 801116e:	8603      	strh	r3, [r0, #48]	; 0x30
 8011170:	b921      	cbnz	r1, 801117c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011172:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011174:	4293      	cmp	r3, r2
 8011176:	dd01      	ble.n	801117c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011178:	8602      	strh	r2, [r0, #48]	; 0x30
 801117a:	e008      	b.n	801118e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 801117c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011180:	3a01      	subs	r2, #1
 8011182:	4291      	cmp	r1, r2
 8011184:	d103      	bne.n	801118e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8011186:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011188:	4252      	negs	r2, r2
 801118a:	4293      	cmp	r3, r2
 801118c:	dbf4      	blt.n	8011178 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 801118e:	f7ff bfd4 	b.w	801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011192:	4770      	bx	lr

08011194 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8011194:	b538      	push	{r3, r4, r5, lr}
 8011196:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801119a:	2d0e      	cmp	r5, #14
 801119c:	4604      	mov	r4, r0
 801119e:	d813      	bhi.n	80111c8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 80111a0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 80111a2:	4252      	negs	r2, r2
 80111a4:	230e      	movs	r3, #14
 80111a6:	b212      	sxth	r2, r2
 80111a8:	2100      	movs	r1, #0
 80111aa:	4628      	mov	r0, r5
 80111ac:	f007 fbc2 	bl	8018934 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 80111b0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80111b2:	4418      	add	r0, r3
 80111b4:	8620      	strh	r0, [r4, #48]	; 0x30
 80111b6:	4620      	mov	r0, r4
 80111b8:	f7ff ffbf 	bl	801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80111bc:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80111c0:	3301      	adds	r3, #1
 80111c2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80111c6:	bd38      	pop	{r3, r4, r5, pc}
 80111c8:	2304      	movs	r3, #4
 80111ca:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80111ce:	2300      	movs	r3, #0
 80111d0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 80111d4:	8603      	strh	r3, [r0, #48]	; 0x30
 80111d6:	e7ef      	b.n	80111b8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

080111d8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 80111d8:	b538      	push	{r3, r4, r5, lr}
 80111da:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 80111de:	2d0e      	cmp	r5, #14
 80111e0:	4604      	mov	r4, r0
 80111e2:	d812      	bhi.n	801120a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 80111e4:	230e      	movs	r3, #14
 80111e6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 80111ea:	2100      	movs	r1, #0
 80111ec:	4628      	mov	r0, r5
 80111ee:	f007 fba1 	bl	8018934 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 80111f2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80111f4:	1a18      	subs	r0, r3, r0
 80111f6:	8620      	strh	r0, [r4, #48]	; 0x30
 80111f8:	4620      	mov	r0, r4
 80111fa:	f7ff ff9e 	bl	801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80111fe:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011202:	3301      	adds	r3, #1
 8011204:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011208:	bd38      	pop	{r3, r4, r5, pc}
 801120a:	2304      	movs	r3, #4
 801120c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011210:	2300      	movs	r3, #0
 8011212:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8011216:	8603      	strh	r3, [r0, #48]	; 0x30
 8011218:	e7ef      	b.n	80111fa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

0801121c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 801121c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011220:	4604      	mov	r4, r0
 8011222:	4626      	mov	r6, r4
 8011224:	af02      	add	r7, sp, #8
 8011226:	f7ff fbc9 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 801122a:	2500      	movs	r5, #0
 801122c:	4b18      	ldr	r3, [pc, #96]	; (8011290 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 801122e:	62a5      	str	r5, [r4, #40]	; 0x28
 8011230:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8011234:	f846 3b2c 	str.w	r3, [r6], #44
 8011238:	f827 9d04 	strh.w	r9, [r7, #-4]!
 801123c:	4630      	mov	r0, r6
 801123e:	4639      	mov	r1, r7
 8011240:	f7ff ff5a 	bl	80110f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011244:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8011248:	4b12      	ldr	r3, [pc, #72]	; (8011294 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 801124a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801124c:	4639      	mov	r1, r7
 801124e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8011252:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8011256:	4640      	mov	r0, r8
 8011258:	f8ad 9004 	strh.w	r9, [sp, #4]
 801125c:	f7ff ff4c 	bl	80110f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011260:	462a      	mov	r2, r5
 8011262:	4629      	mov	r1, r5
 8011264:	4630      	mov	r0, r6
 8011266:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 801126a:	f7f1 fbd3 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 801126e:	462a      	mov	r2, r5
 8011270:	4629      	mov	r1, r5
 8011272:	4640      	mov	r0, r8
 8011274:	f7f1 fbce 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8011278:	4631      	mov	r1, r6
 801127a:	4620      	mov	r0, r4
 801127c:	f7ff fc50 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011280:	4620      	mov	r0, r4
 8011282:	4641      	mov	r1, r8
 8011284:	f7ff fc4c 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011288:	4620      	mov	r0, r4
 801128a:	b003      	add	sp, #12
 801128c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011290:	0802d600 	.word	0x0802d600
 8011294:	0802fbac 	.word	0x0802fbac

08011298 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8011298:	b570      	push	{r4, r5, r6, lr}
 801129a:	4604      	mov	r4, r0
 801129c:	f7ff fb8e 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 80112a0:	4b1a      	ldr	r3, [pc, #104]	; (801130c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 80112a2:	6023      	str	r3, [r4, #0]
 80112a4:	2304      	movs	r3, #4
 80112a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80112aa:	2350      	movs	r3, #80	; 0x50
 80112ac:	2500      	movs	r5, #0
 80112ae:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80112b0:	f104 0638 	add.w	r6, r4, #56	; 0x38
 80112b4:	231e      	movs	r3, #30
 80112b6:	62a5      	str	r5, [r4, #40]	; 0x28
 80112b8:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 80112bc:	8625      	strh	r5, [r4, #48]	; 0x30
 80112be:	8665      	strh	r5, [r4, #50]	; 0x32
 80112c0:	86a5      	strh	r5, [r4, #52]	; 0x34
 80112c2:	86e3      	strh	r3, [r4, #54]	; 0x36
 80112c4:	4630      	mov	r0, r6
 80112c6:	f7ff fb79 	bl	80109bc <_ZN8touchgfx8DrawableC1Ev>
 80112ca:	4b11      	ldr	r3, [pc, #68]	; (8011310 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 80112cc:	6625      	str	r5, [r4, #96]	; 0x60
 80112ce:	63a3      	str	r3, [r4, #56]	; 0x38
 80112d0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 80112d4:	2302      	movs	r3, #2
 80112d6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 80112da:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80112de:	4628      	mov	r0, r5
 80112e0:	f7ff ff9c 	bl	801121c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 80112e4:	f005 fcf4 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 80112e8:	4621      	mov	r1, r4
 80112ea:	3004      	adds	r0, #4
 80112ec:	f005 fde6 	bl	8016ebc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80112f0:	2301      	movs	r3, #1
 80112f2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80112f6:	4631      	mov	r1, r6
 80112f8:	4620      	mov	r0, r4
 80112fa:	f7ff fc11 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80112fe:	4620      	mov	r0, r4
 8011300:	4629      	mov	r1, r5
 8011302:	f7ff fc0d 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011306:	4620      	mov	r0, r4
 8011308:	bd70      	pop	{r4, r5, r6, pc}
 801130a:	bf00      	nop
 801130c:	0802f6ec 	.word	0x0802f6ec
 8011310:	0802f7b0 	.word	0x0802f7b0

08011314 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8011314:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011316:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801131a:	428b      	cmp	r3, r1
 801131c:	4604      	mov	r4, r0
 801131e:	460d      	mov	r5, r1
 8011320:	d915      	bls.n	801134e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8011322:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8011326:	428b      	cmp	r3, r1
 8011328:	d011      	beq.n	801134e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801132a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801132e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8011332:	a802      	add	r0, sp, #8
 8011334:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8011338:	f009 f91a 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801133c:	fb15 f100 	smulbb	r1, r5, r0
 8011340:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8011344:	b209      	sxth	r1, r1
 8011346:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801134a:	f7f1 f8ee 	bl	800252a <_ZN8touchgfx8Drawable6moveToEss>
 801134e:	b003      	add	sp, #12
 8011350:	bd30      	pop	{r4, r5, pc}

08011352 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8011352:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011354:	4604      	mov	r4, r0
 8011356:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801135a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801135e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8011362:	4293      	cmp	r3, r2
 8011364:	460d      	mov	r5, r1
 8011366:	d01e      	beq.n	80113a6 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8011368:	a802      	add	r0, sp, #8
 801136a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801136e:	f009 f8ff 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011372:	6823      	ldr	r3, [r4, #0]
 8011374:	fb15 f000 	smulbb	r0, r5, r0
 8011378:	86a0      	strh	r0, [r4, #52]	; 0x34
 801137a:	695b      	ldr	r3, [r3, #20]
 801137c:	4620      	mov	r0, r4
 801137e:	4798      	blx	r3
 8011380:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8011384:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8011388:	4620      	mov	r0, r4
 801138a:	f7ff fb2f 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801138e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8011392:	42a9      	cmp	r1, r5
 8011394:	4620      	mov	r0, r4
 8011396:	bf28      	it	cs
 8011398:	4629      	movcs	r1, r5
 801139a:	f7ff ffbb 	bl	8011314 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801139e:	6823      	ldr	r3, [r4, #0]
 80113a0:	4620      	mov	r0, r4
 80113a2:	695b      	ldr	r3, [r3, #20]
 80113a4:	4798      	blx	r3
 80113a6:	b003      	add	sp, #12
 80113a8:	bd30      	pop	{r4, r5, pc}

080113aa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 80113aa:	b538      	push	{r3, r4, r5, lr}
 80113ac:	4604      	mov	r4, r0
 80113ae:	460d      	mov	r5, r1
 80113b0:	305c      	adds	r0, #92	; 0x5c
 80113b2:	4611      	mov	r1, r2
 80113b4:	f002 ff8d 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80113b8:	4629      	mov	r1, r5
 80113ba:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80113be:	f002 fa53 	bl	8013868 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 80113c2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 80113c6:	b121      	cbz	r1, 80113d2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 80113c8:	4620      	mov	r0, r4
 80113ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80113ce:	f7ff bfc0 	b.w	8011352 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80113d2:	bd38      	pop	{r3, r4, r5, pc}

080113d4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 80113d4:	3068      	adds	r0, #104	; 0x68
 80113d6:	f7ff bfe8 	b.w	80113aa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

080113da <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 80113da:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80113de:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80113e2:	3101      	adds	r1, #1
 80113e4:	fb91 f3f2 	sdiv	r3, r1, r2
 80113e8:	fb02 1113 	mls	r1, r2, r3, r1
 80113ec:	b2c9      	uxtb	r1, r1
 80113ee:	f7ff bf91 	b.w	8011314 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080113f2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80113f2:	b510      	push	{r4, lr}
 80113f4:	4604      	mov	r4, r0
 80113f6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80113fa:	280a      	cmp	r0, #10
 80113fc:	d813      	bhi.n	8011426 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80113fe:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011400:	8922      	ldrh	r2, [r4, #8]
 8011402:	441a      	add	r2, r3
 8011404:	b212      	sxth	r2, r2
 8011406:	230a      	movs	r3, #10
 8011408:	2100      	movs	r1, #0
 801140a:	f007 fad1 	bl	80189b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 801140e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011410:	1a18      	subs	r0, r3, r0
 8011412:	8620      	strh	r0, [r4, #48]	; 0x30
 8011414:	4620      	mov	r0, r4
 8011416:	f7ff fe90 	bl	801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801141a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801141e:	3301      	adds	r3, #1
 8011420:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011424:	bd10      	pop	{r4, pc}
 8011426:	2304      	movs	r3, #4
 8011428:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801142c:	2300      	movs	r3, #0
 801142e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011432:	8623      	strh	r3, [r4, #48]	; 0x30
 8011434:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011438:	f7ff ffcf 	bl	80113da <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801143c:	e7ea      	b.n	8011414 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801143e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801143e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8011442:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8011446:	4411      	add	r1, r2
 8011448:	3901      	subs	r1, #1
 801144a:	fb91 f3f2 	sdiv	r3, r1, r2
 801144e:	fb02 1113 	mls	r1, r2, r3, r1
 8011452:	b2c9      	uxtb	r1, r1
 8011454:	f7ff bf5e 	b.w	8011314 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08011458 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8011458:	b510      	push	{r4, lr}
 801145a:	4604      	mov	r4, r0
 801145c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8011460:	280a      	cmp	r0, #10
 8011462:	d813      	bhi.n	801148c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8011464:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011466:	8922      	ldrh	r2, [r4, #8]
 8011468:	1ad2      	subs	r2, r2, r3
 801146a:	b212      	sxth	r2, r2
 801146c:	230a      	movs	r3, #10
 801146e:	2100      	movs	r1, #0
 8011470:	f007 fa9e 	bl	80189b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8011474:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011476:	4418      	add	r0, r3
 8011478:	8620      	strh	r0, [r4, #48]	; 0x30
 801147a:	4620      	mov	r0, r4
 801147c:	f7ff fe5d 	bl	801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011480:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011484:	3301      	adds	r3, #1
 8011486:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801148a:	bd10      	pop	{r4, pc}
 801148c:	2304      	movs	r3, #4
 801148e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8011492:	2300      	movs	r3, #0
 8011494:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011498:	8623      	strh	r3, [r4, #48]	; 0x30
 801149a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801149e:	f7ff ffce 	bl	801143e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 80114a2:	e7ea      	b.n	801147a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

080114a4 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 80114a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80114a8:	b90b      	cbnz	r3, 80114ae <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 80114aa:	f7ff be73 	b.w	8011194 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 80114ae:	2b01      	cmp	r3, #1
 80114b0:	d101      	bne.n	80114b6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 80114b2:	f7ff be91 	b.w	80111d8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 80114b6:	2b02      	cmp	r3, #2
 80114b8:	d101      	bne.n	80114be <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 80114ba:	f7ff bf9a 	b.w	80113f2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 80114be:	2b03      	cmp	r3, #3
 80114c0:	d101      	bne.n	80114c6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 80114c2:	f7ff bfc9 	b.w	8011458 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 80114c6:	4770      	bx	lr

080114c8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 80114c8:	b510      	push	{r4, lr}
 80114ca:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80114ce:	428b      	cmp	r3, r1
 80114d0:	4604      	mov	r4, r0
 80114d2:	d907      	bls.n	80114e4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80114d4:	3068      	adds	r0, #104	; 0x68
 80114d6:	f7ff ff1d 	bl	8011314 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80114da:	4620      	mov	r0, r4
 80114dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114e0:	f7ff be2b 	b.w	801113a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80114e4:	bd10      	pop	{r4, pc}

080114e6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80114e6:	b538      	push	{r3, r4, r5, lr}
 80114e8:	4604      	mov	r4, r0
 80114ea:	3038      	adds	r0, #56	; 0x38
 80114ec:	460d      	mov	r5, r1
 80114ee:	f000 f963 	bl	80117b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80114f2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80114f6:	3101      	adds	r1, #1
 80114f8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80114fc:	b2c9      	uxtb	r1, r1
 80114fe:	f7ff ff28 	bl	8011352 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011502:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011506:	4620      	mov	r0, r4
 8011508:	f7ff ffde 	bl	80114c8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801150c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8011510:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8011514:	4620      	mov	r0, r4
 8011516:	f7ff fa69 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801151a:	bd38      	pop	{r3, r4, r5, pc}

0801151c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801151c:	b538      	push	{r3, r4, r5, lr}
 801151e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011522:	4604      	mov	r4, r0
 8011524:	b1e3      	cbz	r3, 8011560 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8011526:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8011528:	b1d3      	cbz	r3, 8011560 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801152a:	428b      	cmp	r3, r1
 801152c:	d125      	bne.n	801157a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801152e:	4619      	mov	r1, r3
 8011530:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011534:	f000 f9c0 	bl	80118b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8011538:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801153c:	3901      	subs	r1, #1
 801153e:	b2c9      	uxtb	r1, r1
 8011540:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011544:	f7ff ff05 	bl	8011352 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011548:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801154c:	b94d      	cbnz	r5, 8011562 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801154e:	6823      	ldr	r3, [r4, #0]
 8011550:	4620      	mov	r0, r4
 8011552:	695b      	ldr	r3, [r3, #20]
 8011554:	4798      	blx	r3
 8011556:	462a      	mov	r2, r5
 8011558:	4629      	mov	r1, r5
 801155a:	4620      	mov	r0, r4
 801155c:	f7ff fa46 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011560:	bd38      	pop	{r3, r4, r5, pc}
 8011562:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011566:	3d01      	subs	r5, #1
 8011568:	42a9      	cmp	r1, r5
 801156a:	bfa8      	it	ge
 801156c:	4629      	movge	r1, r5
 801156e:	4620      	mov	r0, r4
 8011570:	b2c9      	uxtb	r1, r1
 8011572:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011576:	f7ff bfa7 	b.w	80114c8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801157a:	699b      	ldr	r3, [r3, #24]
 801157c:	e7d4      	b.n	8011528 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801157e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801157e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011582:	4770      	bx	lr

08011584 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8011584:	b538      	push	{r3, r4, r5, lr}
 8011586:	7882      	ldrb	r2, [r0, #2]
 8011588:	6843      	ldr	r3, [r0, #4]
 801158a:	4604      	mov	r4, r0
 801158c:	460d      	mov	r5, r1
 801158e:	b98a      	cbnz	r2, 80115b4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011590:	4299      	cmp	r1, r3
 8011592:	d101      	bne.n	8011598 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011594:	2301      	movs	r3, #1
 8011596:	7083      	strb	r3, [r0, #2]
 8011598:	6863      	ldr	r3, [r4, #4]
 801159a:	42ab      	cmp	r3, r5
 801159c:	d009      	beq.n	80115b2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801159e:	7a23      	ldrb	r3, [r4, #8]
 80115a0:	2b01      	cmp	r3, #1
 80115a2:	d11b      	bne.n	80115dc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 80115a4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80115a8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80115ac:	429a      	cmp	r2, r3
 80115ae:	bfb8      	it	lt
 80115b0:	8023      	strhlt	r3, [r4, #0]
 80115b2:	bd38      	pop	{r3, r4, r5, pc}
 80115b4:	7a02      	ldrb	r2, [r0, #8]
 80115b6:	2a01      	cmp	r2, #1
 80115b8:	d108      	bne.n	80115cc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 80115ba:	895b      	ldrh	r3, [r3, #10]
 80115bc:	88c9      	ldrh	r1, [r1, #6]
 80115be:	1ac9      	subs	r1, r1, r3
 80115c0:	682b      	ldr	r3, [r5, #0]
 80115c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80115c4:	b209      	sxth	r1, r1
 80115c6:	4628      	mov	r0, r5
 80115c8:	4798      	blx	r3
 80115ca:	e7e5      	b.n	8011598 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80115cc:	2a02      	cmp	r2, #2
 80115ce:	d1e3      	bne.n	8011598 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80115d0:	891b      	ldrh	r3, [r3, #8]
 80115d2:	8889      	ldrh	r1, [r1, #4]
 80115d4:	1ac9      	subs	r1, r1, r3
 80115d6:	682b      	ldr	r3, [r5, #0]
 80115d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80115da:	e7f3      	b.n	80115c4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80115dc:	2b02      	cmp	r3, #2
 80115de:	d1e8      	bne.n	80115b2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80115e0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80115e4:	e7e0      	b.n	80115a8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080115e6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80115e6:	4770      	bx	lr

080115e8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80115e8:	4770      	bx	lr

080115ea <_ZN8touchgfx10ListLayoutD1Ev>:
 80115ea:	4770      	bx	lr

080115ec <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80115ec:	b430      	push	{r4, r5}
 80115ee:	68c5      	ldr	r5, [r0, #12]
 80115f0:	6844      	ldr	r4, [r0, #4]
 80115f2:	106a      	asrs	r2, r5, #1
 80115f4:	4603      	mov	r3, r0
 80115f6:	07ed      	lsls	r5, r5, #31
 80115f8:	eb04 0002 	add.w	r0, r4, r2
 80115fc:	689b      	ldr	r3, [r3, #8]
 80115fe:	bf48      	it	mi
 8011600:	58a2      	ldrmi	r2, [r4, r2]
 8011602:	bc30      	pop	{r4, r5}
 8011604:	bf48      	it	mi
 8011606:	58d3      	ldrmi	r3, [r2, r3]
 8011608:	4718      	bx	r3

0801160a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801160a:	6843      	ldr	r3, [r0, #4]
 801160c:	b12b      	cbz	r3, 801161a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801160e:	6883      	ldr	r3, [r0, #8]
 8011610:	b92b      	cbnz	r3, 801161e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8011612:	68c0      	ldr	r0, [r0, #12]
 8011614:	f000 0001 	and.w	r0, r0, #1
 8011618:	4770      	bx	lr
 801161a:	4618      	mov	r0, r3
 801161c:	4770      	bx	lr
 801161e:	2001      	movs	r0, #1
 8011620:	4770      	bx	lr

08011622 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8011622:	b430      	push	{r4, r5}
 8011624:	68c5      	ldr	r5, [r0, #12]
 8011626:	6844      	ldr	r4, [r0, #4]
 8011628:	106a      	asrs	r2, r5, #1
 801162a:	4603      	mov	r3, r0
 801162c:	07ed      	lsls	r5, r5, #31
 801162e:	eb04 0002 	add.w	r0, r4, r2
 8011632:	689b      	ldr	r3, [r3, #8]
 8011634:	bf48      	it	mi
 8011636:	58a2      	ldrmi	r2, [r4, r2]
 8011638:	bc30      	pop	{r4, r5}
 801163a:	bf48      	it	mi
 801163c:	58d3      	ldrmi	r3, [r2, r3]
 801163e:	4718      	bx	r3

08011640 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8011640:	6843      	ldr	r3, [r0, #4]
 8011642:	b12b      	cbz	r3, 8011650 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8011644:	6883      	ldr	r3, [r0, #8]
 8011646:	b92b      	cbnz	r3, 8011654 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8011648:	68c0      	ldr	r0, [r0, #12]
 801164a:	f000 0001 	and.w	r0, r0, #1
 801164e:	4770      	bx	lr
 8011650:	4618      	mov	r0, r3
 8011652:	4770      	bx	lr
 8011654:	2001      	movs	r0, #1
 8011656:	4770      	bx	lr

08011658 <_ZN8touchgfx10ListLayoutD0Ev>:
 8011658:	b510      	push	{r4, lr}
 801165a:	2130      	movs	r1, #48	; 0x30
 801165c:	4604      	mov	r4, r0
 801165e:	f019 fbec 	bl	802ae3a <_ZdlPvj>
 8011662:	4620      	mov	r0, r4
 8011664:	bd10      	pop	{r4, pc}

08011666 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8011666:	b510      	push	{r4, lr}
 8011668:	2110      	movs	r1, #16
 801166a:	4604      	mov	r4, r0
 801166c:	f019 fbe5 	bl	802ae3a <_ZdlPvj>
 8011670:	4620      	mov	r0, r4
 8011672:	bd10      	pop	{r4, pc}

08011674 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8011674:	b510      	push	{r4, lr}
 8011676:	2110      	movs	r1, #16
 8011678:	4604      	mov	r4, r0
 801167a:	f019 fbde 	bl	802ae3a <_ZdlPvj>
 801167e:	4620      	mov	r0, r4
 8011680:	bd10      	pop	{r4, pc}

08011682 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8011682:	4603      	mov	r3, r0
 8011684:	4608      	mov	r0, r1
 8011686:	789a      	ldrb	r2, [r3, #2]
 8011688:	b992      	cbnz	r2, 80116b0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801168a:	685a      	ldr	r2, [r3, #4]
 801168c:	428a      	cmp	r2, r1
 801168e:	d102      	bne.n	8011696 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011690:	2201      	movs	r2, #1
 8011692:	709a      	strb	r2, [r3, #2]
 8011694:	4770      	bx	lr
 8011696:	7a1a      	ldrb	r2, [r3, #8]
 8011698:	2a01      	cmp	r2, #1
 801169a:	d104      	bne.n	80116a6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801169c:	88ca      	ldrh	r2, [r1, #6]
 801169e:	8949      	ldrh	r1, [r1, #10]
 80116a0:	440a      	add	r2, r1
 80116a2:	801a      	strh	r2, [r3, #0]
 80116a4:	4770      	bx	lr
 80116a6:	2a02      	cmp	r2, #2
 80116a8:	d116      	bne.n	80116d8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80116aa:	888a      	ldrh	r2, [r1, #4]
 80116ac:	8909      	ldrh	r1, [r1, #8]
 80116ae:	e7f7      	b.n	80116a0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 80116b0:	7a1a      	ldrb	r2, [r3, #8]
 80116b2:	2a01      	cmp	r2, #1
 80116b4:	d107      	bne.n	80116c6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 80116b6:	685b      	ldr	r3, [r3, #4]
 80116b8:	8959      	ldrh	r1, [r3, #10]
 80116ba:	88c3      	ldrh	r3, [r0, #6]
 80116bc:	4419      	add	r1, r3
 80116be:	6803      	ldr	r3, [r0, #0]
 80116c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80116c2:	b209      	sxth	r1, r1
 80116c4:	4718      	bx	r3
 80116c6:	2a02      	cmp	r2, #2
 80116c8:	d106      	bne.n	80116d8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80116ca:	685b      	ldr	r3, [r3, #4]
 80116cc:	8919      	ldrh	r1, [r3, #8]
 80116ce:	8883      	ldrh	r3, [r0, #4]
 80116d0:	4419      	add	r1, r3
 80116d2:	6803      	ldr	r3, [r0, #0]
 80116d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116d6:	e7f4      	b.n	80116c2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80116d8:	4770      	bx	lr

080116da <_ZN8touchgfx10ListLayout9removeAllEv>:
 80116da:	2200      	movs	r2, #0
 80116dc:	b510      	push	{r4, lr}
 80116de:	4611      	mov	r1, r2
 80116e0:	4604      	mov	r4, r0
 80116e2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80116e4:	f7ff f982 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80116e8:	4620      	mov	r0, r4
 80116ea:	f7ff fa26 	bl	8010b3a <_ZN8touchgfx9Container9removeAllEv>
 80116ee:	6960      	ldr	r0, [r4, #20]
 80116f0:	b120      	cbz	r0, 80116fc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80116f2:	6803      	ldr	r3, [r0, #0]
 80116f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116fa:	4718      	bx	r3
 80116fc:	bd10      	pop	{r4, pc}
	...

08011700 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8011700:	b530      	push	{r4, r5, lr}
 8011702:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011706:	428b      	cmp	r3, r1
 8011708:	b085      	sub	sp, #20
 801170a:	4604      	mov	r4, r0
 801170c:	d017      	beq.n	801173e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801170e:	2500      	movs	r5, #0
 8011710:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8011714:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8011716:	462a      	mov	r2, r5
 8011718:	4629      	mov	r1, r5
 801171a:	f7ff f967 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801171e:	4b09      	ldr	r3, [pc, #36]	; (8011744 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8011720:	e9cd 3400 	strd	r3, r4, [sp]
 8011724:	4b08      	ldr	r3, [pc, #32]	; (8011748 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8011726:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801172a:	6823      	ldr	r3, [r4, #0]
 801172c:	4620      	mov	r0, r4
 801172e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011730:	4669      	mov	r1, sp
 8011732:	4798      	blx	r3
 8011734:	6960      	ldr	r0, [r4, #20]
 8011736:	b110      	cbz	r0, 801173e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8011738:	6803      	ldr	r3, [r0, #0]
 801173a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801173c:	4798      	blx	r3
 801173e:	b005      	add	sp, #20
 8011740:	bd30      	pop	{r4, r5, pc}
 8011742:	bf00      	nop
 8011744:	0802f780 	.word	0x0802f780
 8011748:	080117b1 	.word	0x080117b1

0801174c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801174c:	b538      	push	{r3, r4, r5, lr}
 801174e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011752:	2b01      	cmp	r3, #1
 8011754:	460d      	mov	r5, r1
 8011756:	4604      	mov	r4, r0
 8011758:	4611      	mov	r1, r2
 801175a:	d002      	beq.n	8011762 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801175c:	2b02      	cmp	r3, #2
 801175e:	d015      	beq.n	801178c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011760:	bd38      	pop	{r3, r4, r5, pc}
 8011762:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011766:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801176a:	429a      	cmp	r2, r3
 801176c:	bfb8      	it	lt
 801176e:	8103      	strhlt	r3, [r0, #8]
 8011770:	896a      	ldrh	r2, [r5, #10]
 8011772:	8943      	ldrh	r3, [r0, #10]
 8011774:	4413      	add	r3, r2
 8011776:	8143      	strh	r3, [r0, #10]
 8011778:	460a      	mov	r2, r1
 801177a:	4628      	mov	r0, r5
 801177c:	2100      	movs	r1, #0
 801177e:	f7f1 f949 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8011782:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011784:	896a      	ldrh	r2, [r5, #10]
 8011786:	4413      	add	r3, r2
 8011788:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801178a:	e7e9      	b.n	8011760 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801178c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011790:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011794:	429a      	cmp	r2, r3
 8011796:	bfb8      	it	lt
 8011798:	8143      	strhlt	r3, [r0, #10]
 801179a:	892a      	ldrh	r2, [r5, #8]
 801179c:	8903      	ldrh	r3, [r0, #8]
 801179e:	4413      	add	r3, r2
 80117a0:	8103      	strh	r3, [r0, #8]
 80117a2:	2200      	movs	r2, #0
 80117a4:	4628      	mov	r0, r5
 80117a6:	f7f1 f935 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 80117aa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80117ac:	892a      	ldrh	r2, [r5, #8]
 80117ae:	e7ea      	b.n	8011786 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

080117b0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 80117b0:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 80117b4:	f7ff bfca 	b.w	801174c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

080117b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 80117b8:	b570      	push	{r4, r5, r6, lr}
 80117ba:	4604      	mov	r4, r0
 80117bc:	460d      	mov	r5, r1
 80117be:	f7ff fff7 	bl	80117b0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80117c2:	4620      	mov	r0, r4
 80117c4:	4629      	mov	r1, r5
 80117c6:	f7ff f9ab 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80117ca:	6960      	ldr	r0, [r4, #20]
 80117cc:	b120      	cbz	r0, 80117d8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80117ce:	6803      	ldr	r3, [r0, #0]
 80117d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80117d6:	4718      	bx	r3
 80117d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080117dc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80117dc:	b530      	push	{r4, r5, lr}
 80117de:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117e0:	b089      	sub	sp, #36	; 0x24
 80117e2:	4604      	mov	r4, r0
 80117e4:	4615      	mov	r5, r2
 80117e6:	b92b      	cbnz	r3, 80117f4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80117e8:	6803      	ldr	r3, [r0, #0]
 80117ea:	4611      	mov	r1, r2
 80117ec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80117ee:	4798      	blx	r3
 80117f0:	b009      	add	sp, #36	; 0x24
 80117f2:	bd30      	pop	{r4, r5, pc}
 80117f4:	f7ff f9ec 	bl	8010bd0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80117f8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80117fc:	f88d 200c 	strb.w	r2, [sp, #12]
 8011800:	4a0f      	ldr	r2, [pc, #60]	; (8011840 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8011802:	9204      	str	r2, [sp, #16]
 8011804:	aa01      	add	r2, sp, #4
 8011806:	9205      	str	r2, [sp, #20]
 8011808:	4a0e      	ldr	r2, [pc, #56]	; (8011844 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801180a:	9502      	str	r5, [sp, #8]
 801180c:	2300      	movs	r3, #0
 801180e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011812:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011816:	f88d 3006 	strb.w	r3, [sp, #6]
 801181a:	6823      	ldr	r3, [r4, #0]
 801181c:	a904      	add	r1, sp, #16
 801181e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011820:	4620      	mov	r0, r4
 8011822:	4798      	blx	r3
 8011824:	4620      	mov	r0, r4
 8011826:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801182a:	4629      	mov	r1, r5
 801182c:	f7ff ff8e 	bl	801174c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011830:	6960      	ldr	r0, [r4, #20]
 8011832:	2800      	cmp	r0, #0
 8011834:	d0dc      	beq.n	80117f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011836:	6803      	ldr	r3, [r0, #0]
 8011838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801183a:	4798      	blx	r3
 801183c:	e7d8      	b.n	80117f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801183e:	bf00      	nop
 8011840:	0802f798 	.word	0x0802f798
 8011844:	08011683 	.word	0x08011683

08011848 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8011848:	b538      	push	{r3, r4, r5, lr}
 801184a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801184e:	2b01      	cmp	r3, #1
 8011850:	4604      	mov	r4, r0
 8011852:	460d      	mov	r5, r1
 8011854:	d002      	beq.n	801185c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8011856:	2b02      	cmp	r3, #2
 8011858:	d018      	beq.n	801188c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801185a:	bd38      	pop	{r3, r4, r5, pc}
 801185c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011860:	4293      	cmp	r3, r2
 8011862:	bfc8      	it	gt
 8011864:	8102      	strhgt	r2, [r0, #8]
 8011866:	894a      	ldrh	r2, [r1, #10]
 8011868:	8943      	ldrh	r3, [r0, #10]
 801186a:	1a9b      	subs	r3, r3, r2
 801186c:	8143      	strh	r3, [r0, #10]
 801186e:	680b      	ldr	r3, [r1, #0]
 8011870:	4628      	mov	r0, r5
 8011872:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011874:	2100      	movs	r1, #0
 8011876:	4798      	blx	r3
 8011878:	682b      	ldr	r3, [r5, #0]
 801187a:	2100      	movs	r1, #0
 801187c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801187e:	4628      	mov	r0, r5
 8011880:	4798      	blx	r3
 8011882:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011884:	896a      	ldrh	r2, [r5, #10]
 8011886:	1a9b      	subs	r3, r3, r2
 8011888:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801188a:	e7e6      	b.n	801185a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801188c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011890:	4293      	cmp	r3, r2
 8011892:	bfc8      	it	gt
 8011894:	8142      	strhgt	r2, [r0, #10]
 8011896:	890a      	ldrh	r2, [r1, #8]
 8011898:	8903      	ldrh	r3, [r0, #8]
 801189a:	1a9b      	subs	r3, r3, r2
 801189c:	8103      	strh	r3, [r0, #8]
 801189e:	680b      	ldr	r3, [r1, #0]
 80118a0:	4628      	mov	r0, r5
 80118a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80118a4:	2100      	movs	r1, #0
 80118a6:	4798      	blx	r3
 80118a8:	682b      	ldr	r3, [r5, #0]
 80118aa:	2100      	movs	r1, #0
 80118ac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80118ae:	4628      	mov	r0, r5
 80118b0:	4798      	blx	r3
 80118b2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80118b4:	892a      	ldrh	r2, [r5, #8]
 80118b6:	e7e6      	b.n	8011886 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

080118b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 80118b8:	b530      	push	{r4, r5, lr}
 80118ba:	b089      	sub	sp, #36	; 0x24
 80118bc:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80118c0:	f88d 200c 	strb.w	r2, [sp, #12]
 80118c4:	4a13      	ldr	r2, [pc, #76]	; (8011914 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80118c6:	9204      	str	r2, [sp, #16]
 80118c8:	aa01      	add	r2, sp, #4
 80118ca:	9205      	str	r2, [sp, #20]
 80118cc:	4a12      	ldr	r2, [pc, #72]	; (8011918 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80118ce:	9102      	str	r1, [sp, #8]
 80118d0:	2300      	movs	r3, #0
 80118d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80118d6:	f88d 3006 	strb.w	r3, [sp, #6]
 80118da:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80118de:	6803      	ldr	r3, [r0, #0]
 80118e0:	460d      	mov	r5, r1
 80118e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118e4:	a904      	add	r1, sp, #16
 80118e6:	4604      	mov	r4, r0
 80118e8:	4798      	blx	r3
 80118ea:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80118ee:	b14b      	cbz	r3, 8011904 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80118f0:	4629      	mov	r1, r5
 80118f2:	4620      	mov	r0, r4
 80118f4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80118f8:	f7ff ffa6 	bl	8011848 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80118fc:	4629      	mov	r1, r5
 80118fe:	4620      	mov	r0, r4
 8011900:	f7ff f94f 	bl	8010ba2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011904:	6960      	ldr	r0, [r4, #20]
 8011906:	b110      	cbz	r0, 801190e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8011908:	6803      	ldr	r3, [r0, #0]
 801190a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801190c:	4798      	blx	r3
 801190e:	b009      	add	sp, #36	; 0x24
 8011910:	bd30      	pop	{r4, r5, pc}
 8011912:	bf00      	nop
 8011914:	0802f798 	.word	0x0802f798
 8011918:	08011585 	.word	0x08011585

0801191c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801191c:	b513      	push	{r0, r1, r4, lr}
 801191e:	6803      	ldr	r3, [r0, #0]
 8011920:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011924:	2300      	movs	r3, #0
 8011926:	e9cd 3300 	strd	r3, r3, [sp]
 801192a:	466b      	mov	r3, sp
 801192c:	47a0      	blx	r4
 801192e:	b002      	add	sp, #8
 8011930:	bd10      	pop	{r4, pc}

08011932 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011932:	2301      	movs	r3, #1
 8011934:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011938:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801193c:	4770      	bx	lr

0801193e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801193e:	2301      	movs	r3, #1
 8011940:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011944:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011948:	4770      	bx	lr

0801194a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801194a:	6843      	ldr	r3, [r0, #4]
 801194c:	2201      	movs	r2, #1
 801194e:	725a      	strb	r2, [r3, #9]
 8011950:	6840      	ldr	r0, [r0, #4]
 8011952:	6803      	ldr	r3, [r0, #0]
 8011954:	691b      	ldr	r3, [r3, #16]
 8011956:	4718      	bx	r3

08011958 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011958:	6840      	ldr	r0, [r0, #4]
 801195a:	6803      	ldr	r3, [r0, #0]
 801195c:	689b      	ldr	r3, [r3, #8]
 801195e:	4718      	bx	r3

08011960 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011960:	b530      	push	{r4, r5, lr}
 8011962:	b08b      	sub	sp, #44	; 0x2c
 8011964:	6804      	ldr	r4, [r0, #0]
 8011966:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801196a:	9509      	str	r5, [sp, #36]	; 0x24
 801196c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011970:	9508      	str	r5, [sp, #32]
 8011972:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011976:	9507      	str	r5, [sp, #28]
 8011978:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801197c:	9506      	str	r5, [sp, #24]
 801197e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011982:	9505      	str	r5, [sp, #20]
 8011984:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011988:	9504      	str	r5, [sp, #16]
 801198a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801198e:	9503      	str	r5, [sp, #12]
 8011990:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011994:	9502      	str	r5, [sp, #8]
 8011996:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801199a:	e9cd 3500 	strd	r3, r5, [sp]
 801199e:	4613      	mov	r3, r2
 80119a0:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80119a2:	2200      	movs	r2, #0
 80119a4:	47a0      	blx	r4
 80119a6:	b00b      	add	sp, #44	; 0x2c
 80119a8:	bd30      	pop	{r4, r5, pc}
	...

080119ac <_ZN8touchgfx3HAL10beginFrameEv>:
 80119ac:	4b04      	ldr	r3, [pc, #16]	; (80119c0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80119ae:	781b      	ldrb	r3, [r3, #0]
 80119b0:	b123      	cbz	r3, 80119bc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80119b2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80119b6:	f080 0001 	eor.w	r0, r0, #1
 80119ba:	4770      	bx	lr
 80119bc:	2001      	movs	r0, #1
 80119be:	4770      	bx	lr
 80119c0:	20013832 	.word	0x20013832

080119c4 <_ZN8touchgfx3HAL8endFrameEv>:
 80119c4:	b510      	push	{r4, lr}
 80119c6:	4604      	mov	r4, r0
 80119c8:	6840      	ldr	r0, [r0, #4]
 80119ca:	6803      	ldr	r3, [r0, #0]
 80119cc:	689b      	ldr	r3, [r3, #8]
 80119ce:	4798      	blx	r3
 80119d0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80119d4:	b113      	cbz	r3, 80119dc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80119d6:	2301      	movs	r3, #1
 80119d8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80119dc:	bd10      	pop	{r4, pc}

080119de <_ZN8touchgfx3HAL10initializeEv>:
 80119de:	b510      	push	{r4, lr}
 80119e0:	4604      	mov	r4, r0
 80119e2:	f7f0 fb7f 	bl	80020e4 <_ZN8touchgfx10OSWrappers10initializeEv>
 80119e6:	f7f0 fa8b 	bl	8001f00 <_ZN8touchgfx4GPIO4initEv>
 80119ea:	6860      	ldr	r0, [r4, #4]
 80119ec:	6803      	ldr	r3, [r0, #0]
 80119ee:	68db      	ldr	r3, [r3, #12]
 80119f0:	4798      	blx	r3
 80119f2:	68e0      	ldr	r0, [r4, #12]
 80119f4:	6803      	ldr	r3, [r0, #0]
 80119f6:	689b      	ldr	r3, [r3, #8]
 80119f8:	4798      	blx	r3
 80119fa:	6823      	ldr	r3, [r4, #0]
 80119fc:	4620      	mov	r0, r4
 80119fe:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011a00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a04:	4718      	bx	r3
	...

08011a08 <_ZN8touchgfx3HAL4tickEv>:
 8011a08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011a0a:	6803      	ldr	r3, [r0, #0]
 8011a0c:	4d5b      	ldr	r5, [pc, #364]	; (8011b7c <_ZN8touchgfx3HAL4tickEv+0x174>)
 8011a0e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011a12:	4604      	mov	r4, r0
 8011a14:	4798      	blx	r3
 8011a16:	2800      	cmp	r0, #0
 8011a18:	f000 8095 	beq.w	8011b46 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8011a1c:	2001      	movs	r0, #1
 8011a1e:	f7f0 fa21 	bl	8001e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011a22:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011a26:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011a2a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8011a2e:	2600      	movs	r6, #0
 8011a30:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011a34:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011a38:	b133      	cbz	r3, 8011a48 <_ZN8touchgfx3HAL4tickEv+0x40>
 8011a3a:	6823      	ldr	r3, [r4, #0]
 8011a3c:	4620      	mov	r0, r4
 8011a3e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011a42:	4798      	blx	r3
 8011a44:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011a48:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8011a4c:	6862      	ldr	r2, [r4, #4]
 8011a4e:	f083 0301 	eor.w	r3, r3, #1
 8011a52:	7253      	strb	r3, [r2, #9]
 8011a54:	2601      	movs	r6, #1
 8011a56:	702e      	strb	r6, [r5, #0]
 8011a58:	f005 f93a 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8011a5c:	6803      	ldr	r3, [r0, #0]
 8011a5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011a60:	4798      	blx	r3
 8011a62:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011a66:	b90b      	cbnz	r3, 8011a6c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a68:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8011a6c:	f005 f930 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8011a70:	6803      	ldr	r3, [r0, #0]
 8011a72:	695b      	ldr	r3, [r3, #20]
 8011a74:	4798      	blx	r3
 8011a76:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011a78:	6803      	ldr	r3, [r0, #0]
 8011a7a:	691b      	ldr	r3, [r3, #16]
 8011a7c:	4798      	blx	r3
 8011a7e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011a82:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011a86:	3b01      	subs	r3, #1
 8011a88:	b2db      	uxtb	r3, r3
 8011a8a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011a8e:	b10a      	cbz	r2, 8011a94 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011a90:	2b00      	cmp	r3, #0
 8011a92:	d1eb      	bne.n	8011a6c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a94:	4a3a      	ldr	r2, [pc, #232]	; (8011b80 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011a96:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8011a9a:	7813      	ldrb	r3, [r2, #0]
 8011a9c:	3301      	adds	r3, #1
 8011a9e:	b25b      	sxtb	r3, r3
 8011aa0:	4299      	cmp	r1, r3
 8011aa2:	7013      	strb	r3, [r2, #0]
 8011aa4:	dc10      	bgt.n	8011ac8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011aa6:	68e0      	ldr	r0, [r4, #12]
 8011aa8:	2300      	movs	r3, #0
 8011aaa:	7013      	strb	r3, [r2, #0]
 8011aac:	6803      	ldr	r3, [r0, #0]
 8011aae:	aa03      	add	r2, sp, #12
 8011ab0:	68db      	ldr	r3, [r3, #12]
 8011ab2:	a902      	add	r1, sp, #8
 8011ab4:	4798      	blx	r3
 8011ab6:	6823      	ldr	r3, [r4, #0]
 8011ab8:	2800      	cmp	r0, #0
 8011aba:	d050      	beq.n	8011b5e <_ZN8touchgfx3HAL4tickEv+0x156>
 8011abc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011ac0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011ac4:	4620      	mov	r0, r4
 8011ac6:	4798      	blx	r3
 8011ac8:	6960      	ldr	r0, [r4, #20]
 8011aca:	2300      	movs	r3, #0
 8011acc:	f88d 3007 	strb.w	r3, [sp, #7]
 8011ad0:	b158      	cbz	r0, 8011aea <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011ad2:	6803      	ldr	r3, [r0, #0]
 8011ad4:	f10d 0107 	add.w	r1, sp, #7
 8011ad8:	68db      	ldr	r3, [r3, #12]
 8011ada:	4798      	blx	r3
 8011adc:	b128      	cbz	r0, 8011aea <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011ade:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011ae0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011ae4:	6803      	ldr	r3, [r0, #0]
 8011ae6:	68db      	ldr	r3, [r3, #12]
 8011ae8:	4798      	blx	r3
 8011aea:	f104 001c 	add.w	r0, r4, #28
 8011aee:	f016 f8c3 	bl	8027c78 <_ZN8touchgfx8Gestures4tickEv>
 8011af2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011af6:	b30b      	cbz	r3, 8011b3c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011af8:	6920      	ldr	r0, [r4, #16]
 8011afa:	6803      	ldr	r3, [r0, #0]
 8011afc:	691b      	ldr	r3, [r3, #16]
 8011afe:	4798      	blx	r3
 8011b00:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011b02:	4606      	mov	r6, r0
 8011b04:	b903      	cbnz	r3, 8011b08 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011b06:	6760      	str	r0, [r4, #116]	; 0x74
 8011b08:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011b0a:	4a1e      	ldr	r2, [pc, #120]	; (8011b84 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011b0c:	1af3      	subs	r3, r6, r3
 8011b0e:	4293      	cmp	r3, r2
 8011b10:	d914      	bls.n	8011b3c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011b12:	6920      	ldr	r0, [r4, #16]
 8011b14:	6803      	ldr	r3, [r0, #0]
 8011b16:	699b      	ldr	r3, [r3, #24]
 8011b18:	4798      	blx	r3
 8011b1a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011b1c:	2264      	movs	r2, #100	; 0x64
 8011b1e:	1af3      	subs	r3, r6, r3
 8011b20:	fbb3 f3f2 	udiv	r3, r3, r2
 8011b24:	fbb0 f0f3 	udiv	r0, r0, r3
 8011b28:	2800      	cmp	r0, #0
 8011b2a:	dc1d      	bgt.n	8011b68 <_ZN8touchgfx3HAL4tickEv+0x160>
 8011b2c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011b30:	6920      	ldr	r0, [r4, #16]
 8011b32:	6803      	ldr	r3, [r0, #0]
 8011b34:	2100      	movs	r1, #0
 8011b36:	69db      	ldr	r3, [r3, #28]
 8011b38:	4798      	blx	r3
 8011b3a:	6766      	str	r6, [r4, #116]	; 0x74
 8011b3c:	f005 f8c8 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8011b40:	6803      	ldr	r3, [r0, #0]
 8011b42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b44:	4798      	blx	r3
 8011b46:	6823      	ldr	r3, [r4, #0]
 8011b48:	4620      	mov	r0, r4
 8011b4a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8011b4e:	4798      	blx	r3
 8011b50:	2001      	movs	r0, #1
 8011b52:	f7f0 f99f 	bl	8001e94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011b56:	2300      	movs	r3, #0
 8011b58:	702b      	strb	r3, [r5, #0]
 8011b5a:	b004      	add	sp, #16
 8011b5c:	bd70      	pop	{r4, r5, r6, pc}
 8011b5e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011b62:	4620      	mov	r0, r4
 8011b64:	4798      	blx	r3
 8011b66:	e7af      	b.n	8011ac8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011b68:	2863      	cmp	r0, #99	; 0x63
 8011b6a:	bfcb      	itete	gt
 8011b6c:	2300      	movgt	r3, #0
 8011b6e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011b72:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011b76:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8011b7a:	e7d9      	b.n	8011b30 <_ZN8touchgfx3HAL4tickEv+0x128>
 8011b7c:	20013838 	.word	0x20013838
 8011b80:	20013839 	.word	0x20013839
 8011b84:	05f5e100 	.word	0x05f5e100

08011b88 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011b88:	b510      	push	{r4, lr}
 8011b8a:	4604      	mov	r4, r0
 8011b8c:	f7f0 fada 	bl	8002144 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011b90:	6863      	ldr	r3, [r4, #4]
 8011b92:	2200      	movs	r2, #0
 8011b94:	729a      	strb	r2, [r3, #10]
 8011b96:	bd10      	pop	{r4, pc}

08011b98 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011b98:	65c1      	str	r1, [r0, #92]	; 0x5c
 8011b9a:	301c      	adds	r0, #28
 8011b9c:	f016 b86a 	b.w	8027c74 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011ba0 <_ZN8touchgfx3HAL5touchEll>:
 8011ba0:	b530      	push	{r4, r5, lr}
 8011ba2:	b087      	sub	sp, #28
 8011ba4:	4604      	mov	r4, r0
 8011ba6:	a804      	add	r0, sp, #16
 8011ba8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011bac:	f004 fe5c 	bl	8016868 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011bb0:	9b04      	ldr	r3, [sp, #16]
 8011bb2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011bb6:	a906      	add	r1, sp, #24
 8011bb8:	9b05      	ldr	r3, [sp, #20]
 8011bba:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011bbe:	a803      	add	r0, sp, #12
 8011bc0:	f004 fea4 	bl	801690c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011bc4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011bc8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011bcc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011bd0:	f104 001c 	add.w	r0, r4, #28
 8011bd4:	b189      	cbz	r1, 8011bfa <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011bd6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8011bda:	9300      	str	r3, [sp, #0]
 8011bdc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011be0:	4613      	mov	r3, r2
 8011be2:	462a      	mov	r2, r5
 8011be4:	f016 f856 	bl	8027c94 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011be8:	b128      	cbz	r0, 8011bf6 <_ZN8touchgfx3HAL5touchEll+0x56>
 8011bea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011bee:	6623      	str	r3, [r4, #96]	; 0x60
 8011bf0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011bf4:	6663      	str	r3, [r4, #100]	; 0x64
 8011bf6:	b007      	add	sp, #28
 8011bf8:	bd30      	pop	{r4, r5, pc}
 8011bfa:	f016 f88b 	bl	8027d14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011bfe:	2301      	movs	r3, #1
 8011c00:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011c04:	e7f1      	b.n	8011bea <_ZN8touchgfx3HAL5touchEll+0x4a>

08011c06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011c06:	b510      	push	{r4, lr}
 8011c08:	2b00      	cmp	r3, #0
 8011c0a:	d046      	beq.n	8011c9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c0c:	ea81 0002 	eor.w	r0, r1, r2
 8011c10:	07c4      	lsls	r4, r0, #31
 8011c12:	d508      	bpl.n	8011c26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011c14:	440b      	add	r3, r1
 8011c16:	3a01      	subs	r2, #1
 8011c18:	428b      	cmp	r3, r1
 8011c1a:	d93e      	bls.n	8011c9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c1c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011c20:	f801 0b01 	strb.w	r0, [r1], #1
 8011c24:	e7f8      	b.n	8011c18 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011c26:	07d0      	lsls	r0, r2, #31
 8011c28:	bf42      	ittt	mi
 8011c2a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011c2e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011c32:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011c36:	2b01      	cmp	r3, #1
 8011c38:	d911      	bls.n	8011c5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c3a:	ea81 0402 	eor.w	r4, r1, r2
 8011c3e:	07a4      	lsls	r4, r4, #30
 8011c40:	4610      	mov	r0, r2
 8011c42:	d022      	beq.n	8011c8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011c44:	f023 0401 	bic.w	r4, r3, #1
 8011c48:	440c      	add	r4, r1
 8011c4a:	428c      	cmp	r4, r1
 8011c4c:	4602      	mov	r2, r0
 8011c4e:	d904      	bls.n	8011c5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011c50:	8812      	ldrh	r2, [r2, #0]
 8011c52:	f821 2b02 	strh.w	r2, [r1], #2
 8011c56:	3002      	adds	r0, #2
 8011c58:	e7f7      	b.n	8011c4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011c5a:	f003 0301 	and.w	r3, r3, #1
 8011c5e:	f023 0003 	bic.w	r0, r3, #3
 8011c62:	4408      	add	r0, r1
 8011c64:	4288      	cmp	r0, r1
 8011c66:	4614      	mov	r4, r2
 8011c68:	d904      	bls.n	8011c74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011c6a:	6824      	ldr	r4, [r4, #0]
 8011c6c:	f841 4b04 	str.w	r4, [r1], #4
 8011c70:	3204      	adds	r2, #4
 8011c72:	e7f7      	b.n	8011c64 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011c74:	f003 0303 	and.w	r3, r3, #3
 8011c78:	440b      	add	r3, r1
 8011c7a:	3a01      	subs	r2, #1
 8011c7c:	428b      	cmp	r3, r1
 8011c7e:	d90c      	bls.n	8011c9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c80:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011c84:	f801 0b01 	strb.w	r0, [r1], #1
 8011c88:	e7f8      	b.n	8011c7c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011c8a:	0790      	lsls	r0, r2, #30
 8011c8c:	d0e7      	beq.n	8011c5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c8e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011c92:	f821 0b02 	strh.w	r0, [r1], #2
 8011c96:	3b02      	subs	r3, #2
 8011c98:	e7e1      	b.n	8011c5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c9a:	2001      	movs	r0, #1
 8011c9c:	bd10      	pop	{r4, pc}

08011c9e <_ZN8touchgfx3HAL7noTouchEv>:
 8011c9e:	b510      	push	{r4, lr}
 8011ca0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011ca4:	4604      	mov	r4, r0
 8011ca6:	b153      	cbz	r3, 8011cbe <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011ca8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011cac:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011cb0:	2101      	movs	r1, #1
 8011cb2:	301c      	adds	r0, #28
 8011cb4:	f016 f82e 	bl	8027d14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011cb8:	2300      	movs	r3, #0
 8011cba:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011cbe:	bd10      	pop	{r4, pc}

08011cc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011cc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011cc4:	b085      	sub	sp, #20
 8011cc6:	ad04      	add	r5, sp, #16
 8011cc8:	4604      	mov	r4, r0
 8011cca:	2000      	movs	r0, #0
 8011ccc:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011cd0:	69a0      	ldr	r0, [r4, #24]
 8011cd2:	6806      	ldr	r6, [r0, #0]
 8011cd4:	9501      	str	r5, [sp, #4]
 8011cd6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011cda:	9500      	str	r5, [sp, #0]
 8011cdc:	6835      	ldr	r5, [r6, #0]
 8011cde:	4699      	mov	r9, r3
 8011ce0:	460f      	mov	r7, r1
 8011ce2:	4690      	mov	r8, r2
 8011ce4:	47a8      	blx	r5
 8011ce6:	4d10      	ldr	r5, [pc, #64]	; (8011d28 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011ce8:	4606      	mov	r6, r0
 8011cea:	f8a5 9000 	strh.w	r9, [r5]
 8011cee:	f7f2 fe17 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8011cf2:	6803      	ldr	r3, [r0, #0]
 8011cf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cf6:	4798      	blx	r3
 8011cf8:	b128      	cbz	r0, 8011d06 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011cfa:	2801      	cmp	r0, #1
 8011cfc:	d00b      	beq.n	8011d16 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011cfe:	4630      	mov	r0, r6
 8011d00:	b005      	add	sp, #20
 8011d02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011d06:	882b      	ldrh	r3, [r5, #0]
 8011d08:	fb08 7203 	mla	r2, r8, r3, r7
 8011d0c:	9b03      	ldr	r3, [sp, #12]
 8011d0e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011d12:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011d14:	e7f3      	b.n	8011cfe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011d16:	882a      	ldrh	r2, [r5, #0]
 8011d18:	9b03      	ldr	r3, [sp, #12]
 8011d1a:	fb08 7202 	mla	r2, r8, r2, r7
 8011d1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011d22:	1a9a      	subs	r2, r3, r2
 8011d24:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011d26:	e7ea      	b.n	8011cfe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011d28:	2001382e 	.word	0x2001382e

08011d2c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d2e:	b08b      	sub	sp, #44	; 0x2c
 8011d30:	4617      	mov	r7, r2
 8011d32:	4604      	mov	r4, r0
 8011d34:	460e      	mov	r6, r1
 8011d36:	461d      	mov	r5, r3
 8011d38:	f7f2 fdf2 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8011d3c:	6803      	ldr	r3, [r0, #0]
 8011d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d40:	4798      	blx	r3
 8011d42:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011d46:	9007      	str	r0, [sp, #28]
 8011d48:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011d4c:	4b0d      	ldr	r3, [pc, #52]	; (8011d84 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011d4e:	6822      	ldr	r2, [r4, #0]
 8011d50:	881b      	ldrh	r3, [r3, #0]
 8011d52:	9306      	str	r3, [sp, #24]
 8011d54:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011d58:	9305      	str	r3, [sp, #20]
 8011d5a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011d5e:	9304      	str	r3, [sp, #16]
 8011d60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011d64:	9303      	str	r3, [sp, #12]
 8011d66:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011d6a:	9302      	str	r3, [sp, #8]
 8011d6c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011d70:	e9cd 5300 	strd	r5, r3, [sp]
 8011d74:	4631      	mov	r1, r6
 8011d76:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011d78:	463b      	mov	r3, r7
 8011d7a:	2200      	movs	r2, #0
 8011d7c:	4620      	mov	r0, r4
 8011d7e:	47a8      	blx	r5
 8011d80:	b00b      	add	sp, #44	; 0x2c
 8011d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d84:	2001382e 	.word	0x2001382e

08011d88 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011d88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d8c:	4698      	mov	r8, r3
 8011d8e:	6803      	ldr	r3, [r0, #0]
 8011d90:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011d92:	4b15      	ldr	r3, [pc, #84]	; (8011de8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011d94:	b08b      	sub	sp, #44	; 0x2c
 8011d96:	4617      	mov	r7, r2
 8011d98:	f8b3 9000 	ldrh.w	r9, [r3]
 8011d9c:	460e      	mov	r6, r1
 8011d9e:	4604      	mov	r4, r0
 8011da0:	f7f2 fdbe 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8011da4:	6803      	ldr	r3, [r0, #0]
 8011da6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011da8:	4798      	blx	r3
 8011daa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011dae:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011db2:	2302      	movs	r3, #2
 8011db4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011db8:	2301      	movs	r3, #1
 8011dba:	9305      	str	r3, [sp, #20]
 8011dbc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011dc0:	9304      	str	r3, [sp, #16]
 8011dc2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011dc6:	9303      	str	r3, [sp, #12]
 8011dc8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011dcc:	9302      	str	r3, [sp, #8]
 8011dce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011dd2:	2200      	movs	r2, #0
 8011dd4:	e9cd 8300 	strd	r8, r3, [sp]
 8011dd8:	4631      	mov	r1, r6
 8011dda:	463b      	mov	r3, r7
 8011ddc:	4620      	mov	r0, r4
 8011dde:	47a8      	blx	r5
 8011de0:	b00b      	add	sp, #44	; 0x2c
 8011de2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011de6:	bf00      	nop
 8011de8:	2001382e 	.word	0x2001382e

08011dec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011dec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011df0:	4698      	mov	r8, r3
 8011df2:	6803      	ldr	r3, [r0, #0]
 8011df4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011df6:	4b11      	ldr	r3, [pc, #68]	; (8011e3c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011df8:	b087      	sub	sp, #28
 8011dfa:	f8b3 9000 	ldrh.w	r9, [r3]
 8011dfe:	460e      	mov	r6, r1
 8011e00:	4617      	mov	r7, r2
 8011e02:	4604      	mov	r4, r0
 8011e04:	f7f2 fd8c 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8011e08:	6803      	ldr	r3, [r0, #0]
 8011e0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e0c:	4798      	blx	r3
 8011e0e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011e12:	f8cd 900c 	str.w	r9, [sp, #12]
 8011e16:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011e1a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011e1e:	9302      	str	r3, [sp, #8]
 8011e20:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011e24:	9301      	str	r3, [sp, #4]
 8011e26:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011e2a:	9300      	str	r3, [sp, #0]
 8011e2c:	463a      	mov	r2, r7
 8011e2e:	4643      	mov	r3, r8
 8011e30:	4631      	mov	r1, r6
 8011e32:	4620      	mov	r0, r4
 8011e34:	47a8      	blx	r5
 8011e36:	b007      	add	sp, #28
 8011e38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e3c:	2001382e 	.word	0x2001382e

08011e40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e44:	4604      	mov	r4, r0
 8011e46:	b08f      	sub	sp, #60	; 0x3c
 8011e48:	4610      	mov	r0, r2
 8011e4a:	460d      	mov	r5, r1
 8011e4c:	4691      	mov	r9, r2
 8011e4e:	461e      	mov	r6, r3
 8011e50:	f008 fafa 	bl	801a448 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011e54:	2800      	cmp	r0, #0
 8011e56:	f000 809d 	beq.w	8011f94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011e5a:	6823      	ldr	r3, [r4, #0]
 8011e5c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011ff8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011e60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e62:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011ffc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011e66:	4f61      	ldr	r7, [pc, #388]	; (8011fec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011e68:	4620      	mov	r0, r4
 8011e6a:	4798      	blx	r3
 8011e6c:	6823      	ldr	r3, [r4, #0]
 8011e6e:	4620      	mov	r0, r4
 8011e70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e72:	4798      	blx	r3
 8011e74:	f8bb 3000 	ldrh.w	r3, [fp]
 8011e78:	9301      	str	r3, [sp, #4]
 8011e7a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011e7e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011e82:	9302      	str	r3, [sp, #8]
 8011e84:	883b      	ldrh	r3, [r7, #0]
 8011e86:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011e8a:	9303      	str	r3, [sp, #12]
 8011e8c:	4b58      	ldr	r3, [pc, #352]	; (8011ff0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011e8e:	9305      	str	r3, [sp, #20]
 8011e90:	881a      	ldrh	r2, [r3, #0]
 8011e92:	9204      	str	r2, [sp, #16]
 8011e94:	4640      	mov	r0, r8
 8011e96:	f008 fb6b 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e9a:	8038      	strh	r0, [r7, #0]
 8011e9c:	4640      	mov	r0, r8
 8011e9e:	f008 fb9b 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011ea2:	9b05      	ldr	r3, [sp, #20]
 8011ea4:	b280      	uxth	r0, r0
 8011ea6:	8018      	strh	r0, [r3, #0]
 8011ea8:	4b52      	ldr	r3, [pc, #328]	; (8011ff4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011eaa:	781b      	ldrb	r3, [r3, #0]
 8011eac:	2b00      	cmp	r3, #0
 8011eae:	d174      	bne.n	8011f9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011eb0:	883b      	ldrh	r3, [r7, #0]
 8011eb2:	f8ab 3000 	strh.w	r3, [fp]
 8011eb6:	f8aa 0000 	strh.w	r0, [sl]
 8011eba:	4648      	mov	r0, r9
 8011ebc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011ec0:	f008 fac2 	bl	801a448 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011ec4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011ec8:	2200      	movs	r2, #0
 8011eca:	4611      	mov	r1, r2
 8011ecc:	4628      	mov	r0, r5
 8011ece:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011ed2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011ed6:	f7f0 fd9d 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8011eda:	2301      	movs	r3, #1
 8011edc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011ee0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011ee4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011ee8:	2b00      	cmp	r3, #0
 8011eea:	dd5c      	ble.n	8011fa6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011eec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011ef0:	2b00      	cmp	r3, #0
 8011ef2:	dd58      	ble.n	8011fa6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ef4:	462a      	mov	r2, r5
 8011ef6:	ab0a      	add	r3, sp, #40	; 0x28
 8011ef8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011efc:	6851      	ldr	r1, [r2, #4]
 8011efe:	c303      	stmia	r3!, {r0, r1}
 8011f00:	4631      	mov	r1, r6
 8011f02:	a80a      	add	r0, sp, #40	; 0x28
 8011f04:	f7fe ff92 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8011f08:	4b38      	ldr	r3, [pc, #224]	; (8011fec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011f0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011f0e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011f12:	2100      	movs	r1, #0
 8011f14:	aa0a      	add	r2, sp, #40	; 0x28
 8011f16:	4b36      	ldr	r3, [pc, #216]	; (8011ff0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011f18:	910c      	str	r1, [sp, #48]	; 0x30
 8011f1a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011f22:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011f26:	ab08      	add	r3, sp, #32
 8011f28:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f2c:	4618      	mov	r0, r3
 8011f2e:	a90c      	add	r1, sp, #48	; 0x30
 8011f30:	f7fe ff7c 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8011f34:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011f36:	2b00      	cmp	r3, #0
 8011f38:	d13c      	bne.n	8011fb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011f3a:	2000      	movs	r0, #0
 8011f3c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011f40:	2600      	movs	r6, #0
 8011f42:	682a      	ldr	r2, [r5, #0]
 8011f44:	696b      	ldr	r3, [r5, #20]
 8011f46:	616e      	str	r6, [r5, #20]
 8011f48:	9305      	str	r3, [sp, #20]
 8011f4a:	6892      	ldr	r2, [r2, #8]
 8011f4c:	a908      	add	r1, sp, #32
 8011f4e:	4628      	mov	r0, r5
 8011f50:	4790      	blx	r2
 8011f52:	9b05      	ldr	r3, [sp, #20]
 8011f54:	616b      	str	r3, [r5, #20]
 8011f56:	4652      	mov	r2, sl
 8011f58:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011f5c:	4649      	mov	r1, r9
 8011f5e:	4628      	mov	r0, r5
 8011f60:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011f64:	f7f0 fd56 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8011f68:	4b23      	ldr	r3, [pc, #140]	; (8011ff8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011f6a:	9a01      	ldr	r2, [sp, #4]
 8011f6c:	801a      	strh	r2, [r3, #0]
 8011f6e:	4b23      	ldr	r3, [pc, #140]	; (8011ffc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011f70:	9a02      	ldr	r2, [sp, #8]
 8011f72:	801a      	strh	r2, [r3, #0]
 8011f74:	4b1d      	ldr	r3, [pc, #116]	; (8011fec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011f76:	9a03      	ldr	r2, [sp, #12]
 8011f78:	801a      	strh	r2, [r3, #0]
 8011f7a:	4b1d      	ldr	r3, [pc, #116]	; (8011ff0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011f7c:	9a04      	ldr	r2, [sp, #16]
 8011f7e:	801a      	strh	r2, [r3, #0]
 8011f80:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011f84:	6823      	ldr	r3, [r4, #0]
 8011f86:	4620      	mov	r0, r4
 8011f88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011f8a:	4798      	blx	r3
 8011f8c:	6823      	ldr	r3, [r4, #0]
 8011f8e:	4620      	mov	r0, r4
 8011f90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f92:	4798      	blx	r3
 8011f94:	b00f      	add	sp, #60	; 0x3c
 8011f96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f9a:	883b      	ldrh	r3, [r7, #0]
 8011f9c:	f8ab 0000 	strh.w	r0, [fp]
 8011fa0:	f8aa 3000 	strh.w	r3, [sl]
 8011fa4:	e789      	b.n	8011eba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011fa6:	462a      	mov	r2, r5
 8011fa8:	ab0a      	add	r3, sp, #40	; 0x28
 8011faa:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011fae:	6851      	ldr	r1, [r2, #4]
 8011fb0:	c303      	stmia	r3!, {r0, r1}
 8011fb2:	e7a9      	b.n	8011f08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011fb4:	a807      	add	r0, sp, #28
 8011fb6:	f008 fc4b 	bl	801a850 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011fba:	4606      	mov	r6, r0
 8011fbc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011fbe:	6803      	ldr	r3, [r0, #0]
 8011fc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fc2:	4798      	blx	r3
 8011fc4:	4286      	cmp	r6, r0
 8011fc6:	d1b8      	bne.n	8011f3a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011fc8:	f7f2 fcaa 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8011fcc:	6803      	ldr	r3, [r0, #0]
 8011fce:	4606      	mov	r6, r0
 8011fd0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011fd2:	9305      	str	r3, [sp, #20]
 8011fd4:	a807      	add	r0, sp, #28
 8011fd6:	f008 fc3b 	bl	801a850 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011fda:	9b05      	ldr	r3, [sp, #20]
 8011fdc:	4601      	mov	r1, r0
 8011fde:	4630      	mov	r0, r6
 8011fe0:	4798      	blx	r3
 8011fe2:	f080 0001 	eor.w	r0, r0, #1
 8011fe6:	b2c0      	uxtb	r0, r0
 8011fe8:	e7a8      	b.n	8011f3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011fea:	bf00      	nop
 8011fec:	20013828 	.word	0x20013828
 8011ff0:	2001382a 	.word	0x2001382a
 8011ff4:	2001382c 	.word	0x2001382c
 8011ff8:	2001382e 	.word	0x2001382e
 8011ffc:	20013830 	.word	0x20013830

08012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012000:	b510      	push	{r4, lr}
 8012002:	4b07      	ldr	r3, [pc, #28]	; (8012020 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012004:	781b      	ldrb	r3, [r3, #0]
 8012006:	4604      	mov	r4, r0
 8012008:	b13b      	cbz	r3, 801201a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801200a:	6803      	ldr	r3, [r0, #0]
 801200c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801200e:	4798      	blx	r3
 8012010:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012012:	4283      	cmp	r3, r0
 8012014:	d101      	bne.n	801201a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012016:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012018:	bd10      	pop	{r4, pc}
 801201a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801201c:	e7fc      	b.n	8012018 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801201e:	bf00      	nop
 8012020:	20013832 	.word	0x20013832

08012024 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012028:	b08a      	sub	sp, #40	; 0x28
 801202a:	461d      	mov	r5, r3
 801202c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012030:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012034:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012038:	f8ad 3018 	strh.w	r3, [sp, #24]
 801203c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012040:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012044:	2400      	movs	r4, #0
 8012046:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801204a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801204e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012052:	4690      	mov	r8, r2
 8012054:	4607      	mov	r7, r0
 8012056:	9404      	str	r4, [sp, #16]
 8012058:	f88d 4020 	strb.w	r4, [sp, #32]
 801205c:	f7ff ffd0 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012060:	fb06 8505 	mla	r5, r6, r5, r8
 8012064:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012068:	6878      	ldr	r0, [r7, #4]
 801206a:	9505      	str	r5, [sp, #20]
 801206c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012070:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012074:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012078:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801207c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012080:	6803      	ldr	r3, [r0, #0]
 8012082:	a901      	add	r1, sp, #4
 8012084:	685b      	ldr	r3, [r3, #4]
 8012086:	4798      	blx	r3
 8012088:	b00a      	add	sp, #40	; 0x28
 801208a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801208e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801208e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012092:	b08b      	sub	sp, #44	; 0x2c
 8012094:	2400      	movs	r4, #0
 8012096:	461d      	mov	r5, r3
 8012098:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801209c:	4688      	mov	r8, r1
 801209e:	4691      	mov	r9, r2
 80120a0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80120a4:	9404      	str	r4, [sp, #16]
 80120a6:	4607      	mov	r7, r0
 80120a8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80120ac:	f7ff ffa8 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80120b0:	fb06 9505 	mla	r5, r6, r5, r9
 80120b4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80120b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80120bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80120c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80120c4:	6878      	ldr	r0, [r7, #4]
 80120c6:	9505      	str	r5, [sp, #20]
 80120c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80120cc:	f8ad 401c 	strh.w	r4, [sp, #28]
 80120d0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80120d4:	f8cd 8010 	str.w	r8, [sp, #16]
 80120d8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80120dc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80120e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80120e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80120e8:	6803      	ldr	r3, [r0, #0]
 80120ea:	a901      	add	r1, sp, #4
 80120ec:	685b      	ldr	r3, [r3, #4]
 80120ee:	4798      	blx	r3
 80120f0:	b00b      	add	sp, #44	; 0x2c
 80120f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080120f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80120f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120fc:	b08a      	sub	sp, #40	; 0x28
 80120fe:	4698      	mov	r8, r3
 8012100:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8012104:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8012108:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801210c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8012110:	2300      	movs	r3, #0
 8012112:	2d0b      	cmp	r5, #11
 8012114:	4606      	mov	r6, r0
 8012116:	9304      	str	r3, [sp, #16]
 8012118:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801211c:	d138      	bne.n	8012190 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801211e:	2380      	movs	r3, #128	; 0x80
 8012120:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012124:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012128:	f8ad 3018 	strh.w	r3, [sp, #24]
 801212c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012130:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012134:	f88d 0020 	strb.w	r0, [sp, #32]
 8012138:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801213c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012140:	4630      	mov	r0, r6
 8012142:	9203      	str	r2, [sp, #12]
 8012144:	f7ff ff5c 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012148:	2c0b      	cmp	r4, #11
 801214a:	bf98      	it	ls
 801214c:	4b1b      	ldrls	r3, [pc, #108]	; (80121bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801214e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012152:	bf98      	it	ls
 8012154:	5d19      	ldrbls	r1, [r3, r4]
 8012156:	f8ad 701e 	strh.w	r7, [sp, #30]
 801215a:	bf88      	it	hi
 801215c:	2100      	movhi	r1, #0
 801215e:	fb02 8307 	mla	r3, r2, r7, r8
 8012162:	10c9      	asrs	r1, r1, #3
 8012164:	fb01 0003 	mla	r0, r1, r3, r0
 8012168:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801216c:	9005      	str	r0, [sp, #20]
 801216e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012172:	6870      	ldr	r0, [r6, #4]
 8012174:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8012178:	2300      	movs	r3, #0
 801217a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801217e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012182:	6803      	ldr	r3, [r0, #0]
 8012184:	a901      	add	r1, sp, #4
 8012186:	685b      	ldr	r3, [r3, #4]
 8012188:	4798      	blx	r3
 801218a:	b00a      	add	sp, #40	; 0x28
 801218c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012190:	2d02      	cmp	r5, #2
 8012192:	d109      	bne.n	80121a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8012194:	28ff      	cmp	r0, #255	; 0xff
 8012196:	d105      	bne.n	80121a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8012198:	f1bc 0f00 	cmp.w	ip, #0
 801219c:	bf14      	ite	ne
 801219e:	2340      	movne	r3, #64	; 0x40
 80121a0:	2320      	moveq	r3, #32
 80121a2:	e7bd      	b.n	8012120 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80121a4:	2340      	movs	r3, #64	; 0x40
 80121a6:	e7bb      	b.n	8012120 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80121a8:	28ff      	cmp	r0, #255	; 0xff
 80121aa:	d105      	bne.n	80121b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80121ac:	f1bc 0f00 	cmp.w	ip, #0
 80121b0:	bf14      	ite	ne
 80121b2:	2304      	movne	r3, #4
 80121b4:	2301      	moveq	r3, #1
 80121b6:	e7b3      	b.n	8012120 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80121b8:	2304      	movs	r3, #4
 80121ba:	e7b1      	b.n	8012120 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80121bc:	0802f840 	.word	0x0802f840

080121c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80121c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121c4:	b08b      	sub	sp, #44	; 0x2c
 80121c6:	461d      	mov	r5, r3
 80121c8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80121cc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80121d0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80121d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80121d8:	bf14      	ite	ne
 80121da:	2308      	movne	r3, #8
 80121dc:	2302      	moveq	r3, #2
 80121de:	2400      	movs	r4, #0
 80121e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80121e4:	4688      	mov	r8, r1
 80121e6:	4693      	mov	fp, r2
 80121e8:	9404      	str	r4, [sp, #16]
 80121ea:	4607      	mov	r7, r0
 80121ec:	f7ff ff08 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80121f0:	2e0b      	cmp	r6, #11
 80121f2:	bf98      	it	ls
 80121f4:	4b15      	ldrls	r3, [pc, #84]	; (801224c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80121f6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80121fa:	bf98      	it	ls
 80121fc:	5d9c      	ldrbls	r4, [r3, r6]
 80121fe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012202:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012206:	fb05 b50a 	mla	r5, r5, sl, fp
 801220a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801220e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012212:	10e4      	asrs	r4, r4, #3
 8012214:	fb04 0405 	mla	r4, r4, r5, r0
 8012218:	2300      	movs	r3, #0
 801221a:	6878      	ldr	r0, [r7, #4]
 801221c:	9405      	str	r4, [sp, #20]
 801221e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012222:	f8ad a01e 	strh.w	sl, [sp, #30]
 8012226:	f8cd 8010 	str.w	r8, [sp, #16]
 801222a:	f88d 9020 	strb.w	r9, [sp, #32]
 801222e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8012232:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012236:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801223a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801223e:	6803      	ldr	r3, [r0, #0]
 8012240:	a901      	add	r1, sp, #4
 8012242:	685b      	ldr	r3, [r3, #4]
 8012244:	4798      	blx	r3
 8012246:	b00b      	add	sp, #44	; 0x2c
 8012248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801224c:	0802f840 	.word	0x0802f840

08012250 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012254:	461e      	mov	r6, r3
 8012256:	4b0a      	ldr	r3, [pc, #40]	; (8012280 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012258:	460f      	mov	r7, r1
 801225a:	881d      	ldrh	r5, [r3, #0]
 801225c:	4690      	mov	r8, r2
 801225e:	f7f2 fb5f 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8012262:	6803      	ldr	r3, [r0, #0]
 8012264:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012266:	4798      	blx	r3
 8012268:	280b      	cmp	r0, #11
 801226a:	bf9a      	itte	ls
 801226c:	4b05      	ldrls	r3, [pc, #20]	; (8012284 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801226e:	5c1c      	ldrbls	r4, [r3, r0]
 8012270:	2400      	movhi	r4, #0
 8012272:	fb08 7005 	mla	r0, r8, r5, r7
 8012276:	10e4      	asrs	r4, r4, #3
 8012278:	fb04 6000 	mla	r0, r4, r0, r6
 801227c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012280:	2001382e 	.word	0x2001382e
 8012284:	0802f840 	.word	0x0802f840

08012288 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012288:	b5f0      	push	{r4, r5, r6, r7, lr}
 801228a:	b08b      	sub	sp, #44	; 0x2c
 801228c:	461f      	mov	r7, r3
 801228e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012292:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012296:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801229a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801229e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80122a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80122a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80122aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80122ae:	2500      	movs	r5, #0
 80122b0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80122b4:	f88d 3020 	strb.w	r3, [sp, #32]
 80122b8:	4604      	mov	r4, r0
 80122ba:	4616      	mov	r6, r2
 80122bc:	9504      	str	r5, [sp, #16]
 80122be:	f7ff fe9f 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80122c2:	463a      	mov	r2, r7
 80122c4:	4631      	mov	r1, r6
 80122c6:	4603      	mov	r3, r0
 80122c8:	4620      	mov	r0, r4
 80122ca:	f7ff ffc1 	bl	8012250 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80122ce:	4b0e      	ldr	r3, [pc, #56]	; (8012308 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80122d0:	9005      	str	r0, [sp, #20]
 80122d2:	881b      	ldrh	r3, [r3, #0]
 80122d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80122d8:	f7f2 fb22 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 80122dc:	6803      	ldr	r3, [r0, #0]
 80122de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80122e0:	4798      	blx	r3
 80122e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80122e4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80122e8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80122ec:	9304      	str	r3, [sp, #16]
 80122ee:	6860      	ldr	r0, [r4, #4]
 80122f0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80122f4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80122f8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80122fc:	6803      	ldr	r3, [r0, #0]
 80122fe:	a901      	add	r1, sp, #4
 8012300:	685b      	ldr	r3, [r3, #4]
 8012302:	4798      	blx	r3
 8012304:	b00b      	add	sp, #44	; 0x2c
 8012306:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012308:	2001382e 	.word	0x2001382e

0801230c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801230c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801230e:	b08d      	sub	sp, #52	; 0x34
 8012310:	466b      	mov	r3, sp
 8012312:	e883 0006 	stmia.w	r3, {r1, r2}
 8012316:	2300      	movs	r3, #0
 8012318:	9306      	str	r3, [sp, #24]
 801231a:	6803      	ldr	r3, [r0, #0]
 801231c:	f8bd 6000 	ldrh.w	r6, [sp]
 8012320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012322:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012326:	2501      	movs	r5, #1
 8012328:	9503      	str	r5, [sp, #12]
 801232a:	4604      	mov	r4, r0
 801232c:	4798      	blx	r3
 801232e:	463a      	mov	r2, r7
 8012330:	4631      	mov	r1, r6
 8012332:	4603      	mov	r3, r0
 8012334:	4620      	mov	r0, r4
 8012336:	f7ff ff8b 	bl	8012250 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801233a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801233c:	9307      	str	r3, [sp, #28]
 801233e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012342:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012346:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801234a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801234e:	4b0f      	ldr	r3, [pc, #60]	; (801238c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8012350:	9004      	str	r0, [sp, #16]
 8012352:	881b      	ldrh	r3, [r3, #0]
 8012354:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012358:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801235c:	f7f2 fae0 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8012360:	6803      	ldr	r3, [r0, #0]
 8012362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012364:	4798      	blx	r3
 8012366:	23ff      	movs	r3, #255	; 0xff
 8012368:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801236c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012370:	6860      	ldr	r0, [r4, #4]
 8012372:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012376:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801237a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801237e:	6803      	ldr	r3, [r0, #0]
 8012380:	a903      	add	r1, sp, #12
 8012382:	685b      	ldr	r3, [r3, #4]
 8012384:	4798      	blx	r3
 8012386:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012388:	b00d      	add	sp, #52	; 0x34
 801238a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801238c:	2001382e 	.word	0x2001382e

08012390 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012394:	b08c      	sub	sp, #48	; 0x30
 8012396:	461e      	mov	r6, r3
 8012398:	466d      	mov	r5, sp
 801239a:	2300      	movs	r3, #0
 801239c:	e885 0006 	stmia.w	r5, {r1, r2}
 80123a0:	9306      	str	r3, [sp, #24]
 80123a2:	6803      	ldr	r3, [r0, #0]
 80123a4:	f8bd 7000 	ldrh.w	r7, [sp]
 80123a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80123aa:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80123ae:	2501      	movs	r5, #1
 80123b0:	9503      	str	r5, [sp, #12]
 80123b2:	4604      	mov	r4, r0
 80123b4:	4798      	blx	r3
 80123b6:	4642      	mov	r2, r8
 80123b8:	4639      	mov	r1, r7
 80123ba:	4603      	mov	r3, r0
 80123bc:	4620      	mov	r0, r4
 80123be:	f7ff ff47 	bl	8012250 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80123c2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80123c6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80123ca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80123ce:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80123d2:	4b11      	ldr	r3, [pc, #68]	; (8012418 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80123d4:	9004      	str	r0, [sp, #16]
 80123d6:	881b      	ldrh	r3, [r3, #0]
 80123d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80123dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80123de:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80123e2:	9607      	str	r6, [sp, #28]
 80123e4:	f7f2 fa9c 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 80123e8:	6803      	ldr	r3, [r0, #0]
 80123ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123ec:	4798      	blx	r3
 80123ee:	23ff      	movs	r3, #255	; 0xff
 80123f0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80123f4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80123f8:	6860      	ldr	r0, [r4, #4]
 80123fa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80123fe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012402:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012406:	6803      	ldr	r3, [r0, #0]
 8012408:	a903      	add	r1, sp, #12
 801240a:	685b      	ldr	r3, [r3, #4]
 801240c:	4798      	blx	r3
 801240e:	4630      	mov	r0, r6
 8012410:	b00c      	add	sp, #48	; 0x30
 8012412:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012416:	bf00      	nop
 8012418:	2001382e 	.word	0x2001382e

0801241c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801241c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801241e:	b085      	sub	sp, #20
 8012420:	ac02      	add	r4, sp, #8
 8012422:	e884 0006 	stmia.w	r4, {r1, r2}
 8012426:	4605      	mov	r5, r0
 8012428:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801242c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012430:	f7ff fde6 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012434:	463a      	mov	r2, r7
 8012436:	4603      	mov	r3, r0
 8012438:	4631      	mov	r1, r6
 801243a:	4628      	mov	r0, r5
 801243c:	f7ff ff08 	bl	8012250 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012440:	4a05      	ldr	r2, [pc, #20]	; (8012458 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012442:	682b      	ldr	r3, [r5, #0]
 8012444:	8812      	ldrh	r2, [r2, #0]
 8012446:	9200      	str	r2, [sp, #0]
 8012448:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801244a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801244e:	4603      	mov	r3, r0
 8012450:	4628      	mov	r0, r5
 8012452:	47b0      	blx	r6
 8012454:	b005      	add	sp, #20
 8012456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012458:	2001382e 	.word	0x2001382e

0801245c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801245c:	b570      	push	{r4, r5, r6, lr}
 801245e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8012462:	4604      	mov	r4, r0
 8012464:	b19b      	cbz	r3, 801248e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012466:	2002      	movs	r0, #2
 8012468:	f7ef fd2c 	bl	8001ec4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801246c:	2300      	movs	r3, #0
 801246e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012472:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012476:	6823      	ldr	r3, [r4, #0]
 8012478:	4620      	mov	r0, r4
 801247a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801247e:	f7ff fdbf 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012482:	462b      	mov	r3, r5
 8012484:	4601      	mov	r1, r0
 8012486:	4620      	mov	r0, r4
 8012488:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801248c:	4718      	bx	r3
 801248e:	bd70      	pop	{r4, r5, r6, pc}

08012490 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012490:	b538      	push	{r3, r4, r5, lr}
 8012492:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012496:	428b      	cmp	r3, r1
 8012498:	4604      	mov	r4, r0
 801249a:	460d      	mov	r5, r1
 801249c:	d006      	beq.n	80124ac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801249e:	6803      	ldr	r3, [r0, #0]
 80124a0:	b929      	cbnz	r1, 80124ae <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80124a2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80124a6:	4798      	blx	r3
 80124a8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80124ac:	bd38      	pop	{r3, r4, r5, pc}
 80124ae:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80124b2:	e7f8      	b.n	80124a6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080124b4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80124b4:	b510      	push	{r4, lr}
 80124b6:	4b0d      	ldr	r3, [pc, #52]	; (80124ec <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80124b8:	781b      	ldrb	r3, [r3, #0]
 80124ba:	4604      	mov	r4, r0
 80124bc:	b95b      	cbnz	r3, 80124d6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124be:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80124c2:	2b02      	cmp	r3, #2
 80124c4:	d007      	beq.n	80124d6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124c6:	6840      	ldr	r0, [r0, #4]
 80124c8:	f000 f92c 	bl	8012724 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80124cc:	b118      	cbz	r0, 80124d6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124ce:	6862      	ldr	r2, [r4, #4]
 80124d0:	7a53      	ldrb	r3, [r2, #9]
 80124d2:	2b00      	cmp	r3, #0
 80124d4:	d0fc      	beq.n	80124d0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80124d6:	f7ef fe2d 	bl	8002134 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80124da:	4620      	mov	r0, r4
 80124dc:	2100      	movs	r1, #0
 80124de:	f7ff ffd7 	bl	8012490 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80124e2:	4620      	mov	r0, r4
 80124e4:	f7ff fd8c 	bl	8012000 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80124e8:	bd10      	pop	{r4, pc}
 80124ea:	bf00      	nop
 80124ec:	20013832 	.word	0x20013832

080124f0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80124f0:	b570      	push	{r4, r5, r6, lr}
 80124f2:	4604      	mov	r4, r0
 80124f4:	6803      	ldr	r3, [r0, #0]
 80124f6:	b919      	cbnz	r1, 8012500 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80124f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124fe:	4718      	bx	r3
 8012500:	2200      	movs	r2, #0
 8012502:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8012506:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801250a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801250c:	4798      	blx	r3
 801250e:	6863      	ldr	r3, [r4, #4]
 8012510:	2101      	movs	r1, #1
 8012512:	4605      	mov	r5, r0
 8012514:	7299      	strb	r1, [r3, #10]
 8012516:	4620      	mov	r0, r4
 8012518:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801251c:	f7ff ffb8 	bl	8012490 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012520:	4628      	mov	r0, r5
 8012522:	bd70      	pop	{r4, r5, r6, pc}

08012524 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012524:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012528:	1a13      	subs	r3, r2, r0
 801252a:	4258      	negs	r0, r3
 801252c:	4158      	adcs	r0, r3
 801252e:	4770      	bx	lr

08012530 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012530:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012534:	1a9b      	subs	r3, r3, r2
 8012536:	2b00      	cmp	r3, #0
 8012538:	bfdc      	itt	le
 801253a:	6882      	ldrle	r2, [r0, #8]
 801253c:	189b      	addle	r3, r3, r2
 801253e:	2b01      	cmp	r3, #1
 8012540:	bfcc      	ite	gt
 8012542:	2000      	movgt	r0, #0
 8012544:	2001      	movle	r0, #1
 8012546:	4770      	bx	lr

08012548 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012548:	6902      	ldr	r2, [r0, #16]
 801254a:	6843      	ldr	r3, [r0, #4]
 801254c:	2024      	movs	r0, #36	; 0x24
 801254e:	fb00 3002 	mla	r0, r0, r2, r3
 8012552:	4770      	bx	lr

08012554 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012554:	6803      	ldr	r3, [r0, #0]
 8012556:	691b      	ldr	r3, [r3, #16]
 8012558:	4718      	bx	r3

0801255a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801255a:	b570      	push	{r4, r5, r6, lr}
 801255c:	2301      	movs	r3, #1
 801255e:	7203      	strb	r3, [r0, #8]
 8012560:	4604      	mov	r4, r0
 8012562:	6840      	ldr	r0, [r0, #4]
 8012564:	6803      	ldr	r3, [r0, #0]
 8012566:	699b      	ldr	r3, [r3, #24]
 8012568:	4798      	blx	r3
 801256a:	6803      	ldr	r3, [r0, #0]
 801256c:	2b40      	cmp	r3, #64	; 0x40
 801256e:	4605      	mov	r5, r0
 8012570:	d00c      	beq.n	801258c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012572:	d810      	bhi.n	8012596 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012574:	2b04      	cmp	r3, #4
 8012576:	d01d      	beq.n	80125b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012578:	d804      	bhi.n	8012584 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801257a:	2b01      	cmp	r3, #1
 801257c:	d006      	beq.n	801258c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801257e:	2b02      	cmp	r3, #2
 8012580:	d02c      	beq.n	80125dc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012582:	bd70      	pop	{r4, r5, r6, pc}
 8012584:	2b08      	cmp	r3, #8
 8012586:	d01d      	beq.n	80125c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012588:	2b20      	cmp	r3, #32
 801258a:	d1fa      	bne.n	8012582 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801258c:	6823      	ldr	r3, [r4, #0]
 801258e:	4620      	mov	r0, r4
 8012590:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012592:	4798      	blx	r3
 8012594:	e013      	b.n	80125be <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012596:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801259a:	d0f7      	beq.n	801258c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801259c:	d804      	bhi.n	80125a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801259e:	2b80      	cmp	r3, #128	; 0x80
 80125a0:	d0f4      	beq.n	801258c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80125a2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80125a6:	e7f0      	b.n	801258a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80125a8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80125ac:	d0ee      	beq.n	801258c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80125ae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80125b2:	e7e5      	b.n	8012580 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80125b4:	6823      	ldr	r3, [r4, #0]
 80125b6:	7f01      	ldrb	r1, [r0, #28]
 80125b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125ba:	4620      	mov	r0, r4
 80125bc:	4798      	blx	r3
 80125be:	6823      	ldr	r3, [r4, #0]
 80125c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80125c2:	e006      	b.n	80125d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80125c4:	6823      	ldr	r3, [r4, #0]
 80125c6:	7f01      	ldrb	r1, [r0, #28]
 80125c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125ca:	4620      	mov	r0, r4
 80125cc:	4798      	blx	r3
 80125ce:	6823      	ldr	r3, [r4, #0]
 80125d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125d2:	4629      	mov	r1, r5
 80125d4:	4620      	mov	r0, r4
 80125d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125da:	4718      	bx	r3
 80125dc:	6823      	ldr	r3, [r4, #0]
 80125de:	4620      	mov	r0, r4
 80125e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80125e2:	4798      	blx	r3
 80125e4:	e7f3      	b.n	80125ce <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080125e6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80125e6:	4770      	bx	lr

080125e8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80125e8:	4770      	bx	lr

080125ea <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80125ea:	4770      	bx	lr

080125ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80125ec:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80125f0:	1ad2      	subs	r2, r2, r3
 80125f2:	2a00      	cmp	r2, #0
 80125f4:	b510      	push	{r4, lr}
 80125f6:	bfdc      	itt	le
 80125f8:	6884      	ldrle	r4, [r0, #8]
 80125fa:	1912      	addle	r2, r2, r4
 80125fc:	2a01      	cmp	r2, #1
 80125fe:	dd16      	ble.n	801262e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8012600:	6842      	ldr	r2, [r0, #4]
 8012602:	2424      	movs	r4, #36	; 0x24
 8012604:	fb04 2303 	mla	r3, r4, r3, r2
 8012608:	f101 0220 	add.w	r2, r1, #32
 801260c:	f851 4b04 	ldr.w	r4, [r1], #4
 8012610:	f843 4b04 	str.w	r4, [r3], #4
 8012614:	4291      	cmp	r1, r2
 8012616:	d1f9      	bne.n	801260c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8012618:	780a      	ldrb	r2, [r1, #0]
 801261a:	701a      	strb	r2, [r3, #0]
 801261c:	68c3      	ldr	r3, [r0, #12]
 801261e:	6882      	ldr	r2, [r0, #8]
 8012620:	f3bf 8f5b 	dmb	ish
 8012624:	3301      	adds	r3, #1
 8012626:	429a      	cmp	r2, r3
 8012628:	bfd8      	it	le
 801262a:	1a9b      	suble	r3, r3, r2
 801262c:	60c3      	str	r3, [r0, #12]
 801262e:	bd10      	pop	{r4, pc}

08012630 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012630:	6903      	ldr	r3, [r0, #16]
 8012632:	6882      	ldr	r2, [r0, #8]
 8012634:	f3bf 8f5b 	dmb	ish
 8012638:	3301      	adds	r3, #1
 801263a:	429a      	cmp	r2, r3
 801263c:	bfd8      	it	le
 801263e:	1a9b      	suble	r3, r3, r2
 8012640:	6103      	str	r3, [r0, #16]
 8012642:	4770      	bx	lr

08012644 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012644:	b570      	push	{r4, r5, r6, lr}
 8012646:	4604      	mov	r4, r0
 8012648:	460e      	mov	r6, r1
 801264a:	6860      	ldr	r0, [r4, #4]
 801264c:	6803      	ldr	r3, [r0, #0]
 801264e:	685b      	ldr	r3, [r3, #4]
 8012650:	4798      	blx	r3
 8012652:	2800      	cmp	r0, #0
 8012654:	d1f9      	bne.n	801264a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012656:	4d0d      	ldr	r5, [pc, #52]	; (801268c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012658:	6828      	ldr	r0, [r5, #0]
 801265a:	6803      	ldr	r3, [r0, #0]
 801265c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801265e:	4798      	blx	r3
 8012660:	f7ef fd76 	bl	8002150 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012664:	6828      	ldr	r0, [r5, #0]
 8012666:	2101      	movs	r1, #1
 8012668:	f7ff ff12 	bl	8012490 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801266c:	6860      	ldr	r0, [r4, #4]
 801266e:	6803      	ldr	r3, [r0, #0]
 8012670:	4631      	mov	r1, r6
 8012672:	689b      	ldr	r3, [r3, #8]
 8012674:	4798      	blx	r3
 8012676:	6823      	ldr	r3, [r4, #0]
 8012678:	4620      	mov	r0, r4
 801267a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801267c:	4798      	blx	r3
 801267e:	6828      	ldr	r0, [r5, #0]
 8012680:	6803      	ldr	r3, [r0, #0]
 8012682:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012686:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012688:	4718      	bx	r3
 801268a:	bf00      	nop
 801268c:	20013834 	.word	0x20013834

08012690 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012690:	b508      	push	{r3, lr}
 8012692:	f7ef fd4f 	bl	8002134 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012696:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801269a:	f7ef bd53 	b.w	8002144 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801269e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801269e:	b510      	push	{r4, lr}
 80126a0:	2114      	movs	r1, #20
 80126a2:	4604      	mov	r4, r0
 80126a4:	f018 fbc9 	bl	802ae3a <_ZdlPvj>
 80126a8:	4620      	mov	r0, r4
 80126aa:	bd10      	pop	{r4, pc}

080126ac <_ZN8touchgfx13DMA_Interface5startEv>:
 80126ac:	b510      	push	{r4, lr}
 80126ae:	4604      	mov	r4, r0
 80126b0:	6840      	ldr	r0, [r0, #4]
 80126b2:	6803      	ldr	r3, [r0, #0]
 80126b4:	681b      	ldr	r3, [r3, #0]
 80126b6:	4798      	blx	r3
 80126b8:	b948      	cbnz	r0, 80126ce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80126ba:	7a63      	ldrb	r3, [r4, #9]
 80126bc:	b13b      	cbz	r3, 80126ce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80126be:	7a23      	ldrb	r3, [r4, #8]
 80126c0:	b92b      	cbnz	r3, 80126ce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80126c2:	6823      	ldr	r3, [r4, #0]
 80126c4:	4620      	mov	r0, r4
 80126c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126cc:	4718      	bx	r3
 80126ce:	bd10      	pop	{r4, pc}

080126d0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80126d0:	b570      	push	{r4, r5, r6, lr}
 80126d2:	4604      	mov	r4, r0
 80126d4:	6840      	ldr	r0, [r0, #4]
 80126d6:	6803      	ldr	r3, [r0, #0]
 80126d8:	681b      	ldr	r3, [r3, #0]
 80126da:	4798      	blx	r3
 80126dc:	4605      	mov	r5, r0
 80126de:	b930      	cbnz	r0, 80126ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80126e0:	7a23      	ldrb	r3, [r4, #8]
 80126e2:	b123      	cbz	r3, 80126ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80126e4:	6860      	ldr	r0, [r4, #4]
 80126e6:	6803      	ldr	r3, [r0, #0]
 80126e8:	695b      	ldr	r3, [r3, #20]
 80126ea:	4798      	blx	r3
 80126ec:	7225      	strb	r5, [r4, #8]
 80126ee:	6860      	ldr	r0, [r4, #4]
 80126f0:	6803      	ldr	r3, [r0, #0]
 80126f2:	681b      	ldr	r3, [r3, #0]
 80126f4:	4798      	blx	r3
 80126f6:	b928      	cbnz	r0, 8012704 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80126f8:	6823      	ldr	r3, [r4, #0]
 80126fa:	4620      	mov	r0, r4
 80126fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012702:	4718      	bx	r3
 8012704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012708:	f7ef bd2a 	b.w	8002160 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801270c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801270c:	b510      	push	{r4, lr}
 801270e:	4c04      	ldr	r4, [pc, #16]	; (8012720 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8012710:	6082      	str	r2, [r0, #8]
 8012712:	2200      	movs	r2, #0
 8012714:	e9c0 4100 	strd	r4, r1, [r0]
 8012718:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801271c:	bd10      	pop	{r4, pc}
 801271e:	bf00      	nop
 8012720:	0802f854 	.word	0x0802f854

08012724 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012724:	6840      	ldr	r0, [r0, #4]
 8012726:	6803      	ldr	r3, [r0, #0]
 8012728:	681b      	ldr	r3, [r3, #0]
 801272a:	4718      	bx	r3

0801272c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801272c:	4b06      	ldr	r3, [pc, #24]	; (8012748 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801272e:	60c1      	str	r1, [r0, #12]
 8012730:	094a      	lsrs	r2, r1, #5
 8012732:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012736:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801273a:	4313      	orrs	r3, r2
 801273c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012740:	4319      	orrs	r1, r3
 8012742:	8201      	strh	r1, [r0, #16]
 8012744:	4770      	bx	lr
 8012746:	bf00      	nop
 8012748:	fffff800 	.word	0xfffff800

0801274c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801274c:	f1a0 0008 	sub.w	r0, r0, #8
 8012750:	e7ec      	b.n	801272c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012752:	bf00      	nop

08012754 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012754:	b508      	push	{r3, lr}
 8012756:	4b05      	ldr	r3, [pc, #20]	; (801276c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012758:	6818      	ldr	r0, [r3, #0]
 801275a:	6803      	ldr	r3, [r0, #0]
 801275c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012760:	4798      	blx	r3
 8012762:	1e43      	subs	r3, r0, #1
 8012764:	4258      	negs	r0, r3
 8012766:	4158      	adcs	r0, r3
 8012768:	bd08      	pop	{r3, pc}
 801276a:	bf00      	nop
 801276c:	20013834 	.word	0x20013834

08012770 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012770:	4770      	bx	lr

08012772 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012772:	3808      	subs	r0, #8
 8012774:	4770      	bx	lr

08012776 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012776:	b430      	push	{r4, r5}
 8012778:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801277c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012780:	8a02      	ldrh	r2, [r0, #16]
 8012782:	9202      	str	r2, [sp, #8]
 8012784:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012788:	68c2      	ldr	r2, [r0, #12]
 801278a:	4629      	mov	r1, r5
 801278c:	4620      	mov	r0, r4
 801278e:	bc30      	pop	{r4, r5}
 8012790:	f7ef bfaa 	b.w	80026e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012794 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012794:	f7ef bfa6 	b.w	80026e4 <_ZN8touchgfx5paint8tearDownEv>

08012798 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012798:	b510      	push	{r4, lr}
 801279a:	2114      	movs	r1, #20
 801279c:	4604      	mov	r4, r0
 801279e:	f018 fb4c 	bl	802ae3a <_ZdlPvj>
 80127a2:	4620      	mov	r0, r4
 80127a4:	bd10      	pop	{r4, pc}

080127a6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80127a6:	f1a0 0008 	sub.w	r0, r0, #8
 80127aa:	e7f5      	b.n	8012798 <_ZN8touchgfx13PainterRGB565D0Ev>

080127ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80127ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80127ae:	6803      	ldr	r3, [r0, #0]
 80127b0:	460d      	mov	r5, r1
 80127b2:	4604      	mov	r4, r0
 80127b4:	4601      	mov	r1, r0
 80127b6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80127b8:	a802      	add	r0, sp, #8
 80127ba:	4798      	blx	r3
 80127bc:	6828      	ldr	r0, [r5, #0]
 80127be:	6869      	ldr	r1, [r5, #4]
 80127c0:	466b      	mov	r3, sp
 80127c2:	c303      	stmia	r3!, {r0, r1}
 80127c4:	4668      	mov	r0, sp
 80127c6:	4619      	mov	r1, r3
 80127c8:	f7fe fb30 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 80127cc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80127ce:	b188      	cbz	r0, 80127f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127d0:	6803      	ldr	r3, [r0, #0]
 80127d2:	1d21      	adds	r1, r4, #4
 80127d4:	68db      	ldr	r3, [r3, #12]
 80127d6:	4798      	blx	r3
 80127d8:	b160      	cbz	r0, 80127f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127da:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80127de:	2b00      	cmp	r3, #0
 80127e0:	dd08      	ble.n	80127f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127e2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80127e6:	2d00      	cmp	r5, #0
 80127e8:	dd04      	ble.n	80127f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127ea:	4a2b      	ldr	r2, [pc, #172]	; (8012898 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80127ec:	7812      	ldrb	r2, [r2, #0]
 80127ee:	b11a      	cbz	r2, 80127f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80127f0:	2a01      	cmp	r2, #1
 80127f2:	d029      	beq.n	8012848 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80127f4:	b004      	add	sp, #16
 80127f6:	bd70      	pop	{r4, r5, r6, pc}
 80127f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80127fc:	441d      	add	r5, r3
 80127fe:	b2ad      	uxth	r5, r5
 8012800:	b22e      	sxth	r6, r5
 8012802:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8012806:	42b3      	cmp	r3, r6
 8012808:	daf4      	bge.n	80127f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801280a:	6823      	ldr	r3, [r4, #0]
 801280c:	4669      	mov	r1, sp
 801280e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012810:	4620      	mov	r0, r4
 8012812:	4798      	blx	r3
 8012814:	b940      	cbnz	r0, 8012828 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8012816:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801281a:	2b01      	cmp	r3, #1
 801281c:	d004      	beq.n	8012828 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801281e:	3301      	adds	r3, #1
 8012820:	105b      	asrs	r3, r3, #1
 8012822:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012826:	e7f0      	b.n	801280a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012828:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801282c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012830:	4413      	add	r3, r2
 8012832:	b29b      	uxth	r3, r3
 8012834:	441a      	add	r2, r3
 8012836:	b212      	sxth	r2, r2
 8012838:	4296      	cmp	r6, r2
 801283a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801283e:	dae0      	bge.n	8012802 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012840:	1aeb      	subs	r3, r5, r3
 8012842:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012846:	e7dc      	b.n	8012802 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012848:	f8bd 5000 	ldrh.w	r5, [sp]
 801284c:	441d      	add	r5, r3
 801284e:	b2ad      	uxth	r5, r5
 8012850:	b22e      	sxth	r6, r5
 8012852:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012856:	42b3      	cmp	r3, r6
 8012858:	dacc      	bge.n	80127f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801285a:	6823      	ldr	r3, [r4, #0]
 801285c:	4669      	mov	r1, sp
 801285e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012860:	4620      	mov	r0, r4
 8012862:	4798      	blx	r3
 8012864:	b940      	cbnz	r0, 8012878 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012866:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801286a:	2b01      	cmp	r3, #1
 801286c:	d004      	beq.n	8012878 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801286e:	3301      	adds	r3, #1
 8012870:	105b      	asrs	r3, r3, #1
 8012872:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012876:	e7f0      	b.n	801285a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012878:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801287c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012880:	4413      	add	r3, r2
 8012882:	b29b      	uxth	r3, r3
 8012884:	441a      	add	r2, r3
 8012886:	b212      	sxth	r2, r2
 8012888:	4296      	cmp	r6, r2
 801288a:	f8ad 3000 	strh.w	r3, [sp]
 801288e:	dae0      	bge.n	8012852 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012890:	1aeb      	subs	r3, r5, r3
 8012892:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012896:	e7dc      	b.n	8012852 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012898:	2001382c 	.word	0x2001382c

0801289c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801289c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801289e:	6803      	ldr	r3, [r0, #0]
 80128a0:	4604      	mov	r4, r0
 80128a2:	4601      	mov	r1, r0
 80128a4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80128a6:	4668      	mov	r0, sp
 80128a8:	4798      	blx	r3
 80128aa:	2100      	movs	r1, #0
 80128ac:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80128b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80128b4:	9102      	str	r1, [sp, #8]
 80128b6:	4668      	mov	r0, sp
 80128b8:	a902      	add	r1, sp, #8
 80128ba:	f8ad 200c 	strh.w	r2, [sp, #12]
 80128be:	f8ad 300e 	strh.w	r3, [sp, #14]
 80128c2:	f7fe fab3 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 80128c6:	6823      	ldr	r3, [r4, #0]
 80128c8:	4669      	mov	r1, sp
 80128ca:	691b      	ldr	r3, [r3, #16]
 80128cc:	4620      	mov	r0, r4
 80128ce:	4798      	blx	r3
 80128d0:	b004      	add	sp, #16
 80128d2:	bd10      	pop	{r4, pc}

080128d4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80128d4:	2101      	movs	r1, #1
 80128d6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80128da:	490b      	ldr	r1, [pc, #44]	; (8012908 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80128dc:	6001      	str	r1, [r0, #0]
 80128de:	2200      	movs	r2, #0
 80128e0:	21ff      	movs	r1, #255	; 0xff
 80128e2:	8082      	strh	r2, [r0, #4]
 80128e4:	80c2      	strh	r2, [r0, #6]
 80128e6:	8102      	strh	r2, [r0, #8]
 80128e8:	8142      	strh	r2, [r0, #10]
 80128ea:	8182      	strh	r2, [r0, #12]
 80128ec:	81c2      	strh	r2, [r0, #14]
 80128ee:	8202      	strh	r2, [r0, #16]
 80128f0:	8242      	strh	r2, [r0, #18]
 80128f2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80128f6:	61c2      	str	r2, [r0, #28]
 80128f8:	8402      	strh	r2, [r0, #32]
 80128fa:	8442      	strh	r2, [r0, #34]	; 0x22
 80128fc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012900:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8012904:	6282      	str	r2, [r0, #40]	; 0x28
 8012906:	4770      	bx	lr
 8012908:	0802f8b0 	.word	0x0802f8b0

0801290c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801290c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8012910:	4602      	mov	r2, r0
 8012912:	cb03      	ldmia	r3!, {r0, r1}
 8012914:	6010      	str	r0, [r2, #0]
 8012916:	6051      	str	r1, [r2, #4]
 8012918:	4610      	mov	r0, r2
 801291a:	4770      	bx	lr

0801291c <_ZN8touchgfx4LineD1Ev>:
 801291c:	4770      	bx	lr

0801291e <_ZN8touchgfx4LineD0Ev>:
 801291e:	b510      	push	{r4, lr}
 8012920:	2170      	movs	r1, #112	; 0x70
 8012922:	4604      	mov	r4, r0
 8012924:	f018 fa89 	bl	802ae3a <_ZdlPvj>
 8012928:	4620      	mov	r0, r4
 801292a:	bd10      	pop	{r4, pc}

0801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801292c:	b507      	push	{r0, r1, r2, lr}
 801292e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012932:	ab01      	add	r3, sp, #4
 8012934:	6809      	ldr	r1, [r1, #0]
 8012936:	6800      	ldr	r0, [r0, #0]
 8012938:	f005 fc80 	bl	801823c <_ZN8touchgfx6muldivElllRl>
 801293c:	b003      	add	sp, #12
 801293e:	f85d fb04 	ldr.w	pc, [sp], #4

08012942 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012942:	6800      	ldr	r0, [r0, #0]
 8012944:	2800      	cmp	r0, #0
 8012946:	bfb9      	ittee	lt
 8012948:	2320      	movlt	r3, #32
 801294a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801294e:	301f      	addge	r0, #31
 8012950:	1140      	asrge	r0, r0, #5
 8012952:	4770      	bx	lr

08012954 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012958:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801295c:	b089      	sub	sp, #36	; 0x24
 801295e:	4604      	mov	r4, r0
 8012960:	b353      	cbz	r3, 80129b8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012962:	6803      	ldr	r3, [r0, #0]
 8012964:	4601      	mov	r1, r0
 8012966:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012968:	a802      	add	r0, sp, #8
 801296a:	4798      	blx	r3
 801296c:	2220      	movs	r2, #32
 801296e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012972:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012974:	fb9a f0f2 	sdiv	r0, sl, r2
 8012978:	fb91 f5f2 	sdiv	r5, r1, r2
 801297c:	1b40      	subs	r0, r0, r5
 801297e:	2800      	cmp	r0, #0
 8012980:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012982:	fb93 f6f2 	sdiv	r6, r3, r2
 8012986:	bfb8      	it	lt
 8012988:	4240      	neglt	r0, r0
 801298a:	0076      	lsls	r6, r6, #1
 801298c:	4286      	cmp	r6, r0
 801298e:	f8d4 b000 	ldr.w	fp, [r4]
 8012992:	dc0c      	bgt.n	80129ae <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012994:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012996:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801299a:	fb95 f0f2 	sdiv	r0, r5, r2
 801299e:	fb98 f7f2 	sdiv	r7, r8, r2
 80129a2:	1bc0      	subs	r0, r0, r7
 80129a4:	2800      	cmp	r0, #0
 80129a6:	bfb8      	it	lt
 80129a8:	4240      	neglt	r0, r0
 80129aa:	4286      	cmp	r6, r0
 80129ac:	dd07      	ble.n	80129be <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80129ae:	f8db 3010 	ldr.w	r3, [fp, #16]
 80129b2:	a902      	add	r1, sp, #8
 80129b4:	4620      	mov	r0, r4
 80129b6:	4798      	blx	r3
 80129b8:	b009      	add	sp, #36	; 0x24
 80129ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129be:	3301      	adds	r3, #1
 80129c0:	2002      	movs	r0, #2
 80129c2:	f10d 0920 	add.w	r9, sp, #32
 80129c6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80129ca:	4103      	asrs	r3, r0
 80129cc:	f849 3d08 	str.w	r3, [r9, #-8]!
 80129d0:	eb01 060a 	add.w	r6, r1, sl
 80129d4:	eb08 0705 	add.w	r7, r8, r5
 80129d8:	fb96 f6f0 	sdiv	r6, r6, r0
 80129dc:	fb97 f7f0 	sdiv	r7, r7, r0
 80129e0:	4648      	mov	r0, r9
 80129e2:	9101      	str	r1, [sp, #4]
 80129e4:	b236      	sxth	r6, r6
 80129e6:	b23f      	sxth	r7, r7
 80129e8:	fb96 f6f2 	sdiv	r6, r6, r2
 80129ec:	fb97 f7f2 	sdiv	r7, r7, r2
 80129f0:	f7ff ffa7 	bl	8012942 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80129f4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80129f8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80129fc:	9901      	ldr	r1, [sp, #4]
 80129fe:	4293      	cmp	r3, r2
 8012a00:	fa1f fe87 	uxth.w	lr, r7
 8012a04:	fa1f fc86 	uxth.w	ip, r6
 8012a08:	eba1 0a0a 	sub.w	sl, r1, sl
 8012a0c:	b280      	uxth	r0, r0
 8012a0e:	da54      	bge.n	8012aba <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8012a10:	ebac 0100 	sub.w	r1, ip, r0
 8012a14:	b289      	uxth	r1, r1
 8012a16:	4460      	add	r0, ip
 8012a18:	f1ba 0f00 	cmp.w	sl, #0
 8012a1c:	b20e      	sxth	r6, r1
 8012a1e:	b280      	uxth	r0, r0
 8012a20:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012a24:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012a28:	da29      	bge.n	8012a7e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8012a2a:	eba8 0505 	sub.w	r5, r8, r5
 8012a2e:	2d00      	cmp	r5, #0
 8012a30:	da2a      	bge.n	8012a88 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012a32:	fa1f f88a 	uxth.w	r8, sl
 8012a36:	eba0 0008 	sub.w	r0, r0, r8
 8012a3a:	fa1f f58c 	uxth.w	r5, ip
 8012a3e:	4443      	add	r3, r8
 8012a40:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012a44:	1a59      	subs	r1, r3, r1
 8012a46:	ebae 0005 	sub.w	r0, lr, r5
 8012a4a:	f8ad a010 	strh.w	sl, [sp, #16]
 8012a4e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012a52:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012a56:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012a5a:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012a5e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012a62:	442a      	add	r2, r5
 8012a64:	eba2 0e0e 	sub.w	lr, r2, lr
 8012a68:	f8ad e01e 	strh.w	lr, [sp, #30]
 8012a6c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012a70:	a904      	add	r1, sp, #16
 8012a72:	4620      	mov	r0, r4
 8012a74:	4798      	blx	r3
 8012a76:	6823      	ldr	r3, [r4, #0]
 8012a78:	4649      	mov	r1, r9
 8012a7a:	691b      	ldr	r3, [r3, #16]
 8012a7c:	e79a      	b.n	80129b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8012a7e:	d003      	beq.n	8012a88 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012a80:	eba8 0505 	sub.w	r5, r8, r5
 8012a84:	2d00      	cmp	r5, #0
 8012a86:	dcd4      	bgt.n	8012a32 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012a88:	fa1f f88a 	uxth.w	r8, sl
 8012a8c:	4443      	add	r3, r8
 8012a8e:	fa1f f58c 	uxth.w	r5, ip
 8012a92:	1a59      	subs	r1, r3, r1
 8012a94:	eba0 0008 	sub.w	r0, r0, r8
 8012a98:	ebae 0305 	sub.w	r3, lr, r5
 8012a9c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012aa0:	f8ad c012 	strh.w	ip, [sp, #18]
 8012aa4:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012aa8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012aac:	f8ad a018 	strh.w	sl, [sp, #24]
 8012ab0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012ab4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012ab8:	e7d3      	b.n	8012a62 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8012aba:	ebae 0100 	sub.w	r1, lr, r0
 8012abe:	b289      	uxth	r1, r1
 8012ac0:	4470      	add	r0, lr
 8012ac2:	f1ba 0f00 	cmp.w	sl, #0
 8012ac6:	b20f      	sxth	r7, r1
 8012ac8:	b280      	uxth	r0, r0
 8012aca:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8012ace:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012ad2:	da20      	bge.n	8012b16 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8012ad4:	eba8 0505 	sub.w	r5, r8, r5
 8012ad8:	2d00      	cmp	r5, #0
 8012ada:	da21      	bge.n	8012b20 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012adc:	fa1f f88e 	uxth.w	r8, lr
 8012ae0:	fa1f f58a 	uxth.w	r5, sl
 8012ae4:	4443      	add	r3, r8
 8012ae6:	442a      	add	r2, r5
 8012ae8:	f8ad e010 	strh.w	lr, [sp, #16]
 8012aec:	1b40      	subs	r0, r0, r5
 8012aee:	ebac 0e08 	sub.w	lr, ip, r8
 8012af2:	1a51      	subs	r1, r2, r1
 8012af4:	eba3 0c0c 	sub.w	ip, r3, ip
 8012af8:	f8ad a012 	strh.w	sl, [sp, #18]
 8012afc:	f8ad e014 	strh.w	lr, [sp, #20]
 8012b00:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012b04:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012b08:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012b0c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012b10:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012b14:	e7aa      	b.n	8012a6c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012b16:	d003      	beq.n	8012b20 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012b18:	eba8 0505 	sub.w	r5, r8, r5
 8012b1c:	2d00      	cmp	r5, #0
 8012b1e:	dcdd      	bgt.n	8012adc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012b20:	fa1f f58e 	uxth.w	r5, lr
 8012b24:	fa1f f88a 	uxth.w	r8, sl
 8012b28:	4442      	add	r2, r8
 8012b2a:	442b      	add	r3, r5
 8012b2c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012b30:	1a51      	subs	r1, r2, r1
 8012b32:	ebac 0705 	sub.w	r7, ip, r5
 8012b36:	eba0 0008 	sub.w	r0, r0, r8
 8012b3a:	eba3 0c0c 	sub.w	ip, r3, ip
 8012b3e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012b42:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012b46:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012b4a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012b4e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012b52:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012b56:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012b5a:	e787      	b.n	8012a6c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08012b5c <_ZN8touchgfx7CWRUtil4sineEi>:
 8012b5c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012b60:	fb90 f2f3 	sdiv	r2, r0, r3
 8012b64:	fb02 0013 	mls	r0, r2, r3, r0
 8012b68:	2800      	cmp	r0, #0
 8012b6a:	bfb8      	it	lt
 8012b6c:	18c0      	addlt	r0, r0, r3
 8012b6e:	285a      	cmp	r0, #90	; 0x5a
 8012b70:	4b09      	ldr	r3, [pc, #36]	; (8012b98 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012b72:	dc02      	bgt.n	8012b7a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012b74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b78:	4770      	bx	lr
 8012b7a:	28b4      	cmp	r0, #180	; 0xb4
 8012b7c:	dc02      	bgt.n	8012b84 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8012b7e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012b82:	e7f7      	b.n	8012b74 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012b84:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012b88:	bfd4      	ite	le
 8012b8a:	38b4      	suble	r0, #180	; 0xb4
 8012b8c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012b90:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b94:	4240      	negs	r0, r0
 8012b96:	4770      	bx	lr
 8012b98:	0802f97c 	.word	0x0802f97c

08012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8012b9c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012ba0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012ba2:	fb90 f2f3 	sdiv	r2, r0, r3
 8012ba6:	fb02 0013 	mls	r0, r2, r3, r0
 8012baa:	2800      	cmp	r0, #0
 8012bac:	bfb8      	it	lt
 8012bae:	18c0      	addlt	r0, r0, r3
 8012bb0:	1144      	asrs	r4, r0, #5
 8012bb2:	f000 061f 	and.w	r6, r0, #31
 8012bb6:	4620      	mov	r0, r4
 8012bb8:	f7ff ffd0 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 8012bbc:	4605      	mov	r5, r0
 8012bbe:	b90e      	cbnz	r6, 8012bc4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012bc0:	b002      	add	sp, #8
 8012bc2:	bd70      	pop	{r4, r5, r6, pc}
 8012bc4:	1c60      	adds	r0, r4, #1
 8012bc6:	f7ff ffc9 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 8012bca:	ab01      	add	r3, sp, #4
 8012bcc:	2220      	movs	r2, #32
 8012bce:	4631      	mov	r1, r6
 8012bd0:	1b40      	subs	r0, r0, r5
 8012bd2:	f005 fb33 	bl	801823c <_ZN8touchgfx6muldivElllRl>
 8012bd6:	4428      	add	r0, r5
 8012bd8:	e7f2      	b.n	8012bc0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08012bda <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8012bda:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8012bde:	bf2c      	ite	cs
 8012be0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8012be4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012be8:	2300      	movs	r3, #0
 8012bea:	1899      	adds	r1, r3, r2
 8012bec:	4288      	cmp	r0, r1
 8012bee:	bf24      	itt	cs
 8012bf0:	1853      	addcs	r3, r2, r1
 8012bf2:	1a40      	subcs	r0, r0, r1
 8012bf4:	0892      	lsrs	r2, r2, #2
 8012bf6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8012bfa:	d1f6      	bne.n	8012bea <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8012bfc:	4618      	mov	r0, r3
 8012bfe:	4770      	bx	lr

08012c00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012c00:	b510      	push	{r4, lr}
 8012c02:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012c06:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8012c0a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8012c0e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012c12:	13a4      	asrs	r4, r4, #14
 8012c14:	139b      	asrs	r3, r3, #14
 8012c16:	429c      	cmp	r4, r3
 8012c18:	bfb8      	it	lt
 8012c1a:	461c      	movlt	r4, r3
 8012c1c:	2c01      	cmp	r4, #1
 8012c1e:	dd07      	ble.n	8012c30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012c20:	fb91 f1f4 	sdiv	r1, r1, r4
 8012c24:	fb90 f0f4 	sdiv	r0, r0, r4
 8012c28:	f7ff ffea 	bl	8012c00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012c2c:	4360      	muls	r0, r4
 8012c2e:	bd10      	pop	{r4, pc}
 8012c30:	4340      	muls	r0, r0
 8012c32:	fb01 0001 	mla	r0, r1, r1, r0
 8012c36:	f7ff ffd0 	bl	8012bda <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012c3a:	e7f8      	b.n	8012c2e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012c3c:	2800      	cmp	r0, #0
 8012c3e:	b508      	push	{r3, lr}
 8012c40:	da05      	bge.n	8012c4e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012c42:	4240      	negs	r0, r0
 8012c44:	f7ff fffa 	bl	8012c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c48:	4240      	negs	r0, r0
 8012c4a:	b240      	sxtb	r0, r0
 8012c4c:	bd08      	pop	{r3, pc}
 8012c4e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012c52:	dc11      	bgt.n	8012c78 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012c54:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012c58:	dd09      	ble.n	8012c6e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012c5a:	4340      	muls	r0, r0
 8012c5c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012c60:	f7ff ffbb 	bl	8012bda <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012c64:	f7ff ffea 	bl	8012c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c68:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012c6c:	e7ed      	b.n	8012c4a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012c6e:	3003      	adds	r0, #3
 8012c70:	10c0      	asrs	r0, r0, #3
 8012c72:	4b02      	ldr	r3, [pc, #8]	; (8012c7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012c74:	5618      	ldrsb	r0, [r3, r0]
 8012c76:	e7e9      	b.n	8012c4c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012c78:	2000      	movs	r0, #0
 8012c7a:	e7e7      	b.n	8012c4c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012c7c:	0802f920 	.word	0x0802f920

08012c80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012c80:	4281      	cmp	r1, r0
 8012c82:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c84:	460c      	mov	r4, r1
 8012c86:	4615      	mov	r5, r2
 8012c88:	dd07      	ble.n	8012c9a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8012c8a:	4601      	mov	r1, r0
 8012c8c:	4620      	mov	r0, r4
 8012c8e:	f7ff fff7 	bl	8012c80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012c92:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012c96:	b003      	add	sp, #12
 8012c98:	bd30      	pop	{r4, r5, pc}
 8012c9a:	f7ff ffb1 	bl	8012c00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012c9e:	6028      	str	r0, [r5, #0]
 8012ca0:	2800      	cmp	r0, #0
 8012ca2:	d0f8      	beq.n	8012c96 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012ca4:	4602      	mov	r2, r0
 8012ca6:	ab01      	add	r3, sp, #4
 8012ca8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012cac:	4620      	mov	r0, r4
 8012cae:	f005 fac5 	bl	801823c <_ZN8touchgfx6muldivElllRl>
 8012cb2:	f7ff ffc3 	bl	8012c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012cb6:	e7ee      	b.n	8012c96 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012cb8 <_ZN8touchgfx4LineC1Ev>:
 8012cb8:	b510      	push	{r4, lr}
 8012cba:	4604      	mov	r4, r0
 8012cbc:	f7ff fe0a 	bl	80128d4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012cc0:	4b0c      	ldr	r3, [pc, #48]	; (8012cf4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012cc2:	6023      	str	r3, [r4, #0]
 8012cc4:	2220      	movs	r2, #32
 8012cc6:	2300      	movs	r3, #0
 8012cc8:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012cca:	2212      	movs	r2, #18
 8012ccc:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012cd0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012cd4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012cd8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012cdc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012ce0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012ce4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012ce8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012cec:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012cee:	60a3      	str	r3, [r4, #8]
 8012cf0:	4620      	mov	r0, r4
 8012cf2:	bd10      	pop	{r4, pc}
 8012cf4:	0802fa3c 	.word	0x0802fa3c

08012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012cf8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012cfc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012cfe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012d00:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012d02:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012d04:	1aff      	subs	r7, r7, r3
 8012d06:	4604      	mov	r4, r0
 8012d08:	eba5 0502 	sub.w	r5, r5, r2
 8012d0c:	d142      	bne.n	8012d94 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012d0e:	b955      	cbnz	r5, 8012d26 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012d10:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012d14:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012d18:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012d1c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012d20:	b002      	add	sp, #8
 8012d22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012d26:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012d2a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012d2e:	4629      	mov	r1, r5
 8012d30:	4642      	mov	r2, r8
 8012d32:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d34:	f005 faa1 	bl	801827a <_ZN8touchgfx6muldivElll>
 8012d38:	2502      	movs	r5, #2
 8012d3a:	4642      	mov	r2, r8
 8012d3c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012d40:	4639      	mov	r1, r7
 8012d42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d44:	f005 fa99 	bl	801827a <_ZN8touchgfx6muldivElll>
 8012d48:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012d4c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012d50:	f1b9 0f00 	cmp.w	r9, #0
 8012d54:	d067      	beq.n	8012e26 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012d56:	f1b9 0f02 	cmp.w	r9, #2
 8012d5a:	d878      	bhi.n	8012e4e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012d5c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012d5e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012d60:	1b93      	subs	r3, r2, r6
 8012d62:	1b5b      	subs	r3, r3, r5
 8012d64:	6463      	str	r3, [r4, #68]	; 0x44
 8012d66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012d68:	18e9      	adds	r1, r5, r3
 8012d6a:	1b89      	subs	r1, r1, r6
 8012d6c:	6561      	str	r1, [r4, #84]	; 0x54
 8012d6e:	1b81      	subs	r1, r0, r6
 8012d70:	4429      	add	r1, r5
 8012d72:	64a1      	str	r1, [r4, #72]	; 0x48
 8012d74:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012d76:	4430      	add	r0, r6
 8012d78:	186f      	adds	r7, r5, r1
 8012d7a:	4432      	add	r2, r6
 8012d7c:	1b49      	subs	r1, r1, r5
 8012d7e:	4437      	add	r7, r6
 8012d80:	4428      	add	r0, r5
 8012d82:	4431      	add	r1, r6
 8012d84:	1b52      	subs	r2, r2, r5
 8012d86:	1b5b      	subs	r3, r3, r5
 8012d88:	65a7      	str	r7, [r4, #88]	; 0x58
 8012d8a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012d8c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012d8e:	6522      	str	r2, [r4, #80]	; 0x50
 8012d90:	1b9b      	subs	r3, r3, r6
 8012d92:	e05b      	b.n	8012e4c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012d94:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012d98:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012d9c:	2d00      	cmp	r5, #0
 8012d9e:	d0c6      	beq.n	8012d2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012da0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012da4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012da8:	fb93 f2f8 	sdiv	r2, r3, r8
 8012dac:	fb08 3312 	mls	r3, r8, r2, r3
 8012db0:	b353      	cbz	r3, 8012e08 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012db2:	fb98 f2f3 	sdiv	r2, r8, r3
 8012db6:	fb03 8812 	mls	r8, r3, r2, r8
 8012dba:	f1b8 0f00 	cmp.w	r8, #0
 8012dbe:	d1f3      	bne.n	8012da8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012dc0:	2b01      	cmp	r3, #1
 8012dc2:	bf1c      	itt	ne
 8012dc4:	fb95 f5f3 	sdivne	r5, r5, r3
 8012dc8:	fb97 f7f3 	sdivne	r7, r7, r3
 8012dcc:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012dd0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012dd4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012dd8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012ddc:	428b      	cmp	r3, r1
 8012dde:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012de2:	4608      	mov	r0, r1
 8012de4:	dd01      	ble.n	8012dea <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012de6:	428a      	cmp	r2, r1
 8012de8:	dc10      	bgt.n	8012e0c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012dea:	fb90 f3f3 	sdiv	r3, r0, r3
 8012dee:	fb90 f2f2 	sdiv	r2, r0, r2
 8012df2:	4293      	cmp	r3, r2
 8012df4:	bfa8      	it	ge
 8012df6:	4613      	movge	r3, r2
 8012df8:	435f      	muls	r7, r3
 8012dfa:	435d      	muls	r5, r3
 8012dfc:	4629      	mov	r1, r5
 8012dfe:	4638      	mov	r0, r7
 8012e00:	f7ff fefe 	bl	8012c00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012e04:	4680      	mov	r8, r0
 8012e06:	e792      	b.n	8012d2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012e08:	4643      	mov	r3, r8
 8012e0a:	e7d9      	b.n	8012dc0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012e0c:	fb93 f3f1 	sdiv	r3, r3, r1
 8012e10:	fb92 f2f1 	sdiv	r2, r2, r1
 8012e14:	4293      	cmp	r3, r2
 8012e16:	bfcc      	ite	gt
 8012e18:	3301      	addgt	r3, #1
 8012e1a:	1c53      	addle	r3, r2, #1
 8012e1c:	fb97 f7f3 	sdiv	r7, r7, r3
 8012e20:	fb95 f5f3 	sdiv	r5, r5, r3
 8012e24:	e7ea      	b.n	8012dfc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012e26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012e28:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012e2a:	1b93      	subs	r3, r2, r6
 8012e2c:	6463      	str	r3, [r4, #68]	; 0x44
 8012e2e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012e30:	18e9      	adds	r1, r5, r3
 8012e32:	6561      	str	r1, [r4, #84]	; 0x54
 8012e34:	1b81      	subs	r1, r0, r6
 8012e36:	64a1      	str	r1, [r4, #72]	; 0x48
 8012e38:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012e3a:	4430      	add	r0, r6
 8012e3c:	186f      	adds	r7, r5, r1
 8012e3e:	4432      	add	r2, r6
 8012e40:	1b49      	subs	r1, r1, r5
 8012e42:	65a7      	str	r7, [r4, #88]	; 0x58
 8012e44:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012e46:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012e48:	6522      	str	r2, [r4, #80]	; 0x50
 8012e4a:	1b5b      	subs	r3, r3, r5
 8012e4c:	6623      	str	r3, [r4, #96]	; 0x60
 8012e4e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012e50:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012e52:	9200      	str	r2, [sp, #0]
 8012e54:	9301      	str	r3, [sp, #4]
 8012e56:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012e5a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012e5e:	680f      	ldr	r7, [r1, #0]
 8012e60:	9800      	ldr	r0, [sp, #0]
 8012e62:	42ba      	cmp	r2, r7
 8012e64:	bfa8      	it	ge
 8012e66:	463a      	movge	r2, r7
 8012e68:	4287      	cmp	r7, r0
 8012e6a:	bfc8      	it	gt
 8012e6c:	9700      	strgt	r7, [sp, #0]
 8012e6e:	690f      	ldr	r7, [r1, #16]
 8012e70:	9801      	ldr	r0, [sp, #4]
 8012e72:	42bb      	cmp	r3, r7
 8012e74:	bfa8      	it	ge
 8012e76:	463b      	movge	r3, r7
 8012e78:	3104      	adds	r1, #4
 8012e7a:	4287      	cmp	r7, r0
 8012e7c:	bfc8      	it	gt
 8012e7e:	9701      	strgt	r7, [sp, #4]
 8012e80:	458c      	cmp	ip, r1
 8012e82:	d1ec      	bne.n	8012e5e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012e84:	4668      	mov	r0, sp
 8012e86:	2720      	movs	r7, #32
 8012e88:	fb92 f8f7 	sdiv	r8, r2, r7
 8012e8c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012e90:	f7ff fd57 	bl	8012942 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012e94:	4682      	mov	sl, r0
 8012e96:	a801      	add	r0, sp, #4
 8012e98:	f7ff fd53 	bl	8012942 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012e9c:	ebaa 0208 	sub.w	r2, sl, r8
 8012ea0:	1bc0      	subs	r0, r0, r7
 8012ea2:	f1b9 0f01 	cmp.w	r9, #1
 8012ea6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012eaa:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012eae:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012eb2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012eb6:	f47f af33 	bne.w	8012d20 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012eba:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012ebc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012ebe:	1b83      	subs	r3, r0, r6
 8012ec0:	6463      	str	r3, [r4, #68]	; 0x44
 8012ec2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012ec4:	18ea      	adds	r2, r5, r3
 8012ec6:	6562      	str	r2, [r4, #84]	; 0x54
 8012ec8:	1b8a      	subs	r2, r1, r6
 8012eca:	64a2      	str	r2, [r4, #72]	; 0x48
 8012ecc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012ece:	4431      	add	r1, r6
 8012ed0:	18af      	adds	r7, r5, r2
 8012ed2:	4406      	add	r6, r0
 8012ed4:	1b52      	subs	r2, r2, r5
 8012ed6:	1b5d      	subs	r5, r3, r5
 8012ed8:	65a7      	str	r7, [r4, #88]	; 0x58
 8012eda:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012edc:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012ede:	6526      	str	r6, [r4, #80]	; 0x50
 8012ee0:	6625      	str	r5, [r4, #96]	; 0x60
 8012ee2:	e71d      	b.n	8012d20 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012ee4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012ee4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ee6:	428b      	cmp	r3, r1
 8012ee8:	d102      	bne.n	8012ef0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012eea:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012eec:	4293      	cmp	r3, r2
 8012eee:	d003      	beq.n	8012ef8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012ef0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012ef4:	f7ff bf00 	b.w	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012ef8:	4770      	bx	lr

08012efa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012efa:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012efc:	428b      	cmp	r3, r1
 8012efe:	d102      	bne.n	8012f06 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012f00:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012f02:	4293      	cmp	r3, r2
 8012f04:	d003      	beq.n	8012f0e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012f06:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012f0a:	f7ff bef5 	b.w	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012f0e:	4770      	bx	lr

08012f10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012f10:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012f14:	f7ff bef0 	b.w	8012cf8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012f18 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f1c:	b0a0      	sub	sp, #128	; 0x80
 8012f1e:	4604      	mov	r4, r0
 8012f20:	460a      	mov	r2, r1
 8012f22:	4601      	mov	r1, r0
 8012f24:	a804      	add	r0, sp, #16
 8012f26:	f015 f845 	bl	8027fb4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012f2a:	2300      	movs	r3, #0
 8012f2c:	9301      	str	r3, [sp, #4]
 8012f2e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012f32:	2b01      	cmp	r3, #1
 8012f34:	d17c      	bne.n	8013030 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012f36:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012f38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012f3a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012f3c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012f3e:	1ac0      	subs	r0, r0, r3
 8012f40:	eba1 0102 	sub.w	r1, r1, r2
 8012f44:	d437      	bmi.n	8012fb6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012f46:	2900      	cmp	r1, #0
 8012f48:	aa01      	add	r2, sp, #4
 8012f4a:	db2e      	blt.n	8012faa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012f4c:	f7ff fe98 	bl	8012c80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012f50:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012f54:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012f56:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012f58:	a804      	add	r0, sp, #16
 8012f5a:	f015 f9ab 	bl	80282b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012f5e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012f60:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012f62:	a804      	add	r0, sp, #16
 8012f64:	f015 f9f3 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012f68:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012f6a:	2db3      	cmp	r5, #179	; 0xb3
 8012f6c:	dc33      	bgt.n	8012fd6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012f6e:	eba6 0805 	sub.w	r8, r6, r5
 8012f72:	4640      	mov	r0, r8
 8012f74:	f7ff fdf2 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 8012f78:	a902      	add	r1, sp, #8
 8012f7a:	9002      	str	r0, [sp, #8]
 8012f7c:	a801      	add	r0, sp, #4
 8012f7e:	f7ff fcd5 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012f84:	1847      	adds	r7, r0, r1
 8012f86:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012f8a:	f7ff fde7 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 8012f8e:	a903      	add	r1, sp, #12
 8012f90:	9003      	str	r0, [sp, #12]
 8012f92:	a801      	add	r0, sp, #4
 8012f94:	f7ff fcca 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012f9a:	4639      	mov	r1, r7
 8012f9c:	1a12      	subs	r2, r2, r0
 8012f9e:	a804      	add	r0, sp, #16
 8012fa0:	f015 f9d5 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fa4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012fa6:	441d      	add	r5, r3
 8012fa8:	e7df      	b.n	8012f6a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012faa:	4249      	negs	r1, r1
 8012fac:	f7ff fe68 	bl	8012c80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fb0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012fb4:	e7ce      	b.n	8012f54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fb6:	2900      	cmp	r1, #0
 8012fb8:	f1c0 0000 	rsb	r0, r0, #0
 8012fbc:	aa01      	add	r2, sp, #4
 8012fbe:	db04      	blt.n	8012fca <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012fc0:	f7ff fe5e 	bl	8012c80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fc4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012fc8:	e7c4      	b.n	8012f54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fca:	4249      	negs	r1, r1
 8012fcc:	f7ff fe58 	bl	8012c80 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fd0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012fd4:	e7be      	b.n	8012f54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fd6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012fd8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012fda:	a804      	add	r0, sp, #16
 8012fdc:	f015 f9b7 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fe0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012fe2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012fe4:	a804      	add	r0, sp, #16
 8012fe6:	f015 f9b2 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fea:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012fec:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012ff0:	2d00      	cmp	r5, #0
 8012ff2:	dd31      	ble.n	8013058 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012ff4:	eb05 0806 	add.w	r8, r5, r6
 8012ff8:	4640      	mov	r0, r8
 8012ffa:	f7ff fdaf 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 8012ffe:	a902      	add	r1, sp, #8
 8013000:	9002      	str	r0, [sp, #8]
 8013002:	a801      	add	r0, sp, #4
 8013004:	f7ff fc92 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013008:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801300a:	1847      	adds	r7, r0, r1
 801300c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013010:	f7ff fda4 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 8013014:	a903      	add	r1, sp, #12
 8013016:	9003      	str	r0, [sp, #12]
 8013018:	a801      	add	r0, sp, #4
 801301a:	f7ff fc87 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801301e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013020:	4639      	mov	r1, r7
 8013022:	1a12      	subs	r2, r2, r0
 8013024:	a804      	add	r0, sp, #16
 8013026:	f015 f992 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801302a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801302c:	1aed      	subs	r5, r5, r3
 801302e:	e7df      	b.n	8012ff0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8013030:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013032:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013034:	a804      	add	r0, sp, #16
 8013036:	f015 f93d 	bl	80282b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801303a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801303c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801303e:	a804      	add	r0, sp, #16
 8013040:	f015 f985 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013044:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013046:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013048:	a804      	add	r0, sp, #16
 801304a:	f015 f980 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801304e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013050:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013052:	a804      	add	r0, sp, #16
 8013054:	f015 f97b 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013058:	21ff      	movs	r1, #255	; 0xff
 801305a:	a804      	add	r0, sp, #16
 801305c:	f015 f866 	bl	802812c <_ZN8touchgfx6Canvas6renderEh>
 8013060:	4b04      	ldr	r3, [pc, #16]	; (8013074 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8013062:	9304      	str	r3, [sp, #16]
 8013064:	4604      	mov	r4, r0
 8013066:	a80c      	add	r0, sp, #48	; 0x30
 8013068:	f001 fa98 	bl	801459c <_ZN8touchgfx7OutlineD1Ev>
 801306c:	4620      	mov	r0, r4
 801306e:	b020      	add	sp, #128	; 0x80
 8013070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013074:	080302e8 	.word	0x080302e8

08013078 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013078:	2000      	movs	r0, #0
 801307a:	4770      	bx	lr

0801307c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801307c:	4b07      	ldr	r3, [pc, #28]	; (801309c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801307e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013080:	881b      	ldrh	r3, [r3, #0]
 8013082:	4293      	cmp	r3, r2
 8013084:	bf81      	itttt	hi
 8013086:	4b06      	ldrhi	r3, [pc, #24]	; (80130a0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013088:	681b      	ldrhi	r3, [r3, #0]
 801308a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801308e:	7858      	ldrbhi	r0, [r3, #1]
 8013090:	bf8c      	ite	hi
 8013092:	f000 0003 	andhi.w	r0, r0, #3
 8013096:	2000      	movls	r0, #0
 8013098:	4770      	bx	lr
 801309a:	bf00      	nop
 801309c:	20013890 	.word	0x20013890
 80130a0:	2001388c 	.word	0x2001388c

080130a4 <_ZN8touchgfx8TextAreaD1Ev>:
 80130a4:	4770      	bx	lr
	...

080130a8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80130a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130ac:	4b10      	ldr	r3, [pc, #64]	; (80130f0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80130ae:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80130b0:	881b      	ldrh	r3, [r3, #0]
 80130b2:	428b      	cmp	r3, r1
 80130b4:	4604      	mov	r4, r0
 80130b6:	d918      	bls.n	80130ea <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80130b8:	6803      	ldr	r3, [r0, #0]
 80130ba:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80130bc:	4b0d      	ldr	r3, [pc, #52]	; (80130f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80130be:	6818      	ldr	r0, [r3, #0]
 80130c0:	f7f5 fcac 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80130c4:	6823      	ldr	r3, [r4, #0]
 80130c6:	4606      	mov	r6, r0
 80130c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80130ca:	4620      	mov	r0, r4
 80130cc:	4798      	blx	r3
 80130ce:	6823      	ldr	r3, [r4, #0]
 80130d0:	4607      	mov	r7, r0
 80130d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130d6:	4620      	mov	r0, r4
 80130d8:	4798      	blx	r3
 80130da:	463a      	mov	r2, r7
 80130dc:	4603      	mov	r3, r0
 80130de:	4631      	mov	r1, r6
 80130e0:	4620      	mov	r0, r4
 80130e2:	46ac      	mov	ip, r5
 80130e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80130e8:	4760      	bx	ip
 80130ea:	2000      	movs	r0, #0
 80130ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130f0:	20013890 	.word	0x20013890
 80130f4:	20013898 	.word	0x20013898

080130f8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80130f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80130fc:	4b17      	ldr	r3, [pc, #92]	; (801315c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80130fe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013100:	881b      	ldrh	r3, [r3, #0]
 8013102:	428b      	cmp	r3, r1
 8013104:	4604      	mov	r4, r0
 8013106:	d926      	bls.n	8013156 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8013108:	4b15      	ldr	r3, [pc, #84]	; (8013160 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801310a:	681b      	ldr	r3, [r3, #0]
 801310c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013110:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013114:	4b13      	ldr	r3, [pc, #76]	; (8013164 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8013116:	7855      	ldrb	r5, [r2, #1]
 8013118:	681b      	ldr	r3, [r3, #0]
 801311a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801311e:	6833      	ldr	r3, [r6, #0]
 8013120:	69df      	ldr	r7, [r3, #28]
 8013122:	4b11      	ldr	r3, [pc, #68]	; (8013168 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013124:	6818      	ldr	r0, [r3, #0]
 8013126:	f7f5 fc79 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 801312a:	6823      	ldr	r3, [r4, #0]
 801312c:	4680      	mov	r8, r0
 801312e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013130:	4620      	mov	r0, r4
 8013132:	4798      	blx	r3
 8013134:	6823      	ldr	r3, [r4, #0]
 8013136:	4681      	mov	r9, r0
 8013138:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801313c:	4620      	mov	r0, r4
 801313e:	4798      	blx	r3
 8013140:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013144:	9000      	str	r0, [sp, #0]
 8013146:	464b      	mov	r3, r9
 8013148:	4642      	mov	r2, r8
 801314a:	4629      	mov	r1, r5
 801314c:	4630      	mov	r0, r6
 801314e:	47b8      	blx	r7
 8013150:	b003      	add	sp, #12
 8013152:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013156:	2000      	movs	r0, #0
 8013158:	e7fa      	b.n	8013150 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801315a:	bf00      	nop
 801315c:	20013890 	.word	0x20013890
 8013160:	2001388c 	.word	0x2001388c
 8013164:	20013894 	.word	0x20013894
 8013168:	20013898 	.word	0x20013898

0801316c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801316c:	b40e      	push	{r1, r2, r3}
 801316e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013172:	4b2f      	ldr	r3, [pc, #188]	; (8013230 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013174:	881a      	ldrh	r2, [r3, #0]
 8013176:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013178:	429a      	cmp	r2, r3
 801317a:	b09d      	sub	sp, #116	; 0x74
 801317c:	4604      	mov	r4, r0
 801317e:	d954      	bls.n	801322a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013180:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8013234 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8013184:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8013238 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8013188:	aa26      	add	r2, sp, #152	; 0x98
 801318a:	9202      	str	r2, [sp, #8]
 801318c:	f8d9 2000 	ldr.w	r2, [r9]
 8013190:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013194:	f8d8 3000 	ldr.w	r3, [r8]
 8013198:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801319c:	682b      	ldr	r3, [r5, #0]
 801319e:	4628      	mov	r0, r5
 80131a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80131a2:	4798      	blx	r3
 80131a4:	b207      	sxth	r7, r0
 80131a6:	4606      	mov	r6, r0
 80131a8:	a803      	add	r0, sp, #12
 80131aa:	f005 fc61 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 80131ae:	682b      	ldr	r3, [r5, #0]
 80131b0:	4628      	mov	r0, r5
 80131b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80131b4:	4798      	blx	r3
 80131b6:	682b      	ldr	r3, [r5, #0]
 80131b8:	4682      	mov	sl, r0
 80131ba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80131bc:	4628      	mov	r0, r5
 80131be:	4798      	blx	r3
 80131c0:	4653      	mov	r3, sl
 80131c2:	9000      	str	r0, [sp, #0]
 80131c4:	9a02      	ldr	r2, [sp, #8]
 80131c6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80131c8:	a803      	add	r0, sp, #12
 80131ca:	f005 fcac 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80131ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80131d0:	f8d9 3000 	ldr.w	r3, [r9]
 80131d4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80131d8:	8925      	ldrh	r5, [r4, #8]
 80131da:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80131de:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80131e2:	eba5 050c 	sub.w	r5, r5, ip
 80131e6:	784a      	ldrb	r2, [r1, #1]
 80131e8:	f8d8 3000 	ldr.w	r3, [r8]
 80131ec:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80131f0:	b22d      	sxth	r5, r5
 80131f2:	9500      	str	r5, [sp, #0]
 80131f4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80131f8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80131fc:	a803      	add	r0, sp, #12
 80131fe:	f003 f8b9 	bl	8016374 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8013202:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8013206:	18b9      	adds	r1, r7, r2
 8013208:	2900      	cmp	r1, #0
 801320a:	b203      	sxth	r3, r0
 801320c:	dd0b      	ble.n	8013226 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801320e:	3b01      	subs	r3, #1
 8013210:	fb13 f302 	smulbb	r3, r3, r2
 8013214:	fb16 3300 	smlabb	r3, r6, r0, r3
 8013218:	b21f      	sxth	r7, r3
 801321a:	4638      	mov	r0, r7
 801321c:	b01d      	add	sp, #116	; 0x74
 801321e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013222:	b003      	add	sp, #12
 8013224:	4770      	bx	lr
 8013226:	2b00      	cmp	r3, #0
 8013228:	dcf7      	bgt.n	801321a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801322a:	2700      	movs	r7, #0
 801322c:	e7f5      	b.n	801321a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801322e:	bf00      	nop
 8013230:	20013890 	.word	0x20013890
 8013234:	2001388c 	.word	0x2001388c
 8013238:	20013894 	.word	0x20013894

0801323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801323c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013240:	4bbc      	ldr	r3, [pc, #752]	; (8013534 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013242:	460c      	mov	r4, r1
 8013244:	881b      	ldrh	r3, [r3, #0]
 8013246:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8013248:	428b      	cmp	r3, r1
 801324a:	b0a9      	sub	sp, #164	; 0xa4
 801324c:	4680      	mov	r8, r0
 801324e:	d809      	bhi.n	8013264 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013250:	2300      	movs	r3, #0
 8013252:	f04f 32ff 	mov.w	r2, #4294967295
 8013256:	e9c0 3200 	strd	r3, r2, [r0]
 801325a:	6083      	str	r3, [r0, #8]
 801325c:	4640      	mov	r0, r8
 801325e:	b029      	add	sp, #164	; 0xa4
 8013260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013264:	4eb4      	ldr	r6, [pc, #720]	; (8013538 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8013266:	6833      	ldr	r3, [r6, #0]
 8013268:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801326c:	4bb3      	ldr	r3, [pc, #716]	; (801353c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801326e:	681b      	ldr	r3, [r3, #0]
 8013270:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013274:	4bb2      	ldr	r3, [pc, #712]	; (8013540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013276:	6818      	ldr	r0, [r3, #0]
 8013278:	f7f5 fbd0 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 801327c:	682b      	ldr	r3, [r5, #0]
 801327e:	4681      	mov	r9, r0
 8013280:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013282:	4628      	mov	r0, r5
 8013284:	4798      	blx	r3
 8013286:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8013288:	b203      	sxth	r3, r0
 801328a:	4407      	add	r7, r0
 801328c:	9304      	str	r3, [sp, #16]
 801328e:	b2bb      	uxth	r3, r7
 8013290:	9303      	str	r3, [sp, #12]
 8013292:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013296:	4682      	mov	sl, r0
 8013298:	a80f      	add	r0, sp, #60	; 0x3c
 801329a:	2b00      	cmp	r3, #0
 801329c:	f040 80a6 	bne.w	80133ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80132a0:	f005 fbe6 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 80132a4:	682b      	ldr	r3, [r5, #0]
 80132a6:	4628      	mov	r0, r5
 80132a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80132aa:	4798      	blx	r3
 80132ac:	682b      	ldr	r3, [r5, #0]
 80132ae:	4606      	mov	r6, r0
 80132b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80132b2:	4628      	mov	r0, r5
 80132b4:	4798      	blx	r3
 80132b6:	6823      	ldr	r3, [r4, #0]
 80132b8:	4607      	mov	r7, r0
 80132ba:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80132bc:	4620      	mov	r0, r4
 80132be:	4798      	blx	r3
 80132c0:	6823      	ldr	r3, [r4, #0]
 80132c2:	4683      	mov	fp, r0
 80132c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80132c8:	4620      	mov	r0, r4
 80132ca:	4798      	blx	r3
 80132cc:	463b      	mov	r3, r7
 80132ce:	e9cd b000 	strd	fp, r0, [sp]
 80132d2:	4649      	mov	r1, r9
 80132d4:	4632      	mov	r2, r6
 80132d6:	a80f      	add	r0, sp, #60	; 0x3c
 80132d8:	f005 fc3a 	bl	8018b50 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80132dc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80132e0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8013538 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80132e4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80132e8:	f04f 0600 	mov.w	r6, #0
 80132ec:	bf0c      	ite	eq
 80132ee:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80132f2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80132f6:	4637      	mov	r7, r6
 80132f8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80132fa:	f8db 3000 	ldr.w	r3, [fp]
 80132fe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013302:	4629      	mov	r1, r5
 8013304:	785b      	ldrb	r3, [r3, #1]
 8013306:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801330a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801330e:	a80f      	add	r0, sp, #60	; 0x3c
 8013310:	f002 fd4b 	bl	8015daa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013314:	9b03      	ldr	r3, [sp, #12]
 8013316:	4286      	cmp	r6, r0
 8013318:	bfb8      	it	lt
 801331a:	4606      	movlt	r6, r0
 801331c:	3701      	adds	r7, #1
 801331e:	eba9 0903 	sub.w	r9, r9, r3
 8013322:	a80f      	add	r0, sp, #60	; 0x3c
 8013324:	b236      	sxth	r6, r6
 8013326:	b2bf      	uxth	r7, r7
 8013328:	fa0f f989 	sxth.w	r9, r9
 801332c:	f005 fbc7 	bl	8018abe <_ZN8touchgfx12TextProvider11endOfStringEv>
 8013330:	b918      	cbnz	r0, 801333a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013332:	7a2b      	ldrb	r3, [r5, #8]
 8013334:	444b      	add	r3, r9
 8013336:	2b00      	cmp	r3, #0
 8013338:	dcde      	bgt.n	80132f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801333a:	9b03      	ldr	r3, [sp, #12]
 801333c:	9a04      	ldr	r2, [sp, #16]
 801333e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8013342:	fb13 f707 	smulbb	r7, r3, r7
 8013346:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013348:	1aff      	subs	r7, r7, r3
 801334a:	b2bf      	uxth	r7, r7
 801334c:	b23b      	sxth	r3, r7
 801334e:	429a      	cmp	r2, r3
 8013350:	bfa8      	it	ge
 8013352:	4657      	movge	r7, sl
 8013354:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013358:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801335c:	6823      	ldr	r3, [r4, #0]
 801335e:	bf08      	it	eq
 8013360:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8013364:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013366:	bf18      	it	ne
 8013368:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801336c:	4620      	mov	r0, r4
 801336e:	4798      	blx	r3
 8013370:	444f      	add	r7, r9
 8013372:	fa1f f987 	uxth.w	r9, r7
 8013376:	2801      	cmp	r0, #1
 8013378:	fa0f f789 	sxth.w	r7, r9
 801337c:	b2b3      	uxth	r3, r6
 801337e:	f000 80e1 	beq.w	8013544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013382:	2802      	cmp	r0, #2
 8013384:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8013388:	f000 80e2 	beq.w	8013550 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801338c:	7aea      	ldrb	r2, [r5, #11]
 801338e:	7b2d      	ldrb	r5, [r5, #12]
 8013390:	b236      	sxth	r6, r6
 8013392:	1ab6      	subs	r6, r6, r2
 8013394:	442a      	add	r2, r5
 8013396:	4413      	add	r3, r2
 8013398:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801339c:	fa1f fa86 	uxth.w	sl, r6
 80133a0:	b29b      	uxth	r3, r3
 80133a2:	2a02      	cmp	r2, #2
 80133a4:	fa0f fb8a 	sxth.w	fp, sl
 80133a8:	b21e      	sxth	r6, r3
 80133aa:	f000 80d5 	beq.w	8013558 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80133ae:	2a03      	cmp	r2, #3
 80133b0:	f000 80dd 	beq.w	801356e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80133b4:	2a01      	cmp	r2, #1
 80133b6:	f040 80e5 	bne.w	8013584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80133ba:	8925      	ldrh	r5, [r4, #8]
 80133bc:	4633      	mov	r3, r6
 80133be:	eba5 0909 	sub.w	r9, r5, r9
 80133c2:	463e      	mov	r6, r7
 80133c4:	465d      	mov	r5, fp
 80133c6:	461f      	mov	r7, r3
 80133c8:	fa0f fb89 	sxth.w	fp, r9
 80133cc:	4b5c      	ldr	r3, [pc, #368]	; (8013540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80133ce:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80133d0:	6818      	ldr	r0, [r3, #0]
 80133d2:	f7f5 fb23 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80133d6:	f8a8 b000 	strh.w	fp, [r8]
 80133da:	f8a8 5002 	strh.w	r5, [r8, #2]
 80133de:	f8a8 6004 	strh.w	r6, [r8, #4]
 80133e2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80133e6:	f8c8 0008 	str.w	r0, [r8, #8]
 80133ea:	e737      	b.n	801325c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80133ec:	f005 fb40 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 80133f0:	682b      	ldr	r3, [r5, #0]
 80133f2:	4628      	mov	r0, r5
 80133f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80133f6:	4798      	blx	r3
 80133f8:	682b      	ldr	r3, [r5, #0]
 80133fa:	4607      	mov	r7, r0
 80133fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80133fe:	4628      	mov	r0, r5
 8013400:	4798      	blx	r3
 8013402:	6823      	ldr	r3, [r4, #0]
 8013404:	4683      	mov	fp, r0
 8013406:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013408:	4620      	mov	r0, r4
 801340a:	4798      	blx	r3
 801340c:	6822      	ldr	r2, [r4, #0]
 801340e:	9005      	str	r0, [sp, #20]
 8013410:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8013414:	4620      	mov	r0, r4
 8013416:	4790      	blx	r2
 8013418:	9b05      	ldr	r3, [sp, #20]
 801341a:	9001      	str	r0, [sp, #4]
 801341c:	463a      	mov	r2, r7
 801341e:	4649      	mov	r1, r9
 8013420:	9300      	str	r3, [sp, #0]
 8013422:	a80f      	add	r0, sp, #60	; 0x3c
 8013424:	465b      	mov	r3, fp
 8013426:	f005 fb93 	bl	8018b50 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801342a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801342e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013432:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013434:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013438:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801343c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013440:	bf0a      	itet	eq
 8013442:	464a      	moveq	r2, r9
 8013444:	461a      	movne	r2, r3
 8013446:	4699      	moveq	r9, r3
 8013448:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801344c:	1ad2      	subs	r2, r2, r3
 801344e:	6833      	ldr	r3, [r6, #0]
 8013450:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8013454:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013458:	af0f      	add	r7, sp, #60	; 0x3c
 801345a:	7859      	ldrb	r1, [r3, #1]
 801345c:	9707      	str	r7, [sp, #28]
 801345e:	2300      	movs	r3, #0
 8013460:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013464:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013468:	f88d 1020 	strb.w	r1, [sp, #32]
 801346c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013470:	9509      	str	r5, [sp, #36]	; 0x24
 8013472:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013476:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801347a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801347e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013482:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013486:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801348a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801348e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013492:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013496:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801349a:	b350      	cbz	r0, 80134f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801349c:	682b      	ldr	r3, [r5, #0]
 801349e:	4628      	mov	r0, r5
 80134a0:	695b      	ldr	r3, [r3, #20]
 80134a2:	4798      	blx	r3
 80134a4:	4607      	mov	r7, r0
 80134a6:	b320      	cbz	r0, 80134f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80134a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80134aa:	6803      	ldr	r3, [r0, #0]
 80134ac:	4639      	mov	r1, r7
 80134ae:	68db      	ldr	r3, [r3, #12]
 80134b0:	4798      	blx	r3
 80134b2:	4606      	mov	r6, r0
 80134b4:	b1e8      	cbz	r0, 80134f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80134b6:	7b43      	ldrb	r3, [r0, #13]
 80134b8:	7a82      	ldrb	r2, [r0, #10]
 80134ba:	005b      	lsls	r3, r3, #1
 80134bc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80134c0:	4313      	orrs	r3, r2
 80134c2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80134c6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80134ca:	2b06      	cmp	r3, #6
 80134cc:	d111      	bne.n	80134f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80134ce:	9809      	ldr	r0, [sp, #36]	; 0x24
 80134d0:	6803      	ldr	r3, [r0, #0]
 80134d2:	4632      	mov	r2, r6
 80134d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80134d6:	4639      	mov	r1, r7
 80134d8:	4798      	blx	r3
 80134da:	7b73      	ldrb	r3, [r6, #13]
 80134dc:	005b      	lsls	r3, r3, #1
 80134de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80134e2:	7ab3      	ldrb	r3, [r6, #10]
 80134e4:	4313      	orrs	r3, r2
 80134e6:	4418      	add	r0, r3
 80134e8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80134ec:	4418      	add	r0, r3
 80134ee:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80134f2:	2600      	movs	r6, #0
 80134f4:	4637      	mov	r7, r6
 80134f6:	a806      	add	r0, sp, #24
 80134f8:	f002 fe38 	bl	801616c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80134fc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8013500:	9b03      	ldr	r3, [sp, #12]
 8013502:	4286      	cmp	r6, r0
 8013504:	eba9 0903 	sub.w	r9, r9, r3
 8013508:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801350c:	bfb8      	it	lt
 801350e:	4606      	movlt	r6, r0
 8013510:	3701      	adds	r7, #1
 8013512:	b236      	sxth	r6, r6
 8013514:	b2bf      	uxth	r7, r7
 8013516:	fa0f f989 	sxth.w	r9, r9
 801351a:	2b00      	cmp	r3, #0
 801351c:	f43f af0d 	beq.w	801333a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013520:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8013524:	2b00      	cmp	r3, #0
 8013526:	f47f af08 	bne.w	801333a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801352a:	7a2b      	ldrb	r3, [r5, #8]
 801352c:	444b      	add	r3, r9
 801352e:	2b00      	cmp	r3, #0
 8013530:	dce1      	bgt.n	80134f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013532:	e702      	b.n	801333a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013534:	20013890 	.word	0x20013890
 8013538:	2001388c 	.word	0x2001388c
 801353c:	20013894 	.word	0x20013894
 8013540:	20013898 	.word	0x20013898
 8013544:	ebaa 0606 	sub.w	r6, sl, r6
 8013548:	2002      	movs	r0, #2
 801354a:	fb96 f6f0 	sdiv	r6, r6, r0
 801354e:	e71d      	b.n	801338c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013550:	441e      	add	r6, r3
 8013552:	ebaa 0606 	sub.w	r6, sl, r6
 8013556:	e719      	b.n	801338c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013558:	8925      	ldrh	r5, [r4, #8]
 801355a:	1aed      	subs	r5, r5, r3
 801355c:	eba5 050a 	sub.w	r5, r5, sl
 8013560:	fa0f fb85 	sxth.w	fp, r5
 8013564:	8965      	ldrh	r5, [r4, #10]
 8013566:	eba5 0509 	sub.w	r5, r5, r9
 801356a:	b22d      	sxth	r5, r5
 801356c:	e72e      	b.n	80133cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801356e:	8965      	ldrh	r5, [r4, #10]
 8013570:	1aed      	subs	r5, r5, r3
 8013572:	eba5 050a 	sub.w	r5, r5, sl
 8013576:	4633      	mov	r3, r6
 8013578:	b22d      	sxth	r5, r5
 801357a:	463e      	mov	r6, r7
 801357c:	f04f 0b00 	mov.w	fp, #0
 8013580:	461f      	mov	r7, r3
 8013582:	e723      	b.n	80133cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013584:	2500      	movs	r5, #0
 8013586:	e721      	b.n	80133cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013588 <_ZN8touchgfx8TextAreaD0Ev>:
 8013588:	b510      	push	{r4, lr}
 801358a:	2148      	movs	r1, #72	; 0x48
 801358c:	4604      	mov	r4, r0
 801358e:	f017 fc54 	bl	802ae3a <_ZdlPvj>
 8013592:	4620      	mov	r0, r4
 8013594:	bd10      	pop	{r4, pc}
	...

08013598 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013598:	b513      	push	{r0, r1, r4, lr}
 801359a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801359e:	4604      	mov	r4, r0
 80135a0:	b1fb      	cbz	r3, 80135e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135a2:	4b16      	ldr	r3, [pc, #88]	; (80135fc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80135a4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80135a6:	881b      	ldrh	r3, [r3, #0]
 80135a8:	428b      	cmp	r3, r1
 80135aa:	d91a      	bls.n	80135e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135ac:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80135b0:	2b00      	cmp	r3, #0
 80135b2:	dd16      	ble.n	80135e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135b4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80135b8:	2b00      	cmp	r3, #0
 80135ba:	dd12      	ble.n	80135e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135bc:	4b10      	ldr	r3, [pc, #64]	; (8013600 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80135be:	6818      	ldr	r0, [r3, #0]
 80135c0:	f7f5 fa2c 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80135c4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80135c8:	6822      	ldr	r2, [r4, #0]
 80135ca:	2b00      	cmp	r3, #0
 80135cc:	db06      	blt.n	80135dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80135ce:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80135d2:	2b00      	cmp	r3, #0
 80135d4:	db02      	blt.n	80135dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80135d6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80135d8:	4298      	cmp	r0, r3
 80135da:	d004      	beq.n	80135e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80135dc:	6953      	ldr	r3, [r2, #20]
 80135de:	4620      	mov	r0, r4
 80135e0:	4798      	blx	r3
 80135e2:	b002      	add	sp, #8
 80135e4:	bd10      	pop	{r4, pc}
 80135e6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80135ea:	c903      	ldmia	r1, {r0, r1}
 80135ec:	466b      	mov	r3, sp
 80135ee:	e883 0003 	stmia.w	r3, {r0, r1}
 80135f2:	6912      	ldr	r2, [r2, #16]
 80135f4:	4619      	mov	r1, r3
 80135f6:	4620      	mov	r0, r4
 80135f8:	4790      	blx	r2
 80135fa:	e7f2      	b.n	80135e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135fc:	20013890 	.word	0x20013890
 8013600:	20013898 	.word	0x20013898

08013604 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8013604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013608:	4b44      	ldr	r3, [pc, #272]	; (801371c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801360a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801360c:	881b      	ldrh	r3, [r3, #0]
 801360e:	4293      	cmp	r3, r2
 8013610:	b08e      	sub	sp, #56	; 0x38
 8013612:	4604      	mov	r4, r0
 8013614:	d97e      	bls.n	8013714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013616:	6808      	ldr	r0, [r1, #0]
 8013618:	4d41      	ldr	r5, [pc, #260]	; (8013720 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801361a:	6849      	ldr	r1, [r1, #4]
 801361c:	ab05      	add	r3, sp, #20
 801361e:	c303      	stmia	r3!, {r0, r1}
 8013620:	4611      	mov	r1, r2
 8013622:	6828      	ldr	r0, [r5, #0]
 8013624:	f7f5 f9fa 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8013628:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801362c:	2b00      	cmp	r3, #0
 801362e:	db11      	blt.n	8013654 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013630:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013634:	2b00      	cmp	r3, #0
 8013636:	db0d      	blt.n	8013654 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013638:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801363a:	4298      	cmp	r0, r3
 801363c:	d10a      	bne.n	8013654 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801363e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013642:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013646:	ab09      	add	r3, sp, #36	; 0x24
 8013648:	e883 0003 	stmia.w	r3, {r0, r1}
 801364c:	4619      	mov	r1, r3
 801364e:	a805      	add	r0, sp, #20
 8013650:	f7fd fbec 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8013654:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013658:	2b00      	cmp	r3, #0
 801365a:	dd5b      	ble.n	8013714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801365c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013660:	2b00      	cmp	r3, #0
 8013662:	dd57      	ble.n	8013714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013664:	4f2f      	ldr	r7, [pc, #188]	; (8013724 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013666:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013668:	683b      	ldr	r3, [r7, #0]
 801366a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801366e:	4b2e      	ldr	r3, [pc, #184]	; (8013728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013670:	681b      	ldr	r3, [r3, #0]
 8013672:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013676:	2e00      	cmp	r6, #0
 8013678:	d04c      	beq.n	8013714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801367a:	6823      	ldr	r3, [r4, #0]
 801367c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013680:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013682:	4620      	mov	r0, r4
 8013684:	4798      	blx	r3
 8013686:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013688:	683b      	ldr	r3, [r7, #0]
 801368a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801368e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013692:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013696:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013698:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801369c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80136a0:	785b      	ldrb	r3, [r3, #1]
 80136a2:	9609      	str	r6, [sp, #36]	; 0x24
 80136a4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80136a8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80136ac:	4b1f      	ldr	r3, [pc, #124]	; (801372c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80136ae:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80136b2:	681b      	ldr	r3, [r3, #0]
 80136b4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80136b8:	910b      	str	r1, [sp, #44]	; 0x2c
 80136ba:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80136be:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80136c2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80136c6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80136ca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80136ce:	b10a      	cbz	r2, 80136d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80136d0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80136d2:	b906      	cbnz	r6, 80136d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80136d4:	689e      	ldr	r6, [r3, #8]
 80136d6:	af07      	add	r7, sp, #28
 80136d8:	4621      	mov	r1, r4
 80136da:	4638      	mov	r0, r7
 80136dc:	f004 fc7c 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80136e0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80136e2:	6828      	ldr	r0, [r5, #0]
 80136e4:	f7f5 f99a 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80136e8:	6823      	ldr	r3, [r4, #0]
 80136ea:	4605      	mov	r5, r0
 80136ec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80136ee:	4620      	mov	r0, r4
 80136f0:	4798      	blx	r3
 80136f2:	6823      	ldr	r3, [r4, #0]
 80136f4:	4680      	mov	r8, r0
 80136f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80136fa:	4620      	mov	r0, r4
 80136fc:	4798      	blx	r3
 80136fe:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013702:	ab09      	add	r3, sp, #36	; 0x24
 8013704:	9300      	str	r3, [sp, #0]
 8013706:	9501      	str	r5, [sp, #4]
 8013708:	ab05      	add	r3, sp, #20
 801370a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801370e:	4630      	mov	r0, r6
 8013710:	f7f5 f936 	bl	8008980 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013714:	b00e      	add	sp, #56	; 0x38
 8013716:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801371a:	bf00      	nop
 801371c:	20013890 	.word	0x20013890
 8013720:	20013898 	.word	0x20013898
 8013724:	2001388c 	.word	0x2001388c
 8013728:	20013894 	.word	0x20013894
 801372c:	20013834 	.word	0x20013834

08013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013730:	b538      	push	{r3, r4, r5, lr}
 8013732:	4b0e      	ldr	r3, [pc, #56]	; (801376c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013734:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013736:	881b      	ldrh	r3, [r3, #0]
 8013738:	429a      	cmp	r2, r3
 801373a:	4604      	mov	r4, r0
 801373c:	d214      	bcs.n	8013768 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801373e:	6803      	ldr	r3, [r0, #0]
 8013740:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013742:	4798      	blx	r3
 8013744:	6823      	ldr	r3, [r4, #0]
 8013746:	4605      	mov	r5, r0
 8013748:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801374a:	4620      	mov	r0, r4
 801374c:	4798      	blx	r3
 801374e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013752:	b22d      	sxth	r5, r5
 8013754:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013758:	4601      	mov	r1, r0
 801375a:	bf06      	itte	eq
 801375c:	4602      	moveq	r2, r0
 801375e:	4629      	moveq	r1, r5
 8013760:	462a      	movne	r2, r5
 8013762:	4620      	mov	r0, r4
 8013764:	f7fd f942 	bl	80109ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013768:	bd38      	pop	{r3, r4, r5, pc}
 801376a:	bf00      	nop
 801376c:	20013890 	.word	0x20013890

08013770 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013770:	b530      	push	{r4, r5, lr}
 8013772:	888b      	ldrh	r3, [r1, #4]
 8013774:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013776:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801377a:	b085      	sub	sp, #20
 801377c:	4604      	mov	r4, r0
 801377e:	b923      	cbnz	r3, 801378a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013780:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013784:	b90b      	cbnz	r3, 801378a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013786:	f7ff ffd3 	bl	8013730 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801378a:	6823      	ldr	r3, [r4, #0]
 801378c:	466d      	mov	r5, sp
 801378e:	4621      	mov	r1, r4
 8013790:	4628      	mov	r0, r5
 8013792:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013796:	4798      	blx	r3
 8013798:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801379c:	343c      	adds	r4, #60	; 0x3c
 801379e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80137a2:	b005      	add	sp, #20
 80137a4:	bd30      	pop	{r4, r5, pc}

080137a6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80137a6:	2300      	movs	r3, #0
 80137a8:	8083      	strh	r3, [r0, #4]
 80137aa:	80c3      	strh	r3, [r0, #6]
 80137ac:	8003      	strh	r3, [r0, #0]
 80137ae:	8043      	strh	r3, [r0, #2]
 80137b0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80137b4:	2bff      	cmp	r3, #255	; 0xff
 80137b6:	bf01      	itttt	eq
 80137b8:	890b      	ldrheq	r3, [r1, #8]
 80137ba:	8083      	strheq	r3, [r0, #4]
 80137bc:	894b      	ldrheq	r3, [r1, #10]
 80137be:	80c3      	strheq	r3, [r0, #6]
 80137c0:	4770      	bx	lr
	...

080137c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80137c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80137c6:	4604      	mov	r4, r0
 80137c8:	6808      	ldr	r0, [r1, #0]
 80137ca:	6849      	ldr	r1, [r1, #4]
 80137cc:	466b      	mov	r3, sp
 80137ce:	c303      	stmia	r3!, {r0, r1}
 80137d0:	6823      	ldr	r3, [r4, #0]
 80137d2:	4669      	mov	r1, sp
 80137d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80137d6:	4620      	mov	r0, r4
 80137d8:	4798      	blx	r3
 80137da:	4b08      	ldr	r3, [pc, #32]	; (80137fc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80137dc:	681b      	ldr	r3, [r3, #0]
 80137de:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80137e2:	b10a      	cbz	r2, 80137e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80137e4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80137e6:	b900      	cbnz	r0, 80137ea <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80137e8:	6898      	ldr	r0, [r3, #8]
 80137ea:	6803      	ldr	r3, [r0, #0]
 80137ec:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80137ee:	6a1d      	ldr	r5, [r3, #32]
 80137f0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80137f4:	4669      	mov	r1, sp
 80137f6:	47a8      	blx	r5
 80137f8:	b003      	add	sp, #12
 80137fa:	bd30      	pop	{r4, r5, pc}
 80137fc:	20013834 	.word	0x20013834

08013800 <_ZN8touchgfx3BoxD1Ev>:
 8013800:	4770      	bx	lr

08013802 <_ZN8touchgfx3BoxD0Ev>:
 8013802:	b510      	push	{r4, lr}
 8013804:	212c      	movs	r1, #44	; 0x2c
 8013806:	4604      	mov	r4, r0
 8013808:	f017 fb17 	bl	802ae3a <_ZdlPvj>
 801380c:	4620      	mov	r0, r4
 801380e:	bd10      	pop	{r4, pc}

08013810 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013810:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8013814:	b12a      	cbz	r2, 8013822 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013816:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801381a:	b112      	cbz	r2, 8013822 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801381c:	6803      	ldr	r3, [r0, #0]
 801381e:	695b      	ldr	r3, [r3, #20]
 8013820:	4718      	bx	r3
 8013822:	4770      	bx	lr

08013824 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8013824:	b570      	push	{r4, r5, r6, lr}
 8013826:	6803      	ldr	r3, [r0, #0]
 8013828:	4604      	mov	r4, r0
 801382a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801382c:	4615      	mov	r5, r2
 801382e:	4798      	blx	r3
 8013830:	6823      	ldr	r3, [r4, #0]
 8013832:	4629      	mov	r1, r5
 8013834:	4620      	mov	r0, r4
 8013836:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013838:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801383c:	4718      	bx	r3

0801383e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801383e:	b570      	push	{r4, r5, r6, lr}
 8013840:	6803      	ldr	r3, [r0, #0]
 8013842:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013844:	4604      	mov	r4, r0
 8013846:	460e      	mov	r6, r1
 8013848:	4615      	mov	r5, r2
 801384a:	4798      	blx	r3
 801384c:	8030      	strh	r0, [r6, #0]
 801384e:	6823      	ldr	r3, [r4, #0]
 8013850:	4620      	mov	r0, r4
 8013852:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013854:	4798      	blx	r3
 8013856:	8028      	strh	r0, [r5, #0]
 8013858:	bd70      	pop	{r4, r5, r6, pc}

0801385a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801385a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801385e:	4770      	bx	lr

08013860 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8013860:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8013864:	4770      	bx	lr

08013866 <_ZN8touchgfx10TiledImageD1Ev>:
 8013866:	4770      	bx	lr

08013868 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8013868:	b510      	push	{r4, lr}
 801386a:	4604      	mov	r4, r0
 801386c:	f000 fd31 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013870:	6823      	ldr	r3, [r4, #0]
 8013872:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013876:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801387a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801387c:	4620      	mov	r0, r4
 801387e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013882:	4718      	bx	r3

08013884 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013884:	b538      	push	{r3, r4, r5, lr}
 8013886:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801388a:	4604      	mov	r4, r0
 801388c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801388e:	4628      	mov	r0, r5
 8013890:	f006 fe6e 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013894:	b188      	cbz	r0, 80138ba <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013896:	4628      	mov	r0, r5
 8013898:	f006 fe6a 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801389c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 80138a0:	fb92 f3f0 	sdiv	r3, r2, r0
 80138a4:	fb03 2010 	mls	r0, r3, r0, r2
 80138a8:	2800      	cmp	r0, #0
 80138aa:	8560      	strh	r0, [r4, #42]	; 0x2a
 80138ac:	da05      	bge.n	80138ba <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80138ae:	4628      	mov	r0, r5
 80138b0:	f006 fe5e 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80138b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80138b6:	4418      	add	r0, r3
 80138b8:	8560      	strh	r0, [r4, #42]	; 0x2a
 80138ba:	bd38      	pop	{r3, r4, r5, pc}

080138bc <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 80138bc:	b538      	push	{r3, r4, r5, lr}
 80138be:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80138c2:	4604      	mov	r4, r0
 80138c4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80138c6:	4628      	mov	r0, r5
 80138c8:	f006 fe86 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138cc:	b188      	cbz	r0, 80138f2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80138ce:	4628      	mov	r0, r5
 80138d0:	f006 fe82 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138d4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80138d8:	fb92 f3f0 	sdiv	r3, r2, r0
 80138dc:	fb03 2010 	mls	r0, r3, r0, r2
 80138e0:	2800      	cmp	r0, #0
 80138e2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80138e4:	da05      	bge.n	80138f2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80138e6:	4628      	mov	r0, r5
 80138e8:	f006 fe76 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138ec:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80138ee:	4418      	add	r0, r3
 80138f0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80138f2:	bd38      	pop	{r3, r4, r5, pc}

080138f4 <_ZN8touchgfx10TiledImageD0Ev>:
 80138f4:	b510      	push	{r4, lr}
 80138f6:	2130      	movs	r1, #48	; 0x30
 80138f8:	4604      	mov	r4, r0
 80138fa:	f017 fa9e 	bl	802ae3a <_ZdlPvj>
 80138fe:	4620      	mov	r0, r4
 8013900:	bd10      	pop	{r4, pc}
	...

08013904 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8013904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013908:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801390c:	b093      	sub	sp, #76	; 0x4c
 801390e:	4607      	mov	r7, r0
 8013910:	4658      	mov	r0, fp
 8013912:	460e      	mov	r6, r1
 8013914:	f006 fe2c 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013918:	4681      	mov	r9, r0
 801391a:	4658      	mov	r0, fp
 801391c:	f006 fe5c 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013920:	4605      	mov	r5, r0
 8013922:	f1b9 0f00 	cmp.w	r9, #0
 8013926:	f000 80c4 	beq.w	8013ab2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801392a:	2800      	cmp	r0, #0
 801392c:	f000 80c1 	beq.w	8013ab2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013930:	2300      	movs	r3, #0
 8013932:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013936:	683b      	ldr	r3, [r7, #0]
 8013938:	a90e      	add	r1, sp, #56	; 0x38
 801393a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801393c:	4638      	mov	r0, r7
 801393e:	4798      	blx	r3
 8013940:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013944:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013948:	88b1      	ldrh	r1, [r6, #4]
 801394a:	fa1f f889 	uxth.w	r8, r9
 801394e:	189c      	adds	r4, r3, r2
 8013950:	440b      	add	r3, r1
 8013952:	fa02 f383 	sxtah	r3, r2, r3
 8013956:	fb94 f4f9 	sdiv	r4, r4, r9
 801395a:	fb14 f408 	smulbb	r4, r4, r8
 801395e:	1aa4      	subs	r4, r4, r2
 8013960:	3b01      	subs	r3, #1
 8013962:	b2aa      	uxth	r2, r5
 8013964:	fb93 f3f9 	sdiv	r3, r3, r9
 8013968:	fb13 f308 	smulbb	r3, r3, r8
 801396c:	b21b      	sxth	r3, r3
 801396e:	9205      	str	r2, [sp, #20]
 8013970:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013974:	9805      	ldr	r0, [sp, #20]
 8013976:	930b      	str	r3, [sp, #44]	; 0x2c
 8013978:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801397c:	185a      	adds	r2, r3, r1
 801397e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013982:	fb12 f200 	smulbb	r2, r2, r0
 8013986:	1a52      	subs	r2, r2, r1
 8013988:	b212      	sxth	r2, r2
 801398a:	920c      	str	r2, [sp, #48]	; 0x30
 801398c:	88f2      	ldrh	r2, [r6, #6]
 801398e:	4413      	add	r3, r2
 8013990:	fa01 f383 	sxtah	r3, r1, r3
 8013994:	3b01      	subs	r3, #1
 8013996:	fb93 f3f5 	sdiv	r3, r3, r5
 801399a:	fb13 f300 	smulbb	r3, r3, r0
 801399e:	b2a4      	uxth	r4, r4
 80139a0:	b21b      	sxth	r3, r3
 80139a2:	930d      	str	r3, [sp, #52]	; 0x34
 80139a4:	eb08 0504 	add.w	r5, r8, r4
 80139a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80139aa:	b223      	sxth	r3, r4
 80139ac:	4293      	cmp	r3, r2
 80139ae:	b2ad      	uxth	r5, r5
 80139b0:	9306      	str	r3, [sp, #24]
 80139b2:	dc7e      	bgt.n	8013ab2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80139b4:	b22b      	sxth	r3, r5
 80139b6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80139ba:	930a      	str	r3, [sp, #40]	; 0x28
 80139bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139be:	4599      	cmp	r9, r3
 80139c0:	dd03      	ble.n	80139ca <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80139c2:	4444      	add	r4, r8
 80139c4:	b2a4      	uxth	r4, r4
 80139c6:	4445      	add	r5, r8
 80139c8:	e7ee      	b.n	80139a8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80139ca:	f9b6 c000 	ldrsh.w	ip, [r6]
 80139ce:	88b2      	ldrh	r2, [r6, #4]
 80139d0:	9806      	ldr	r0, [sp, #24]
 80139d2:	9905      	ldr	r1, [sp, #20]
 80139d4:	4462      	add	r2, ip
 80139d6:	b292      	uxth	r2, r2
 80139d8:	b213      	sxth	r3, r2
 80139da:	9308      	str	r3, [sp, #32]
 80139dc:	fa1f f389 	uxth.w	r3, r9
 80139e0:	4419      	add	r1, r3
 80139e2:	9307      	str	r3, [sp, #28]
 80139e4:	4603      	mov	r3, r0
 80139e6:	9808      	ldr	r0, [sp, #32]
 80139e8:	b289      	uxth	r1, r1
 80139ea:	4283      	cmp	r3, r0
 80139ec:	fa0f fa81 	sxth.w	sl, r1
 80139f0:	da5b      	bge.n	8013aaa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139f2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80139f4:	4584      	cmp	ip, r0
 80139f6:	da58      	bge.n	8013aaa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139f8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80139fc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8013a00:	4486      	add	lr, r0
 8013a02:	fa1f fe8e 	uxth.w	lr, lr
 8013a06:	fa0f f38e 	sxth.w	r3, lr
 8013a0a:	4599      	cmp	r9, r3
 8013a0c:	9309      	str	r3, [sp, #36]	; 0x24
 8013a0e:	da4c      	bge.n	8013aaa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013a10:	4550      	cmp	r0, sl
 8013a12:	da4a      	bge.n	8013aaa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013a14:	9b06      	ldr	r3, [sp, #24]
 8013a16:	459c      	cmp	ip, r3
 8013a18:	bfb8      	it	lt
 8013a1a:	469c      	movlt	ip, r3
 8013a1c:	9b08      	ldr	r3, [sp, #32]
 8013a1e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8013a22:	4548      	cmp	r0, r9
 8013a24:	bfb8      	it	lt
 8013a26:	4648      	movlt	r0, r9
 8013a28:	4699      	mov	r9, r3
 8013a2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013a2c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013a30:	4599      	cmp	r9, r3
 8013a32:	bfc8      	it	gt
 8013a34:	462a      	movgt	r2, r5
 8013a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a38:	4553      	cmp	r3, sl
 8013a3a:	bfd8      	it	le
 8013a3c:	4671      	movle	r1, lr
 8013a3e:	eba2 020c 	sub.w	r2, r2, ip
 8013a42:	1a09      	subs	r1, r1, r0
 8013a44:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013a48:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 8013a4c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013a50:	9b07      	ldr	r3, [sp, #28]
 8013a52:	1b12      	subs	r2, r2, r4
 8013a54:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013a58:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013a5c:	1ad2      	subs	r2, r2, r3
 8013a5e:	4b16      	ldr	r3, [pc, #88]	; (8013ab8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013a60:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013a64:	681a      	ldr	r2, [r3, #0]
 8013a66:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 8013a6a:	b109      	cbz	r1, 8013a70 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8013a6c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8013a6e:	b900      	cbnz	r0, 8013a72 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013a70:	6890      	ldr	r0, [r2, #8]
 8013a72:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013a76:	9b07      	ldr	r3, [sp, #28]
 8013a78:	6801      	ldr	r1, [r0, #0]
 8013a7a:	f04f 0c01 	mov.w	ip, #1
 8013a7e:	f8cd c008 	str.w	ip, [sp, #8]
 8013a82:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013a86:	f8cd c004 	str.w	ip, [sp, #4]
 8013a8a:	4413      	add	r3, r2
 8013a8c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013a90:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013a94:	f8cd c000 	str.w	ip, [sp]
 8013a98:	4422      	add	r2, r4
 8013a9a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8013a9e:	b21b      	sxth	r3, r3
 8013aa0:	b212      	sxth	r2, r2
 8013aa2:	4659      	mov	r1, fp
 8013aa4:	47c8      	blx	r9
 8013aa6:	46d1      	mov	r9, sl
 8013aa8:	e788      	b.n	80139bc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8013aaa:	2300      	movs	r3, #0
 8013aac:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8013ab0:	e7cc      	b.n	8013a4c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8013ab2:	b013      	add	sp, #76	; 0x4c
 8013ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ab8:	20013834 	.word	0x20013834

08013abc <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8013abc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ac0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013ac4:	2bff      	cmp	r3, #255	; 0xff
 8013ac6:	4606      	mov	r6, r0
 8013ac8:	4689      	mov	r9, r1
 8013aca:	d008      	beq.n	8013ade <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8013acc:	2300      	movs	r3, #0
 8013ace:	8003      	strh	r3, [r0, #0]
 8013ad0:	8043      	strh	r3, [r0, #2]
 8013ad2:	8083      	strh	r3, [r0, #4]
 8013ad4:	4630      	mov	r0, r6
 8013ad6:	80f3      	strh	r3, [r6, #6]
 8013ad8:	b003      	add	sp, #12
 8013ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ade:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8013ae2:	4659      	mov	r1, fp
 8013ae4:	4668      	mov	r0, sp
 8013ae6:	f006 fdab 	bl	801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013aea:	4658      	mov	r0, fp
 8013aec:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8013af0:	f9bd 7000 	ldrsh.w	r7, [sp]
 8013af4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8013af8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 8013afc:	f006 fd38 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b00:	4284      	cmp	r4, r0
 8013b02:	d10d      	bne.n	8013b20 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013b04:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013b08:	4658      	mov	r0, fp
 8013b0a:	f006 fd65 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b0e:	4580      	cmp	r8, r0
 8013b10:	d129      	bne.n	8013b66 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8013b12:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8013b16:	8037      	strh	r7, [r6, #0]
 8013b18:	f8a6 a002 	strh.w	sl, [r6, #2]
 8013b1c:	80b5      	strh	r5, [r6, #4]
 8013b1e:	e7d9      	b.n	8013ad4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013b20:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013b24:	4658      	mov	r0, fp
 8013b26:	f006 fd23 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b2a:	1b7f      	subs	r7, r7, r5
 8013b2c:	b2bd      	uxth	r5, r7
 8013b2e:	b22f      	sxth	r7, r5
 8013b30:	4428      	add	r0, r5
 8013b32:	2f00      	cmp	r7, #0
 8013b34:	b2a3      	uxth	r3, r4
 8013b36:	b280      	uxth	r0, r0
 8013b38:	bfb8      	it	lt
 8013b3a:	18ed      	addlt	r5, r5, r3
 8013b3c:	4403      	add	r3, r0
 8013b3e:	b29b      	uxth	r3, r3
 8013b40:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013b44:	bfb8      	it	lt
 8013b46:	b22d      	sxthlt	r5, r5
 8013b48:	b219      	sxth	r1, r3
 8013b4a:	bfae      	itee	ge
 8013b4c:	4625      	movge	r5, r4
 8013b4e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013b52:	2700      	movlt	r7, #0
 8013b54:	4291      	cmp	r1, r2
 8013b56:	bfc4      	itt	gt
 8013b58:	1a9c      	subgt	r4, r3, r2
 8013b5a:	b224      	sxthgt	r4, r4
 8013b5c:	42ac      	cmp	r4, r5
 8013b5e:	bfc4      	itt	gt
 8013b60:	b207      	sxthgt	r7, r0
 8013b62:	4625      	movgt	r5, r4
 8013b64:	e7d0      	b.n	8013b08 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013b66:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 8013b6a:	4658      	mov	r0, fp
 8013b6c:	f006 fd34 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b70:	ebaa 0404 	sub.w	r4, sl, r4
 8013b74:	b2a4      	uxth	r4, r4
 8013b76:	fa0f fa84 	sxth.w	sl, r4
 8013b7a:	4420      	add	r0, r4
 8013b7c:	f1ba 0f00 	cmp.w	sl, #0
 8013b80:	fa1f f288 	uxth.w	r2, r8
 8013b84:	b280      	uxth	r0, r0
 8013b86:	bfb8      	it	lt
 8013b88:	18a3      	addlt	r3, r4, r2
 8013b8a:	4402      	add	r2, r0
 8013b8c:	b292      	uxth	r2, r2
 8013b8e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013b92:	bfb8      	it	lt
 8013b94:	b21b      	sxthlt	r3, r3
 8013b96:	b214      	sxth	r4, r2
 8013b98:	bfae      	itee	ge
 8013b9a:	4643      	movge	r3, r8
 8013b9c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013ba0:	f04f 0a00 	movlt.w	sl, #0
 8013ba4:	428c      	cmp	r4, r1
 8013ba6:	bfc4      	itt	gt
 8013ba8:	eba2 0801 	subgt.w	r8, r2, r1
 8013bac:	fa0f f888 	sxthgt.w	r8, r8
 8013bb0:	4598      	cmp	r8, r3
 8013bb2:	bfc4      	itt	gt
 8013bb4:	fa0f fa80 	sxthgt.w	sl, r0
 8013bb8:	4643      	movgt	r3, r8
 8013bba:	e7ac      	b.n	8013b16 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

08013bbc <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013bbc:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013bc0:	b12a      	cbz	r2, 8013bce <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013bc2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013bc6:	b112      	cbz	r2, 8013bce <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013bc8:	6803      	ldr	r3, [r0, #0]
 8013bca:	695b      	ldr	r3, [r3, #20]
 8013bcc:	4718      	bx	r3
 8013bce:	4770      	bx	lr

08013bd0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8013bd0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8013bd4:	600b      	str	r3, [r1, #0]
 8013bd6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8013bda:	6013      	str	r3, [r2, #0]
 8013bdc:	4770      	bx	lr

08013bde <_ZN8touchgfx5Gauge8setWidthEs>:
 8013bde:	8101      	strh	r1, [r0, #8]
 8013be0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8013be4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8013be8:	4770      	bx	lr

08013bea <_ZN8touchgfx5Gauge9setHeightEs>:
 8013bea:	8141      	strh	r1, [r0, #10]
 8013bec:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8013bf0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8013bf4:	4770      	bx	lr

08013bf6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8013bf6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8013bfa:	4770      	bx	lr

08013bfc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8013bfc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013c00:	4770      	bx	lr

08013c02 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013c02:	4770      	bx	lr

08013c04 <_ZN8touchgfx5GaugeD1Ev>:
 8013c04:	4770      	bx	lr

08013c06 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013c06:	b538      	push	{r3, r4, r5, lr}
 8013c08:	4604      	mov	r4, r0
 8013c0a:	460d      	mov	r5, r1
 8013c0c:	f7fc fe07 	bl	801081e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013c10:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013c14:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8013c18:	bd38      	pop	{r3, r4, r5, pc}

08013c1a <_ZN8touchgfx5GaugeD0Ev>:
 8013c1a:	b510      	push	{r4, lr}
 8013c1c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013c20:	4604      	mov	r4, r0
 8013c22:	f017 f90a 	bl	802ae3a <_ZdlPvj>
 8013c26:	4620      	mov	r0, r4
 8013c28:	bd10      	pop	{r4, pc}

08013c2a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8013c2a:	b510      	push	{r4, lr}
 8013c2c:	6803      	ldr	r3, [r0, #0]
 8013c2e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013c32:	4604      	mov	r4, r0
 8013c34:	4798      	blx	r3
 8013c36:	b170      	cbz	r0, 8013c56 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c38:	6823      	ldr	r3, [r4, #0]
 8013c3a:	4620      	mov	r0, r4
 8013c3c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013c40:	4798      	blx	r3
 8013c42:	b140      	cbz	r0, 8013c56 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c44:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013c48:	b12b      	cbz	r3, 8013c56 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c4a:	6823      	ldr	r3, [r4, #0]
 8013c4c:	4620      	mov	r0, r4
 8013c4e:	695b      	ldr	r3, [r3, #20]
 8013c50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c54:	4718      	bx	r3
 8013c56:	bd10      	pop	{r4, pc}

08013c58 <_ZN8touchgfx5GaugeC1Ev>:
 8013c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013c5a:	4604      	mov	r4, r0
 8013c5c:	4626      	mov	r6, r4
 8013c5e:	f7fc feff 	bl	8010a60 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013c62:	4b18      	ldr	r3, [pc, #96]	; (8013cc4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013c64:	f846 3bb4 	str.w	r3, [r6], #180
 8013c68:	a902      	add	r1, sp, #8
 8013c6a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013c6e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013c72:	4630      	mov	r0, r6
 8013c74:	f015 f9a4 	bl	8028fc0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013c78:	2500      	movs	r5, #0
 8013c7a:	2301      	movs	r3, #1
 8013c7c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013c80:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013c84:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013c88:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8013c8c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013c90:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013c94:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013c98:	4638      	mov	r0, r7
 8013c9a:	f014 fbd5 	bl	8028448 <_ZN8touchgfx6CircleC1Ev>
 8013c9e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8013ca2:	4620      	mov	r0, r4
 8013ca4:	f7fc ff7d 	bl	8010ba2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013ca8:	4639      	mov	r1, r7
 8013caa:	4620      	mov	r0, r4
 8013cac:	f7fc ff38 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013cb0:	4620      	mov	r0, r4
 8013cb2:	4631      	mov	r1, r6
 8013cb4:	f7fc ff34 	bl	8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013cb8:	4620      	mov	r0, r4
 8013cba:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8013cbe:	b003      	add	sp, #12
 8013cc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013cc2:	bf00      	nop
 8013cc4:	0802fc30 	.word	0x0802fc30

08013cc8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013cc8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8013ccc:	4770      	bx	lr

08013cce <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013cce:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8013cd2:	4770      	bx	lr

08013cd4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8013cd4:	b538      	push	{r3, r4, r5, lr}
 8013cd6:	8902      	ldrh	r2, [r0, #8]
 8013cd8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013cdc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8013ce0:	4604      	mov	r4, r0
 8013ce2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8013ce6:	2200      	movs	r2, #0
 8013ce8:	4611      	mov	r1, r2
 8013cea:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8013cee:	4628      	mov	r0, r5
 8013cf0:	f7ee fe90 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8013cf4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8013cf8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013cfc:	1a9b      	subs	r3, r3, r2
 8013cfe:	ee07 3a90 	vmov	s15, r3
 8013d02:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013d06:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8013d0a:	1a9b      	subs	r3, r3, r2
 8013d0c:	ee07 3a10 	vmov	s14, r3
 8013d10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013d18:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8013d1c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013d20:	4628      	mov	r0, r5
 8013d22:	f015 f999 	bl	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d26:	4b16      	ldr	r3, [pc, #88]	; (8013d80 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013d28:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8013d2c:	4628      	mov	r0, r5
 8013d2e:	f015 f993 	bl	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d32:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013d36:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8013d3a:	ee07 3a90 	vmov	s15, r3
 8013d3e:	ee07 2a10 	vmov	s14, r2
 8013d42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d46:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013d4a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8013d4e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013d52:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013d56:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8013d5a:	4628      	mov	r0, r5
 8013d5c:	f015 f97c 	bl	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d60:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013d64:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013d68:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8013d6c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013d70:	4628      	mov	r0, r5
 8013d72:	f015 f971 	bl	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d76:	2301      	movs	r3, #1
 8013d78:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013d7c:	bd38      	pop	{r3, r4, r5, pc}
 8013d7e:	bf00      	nop
 8013d80:	43960000 	.word	0x43960000

08013d84 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013d84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013d86:	4604      	mov	r4, r0
 8013d88:	a802      	add	r0, sp, #8
 8013d8a:	4616      	mov	r6, r2
 8013d8c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013d90:	461d      	mov	r5, r3
 8013d92:	4601      	mov	r1, r0
 8013d94:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013d98:	f015 fab4 	bl	8029304 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8013d9c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013da0:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013da4:	4620      	mov	r0, r4
 8013da6:	f7ff ff95 	bl	8013cd4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013daa:	b002      	add	sp, #8
 8013dac:	bd70      	pop	{r4, r5, r6, pc}

08013dae <_ZN8touchgfx5Gauge9setCenterEii>:
 8013dae:	b570      	push	{r4, r5, r6, lr}
 8013db0:	4606      	mov	r6, r0
 8013db2:	460d      	mov	r5, r1
 8013db4:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8013db8:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8013dbc:	4614      	mov	r4, r2
 8013dbe:	f7ff ff89 	bl	8013cd4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013dc2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8013dc6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8013dca:	1aa4      	subs	r4, r4, r2
 8013dcc:	1a6d      	subs	r5, r5, r1
 8013dce:	0164      	lsls	r4, r4, #5
 8013dd0:	016d      	lsls	r5, r5, #5
 8013dd2:	3410      	adds	r4, #16
 8013dd4:	3510      	adds	r5, #16
 8013dd6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8013dda:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8013dde:	bd70      	pop	{r4, r5, r6, pc}

08013de0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013de0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013de2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013de4:	0149      	lsls	r1, r1, #5
 8013de6:	4299      	cmp	r1, r3
 8013de8:	4604      	mov	r4, r0
 8013dea:	9101      	str	r1, [sp, #4]
 8013dec:	d00b      	beq.n	8013e06 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8013dee:	4601      	mov	r1, r0
 8013df0:	aa01      	add	r2, sp, #4
 8013df2:	a802      	add	r0, sp, #8
 8013df4:	f014 fd26 	bl	8028844 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8013df8:	9b01      	ldr	r3, [sp, #4]
 8013dfa:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013dfc:	6823      	ldr	r3, [r4, #0]
 8013dfe:	a902      	add	r1, sp, #8
 8013e00:	691b      	ldr	r3, [r3, #16]
 8013e02:	4620      	mov	r0, r4
 8013e04:	4798      	blx	r3
 8013e06:	b004      	add	sp, #16
 8013e08:	bd10      	pop	{r4, pc}
	...

08013e0c <_ZN8touchgfx5Gauge8setValueEi>:
 8013e0c:	b570      	push	{r4, r5, r6, lr}
 8013e0e:	4604      	mov	r4, r0
 8013e10:	f7fc fd58 	bl	80108c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013e14:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8013e18:	429a      	cmp	r2, r3
 8013e1a:	bfac      	ite	ge
 8013e1c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013e20:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013e24:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013e28:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8013e2c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013e30:	1ac9      	subs	r1, r1, r3
 8013e32:	2900      	cmp	r1, #0
 8013e34:	bfb8      	it	lt
 8013e36:	4249      	neglt	r1, r1
 8013e38:	b289      	uxth	r1, r1
 8013e3a:	4620      	mov	r0, r4
 8013e3c:	f7fc fd64 	bl	8010908 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013e40:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013e44:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013e48:	eddf 6a19 	vldr	s13, [pc, #100]	; 8013eb0 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8013e4c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8013eb4 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013e50:	429a      	cmp	r2, r3
 8013e52:	4605      	mov	r5, r0
 8013e54:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013e58:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013e5c:	da15      	bge.n	8013e8a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8013e5e:	1b5b      	subs	r3, r3, r5
 8013e60:	ee07 3a90 	vmov	s15, r3
 8013e64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e68:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013e6c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013e70:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013e74:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013e78:	f015 f85d 	bl	8028f36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013e7c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013e80:	1b49      	subs	r1, r1, r5
 8013e82:	4630      	mov	r0, r6
 8013e84:	f7ff ffac 	bl	8013de0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013e88:	bd70      	pop	{r4, r5, r6, pc}
 8013e8a:	442b      	add	r3, r5
 8013e8c:	ee07 3a90 	vmov	s15, r3
 8013e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e94:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013e98:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013e9c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013ea0:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013ea4:	f015 f847 	bl	8028f36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013ea8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013eac:	4429      	add	r1, r5
 8013eae:	e7e8      	b.n	8013e82 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8013eb0:	43340000 	.word	0x43340000
 8013eb4:	40490fdb 	.word	0x40490fdb

08013eb8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8013eb8:	b510      	push	{r4, lr}
 8013eba:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8013ebe:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8013ec2:	0149      	lsls	r1, r1, #5
 8013ec4:	0152      	lsls	r2, r2, #5
 8013ec6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8013eca:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8013ece:	4604      	mov	r4, r0
 8013ed0:	f7fc fca2 	bl	8010818 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013ed4:	4601      	mov	r1, r0
 8013ed6:	4620      	mov	r0, r4
 8013ed8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013edc:	f7ff bf96 	b.w	8013e0c <_ZN8touchgfx5Gauge8setValueEi>

08013ee0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013ee0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013ee4:	4770      	bx	lr

08013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013ee6:	b570      	push	{r4, r5, r6, lr}
 8013ee8:	880b      	ldrh	r3, [r1, #0]
 8013eea:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013eec:	4605      	mov	r5, r0
 8013eee:	8813      	ldrh	r3, [r2, #0]
 8013ef0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013ef4:	4604      	mov	r4, r0
 8013ef6:	4628      	mov	r0, r5
 8013ef8:	f006 fb3a 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013efc:	4606      	mov	r6, r0
 8013efe:	4628      	mov	r0, r5
 8013f00:	f006 fb6a 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013f04:	6823      	ldr	r3, [r4, #0]
 8013f06:	4605      	mov	r5, r0
 8013f08:	4631      	mov	r1, r6
 8013f0a:	4620      	mov	r0, r4
 8013f0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f0e:	4798      	blx	r3
 8013f10:	6823      	ldr	r3, [r4, #0]
 8013f12:	4629      	mov	r1, r5
 8013f14:	4620      	mov	r0, r4
 8013f16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013f18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013f1c:	4718      	bx	r3

08013f1e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013f1e:	b510      	push	{r4, lr}
 8013f20:	4604      	mov	r4, r0
 8013f22:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013f24:	b150      	cbz	r0, 8013f3c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013f26:	6803      	ldr	r3, [r0, #0]
 8013f28:	68db      	ldr	r3, [r3, #12]
 8013f2a:	4798      	blx	r3
 8013f2c:	b130      	cbz	r0, 8013f3c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013f2e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013f30:	6803      	ldr	r3, [r0, #0]
 8013f32:	4621      	mov	r1, r4
 8013f34:	689b      	ldr	r3, [r3, #8]
 8013f36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f3a:	4718      	bx	r3
 8013f3c:	bd10      	pop	{r4, pc}

08013f3e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013f3e:	b510      	push	{r4, lr}
 8013f40:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013f44:	2bff      	cmp	r3, #255	; 0xff
 8013f46:	4604      	mov	r4, r0
 8013f48:	d006      	beq.n	8013f58 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013f4a:	2300      	movs	r3, #0
 8013f4c:	8003      	strh	r3, [r0, #0]
 8013f4e:	8043      	strh	r3, [r0, #2]
 8013f50:	8083      	strh	r3, [r0, #4]
 8013f52:	80c3      	strh	r3, [r0, #6]
 8013f54:	4620      	mov	r0, r4
 8013f56:	bd10      	pop	{r4, pc}
 8013f58:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013f5c:	b11b      	cbz	r3, 8013f66 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013f5e:	3130      	adds	r1, #48	; 0x30
 8013f60:	f006 fb6e 	bl	801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013f64:	e7f6      	b.n	8013f54 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013f66:	312e      	adds	r1, #46	; 0x2e
 8013f68:	e7fa      	b.n	8013f60 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013f6c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013f6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f70:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013f74:	b08a      	sub	sp, #40	; 0x28
 8013f76:	4604      	mov	r4, r0
 8013f78:	4688      	mov	r8, r1
 8013f7a:	2b00      	cmp	r3, #0
 8013f7c:	d066      	beq.n	801404c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013f7e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013f80:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013f84:	a805      	add	r0, sp, #20
 8013f86:	f006 faf3 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013f8a:	4607      	mov	r7, r0
 8013f8c:	a805      	add	r0, sp, #20
 8013f8e:	f006 fb23 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013f92:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013f96:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013f9a:	4432      	add	r2, r6
 8013f9c:	b292      	uxth	r2, r2
 8013f9e:	2300      	movs	r3, #0
 8013fa0:	fa0f fc82 	sxth.w	ip, r2
 8013fa4:	459c      	cmp	ip, r3
 8013fa6:	9306      	str	r3, [sp, #24]
 8013fa8:	dd52      	ble.n	8014050 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013faa:	42b7      	cmp	r7, r6
 8013fac:	dd50      	ble.n	8014050 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013fae:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013fb2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013fb6:	442b      	add	r3, r5
 8013fb8:	b29b      	uxth	r3, r3
 8013fba:	b219      	sxth	r1, r3
 8013fbc:	2900      	cmp	r1, #0
 8013fbe:	dd47      	ble.n	8014050 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013fc0:	42a8      	cmp	r0, r5
 8013fc2:	dd45      	ble.n	8014050 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013fc4:	4567      	cmp	r7, ip
 8013fc6:	bfb8      	it	lt
 8013fc8:	b2ba      	uxthlt	r2, r7
 8013fca:	4288      	cmp	r0, r1
 8013fcc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013fd0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013fd4:	bfb8      	it	lt
 8013fd6:	b283      	uxthlt	r3, r0
 8013fd8:	1b92      	subs	r2, r2, r6
 8013fda:	1b5b      	subs	r3, r3, r5
 8013fdc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013fe0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fe4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013fe8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013fec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013ff0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013ff4:	429a      	cmp	r2, r3
 8013ff6:	d026      	beq.n	8014046 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ff8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013ffc:	2b00      	cmp	r3, #0
 8013ffe:	dd22      	ble.n	8014046 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014000:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014004:	2b00      	cmp	r3, #0
 8014006:	dd1e      	ble.n	8014046 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014008:	2300      	movs	r3, #0
 801400a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801400e:	6823      	ldr	r3, [r4, #0]
 8014010:	a908      	add	r1, sp, #32
 8014012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014014:	4620      	mov	r0, r4
 8014016:	4798      	blx	r3
 8014018:	4b0f      	ldr	r3, [pc, #60]	; (8014058 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801401a:	681b      	ldr	r3, [r3, #0]
 801401c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014020:	b10a      	cbz	r2, 8014026 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8014022:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014024:	b900      	cbnz	r0, 8014028 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8014026:	6898      	ldr	r0, [r3, #8]
 8014028:	6801      	ldr	r1, [r0, #0]
 801402a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801402e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014032:	2501      	movs	r5, #1
 8014034:	9502      	str	r5, [sp, #8]
 8014036:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801403a:	9401      	str	r4, [sp, #4]
 801403c:	ac06      	add	r4, sp, #24
 801403e:	9400      	str	r4, [sp, #0]
 8014040:	688c      	ldr	r4, [r1, #8]
 8014042:	a905      	add	r1, sp, #20
 8014044:	47a0      	blx	r4
 8014046:	b00a      	add	sp, #40	; 0x28
 8014048:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801404c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801404e:	e797      	b.n	8013f80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8014050:	2300      	movs	r3, #0
 8014052:	9307      	str	r3, [sp, #28]
 8014054:	e7ca      	b.n	8013fec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8014056:	bf00      	nop
 8014058:	20013834 	.word	0x20013834

0801405c <_ZNK8touchgfx6Button17invalidateContentEv>:
 801405c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8014060:	b12a      	cbz	r2, 801406e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014062:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014066:	b112      	cbz	r2, 801406e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014068:	6803      	ldr	r3, [r0, #0]
 801406a:	695b      	ldr	r3, [r3, #20]
 801406c:	4718      	bx	r3
 801406e:	4770      	bx	lr

08014070 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014074:	4b2f      	ldr	r3, [pc, #188]	; (8014134 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8014076:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014078:	881b      	ldrh	r3, [r3, #0]
 801407a:	4293      	cmp	r3, r2
 801407c:	b08d      	sub	sp, #52	; 0x34
 801407e:	4604      	mov	r4, r0
 8014080:	460f      	mov	r7, r1
 8014082:	d954      	bls.n	801412e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014084:	4b2c      	ldr	r3, [pc, #176]	; (8014138 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8014086:	6819      	ldr	r1, [r3, #0]
 8014088:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801408c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014090:	4a2a      	ldr	r2, [pc, #168]	; (801413c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014092:	6812      	ldr	r2, [r2, #0]
 8014094:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8014098:	2900      	cmp	r1, #0
 801409a:	d048      	beq.n	801412e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801409c:	785a      	ldrb	r2, [r3, #1]
 801409e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80140a2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80140a6:	4b26      	ldr	r3, [pc, #152]	; (8014140 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80140a8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80140ac:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80140b0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80140b4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80140b6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80140ba:	9107      	str	r1, [sp, #28]
 80140bc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80140c0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80140c4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80140c8:	681a      	ldr	r2, [r3, #0]
 80140ca:	f88d 8020 	strb.w	r8, [sp, #32]
 80140ce:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80140d2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80140d6:	9609      	str	r6, [sp, #36]	; 0x24
 80140d8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80140dc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80140e0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80140e4:	b10b      	cbz	r3, 80140ea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80140e6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80140e8:	b905      	cbnz	r5, 80140ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80140ea:	6895      	ldr	r5, [r2, #8]
 80140ec:	ae05      	add	r6, sp, #20
 80140ee:	4621      	mov	r1, r4
 80140f0:	4630      	mov	r0, r6
 80140f2:	f003 ff71 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80140f6:	4b13      	ldr	r3, [pc, #76]	; (8014144 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80140f8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80140fa:	6818      	ldr	r0, [r3, #0]
 80140fc:	f7f4 fc8e 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 8014100:	6823      	ldr	r3, [r4, #0]
 8014102:	4680      	mov	r8, r0
 8014104:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014106:	4620      	mov	r0, r4
 8014108:	4798      	blx	r3
 801410a:	6823      	ldr	r3, [r4, #0]
 801410c:	4681      	mov	r9, r0
 801410e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014112:	4620      	mov	r0, r4
 8014114:	4798      	blx	r3
 8014116:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801411a:	ab07      	add	r3, sp, #28
 801411c:	9300      	str	r3, [sp, #0]
 801411e:	f8cd 8004 	str.w	r8, [sp, #4]
 8014122:	463b      	mov	r3, r7
 8014124:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014128:	4628      	mov	r0, r5
 801412a:	f7f4 fc29 	bl	8008980 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801412e:	b00d      	add	sp, #52	; 0x34
 8014130:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014134:	20013890 	.word	0x20013890
 8014138:	2001388c 	.word	0x2001388c
 801413c:	20013894 	.word	0x20013894
 8014140:	20013834 	.word	0x20013834
 8014144:	20013898 	.word	0x20013898

08014148 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8014148:	4770      	bx	lr

0801414a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801414a:	4770      	bx	lr

0801414c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 801414c:	b510      	push	{r4, lr}
 801414e:	213c      	movs	r1, #60	; 0x3c
 8014150:	4604      	mov	r4, r0
 8014152:	f016 fe72 	bl	802ae3a <_ZdlPvj>
 8014156:	4620      	mov	r0, r4
 8014158:	bd10      	pop	{r4, pc}

0801415a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801415a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801415e:	461c      	mov	r4, r3
 8014160:	4606      	mov	r6, r0
 8014162:	9f06      	ldr	r7, [sp, #24]
 8014164:	f7ff febf 	bl	8013ee6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8014168:	8823      	ldrh	r3, [r4, #0]
 801416a:	86b3      	strh	r3, [r6, #52]	; 0x34
 801416c:	883b      	ldrh	r3, [r7, #0]
 801416e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8014170:	4638      	mov	r0, r7
 8014172:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8014176:	f006 f9fb 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801417a:	f04f 0802 	mov.w	r8, #2
 801417e:	fb95 f5f8 	sdiv	r5, r5, r8
 8014182:	b2ad      	uxth	r5, r5
 8014184:	fb90 f0f8 	sdiv	r0, r0, r8
 8014188:	1a2d      	subs	r5, r5, r0
 801418a:	8735      	strh	r5, [r6, #56]	; 0x38
 801418c:	4638      	mov	r0, r7
 801418e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8014192:	fb94 f4f8 	sdiv	r4, r4, r8
 8014196:	f006 fa1f 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801419a:	b2a4      	uxth	r4, r4
 801419c:	fb90 f0f8 	sdiv	r0, r0, r8
 80141a0:	1a24      	subs	r4, r4, r0
 80141a2:	8774      	strh	r4, [r6, #58]	; 0x3a
 80141a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080141a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80141a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80141ac:	4604      	mov	r4, r0
 80141ae:	b08c      	sub	sp, #48	; 0x30
 80141b0:	460d      	mov	r5, r1
 80141b2:	f7ff fedb 	bl	8013f6c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80141b6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80141ba:	2b00      	cmp	r3, #0
 80141bc:	d05d      	beq.n	801427a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80141be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80141c0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80141c4:	a805      	add	r0, sp, #20
 80141c6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80141ca:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80141ce:	f006 f9cf 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80141d2:	4606      	mov	r6, r0
 80141d4:	a805      	add	r0, sp, #20
 80141d6:	f006 f9ff 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80141da:	6869      	ldr	r1, [r5, #4]
 80141dc:	f8ad 001e 	strh.w	r0, [sp, #30]
 80141e0:	6828      	ldr	r0, [r5, #0]
 80141e2:	f8ad 8018 	strh.w	r8, [sp, #24]
 80141e6:	ab08      	add	r3, sp, #32
 80141e8:	ad08      	add	r5, sp, #32
 80141ea:	c303      	stmia	r3!, {r0, r1}
 80141ec:	a906      	add	r1, sp, #24
 80141ee:	4628      	mov	r0, r5
 80141f0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80141f4:	f8ad 601c 	strh.w	r6, [sp, #28]
 80141f8:	f7fc fe18 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 80141fc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014200:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014204:	429a      	cmp	r2, r3
 8014206:	d035      	beq.n	8014274 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014208:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801420c:	2b00      	cmp	r3, #0
 801420e:	dd31      	ble.n	8014274 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014210:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8014214:	2b00      	cmp	r3, #0
 8014216:	dd2d      	ble.n	8014274 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014218:	2300      	movs	r3, #0
 801421a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801421e:	6823      	ldr	r3, [r4, #0]
 8014220:	a90a      	add	r1, sp, #40	; 0x28
 8014222:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014224:	4620      	mov	r0, r4
 8014226:	4798      	blx	r3
 8014228:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801422c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801422e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014232:	1a9b      	subs	r3, r3, r2
 8014234:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014238:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801423a:	1ac9      	subs	r1, r1, r3
 801423c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8014240:	490f      	ldr	r1, [pc, #60]	; (8014280 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8014242:	6809      	ldr	r1, [r1, #0]
 8014244:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8014248:	b108      	cbz	r0, 801424e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 801424a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 801424c:	b900      	cbnz	r0, 8014250 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801424e:	6888      	ldr	r0, [r1, #8]
 8014250:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8014254:	440b      	add	r3, r1
 8014256:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801425a:	2601      	movs	r6, #1
 801425c:	440a      	add	r2, r1
 801425e:	6801      	ldr	r1, [r0, #0]
 8014260:	9602      	str	r6, [sp, #8]
 8014262:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8014266:	e9cd 5400 	strd	r5, r4, [sp]
 801426a:	b21b      	sxth	r3, r3
 801426c:	688c      	ldr	r4, [r1, #8]
 801426e:	b212      	sxth	r2, r2
 8014270:	a905      	add	r1, sp, #20
 8014272:	47a0      	blx	r4
 8014274:	b00c      	add	sp, #48	; 0x30
 8014276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801427a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801427c:	e7a0      	b.n	80141c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801427e:	bf00      	nop
 8014280:	20013834 	.word	0x20013834

08014284 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8014284:	b510      	push	{r4, lr}
 8014286:	2101      	movs	r1, #1
 8014288:	2200      	movs	r2, #0
 801428a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801428e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014292:	4c0e      	ldr	r4, [pc, #56]	; (80142cc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8014294:	8082      	strh	r2, [r0, #4]
 8014296:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801429a:	80c2      	strh	r2, [r0, #6]
 801429c:	8102      	strh	r2, [r0, #8]
 801429e:	8142      	strh	r2, [r0, #10]
 80142a0:	8182      	strh	r2, [r0, #12]
 80142a2:	81c2      	strh	r2, [r0, #14]
 80142a4:	8202      	strh	r2, [r0, #16]
 80142a6:	8242      	strh	r2, [r0, #18]
 80142a8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80142ac:	61c2      	str	r2, [r0, #28]
 80142ae:	8402      	strh	r2, [r0, #32]
 80142b0:	8442      	strh	r2, [r0, #34]	; 0x22
 80142b2:	6282      	str	r2, [r0, #40]	; 0x28
 80142b4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80142b8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80142ba:	8601      	strh	r1, [r0, #48]	; 0x30
 80142bc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80142c0:	6004      	str	r4, [r0, #0]
 80142c2:	8681      	strh	r1, [r0, #52]	; 0x34
 80142c4:	86c1      	strh	r1, [r0, #54]	; 0x36
 80142c6:	8702      	strh	r2, [r0, #56]	; 0x38
 80142c8:	8742      	strh	r2, [r0, #58]	; 0x3a
 80142ca:	bd10      	pop	{r4, pc}
 80142cc:	0802fd18 	.word	0x0802fd18

080142d0 <_ZN8touchgfx5ImageD1Ev>:
 80142d0:	4770      	bx	lr

080142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80142d2:	b570      	push	{r4, r5, r6, lr}
 80142d4:	880b      	ldrh	r3, [r1, #0]
 80142d6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80142d8:	4604      	mov	r4, r0
 80142da:	4608      	mov	r0, r1
 80142dc:	460d      	mov	r5, r1
 80142de:	f006 f947 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80142e2:	4606      	mov	r6, r0
 80142e4:	4628      	mov	r0, r5
 80142e6:	f006 f977 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80142ea:	6823      	ldr	r3, [r4, #0]
 80142ec:	4605      	mov	r5, r0
 80142ee:	4631      	mov	r1, r6
 80142f0:	4620      	mov	r0, r4
 80142f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142f4:	4798      	blx	r3
 80142f6:	6823      	ldr	r3, [r4, #0]
 80142f8:	4629      	mov	r1, r5
 80142fa:	4620      	mov	r0, r4
 80142fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014302:	4718      	bx	r3

08014304 <_ZN8touchgfx5ImageD0Ev>:
 8014304:	b510      	push	{r4, lr}
 8014306:	212c      	movs	r1, #44	; 0x2c
 8014308:	4604      	mov	r4, r0
 801430a:	f016 fd96 	bl	802ae3a <_ZdlPvj>
 801430e:	4620      	mov	r0, r4
 8014310:	bd10      	pop	{r4, pc}

08014312 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8014312:	b510      	push	{r4, lr}
 8014314:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014318:	2bff      	cmp	r3, #255	; 0xff
 801431a:	4604      	mov	r4, r0
 801431c:	d006      	beq.n	801432c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801431e:	2300      	movs	r3, #0
 8014320:	8003      	strh	r3, [r0, #0]
 8014322:	8043      	strh	r3, [r0, #2]
 8014324:	8083      	strh	r3, [r0, #4]
 8014326:	80c3      	strh	r3, [r0, #6]
 8014328:	4620      	mov	r0, r4
 801432a:	bd10      	pop	{r4, pc}
 801432c:	3126      	adds	r1, #38	; 0x26
 801432e:	f006 f987 	bl	801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014332:	e7f9      	b.n	8014328 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08014334 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014338:	4604      	mov	r4, r0
 801433a:	b088      	sub	sp, #32
 801433c:	f854 3b26 	ldr.w	r3, [r4], #38
 8014340:	2500      	movs	r5, #0
 8014342:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014344:	460f      	mov	r7, r1
 8014346:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801434a:	a904      	add	r1, sp, #16
 801434c:	4606      	mov	r6, r0
 801434e:	4798      	blx	r3
 8014350:	4620      	mov	r0, r4
 8014352:	f006 f90d 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014356:	4680      	mov	r8, r0
 8014358:	4620      	mov	r0, r4
 801435a:	f006 f93d 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801435e:	9506      	str	r5, [sp, #24]
 8014360:	ad06      	add	r5, sp, #24
 8014362:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014366:	4639      	mov	r1, r7
 8014368:	4628      	mov	r0, r5
 801436a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801436e:	f7fc fd5d 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8014372:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014376:	2b00      	cmp	r3, #0
 8014378:	dd19      	ble.n	80143ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801437a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801437e:	2b00      	cmp	r3, #0
 8014380:	dd15      	ble.n	80143ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014382:	4b0c      	ldr	r3, [pc, #48]	; (80143b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014384:	681b      	ldr	r3, [r3, #0]
 8014386:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801438a:	b10a      	cbz	r2, 8014390 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801438c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801438e:	b900      	cbnz	r0, 8014392 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014390:	6898      	ldr	r0, [r3, #8]
 8014392:	6801      	ldr	r1, [r0, #0]
 8014394:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014398:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801439c:	2701      	movs	r7, #1
 801439e:	9702      	str	r7, [sp, #8]
 80143a0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80143a4:	e9cd 5600 	strd	r5, r6, [sp]
 80143a8:	688d      	ldr	r5, [r1, #8]
 80143aa:	4621      	mov	r1, r4
 80143ac:	47a8      	blx	r5
 80143ae:	b008      	add	sp, #32
 80143b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143b4:	20013834 	.word	0x20013834

080143b8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80143b8:	4770      	bx	lr

080143ba <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80143ba:	b510      	push	{r4, lr}
 80143bc:	2148      	movs	r1, #72	; 0x48
 80143be:	4604      	mov	r4, r0
 80143c0:	f016 fd3b 	bl	802ae3a <_ZdlPvj>
 80143c4:	4620      	mov	r0, r4
 80143c6:	bd10      	pop	{r4, pc}

080143c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80143c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80143cc:	b08d      	sub	sp, #52	; 0x34
 80143ce:	4604      	mov	r4, r0
 80143d0:	460f      	mov	r7, r1
 80143d2:	f7ff fdcb 	bl	8013f6c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80143d6:	4a55      	ldr	r2, [pc, #340]	; (801452c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80143d8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80143da:	8812      	ldrh	r2, [r2, #0]
 80143dc:	429a      	cmp	r2, r3
 80143de:	f240 8082 	bls.w	80144e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80143e2:	4d53      	ldr	r5, [pc, #332]	; (8014530 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80143e4:	682a      	ldr	r2, [r5, #0]
 80143e6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80143ea:	4b52      	ldr	r3, [pc, #328]	; (8014534 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80143ec:	681b      	ldr	r3, [r3, #0]
 80143ee:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80143f2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80143f6:	2200      	movs	r2, #0
 80143f8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80143fc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8014400:	2a03      	cmp	r2, #3
 8014402:	d811      	bhi.n	8014428 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8014404:	e8df f002 	tbb	[pc, r2]
 8014408:	89727902 	.word	0x89727902
 801440c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014410:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014414:	1ad2      	subs	r2, r2, r3
 8014416:	2002      	movs	r0, #2
 8014418:	f8ad 1010 	strh.w	r1, [sp, #16]
 801441c:	fb92 f2f0 	sdiv	r2, r2, r0
 8014420:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014424:	f8ad 200e 	strh.w	r2, [sp, #14]
 8014428:	f10d 080c 	add.w	r8, sp, #12
 801442c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014430:	f10d 0914 	add.w	r9, sp, #20
 8014434:	e889 0003 	stmia.w	r9, {r0, r1}
 8014438:	4639      	mov	r1, r7
 801443a:	4648      	mov	r0, r9
 801443c:	f7fc fcf6 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8014440:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014444:	2b00      	cmp	r3, #0
 8014446:	dd4e      	ble.n	80144e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014448:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801444c:	2b00      	cmp	r3, #0
 801444e:	dd4a      	ble.n	80144e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014450:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014454:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8014458:	1a9b      	subs	r3, r3, r2
 801445a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801445e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014462:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8014466:	1a9b      	subs	r3, r3, r2
 8014468:	f8ad 3016 	strh.w	r3, [sp, #22]
 801446c:	6823      	ldr	r3, [r4, #0]
 801446e:	4641      	mov	r1, r8
 8014470:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014472:	4620      	mov	r0, r4
 8014474:	4798      	blx	r3
 8014476:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801447a:	2b00      	cmp	r3, #0
 801447c:	d053      	beq.n	8014526 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801447e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8014480:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8014482:	682b      	ldr	r3, [r5, #0]
 8014484:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8014488:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801448c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014490:	785b      	ldrb	r3, [r3, #1]
 8014492:	9209      	str	r2, [sp, #36]	; 0x24
 8014494:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8014498:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801449c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80144a0:	2300      	movs	r3, #0
 80144a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80144a6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80144aa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80144ae:	4b22      	ldr	r3, [pc, #136]	; (8014538 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80144b0:	9607      	str	r6, [sp, #28]
 80144b2:	681b      	ldr	r3, [r3, #0]
 80144b4:	f88d 5020 	strb.w	r5, [sp, #32]
 80144b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80144bc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80144c0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80144c4:	b10a      	cbz	r2, 80144ca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80144c6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80144c8:	b904      	cbnz	r4, 80144cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80144ca:	689c      	ldr	r4, [r3, #8]
 80144cc:	4b1b      	ldr	r3, [pc, #108]	; (801453c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80144ce:	6818      	ldr	r0, [r3, #0]
 80144d0:	f7f4 faa4 	bl	8008a1c <_ZNK8touchgfx5Texts7getTextEt>
 80144d4:	ab07      	add	r3, sp, #28
 80144d6:	9001      	str	r0, [sp, #4]
 80144d8:	9300      	str	r3, [sp, #0]
 80144da:	e898 0006 	ldmia.w	r8, {r1, r2}
 80144de:	464b      	mov	r3, r9
 80144e0:	4620      	mov	r0, r4
 80144e2:	f7f4 fa4d 	bl	8008980 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80144e6:	b00d      	add	sp, #52	; 0x34
 80144e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80144ec:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80144f0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80144f4:	1ad2      	subs	r2, r2, r3
 80144f6:	3201      	adds	r2, #1
 80144f8:	e78d      	b.n	8014416 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80144fa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80144fe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014502:	1ad2      	subs	r2, r2, r3
 8014504:	3201      	adds	r2, #1
 8014506:	2002      	movs	r0, #2
 8014508:	f8ad 3010 	strh.w	r3, [sp, #16]
 801450c:	fb92 f2f0 	sdiv	r2, r2, r0
 8014510:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014514:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014518:	e786      	b.n	8014428 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801451a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801451e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014522:	1ad2      	subs	r2, r2, r3
 8014524:	e7ef      	b.n	8014506 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8014526:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8014528:	e7aa      	b.n	8014480 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801452a:	bf00      	nop
 801452c:	20013890 	.word	0x20013890
 8014530:	2001388c 	.word	0x2001388c
 8014534:	20013894 	.word	0x20013894
 8014538:	20013834 	.word	0x20013834
 801453c:	20013898 	.word	0x20013898

08014540 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014540:	b510      	push	{r4, lr}
 8014542:	2101      	movs	r1, #1
 8014544:	4c13      	ldr	r4, [pc, #76]	; (8014594 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8014546:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801454a:	2200      	movs	r2, #0
 801454c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014550:	6004      	str	r4, [r0, #0]
 8014552:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8014556:	4c10      	ldr	r4, [pc, #64]	; (8014598 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8014558:	8082      	strh	r2, [r0, #4]
 801455a:	80c2      	strh	r2, [r0, #6]
 801455c:	8102      	strh	r2, [r0, #8]
 801455e:	8142      	strh	r2, [r0, #10]
 8014560:	8182      	strh	r2, [r0, #12]
 8014562:	81c2      	strh	r2, [r0, #14]
 8014564:	8202      	strh	r2, [r0, #16]
 8014566:	8242      	strh	r2, [r0, #18]
 8014568:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801456c:	61c2      	str	r2, [r0, #28]
 801456e:	8402      	strh	r2, [r0, #32]
 8014570:	8442      	strh	r2, [r0, #34]	; 0x22
 8014572:	6282      	str	r2, [r0, #40]	; 0x28
 8014574:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014578:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801457a:	8601      	strh	r1, [r0, #48]	; 0x30
 801457c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014580:	6344      	str	r4, [r0, #52]	; 0x34
 8014582:	8701      	strh	r1, [r0, #56]	; 0x38
 8014584:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8014588:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801458c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8014590:	bd10      	pop	{r4, pc}
 8014592:	bf00      	nop
 8014594:	0802fdfc 	.word	0x0802fdfc
 8014598:	0802d5f0 	.word	0x0802d5f0

0801459c <_ZN8touchgfx7OutlineD1Ev>:
 801459c:	4770      	bx	lr

0801459e <_ZN8touchgfx7OutlineD0Ev>:
 801459e:	b510      	push	{r4, lr}
 80145a0:	2130      	movs	r1, #48	; 0x30
 80145a2:	4604      	mov	r4, r0
 80145a4:	f016 fc49 	bl	802ae3a <_ZdlPvj>
 80145a8:	4620      	mov	r0, r4
 80145aa:	bd10      	pop	{r4, pc}

080145ac <_ZN8touchgfx7Outline5resetEv>:
 80145ac:	b510      	push	{r4, lr}
 80145ae:	4604      	mov	r4, r0
 80145b0:	f000 fe96 	bl	80152e0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80145b4:	60e0      	str	r0, [r4, #12]
 80145b6:	f000 fe99 	bl	80152ec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80145ba:	68e3      	ldr	r3, [r4, #12]
 80145bc:	6123      	str	r3, [r4, #16]
 80145be:	08c0      	lsrs	r0, r0, #3
 80145c0:	2200      	movs	r2, #0
 80145c2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80145c6:	3801      	subs	r0, #1
 80145c8:	6060      	str	r0, [r4, #4]
 80145ca:	60a2      	str	r2, [r4, #8]
 80145cc:	8019      	strh	r1, [r3, #0]
 80145ce:	8059      	strh	r1, [r3, #2]
 80145d0:	809a      	strh	r2, [r3, #4]
 80145d2:	80da      	strh	r2, [r3, #6]
 80145d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80145d6:	f023 0301 	bic.w	r3, r3, #1
 80145da:	f043 0302 	orr.w	r3, r3, #2
 80145de:	6263      	str	r3, [r4, #36]	; 0x24
 80145e0:	bd10      	pop	{r4, pc}
	...

080145e4 <_ZN8touchgfx7OutlineC1Ev>:
 80145e4:	b510      	push	{r4, lr}
 80145e6:	4b0a      	ldr	r3, [pc, #40]	; (8014610 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80145e8:	6003      	str	r3, [r0, #0]
 80145ea:	2300      	movs	r3, #0
 80145ec:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80145f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80145f4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80145f8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80145fc:	6243      	str	r3, [r0, #36]	; 0x24
 80145fe:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8014602:	4604      	mov	r4, r0
 8014604:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8014608:	f7ff ffd0 	bl	80145ac <_ZN8touchgfx7Outline5resetEv>
 801460c:	4620      	mov	r0, r4
 801460e:	bd10      	pop	{r4, pc}
 8014610:	0802fe70 	.word	0x0802fe70

08014614 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014618:	b093      	sub	sp, #76	; 0x4c
 801461a:	1156      	asrs	r6, r2, #5
 801461c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801461e:	9305      	str	r3, [sp, #20]
 8014620:	f004 051f 	and.w	r5, r4, #31
 8014624:	1153      	asrs	r3, r2, #5
 8014626:	9504      	str	r5, [sp, #16]
 8014628:	1165      	asrs	r5, r4, #5
 801462a:	9303      	str	r3, [sp, #12]
 801462c:	42ae      	cmp	r6, r5
 801462e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014632:	9306      	str	r3, [sp, #24]
 8014634:	f002 031f 	and.w	r3, r2, #31
 8014638:	f040 80f8 	bne.w	801482c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801463c:	9c04      	ldr	r4, [sp, #16]
 801463e:	9a05      	ldr	r2, [sp, #20]
 8014640:	42a3      	cmp	r3, r4
 8014642:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014646:	6902      	ldr	r2, [r0, #16]
 8014648:	d125      	bne.n	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801464a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801464e:	459e      	cmp	lr, r3
 8014650:	d103      	bne.n	801465a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014652:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014656:	429e      	cmp	r6, r3
 8014658:	d035      	beq.n	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801465a:	88d1      	ldrh	r1, [r2, #6]
 801465c:	8893      	ldrh	r3, [r2, #4]
 801465e:	430b      	orrs	r3, r1
 8014660:	d010      	beq.n	8014684 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014662:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014666:	2b00      	cmp	r3, #0
 8014668:	db0c      	blt.n	8014684 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801466a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801466c:	428b      	cmp	r3, r1
 801466e:	da09      	bge.n	8014684 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014670:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014674:	428b      	cmp	r3, r1
 8014676:	bf38      	it	cc
 8014678:	3208      	addcc	r2, #8
 801467a:	f103 0301 	add.w	r3, r3, #1
 801467e:	bf38      	it	cc
 8014680:	6102      	strcc	r2, [r0, #16]
 8014682:	6083      	str	r3, [r0, #8]
 8014684:	6903      	ldr	r3, [r0, #16]
 8014686:	9a03      	ldr	r2, [sp, #12]
 8014688:	f8a3 e000 	strh.w	lr, [r3]
 801468c:	805a      	strh	r2, [r3, #2]
 801468e:	2200      	movs	r2, #0
 8014690:	809a      	strh	r2, [r3, #4]
 8014692:	80da      	strh	r2, [r3, #6]
 8014694:	e017      	b.n	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014696:	9c05      	ldr	r4, [sp, #20]
 8014698:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801469c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80146a0:	f004 041f 	and.w	r4, r4, #31
 80146a4:	114e      	asrs	r6, r1, #5
 80146a6:	9402      	str	r4, [sp, #8]
 80146a8:	9c04      	ldr	r4, [sp, #16]
 80146aa:	4576      	cmp	r6, lr
 80146ac:	f001 0c1f 	and.w	ip, r1, #31
 80146b0:	eba4 0403 	sub.w	r4, r4, r3
 80146b4:	d10a      	bne.n	80146cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80146b6:	9b02      	ldr	r3, [sp, #8]
 80146b8:	449c      	add	ip, r3
 80146ba:	44a0      	add	r8, r4
 80146bc:	fb04 a40c 	mla	r4, r4, ip, sl
 80146c0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80146c4:	80d4      	strh	r4, [r2, #6]
 80146c6:	b013      	add	sp, #76	; 0x4c
 80146c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146cc:	9d05      	ldr	r5, [sp, #20]
 80146ce:	1a69      	subs	r1, r5, r1
 80146d0:	bf5b      	ittet	pl
 80146d2:	f1cc 0520 	rsbpl	r5, ip, #32
 80146d6:	436c      	mulpl	r4, r5
 80146d8:	2500      	movmi	r5, #0
 80146da:	2520      	movpl	r5, #32
 80146dc:	bf44      	itt	mi
 80146de:	fb04 f40c 	mulmi.w	r4, r4, ip
 80146e2:	4249      	negmi	r1, r1
 80146e4:	9501      	str	r5, [sp, #4]
 80146e6:	9f01      	ldr	r7, [sp, #4]
 80146e8:	fb94 f5f1 	sdiv	r5, r4, r1
 80146ec:	fb01 4415 	mls	r4, r1, r5, r4
 80146f0:	bf54      	ite	pl
 80146f2:	f04f 0901 	movpl.w	r9, #1
 80146f6:	f04f 39ff 	movmi.w	r9, #4294967295
 80146fa:	2c00      	cmp	r4, #0
 80146fc:	bfb8      	it	lt
 80146fe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014702:	44bc      	add	ip, r7
 8014704:	44a8      	add	r8, r5
 8014706:	fb05 ac0c 	mla	ip, r5, ip, sl
 801470a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801470e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014712:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014716:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801471a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801471e:	bfb8      	it	lt
 8014720:	1864      	addlt	r4, r4, r1
 8014722:	ea58 0202 	orrs.w	r2, r8, r2
 8014726:	444e      	add	r6, r9
 8014728:	d011      	beq.n	801474e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801472a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801472e:	f1b8 0f00 	cmp.w	r8, #0
 8014732:	db0c      	blt.n	801474e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014734:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014736:	4590      	cmp	r8, r2
 8014738:	da09      	bge.n	801474e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801473a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801473e:	4590      	cmp	r8, r2
 8014740:	bf3c      	itt	cc
 8014742:	f10c 0208 	addcc.w	r2, ip, #8
 8014746:	6102      	strcc	r2, [r0, #16]
 8014748:	f108 0201 	add.w	r2, r8, #1
 801474c:	6082      	str	r2, [r0, #8]
 801474e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014752:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014756:	f8ac 6000 	strh.w	r6, [ip]
 801475a:	2700      	movs	r7, #0
 801475c:	45b6      	cmp	lr, r6
 801475e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014762:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014766:	f8ac 7006 	strh.w	r7, [ip, #6]
 801476a:	442b      	add	r3, r5
 801476c:	d04d      	beq.n	801480a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801476e:	9f04      	ldr	r7, [sp, #16]
 8014770:	1aff      	subs	r7, r7, r3
 8014772:	443d      	add	r5, r7
 8014774:	016d      	lsls	r5, r5, #5
 8014776:	fb95 f8f1 	sdiv	r8, r5, r1
 801477a:	fb01 5518 	mls	r5, r1, r8, r5
 801477e:	2d00      	cmp	r5, #0
 8014780:	bfb8      	it	lt
 8014782:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014786:	f108 0701 	add.w	r7, r8, #1
 801478a:	bfb8      	it	lt
 801478c:	186d      	addlt	r5, r5, r1
 801478e:	1a64      	subs	r4, r4, r1
 8014790:	9703      	str	r7, [sp, #12]
 8014792:	f04f 0a00 	mov.w	sl, #0
 8014796:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801479a:	1964      	adds	r4, r4, r5
 801479c:	bf58      	it	pl
 801479e:	9f03      	ldrpl	r7, [sp, #12]
 80147a0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80147a4:	bf48      	it	mi
 80147a6:	4647      	movmi	r7, r8
 80147a8:	44bb      	add	fp, r7
 80147aa:	f8ac b004 	strh.w	fp, [ip, #4]
 80147ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147b2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80147b6:	f8ac b006 	strh.w	fp, [ip, #6]
 80147ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147be:	443b      	add	r3, r7
 80147c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80147c8:	bf58      	it	pl
 80147ca:	1a64      	subpl	r4, r4, r1
 80147cc:	ea5b 0707 	orrs.w	r7, fp, r7
 80147d0:	444e      	add	r6, r9
 80147d2:	d011      	beq.n	80147f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147d4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80147d8:	f1bb 0f00 	cmp.w	fp, #0
 80147dc:	db0c      	blt.n	80147f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147de:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80147e0:	45bb      	cmp	fp, r7
 80147e2:	da09      	bge.n	80147f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147e4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80147e8:	45bb      	cmp	fp, r7
 80147ea:	bf3c      	itt	cc
 80147ec:	f10c 0708 	addcc.w	r7, ip, #8
 80147f0:	6107      	strcc	r7, [r0, #16]
 80147f2:	f10b 0701 	add.w	r7, fp, #1
 80147f6:	6087      	str	r7, [r0, #8]
 80147f8:	6907      	ldr	r7, [r0, #16]
 80147fa:	45b6      	cmp	lr, r6
 80147fc:	803e      	strh	r6, [r7, #0]
 80147fe:	807a      	strh	r2, [r7, #2]
 8014800:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014804:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014808:	d1c5      	bne.n	8014796 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801480a:	9a04      	ldr	r2, [sp, #16]
 801480c:	1ad3      	subs	r3, r2, r3
 801480e:	6902      	ldr	r2, [r0, #16]
 8014810:	8891      	ldrh	r1, [r2, #4]
 8014812:	88d6      	ldrh	r6, [r2, #6]
 8014814:	4419      	add	r1, r3
 8014816:	8091      	strh	r1, [r2, #4]
 8014818:	9902      	ldr	r1, [sp, #8]
 801481a:	f101 0c20 	add.w	ip, r1, #32
 801481e:	9901      	ldr	r1, [sp, #4]
 8014820:	ebac 0c01 	sub.w	ip, ip, r1
 8014824:	fb03 630c 	mla	r3, r3, ip, r6
 8014828:	80d3      	strh	r3, [r2, #6]
 801482a:	e74c      	b.n	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801482c:	9d05      	ldr	r5, [sp, #20]
 801482e:	1aa2      	subs	r2, r4, r2
 8014830:	eba5 0501 	sub.w	r5, r5, r1
 8014834:	9508      	str	r5, [sp, #32]
 8014836:	9202      	str	r2, [sp, #8]
 8014838:	f140 8128 	bpl.w	8014a8c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801483c:	9a03      	ldr	r2, [sp, #12]
 801483e:	2a00      	cmp	r2, #0
 8014840:	f6ff af41 	blt.w	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014844:	9a02      	ldr	r2, [sp, #8]
 8014846:	4252      	negs	r2, r2
 8014848:	9202      	str	r2, [sp, #8]
 801484a:	9a06      	ldr	r2, [sp, #24]
 801484c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014850:	f04f 34ff 	mov.w	r4, #4294967295
 8014854:	9206      	str	r2, [sp, #24]
 8014856:	462a      	mov	r2, r5
 8014858:	940b      	str	r4, [sp, #44]	; 0x2c
 801485a:	435a      	muls	r2, r3
 801485c:	2400      	movs	r4, #0
 801485e:	9d02      	ldr	r5, [sp, #8]
 8014860:	9401      	str	r4, [sp, #4]
 8014862:	9c02      	ldr	r4, [sp, #8]
 8014864:	fb92 f4f4 	sdiv	r4, r2, r4
 8014868:	fb05 2214 	mls	r2, r5, r4, r2
 801486c:	2a00      	cmp	r2, #0
 801486e:	9207      	str	r2, [sp, #28]
 8014870:	bfbc      	itt	lt
 8014872:	1952      	addlt	r2, r2, r5
 8014874:	9207      	strlt	r2, [sp, #28]
 8014876:	9a01      	ldr	r2, [sp, #4]
 8014878:	6905      	ldr	r5, [r0, #16]
 801487a:	bfb8      	it	lt
 801487c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014880:	eb04 0901 	add.w	r9, r4, r1
 8014884:	429a      	cmp	r2, r3
 8014886:	ea4f 1669 	mov.w	r6, r9, asr #5
 801488a:	f040 8112 	bne.w	8014ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801488e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014892:	429e      	cmp	r6, r3
 8014894:	d104      	bne.n	80148a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014896:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801489a:	9a03      	ldr	r2, [sp, #12]
 801489c:	429a      	cmp	r2, r3
 801489e:	d01b      	beq.n	80148d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80148a0:	88ea      	ldrh	r2, [r5, #6]
 80148a2:	88ab      	ldrh	r3, [r5, #4]
 80148a4:	4313      	orrs	r3, r2
 80148a6:	d010      	beq.n	80148ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80148a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80148ac:	2a00      	cmp	r2, #0
 80148ae:	db0c      	blt.n	80148ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80148b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80148b2:	429a      	cmp	r2, r3
 80148b4:	da09      	bge.n	80148ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80148b6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80148ba:	429a      	cmp	r2, r3
 80148bc:	bf38      	it	cc
 80148be:	3508      	addcc	r5, #8
 80148c0:	f102 0201 	add.w	r2, r2, #1
 80148c4:	bf38      	it	cc
 80148c6:	6105      	strcc	r5, [r0, #16]
 80148c8:	6082      	str	r2, [r0, #8]
 80148ca:	6903      	ldr	r3, [r0, #16]
 80148cc:	9a03      	ldr	r2, [sp, #12]
 80148ce:	805a      	strh	r2, [r3, #2]
 80148d0:	2200      	movs	r2, #0
 80148d2:	801e      	strh	r6, [r3, #0]
 80148d4:	809a      	strh	r2, [r3, #4]
 80148d6:	80da      	strh	r2, [r3, #6]
 80148d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80148da:	9a03      	ldr	r2, [sp, #12]
 80148dc:	6901      	ldr	r1, [r0, #16]
 80148de:	441a      	add	r2, r3
 80148e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80148e4:	42b3      	cmp	r3, r6
 80148e6:	d103      	bne.n	80148f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80148e8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80148ec:	429a      	cmp	r2, r3
 80148ee:	d01a      	beq.n	8014926 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80148f0:	88cc      	ldrh	r4, [r1, #6]
 80148f2:	888b      	ldrh	r3, [r1, #4]
 80148f4:	4323      	orrs	r3, r4
 80148f6:	d010      	beq.n	801491a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80148fc:	2c00      	cmp	r4, #0
 80148fe:	db0c      	blt.n	801491a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014900:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014902:	429c      	cmp	r4, r3
 8014904:	da09      	bge.n	801491a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014906:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801490a:	429c      	cmp	r4, r3
 801490c:	bf38      	it	cc
 801490e:	3108      	addcc	r1, #8
 8014910:	f104 0401 	add.w	r4, r4, #1
 8014914:	bf38      	it	cc
 8014916:	6101      	strcc	r1, [r0, #16]
 8014918:	6084      	str	r4, [r0, #8]
 801491a:	6903      	ldr	r3, [r0, #16]
 801491c:	2100      	movs	r1, #0
 801491e:	801e      	strh	r6, [r3, #0]
 8014920:	805a      	strh	r2, [r3, #2]
 8014922:	8099      	strh	r1, [r3, #4]
 8014924:	80d9      	strh	r1, [r3, #6]
 8014926:	9b06      	ldr	r3, [sp, #24]
 8014928:	4293      	cmp	r3, r2
 801492a:	f000 8082 	beq.w	8014a32 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801492e:	9b08      	ldr	r3, [sp, #32]
 8014930:	9c02      	ldr	r4, [sp, #8]
 8014932:	9902      	ldr	r1, [sp, #8]
 8014934:	015b      	lsls	r3, r3, #5
 8014936:	fb93 f1f1 	sdiv	r1, r3, r1
 801493a:	fb04 3311 	mls	r3, r4, r1, r3
 801493e:	2b00      	cmp	r3, #0
 8014940:	9103      	str	r1, [sp, #12]
 8014942:	9308      	str	r3, [sp, #32]
 8014944:	da04      	bge.n	8014950 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014946:	1e4b      	subs	r3, r1, #1
 8014948:	9303      	str	r3, [sp, #12]
 801494a:	9b08      	ldr	r3, [sp, #32]
 801494c:	4423      	add	r3, r4
 801494e:	9308      	str	r3, [sp, #32]
 8014950:	9b07      	ldr	r3, [sp, #28]
 8014952:	9902      	ldr	r1, [sp, #8]
 8014954:	1a5b      	subs	r3, r3, r1
 8014956:	9307      	str	r3, [sp, #28]
 8014958:	9b01      	ldr	r3, [sp, #4]
 801495a:	f1c3 0320 	rsb	r3, r3, #32
 801495e:	930e      	str	r3, [sp, #56]	; 0x38
 8014960:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014962:	9b01      	ldr	r3, [sp, #4]
 8014964:	1a5b      	subs	r3, r3, r1
 8014966:	464f      	mov	r7, r9
 8014968:	930a      	str	r3, [sp, #40]	; 0x28
 801496a:	2600      	movs	r6, #0
 801496c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014970:	185b      	adds	r3, r3, r1
 8014972:	bf58      	it	pl
 8014974:	9902      	ldrpl	r1, [sp, #8]
 8014976:	9307      	str	r3, [sp, #28]
 8014978:	bf5d      	ittte	pl
 801497a:	1a5b      	subpl	r3, r3, r1
 801497c:	9307      	strpl	r3, [sp, #28]
 801497e:	9b03      	ldrpl	r3, [sp, #12]
 8014980:	9903      	ldrmi	r1, [sp, #12]
 8014982:	bf58      	it	pl
 8014984:	1c59      	addpl	r1, r3, #1
 8014986:	4489      	add	r9, r1
 8014988:	2a00      	cmp	r2, #0
 801498a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801498e:	db2e      	blt.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014990:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014992:	4293      	cmp	r3, r2
 8014994:	dd2b      	ble.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014996:	9c01      	ldr	r4, [sp, #4]
 8014998:	6905      	ldr	r5, [r0, #16]
 801499a:	46a0      	mov	r8, r4
 801499c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801499e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80149a2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80149a6:	45a0      	cmp	r8, r4
 80149a8:	f040 814f 	bne.w	8014c4a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80149ac:	f9b5 1000 	ldrsh.w	r1, [r5]
 80149b0:	4551      	cmp	r1, sl
 80149b2:	d103      	bne.n	80149bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80149b4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80149b8:	4291      	cmp	r1, r2
 80149ba:	d018      	beq.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80149bc:	ea5c 010e 	orrs.w	r1, ip, lr
 80149c0:	d00f      	beq.n	80149e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80149c2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80149c6:	2900      	cmp	r1, #0
 80149c8:	db0b      	blt.n	80149e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80149ca:	428b      	cmp	r3, r1
 80149cc:	dd09      	ble.n	80149e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80149ce:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80149d2:	4299      	cmp	r1, r3
 80149d4:	bf38      	it	cc
 80149d6:	3508      	addcc	r5, #8
 80149d8:	f101 0101 	add.w	r1, r1, #1
 80149dc:	bf38      	it	cc
 80149de:	6105      	strcc	r5, [r0, #16]
 80149e0:	6081      	str	r1, [r0, #8]
 80149e2:	6903      	ldr	r3, [r0, #16]
 80149e4:	f8a3 a000 	strh.w	sl, [r3]
 80149e8:	805a      	strh	r2, [r3, #2]
 80149ea:	809e      	strh	r6, [r3, #4]
 80149ec:	80de      	strh	r6, [r3, #6]
 80149ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80149f0:	6901      	ldr	r1, [r0, #16]
 80149f2:	441a      	add	r2, r3
 80149f4:	88cc      	ldrh	r4, [r1, #6]
 80149f6:	888b      	ldrh	r3, [r1, #4]
 80149f8:	4323      	orrs	r3, r4
 80149fa:	d010      	beq.n	8014a1e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014a00:	2c00      	cmp	r4, #0
 8014a02:	db0c      	blt.n	8014a1e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014a04:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014a06:	429c      	cmp	r4, r3
 8014a08:	da09      	bge.n	8014a1e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014a0a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014a0e:	429c      	cmp	r4, r3
 8014a10:	bf38      	it	cc
 8014a12:	3108      	addcc	r1, #8
 8014a14:	f104 0401 	add.w	r4, r4, #1
 8014a18:	bf38      	it	cc
 8014a1a:	6101      	strcc	r1, [r0, #16]
 8014a1c:	6084      	str	r4, [r0, #8]
 8014a1e:	6903      	ldr	r3, [r0, #16]
 8014a20:	f8a3 a000 	strh.w	sl, [r3]
 8014a24:	805a      	strh	r2, [r3, #2]
 8014a26:	809e      	strh	r6, [r3, #4]
 8014a28:	80de      	strh	r6, [r3, #6]
 8014a2a:	9b06      	ldr	r3, [sp, #24]
 8014a2c:	4293      	cmp	r3, r2
 8014a2e:	464f      	mov	r7, r9
 8014a30:	d19c      	bne.n	801496c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014a32:	9b01      	ldr	r3, [sp, #4]
 8014a34:	6907      	ldr	r7, [r0, #16]
 8014a36:	f1c3 0620 	rsb	r6, r3, #32
 8014a3a:	9b05      	ldr	r3, [sp, #20]
 8014a3c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014a40:	9b04      	ldr	r3, [sp, #16]
 8014a42:	429e      	cmp	r6, r3
 8014a44:	f040 81cc 	bne.w	8014de0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014a48:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014a4c:	459e      	cmp	lr, r3
 8014a4e:	d104      	bne.n	8014a5a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014a50:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a54:	429a      	cmp	r2, r3
 8014a56:	f43f ae36 	beq.w	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014a5a:	88f9      	ldrh	r1, [r7, #6]
 8014a5c:	88bb      	ldrh	r3, [r7, #4]
 8014a5e:	430b      	orrs	r3, r1
 8014a60:	d010      	beq.n	8014a84 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a62:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a66:	2b00      	cmp	r3, #0
 8014a68:	db0c      	blt.n	8014a84 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a6a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014a6c:	428b      	cmp	r3, r1
 8014a6e:	da09      	bge.n	8014a84 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a70:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014a74:	428b      	cmp	r3, r1
 8014a76:	bf38      	it	cc
 8014a78:	3708      	addcc	r7, #8
 8014a7a:	f103 0301 	add.w	r3, r3, #1
 8014a7e:	bf38      	it	cc
 8014a80:	6107      	strcc	r7, [r0, #16]
 8014a82:	6083      	str	r3, [r0, #8]
 8014a84:	6903      	ldr	r3, [r0, #16]
 8014a86:	f8a3 e000 	strh.w	lr, [r3]
 8014a8a:	e5ff      	b.n	801468c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8014a8c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014a8e:	9c03      	ldr	r4, [sp, #12]
 8014a90:	42a2      	cmp	r2, r4
 8014a92:	f6ff ae18 	blt.w	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014a96:	9c06      	ldr	r4, [sp, #24]
 8014a98:	42a2      	cmp	r2, r4
 8014a9a:	bfb8      	it	lt
 8014a9c:	3201      	addlt	r2, #1
 8014a9e:	9c08      	ldr	r4, [sp, #32]
 8014aa0:	bfb8      	it	lt
 8014aa2:	9206      	strlt	r2, [sp, #24]
 8014aa4:	f1c3 0220 	rsb	r2, r3, #32
 8014aa8:	4362      	muls	r2, r4
 8014aaa:	2401      	movs	r4, #1
 8014aac:	940b      	str	r4, [sp, #44]	; 0x2c
 8014aae:	2420      	movs	r4, #32
 8014ab0:	e6d5      	b.n	801485e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8014ab2:	f009 021f 	and.w	r2, r9, #31
 8014ab6:	ea4f 1861 	mov.w	r8, r1, asr #5
 8014aba:	920c      	str	r2, [sp, #48]	; 0x30
 8014abc:	9a01      	ldr	r2, [sp, #4]
 8014abe:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014ac2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8014ac6:	45b0      	cmp	r8, r6
 8014ac8:	f001 011f 	and.w	r1, r1, #31
 8014acc:	eba2 0203 	sub.w	r2, r2, r3
 8014ad0:	d108      	bne.n	8014ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8014ad2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ad4:	4419      	add	r1, r3
 8014ad6:	4496      	add	lr, r2
 8014ad8:	fb02 a101 	mla	r1, r2, r1, sl
 8014adc:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014ae0:	80e9      	strh	r1, [r5, #6]
 8014ae2:	e6f9      	b.n	80148d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014ae4:	2c00      	cmp	r4, #0
 8014ae6:	f2c0 80a9 	blt.w	8014c3c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8014aea:	2701      	movs	r7, #1
 8014aec:	f1c1 0c20 	rsb	ip, r1, #32
 8014af0:	970a      	str	r7, [sp, #40]	; 0x28
 8014af2:	fb02 f20c 	mul.w	r2, r2, ip
 8014af6:	2720      	movs	r7, #32
 8014af8:	9709      	str	r7, [sp, #36]	; 0x24
 8014afa:	fb92 fcf4 	sdiv	ip, r2, r4
 8014afe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014b00:	fb04 221c 	mls	r2, r4, ip, r2
 8014b04:	2a00      	cmp	r2, #0
 8014b06:	bfb8      	it	lt
 8014b08:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014b0c:	4439      	add	r1, r7
 8014b0e:	fb0c a101 	mla	r1, ip, r1, sl
 8014b12:	80e9      	strh	r1, [r5, #6]
 8014b14:	44e6      	add	lr, ip
 8014b16:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014b18:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014b1c:	eb08 0501 	add.w	r5, r8, r1
 8014b20:	6901      	ldr	r1, [r0, #16]
 8014b22:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014b26:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014b2a:	bfb8      	it	lt
 8014b2c:	1912      	addlt	r2, r2, r4
 8014b2e:	ea58 070e 	orrs.w	r7, r8, lr
 8014b32:	d010      	beq.n	8014b56 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b34:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014b38:	f1be 0f00 	cmp.w	lr, #0
 8014b3c:	db0b      	blt.n	8014b56 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b3e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014b40:	45be      	cmp	lr, r7
 8014b42:	da08      	bge.n	8014b56 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b44:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014b48:	45be      	cmp	lr, r7
 8014b4a:	bf3c      	itt	cc
 8014b4c:	3108      	addcc	r1, #8
 8014b4e:	6101      	strcc	r1, [r0, #16]
 8014b50:	f10e 0101 	add.w	r1, lr, #1
 8014b54:	6081      	str	r1, [r0, #8]
 8014b56:	6901      	ldr	r1, [r0, #16]
 8014b58:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014b5c:	800d      	strh	r5, [r1, #0]
 8014b5e:	f04f 0e00 	mov.w	lr, #0
 8014b62:	42ae      	cmp	r6, r5
 8014b64:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014b68:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014b6c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014b70:	4463      	add	r3, ip
 8014b72:	d054      	beq.n	8014c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014b74:	9901      	ldr	r1, [sp, #4]
 8014b76:	1ac9      	subs	r1, r1, r3
 8014b78:	4461      	add	r1, ip
 8014b7a:	0149      	lsls	r1, r1, #5
 8014b7c:	fb91 fef4 	sdiv	lr, r1, r4
 8014b80:	fb04 111e 	mls	r1, r4, lr, r1
 8014b84:	2900      	cmp	r1, #0
 8014b86:	bfb8      	it	lt
 8014b88:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014b8c:	f10e 0701 	add.w	r7, lr, #1
 8014b90:	bfb8      	it	lt
 8014b92:	1909      	addlt	r1, r1, r4
 8014b94:	1b12      	subs	r2, r2, r4
 8014b96:	970d      	str	r7, [sp, #52]	; 0x34
 8014b98:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8014b9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8014b9e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014ba2:	1852      	adds	r2, r2, r1
 8014ba4:	bf54      	ite	pl
 8014ba6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8014baa:	46f4      	movmi	ip, lr
 8014bac:	44e3      	add	fp, ip
 8014bae:	f8aa b004 	strh.w	fp, [sl, #4]
 8014bb2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014bb6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8014bba:	f8aa b006 	strh.w	fp, [sl, #6]
 8014bbe:	4463      	add	r3, ip
 8014bc0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014bc4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014bc8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014bcc:	bf58      	it	pl
 8014bce:	1b12      	subpl	r2, r2, r4
 8014bd0:	443d      	add	r5, r7
 8014bd2:	ea5b 070a 	orrs.w	r7, fp, sl
 8014bd6:	d014      	beq.n	8014c02 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014bd8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014bdc:	f1ba 0f00 	cmp.w	sl, #0
 8014be0:	db0f      	blt.n	8014c02 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014be2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014be4:	45ba      	cmp	sl, r7
 8014be6:	da0c      	bge.n	8014c02 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014be8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014bec:	45ba      	cmp	sl, r7
 8014bee:	bf38      	it	cc
 8014bf0:	f10c 0c08 	addcc.w	ip, ip, #8
 8014bf4:	f10a 0a01 	add.w	sl, sl, #1
 8014bf8:	bf38      	it	cc
 8014bfa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014bfe:	f8c0 a008 	str.w	sl, [r0, #8]
 8014c02:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014c06:	f04f 0700 	mov.w	r7, #0
 8014c0a:	42ae      	cmp	r6, r5
 8014c0c:	f8ac 5000 	strh.w	r5, [ip]
 8014c10:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014c14:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014c18:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014c1c:	d1bc      	bne.n	8014b98 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014c1e:	6904      	ldr	r4, [r0, #16]
 8014c20:	9a01      	ldr	r2, [sp, #4]
 8014c22:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014c24:	1ad3      	subs	r3, r2, r3
 8014c26:	88a2      	ldrh	r2, [r4, #4]
 8014c28:	441a      	add	r2, r3
 8014c2a:	80a2      	strh	r2, [r4, #4]
 8014c2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014c2e:	3120      	adds	r1, #32
 8014c30:	1a89      	subs	r1, r1, r2
 8014c32:	88e2      	ldrh	r2, [r4, #6]
 8014c34:	fb03 2301 	mla	r3, r3, r1, r2
 8014c38:	80e3      	strh	r3, [r4, #6]
 8014c3a:	e64d      	b.n	80148d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014c3c:	f04f 37ff 	mov.w	r7, #4294967295
 8014c40:	970a      	str	r7, [sp, #40]	; 0x28
 8014c42:	434a      	muls	r2, r1
 8014c44:	4264      	negs	r4, r4
 8014c46:	2700      	movs	r7, #0
 8014c48:	e756      	b.n	8014af8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8014c4a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014c4e:	f009 031f 	and.w	r3, r9, #31
 8014c52:	45d0      	cmp	r8, sl
 8014c54:	f007 071f 	and.w	r7, r7, #31
 8014c58:	930f      	str	r3, [sp, #60]	; 0x3c
 8014c5a:	fa1f fc8c 	uxth.w	ip, ip
 8014c5e:	fa1f fe8e 	uxth.w	lr, lr
 8014c62:	d10a      	bne.n	8014c7a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014c64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c66:	449c      	add	ip, r3
 8014c68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c6a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014c6e:	441f      	add	r7, r3
 8014c70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c72:	fb03 e707 	mla	r7, r3, r7, lr
 8014c76:	80ef      	strh	r7, [r5, #6]
 8014c78:	e6b9      	b.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014c7a:	2900      	cmp	r1, #0
 8014c7c:	f2c0 80a8 	blt.w	8014dd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014c80:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014c82:	f1c7 0320 	rsb	r3, r7, #32
 8014c86:	4363      	muls	r3, r4
 8014c88:	2401      	movs	r4, #1
 8014c8a:	940d      	str	r4, [sp, #52]	; 0x34
 8014c8c:	2420      	movs	r4, #32
 8014c8e:	940c      	str	r4, [sp, #48]	; 0x30
 8014c90:	fb93 f4f1 	sdiv	r4, r3, r1
 8014c94:	fb01 3b14 	mls	fp, r1, r4, r3
 8014c98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c9a:	f1bb 0f00 	cmp.w	fp, #0
 8014c9e:	bfb8      	it	lt
 8014ca0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014ca4:	441f      	add	r7, r3
 8014ca6:	fb04 e707 	mla	r7, r4, r7, lr
 8014caa:	44a4      	add	ip, r4
 8014cac:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014cb0:	80ef      	strh	r7, [r5, #6]
 8014cb2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014cb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014cb8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8014cbc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014cc0:	bfb8      	it	lt
 8014cc2:	448b      	addlt	fp, r1
 8014cc4:	eb08 0503 	add.w	r5, r8, r3
 8014cc8:	ea5e 0307 	orrs.w	r3, lr, r7
 8014ccc:	d011      	beq.n	8014cf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cce:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014cd2:	f1be 0f00 	cmp.w	lr, #0
 8014cd6:	db0c      	blt.n	8014cf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cd8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014cda:	45be      	cmp	lr, r7
 8014cdc:	da09      	bge.n	8014cf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cde:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014ce2:	45be      	cmp	lr, r7
 8014ce4:	bf3c      	itt	cc
 8014ce6:	f10c 0708 	addcc.w	r7, ip, #8
 8014cea:	6107      	strcc	r7, [r0, #16]
 8014cec:	f10e 0701 	add.w	r7, lr, #1
 8014cf0:	6087      	str	r7, [r0, #8]
 8014cf2:	6907      	ldr	r7, [r0, #16]
 8014cf4:	b213      	sxth	r3, r2
 8014cf6:	9310      	str	r3, [sp, #64]	; 0x40
 8014cf8:	807b      	strh	r3, [r7, #2]
 8014cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cfc:	803d      	strh	r5, [r7, #0]
 8014cfe:	4555      	cmp	r5, sl
 8014d00:	80be      	strh	r6, [r7, #4]
 8014d02:	80fe      	strh	r6, [r7, #6]
 8014d04:	eb04 0c03 	add.w	ip, r4, r3
 8014d08:	d051      	beq.n	8014dae <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8014d0a:	9b01      	ldr	r3, [sp, #4]
 8014d0c:	eba3 070c 	sub.w	r7, r3, ip
 8014d10:	443c      	add	r4, r7
 8014d12:	0164      	lsls	r4, r4, #5
 8014d14:	fb94 f8f1 	sdiv	r8, r4, r1
 8014d18:	fb01 4418 	mls	r4, r1, r8, r4
 8014d1c:	2c00      	cmp	r4, #0
 8014d1e:	bfb8      	it	lt
 8014d20:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014d24:	ebab 0301 	sub.w	r3, fp, r1
 8014d28:	f108 0701 	add.w	r7, r8, #1
 8014d2c:	bfb8      	it	lt
 8014d2e:	1864      	addlt	r4, r4, r1
 8014d30:	9309      	str	r3, [sp, #36]	; 0x24
 8014d32:	9711      	str	r7, [sp, #68]	; 0x44
 8014d34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d36:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d3a:	191b      	adds	r3, r3, r4
 8014d3c:	bf58      	it	pl
 8014d3e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014d40:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014d44:	9309      	str	r3, [sp, #36]	; 0x24
 8014d46:	bf48      	it	mi
 8014d48:	4647      	movmi	r7, r8
 8014d4a:	44bb      	add	fp, r7
 8014d4c:	f8ae b004 	strh.w	fp, [lr, #4]
 8014d50:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d54:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014d58:	f8ae b006 	strh.w	fp, [lr, #6]
 8014d5c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d60:	44bc      	add	ip, r7
 8014d62:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014d64:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d68:	443d      	add	r5, r7
 8014d6a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014d6e:	bf5c      	itt	pl
 8014d70:	1a5b      	subpl	r3, r3, r1
 8014d72:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014d74:	ea5b 0307 	orrs.w	r3, fp, r7
 8014d78:	d011      	beq.n	8014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d7a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014d7e:	f1bb 0f00 	cmp.w	fp, #0
 8014d82:	db0c      	blt.n	8014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d84:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014d86:	45bb      	cmp	fp, r7
 8014d88:	da09      	bge.n	8014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d8a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014d8e:	45bb      	cmp	fp, r7
 8014d90:	bf3c      	itt	cc
 8014d92:	f10e 0708 	addcc.w	r7, lr, #8
 8014d96:	6107      	strcc	r7, [r0, #16]
 8014d98:	f10b 0701 	add.w	r7, fp, #1
 8014d9c:	6087      	str	r7, [r0, #8]
 8014d9e:	6907      	ldr	r7, [r0, #16]
 8014da0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014da2:	803d      	strh	r5, [r7, #0]
 8014da4:	4555      	cmp	r5, sl
 8014da6:	807b      	strh	r3, [r7, #2]
 8014da8:	80be      	strh	r6, [r7, #4]
 8014daa:	80fe      	strh	r6, [r7, #6]
 8014dac:	d1c2      	bne.n	8014d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014dae:	9b01      	ldr	r3, [sp, #4]
 8014db0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014db2:	eba3 0c0c 	sub.w	ip, r3, ip
 8014db6:	6903      	ldr	r3, [r0, #16]
 8014db8:	8899      	ldrh	r1, [r3, #4]
 8014dba:	4461      	add	r1, ip
 8014dbc:	8099      	strh	r1, [r3, #4]
 8014dbe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014dc0:	3720      	adds	r7, #32
 8014dc2:	1a7f      	subs	r7, r7, r1
 8014dc4:	88d9      	ldrh	r1, [r3, #6]
 8014dc6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014dca:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014dce:	e60e      	b.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014dd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014dd2:	f04f 34ff 	mov.w	r4, #4294967295
 8014dd6:	940d      	str	r4, [sp, #52]	; 0x34
 8014dd8:	437b      	muls	r3, r7
 8014dda:	4249      	negs	r1, r1
 8014ddc:	2400      	movs	r4, #0
 8014dde:	e756      	b.n	8014c8e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014de0:	9905      	ldr	r1, [sp, #20]
 8014de2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014de6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014dea:	f001 011f 	and.w	r1, r1, #31
 8014dee:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014df2:	9102      	str	r1, [sp, #8]
 8014df4:	9904      	ldr	r1, [sp, #16]
 8014df6:	45f3      	cmp	fp, lr
 8014df8:	f009 0c1f 	and.w	ip, r9, #31
 8014dfc:	eba1 0406 	sub.w	r4, r1, r6
 8014e00:	d108      	bne.n	8014e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014e02:	9b02      	ldr	r3, [sp, #8]
 8014e04:	449c      	add	ip, r3
 8014e06:	44a0      	add	r8, r4
 8014e08:	fb04 a40c 	mla	r4, r4, ip, sl
 8014e0c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014e10:	80fc      	strh	r4, [r7, #6]
 8014e12:	e458      	b.n	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014e14:	9905      	ldr	r1, [sp, #20]
 8014e16:	ebb1 0109 	subs.w	r1, r1, r9
 8014e1a:	bf5b      	ittet	pl
 8014e1c:	f1cc 0520 	rsbpl	r5, ip, #32
 8014e20:	436c      	mulpl	r4, r5
 8014e22:	2500      	movmi	r5, #0
 8014e24:	2520      	movpl	r5, #32
 8014e26:	bf44      	itt	mi
 8014e28:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014e2c:	4249      	negmi	r1, r1
 8014e2e:	9501      	str	r5, [sp, #4]
 8014e30:	9b01      	ldr	r3, [sp, #4]
 8014e32:	fb94 f5f1 	sdiv	r5, r4, r1
 8014e36:	fb01 4415 	mls	r4, r1, r5, r4
 8014e3a:	bf54      	ite	pl
 8014e3c:	f04f 0901 	movpl.w	r9, #1
 8014e40:	f04f 39ff 	movmi.w	r9, #4294967295
 8014e44:	2c00      	cmp	r4, #0
 8014e46:	bfb8      	it	lt
 8014e48:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014e4c:	449c      	add	ip, r3
 8014e4e:	44a8      	add	r8, r5
 8014e50:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014e54:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014e58:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014e5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014e60:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014e64:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014e68:	bfb8      	it	lt
 8014e6a:	1864      	addlt	r4, r4, r1
 8014e6c:	ea58 0707 	orrs.w	r7, r8, r7
 8014e70:	eb0b 0309 	add.w	r3, fp, r9
 8014e74:	d011      	beq.n	8014e9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e76:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014e7a:	f1b8 0f00 	cmp.w	r8, #0
 8014e7e:	db0c      	blt.n	8014e9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e80:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014e82:	45b8      	cmp	r8, r7
 8014e84:	da09      	bge.n	8014e9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e86:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014e8a:	45b8      	cmp	r8, r7
 8014e8c:	bf3c      	itt	cc
 8014e8e:	f10c 0708 	addcc.w	r7, ip, #8
 8014e92:	6107      	strcc	r7, [r0, #16]
 8014e94:	f108 0701 	add.w	r7, r8, #1
 8014e98:	6087      	str	r7, [r0, #8]
 8014e9a:	6907      	ldr	r7, [r0, #16]
 8014e9c:	f04f 0c00 	mov.w	ip, #0
 8014ea0:	b212      	sxth	r2, r2
 8014ea2:	459e      	cmp	lr, r3
 8014ea4:	803b      	strh	r3, [r7, #0]
 8014ea6:	807a      	strh	r2, [r7, #2]
 8014ea8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014eac:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014eb0:	442e      	add	r6, r5
 8014eb2:	d04d      	beq.n	8014f50 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8014eb4:	9f04      	ldr	r7, [sp, #16]
 8014eb6:	1bbf      	subs	r7, r7, r6
 8014eb8:	443d      	add	r5, r7
 8014eba:	016d      	lsls	r5, r5, #5
 8014ebc:	fb95 f8f1 	sdiv	r8, r5, r1
 8014ec0:	fb01 5518 	mls	r5, r1, r8, r5
 8014ec4:	4565      	cmp	r5, ip
 8014ec6:	bfb8      	it	lt
 8014ec8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014ecc:	f108 0701 	add.w	r7, r8, #1
 8014ed0:	bfb8      	it	lt
 8014ed2:	186d      	addlt	r5, r5, r1
 8014ed4:	1a64      	subs	r4, r4, r1
 8014ed6:	9703      	str	r7, [sp, #12]
 8014ed8:	f04f 0a00 	mov.w	sl, #0
 8014edc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ee0:	1964      	adds	r4, r4, r5
 8014ee2:	bf58      	it	pl
 8014ee4:	9f03      	ldrpl	r7, [sp, #12]
 8014ee6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014eea:	bf48      	it	mi
 8014eec:	4647      	movmi	r7, r8
 8014eee:	44bb      	add	fp, r7
 8014ef0:	f8ac b004 	strh.w	fp, [ip, #4]
 8014ef4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ef8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014efc:	f8ac b006 	strh.w	fp, [ip, #6]
 8014f00:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014f04:	443e      	add	r6, r7
 8014f06:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014f0a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014f0e:	bf58      	it	pl
 8014f10:	1a64      	subpl	r4, r4, r1
 8014f12:	ea5b 0707 	orrs.w	r7, fp, r7
 8014f16:	444b      	add	r3, r9
 8014f18:	d011      	beq.n	8014f3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014f1a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014f1e:	f1bb 0f00 	cmp.w	fp, #0
 8014f22:	db0c      	blt.n	8014f3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014f24:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014f26:	45bb      	cmp	fp, r7
 8014f28:	da09      	bge.n	8014f3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014f2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014f2e:	45bb      	cmp	fp, r7
 8014f30:	bf3c      	itt	cc
 8014f32:	f10c 0708 	addcc.w	r7, ip, #8
 8014f36:	6107      	strcc	r7, [r0, #16]
 8014f38:	f10b 0701 	add.w	r7, fp, #1
 8014f3c:	6087      	str	r7, [r0, #8]
 8014f3e:	6907      	ldr	r7, [r0, #16]
 8014f40:	459e      	cmp	lr, r3
 8014f42:	803b      	strh	r3, [r7, #0]
 8014f44:	807a      	strh	r2, [r7, #2]
 8014f46:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014f4a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014f4e:	d1c5      	bne.n	8014edc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014f50:	9b04      	ldr	r3, [sp, #16]
 8014f52:	1b9e      	subs	r6, r3, r6
 8014f54:	6903      	ldr	r3, [r0, #16]
 8014f56:	889a      	ldrh	r2, [r3, #4]
 8014f58:	4432      	add	r2, r6
 8014f5a:	809a      	strh	r2, [r3, #4]
 8014f5c:	9a02      	ldr	r2, [sp, #8]
 8014f5e:	f102 0c20 	add.w	ip, r2, #32
 8014f62:	9a01      	ldr	r2, [sp, #4]
 8014f64:	ebac 0c02 	sub.w	ip, ip, r2
 8014f68:	88da      	ldrh	r2, [r3, #6]
 8014f6a:	fb06 260c 	mla	r6, r6, ip, r2
 8014f6e:	80de      	strh	r6, [r3, #6]
 8014f70:	f7ff bba9 	b.w	80146c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014f74 <_ZN8touchgfx7Outline6lineToEii>:
 8014f74:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f76:	079b      	lsls	r3, r3, #30
 8014f78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014f7a:	460e      	mov	r6, r1
 8014f7c:	4615      	mov	r5, r2
 8014f7e:	d511      	bpl.n	8014fa4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f80:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014f84:	ea86 0701 	eor.w	r7, r6, r1
 8014f88:	ea85 0302 	eor.w	r3, r5, r2
 8014f8c:	433b      	orrs	r3, r7
 8014f8e:	d009      	beq.n	8014fa4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f90:	4633      	mov	r3, r6
 8014f92:	9500      	str	r5, [sp, #0]
 8014f94:	f7ff fb3e 	bl	8014614 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014f98:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f9a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014f9e:	f043 0301 	orr.w	r3, r3, #1
 8014fa2:	6243      	str	r3, [r0, #36]	; 0x24
 8014fa4:	b003      	add	sp, #12
 8014fa6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014fa8 <_ZN8touchgfx7Outline6moveToEii>:
 8014fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014faa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014fac:	4615      	mov	r5, r2
 8014fae:	079a      	lsls	r2, r3, #30
 8014fb0:	4604      	mov	r4, r0
 8014fb2:	460e      	mov	r6, r1
 8014fb4:	d401      	bmi.n	8014fba <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014fb6:	f7ff faf9 	bl	80145ac <_ZN8touchgfx7Outline5resetEv>
 8014fba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014fbc:	07db      	lsls	r3, r3, #31
 8014fbe:	d504      	bpl.n	8014fca <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014fc0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014fc4:	4620      	mov	r0, r4
 8014fc6:	f7ff ffd5 	bl	8014f74 <_ZN8touchgfx7Outline6lineToEii>
 8014fca:	6923      	ldr	r3, [r4, #16]
 8014fcc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014fd0:	1170      	asrs	r0, r6, #5
 8014fd2:	4290      	cmp	r0, r2
 8014fd4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014fd8:	d103      	bne.n	8014fe2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014fda:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fde:	4291      	cmp	r1, r2
 8014fe0:	d01a      	beq.n	8015018 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014fe2:	88df      	ldrh	r7, [r3, #6]
 8014fe4:	889a      	ldrh	r2, [r3, #4]
 8014fe6:	433a      	orrs	r2, r7
 8014fe8:	d010      	beq.n	801500c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fee:	2a00      	cmp	r2, #0
 8014ff0:	db0c      	blt.n	801500c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014ff2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014ff4:	42ba      	cmp	r2, r7
 8014ff6:	da09      	bge.n	801500c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014ff8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014ffc:	42ba      	cmp	r2, r7
 8014ffe:	bf38      	it	cc
 8015000:	3308      	addcc	r3, #8
 8015002:	f102 0201 	add.w	r2, r2, #1
 8015006:	bf38      	it	cc
 8015008:	6123      	strcc	r3, [r4, #16]
 801500a:	60a2      	str	r2, [r4, #8]
 801500c:	6923      	ldr	r3, [r4, #16]
 801500e:	2200      	movs	r2, #0
 8015010:	8018      	strh	r0, [r3, #0]
 8015012:	8059      	strh	r1, [r3, #2]
 8015014:	809a      	strh	r2, [r3, #4]
 8015016:	80da      	strh	r2, [r3, #6]
 8015018:	6166      	str	r6, [r4, #20]
 801501a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801501e:	6225      	str	r5, [r4, #32]
 8015020:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015022 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8015022:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015026:	b0d0      	sub	sp, #320	; 0x140
 8015028:	466c      	mov	r4, sp
 801502a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801502e:	4627      	mov	r7, r4
 8015030:	1a0d      	subs	r5, r1, r0
 8015032:	2d48      	cmp	r5, #72	; 0x48
 8015034:	f100 0308 	add.w	r3, r0, #8
 8015038:	f340 80d5 	ble.w	80151e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801503c:	112d      	asrs	r5, r5, #4
 801503e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8015042:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015046:	6816      	ldr	r6, [r2, #0]
 8015048:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801504c:	6006      	str	r6, [r0, #0]
 801504e:	6856      	ldr	r6, [r2, #4]
 8015050:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015054:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015058:	6046      	str	r6, [r0, #4]
 801505a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801505e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8015062:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015066:	f8a2 c006 	strh.w	ip, [r2, #6]
 801506a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801506e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8015072:	4565      	cmp	r5, ip
 8015074:	f1a1 0208 	sub.w	r2, r1, #8
 8015078:	db06      	blt.n	8015088 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801507a:	d119      	bne.n	80150b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801507c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015080:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8015084:	42ae      	cmp	r6, r5
 8015086:	dd13      	ble.n	80150b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015088:	460e      	mov	r6, r1
 801508a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801508e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015092:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8015096:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801509a:	601d      	str	r5, [r3, #0]
 801509c:	6875      	ldr	r5, [r6, #4]
 801509e:	605d      	str	r5, [r3, #4]
 80150a0:	f821 9c08 	strh.w	r9, [r1, #-8]
 80150a4:	f821 cc06 	strh.w	ip, [r1, #-6]
 80150a8:	f821 8c04 	strh.w	r8, [r1, #-4]
 80150ac:	f821 ec02 	strh.w	lr, [r1, #-2]
 80150b0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80150b4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80150b8:	42ae      	cmp	r6, r5
 80150ba:	db06      	blt.n	80150ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80150bc:	d116      	bne.n	80150ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80150be:	f9b0 c000 	ldrsh.w	ip, [r0]
 80150c2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80150c6:	45ac      	cmp	ip, r5
 80150c8:	da10      	bge.n	80150ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80150ca:	681d      	ldr	r5, [r3, #0]
 80150cc:	f9b0 8000 	ldrsh.w	r8, [r0]
 80150d0:	6005      	str	r5, [r0, #0]
 80150d2:	685d      	ldr	r5, [r3, #4]
 80150d4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80150d8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80150dc:	f8a0 8008 	strh.w	r8, [r0, #8]
 80150e0:	6045      	str	r5, [r0, #4]
 80150e2:	8146      	strh	r6, [r0, #10]
 80150e4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80150e8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80150ec:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80150f0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80150f4:	4565      	cmp	r5, ip
 80150f6:	db06      	blt.n	8015106 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80150f8:	d119      	bne.n	801512e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150fa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80150fe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015102:	42ae      	cmp	r6, r5
 8015104:	da13      	bge.n	801512e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015106:	460e      	mov	r6, r1
 8015108:	f9b0 9000 	ldrsh.w	r9, [r0]
 801510c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015110:	6005      	str	r5, [r0, #0]
 8015112:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8015116:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801511a:	6875      	ldr	r5, [r6, #4]
 801511c:	6045      	str	r5, [r0, #4]
 801511e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015122:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015126:	f821 8c04 	strh.w	r8, [r1, #-4]
 801512a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801512e:	3308      	adds	r3, #8
 8015130:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015134:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8015138:	45e6      	cmp	lr, ip
 801513a:	dbf8      	blt.n	801512e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801513c:	d105      	bne.n	801514a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801513e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015142:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015146:	42ae      	cmp	r6, r5
 8015148:	dbf1      	blt.n	801512e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801514a:	4615      	mov	r5, r2
 801514c:	3a08      	subs	r2, #8
 801514e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8015152:	45b4      	cmp	ip, r6
 8015154:	dbf9      	blt.n	801514a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015156:	d105      	bne.n	8015164 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8015158:	f9b0 8000 	ldrsh.w	r8, [r0]
 801515c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015160:	45b0      	cmp	r8, r6
 8015162:	dbf2      	blt.n	801514a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015164:	4293      	cmp	r3, r2
 8015166:	f1a5 0608 	sub.w	r6, r5, #8
 801516a:	d816      	bhi.n	801519a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801516c:	f8d6 c000 	ldr.w	ip, [r6]
 8015170:	f9b3 a000 	ldrsh.w	sl, [r3]
 8015174:	f8c3 c000 	str.w	ip, [r3]
 8015178:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801517c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015180:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8015184:	f8c3 c004 	str.w	ip, [r3, #4]
 8015188:	f825 ac08 	strh.w	sl, [r5, #-8]
 801518c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015190:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015194:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015198:	e7c9      	b.n	801512e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801519a:	f8d6 e000 	ldr.w	lr, [r6]
 801519e:	f9b0 a000 	ldrsh.w	sl, [r0]
 80151a2:	f8c0 e000 	str.w	lr, [r0]
 80151a6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80151aa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80151ae:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80151b2:	f8c0 e004 	str.w	lr, [r0, #4]
 80151b6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80151ba:	f825 cc06 	strh.w	ip, [r5, #-6]
 80151be:	f825 9c04 	strh.w	r9, [r5, #-4]
 80151c2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80151c6:	1acd      	subs	r5, r1, r3
 80151c8:	1a16      	subs	r6, r2, r0
 80151ca:	10ed      	asrs	r5, r5, #3
 80151cc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80151d0:	bfb5      	itete	lt
 80151d2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80151d6:	e9c4 3100 	strdge	r3, r1, [r4]
 80151da:	460a      	movlt	r2, r1
 80151dc:	4603      	movge	r3, r0
 80151de:	3408      	adds	r4, #8
 80151e0:	4618      	mov	r0, r3
 80151e2:	4611      	mov	r1, r2
 80151e4:	e724      	b.n	8015030 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80151e6:	4299      	cmp	r1, r3
 80151e8:	d928      	bls.n	801523c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80151ea:	f1a3 0210 	sub.w	r2, r3, #16
 80151ee:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80151f2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80151f6:	45ac      	cmp	ip, r5
 80151f8:	db06      	blt.n	8015208 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80151fa:	d11d      	bne.n	8015238 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80151fc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8015200:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8015204:	42ae      	cmp	r6, r5
 8015206:	da17      	bge.n	8015238 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8015208:	4615      	mov	r5, r2
 801520a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801520e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8015212:	6116      	str	r6, [r2, #16]
 8015214:	686e      	ldr	r6, [r5, #4]
 8015216:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801521a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801521e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8015222:	42a8      	cmp	r0, r5
 8015224:	6156      	str	r6, [r2, #20]
 8015226:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801522a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801522e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8015232:	f1a2 0208 	sub.w	r2, r2, #8
 8015236:	d1da      	bne.n	80151ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8015238:	3308      	adds	r3, #8
 801523a:	e7d4      	b.n	80151e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801523c:	42bc      	cmp	r4, r7
 801523e:	d903      	bls.n	8015248 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8015240:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015244:	3c08      	subs	r4, #8
 8015246:	e6f3      	b.n	8015030 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015248:	b050      	add	sp, #320	; 0x140
 801524a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801524e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801524e:	b510      	push	{r4, lr}
 8015250:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015252:	07da      	lsls	r2, r3, #31
 8015254:	4604      	mov	r4, r0
 8015256:	d507      	bpl.n	8015268 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8015258:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801525c:	f7ff fe8a 	bl	8014f74 <_ZN8touchgfx7Outline6lineToEii>
 8015260:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015262:	f023 0301 	bic.w	r3, r3, #1
 8015266:	6243      	str	r3, [r0, #36]	; 0x24
 8015268:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801526a:	079b      	lsls	r3, r3, #30
 801526c:	d521      	bpl.n	80152b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801526e:	6923      	ldr	r3, [r4, #16]
 8015270:	88d9      	ldrh	r1, [r3, #6]
 8015272:	889a      	ldrh	r2, [r3, #4]
 8015274:	430a      	orrs	r2, r1
 8015276:	d010      	beq.n	801529a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015278:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801527c:	2a00      	cmp	r2, #0
 801527e:	db0c      	blt.n	801529a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015280:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8015282:	428a      	cmp	r2, r1
 8015284:	da09      	bge.n	801529a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015286:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801528a:	4291      	cmp	r1, r2
 801528c:	bf88      	it	hi
 801528e:	3308      	addhi	r3, #8
 8015290:	f102 0201 	add.w	r2, r2, #1
 8015294:	bf88      	it	hi
 8015296:	6123      	strhi	r3, [r4, #16]
 8015298:	60a2      	str	r2, [r4, #8]
 801529a:	68a1      	ldr	r1, [r4, #8]
 801529c:	b129      	cbz	r1, 80152aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801529e:	6863      	ldr	r3, [r4, #4]
 80152a0:	4299      	cmp	r1, r3
 80152a2:	d802      	bhi.n	80152aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80152a4:	68e0      	ldr	r0, [r4, #12]
 80152a6:	f7ff febc 	bl	8015022 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80152aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80152ac:	f023 0302 	bic.w	r3, r3, #2
 80152b0:	6263      	str	r3, [r4, #36]	; 0x24
 80152b2:	68e0      	ldr	r0, [r4, #12]
 80152b4:	bd10      	pop	{r4, pc}
	...

080152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80152b8:	4b02      	ldr	r3, [pc, #8]	; (80152c4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80152ba:	6018      	str	r0, [r3, #0]
 80152bc:	4b02      	ldr	r3, [pc, #8]	; (80152c8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80152be:	6019      	str	r1, [r3, #0]
 80152c0:	4770      	bx	lr
 80152c2:	bf00      	nop
 80152c4:	2001383c 	.word	0x2001383c
 80152c8:	20013840 	.word	0x20013840

080152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80152cc:	4a02      	ldr	r2, [pc, #8]	; (80152d8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80152ce:	2300      	movs	r3, #0
 80152d0:	6013      	str	r3, [r2, #0]
 80152d2:	4a02      	ldr	r2, [pc, #8]	; (80152dc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80152d4:	6013      	str	r3, [r2, #0]
 80152d6:	4770      	bx	lr
 80152d8:	2001383c 	.word	0x2001383c
 80152dc:	20013840 	.word	0x20013840

080152e0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80152e0:	4b01      	ldr	r3, [pc, #4]	; (80152e8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80152e2:	6818      	ldr	r0, [r3, #0]
 80152e4:	4770      	bx	lr
 80152e6:	bf00      	nop
 80152e8:	2001383c 	.word	0x2001383c

080152ec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80152ec:	4b01      	ldr	r3, [pc, #4]	; (80152f4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80152ee:	6818      	ldr	r0, [r3, #0]
 80152f0:	4770      	bx	lr
 80152f2:	bf00      	nop
 80152f4:	20013840 	.word	0x20013840

080152f8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80152f8:	b510      	push	{r4, lr}
 80152fa:	6803      	ldr	r3, [r0, #0]
 80152fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80152fe:	460c      	mov	r4, r1
 8015300:	4798      	blx	r3
 8015302:	1b03      	subs	r3, r0, r4
 8015304:	4258      	negs	r0, r3
 8015306:	4158      	adcs	r0, r3
 8015308:	bd10      	pop	{r4, pc}
	...

0801530c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801530c:	4b01      	ldr	r3, [pc, #4]	; (8015314 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801530e:	6019      	str	r1, [r3, #0]
 8015310:	4770      	bx	lr
 8015312:	bf00      	nop
 8015314:	20013844 	.word	0x20013844

08015318 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801531c:	4696      	mov	lr, r2
 801531e:	4605      	mov	r5, r0
 8015320:	4614      	mov	r4, r2
 8015322:	460e      	mov	r6, r1
 8015324:	461f      	mov	r7, r3
 8015326:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801532a:	b097      	sub	sp, #92	; 0x5c
 801532c:	f10d 0c1c 	add.w	ip, sp, #28
 8015330:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015334:	f8de 3000 	ldr.w	r3, [lr]
 8015338:	f8cc 3000 	str.w	r3, [ip]
 801533c:	f104 0e14 	add.w	lr, r4, #20
 8015340:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015344:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015348:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801534c:	f8de 3000 	ldr.w	r3, [lr]
 8015350:	f8cc 3000 	str.w	r3, [ip]
 8015354:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015358:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801535c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8015360:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015364:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8015368:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801536c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8015370:	f8de 3000 	ldr.w	r3, [lr]
 8015374:	f8cc 3000 	str.w	r3, [ip]
 8015378:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801537a:	682b      	ldr	r3, [r5, #0]
 801537c:	9201      	str	r2, [sp, #4]
 801537e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015382:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015384:	9200      	str	r2, [sp, #0]
 8015386:	f8cd 8008 	str.w	r8, [sp, #8]
 801538a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801538e:	aa07      	add	r2, sp, #28
 8015390:	463b      	mov	r3, r7
 8015392:	4631      	mov	r1, r6
 8015394:	4628      	mov	r0, r5
 8015396:	47d8      	blx	fp
 8015398:	46a6      	mov	lr, r4
 801539a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801539e:	f10d 0c1c 	add.w	ip, sp, #28
 80153a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80153a6:	f8de 3000 	ldr.w	r3, [lr]
 80153aa:	f8cc 3000 	str.w	r3, [ip]
 80153ae:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80153b2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80153b6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80153ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80153be:	343c      	adds	r4, #60	; 0x3c
 80153c0:	f8de 3000 	ldr.w	r3, [lr]
 80153c4:	f8cc 3000 	str.w	r3, [ip]
 80153c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80153ca:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80153ce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80153d2:	6823      	ldr	r3, [r4, #0]
 80153d4:	f8cc 3000 	str.w	r3, [ip]
 80153d8:	682b      	ldr	r3, [r5, #0]
 80153da:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80153de:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80153e0:	9201      	str	r2, [sp, #4]
 80153e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80153e4:	9200      	str	r2, [sp, #0]
 80153e6:	f8cd 8008 	str.w	r8, [sp, #8]
 80153ea:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80153ec:	aa07      	add	r2, sp, #28
 80153ee:	463b      	mov	r3, r7
 80153f0:	4631      	mov	r1, r6
 80153f2:	4628      	mov	r0, r5
 80153f4:	47a0      	blx	r4
 80153f6:	b017      	add	sp, #92	; 0x5c
 80153f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80153fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015400:	b08d      	sub	sp, #52	; 0x34
 8015402:	4688      	mov	r8, r1
 8015404:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015406:	f8d3 c000 	ldr.w	ip, [r3]
 801540a:	680f      	ldr	r7, [r1, #0]
 801540c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8015410:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8015414:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8015418:	edd3 6a07 	vldr	s13, [r3, #28]
 801541c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801541e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8015422:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015426:	f9ba 1000 	ldrsh.w	r1, [sl]
 801542a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801542e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8015432:	eba7 070c 	sub.w	r7, r7, ip
 8015436:	42bc      	cmp	r4, r7
 8015438:	bfa8      	it	ge
 801543a:	463c      	movge	r4, r7
 801543c:	ee07 4a90 	vmov	s15, r4
 8015440:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015444:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8015448:	ee25 4a04 	vmul.f32	s8, s10, s8
 801544c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015450:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015454:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8015458:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801545c:	eb09 0e0c 	add.w	lr, r9, ip
 8015460:	4571      	cmp	r1, lr
 8015462:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015466:	ee32 1a05 	vadd.f32	s2, s4, s10
 801546a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801546e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015472:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015476:	f340 808d 	ble.w	8015594 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801547a:	eba1 060e 	sub.w	r6, r1, lr
 801547e:	fb96 f5f4 	sdiv	r5, r6, r4
 8015482:	ee07 5a10 	vmov	s14, r5
 8015486:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801548a:	2d00      	cmp	r5, #0
 801548c:	fb04 6615 	mls	r6, r4, r5, r6
 8015490:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015494:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015498:	eea7 1a05 	vfma.f32	s2, s14, s10
 801549c:	dd13      	ble.n	80154c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801549e:	ee70 6a44 	vsub.f32	s13, s0, s8
 80154a2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80154a6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80154aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154ae:	bf18      	it	ne
 80154b0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80154b4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80154b8:	bf08      	it	eq
 80154ba:	eeb0 7a67 	vmoveq.f32	s14, s15
 80154be:	ee61 1a87 	vmul.f32	s3, s3, s14
 80154c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80154c6:	fb05 f204 	mul.w	r2, r5, r4
 80154ca:	1abf      	subs	r7, r7, r2
 80154cc:	4494      	add	ip, r2
 80154ce:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80154d2:	4411      	add	r1, r2
 80154d4:	eb09 020c 	add.w	r2, r9, ip
 80154d8:	443a      	add	r2, r7
 80154da:	b209      	sxth	r1, r1
 80154dc:	428a      	cmp	r2, r1
 80154de:	bfc4      	itt	gt
 80154e0:	eba1 0209 	subgt.w	r2, r1, r9
 80154e4:	eba2 070c 	subgt.w	r7, r2, ip
 80154e8:	2f00      	cmp	r7, #0
 80154ea:	dd50      	ble.n	801558e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80154ec:	fb97 f1f4 	sdiv	r1, r7, r4
 80154f0:	fb04 7211 	mls	r2, r4, r1, r7
 80154f4:	b90a      	cbnz	r2, 80154fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80154f6:	3901      	subs	r1, #1
 80154f8:	4622      	mov	r2, r4
 80154fa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80154fe:	6840      	ldr	r0, [r0, #4]
 8015500:	900b      	str	r0, [sp, #44]	; 0x2c
 8015502:	f8d0 a000 	ldr.w	sl, [r0]
 8015506:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8015508:	9008      	str	r0, [sp, #32]
 801550a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801550e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015510:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8015514:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8015518:	695b      	ldr	r3, [r3, #20]
 801551a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801551c:	445b      	add	r3, fp
 801551e:	eef0 6a42 	vmov.f32	s13, s4
 8015522:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015526:	ee21 3a23 	vmul.f32	s6, s2, s7
 801552a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801552e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015532:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015536:	9307      	str	r3, [sp, #28]
 8015538:	ee17 7a90 	vmov	r7, s15
 801553c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015540:	eeb0 7a61 	vmov.f32	s14, s3
 8015544:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015548:	ee16 3a90 	vmov	r3, s13
 801554c:	fb97 f7f4 	sdiv	r7, r7, r4
 8015550:	ee17 ca90 	vmov	ip, s15
 8015554:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015558:	fb9c fcf4 	sdiv	ip, ip, r4
 801555c:	fb0c 3306 	mla	r3, ip, r6, r3
 8015560:	9302      	str	r3, [sp, #8]
 8015562:	ee17 3a10 	vmov	r3, s14
 8015566:	44b6      	add	lr, r6
 8015568:	fb04 e505 	mla	r5, r4, r5, lr
 801556c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015570:	fb07 3706 	mla	r7, r7, r6, r3
 8015574:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015578:	e9cd 4700 	strd	r4, r7, [sp]
 801557c:	2900      	cmp	r1, #0
 801557e:	bfcc      	ite	gt
 8015580:	46a1      	movgt	r9, r4
 8015582:	4691      	movle	r9, r2
 8015584:	eba9 0306 	sub.w	r3, r9, r6
 8015588:	f8da 4008 	ldr.w	r4, [sl, #8]
 801558c:	47a0      	blx	r4
 801558e:	b00d      	add	sp, #52	; 0x34
 8015590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015594:	2500      	movs	r5, #0
 8015596:	462e      	mov	r6, r5
 8015598:	e799      	b.n	80154ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801559c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801559c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155a0:	b0db      	sub	sp, #364	; 0x16c
 80155a2:	461d      	mov	r5, r3
 80155a4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80155a8:	930a      	str	r3, [sp, #40]	; 0x28
 80155aa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80155ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80155b0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80155b4:	9310      	str	r3, [sp, #64]	; 0x40
 80155b6:	6803      	ldr	r3, [r0, #0]
 80155b8:	910f      	str	r1, [sp, #60]	; 0x3c
 80155ba:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80155bc:	9009      	str	r0, [sp, #36]	; 0x24
 80155be:	4614      	mov	r4, r2
 80155c0:	4629      	mov	r1, r5
 80155c2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80155c6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80155ca:	47b8      	blx	r7
 80155cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155ce:	6058      	str	r0, [r3, #4]
 80155d0:	2800      	cmp	r0, #0
 80155d2:	f000 83a1 	beq.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155d6:	682b      	ldr	r3, [r5, #0]
 80155d8:	9314      	str	r3, [sp, #80]	; 0x50
 80155da:	686b      	ldr	r3, [r5, #4]
 80155dc:	9315      	str	r3, [sp, #84]	; 0x54
 80155de:	4bc4      	ldr	r3, [pc, #784]	; (80158f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80155e0:	ed94 7a02 	vldr	s14, [r4, #8]
 80155e4:	7819      	ldrb	r1, [r3, #0]
 80155e6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80155ea:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80155ee:	2900      	cmp	r1, #0
 80155f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155f4:	bf16      	itet	ne
 80155f6:	4619      	movne	r1, r3
 80155f8:	4611      	moveq	r1, r2
 80155fa:	4613      	movne	r3, r2
 80155fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015600:	9116      	str	r1, [sp, #88]	; 0x58
 8015602:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8015606:	f240 8387 	bls.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801560a:	ed94 7a07 	vldr	s14, [r4, #28]
 801560e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015616:	f240 837f 	bls.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801561a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801561e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015626:	f240 8377 	bls.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801562a:	6822      	ldr	r2, [r4, #0]
 801562c:	4bb1      	ldr	r3, [pc, #708]	; (80158f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801562e:	429a      	cmp	r2, r3
 8015630:	f2c0 8372 	blt.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015634:	49b0      	ldr	r1, [pc, #704]	; (80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015636:	6963      	ldr	r3, [r4, #20]
 8015638:	428a      	cmp	r2, r1
 801563a:	f300 836d 	bgt.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801563e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015642:	48ae      	ldr	r0, [pc, #696]	; (80158fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015644:	33ff      	adds	r3, #255	; 0xff
 8015646:	4283      	cmp	r3, r0
 8015648:	f200 8366 	bhi.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801564c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801564e:	4dac      	ldr	r5, [pc, #688]	; (8015900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015650:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015654:	33ff      	adds	r3, #255	; 0xff
 8015656:	42ab      	cmp	r3, r5
 8015658:	f200 835e 	bhi.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801565c:	6862      	ldr	r2, [r4, #4]
 801565e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015662:	33ff      	adds	r3, #255	; 0xff
 8015664:	4283      	cmp	r3, r0
 8015666:	f200 8357 	bhi.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801566a:	69a1      	ldr	r1, [r4, #24]
 801566c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015670:	33ff      	adds	r3, #255	; 0xff
 8015672:	4283      	cmp	r3, r0
 8015674:	f200 8350 	bhi.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015678:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801567a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801567e:	30ff      	adds	r0, #255	; 0xff
 8015680:	42a8      	cmp	r0, r5
 8015682:	f200 8349 	bhi.w	8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015686:	428a      	cmp	r2, r1
 8015688:	f280 8110 	bge.w	80158ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801568c:	429a      	cmp	r2, r3
 801568e:	f300 8119 	bgt.w	80158c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015692:	4299      	cmp	r1, r3
 8015694:	f280 811d 	bge.w	80158d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015698:	2502      	movs	r5, #2
 801569a:	2701      	movs	r7, #1
 801569c:	46a9      	mov	r9, r5
 801569e:	46b8      	mov	r8, r7
 80156a0:	f04f 0a00 	mov.w	sl, #0
 80156a4:	4621      	mov	r1, r4
 80156a6:	a849      	add	r0, sp, #292	; 0x124
 80156a8:	f003 ff2a 	bl	8019500 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80156ac:	4622      	mov	r2, r4
 80156ae:	4653      	mov	r3, sl
 80156b0:	a949      	add	r1, sp, #292	; 0x124
 80156b2:	f8cd 9000 	str.w	r9, [sp]
 80156b6:	a819      	add	r0, sp, #100	; 0x64
 80156b8:	f004 f852 	bl	8019760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156bc:	4622      	mov	r2, r4
 80156be:	4653      	mov	r3, sl
 80156c0:	a949      	add	r1, sp, #292	; 0x124
 80156c2:	f8cd 8000 	str.w	r8, [sp]
 80156c6:	a829      	add	r0, sp, #164	; 0xa4
 80156c8:	f004 f84a 	bl	8019760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156cc:	4643      	mov	r3, r8
 80156ce:	4622      	mov	r2, r4
 80156d0:	a949      	add	r1, sp, #292	; 0x124
 80156d2:	f8cd 9000 	str.w	r9, [sp]
 80156d6:	a839      	add	r0, sp, #228	; 0xe4
 80156d8:	f004 f842 	bl	8019760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156dc:	42af      	cmp	r7, r5
 80156de:	bfb5      	itete	lt
 80156e0:	2300      	movlt	r3, #0
 80156e2:	2301      	movge	r3, #1
 80156e4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80156e6:	930e      	strge	r3, [sp, #56]	; 0x38
 80156e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80156ea:	e893 0003 	ldmia.w	r3, {r0, r1}
 80156ee:	af12      	add	r7, sp, #72	; 0x48
 80156f0:	bfb9      	ittee	lt
 80156f2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80156f4:	ac19      	addlt	r4, sp, #100	; 0x64
 80156f6:	ad19      	addge	r5, sp, #100	; 0x64
 80156f8:	ac29      	addge	r4, sp, #164	; 0xa4
 80156fa:	e887 0003 	stmia.w	r7, {r0, r1}
 80156fe:	b928      	cbnz	r0, 801570c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015700:	4b80      	ldr	r3, [pc, #512]	; (8015904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015702:	6818      	ldr	r0, [r3, #0]
 8015704:	6803      	ldr	r3, [r0, #0]
 8015706:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015708:	4798      	blx	r3
 801570a:	6038      	str	r0, [r7, #0]
 801570c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801570e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015712:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015716:	930c      	str	r3, [sp, #48]	; 0x30
 8015718:	990c      	ldr	r1, [sp, #48]	; 0x30
 801571a:	6963      	ldr	r3, [r4, #20]
 801571c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801571e:	440b      	add	r3, r1
 8015720:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015724:	4408      	add	r0, r1
 8015726:	b200      	sxth	r0, r0
 8015728:	4283      	cmp	r3, r0
 801572a:	900d      	str	r0, [sp, #52]	; 0x34
 801572c:	f280 80dd 	bge.w	80158ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015730:	428b      	cmp	r3, r1
 8015732:	da08      	bge.n	8015746 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015734:	2a00      	cmp	r2, #0
 8015736:	dd06      	ble.n	8015746 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015738:	1acb      	subs	r3, r1, r3
 801573a:	429a      	cmp	r2, r3
 801573c:	f2c0 80e4 	blt.w	8015908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015740:	2b00      	cmp	r3, #0
 8015742:	f300 80e2 	bgt.w	801590a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015746:	6967      	ldr	r7, [r4, #20]
 8015748:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801574a:	443b      	add	r3, r7
 801574c:	461f      	mov	r7, r3
 801574e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015750:	1bdf      	subs	r7, r3, r7
 8015752:	4297      	cmp	r7, r2
 8015754:	bfa8      	it	ge
 8015756:	4617      	movge	r7, r2
 8015758:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801575c:	2f00      	cmp	r7, #0
 801575e:	f340 8166 	ble.w	8015a2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015762:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015764:	6829      	ldr	r1, [r5, #0]
 8015766:	f9b3 2000 	ldrsh.w	r2, [r3]
 801576a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801576e:	6820      	ldr	r0, [r4, #0]
 8015770:	4411      	add	r1, r2
 8015772:	4299      	cmp	r1, r3
 8015774:	dd1a      	ble.n	80157ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015776:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801577a:	440b      	add	r3, r1
 801577c:	4402      	add	r2, r0
 801577e:	b21b      	sxth	r3, r3
 8015780:	429a      	cmp	r2, r3
 8015782:	dc13      	bgt.n	80157ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015784:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015786:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015788:	681b      	ldr	r3, [r3, #0]
 801578a:	9206      	str	r2, [sp, #24]
 801578c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801578e:	9205      	str	r2, [sp, #20]
 8015790:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015792:	9500      	str	r5, [sp, #0]
 8015794:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015798:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801579a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801579c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80157a0:	a912      	add	r1, sp, #72	; 0x48
 80157a2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80157a6:	aa49      	add	r2, sp, #292	; 0x124
 80157a8:	4623      	mov	r3, r4
 80157aa:	47c8      	blx	r9
 80157ac:	e9d4 2300 	ldrd	r2, r3, [r4]
 80157b0:	441a      	add	r2, r3
 80157b2:	6963      	ldr	r3, [r4, #20]
 80157b4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80157b8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80157bc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80157c0:	68a1      	ldr	r1, [r4, #8]
 80157c2:	ed94 6a08 	vldr	s12, [r4, #32]
 80157c6:	6022      	str	r2, [r4, #0]
 80157c8:	3301      	adds	r3, #1
 80157ca:	6163      	str	r3, [r4, #20]
 80157cc:	69a3      	ldr	r3, [r4, #24]
 80157ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80157d2:	3b01      	subs	r3, #1
 80157d4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80157d8:	61a3      	str	r3, [r4, #24]
 80157da:	6923      	ldr	r3, [r4, #16]
 80157dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80157e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80157e4:	edd4 6a07 	vldr	s13, [r4, #28]
 80157e8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80157ec:	440b      	add	r3, r1
 80157ee:	68e1      	ldr	r1, [r4, #12]
 80157f0:	6123      	str	r3, [r4, #16]
 80157f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80157f6:	428b      	cmp	r3, r1
 80157f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80157fc:	db15      	blt.n	801582a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80157fe:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015802:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015806:	3201      	adds	r2, #1
 8015808:	edc4 6a07 	vstr	s13, [r4, #28]
 801580c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015810:	6022      	str	r2, [r4, #0]
 8015812:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015816:	1a5b      	subs	r3, r3, r1
 8015818:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801581c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015820:	6123      	str	r3, [r4, #16]
 8015822:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015826:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801582a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801582e:	441a      	add	r2, r3
 8015830:	696b      	ldr	r3, [r5, #20]
 8015832:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015836:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801583a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801583e:	68a9      	ldr	r1, [r5, #8]
 8015840:	ed95 6a08 	vldr	s12, [r5, #32]
 8015844:	602a      	str	r2, [r5, #0]
 8015846:	3301      	adds	r3, #1
 8015848:	616b      	str	r3, [r5, #20]
 801584a:	69ab      	ldr	r3, [r5, #24]
 801584c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015850:	3b01      	subs	r3, #1
 8015852:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015856:	61ab      	str	r3, [r5, #24]
 8015858:	692b      	ldr	r3, [r5, #16]
 801585a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801585e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015862:	edd5 6a07 	vldr	s13, [r5, #28]
 8015866:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801586a:	440b      	add	r3, r1
 801586c:	68e9      	ldr	r1, [r5, #12]
 801586e:	612b      	str	r3, [r5, #16]
 8015870:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015874:	428b      	cmp	r3, r1
 8015876:	edc5 6a07 	vstr	s13, [r5, #28]
 801587a:	db15      	blt.n	80158a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801587c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015880:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015884:	3201      	adds	r2, #1
 8015886:	edc5 6a07 	vstr	s13, [r5, #28]
 801588a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801588e:	602a      	str	r2, [r5, #0]
 8015890:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015894:	1a5b      	subs	r3, r3, r1
 8015896:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801589a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801589e:	612b      	str	r3, [r5, #16]
 80158a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80158a4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80158a8:	3f01      	subs	r7, #1
 80158aa:	e757      	b.n	801575c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80158ac:	4299      	cmp	r1, r3
 80158ae:	dc13      	bgt.n	80158d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80158b0:	429a      	cmp	r2, r3
 80158b2:	da14      	bge.n	80158de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80158b4:	2502      	movs	r5, #2
 80158b6:	2703      	movs	r7, #3
 80158b8:	46a9      	mov	r9, r5
 80158ba:	f04f 0800 	mov.w	r8, #0
 80158be:	f04f 0a01 	mov.w	sl, #1
 80158c2:	e6ef      	b.n	80156a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80158c4:	2501      	movs	r5, #1
 80158c6:	2700      	movs	r7, #0
 80158c8:	46a9      	mov	r9, r5
 80158ca:	46b8      	mov	r8, r7
 80158cc:	f04f 0a02 	mov.w	sl, #2
 80158d0:	e6e8      	b.n	80156a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80158d2:	2501      	movs	r5, #1
 80158d4:	2702      	movs	r7, #2
 80158d6:	e6e1      	b.n	801569c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80158d8:	2500      	movs	r5, #0
 80158da:	2701      	movs	r7, #1
 80158dc:	e7f4      	b.n	80158c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80158de:	2702      	movs	r7, #2
 80158e0:	2503      	movs	r5, #3
 80158e2:	f04f 0900 	mov.w	r9, #0
 80158e6:	46b8      	mov	r8, r7
 80158e8:	e7e9      	b.n	80158be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80158ea:	4613      	mov	r3, r2
 80158ec:	e728      	b.n	8015740 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80158ee:	bf00      	nop
 80158f0:	2001382c 	.word	0x2001382c
 80158f4:	fffd8f01 	.word	0xfffd8f01
 80158f8:	00027100 	.word	0x00027100
 80158fc:	0004e1ff 	.word	0x0004e1ff
 8015900:	0004e1fe 	.word	0x0004e1fe
 8015904:	20013834 	.word	0x20013834
 8015908:	4613      	mov	r3, r2
 801590a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801590c:	9111      	str	r1, [sp, #68]	; 0x44
 801590e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015912:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015916:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015918:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801591c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015920:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015924:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015928:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801592c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015930:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015934:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015938:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801593c:	469e      	mov	lr, r3
 801593e:	469c      	mov	ip, r3
 8015940:	f04f 0900 	mov.w	r9, #0
 8015944:	f1bc 0f00 	cmp.w	ip, #0
 8015948:	d147      	bne.n	80159da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801594a:	eb03 0c07 	add.w	ip, r3, r7
 801594e:	1ad7      	subs	r7, r2, r3
 8015950:	f1b9 0f00 	cmp.w	r9, #0
 8015954:	d009      	beq.n	801596a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015956:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801595a:	9029      	str	r0, [sp, #164]	; 0xa4
 801595c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015960:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015964:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015968:	912d      	str	r1, [sp, #180]	; 0xb4
 801596a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801596c:	9111      	str	r1, [sp, #68]	; 0x44
 801596e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015972:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015976:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801597a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801597e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015982:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015986:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801598a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801598e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015992:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015996:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801599a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801599e:	f04f 0800 	mov.w	r8, #0
 80159a2:	f1be 0f00 	cmp.w	lr, #0
 80159a6:	d031      	beq.n	8015a0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80159a8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80159aa:	4431      	add	r1, r6
 80159ac:	4549      	cmp	r1, r9
 80159ae:	4450      	add	r0, sl
 80159b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80159b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80159b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80159bc:	db08      	blt.n	80159d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80159be:	ee77 7a85 	vadd.f32	s15, s15, s10
 80159c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80159c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80159ca:	3001      	adds	r0, #1
 80159cc:	eba1 0109 	sub.w	r1, r1, r9
 80159d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80159d4:	f04f 0801 	mov.w	r8, #1
 80159d8:	e7e3      	b.n	80159a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80159da:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80159dc:	4431      	add	r1, r6
 80159de:	4541      	cmp	r1, r8
 80159e0:	4450      	add	r0, sl
 80159e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80159e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80159ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80159ee:	db08      	blt.n	8015a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80159f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80159f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80159f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80159fc:	3001      	adds	r0, #1
 80159fe:	eba1 0108 	sub.w	r1, r1, r8
 8015a02:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015a06:	f04f 0901 	mov.w	r9, #1
 8015a0a:	e79b      	b.n	8015944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8015a0c:	449c      	add	ip, r3
 8015a0e:	1aff      	subs	r7, r7, r3
 8015a10:	f1b8 0f00 	cmp.w	r8, #0
 8015a14:	d009      	beq.n	8015a2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015a16:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015a1a:	9019      	str	r0, [sp, #100]	; 0x64
 8015a1c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015a20:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015a24:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015a28:	911d      	str	r1, [sp, #116]	; 0x74
 8015a2a:	1ad2      	subs	r2, r2, r3
 8015a2c:	e68b      	b.n	8015746 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015a2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a30:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015a32:	2b00      	cmp	r3, #0
 8015a34:	f000 80d1 	beq.w	8015bda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015a38:	ad19      	add	r5, sp, #100	; 0x64
 8015a3a:	ac39      	add	r4, sp, #228	; 0xe4
 8015a3c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015a3e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015a42:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015a46:	930c      	str	r3, [sp, #48]	; 0x30
 8015a48:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015a4a:	6963      	ldr	r3, [r4, #20]
 8015a4c:	440b      	add	r3, r1
 8015a4e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015a52:	4408      	add	r0, r1
 8015a54:	b200      	sxth	r0, r0
 8015a56:	4283      	cmp	r3, r0
 8015a58:	900d      	str	r0, [sp, #52]	; 0x34
 8015a5a:	f280 80c1 	bge.w	8015be0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015a5e:	428b      	cmp	r3, r1
 8015a60:	da08      	bge.n	8015a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a62:	2a00      	cmp	r2, #0
 8015a64:	dd06      	ble.n	8015a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a66:	1acb      	subs	r3, r1, r3
 8015a68:	429a      	cmp	r2, r3
 8015a6a:	f2c0 80bb 	blt.w	8015be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015a6e:	2b00      	cmp	r3, #0
 8015a70:	f300 80b9 	bgt.w	8015be6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015a74:	6967      	ldr	r7, [r4, #20]
 8015a76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a78:	443b      	add	r3, r7
 8015a7a:	461f      	mov	r7, r3
 8015a7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a7e:	1bdf      	subs	r7, r3, r7
 8015a80:	4297      	cmp	r7, r2
 8015a82:	bfa8      	it	ge
 8015a84:	4617      	movge	r7, r2
 8015a86:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015a8a:	2f00      	cmp	r7, #0
 8015a8c:	f340 813c 	ble.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015a90:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015a92:	6829      	ldr	r1, [r5, #0]
 8015a94:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a98:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015a9c:	6820      	ldr	r0, [r4, #0]
 8015a9e:	4411      	add	r1, r2
 8015aa0:	4299      	cmp	r1, r3
 8015aa2:	dd1a      	ble.n	8015ada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015aa4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015aa8:	440b      	add	r3, r1
 8015aaa:	4402      	add	r2, r0
 8015aac:	b21b      	sxth	r3, r3
 8015aae:	429a      	cmp	r2, r3
 8015ab0:	dc13      	bgt.n	8015ada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ab4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ab6:	681b      	ldr	r3, [r3, #0]
 8015ab8:	9206      	str	r2, [sp, #24]
 8015aba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015abc:	9205      	str	r2, [sp, #20]
 8015abe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015ac0:	9500      	str	r5, [sp, #0]
 8015ac2:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015ac6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015ac8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015aca:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015ace:	a912      	add	r1, sp, #72	; 0x48
 8015ad0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015ad4:	aa49      	add	r2, sp, #292	; 0x124
 8015ad6:	4623      	mov	r3, r4
 8015ad8:	47c8      	blx	r9
 8015ada:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015ade:	441a      	add	r2, r3
 8015ae0:	6963      	ldr	r3, [r4, #20]
 8015ae2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015ae6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015aea:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015aee:	68a1      	ldr	r1, [r4, #8]
 8015af0:	ed94 6a08 	vldr	s12, [r4, #32]
 8015af4:	6022      	str	r2, [r4, #0]
 8015af6:	3301      	adds	r3, #1
 8015af8:	6163      	str	r3, [r4, #20]
 8015afa:	69a3      	ldr	r3, [r4, #24]
 8015afc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015b00:	3b01      	subs	r3, #1
 8015b02:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015b06:	61a3      	str	r3, [r4, #24]
 8015b08:	6923      	ldr	r3, [r4, #16]
 8015b0a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015b0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015b12:	edd4 6a07 	vldr	s13, [r4, #28]
 8015b16:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015b1a:	440b      	add	r3, r1
 8015b1c:	68e1      	ldr	r1, [r4, #12]
 8015b1e:	6123      	str	r3, [r4, #16]
 8015b20:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015b24:	428b      	cmp	r3, r1
 8015b26:	edc4 6a07 	vstr	s13, [r4, #28]
 8015b2a:	db15      	blt.n	8015b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015b2c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015b30:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015b34:	3201      	adds	r2, #1
 8015b36:	edc4 6a07 	vstr	s13, [r4, #28]
 8015b3a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015b3e:	6022      	str	r2, [r4, #0]
 8015b40:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015b44:	1a5b      	subs	r3, r3, r1
 8015b46:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015b4a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015b4e:	6123      	str	r3, [r4, #16]
 8015b50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015b54:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015b58:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015b5c:	441a      	add	r2, r3
 8015b5e:	696b      	ldr	r3, [r5, #20]
 8015b60:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015b64:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015b68:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015b6c:	68a9      	ldr	r1, [r5, #8]
 8015b6e:	ed95 6a08 	vldr	s12, [r5, #32]
 8015b72:	602a      	str	r2, [r5, #0]
 8015b74:	3301      	adds	r3, #1
 8015b76:	616b      	str	r3, [r5, #20]
 8015b78:	69ab      	ldr	r3, [r5, #24]
 8015b7a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015b7e:	3b01      	subs	r3, #1
 8015b80:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015b84:	61ab      	str	r3, [r5, #24]
 8015b86:	692b      	ldr	r3, [r5, #16]
 8015b88:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015b8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015b90:	edd5 6a07 	vldr	s13, [r5, #28]
 8015b94:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015b98:	440b      	add	r3, r1
 8015b9a:	68e9      	ldr	r1, [r5, #12]
 8015b9c:	612b      	str	r3, [r5, #16]
 8015b9e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015ba2:	428b      	cmp	r3, r1
 8015ba4:	edc5 6a07 	vstr	s13, [r5, #28]
 8015ba8:	db15      	blt.n	8015bd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015baa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015bae:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015bb2:	3201      	adds	r2, #1
 8015bb4:	edc5 6a07 	vstr	s13, [r5, #28]
 8015bb8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015bbc:	602a      	str	r2, [r5, #0]
 8015bbe:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015bc2:	1a5b      	subs	r3, r3, r1
 8015bc4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015bc8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015bcc:	612b      	str	r3, [r5, #16]
 8015bce:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015bd2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015bd6:	3f01      	subs	r7, #1
 8015bd8:	e757      	b.n	8015a8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015bda:	ad39      	add	r5, sp, #228	; 0xe4
 8015bdc:	ac19      	add	r4, sp, #100	; 0x64
 8015bde:	e72d      	b.n	8015a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015be0:	4613      	mov	r3, r2
 8015be2:	e744      	b.n	8015a6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015be4:	4613      	mov	r3, r2
 8015be6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015bea:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015bec:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015bf0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015bf4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015bf8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015bfc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015c00:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015c04:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015c08:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015c0a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8015c0e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015c12:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015c16:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8015c1a:	960e      	str	r6, [sp, #56]	; 0x38
 8015c1c:	469e      	mov	lr, r3
 8015c1e:	461f      	mov	r7, r3
 8015c20:	f04f 0900 	mov.w	r9, #0
 8015c24:	2f00      	cmp	r7, #0
 8015c26:	d146      	bne.n	8015cb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015c28:	449c      	add	ip, r3
 8015c2a:	1ad7      	subs	r7, r2, r3
 8015c2c:	f1b9 0f00 	cmp.w	r9, #0
 8015c30:	d009      	beq.n	8015c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015c32:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015c36:	9039      	str	r0, [sp, #228]	; 0xe4
 8015c38:	913d      	str	r1, [sp, #244]	; 0xf4
 8015c3a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8015c3e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015c42:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015c46:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015c48:	910e      	str	r1, [sp, #56]	; 0x38
 8015c4a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015c4e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015c52:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015c56:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015c5a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015c5e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015c62:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015c66:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015c6a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015c6e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015c72:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015c76:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015c7a:	f04f 0800 	mov.w	r8, #0
 8015c7e:	f1be 0f00 	cmp.w	lr, #0
 8015c82:	d030      	beq.n	8015ce6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015c84:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015c86:	4431      	add	r1, r6
 8015c88:	4549      	cmp	r1, r9
 8015c8a:	4450      	add	r0, sl
 8015c8c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015c90:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015c94:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015c98:	db08      	blt.n	8015cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015c9a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015c9e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015ca2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015ca6:	3001      	adds	r0, #1
 8015ca8:	eba1 0109 	sub.w	r1, r1, r9
 8015cac:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015cb0:	f04f 0801 	mov.w	r8, #1
 8015cb4:	e7e3      	b.n	8015c7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015cb6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015cb8:	4431      	add	r1, r6
 8015cba:	4541      	cmp	r1, r8
 8015cbc:	4450      	add	r0, sl
 8015cbe:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015cc2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015cc6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015cca:	db08      	blt.n	8015cde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015ccc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015cd0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015cd4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015cd8:	3001      	adds	r0, #1
 8015cda:	eba1 0108 	sub.w	r1, r1, r8
 8015cde:	3f01      	subs	r7, #1
 8015ce0:	f04f 0901 	mov.w	r9, #1
 8015ce4:	e79e      	b.n	8015c24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015ce6:	449c      	add	ip, r3
 8015ce8:	1aff      	subs	r7, r7, r3
 8015cea:	f1b8 0f00 	cmp.w	r8, #0
 8015cee:	d009      	beq.n	8015d04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015cf0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015cf4:	9019      	str	r0, [sp, #100]	; 0x64
 8015cf6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015cfa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015cfe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015d02:	911d      	str	r1, [sp, #116]	; 0x74
 8015d04:	1ad2      	subs	r2, r2, r3
 8015d06:	e6b5      	b.n	8015a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015d08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015d0a:	681b      	ldr	r3, [r3, #0]
 8015d0c:	b923      	cbnz	r3, 8015d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015d0e:	4b04      	ldr	r3, [pc, #16]	; (8015d20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015d10:	6818      	ldr	r0, [r3, #0]
 8015d12:	6803      	ldr	r3, [r0, #0]
 8015d14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015d16:	4798      	blx	r3
 8015d18:	b05b      	add	sp, #364	; 0x16c
 8015d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d1e:	bf00      	nop
 8015d20:	20013834 	.word	0x20013834

08015d24 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015d24:	b570      	push	{r4, r5, r6, lr}
 8015d26:	4604      	mov	r4, r0
 8015d28:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015d2c:	9805      	ldr	r0, [sp, #20]
 8015d2e:	6061      	str	r1, [r4, #4]
 8015d30:	2500      	movs	r5, #0
 8015d32:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015d36:	8263      	strh	r3, [r4, #18]
 8015d38:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015d3c:	8025      	strh	r5, [r4, #0]
 8015d3e:	7221      	strb	r1, [r4, #8]
 8015d40:	7266      	strb	r6, [r4, #9]
 8015d42:	60e0      	str	r0, [r4, #12]
 8015d44:	8222      	strh	r2, [r4, #16]
 8015d46:	82a3      	strh	r3, [r4, #20]
 8015d48:	82e5      	strh	r5, [r4, #22]
 8015d4a:	8325      	strh	r5, [r4, #24]
 8015d4c:	8365      	strh	r5, [r4, #26]
 8015d4e:	83a5      	strh	r5, [r4, #28]
 8015d50:	83e5      	strh	r5, [r4, #30]
 8015d52:	8425      	strh	r5, [r4, #32]
 8015d54:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015d58:	b32e      	cbz	r6, 8015da6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d5a:	6803      	ldr	r3, [r0, #0]
 8015d5c:	695b      	ldr	r3, [r3, #20]
 8015d5e:	4798      	blx	r3
 8015d60:	4606      	mov	r6, r0
 8015d62:	b300      	cbz	r0, 8015da6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d64:	68e0      	ldr	r0, [r4, #12]
 8015d66:	6803      	ldr	r3, [r0, #0]
 8015d68:	4631      	mov	r1, r6
 8015d6a:	68db      	ldr	r3, [r3, #12]
 8015d6c:	4798      	blx	r3
 8015d6e:	4605      	mov	r5, r0
 8015d70:	b1c8      	cbz	r0, 8015da6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d72:	7b43      	ldrb	r3, [r0, #13]
 8015d74:	7a82      	ldrb	r2, [r0, #10]
 8015d76:	005b      	lsls	r3, r3, #1
 8015d78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015d7c:	4313      	orrs	r3, r2
 8015d7e:	8423      	strh	r3, [r4, #32]
 8015d80:	7a63      	ldrb	r3, [r4, #9]
 8015d82:	2b06      	cmp	r3, #6
 8015d84:	d10f      	bne.n	8015da6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d86:	68e0      	ldr	r0, [r4, #12]
 8015d88:	6803      	ldr	r3, [r0, #0]
 8015d8a:	462a      	mov	r2, r5
 8015d8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d8e:	4631      	mov	r1, r6
 8015d90:	4798      	blx	r3
 8015d92:	7b6b      	ldrb	r3, [r5, #13]
 8015d94:	005b      	lsls	r3, r3, #1
 8015d96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d9a:	7aab      	ldrb	r3, [r5, #10]
 8015d9c:	4313      	orrs	r3, r2
 8015d9e:	4418      	add	r0, r3
 8015da0:	8c23      	ldrh	r3, [r4, #32]
 8015da2:	4418      	add	r0, r3
 8015da4:	8420      	strh	r0, [r4, #32]
 8015da6:	4620      	mov	r0, r4
 8015da8:	bd70      	pop	{r4, r5, r6, pc}

08015daa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015daa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dae:	2400      	movs	r4, #0
 8015db0:	b085      	sub	sp, #20
 8015db2:	4681      	mov	r9, r0
 8015db4:	4688      	mov	r8, r1
 8015db6:	4692      	mov	sl, r2
 8015db8:	469b      	mov	fp, r3
 8015dba:	4627      	mov	r7, r4
 8015dbc:	4625      	mov	r5, r4
 8015dbe:	4626      	mov	r6, r4
 8015dc0:	4554      	cmp	r4, sl
 8015dc2:	da2a      	bge.n	8015e1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dc4:	2300      	movs	r3, #0
 8015dc6:	9303      	str	r3, [sp, #12]
 8015dc8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015dcc:	429d      	cmp	r5, r3
 8015dce:	d004      	beq.n	8015dda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015dd0:	f242 030b 	movw	r3, #8203	; 0x200b
 8015dd4:	429d      	cmp	r5, r3
 8015dd6:	bf18      	it	ne
 8015dd8:	462f      	movne	r7, r5
 8015dda:	ab03      	add	r3, sp, #12
 8015ddc:	4642      	mov	r2, r8
 8015dde:	4659      	mov	r1, fp
 8015de0:	4648      	mov	r0, r9
 8015de2:	f003 f9a3 	bl	801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015de6:	4605      	mov	r5, r0
 8015de8:	b1b8      	cbz	r0, 8015e1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dea:	280a      	cmp	r0, #10
 8015dec:	d015      	beq.n	8015e1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dee:	9a03      	ldr	r2, [sp, #12]
 8015df0:	b18a      	cbz	r2, 8015e16 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015df2:	7b50      	ldrb	r0, [r2, #13]
 8015df4:	7a93      	ldrb	r3, [r2, #10]
 8015df6:	8895      	ldrh	r5, [r2, #4]
 8015df8:	0040      	lsls	r0, r0, #1
 8015dfa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015dfe:	4303      	orrs	r3, r0
 8015e00:	9301      	str	r3, [sp, #4]
 8015e02:	f8d8 3000 	ldr.w	r3, [r8]
 8015e06:	4639      	mov	r1, r7
 8015e08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e0a:	4640      	mov	r0, r8
 8015e0c:	4798      	blx	r3
 8015e0e:	9b01      	ldr	r3, [sp, #4]
 8015e10:	4418      	add	r0, r3
 8015e12:	4406      	add	r6, r0
 8015e14:	b2b6      	uxth	r6, r6
 8015e16:	3401      	adds	r4, #1
 8015e18:	e7d2      	b.n	8015dc0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015e1a:	4630      	mov	r0, r6
 8015e1c:	b005      	add	sp, #20
 8015e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015e22:	2a02      	cmp	r2, #2
 8015e24:	b530      	push	{r4, r5, lr}
 8015e26:	d011      	beq.n	8015e4c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015e28:	2a03      	cmp	r2, #3
 8015e2a:	d01c      	beq.n	8015e66 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015e2c:	2a01      	cmp	r2, #1
 8015e2e:	d10c      	bne.n	8015e4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015e30:	888b      	ldrh	r3, [r1, #4]
 8015e32:	8801      	ldrh	r1, [r0, #0]
 8015e34:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015e38:	8844      	ldrh	r4, [r0, #2]
 8015e3a:	8004      	strh	r4, [r0, #0]
 8015e3c:	1a5b      	subs	r3, r3, r1
 8015e3e:	1a9b      	subs	r3, r3, r2
 8015e40:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015e44:	8043      	strh	r3, [r0, #2]
 8015e46:	8081      	strh	r1, [r0, #4]
 8015e48:	80c2      	strh	r2, [r0, #6]
 8015e4a:	bd30      	pop	{r4, r5, pc}
 8015e4c:	88cb      	ldrh	r3, [r1, #6]
 8015e4e:	8842      	ldrh	r2, [r0, #2]
 8015e50:	1a9b      	subs	r3, r3, r2
 8015e52:	88c2      	ldrh	r2, [r0, #6]
 8015e54:	1a9b      	subs	r3, r3, r2
 8015e56:	888a      	ldrh	r2, [r1, #4]
 8015e58:	8801      	ldrh	r1, [r0, #0]
 8015e5a:	8043      	strh	r3, [r0, #2]
 8015e5c:	1a52      	subs	r2, r2, r1
 8015e5e:	8881      	ldrh	r1, [r0, #4]
 8015e60:	1a52      	subs	r2, r2, r1
 8015e62:	8002      	strh	r2, [r0, #0]
 8015e64:	e7f1      	b.n	8015e4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015e66:	88cb      	ldrh	r3, [r1, #6]
 8015e68:	8841      	ldrh	r1, [r0, #2]
 8015e6a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015e6e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015e72:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015e76:	8045      	strh	r5, [r0, #2]
 8015e78:	1a5b      	subs	r3, r3, r1
 8015e7a:	1a9b      	subs	r3, r3, r2
 8015e7c:	8003      	strh	r3, [r0, #0]
 8015e7e:	8082      	strh	r2, [r0, #4]
 8015e80:	80c4      	strh	r4, [r0, #6]
 8015e82:	e7e2      	b.n	8015e4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015e84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e88:	b09f      	sub	sp, #124	; 0x7c
 8015e8a:	9116      	str	r1, [sp, #88]	; 0x58
 8015e8c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015e8e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015e90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015e92:	8809      	ldrh	r1, [r1, #0]
 8015e94:	889b      	ldrh	r3, [r3, #4]
 8015e96:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015e9a:	9212      	str	r2, [sp, #72]	; 0x48
 8015e9c:	440b      	add	r3, r1
 8015e9e:	b21b      	sxth	r3, r3
 8015ea0:	9310      	str	r3, [sp, #64]	; 0x40
 8015ea2:	f8d8 3000 	ldr.w	r3, [r8]
 8015ea6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015eaa:	7b19      	ldrb	r1, [r3, #12]
 8015eac:	7adb      	ldrb	r3, [r3, #11]
 8015eae:	9011      	str	r0, [sp, #68]	; 0x44
 8015eb0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8015eb4:	9114      	str	r1, [sp, #80]	; 0x50
 8015eb6:	9315      	str	r3, [sp, #84]	; 0x54
 8015eb8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8015ebc:	2a00      	cmp	r2, #0
 8015ebe:	d06a      	beq.n	8015f96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015ec0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8015ec4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015ec6:	2b06      	cmp	r3, #6
 8015ec8:	bf14      	ite	ne
 8015eca:	2301      	movne	r3, #1
 8015ecc:	2302      	moveq	r3, #2
 8015ece:	4413      	add	r3, r2
 8015ed0:	f04f 0900 	mov.w	r9, #0
 8015ed4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ed6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015eda:	464c      	mov	r4, r9
 8015edc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015ee0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8015ee4:	4293      	cmp	r3, r2
 8015ee6:	f280 808f 	bge.w	8016008 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015eea:	2300      	movs	r3, #0
 8015eec:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015ef0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8015ef4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ef8:	429c      	cmp	r4, r3
 8015efa:	d006      	beq.n	8015f0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8015efc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015efe:	f242 020b 	movw	r2, #8203	; 0x200b
 8015f02:	4294      	cmp	r4, r2
 8015f04:	bf18      	it	ne
 8015f06:	4623      	movne	r3, r4
 8015f08:	930d      	str	r3, [sp, #52]	; 0x34
 8015f0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f0c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015f0e:	f8d8 2000 	ldr.w	r2, [r8]
 8015f12:	428b      	cmp	r3, r1
 8015f14:	db41      	blt.n	8015f9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015f16:	6813      	ldr	r3, [r2, #0]
 8015f18:	4610      	mov	r0, r2
 8015f1a:	695b      	ldr	r3, [r3, #20]
 8015f1c:	4798      	blx	r3
 8015f1e:	4604      	mov	r4, r0
 8015f20:	f8d8 0000 	ldr.w	r0, [r8]
 8015f24:	6803      	ldr	r3, [r0, #0]
 8015f26:	aa1d      	add	r2, sp, #116	; 0x74
 8015f28:	689d      	ldr	r5, [r3, #8]
 8015f2a:	4621      	mov	r1, r4
 8015f2c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015f30:	47a8      	blx	r5
 8015f32:	901c      	str	r0, [sp, #112]	; 0x70
 8015f34:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015f38:	429c      	cmp	r4, r3
 8015f3a:	f000 80eb 	beq.w	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f3e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015f42:	429c      	cmp	r4, r3
 8015f44:	f000 80e6 	beq.w	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f48:	2c00      	cmp	r4, #0
 8015f4a:	f000 80f8 	beq.w	801613e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015f4e:	2c0a      	cmp	r4, #10
 8015f50:	d060      	beq.n	8016014 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015f52:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015f54:	b36a      	cbz	r2, 8015fb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015f56:	8894      	ldrh	r4, [r2, #4]
 8015f58:	f1bb 0f00 	cmp.w	fp, #0
 8015f5c:	d03b      	beq.n	8015fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015f5e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015f62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015f66:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015f6a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015f6e:	f1bb 0f01 	cmp.w	fp, #1
 8015f72:	ea49 0903 	orr.w	r9, r9, r3
 8015f76:	d134      	bne.n	8015fe2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015f78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f7a:	eba6 0609 	sub.w	r6, r6, r9
 8015f7e:	2b00      	cmp	r3, #0
 8015f80:	d14f      	bne.n	8016022 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015f82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f84:	eb09 0306 	add.w	r3, r9, r6
 8015f88:	4413      	add	r3, r2
 8015f8a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015f8c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015f90:	4293      	cmp	r3, r2
 8015f92:	da51      	bge.n	8016038 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015f94:	e038      	b.n	8016008 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015f96:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015f98:	e79a      	b.n	8015ed0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015f9a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015f9e:	9301      	str	r3, [sp, #4]
 8015fa0:	ab1d      	add	r3, sp, #116	; 0x74
 8015fa2:	9300      	str	r3, [sp, #0]
 8015fa4:	4659      	mov	r1, fp
 8015fa6:	ab1c      	add	r3, sp, #112	; 0x70
 8015fa8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015faa:	f003 f908 	bl	80191be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015fae:	4604      	mov	r4, r0
 8015fb0:	e7c0      	b.n	8015f34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015fb2:	f8d8 0000 	ldr.w	r0, [r8]
 8015fb6:	6803      	ldr	r3, [r0, #0]
 8015fb8:	691b      	ldr	r3, [r3, #16]
 8015fba:	4798      	blx	r3
 8015fbc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015fc0:	4298      	cmp	r0, r3
 8015fc2:	f000 80a7 	beq.w	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fc6:	f242 030b 	movw	r3, #8203	; 0x200b
 8015fca:	4298      	cmp	r0, r3
 8015fcc:	f000 80a2 	beq.w	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fd0:	f1bb 0f00 	cmp.w	fp, #0
 8015fd4:	d100      	bne.n	8015fd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015fd6:	444e      	add	r6, r9
 8015fd8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015fda:	2a00      	cmp	r2, #0
 8015fdc:	d1bf      	bne.n	8015f5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015fde:	4691      	mov	r9, r2
 8015fe0:	e098      	b.n	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015fe4:	2b00      	cmp	r3, #0
 8015fe6:	f000 80ac 	beq.w	8016142 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015fea:	f1bb 0f00 	cmp.w	fp, #0
 8015fee:	d118      	bne.n	8016022 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015ff0:	f8d8 0000 	ldr.w	r0, [r8]
 8015ff4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015ff6:	6803      	ldr	r3, [r0, #0]
 8015ff8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015ffa:	4798      	blx	r3
 8015ffc:	4406      	add	r6, r0
 8015ffe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016000:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016002:	1af3      	subs	r3, r6, r3
 8016004:	4293      	cmp	r3, r2
 8016006:	dd17      	ble.n	8016038 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8016008:	2c00      	cmp	r4, #0
 801600a:	f000 8098 	beq.w	801613e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801600e:	2c0a      	cmp	r4, #10
 8016010:	f040 8086 	bne.w	8016120 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8016014:	240a      	movs	r4, #10
 8016016:	fab4 f084 	clz	r0, r4
 801601a:	0940      	lsrs	r0, r0, #5
 801601c:	b01f      	add	sp, #124	; 0x7c
 801601e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016022:	f8d8 0000 	ldr.w	r0, [r8]
 8016026:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016028:	6803      	ldr	r3, [r0, #0]
 801602a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801602c:	4798      	blx	r3
 801602e:	f1bb 0f01 	cmp.w	fp, #1
 8016032:	eba6 0600 	sub.w	r6, r6, r0
 8016036:	d0a4      	beq.n	8015f82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8016038:	981c      	ldr	r0, [sp, #112]	; 0x70
 801603a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801603c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8016040:	f9b3 7000 	ldrsh.w	r7, [r3]
 8016044:	7b43      	ldrb	r3, [r0, #13]
 8016046:	015b      	lsls	r3, r3, #5
 8016048:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801604c:	7983      	ldrb	r3, [r0, #6]
 801604e:	4431      	add	r1, r6
 8016050:	4313      	orrs	r3, r2
 8016052:	440b      	add	r3, r1
 8016054:	42bb      	cmp	r3, r7
 8016056:	db5d      	blt.n	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016058:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801605a:	4299      	cmp	r1, r3
 801605c:	da5a      	bge.n	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801605e:	f8d8 0000 	ldr.w	r0, [r8]
 8016062:	6803      	ldr	r3, [r0, #0]
 8016064:	42b7      	cmp	r7, r6
 8016066:	bfc8      	it	gt
 8016068:	1bbf      	subgt	r7, r7, r6
 801606a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801606c:	bfcc      	ite	gt
 801606e:	b2bf      	uxthgt	r7, r7
 8016070:	2700      	movle	r7, #0
 8016072:	4798      	blx	r3
 8016074:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016076:	7b5a      	ldrb	r2, [r3, #13]
 8016078:	00d1      	lsls	r1, r2, #3
 801607a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801607e:	7a19      	ldrb	r1, [r3, #8]
 8016080:	4329      	orrs	r1, r5
 8016082:	0655      	lsls	r5, r2, #25
 8016084:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8016086:	bf44      	itt	mi
 8016088:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801608c:	b209      	sxthmi	r1, r1
 801608e:	1945      	adds	r5, r0, r5
 8016090:	1a6d      	subs	r5, r5, r1
 8016092:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016094:	b2ad      	uxth	r5, r5
 8016096:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801609a:	fa0f fa85 	sxth.w	sl, r5
 801609e:	4551      	cmp	r1, sl
 80160a0:	dd3c      	ble.n	801611c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80160a2:	0112      	lsls	r2, r2, #4
 80160a4:	79d8      	ldrb	r0, [r3, #7]
 80160a6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80160aa:	4302      	orrs	r2, r0
 80160ac:	4492      	add	sl, r2
 80160ae:	4551      	cmp	r1, sl
 80160b0:	dc30      	bgt.n	8016114 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80160b2:	1b4d      	subs	r5, r1, r5
 80160b4:	b22d      	sxth	r5, r5
 80160b6:	468a      	mov	sl, r1
 80160b8:	9319      	str	r3, [sp, #100]	; 0x64
 80160ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80160bc:	f8d8 0000 	ldr.w	r0, [r8]
 80160c0:	681a      	ldr	r2, [r3, #0]
 80160c2:	6801      	ldr	r1, [r0, #0]
 80160c4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80160c6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80160c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80160ca:	9218      	str	r2, [sp, #96]	; 0x60
 80160cc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80160ce:	4788      	blx	r1
 80160d0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80160d4:	910b      	str	r1, [sp, #44]	; 0x2c
 80160d6:	f898 100e 	ldrb.w	r1, [r8, #14]
 80160da:	910a      	str	r1, [sp, #40]	; 0x28
 80160dc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80160e0:	9109      	str	r1, [sp, #36]	; 0x24
 80160e2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80160e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80160e8:	9305      	str	r3, [sp, #20]
 80160ea:	b2ad      	uxth	r5, r5
 80160ec:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80160f0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80160f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160f6:	9304      	str	r3, [sp, #16]
 80160f8:	4437      	add	r7, r6
 80160fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80160fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80160fe:	9206      	str	r2, [sp, #24]
 8016100:	b23f      	sxth	r7, r7
 8016102:	f8cd a004 	str.w	sl, [sp, #4]
 8016106:	9700      	str	r7, [sp, #0]
 8016108:	681a      	ldr	r2, [r3, #0]
 801610a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801610c:	685b      	ldr	r3, [r3, #4]
 801610e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016110:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016112:	47a8      	blx	r5
 8016114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016116:	3301      	adds	r3, #1
 8016118:	930e      	str	r3, [sp, #56]	; 0x38
 801611a:	e6e1      	b.n	8015ee0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801611c:	2500      	movs	r5, #0
 801611e:	e7cb      	b.n	80160b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8016120:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016122:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016124:	3501      	adds	r5, #1
 8016126:	429d      	cmp	r5, r3
 8016128:	f6bf af75 	bge.w	8016016 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801612c:	4659      	mov	r1, fp
 801612e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016130:	f7f2 fbe2 	bl	80088f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016134:	4604      	mov	r4, r0
 8016136:	b110      	cbz	r0, 801613e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016138:	280a      	cmp	r0, #10
 801613a:	d1f2      	bne.n	8016122 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801613c:	e76a      	b.n	8016014 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801613e:	2400      	movs	r4, #0
 8016140:	e769      	b.n	8016016 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8016142:	f1bb 0f00 	cmp.w	fp, #0
 8016146:	f43f af5a 	beq.w	8015ffe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801614a:	e775      	b.n	8016038 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801614c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801614c:	b530      	push	{r4, r5, lr}
 801614e:	8ac4      	ldrh	r4, [r0, #22]
 8016150:	8b45      	ldrh	r5, [r0, #26]
 8016152:	8343      	strh	r3, [r0, #26]
 8016154:	442c      	add	r4, r5
 8016156:	1ae4      	subs	r4, r4, r3
 8016158:	82c4      	strh	r4, [r0, #22]
 801615a:	8b83      	ldrh	r3, [r0, #28]
 801615c:	8b04      	ldrh	r4, [r0, #24]
 801615e:	4422      	add	r2, r4
 8016160:	440c      	add	r4, r1
 8016162:	1a59      	subs	r1, r3, r1
 8016164:	83c2      	strh	r2, [r0, #30]
 8016166:	8304      	strh	r4, [r0, #24]
 8016168:	8381      	strh	r1, [r0, #28]
 801616a:	bd30      	pop	{r4, r5, pc}

0801616c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801616c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016170:	4604      	mov	r4, r0
 8016172:	8a47      	ldrh	r7, [r0, #18]
 8016174:	68c0      	ldr	r0, [r0, #12]
 8016176:	6803      	ldr	r3, [r0, #0]
 8016178:	b085      	sub	sp, #20
 801617a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801617c:	4798      	blx	r3
 801617e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8016182:	7a63      	ldrb	r3, [r4, #9]
 8016184:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8016188:	42b7      	cmp	r7, r6
 801618a:	f103 33ff 	add.w	r3, r3, #4294967295
 801618e:	bfac      	ite	ge
 8016190:	f04f 0900 	movge.w	r9, #0
 8016194:	f04f 0901 	movlt.w	r9, #1
 8016198:	2b05      	cmp	r3, #5
 801619a:	d804      	bhi.n	80161a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801619c:	e8df f003 	tbb	[pc, r3]
 80161a0:	470e0854 	.word	0x470e0854
 80161a4:	4c4c      	.short	0x4c4c
 80161a6:	2500      	movs	r5, #0
 80161a8:	46a9      	mov	r9, r5
 80161aa:	462e      	mov	r6, r5
 80161ac:	462f      	mov	r7, r5
 80161ae:	e00d      	b.n	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80161b0:	42b7      	cmp	r7, r6
 80161b2:	bfb4      	ite	lt
 80161b4:	2600      	movlt	r6, #0
 80161b6:	2601      	movge	r6, #1
 80161b8:	2500      	movs	r5, #0
 80161ba:	e7f7      	b.n	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80161bc:	42b7      	cmp	r7, r6
 80161be:	464d      	mov	r5, r9
 80161c0:	f04f 0900 	mov.w	r9, #0
 80161c4:	bfb4      	ite	lt
 80161c6:	2600      	movlt	r6, #0
 80161c8:	2601      	movge	r6, #1
 80161ca:	464f      	mov	r7, r9
 80161cc:	f04f 0800 	mov.w	r8, #0
 80161d0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80161d4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80161d8:	f8cd 8004 	str.w	r8, [sp, #4]
 80161dc:	2300      	movs	r3, #0
 80161de:	9303      	str	r3, [sp, #12]
 80161e0:	8823      	ldrh	r3, [r4, #0]
 80161e2:	2b20      	cmp	r3, #32
 80161e4:	d034      	beq.n	8016250 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80161e6:	f242 010b 	movw	r1, #8203	; 0x200b
 80161ea:	1a5a      	subs	r2, r3, r1
 80161ec:	f1d2 0a00 	rsbs	sl, r2, #0
 80161f0:	eb4a 0a02 	adc.w	sl, sl, r2
 80161f4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80161f8:	4293      	cmp	r3, r2
 80161fa:	d009      	beq.n	8016210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80161fc:	428b      	cmp	r3, r1
 80161fe:	9a01      	ldr	r2, [sp, #4]
 8016200:	bf18      	it	ne
 8016202:	461a      	movne	r2, r3
 8016204:	9201      	str	r2, [sp, #4]
 8016206:	bf0c      	ite	eq
 8016208:	f04f 0a01 	moveq.w	sl, #1
 801620c:	f04f 0a00 	movne.w	sl, #0
 8016210:	ab03      	add	r3, sp, #12
 8016212:	68e2      	ldr	r2, [r4, #12]
 8016214:	7a21      	ldrb	r1, [r4, #8]
 8016216:	6860      	ldr	r0, [r4, #4]
 8016218:	f002 ff88 	bl	801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801621c:	8020      	strh	r0, [r4, #0]
 801621e:	b9d8      	cbnz	r0, 8016258 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8016220:	8ba2      	ldrh	r2, [r4, #28]
 8016222:	2300      	movs	r3, #0
 8016224:	4611      	mov	r1, r2
 8016226:	4620      	mov	r0, r4
 8016228:	f7ff ff90 	bl	801614c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801622c:	e06e      	b.n	801630c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801622e:	2500      	movs	r5, #0
 8016230:	46a9      	mov	r9, r5
 8016232:	462e      	mov	r6, r5
 8016234:	2701      	movs	r7, #1
 8016236:	e7c9      	b.n	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016238:	42b7      	cmp	r7, r6
 801623a:	f04f 0500 	mov.w	r5, #0
 801623e:	bfb4      	ite	lt
 8016240:	2700      	movlt	r7, #0
 8016242:	2701      	movge	r7, #1
 8016244:	462e      	mov	r6, r5
 8016246:	e7c1      	b.n	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016248:	2500      	movs	r5, #0
 801624a:	46a9      	mov	r9, r5
 801624c:	2601      	movs	r6, #1
 801624e:	e7ad      	b.n	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8016250:	9301      	str	r3, [sp, #4]
 8016252:	f04f 0a01 	mov.w	sl, #1
 8016256:	e7db      	b.n	8016210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016258:	8b63      	ldrh	r3, [r4, #26]
 801625a:	280a      	cmp	r0, #10
 801625c:	f103 0301 	add.w	r3, r3, #1
 8016260:	8363      	strh	r3, [r4, #26]
 8016262:	d0dd      	beq.n	8016220 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8016264:	9a03      	ldr	r2, [sp, #12]
 8016266:	bb62      	cbnz	r2, 80162c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8016268:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801626c:	4298      	cmp	r0, r3
 801626e:	d003      	beq.n	8016278 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016270:	f242 030b 	movw	r3, #8203	; 0x200b
 8016274:	4298      	cmp	r0, r3
 8016276:	d1b1      	bne.n	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016278:	8823      	ldrh	r3, [r4, #0]
 801627a:	8ba1      	ldrh	r1, [r4, #28]
 801627c:	2b20      	cmp	r3, #32
 801627e:	d003      	beq.n	8016288 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8016280:	f242 000b 	movw	r0, #8203	; 0x200b
 8016284:	4283      	cmp	r3, r0
 8016286:	d131      	bne.n	80162ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8016288:	f1ba 0f00 	cmp.w	sl, #0
 801628c:	bf0a      	itet	eq
 801628e:	4688      	moveq	r8, r1
 8016290:	4650      	movne	r0, sl
 8016292:	2001      	moveq	r0, #1
 8016294:	440a      	add	r2, r1
 8016296:	8b23      	ldrh	r3, [r4, #24]
 8016298:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801629c:	b292      	uxth	r2, r2
 801629e:	83a2      	strh	r2, [r4, #28]
 80162a0:	4413      	add	r3, r2
 80162a2:	f1b9 0f00 	cmp.w	r9, #0
 80162a6:	d102      	bne.n	80162ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80162a8:	2d00      	cmp	r5, #0
 80162aa:	d042      	beq.n	8016332 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80162ac:	b300      	cbz	r0, 80162f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80162ae:	8c21      	ldrh	r1, [r4, #32]
 80162b0:	4419      	add	r1, r3
 80162b2:	458c      	cmp	ip, r1
 80162b4:	da37      	bge.n	8016326 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80162b6:	8ae1      	ldrh	r1, [r4, #22]
 80162b8:	2900      	cmp	r1, #0
 80162ba:	d034      	beq.n	8016326 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80162bc:	4563      	cmp	r3, ip
 80162be:	dd8d      	ble.n	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162c0:	e01d      	b.n	80162fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80162c2:	8893      	ldrh	r3, [r2, #4]
 80162c4:	8023      	strh	r3, [r4, #0]
 80162c6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80162ca:	9901      	ldr	r1, [sp, #4]
 80162cc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80162d0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80162d4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80162d8:	ea4b 0b00 	orr.w	fp, fp, r0
 80162dc:	68e0      	ldr	r0, [r4, #12]
 80162de:	6803      	ldr	r3, [r0, #0]
 80162e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80162e2:	4798      	blx	r3
 80162e4:	eb0b 0200 	add.w	r2, fp, r0
 80162e8:	b292      	uxth	r2, r2
 80162ea:	e7c5      	b.n	8016278 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80162ec:	2000      	movs	r0, #0
 80162ee:	e7d1      	b.n	8016294 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80162f0:	4563      	cmp	r3, ip
 80162f2:	f77f af73 	ble.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162f6:	8ae3      	ldrh	r3, [r4, #22]
 80162f8:	2b00      	cmp	r3, #0
 80162fa:	f43f af6f 	beq.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162fe:	2301      	movs	r3, #1
 8016300:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8016304:	8c22      	ldrh	r2, [r4, #32]
 8016306:	8be3      	ldrh	r3, [r4, #30]
 8016308:	4413      	add	r3, r2
 801630a:	83e3      	strh	r3, [r4, #30]
 801630c:	68e0      	ldr	r0, [r4, #12]
 801630e:	6803      	ldr	r3, [r0, #0]
 8016310:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016312:	4798      	blx	r3
 8016314:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8016318:	4418      	add	r0, r3
 801631a:	8a63      	ldrh	r3, [r4, #18]
 801631c:	1a18      	subs	r0, r3, r0
 801631e:	8260      	strh	r0, [r4, #18]
 8016320:	b005      	add	sp, #20
 8016322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016326:	2300      	movs	r3, #0
 8016328:	4611      	mov	r1, r2
 801632a:	4620      	mov	r0, r4
 801632c:	f7ff ff0e 	bl	801614c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016330:	e754      	b.n	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016332:	4563      	cmp	r3, ip
 8016334:	dd14      	ble.n	8016360 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8016336:	b117      	cbz	r7, 801633e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8016338:	2301      	movs	r3, #1
 801633a:	460a      	mov	r2, r1
 801633c:	e772      	b.n	8016224 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801633e:	2e00      	cmp	r6, #0
 8016340:	f43f af4c 	beq.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016344:	2800      	cmp	r0, #0
 8016346:	f47f af49 	bne.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801634a:	f1ba 0f00 	cmp.w	sl, #0
 801634e:	d002      	beq.n	8016356 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8016350:	2301      	movs	r3, #1
 8016352:	4642      	mov	r2, r8
 8016354:	e767      	b.n	8016226 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8016356:	8ae3      	ldrh	r3, [r4, #22]
 8016358:	2b00      	cmp	r3, #0
 801635a:	f43f af3f 	beq.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801635e:	e7d5      	b.n	801630c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016360:	2800      	cmp	r0, #0
 8016362:	f47f af3b 	bne.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016366:	f1ba 0f00 	cmp.w	sl, #0
 801636a:	f43f af37 	beq.w	80161dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801636e:	2301      	movs	r3, #1
 8016370:	4642      	mov	r2, r8
 8016372:	e7da      	b.n	801632a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08016374 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016374:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016376:	4605      	mov	r5, r0
 8016378:	b08f      	sub	sp, #60	; 0x3c
 801637a:	4617      	mov	r7, r2
 801637c:	461c      	mov	r4, r3
 801637e:	460e      	mov	r6, r1
 8016380:	b1d1      	cbz	r1, 80163b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8016382:	681b      	ldr	r3, [r3, #0]
 8016384:	4620      	mov	r0, r4
 8016386:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016388:	4798      	blx	r3
 801638a:	4240      	negs	r0, r0
 801638c:	b200      	sxth	r0, r0
 801638e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8016392:	9603      	str	r6, [sp, #12]
 8016394:	9700      	str	r7, [sp, #0]
 8016396:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801639a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801639e:	4629      	mov	r1, r5
 80163a0:	a805      	add	r0, sp, #20
 80163a2:	f7ff fcbf 	bl	8015d24 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80163a6:	2401      	movs	r4, #1
 80163a8:	a805      	add	r0, sp, #20
 80163aa:	f7ff fedf 	bl	801616c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80163ae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80163b2:	b163      	cbz	r3, 80163ce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80163b4:	3401      	adds	r4, #1
 80163b6:	e7f7      	b.n	80163a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80163b8:	f002 ff86 	bl	80192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80163bc:	2401      	movs	r4, #1
 80163be:	280a      	cmp	r0, #10
 80163c0:	4628      	mov	r0, r5
 80163c2:	bf08      	it	eq
 80163c4:	3401      	addeq	r4, #1
 80163c6:	f002 ff7f 	bl	80192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80163ca:	2800      	cmp	r0, #0
 80163cc:	d1f7      	bne.n	80163be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80163ce:	b2a0      	uxth	r0, r4
 80163d0:	b00f      	add	sp, #60	; 0x3c
 80163d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080163d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80163d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163d8:	b0e3      	sub	sp, #396	; 0x18c
 80163da:	461c      	mov	r4, r3
 80163dc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80163de:	4683      	mov	fp, r0
 80163e0:	4688      	mov	r8, r1
 80163e2:	2b00      	cmp	r3, #0
 80163e4:	f000 8112 	beq.w	801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163e8:	6823      	ldr	r3, [r4, #0]
 80163ea:	2b00      	cmp	r3, #0
 80163ec:	f000 810e 	beq.w	801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163f0:	7ba3      	ldrb	r3, [r4, #14]
 80163f2:	2b00      	cmp	r3, #0
 80163f4:	f000 810a 	beq.w	801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163f8:	6810      	ldr	r0, [r2, #0]
 80163fa:	6851      	ldr	r1, [r2, #4]
 80163fc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8016400:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8016404:	ad0a      	add	r5, sp, #40	; 0x28
 8016406:	462b      	mov	r3, r5
 8016408:	c303      	stmia	r3!, {r0, r1}
 801640a:	2100      	movs	r1, #0
 801640c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8016410:	910c      	str	r1, [sp, #48]	; 0x30
 8016412:	79a2      	ldrb	r2, [r4, #6]
 8016414:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016418:	a90c      	add	r1, sp, #48	; 0x30
 801641a:	4628      	mov	r0, r5
 801641c:	f7ff fd01 	bl	8015e22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016420:	a90c      	add	r1, sp, #48	; 0x30
 8016422:	4608      	mov	r0, r1
 8016424:	79a2      	ldrb	r2, [r4, #6]
 8016426:	f7ff fcfc 	bl	8015e22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801642a:	a817      	add	r0, sp, #92	; 0x5c
 801642c:	f002 fb20 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 8016430:	6820      	ldr	r0, [r4, #0]
 8016432:	6803      	ldr	r3, [r0, #0]
 8016434:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016436:	4798      	blx	r3
 8016438:	4606      	mov	r6, r0
 801643a:	6820      	ldr	r0, [r4, #0]
 801643c:	6803      	ldr	r3, [r0, #0]
 801643e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016440:	4798      	blx	r3
 8016442:	4633      	mov	r3, r6
 8016444:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8016446:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8016448:	9000      	str	r0, [sp, #0]
 801644a:	a817      	add	r0, sp, #92	; 0x5c
 801644c:	f002 fb6b 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016450:	6820      	ldr	r0, [r4, #0]
 8016452:	f894 a004 	ldrb.w	sl, [r4, #4]
 8016456:	6803      	ldr	r3, [r0, #0]
 8016458:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801645a:	4798      	blx	r3
 801645c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016460:	6823      	ldr	r3, [r4, #0]
 8016462:	4607      	mov	r7, r0
 8016464:	4406      	add	r6, r0
 8016466:	a830      	add	r0, sp, #192	; 0xc0
 8016468:	f893 9009 	ldrb.w	r9, [r3, #9]
 801646c:	f002 fb00 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 8016470:	7c23      	ldrb	r3, [r4, #16]
 8016472:	b17b      	cbz	r3, 8016494 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016474:	6820      	ldr	r0, [r4, #0]
 8016476:	6803      	ldr	r3, [r0, #0]
 8016478:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801647a:	4798      	blx	r3
 801647c:	9009      	str	r0, [sp, #36]	; 0x24
 801647e:	6820      	ldr	r0, [r4, #0]
 8016480:	6802      	ldr	r2, [r0, #0]
 8016482:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8016484:	4790      	blx	r2
 8016486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016488:	9000      	str	r0, [sp, #0]
 801648a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801648c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801648e:	a830      	add	r0, sp, #192	; 0xc0
 8016490:	f002 fb49 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016494:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016498:	7be2      	ldrb	r2, [r4, #15]
 801649a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801649e:	1a8a      	subs	r2, r1, r2
 80164a0:	7c21      	ldrb	r1, [r4, #16]
 80164a2:	9103      	str	r1, [sp, #12]
 80164a4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80164a8:	9102      	str	r1, [sp, #8]
 80164aa:	6821      	ldr	r1, [r4, #0]
 80164ac:	9101      	str	r1, [sp, #4]
 80164ae:	7961      	ldrb	r1, [r4, #5]
 80164b0:	9100      	str	r1, [sp, #0]
 80164b2:	b292      	uxth	r2, r2
 80164b4:	a930      	add	r1, sp, #192	; 0xc0
 80164b6:	a80e      	add	r0, sp, #56	; 0x38
 80164b8:	f7ff fc34 	bl	8015d24 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80164bc:	2e00      	cmp	r6, #0
 80164be:	dc5b      	bgt.n	8016578 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80164c0:	af17      	add	r7, sp, #92	; 0x5c
 80164c2:	f04f 0900 	mov.w	r9, #0
 80164c6:	7c23      	ldrb	r3, [r4, #16]
 80164c8:	2b00      	cmp	r3, #0
 80164ca:	f000 80b1 	beq.w	8016630 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80164ce:	a80e      	add	r0, sp, #56	; 0x38
 80164d0:	f7ff fe4c 	bl	801616c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80164d4:	f1ba 0f00 	cmp.w	sl, #0
 80164d8:	f000 80a5 	beq.w	8016626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80164dc:	7c23      	ldrb	r3, [r4, #16]
 80164de:	9309      	str	r3, [sp, #36]	; 0x24
 80164e0:	2264      	movs	r2, #100	; 0x64
 80164e2:	4639      	mov	r1, r7
 80164e4:	a849      	add	r0, sp, #292	; 0x124
 80164e6:	f015 fde6 	bl	802c0b6 <memcpy>
 80164ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164ec:	2b00      	cmp	r3, #0
 80164ee:	f000 80a7 	beq.w	8016640 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80164f2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80164f6:	7922      	ldrb	r2, [r4, #4]
 80164f8:	2a01      	cmp	r2, #1
 80164fa:	f040 808a 	bne.w	8016612 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80164fe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8016502:	1ac0      	subs	r0, r0, r3
 8016504:	2302      	movs	r3, #2
 8016506:	fb90 f0f3 	sdiv	r0, r0, r3
 801650a:	b200      	sxth	r0, r0
 801650c:	7c23      	ldrb	r3, [r4, #16]
 801650e:	2b00      	cmp	r3, #0
 8016510:	f000 808b 	beq.w	801662a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016514:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8016518:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801651c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016520:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016524:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8016528:	4410      	add	r0, r2
 801652a:	b200      	sxth	r0, r0
 801652c:	9000      	str	r0, [sp, #0]
 801652e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016532:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016536:	4642      	mov	r2, r8
 8016538:	2100      	movs	r1, #0
 801653a:	4658      	mov	r0, fp
 801653c:	f7ff fca2 	bl	8015e84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016540:	2800      	cmp	r0, #0
 8016542:	d163      	bne.n	801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016544:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016548:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801654c:	b2b2      	uxth	r2, r6
 801654e:	4413      	add	r3, r2
 8016550:	1a8a      	subs	r2, r1, r2
 8016552:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8016556:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801655a:	b21b      	sxth	r3, r3
 801655c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016560:	2a00      	cmp	r2, #0
 8016562:	d153      	bne.n	801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016564:	6822      	ldr	r2, [r4, #0]
 8016566:	8869      	ldrh	r1, [r5, #2]
 8016568:	7a12      	ldrb	r2, [r2, #8]
 801656a:	1a9b      	subs	r3, r3, r2
 801656c:	88ea      	ldrh	r2, [r5, #6]
 801656e:	440a      	add	r2, r1
 8016570:	b212      	sxth	r2, r2
 8016572:	4293      	cmp	r3, r2
 8016574:	dda7      	ble.n	80164c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016576:	e049      	b.n	801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016578:	7c23      	ldrb	r3, [r4, #16]
 801657a:	444f      	add	r7, r9
 801657c:	b1c3      	cbz	r3, 80165b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801657e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8016582:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016586:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801658a:	443b      	add	r3, r7
 801658c:	4293      	cmp	r3, r2
 801658e:	da97      	bge.n	80164c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016590:	a80e      	add	r0, sp, #56	; 0x38
 8016592:	f7ff fdeb 	bl	801616c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016596:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801659a:	3b01      	subs	r3, #1
 801659c:	b29b      	uxth	r3, r3
 801659e:	454b      	cmp	r3, r9
 80165a0:	9309      	str	r3, [sp, #36]	; 0x24
 80165a2:	d021      	beq.n	80165e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80165a4:	7961      	ldrb	r1, [r4, #5]
 80165a6:	a817      	add	r0, sp, #92	; 0x5c
 80165a8:	f7f2 f9a6 	bl	80088f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80165ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165ae:	e7f4      	b.n	801659a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80165b0:	fa1f f986 	uxth.w	r9, r6
 80165b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80165b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80165bc:	443b      	add	r3, r7
 80165be:	4293      	cmp	r3, r2
 80165c0:	f6bf af7e 	bge.w	80164c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80165c4:	a817      	add	r0, sp, #92	; 0x5c
 80165c6:	f002 fe7f 	bl	80192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80165ca:	b1f8      	cbz	r0, 801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80165cc:	280a      	cmp	r0, #10
 80165ce:	d1f1      	bne.n	80165b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80165d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80165d4:	444b      	add	r3, r9
 80165d6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80165da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80165de:	eba3 0309 	sub.w	r3, r3, r9
 80165e2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80165e6:	e7e5      	b.n	80165b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80165e8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80165ec:	b2b3      	uxth	r3, r6
 80165ee:	441a      	add	r2, r3
 80165f0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80165f4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80165f8:	1ad3      	subs	r3, r2, r3
 80165fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80165fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016602:	b11b      	cbz	r3, 801660c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016604:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8016608:	2b00      	cmp	r3, #0
 801660a:	d0ba      	beq.n	8016582 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801660c:	b063      	add	sp, #396	; 0x18c
 801660e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016612:	2a02      	cmp	r2, #2
 8016614:	d105      	bne.n	8016622 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8016616:	7be2      	ldrb	r2, [r4, #15]
 8016618:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801661c:	1a80      	subs	r0, r0, r2
 801661e:	1ac0      	subs	r0, r0, r3
 8016620:	e773      	b.n	801650a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016622:	2000      	movs	r0, #0
 8016624:	e772      	b.n	801650c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016626:	7be0      	ldrb	r0, [r4, #15]
 8016628:	e770      	b.n	801650c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801662a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801662e:	e773      	b.n	8016518 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016630:	f1ba 0f00 	cmp.w	sl, #0
 8016634:	d0f7      	beq.n	8016626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016636:	2264      	movs	r2, #100	; 0x64
 8016638:	4639      	mov	r1, r7
 801663a:	a849      	add	r0, sp, #292	; 0x124
 801663c:	f015 fd3b 	bl	802c0b6 <memcpy>
 8016640:	2300      	movs	r3, #0
 8016642:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016646:	6821      	ldr	r1, [r4, #0]
 8016648:	a849      	add	r0, sp, #292	; 0x124
 801664a:	f7ff fbae 	bl	8015daa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801664e:	b203      	sxth	r3, r0
 8016650:	e751      	b.n	80164f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016652 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016652:	2b03      	cmp	r3, #3
 8016654:	d818      	bhi.n	8016688 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016656:	e8df f003 	tbb	[pc, r3]
 801665a:	0602      	.short	0x0602
 801665c:	130d      	.short	0x130d
 801665e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016662:	1850      	adds	r0, r2, r1
 8016664:	4770      	bx	lr
 8016666:	8803      	ldrh	r3, [r0, #0]
 8016668:	8880      	ldrh	r0, [r0, #4]
 801666a:	4418      	add	r0, r3
 801666c:	b200      	sxth	r0, r0
 801666e:	1a80      	subs	r0, r0, r2
 8016670:	3801      	subs	r0, #1
 8016672:	4770      	bx	lr
 8016674:	8803      	ldrh	r3, [r0, #0]
 8016676:	8880      	ldrh	r0, [r0, #4]
 8016678:	4418      	add	r0, r3
 801667a:	b200      	sxth	r0, r0
 801667c:	1a40      	subs	r0, r0, r1
 801667e:	e7f7      	b.n	8016670 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016680:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016684:	4410      	add	r0, r2
 8016686:	4770      	bx	lr
 8016688:	2000      	movs	r0, #0
 801668a:	4770      	bx	lr

0801668c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801668c:	2b03      	cmp	r3, #3
 801668e:	d817      	bhi.n	80166c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016690:	e8df f003 	tbb	[pc, r3]
 8016694:	10090602 	.word	0x10090602
 8016698:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801669c:	1850      	adds	r0, r2, r1
 801669e:	4770      	bx	lr
 80166a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80166a4:	e7fa      	b.n	801669c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80166a6:	8843      	ldrh	r3, [r0, #2]
 80166a8:	88c0      	ldrh	r0, [r0, #6]
 80166aa:	4418      	add	r0, r3
 80166ac:	b200      	sxth	r0, r0
 80166ae:	1a80      	subs	r0, r0, r2
 80166b0:	3801      	subs	r0, #1
 80166b2:	4770      	bx	lr
 80166b4:	8843      	ldrh	r3, [r0, #2]
 80166b6:	88c0      	ldrh	r0, [r0, #6]
 80166b8:	4418      	add	r0, r3
 80166ba:	b200      	sxth	r0, r0
 80166bc:	1a40      	subs	r0, r0, r1
 80166be:	e7f7      	b.n	80166b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80166c0:	2000      	movs	r0, #0
 80166c2:	4770      	bx	lr

080166c4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80166c4:	4b01      	ldr	r3, [pc, #4]	; (80166cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80166c6:	2200      	movs	r2, #0
 80166c8:	601a      	str	r2, [r3, #0]
 80166ca:	4770      	bx	lr
 80166cc:	20013844 	.word	0x20013844

080166d0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80166d0:	4603      	mov	r3, r0
 80166d2:	b1c8      	cbz	r0, 8016708 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80166d4:	0c02      	lsrs	r2, r0, #16
 80166d6:	0412      	lsls	r2, r2, #16
 80166d8:	b9a2      	cbnz	r2, 8016704 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80166da:	0403      	lsls	r3, r0, #16
 80166dc:	2010      	movs	r0, #16
 80166de:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80166e2:	bf04      	itt	eq
 80166e4:	021b      	lsleq	r3, r3, #8
 80166e6:	3008      	addeq	r0, #8
 80166e8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80166ec:	bf04      	itt	eq
 80166ee:	011b      	lsleq	r3, r3, #4
 80166f0:	3004      	addeq	r0, #4
 80166f2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80166f6:	bf04      	itt	eq
 80166f8:	009b      	lsleq	r3, r3, #2
 80166fa:	3002      	addeq	r0, #2
 80166fc:	2b00      	cmp	r3, #0
 80166fe:	db04      	blt.n	801670a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016700:	3001      	adds	r0, #1
 8016702:	4770      	bx	lr
 8016704:	2000      	movs	r0, #0
 8016706:	e7ea      	b.n	80166de <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016708:	2020      	movs	r0, #32
 801670a:	4770      	bx	lr

0801670c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801670c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016710:	b087      	sub	sp, #28
 8016712:	460d      	mov	r5, r1
 8016714:	4616      	mov	r6, r2
 8016716:	4698      	mov	r8, r3
 8016718:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801671c:	4601      	mov	r1, r0
 801671e:	b120      	cbz	r0, 801672a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016720:	b11a      	cbz	r2, 801672a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016722:	2d1f      	cmp	r5, #31
 8016724:	d801      	bhi.n	801672a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016726:	2b1f      	cmp	r3, #31
 8016728:	d904      	bls.n	8016734 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801672a:	2000      	movs	r0, #0
 801672c:	6038      	str	r0, [r7, #0]
 801672e:	b007      	add	sp, #28
 8016730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016734:	b97d      	cbnz	r5, 8016756 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016736:	b143      	cbz	r3, 801674a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016738:	4602      	mov	r2, r0
 801673a:	e9cd 4700 	strd	r4, r7, [sp]
 801673e:	462b      	mov	r3, r5
 8016740:	4641      	mov	r1, r8
 8016742:	4630      	mov	r0, r6
 8016744:	f7ff ffe2 	bl	801670c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016748:	e7f1      	b.n	801672e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801674a:	f04f 33ff 	mov.w	r3, #4294967295
 801674e:	603b      	str	r3, [r7, #0]
 8016750:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016754:	e7eb      	b.n	801672e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016756:	fa32 fa05 	lsrs.w	sl, r2, r5
 801675a:	d106      	bne.n	801676a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801675c:	4346      	muls	r6, r0
 801675e:	fbb6 f0f4 	udiv	r0, r6, r4
 8016762:	fb04 6610 	mls	r6, r4, r0, r6
 8016766:	603e      	str	r6, [r7, #0]
 8016768:	e7e1      	b.n	801672e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801676a:	2201      	movs	r2, #1
 801676c:	40aa      	lsls	r2, r5
 801676e:	3a01      	subs	r2, #1
 8016770:	4016      	ands	r6, r2
 8016772:	fa00 fb05 	lsl.w	fp, r0, r5
 8016776:	4630      	mov	r0, r6
 8016778:	fbbb f9f4 	udiv	r9, fp, r4
 801677c:	fb0a f309 	mul.w	r3, sl, r9
 8016780:	9303      	str	r3, [sp, #12]
 8016782:	f7ff ffa5 	bl	80166d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016786:	462b      	mov	r3, r5
 8016788:	460a      	mov	r2, r1
 801678a:	e9cd 4700 	strd	r4, r7, [sp]
 801678e:	4601      	mov	r1, r0
 8016790:	4630      	mov	r0, r6
 8016792:	f7ff ffbb 	bl	801670c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016796:	fb04 b919 	mls	r9, r4, r9, fp
 801679a:	4606      	mov	r6, r0
 801679c:	4648      	mov	r0, r9
 801679e:	eb05 0108 	add.w	r1, r5, r8
 80167a2:	f7ff ff95 	bl	80166d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80167a6:	ab05      	add	r3, sp, #20
 80167a8:	e9cd 4300 	strd	r4, r3, [sp]
 80167ac:	464a      	mov	r2, r9
 80167ae:	4603      	mov	r3, r0
 80167b0:	4650      	mov	r0, sl
 80167b2:	f7ff ffab 	bl	801670c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80167b6:	6839      	ldr	r1, [r7, #0]
 80167b8:	9a05      	ldr	r2, [sp, #20]
 80167ba:	9b03      	ldr	r3, [sp, #12]
 80167bc:	4411      	add	r1, r2
 80167be:	fbb1 f2f4 	udiv	r2, r1, r4
 80167c2:	18d3      	adds	r3, r2, r3
 80167c4:	441e      	add	r6, r3
 80167c6:	fb04 1412 	mls	r4, r4, r2, r1
 80167ca:	4430      	add	r0, r6
 80167cc:	603c      	str	r4, [r7, #0]
 80167ce:	e7ae      	b.n	801672e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080167d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80167d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80167d4:	b085      	sub	sp, #20
 80167d6:	f1b0 0900 	subs.w	r9, r0, #0
 80167da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80167dc:	461d      	mov	r5, r3
 80167de:	bfbf      	itttt	lt
 80167e0:	6823      	ldrlt	r3, [r4, #0]
 80167e2:	425b      	neglt	r3, r3
 80167e4:	f1c9 0900 	rsblt	r9, r9, #0
 80167e8:	6023      	strlt	r3, [r4, #0]
 80167ea:	bfb4      	ite	lt
 80167ec:	f04f 36ff 	movlt.w	r6, #4294967295
 80167f0:	2601      	movge	r6, #1
 80167f2:	2a00      	cmp	r2, #0
 80167f4:	4617      	mov	r7, r2
 80167f6:	da04      	bge.n	8016802 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80167f8:	6823      	ldr	r3, [r4, #0]
 80167fa:	425b      	negs	r3, r3
 80167fc:	4257      	negs	r7, r2
 80167fe:	4276      	negs	r6, r6
 8016800:	6023      	str	r3, [r4, #0]
 8016802:	2d00      	cmp	r5, #0
 8016804:	4638      	mov	r0, r7
 8016806:	bfba      	itte	lt
 8016808:	426d      	neglt	r5, r5
 801680a:	f04f 38ff 	movlt.w	r8, #4294967295
 801680e:	f04f 0801 	movge.w	r8, #1
 8016812:	f7ff ff5d 	bl	80166d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016816:	ab03      	add	r3, sp, #12
 8016818:	e9cd 5300 	strd	r5, r3, [sp]
 801681c:	463a      	mov	r2, r7
 801681e:	4603      	mov	r3, r0
 8016820:	4648      	mov	r0, r9
 8016822:	f7ff ff73 	bl	801670c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016826:	6823      	ldr	r3, [r4, #0]
 8016828:	9a03      	ldr	r2, [sp, #12]
 801682a:	4546      	cmp	r6, r8
 801682c:	441a      	add	r2, r3
 801682e:	fb92 f3f5 	sdiv	r3, r2, r5
 8016832:	4418      	add	r0, r3
 8016834:	bf18      	it	ne
 8016836:	4240      	negne	r0, r0
 8016838:	fb05 2313 	mls	r3, r5, r3, r2
 801683c:	1c72      	adds	r2, r6, #1
 801683e:	6023      	str	r3, [r4, #0]
 8016840:	d105      	bne.n	801684e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016842:	2b00      	cmp	r3, #0
 8016844:	f1c3 0200 	rsb	r2, r3, #0
 8016848:	db0b      	blt.n	8016862 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801684a:	6022      	str	r2, [r4, #0]
 801684c:	e006      	b.n	801685c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801684e:	2e01      	cmp	r6, #1
 8016850:	d104      	bne.n	801685c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016852:	2b00      	cmp	r3, #0
 8016854:	da02      	bge.n	801685c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016856:	442b      	add	r3, r5
 8016858:	3801      	subs	r0, #1
 801685a:	6023      	str	r3, [r4, #0]
 801685c:	b005      	add	sp, #20
 801685e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016862:	3801      	subs	r0, #1
 8016864:	1b52      	subs	r2, r2, r5
 8016866:	e7f0      	b.n	801684a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016868 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016868:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801686c:	4c1c      	ldr	r4, [pc, #112]	; (80168e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801686e:	6807      	ldr	r7, [r0, #0]
 8016870:	69a3      	ldr	r3, [r4, #24]
 8016872:	4605      	mov	r5, r0
 8016874:	b92b      	cbnz	r3, 8016882 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016876:	6840      	ldr	r0, [r0, #4]
 8016878:	e9c5 7000 	strd	r7, r0, [r5]
 801687c:	b004      	add	sp, #16
 801687e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016882:	68a2      	ldr	r2, [r4, #8]
 8016884:	6820      	ldr	r0, [r4, #0]
 8016886:	ae04      	add	r6, sp, #16
 8016888:	f04f 0802 	mov.w	r8, #2
 801688c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016890:	440a      	add	r2, r1
 8016892:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016896:	69e1      	ldr	r1, [r4, #28]
 8016898:	9600      	str	r6, [sp, #0]
 801689a:	463a      	mov	r2, r7
 801689c:	f7ff ff98 	bl	80167d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168a0:	69a3      	ldr	r3, [r4, #24]
 80168a2:	686a      	ldr	r2, [r5, #4]
 80168a4:	6a21      	ldr	r1, [r4, #32]
 80168a6:	9600      	str	r6, [sp, #0]
 80168a8:	4607      	mov	r7, r0
 80168aa:	6860      	ldr	r0, [r4, #4]
 80168ac:	f7ff ff90 	bl	80167d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168b0:	6962      	ldr	r2, [r4, #20]
 80168b2:	69a3      	ldr	r3, [r4, #24]
 80168b4:	fb93 f8f8 	sdiv	r8, r3, r8
 80168b8:	4442      	add	r2, r8
 80168ba:	9203      	str	r2, [sp, #12]
 80168bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80168be:	682a      	ldr	r2, [r5, #0]
 80168c0:	9600      	str	r6, [sp, #0]
 80168c2:	4407      	add	r7, r0
 80168c4:	68e0      	ldr	r0, [r4, #12]
 80168c6:	f7ff ff83 	bl	80167d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168ca:	9600      	str	r6, [sp, #0]
 80168cc:	4680      	mov	r8, r0
 80168ce:	69a3      	ldr	r3, [r4, #24]
 80168d0:	686a      	ldr	r2, [r5, #4]
 80168d2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80168d4:	6920      	ldr	r0, [r4, #16]
 80168d6:	f7ff ff7b 	bl	80167d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168da:	4440      	add	r0, r8
 80168dc:	e7cc      	b.n	8016878 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80168de:	bf00      	nop
 80168e0:	20013848 	.word	0x20013848

080168e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80168e4:	4b07      	ldr	r3, [pc, #28]	; (8016904 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80168e6:	781b      	ldrb	r3, [r3, #0]
 80168e8:	2b01      	cmp	r3, #1
 80168ea:	d109      	bne.n	8016900 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80168ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 80168f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80168f4:	8003      	strh	r3, [r0, #0]
 80168f6:	4b04      	ldr	r3, [pc, #16]	; (8016908 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80168f8:	881b      	ldrh	r3, [r3, #0]
 80168fa:	3b01      	subs	r3, #1
 80168fc:	1a9b      	subs	r3, r3, r2
 80168fe:	800b      	strh	r3, [r1, #0]
 8016900:	4770      	bx	lr
 8016902:	bf00      	nop
 8016904:	2001382c 	.word	0x2001382c
 8016908:	20013828 	.word	0x20013828

0801690c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801690c:	b510      	push	{r4, lr}
 801690e:	4b07      	ldr	r3, [pc, #28]	; (801692c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016910:	781b      	ldrb	r3, [r3, #0]
 8016912:	2b01      	cmp	r3, #1
 8016914:	d108      	bne.n	8016928 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016916:	4b06      	ldr	r3, [pc, #24]	; (8016930 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016918:	880c      	ldrh	r4, [r1, #0]
 801691a:	881b      	ldrh	r3, [r3, #0]
 801691c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016920:	3b01      	subs	r3, #1
 8016922:	1b1b      	subs	r3, r3, r4
 8016924:	8003      	strh	r3, [r0, #0]
 8016926:	800a      	strh	r2, [r1, #0]
 8016928:	bd10      	pop	{r4, pc}
 801692a:	bf00      	nop
 801692c:	2001382c 	.word	0x2001382c
 8016930:	20013828 	.word	0x20013828

08016934 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016934:	b510      	push	{r4, lr}
 8016936:	4b0a      	ldr	r3, [pc, #40]	; (8016960 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016938:	781b      	ldrb	r3, [r3, #0]
 801693a:	2b01      	cmp	r3, #1
 801693c:	d10e      	bne.n	801695c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801693e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016942:	8843      	ldrh	r3, [r0, #2]
 8016944:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016948:	8044      	strh	r4, [r0, #2]
 801694a:	18ca      	adds	r2, r1, r3
 801694c:	4b05      	ldr	r3, [pc, #20]	; (8016964 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801694e:	881b      	ldrh	r3, [r3, #0]
 8016950:	1a9b      	subs	r3, r3, r2
 8016952:	8003      	strh	r3, [r0, #0]
 8016954:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016958:	80c3      	strh	r3, [r0, #6]
 801695a:	8081      	strh	r1, [r0, #4]
 801695c:	bd10      	pop	{r4, pc}
 801695e:	bf00      	nop
 8016960:	2001382c 	.word	0x2001382c
 8016964:	20013828 	.word	0x20013828

08016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016968:	4b08      	ldr	r3, [pc, #32]	; (801698c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801696a:	781b      	ldrb	r3, [r3, #0]
 801696c:	2b01      	cmp	r3, #1
 801696e:	d10c      	bne.n	801698a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016970:	8803      	ldrh	r3, [r0, #0]
 8016972:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016976:	8842      	ldrh	r2, [r0, #2]
 8016978:	8002      	strh	r2, [r0, #0]
 801697a:	185a      	adds	r2, r3, r1
 801697c:	4b04      	ldr	r3, [pc, #16]	; (8016990 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801697e:	881b      	ldrh	r3, [r3, #0]
 8016980:	1a9b      	subs	r3, r3, r2
 8016982:	8043      	strh	r3, [r0, #2]
 8016984:	88c3      	ldrh	r3, [r0, #6]
 8016986:	8083      	strh	r3, [r0, #4]
 8016988:	80c1      	strh	r1, [r0, #6]
 801698a:	4770      	bx	lr
 801698c:	2001382c 	.word	0x2001382c
 8016990:	20013828 	.word	0x20013828

08016994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016994:	b510      	push	{r4, lr}
 8016996:	4b07      	ldr	r3, [pc, #28]	; (80169b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016998:	781b      	ldrb	r3, [r3, #0]
 801699a:	2b01      	cmp	r3, #1
 801699c:	d108      	bne.n	80169b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801699e:	f9b1 3000 	ldrsh.w	r3, [r1]
 80169a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80169a6:	8003      	strh	r3, [r0, #0]
 80169a8:	8893      	ldrh	r3, [r2, #4]
 80169aa:	3b01      	subs	r3, #1
 80169ac:	1b1b      	subs	r3, r3, r4
 80169ae:	800b      	strh	r3, [r1, #0]
 80169b0:	bd10      	pop	{r4, pc}
 80169b2:	bf00      	nop
 80169b4:	2001382c 	.word	0x2001382c

080169b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80169b8:	4b0b      	ldr	r3, [pc, #44]	; (80169e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80169ba:	781b      	ldrb	r3, [r3, #0]
 80169bc:	2b01      	cmp	r3, #1
 80169be:	d111      	bne.n	80169e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80169c0:	680b      	ldr	r3, [r1, #0]
 80169c2:	ed90 7a00 	vldr	s14, [r0]
 80169c6:	6003      	str	r3, [r0, #0]
 80169c8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80169cc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80169ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80169d0:	ee07 3a90 	vmov	s15, r3
 80169d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80169d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80169dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80169e0:	edc1 7a00 	vstr	s15, [r1]
 80169e4:	4770      	bx	lr
 80169e6:	bf00      	nop
 80169e8:	2001382c 	.word	0x2001382c
 80169ec:	38d1b717 	.word	0x38d1b717

080169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80169f0:	b510      	push	{r4, lr}
 80169f2:	4b0a      	ldr	r3, [pc, #40]	; (8016a1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80169f4:	781b      	ldrb	r3, [r3, #0]
 80169f6:	2b01      	cmp	r3, #1
 80169f8:	460a      	mov	r2, r1
 80169fa:	d10d      	bne.n	8016a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80169fc:	8881      	ldrh	r1, [r0, #4]
 80169fe:	8803      	ldrh	r3, [r0, #0]
 8016a00:	440b      	add	r3, r1
 8016a02:	4601      	mov	r1, r0
 8016a04:	3b01      	subs	r3, #1
 8016a06:	f821 3b02 	strh.w	r3, [r1], #2
 8016a0a:	f7ff ffc3 	bl	8016994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8016a0e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016a12:	88c2      	ldrh	r2, [r0, #6]
 8016a14:	8082      	strh	r2, [r0, #4]
 8016a16:	80c3      	strh	r3, [r0, #6]
 8016a18:	bd10      	pop	{r4, pc}
 8016a1a:	bf00      	nop
 8016a1c:	2001382c 	.word	0x2001382c

08016a20 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016a20:	4b06      	ldr	r3, [pc, #24]	; (8016a3c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016a22:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a26:	4b06      	ldr	r3, [pc, #24]	; (8016a40 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016a28:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8016a2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a30:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016a34:	2100      	movs	r1, #0
 8016a36:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8016a3a:	4770      	bx	lr
 8016a3c:	20013828 	.word	0x20013828
 8016a40:	2001382a 	.word	0x2001382a

08016a44 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016a44:	4b03      	ldr	r3, [pc, #12]	; (8016a54 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016a46:	6818      	ldr	r0, [r3, #0]
 8016a48:	b110      	cbz	r0, 8016a50 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016a4a:	6803      	ldr	r3, [r0, #0]
 8016a4c:	699b      	ldr	r3, [r3, #24]
 8016a4e:	4718      	bx	r3
 8016a50:	4770      	bx	lr
 8016a52:	bf00      	nop
 8016a54:	20013878 	.word	0x20013878

08016a58 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016a58:	4770      	bx	lr
	...

08016a5c <_ZN8touchgfx11Application4drawEv>:
 8016a5c:	b507      	push	{r0, r1, r2, lr}
 8016a5e:	4b09      	ldr	r3, [pc, #36]	; (8016a84 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016a60:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a64:	4b08      	ldr	r3, [pc, #32]	; (8016a88 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016a66:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016a72:	6803      	ldr	r3, [r0, #0]
 8016a74:	2100      	movs	r1, #0
 8016a76:	9100      	str	r1, [sp, #0]
 8016a78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a7a:	4669      	mov	r1, sp
 8016a7c:	4798      	blx	r3
 8016a7e:	b003      	add	sp, #12
 8016a80:	f85d fb04 	ldr.w	pc, [sp], #4
 8016a84:	20013828 	.word	0x20013828
 8016a88:	2001382a 	.word	0x2001382a

08016a8c <_ZN8touchgfx11Application10invalidateEv>:
 8016a8c:	4b09      	ldr	r3, [pc, #36]	; (8016ab4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016a8e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a92:	4b09      	ldr	r3, [pc, #36]	; (8016ab8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016a94:	b082      	sub	sp, #8
 8016a96:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a9a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a9e:	2100      	movs	r1, #0
 8016aa0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016aa4:	9100      	str	r1, [sp, #0]
 8016aa6:	6803      	ldr	r3, [r0, #0]
 8016aa8:	aa02      	add	r2, sp, #8
 8016aaa:	e912 0006 	ldmdb	r2, {r1, r2}
 8016aae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016ab0:	b002      	add	sp, #8
 8016ab2:	4718      	bx	r3
 8016ab4:	20013828 	.word	0x20013828
 8016ab8:	2001382a 	.word	0x2001382a

08016abc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8016abc:	4b03      	ldr	r3, [pc, #12]	; (8016acc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8016abe:	6818      	ldr	r0, [r3, #0]
 8016ac0:	b110      	cbz	r0, 8016ac8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016ac2:	6803      	ldr	r3, [r0, #0]
 8016ac4:	69db      	ldr	r3, [r3, #28]
 8016ac6:	4718      	bx	r3
 8016ac8:	4770      	bx	lr
 8016aca:	bf00      	nop
 8016acc:	20013878 	.word	0x20013878

08016ad0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016ad0:	4b03      	ldr	r3, [pc, #12]	; (8016ae0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016ad2:	6818      	ldr	r0, [r3, #0]
 8016ad4:	b110      	cbz	r0, 8016adc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016ad6:	6803      	ldr	r3, [r0, #0]
 8016ad8:	6a1b      	ldr	r3, [r3, #32]
 8016ada:	4718      	bx	r3
 8016adc:	4770      	bx	lr
 8016ade:	bf00      	nop
 8016ae0:	20013878 	.word	0x20013878

08016ae4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016ae4:	2300      	movs	r3, #0
 8016ae6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8016aea:	4770      	bx	lr

08016aec <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016aec:	4b03      	ldr	r3, [pc, #12]	; (8016afc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016aee:	6818      	ldr	r0, [r3, #0]
 8016af0:	b110      	cbz	r0, 8016af8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016af2:	6803      	ldr	r3, [r0, #0]
 8016af4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016af6:	4718      	bx	r3
 8016af8:	4770      	bx	lr
 8016afa:	bf00      	nop
 8016afc:	20013878 	.word	0x20013878

08016b00 <_ZN8touchgfx11ApplicationD1Ev>:
 8016b00:	4770      	bx	lr

08016b02 <_ZN8touchgfx11ApplicationD0Ev>:
 8016b02:	b510      	push	{r4, lr}
 8016b04:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016b08:	4604      	mov	r4, r0
 8016b0a:	f014 f996 	bl	802ae3a <_ZdlPvj>
 8016b0e:	4620      	mov	r0, r4
 8016b10:	bd10      	pop	{r4, pc}

08016b12 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016b12:	b510      	push	{r4, lr}
 8016b14:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016b18:	888a      	ldrh	r2, [r1, #4]
 8016b1a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016b1e:	4422      	add	r2, r4
 8016b20:	b212      	sxth	r2, r2
 8016b22:	4293      	cmp	r3, r2
 8016b24:	da15      	bge.n	8016b52 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b26:	8882      	ldrh	r2, [r0, #4]
 8016b28:	4413      	add	r3, r2
 8016b2a:	b21b      	sxth	r3, r3
 8016b2c:	429c      	cmp	r4, r3
 8016b2e:	da10      	bge.n	8016b52 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b30:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016b34:	88c9      	ldrh	r1, [r1, #6]
 8016b36:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016b3a:	4419      	add	r1, r3
 8016b3c:	b209      	sxth	r1, r1
 8016b3e:	428a      	cmp	r2, r1
 8016b40:	da07      	bge.n	8016b52 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b42:	88c0      	ldrh	r0, [r0, #6]
 8016b44:	4410      	add	r0, r2
 8016b46:	b200      	sxth	r0, r0
 8016b48:	4283      	cmp	r3, r0
 8016b4a:	bfac      	ite	ge
 8016b4c:	2000      	movge	r0, #0
 8016b4e:	2001      	movlt	r0, #1
 8016b50:	bd10      	pop	{r4, pc}
 8016b52:	2000      	movs	r0, #0
 8016b54:	e7fc      	b.n	8016b50 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016b56 <_ZN8touchgfx4Rect10restrictToEss>:
 8016b56:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016b5a:	2b00      	cmp	r3, #0
 8016b5c:	b510      	push	{r4, lr}
 8016b5e:	da04      	bge.n	8016b6a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016b60:	8884      	ldrh	r4, [r0, #4]
 8016b62:	4423      	add	r3, r4
 8016b64:	8083      	strh	r3, [r0, #4]
 8016b66:	2300      	movs	r3, #0
 8016b68:	8003      	strh	r3, [r0, #0]
 8016b6a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016b6e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016b72:	1b09      	subs	r1, r1, r4
 8016b74:	428b      	cmp	r3, r1
 8016b76:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016b7a:	bfc8      	it	gt
 8016b7c:	8081      	strhgt	r1, [r0, #4]
 8016b7e:	2b00      	cmp	r3, #0
 8016b80:	da04      	bge.n	8016b8c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016b82:	88c1      	ldrh	r1, [r0, #6]
 8016b84:	440b      	add	r3, r1
 8016b86:	80c3      	strh	r3, [r0, #6]
 8016b88:	2300      	movs	r3, #0
 8016b8a:	8043      	strh	r3, [r0, #2]
 8016b8c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016b90:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016b94:	1a52      	subs	r2, r2, r1
 8016b96:	4293      	cmp	r3, r2
 8016b98:	bfc8      	it	gt
 8016b9a:	80c2      	strhgt	r2, [r0, #6]
 8016b9c:	bd10      	pop	{r4, pc}
	...

08016ba0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016ba0:	b510      	push	{r4, lr}
 8016ba2:	4b10      	ldr	r3, [pc, #64]	; (8016be4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016ba4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016ba8:	4b0f      	ldr	r3, [pc, #60]	; (8016be8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8016baa:	460c      	mov	r4, r1
 8016bac:	4620      	mov	r0, r4
 8016bae:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016bb2:	f7ff ffd0 	bl	8016b56 <_ZN8touchgfx4Rect10restrictToEss>
 8016bb6:	4b0d      	ldr	r3, [pc, #52]	; (8016bec <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016bb8:	6818      	ldr	r0, [r3, #0]
 8016bba:	b190      	cbz	r0, 8016be2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016bbc:	6803      	ldr	r3, [r0, #0]
 8016bbe:	4621      	mov	r1, r4
 8016bc0:	689b      	ldr	r3, [r3, #8]
 8016bc2:	4798      	blx	r3
 8016bc4:	4b0a      	ldr	r3, [pc, #40]	; (8016bf0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016bc6:	6818      	ldr	r0, [r3, #0]
 8016bc8:	b118      	cbz	r0, 8016bd2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016bca:	6803      	ldr	r3, [r0, #0]
 8016bcc:	4621      	mov	r1, r4
 8016bce:	689b      	ldr	r3, [r3, #8]
 8016bd0:	4798      	blx	r3
 8016bd2:	4b08      	ldr	r3, [pc, #32]	; (8016bf4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016bd4:	6818      	ldr	r0, [r3, #0]
 8016bd6:	6803      	ldr	r3, [r0, #0]
 8016bd8:	4621      	mov	r1, r4
 8016bda:	69db      	ldr	r3, [r3, #28]
 8016bdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016be0:	4718      	bx	r3
 8016be2:	bd10      	pop	{r4, pc}
 8016be4:	2001382a 	.word	0x2001382a
 8016be8:	20013828 	.word	0x20013828
 8016bec:	20013878 	.word	0x20013878
 8016bf0:	20013874 	.word	0x20013874
 8016bf4:	20013834 	.word	0x20013834

08016bf8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016bfa:	4606      	mov	r6, r0
 8016bfc:	4608      	mov	r0, r1
 8016bfe:	460f      	mov	r7, r1
 8016c00:	f7fa f957 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c04:	b9e8      	cbnz	r0, 8016c42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c06:	f9b7 5000 	ldrsh.w	r5, [r7]
 8016c0a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016c0e:	42a5      	cmp	r5, r4
 8016c10:	db17      	blt.n	8016c42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c12:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016c16:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8016c1a:	429a      	cmp	r2, r3
 8016c1c:	db11      	blt.n	8016c42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c1e:	88b9      	ldrh	r1, [r7, #4]
 8016c20:	440d      	add	r5, r1
 8016c22:	88b1      	ldrh	r1, [r6, #4]
 8016c24:	440c      	add	r4, r1
 8016c26:	b22d      	sxth	r5, r5
 8016c28:	b224      	sxth	r4, r4
 8016c2a:	42a5      	cmp	r5, r4
 8016c2c:	dc09      	bgt.n	8016c42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c2e:	88f8      	ldrh	r0, [r7, #6]
 8016c30:	4410      	add	r0, r2
 8016c32:	88f2      	ldrh	r2, [r6, #6]
 8016c34:	4413      	add	r3, r2
 8016c36:	b200      	sxth	r0, r0
 8016c38:	b21b      	sxth	r3, r3
 8016c3a:	4298      	cmp	r0, r3
 8016c3c:	bfcc      	ite	gt
 8016c3e:	2000      	movgt	r0, #0
 8016c40:	2001      	movle	r0, #1
 8016c42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016c44 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016c44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c46:	4604      	mov	r4, r0
 8016c48:	4608      	mov	r0, r1
 8016c4a:	460d      	mov	r5, r1
 8016c4c:	f7fa f931 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c50:	b978      	cbnz	r0, 8016c72 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016c52:	4620      	mov	r0, r4
 8016c54:	f7fa f92d 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c58:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016c5c:	b150      	cbz	r0, 8016c74 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016c5e:	8026      	strh	r6, [r4, #0]
 8016c60:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016c64:	8063      	strh	r3, [r4, #2]
 8016c66:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8016c6a:	80a3      	strh	r3, [r4, #4]
 8016c6c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016c70:	80e3      	strh	r3, [r4, #6]
 8016c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016c74:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016c78:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016c7c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016c80:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016c84:	88ed      	ldrh	r5, [r5, #6]
 8016c86:	42b1      	cmp	r1, r6
 8016c88:	460f      	mov	r7, r1
 8016c8a:	bfa8      	it	ge
 8016c8c:	4637      	movge	r7, r6
 8016c8e:	4293      	cmp	r3, r2
 8016c90:	4618      	mov	r0, r3
 8016c92:	4466      	add	r6, ip
 8016c94:	bfa8      	it	ge
 8016c96:	4610      	movge	r0, r2
 8016c98:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016c9c:	8027      	strh	r7, [r4, #0]
 8016c9e:	442a      	add	r2, r5
 8016ca0:	88e5      	ldrh	r5, [r4, #6]
 8016ca2:	8060      	strh	r0, [r4, #2]
 8016ca4:	4461      	add	r1, ip
 8016ca6:	442b      	add	r3, r5
 8016ca8:	b236      	sxth	r6, r6
 8016caa:	b209      	sxth	r1, r1
 8016cac:	b212      	sxth	r2, r2
 8016cae:	b21b      	sxth	r3, r3
 8016cb0:	428e      	cmp	r6, r1
 8016cb2:	bfac      	ite	ge
 8016cb4:	ebc7 0106 	rsbge	r1, r7, r6
 8016cb8:	ebc7 0101 	rsblt	r1, r7, r1
 8016cbc:	429a      	cmp	r2, r3
 8016cbe:	bfac      	ite	ge
 8016cc0:	ebc0 0202 	rsbge	r2, r0, r2
 8016cc4:	ebc0 0203 	rsblt	r2, r0, r3
 8016cc8:	80a1      	strh	r1, [r4, #4]
 8016cca:	80e2      	strh	r2, [r4, #6]
 8016ccc:	e7d1      	b.n	8016c72 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016cd0 <_ZN8touchgfx11Application11getInstanceEv>:
 8016cd0:	4b01      	ldr	r3, [pc, #4]	; (8016cd8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8016cd2:	6818      	ldr	r0, [r3, #0]
 8016cd4:	4770      	bx	lr
 8016cd6:	bf00      	nop
 8016cd8:	20013888 	.word	0x20013888

08016cdc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016cde:	4b10      	ldr	r3, [pc, #64]	; (8016d20 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016ce0:	781b      	ldrb	r3, [r3, #0]
 8016ce2:	4605      	mov	r5, r0
 8016ce4:	b1d3      	cbz	r3, 8016d1c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8016ce6:	4b0f      	ldr	r3, [pc, #60]	; (8016d24 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016ce8:	4f0f      	ldr	r7, [pc, #60]	; (8016d28 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8016cea:	881c      	ldrh	r4, [r3, #0]
 8016cec:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8016cf0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8016cf4:	42a3      	cmp	r3, r4
 8016cf6:	d90e      	bls.n	8016d16 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016cf8:	683b      	ldr	r3, [r7, #0]
 8016cfa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016cfe:	b10a      	cbz	r2, 8016d04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016d00:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016d02:	b900      	cbnz	r0, 8016d06 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016d04:	6898      	ldr	r0, [r3, #8]
 8016d06:	6803      	ldr	r3, [r0, #0]
 8016d08:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016d0c:	69db      	ldr	r3, [r3, #28]
 8016d0e:	3401      	adds	r4, #1
 8016d10:	4798      	blx	r3
 8016d12:	b2a4      	uxth	r4, r4
 8016d14:	e7ec      	b.n	8016cf0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016d16:	2300      	movs	r3, #0
 8016d18:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8016d1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016d1e:	bf00      	nop
 8016d20:	20013832 	.word	0x20013832
 8016d24:	20000088 	.word	0x20000088
 8016d28:	20013834 	.word	0x20013834

08016d2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016d2c:	b510      	push	{r4, lr}
 8016d2e:	2300      	movs	r3, #0
 8016d30:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016d34:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016d38:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016d3c:	4604      	mov	r4, r0
 8016d3e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016d42:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016d46:	429a      	cmp	r2, r3
 8016d48:	d90e      	bls.n	8016d68 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016d4a:	18e2      	adds	r2, r4, r3
 8016d4c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016d50:	b122      	cbz	r2, 8016d5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016d52:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016d56:	6803      	ldr	r3, [r0, #0]
 8016d58:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d5a:	4798      	blx	r3
 8016d5c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016d60:	3301      	adds	r3, #1
 8016d62:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016d66:	e7ea      	b.n	8016d3e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016d68:	bd10      	pop	{r4, pc}

08016d6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8016d6a:	b530      	push	{r4, r5, lr}
 8016d6c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016d70:	2200      	movs	r2, #0
 8016d72:	b293      	uxth	r3, r2
 8016d74:	429d      	cmp	r5, r3
 8016d76:	d90e      	bls.n	8016d96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016d78:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016d7c:	428b      	cmp	r3, r1
 8016d7e:	d10b      	bne.n	8016d98 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016d80:	1884      	adds	r4, r0, r2
 8016d82:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016d86:	b13b      	cbz	r3, 8016d98 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016d88:	3b01      	subs	r3, #1
 8016d8a:	b2db      	uxtb	r3, r3
 8016d8c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016d90:	b90b      	cbnz	r3, 8016d96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016d92:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016d96:	bd30      	pop	{r4, r5, pc}
 8016d98:	3201      	adds	r2, #1
 8016d9a:	e7ea      	b.n	8016d72 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016d9c:	2300      	movs	r3, #0
 8016d9e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016da2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8016da6:	30a4      	adds	r0, #164	; 0xa4
 8016da8:	f802 3b01 	strb.w	r3, [r2], #1
 8016dac:	4282      	cmp	r2, r0
 8016dae:	d1fb      	bne.n	8016da8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016db0:	4770      	bx	lr
	...

08016db4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016db4:	b570      	push	{r4, r5, r6, lr}
 8016db6:	4c0b      	ldr	r4, [pc, #44]	; (8016de4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016db8:	4605      	mov	r5, r0
 8016dba:	6820      	ldr	r0, [r4, #0]
 8016dbc:	460e      	mov	r6, r1
 8016dbe:	b110      	cbz	r0, 8016dc6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016dc0:	6803      	ldr	r3, [r0, #0]
 8016dc2:	695b      	ldr	r3, [r3, #20]
 8016dc4:	4798      	blx	r3
 8016dc6:	1d28      	adds	r0, r5, #4
 8016dc8:	f7ff ffe8 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016dcc:	6026      	str	r6, [r4, #0]
 8016dce:	6833      	ldr	r3, [r6, #0]
 8016dd0:	4630      	mov	r0, r6
 8016dd2:	68db      	ldr	r3, [r3, #12]
 8016dd4:	4798      	blx	r3
 8016dd6:	682b      	ldr	r3, [r5, #0]
 8016dd8:	4628      	mov	r0, r5
 8016dda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016ddc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016de0:	4718      	bx	r3
 8016de2:	bf00      	nop
 8016de4:	20013878 	.word	0x20013878

08016de8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016de8:	2300      	movs	r3, #0
 8016dea:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016dee:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8016df2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016df4:	461a      	mov	r2, r3
 8016df6:	461c      	mov	r4, r3
 8016df8:	461d      	mov	r5, r3
 8016dfa:	459c      	cmp	ip, r3
 8016dfc:	dd1a      	ble.n	8016e34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8016dfe:	18c6      	adds	r6, r0, r3
 8016e00:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016e04:	b16e      	cbz	r6, 8016e22 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016e06:	429a      	cmp	r2, r3
 8016e08:	d008      	beq.n	8016e1c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016e0a:	fa1f fe82 	uxth.w	lr, r2
 8016e0e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016e12:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016e16:	1887      	adds	r7, r0, r2
 8016e18:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8016e1c:	3201      	adds	r2, #1
 8016e1e:	3301      	adds	r3, #1
 8016e20:	e7eb      	b.n	8016dfa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016e22:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016e26:	4299      	cmp	r1, r3
 8016e28:	bfa8      	it	ge
 8016e2a:	3501      	addge	r5, #1
 8016e2c:	429e      	cmp	r6, r3
 8016e2e:	bfc8      	it	gt
 8016e30:	3401      	addgt	r4, #1
 8016e32:	e7f4      	b.n	8016e1e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016e34:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016e38:	1b49      	subs	r1, r1, r5
 8016e3a:	1b1b      	subs	r3, r3, r4
 8016e3c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016e40:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016e44:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016e48:	4293      	cmp	r3, r2
 8016e4a:	dd03      	ble.n	8016e54 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016e4c:	3b01      	subs	r3, #1
 8016e4e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016e52:	e7f7      	b.n	8016e44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016e58 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016e58:	b570      	push	{r4, r5, r6, lr}
 8016e5a:	4d16      	ldr	r5, [pc, #88]	; (8016eb4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016e5c:	4604      	mov	r4, r0
 8016e5e:	6828      	ldr	r0, [r5, #0]
 8016e60:	b140      	cbz	r0, 8016e74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016e62:	7a03      	ldrb	r3, [r0, #8]
 8016e64:	b933      	cbnz	r3, 8016e74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016e66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016e6a:	6803      	ldr	r3, [r0, #0]
 8016e6c:	689b      	ldr	r3, [r3, #8]
 8016e6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e72:	4718      	bx	r3
 8016e74:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016e78:	4e0f      	ldr	r6, [pc, #60]	; (8016eb8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016e7a:	b973      	cbnz	r3, 8016e9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e7c:	b168      	cbz	r0, 8016e9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e7e:	7a03      	ldrb	r3, [r0, #8]
 8016e80:	b15b      	cbz	r3, 8016e9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e82:	6830      	ldr	r0, [r6, #0]
 8016e84:	b110      	cbz	r0, 8016e8c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016e86:	6803      	ldr	r3, [r0, #0]
 8016e88:	691b      	ldr	r3, [r3, #16]
 8016e8a:	4798      	blx	r3
 8016e8c:	6828      	ldr	r0, [r5, #0]
 8016e8e:	6803      	ldr	r3, [r0, #0]
 8016e90:	68db      	ldr	r3, [r3, #12]
 8016e92:	4798      	blx	r3
 8016e94:	2301      	movs	r3, #1
 8016e96:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016e9a:	3404      	adds	r4, #4
 8016e9c:	4620      	mov	r0, r4
 8016e9e:	f7ff ff45 	bl	8016d2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016ea2:	4620      	mov	r0, r4
 8016ea4:	f7ff ffa0 	bl	8016de8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016ea8:	6830      	ldr	r0, [r6, #0]
 8016eaa:	b110      	cbz	r0, 8016eb2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016eac:	6803      	ldr	r3, [r0, #0]
 8016eae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016eb0:	e7dd      	b.n	8016e6e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016eb2:	bd70      	pop	{r4, r5, r6, pc}
 8016eb4:	2001387c 	.word	0x2001387c
 8016eb8:	20013878 	.word	0x20013878

08016ebc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016ebe:	2300      	movs	r3, #0
 8016ec0:	4604      	mov	r4, r0
 8016ec2:	460d      	mov	r5, r1
 8016ec4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016ec8:	4618      	mov	r0, r3
 8016eca:	b29a      	uxth	r2, r3
 8016ecc:	4291      	cmp	r1, r2
 8016ece:	d911      	bls.n	8016ef4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016ed0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016ed4:	18e6      	adds	r6, r4, r3
 8016ed6:	42af      	cmp	r7, r5
 8016ed8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016edc:	d105      	bne.n	8016eea <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016ede:	2aff      	cmp	r2, #255	; 0xff
 8016ee0:	d002      	beq.n	8016ee8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016ee2:	3201      	adds	r2, #1
 8016ee4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016eea:	2a00      	cmp	r2, #0
 8016eec:	bf08      	it	eq
 8016eee:	2001      	moveq	r0, #1
 8016ef0:	3301      	adds	r3, #1
 8016ef2:	e7ea      	b.n	8016eca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016ef4:	b120      	cbz	r0, 8016f00 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016ef6:	2920      	cmp	r1, #32
 8016ef8:	d102      	bne.n	8016f00 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016efa:	4620      	mov	r0, r4
 8016efc:	f7ff ff74 	bl	8016de8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016f00:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016f04:	2b1f      	cmp	r3, #31
 8016f06:	d8ef      	bhi.n	8016ee8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016f08:	18e2      	adds	r2, r4, r3
 8016f0a:	2101      	movs	r1, #1
 8016f0c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016f10:	185a      	adds	r2, r3, r1
 8016f12:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8016f16:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016f1a:	e7e5      	b.n	8016ee8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016f1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016f1c:	4603      	mov	r3, r0
 8016f1e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016f22:	2200      	movs	r2, #0
 8016f24:	801a      	strh	r2, [r3, #0]
 8016f26:	805a      	strh	r2, [r3, #2]
 8016f28:	809a      	strh	r2, [r3, #4]
 8016f2a:	80da      	strh	r2, [r3, #6]
 8016f2c:	3308      	adds	r3, #8
 8016f2e:	428b      	cmp	r3, r1
 8016f30:	d1f8      	bne.n	8016f24 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016f32:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016f36:	4770      	bx	lr

08016f38 <_ZN8touchgfx11ApplicationC1Ev>:
 8016f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016f3a:	4606      	mov	r6, r0
 8016f3c:	4b1c      	ldr	r3, [pc, #112]	; (8016fb0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016f3e:	f846 3b04 	str.w	r3, [r6], #4
 8016f42:	4604      	mov	r4, r0
 8016f44:	2500      	movs	r5, #0
 8016f46:	22a8      	movs	r2, #168	; 0xa8
 8016f48:	2100      	movs	r1, #0
 8016f4a:	4630      	mov	r0, r6
 8016f4c:	f014 ff8d 	bl	802be6a <memset>
 8016f50:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016f54:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016f58:	f7ff ffe0 	bl	8016f1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f5c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016f60:	f7ff ffdc 	bl	8016f1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f64:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016f68:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016f6c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016f70:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016f74:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016f78:	490e      	ldr	r1, [pc, #56]	; (8016fb4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016f7a:	480f      	ldr	r0, [pc, #60]	; (8016fb8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016f7c:	4f0f      	ldr	r7, [pc, #60]	; (8016fbc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016f7e:	f010 fe27 	bl	8027bd0 <CRC_Lock>
 8016f82:	4b0f      	ldr	r3, [pc, #60]	; (8016fc0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016f84:	b158      	cbz	r0, 8016f9e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016f86:	801d      	strh	r5, [r3, #0]
 8016f88:	4a0e      	ldr	r2, [pc, #56]	; (8016fc4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016f8a:	2300      	movs	r3, #0
 8016f8c:	6013      	str	r3, [r2, #0]
 8016f8e:	4a0e      	ldr	r2, [pc, #56]	; (8016fc8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016f90:	603b      	str	r3, [r7, #0]
 8016f92:	4630      	mov	r0, r6
 8016f94:	6013      	str	r3, [r2, #0]
 8016f96:	f7ff ff01 	bl	8016d9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016f9a:	4620      	mov	r0, r4
 8016f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016f9e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016fa2:	2002      	movs	r0, #2
 8016fa4:	801a      	strh	r2, [r3, #0]
 8016fa6:	6038      	str	r0, [r7, #0]
 8016fa8:	f001 fb4a 	bl	8018640 <_ZN8touchgfx6Screen4drawEv>
 8016fac:	e7ec      	b.n	8016f88 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016fae:	bf00      	nop
 8016fb0:	0802fe80 	.word	0x0802fe80
 8016fb4:	b5e8b5cd 	.word	0xb5e8b5cd
 8016fb8:	f407a5c2 	.word	0xf407a5c2
 8016fbc:	20013878 	.word	0x20013878
 8016fc0:	20000088 	.word	0x20000088
 8016fc4:	20013888 	.word	0x20013888
 8016fc8:	2001387c 	.word	0x2001387c

08016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016fcc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016fd0:	3b01      	subs	r3, #1
 8016fd2:	b29b      	uxth	r3, r3
 8016fd4:	428b      	cmp	r3, r1
 8016fd6:	b510      	push	{r4, lr}
 8016fd8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016fdc:	d908      	bls.n	8016ff0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016fde:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016fe2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016fe6:	681a      	ldr	r2, [r3, #0]
 8016fe8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016fec:	685a      	ldr	r2, [r3, #4]
 8016fee:	6062      	str	r2, [r4, #4]
 8016ff0:	bd10      	pop	{r4, pc}
	...

08016ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ff8:	4b8f      	ldr	r3, [pc, #572]	; (8017238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016ffa:	b08f      	sub	sp, #60	; 0x3c
 8016ffc:	ac0a      	add	r4, sp, #40	; 0x28
 8016ffe:	e884 0006 	stmia.w	r4, {r1, r2}
 8017002:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017006:	4b8d      	ldr	r3, [pc, #564]	; (801723c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8017008:	4683      	mov	fp, r0
 801700a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801700e:	4620      	mov	r0, r4
 8017010:	f7ff fda1 	bl	8016b56 <_ZN8touchgfx4Rect10restrictToEss>
 8017014:	4620      	mov	r0, r4
 8017016:	f7f9 ff4c 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801701a:	2800      	cmp	r0, #0
 801701c:	d16a      	bne.n	80170f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801701e:	9403      	str	r4, [sp, #12]
 8017020:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017024:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8017028:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801702c:	35a4      	adds	r5, #164	; 0xa4
 801702e:	9301      	str	r3, [sp, #4]
 8017030:	b15c      	cbz	r4, 801704a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8017032:	4629      	mov	r1, r5
 8017034:	9803      	ldr	r0, [sp, #12]
 8017036:	f7ff fddf 	bl	8016bf8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801703a:	3c01      	subs	r4, #1
 801703c:	b118      	cbz	r0, 8017046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801703e:	b2a1      	uxth	r1, r4
 8017040:	9801      	ldr	r0, [sp, #4]
 8017042:	f7ff ffc3 	bl	8016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017046:	3d08      	subs	r5, #8
 8017048:	e7f2      	b.n	8017030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801704a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801704e:	f8cd a010 	str.w	sl, [sp, #16]
 8017052:	f10a 33ff 	add.w	r3, sl, #4294967295
 8017056:	9302      	str	r3, [sp, #8]
 8017058:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801705c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8017060:	9306      	str	r3, [sp, #24]
 8017062:	445c      	add	r4, fp
 8017064:	2500      	movs	r5, #0
 8017066:	4626      	mov	r6, r4
 8017068:	f8cd a014 	str.w	sl, [sp, #20]
 801706c:	462f      	mov	r7, r5
 801706e:	9b05      	ldr	r3, [sp, #20]
 8017070:	2b00      	cmp	r3, #0
 8017072:	d073      	beq.n	801715c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8017074:	9903      	ldr	r1, [sp, #12]
 8017076:	4630      	mov	r0, r6
 8017078:	f7ff fd4b 	bl	8016b12 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801707c:	b350      	cbz	r0, 80170d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801707e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8017082:	f9b6 c000 	ldrsh.w	ip, [r6]
 8017086:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801708a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801708e:	45e6      	cmp	lr, ip
 8017090:	db33      	blt.n	80170fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017092:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017096:	88b3      	ldrh	r3, [r6, #4]
 8017098:	4472      	add	r2, lr
 801709a:	4463      	add	r3, ip
 801709c:	b212      	sxth	r2, r2
 801709e:	b21b      	sxth	r3, r3
 80170a0:	429a      	cmp	r2, r3
 80170a2:	dc2a      	bgt.n	80170fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80170a4:	88f3      	ldrh	r3, [r6, #6]
 80170a6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80170aa:	fa1f f289 	uxth.w	r2, r9
 80170ae:	4413      	add	r3, r2
 80170b0:	b29b      	uxth	r3, r3
 80170b2:	45c8      	cmp	r8, r9
 80170b4:	fa1f fc88 	uxth.w	ip, r8
 80170b8:	fa0f fe83 	sxth.w	lr, r3
 80170bc:	db0f      	blt.n	80170de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80170be:	eba3 030c 	sub.w	r3, r3, ip
 80170c2:	1ac9      	subs	r1, r1, r3
 80170c4:	b209      	sxth	r1, r1
 80170c6:	2900      	cmp	r1, #0
 80170c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80170cc:	dd12      	ble.n	80170f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80170ce:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80170d2:	4605      	mov	r5, r0
 80170d4:	9b05      	ldr	r3, [sp, #20]
 80170d6:	3b01      	subs	r3, #1
 80170d8:	9305      	str	r3, [sp, #20]
 80170da:	3e08      	subs	r6, #8
 80170dc:	e7c7      	b.n	801706e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80170de:	4461      	add	r1, ip
 80170e0:	b209      	sxth	r1, r1
 80170e2:	4571      	cmp	r1, lr
 80170e4:	dc38      	bgt.n	8017158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170e6:	eba2 020c 	sub.w	r2, r2, ip
 80170ea:	b212      	sxth	r2, r2
 80170ec:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80170f0:	2a00      	cmp	r2, #0
 80170f2:	dcee      	bgt.n	80170d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80170f4:	b00f      	add	sp, #60	; 0x3c
 80170f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170fa:	45c8      	cmp	r8, r9
 80170fc:	db2c      	blt.n	8017158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170fe:	88f3      	ldrh	r3, [r6, #6]
 8017100:	4499      	add	r9, r3
 8017102:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8017106:	4498      	add	r8, r3
 8017108:	fa0f f989 	sxth.w	r9, r9
 801710c:	fa0f f888 	sxth.w	r8, r8
 8017110:	45c1      	cmp	r9, r8
 8017112:	db21      	blt.n	8017158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017114:	88b3      	ldrh	r3, [r6, #4]
 8017116:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801711a:	fa1f f28c 	uxth.w	r2, ip
 801711e:	4413      	add	r3, r2
 8017120:	b29b      	uxth	r3, r3
 8017122:	45e6      	cmp	lr, ip
 8017124:	fa1f f88e 	uxth.w	r8, lr
 8017128:	fa0f f983 	sxth.w	r9, r3
 801712c:	db0a      	blt.n	8017144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801712e:	eba3 0308 	sub.w	r3, r3, r8
 8017132:	1ac9      	subs	r1, r1, r3
 8017134:	b209      	sxth	r1, r1
 8017136:	2900      	cmp	r1, #0
 8017138:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801713c:	ddda      	ble.n	80170f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801713e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8017142:	e7c6      	b.n	80170d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017144:	4441      	add	r1, r8
 8017146:	b209      	sxth	r1, r1
 8017148:	4549      	cmp	r1, r9
 801714a:	dc05      	bgt.n	8017158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801714c:	eba2 0208 	sub.w	r2, r2, r8
 8017150:	b212      	sxth	r2, r2
 8017152:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8017156:	e7cb      	b.n	80170f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8017158:	4607      	mov	r7, r0
 801715a:	e7bb      	b.n	80170d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801715c:	2d00      	cmp	r5, #0
 801715e:	d181      	bne.n	8017064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8017160:	2f00      	cmp	r7, #0
 8017162:	f000 81dd 	beq.w	8017520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017166:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801716a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801716e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8017172:	b2b3      	uxth	r3, r6
 8017174:	9305      	str	r3, [sp, #20]
 8017176:	9a05      	ldr	r2, [sp, #20]
 8017178:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801717c:	4413      	add	r3, r2
 801717e:	b2ba      	uxth	r2, r7
 8017180:	4492      	add	sl, r2
 8017182:	b29b      	uxth	r3, r3
 8017184:	fa1f fa8a 	uxth.w	sl, sl
 8017188:	fa0f f883 	sxth.w	r8, r3
 801718c:	fa0f f98a 	sxth.w	r9, sl
 8017190:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8017194:	9b04      	ldr	r3, [sp, #16]
 8017196:	2b00      	cmp	r3, #0
 8017198:	d052      	beq.n	8017240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801719a:	9903      	ldr	r1, [sp, #12]
 801719c:	4620      	mov	r0, r4
 801719e:	f7ff fcb8 	bl	8016b12 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80171a2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80171a6:	b1c0      	cbz	r0, 80171da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80171a8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80171ac:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80171b0:	4576      	cmp	r6, lr
 80171b2:	dc22      	bgt.n	80171fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80171b4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80171b8:	44f4      	add	ip, lr
 80171ba:	fa0f fc8c 	sxth.w	ip, ip
 80171be:	45e0      	cmp	r8, ip
 80171c0:	db1b      	blt.n	80171fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80171c2:	428f      	cmp	r7, r1
 80171c4:	fa1f fc81 	uxth.w	ip, r1
 80171c8:	88e1      	ldrh	r1, [r4, #6]
 80171ca:	dc0d      	bgt.n	80171e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80171cc:	ebaa 0c0c 	sub.w	ip, sl, ip
 80171d0:	eba1 010c 	sub.w	r1, r1, ip
 80171d4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80171d8:	80e1      	strh	r1, [r4, #6]
 80171da:	4628      	mov	r0, r5
 80171dc:	9904      	ldr	r1, [sp, #16]
 80171de:	3901      	subs	r1, #1
 80171e0:	9104      	str	r1, [sp, #16]
 80171e2:	3c08      	subs	r4, #8
 80171e4:	4605      	mov	r5, r0
 80171e6:	e7d3      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80171e8:	4461      	add	r1, ip
 80171ea:	b209      	sxth	r1, r1
 80171ec:	4549      	cmp	r1, r9
 80171ee:	dcf5      	bgt.n	80171dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171f0:	eba2 0c0c 	sub.w	ip, r2, ip
 80171f4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80171f8:	e7ef      	b.n	80171da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80171fa:	428f      	cmp	r7, r1
 80171fc:	dcee      	bgt.n	80171dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171fe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8017202:	4461      	add	r1, ip
 8017204:	b209      	sxth	r1, r1
 8017206:	4589      	cmp	r9, r1
 8017208:	dbe8      	blt.n	80171dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801720a:	4576      	cmp	r6, lr
 801720c:	fa1f fc8e 	uxth.w	ip, lr
 8017210:	88a1      	ldrh	r1, [r4, #4]
 8017212:	dc07      	bgt.n	8017224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8017214:	eba3 0c0c 	sub.w	ip, r3, ip
 8017218:	eba1 010c 	sub.w	r1, r1, ip
 801721c:	f8a4 8000 	strh.w	r8, [r4]
 8017220:	80a1      	strh	r1, [r4, #4]
 8017222:	e7da      	b.n	80171da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017224:	4461      	add	r1, ip
 8017226:	b209      	sxth	r1, r1
 8017228:	4588      	cmp	r8, r1
 801722a:	dbd7      	blt.n	80171dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801722c:	9905      	ldr	r1, [sp, #20]
 801722e:	eba1 0c0c 	sub.w	ip, r1, ip
 8017232:	f8a4 c004 	strh.w	ip, [r4, #4]
 8017236:	e7d0      	b.n	80171da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017238:	2001382a 	.word	0x2001382a
 801723c:	20013828 	.word	0x20013828
 8017240:	2d00      	cmp	r5, #0
 8017242:	f000 816d 	beq.w	8017520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017246:	9b06      	ldr	r3, [sp, #24]
 8017248:	445b      	add	r3, fp
 801724a:	461c      	mov	r4, r3
 801724c:	9b02      	ldr	r3, [sp, #8]
 801724e:	3301      	adds	r3, #1
 8017250:	f000 8166 	beq.w	8017520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017254:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8017258:	4629      	mov	r1, r5
 801725a:	9803      	ldr	r0, [sp, #12]
 801725c:	f7ff fccc 	bl	8016bf8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8017260:	b120      	cbz	r0, 801726c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8017262:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017266:	9801      	ldr	r0, [sp, #4]
 8017268:	f7ff feb0 	bl	8016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801726c:	9903      	ldr	r1, [sp, #12]
 801726e:	4628      	mov	r0, r5
 8017270:	f7ff fc4f 	bl	8016b12 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017274:	2800      	cmp	r0, #0
 8017276:	f000 809c 	beq.w	80173b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801727a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801727e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017282:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8017286:	9309      	str	r3, [sp, #36]	; 0x24
 8017288:	fa1f f189 	uxth.w	r1, r9
 801728c:	eb01 0c03 	add.w	ip, r1, r3
 8017290:	fa1f fa8c 	uxth.w	sl, ip
 8017294:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017298:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801729c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80172a0:	b283      	uxth	r3, r0
 80172a2:	eb03 050c 	add.w	r5, r3, ip
 80172a6:	b2ad      	uxth	r5, r5
 80172a8:	9505      	str	r5, [sp, #20]
 80172aa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80172ae:	9504      	str	r5, [sp, #16]
 80172b0:	4548      	cmp	r0, r9
 80172b2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80172b6:	f340 8099 	ble.w	80173ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80172ba:	1a5b      	subs	r3, r3, r1
 80172bc:	b29b      	uxth	r3, r3
 80172be:	4596      	cmp	lr, r2
 80172c0:	fa0f f08a 	sxth.w	r0, sl
 80172c4:	b21e      	sxth	r6, r3
 80172c6:	dd2e      	ble.n	8017326 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80172c8:	9f02      	ldr	r7, [sp, #8]
 80172ca:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80172ce:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80172d2:	9f04      	ldr	r7, [sp, #16]
 80172d4:	1a3f      	subs	r7, r7, r0
 80172d6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80172da:	fa1f fe8e 	uxth.w	lr, lr
 80172de:	b292      	uxth	r2, r2
 80172e0:	ebae 0102 	sub.w	r1, lr, r2
 80172e4:	44a6      	add	lr, r4
 80172e6:	4402      	add	r2, r0
 80172e8:	b289      	uxth	r1, r1
 80172ea:	fa0f fe8e 	sxth.w	lr, lr
 80172ee:	b212      	sxth	r2, r2
 80172f0:	b20d      	sxth	r5, r1
 80172f2:	ebae 0202 	sub.w	r2, lr, r2
 80172f6:	436f      	muls	r7, r5
 80172f8:	4372      	muls	r2, r6
 80172fa:	4297      	cmp	r7, r2
 80172fc:	db09      	blt.n	8017312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80172fe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8017302:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8017306:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801730a:	449c      	add	ip, r3
 801730c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8017310:	e686      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017312:	4421      	add	r1, r4
 8017314:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8017318:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801731c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017320:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017324:	e67c      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017326:	9f04      	ldr	r7, [sp, #16]
 8017328:	42b8      	cmp	r0, r7
 801732a:	da27      	bge.n	801737c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801732c:	9902      	ldr	r1, [sp, #8]
 801732e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8017332:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8017336:	eb05 010e 	add.w	r1, r5, lr
 801733a:	fa1f f881 	uxth.w	r8, r1
 801733e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8017342:	4411      	add	r1, r2
 8017344:	eba1 0108 	sub.w	r1, r1, r8
 8017348:	b289      	uxth	r1, r1
 801734a:	fa0f f988 	sxth.w	r9, r8
 801734e:	eba2 020e 	sub.w	r2, r2, lr
 8017352:	fa0f f881 	sxth.w	r8, r1
 8017356:	1a3f      	subs	r7, r7, r0
 8017358:	4372      	muls	r2, r6
 801735a:	fb08 f707 	mul.w	r7, r8, r7
 801735e:	42ba      	cmp	r2, r7
 8017360:	dc06      	bgt.n	8017370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8017362:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8017366:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801736a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801736e:	e7ca      	b.n	8017306 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8017370:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8017374:	4429      	add	r1, r5
 8017376:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801737a:	e651      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801737c:	9805      	ldr	r0, [sp, #20]
 801737e:	ebaa 0000 	sub.w	r0, sl, r0
 8017382:	b280      	uxth	r0, r0
 8017384:	2d06      	cmp	r5, #6
 8017386:	fa0f fe80 	sxth.w	lr, r0
 801738a:	d817      	bhi.n	80173bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801738c:	9b04      	ldr	r3, [sp, #16]
 801738e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8017392:	1c6b      	adds	r3, r5, #1
 8017394:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8017398:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801739c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80173a0:	9b01      	ldr	r3, [sp, #4]
 80173a2:	9801      	ldr	r0, [sp, #4]
 80173a4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80173a8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80173ac:	805a      	strh	r2, [r3, #2]
 80173ae:	809e      	strh	r6, [r3, #4]
 80173b0:	80d9      	strh	r1, [r3, #6]
 80173b2:	9b02      	ldr	r3, [sp, #8]
 80173b4:	3b01      	subs	r3, #1
 80173b6:	9302      	str	r3, [sp, #8]
 80173b8:	3c08      	subs	r4, #8
 80173ba:	e747      	b.n	801724c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80173bc:	9a02      	ldr	r2, [sp, #8]
 80173be:	45b6      	cmp	lr, r6
 80173c0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80173c4:	db0d      	blt.n	80173e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80173c6:	449c      	add	ip, r3
 80173c8:	fa1f fc8c 	uxth.w	ip, ip
 80173cc:	445a      	add	r2, fp
 80173ce:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80173d2:	448c      	add	ip, r1
 80173d4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80173d8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80173dc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80173e0:	e61e      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80173e2:	445a      	add	r2, fp
 80173e4:	4484      	add	ip, r0
 80173e6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80173ea:	e78f      	b.n	801730c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80173ec:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80173f0:	fa1f f18e 	uxth.w	r1, lr
 80173f4:	eb01 0806 	add.w	r8, r1, r6
 80173f8:	b293      	uxth	r3, r2
 80173fa:	fa1f f888 	uxth.w	r8, r8
 80173fe:	9306      	str	r3, [sp, #24]
 8017400:	fa0f f388 	sxth.w	r3, r8
 8017404:	9307      	str	r3, [sp, #28]
 8017406:	9f06      	ldr	r7, [sp, #24]
 8017408:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801740c:	443b      	add	r3, r7
 801740e:	b29b      	uxth	r3, r3
 8017410:	4596      	cmp	lr, r2
 8017412:	9308      	str	r3, [sp, #32]
 8017414:	da24      	bge.n	8017460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8017416:	9905      	ldr	r1, [sp, #20]
 8017418:	eba3 0308 	sub.w	r3, r3, r8
 801741c:	ebaa 0401 	sub.w	r4, sl, r1
 8017420:	b2a4      	uxth	r4, r4
 8017422:	b29b      	uxth	r3, r3
 8017424:	b225      	sxth	r5, r4
 8017426:	b219      	sxth	r1, r3
 8017428:	eba2 020e 	sub.w	r2, r2, lr
 801742c:	eba9 0000 	sub.w	r0, r9, r0
 8017430:	436a      	muls	r2, r5
 8017432:	4348      	muls	r0, r1
 8017434:	4282      	cmp	r2, r0
 8017436:	9a02      	ldr	r2, [sp, #8]
 8017438:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801743c:	445a      	add	r2, fp
 801743e:	dc06      	bgt.n	801744e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8017440:	9b07      	ldr	r3, [sp, #28]
 8017442:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8017446:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801744a:	44a4      	add	ip, r4
 801744c:	e75e      	b.n	801730c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801744e:	9904      	ldr	r1, [sp, #16]
 8017450:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8017454:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8017458:	4433      	add	r3, r6
 801745a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801745e:	e5df      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017460:	9f06      	ldr	r7, [sp, #24]
 8017462:	9b04      	ldr	r3, [sp, #16]
 8017464:	1bc9      	subs	r1, r1, r7
 8017466:	fa0f f78a 	sxth.w	r7, sl
 801746a:	b289      	uxth	r1, r1
 801746c:	429f      	cmp	r7, r3
 801746e:	fa0f fe81 	sxth.w	lr, r1
 8017472:	dd23      	ble.n	80174bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8017474:	9a05      	ldr	r2, [sp, #20]
 8017476:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801747a:	9d07      	ldr	r5, [sp, #28]
 801747c:	ebaa 0202 	sub.w	r2, sl, r2
 8017480:	b292      	uxth	r2, r2
 8017482:	eba5 0a03 	sub.w	sl, r5, r3
 8017486:	b214      	sxth	r4, r2
 8017488:	eba9 0000 	sub.w	r0, r9, r0
 801748c:	9b02      	ldr	r3, [sp, #8]
 801748e:	fb0e f000 	mul.w	r0, lr, r0
 8017492:	fb04 fa0a 	mul.w	sl, r4, sl
 8017496:	00db      	lsls	r3, r3, #3
 8017498:	4550      	cmp	r0, sl
 801749a:	445b      	add	r3, fp
 801749c:	db03      	blt.n	80174a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801749e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80174a2:	4494      	add	ip, r2
 80174a4:	e732      	b.n	801730c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80174a6:	9a04      	ldr	r2, [sp, #16]
 80174a8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80174ac:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80174b0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80174b4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80174b8:	4431      	add	r1, r6
 80174ba:	e75c      	b.n	8017376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80174bc:	9b08      	ldr	r3, [sp, #32]
 80174be:	eba3 0308 	sub.w	r3, r3, r8
 80174c2:	b29b      	uxth	r3, r3
 80174c4:	2d06      	cmp	r5, #6
 80174c6:	b218      	sxth	r0, r3
 80174c8:	d813      	bhi.n	80174f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80174ca:	9b07      	ldr	r3, [sp, #28]
 80174cc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80174d0:	1c6b      	adds	r3, r5, #1
 80174d2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80174d6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80174da:	9b01      	ldr	r3, [sp, #4]
 80174dc:	9901      	ldr	r1, [sp, #4]
 80174de:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80174e2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80174e6:	805a      	strh	r2, [r3, #2]
 80174e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80174ea:	809a      	strh	r2, [r3, #4]
 80174ec:	f8a3 e006 	strh.w	lr, [r3, #6]
 80174f0:	e75f      	b.n	80173b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80174f2:	9c02      	ldr	r4, [sp, #8]
 80174f4:	4570      	cmp	r0, lr
 80174f6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80174fa:	db0d      	blt.n	8017518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80174fc:	4431      	add	r1, r6
 80174fe:	9b06      	ldr	r3, [sp, #24]
 8017500:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017504:	b289      	uxth	r1, r1
 8017506:	445c      	add	r4, fp
 8017508:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801750c:	4419      	add	r1, r3
 801750e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8017512:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8017516:	e583      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017518:	445c      	add	r4, fp
 801751a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801751e:	e79b      	b.n	8017458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017520:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017524:	1e65      	subs	r5, r4, #1
 8017526:	b2ad      	uxth	r5, r5
 8017528:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801752c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8017530:	42b5      	cmp	r5, r6
 8017532:	d044      	beq.n	80175be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017534:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017538:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801753c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017540:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8017544:	4282      	cmp	r2, r0
 8017546:	d11f      	bne.n	8017588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017548:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801754c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017550:	459c      	cmp	ip, r3
 8017552:	d119      	bne.n	8017588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017554:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8017558:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801755c:	19d8      	adds	r0, r3, r7
 801755e:	b200      	sxth	r0, r0
 8017560:	4288      	cmp	r0, r1
 8017562:	d109      	bne.n	8017578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017564:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8017568:	4413      	add	r3, r2
 801756a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801756e:	4629      	mov	r1, r5
 8017570:	9801      	ldr	r0, [sp, #4]
 8017572:	f7ff fd2b 	bl	8016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017576:	e003      	b.n	8017580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017578:	4411      	add	r1, r2
 801757a:	b209      	sxth	r1, r1
 801757c:	42b9      	cmp	r1, r7
 801757e:	d0f3      	beq.n	8017568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017580:	3d01      	subs	r5, #1
 8017582:	b2ad      	uxth	r5, r5
 8017584:	3c08      	subs	r4, #8
 8017586:	e7d3      	b.n	8017530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017588:	42b9      	cmp	r1, r7
 801758a:	d1f9      	bne.n	8017580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801758c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017590:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017594:	4299      	cmp	r1, r3
 8017596:	d1f3      	bne.n	8017580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017598:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801759c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80175a0:	181f      	adds	r7, r3, r0
 80175a2:	b23f      	sxth	r7, r7
 80175a4:	42ba      	cmp	r2, r7
 80175a6:	d105      	bne.n	80175b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80175a8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80175ac:	440b      	add	r3, r1
 80175ae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80175b2:	e7dc      	b.n	801756e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80175b4:	440a      	add	r2, r1
 80175b6:	b212      	sxth	r2, r2
 80175b8:	4290      	cmp	r0, r2
 80175ba:	d1e1      	bne.n	8017580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80175bc:	e7f6      	b.n	80175ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80175be:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80175c2:	2e07      	cmp	r6, #7
 80175c4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80175c8:	d812      	bhi.n	80175f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80175ca:	1c75      	adds	r5, r6, #1
 80175cc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80175d0:	9d01      	ldr	r5, [sp, #4]
 80175d2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80175d6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80175da:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80175de:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80175e2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80175e6:	442c      	add	r4, r5
 80175e8:	8061      	strh	r1, [r4, #2]
 80175ea:	80a2      	strh	r2, [r4, #4]
 80175ec:	80e3      	strh	r3, [r4, #6]
 80175ee:	e581      	b.n	80170f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80175f0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80175f4:	3e01      	subs	r6, #1
 80175f6:	445c      	add	r4, fp
 80175f8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80175fc:	f04f 37ff 	mov.w	r7, #4294967295
 8017600:	2500      	movs	r5, #0
 8017602:	9305      	str	r3, [sp, #20]
 8017604:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017608:	9302      	str	r3, [sp, #8]
 801760a:	1e72      	subs	r2, r6, #1
 801760c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017610:	9304      	str	r3, [sp, #16]
 8017612:	4691      	mov	r9, r2
 8017614:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8017618:	f1b9 3fff 	cmp.w	r9, #4294967295
 801761c:	bf14      	ite	ne
 801761e:	9905      	ldrne	r1, [sp, #20]
 8017620:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017624:	6818      	ldr	r0, [r3, #0]
 8017626:	9207      	str	r2, [sp, #28]
 8017628:	bf18      	it	ne
 801762a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801762e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017632:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017636:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801763a:	9306      	str	r3, [sp, #24]
 801763c:	fb18 f801 	smulbb	r8, r8, r1
 8017640:	6859      	ldr	r1, [r3, #4]
 8017642:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017646:	4671      	mov	r1, lr
 8017648:	a80c      	add	r0, sp, #48	; 0x30
 801764a:	f7ff fafb 	bl	8016c44 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801764e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8017652:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8017656:	9b04      	ldr	r3, [sp, #16]
 8017658:	9a02      	ldr	r2, [sp, #8]
 801765a:	fb10 f001 	smulbb	r0, r0, r1
 801765e:	fb02 8803 	mla	r8, r2, r3, r8
 8017662:	eba0 0108 	sub.w	r1, r0, r8
 8017666:	f04f 0c08 	mov.w	ip, #8
 801766a:	fb90 f0fc 	sdiv	r0, r0, ip
 801766e:	4288      	cmp	r0, r1
 8017670:	dc20      	bgt.n	80176b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017672:	4551      	cmp	r1, sl
 8017674:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017678:	da03      	bge.n	8017682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801767a:	b1d9      	cbz	r1, 80176b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801767c:	468a      	mov	sl, r1
 801767e:	464f      	mov	r7, r9
 8017680:	4635      	mov	r5, r6
 8017682:	f109 39ff 	add.w	r9, r9, #4294967295
 8017686:	f119 0f02 	cmn.w	r9, #2
 801768a:	d1c5      	bne.n	8017618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801768c:	4616      	mov	r6, r2
 801768e:	3201      	adds	r2, #1
 8017690:	f1a4 0408 	sub.w	r4, r4, #8
 8017694:	d1b6      	bne.n	8017604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017696:	9b01      	ldr	r3, [sp, #4]
 8017698:	b2ac      	uxth	r4, r5
 801769a:	00ed      	lsls	r5, r5, #3
 801769c:	1958      	adds	r0, r3, r5
 801769e:	1c7b      	adds	r3, r7, #1
 80176a0:	d10b      	bne.n	80176ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80176a2:	4601      	mov	r1, r0
 80176a4:	9803      	ldr	r0, [sp, #12]
 80176a6:	f7ff facd 	bl	8016c44 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80176aa:	4621      	mov	r1, r4
 80176ac:	9801      	ldr	r0, [sp, #4]
 80176ae:	f7ff fc8d 	bl	8016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80176b2:	e4b5      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80176b4:	464f      	mov	r7, r9
 80176b6:	4635      	mov	r5, r6
 80176b8:	e7ed      	b.n	8017696 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80176ba:	9b01      	ldr	r3, [sp, #4]
 80176bc:	00ff      	lsls	r7, r7, #3
 80176be:	19d9      	adds	r1, r3, r7
 80176c0:	f7ff fac0 	bl	8016c44 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80176c4:	9b03      	ldr	r3, [sp, #12]
 80176c6:	cb03      	ldmia	r3!, {r0, r1}
 80176c8:	445f      	add	r7, fp
 80176ca:	445d      	add	r5, fp
 80176cc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80176d0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80176d4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80176d8:	9b03      	ldr	r3, [sp, #12]
 80176da:	6869      	ldr	r1, [r5, #4]
 80176dc:	c303      	stmia	r3!, {r0, r1}
 80176de:	e7e4      	b.n	80176aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080176e0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80176e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176e4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80176e8:	b09b      	sub	sp, #108	; 0x6c
 80176ea:	4604      	mov	r4, r0
 80176ec:	4630      	mov	r0, r6
 80176ee:	f7f9 fbe0 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80176f2:	4605      	mov	r5, r0
 80176f4:	b948      	cbnz	r0, 801770a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80176f6:	6823      	ldr	r3, [r4, #0]
 80176f8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80176fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80176fe:	4620      	mov	r0, r4
 8017700:	4798      	blx	r3
 8017702:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8017706:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801770a:	4bc6      	ldr	r3, [pc, #792]	; (8017a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801770c:	681b      	ldr	r3, [r3, #0]
 801770e:	2b00      	cmp	r3, #0
 8017710:	d03f      	beq.n	8017792 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017712:	4dc5      	ldr	r5, [pc, #788]	; (8017a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017714:	4628      	mov	r0, r5
 8017716:	f7f9 fbcc 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801771a:	4606      	mov	r6, r0
 801771c:	2800      	cmp	r0, #0
 801771e:	d138      	bne.n	8017792 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017720:	4628      	mov	r0, r5
 8017722:	f7ff f907 	bl	8016934 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017726:	6823      	ldr	r3, [r4, #0]
 8017728:	6829      	ldr	r1, [r5, #0]
 801772a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801772c:	686a      	ldr	r2, [r5, #4]
 801772e:	4620      	mov	r0, r4
 8017730:	4798      	blx	r3
 8017732:	802e      	strh	r6, [r5, #0]
 8017734:	806e      	strh	r6, [r5, #2]
 8017736:	80ae      	strh	r6, [r5, #4]
 8017738:	80ee      	strh	r6, [r5, #6]
 801773a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801773e:	4dbb      	ldr	r5, [pc, #748]	; (8017a2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017740:	4640      	mov	r0, r8
 8017742:	f7ff fbeb 	bl	8016f1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017746:	882e      	ldrh	r6, [r5, #0]
 8017748:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801774c:	4633      	mov	r3, r6
 801774e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017752:	42bb      	cmp	r3, r7
 8017754:	d224      	bcs.n	80177a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017756:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801775a:	2907      	cmp	r1, #7
 801775c:	d816      	bhi.n	801778c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801775e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017762:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017766:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801776a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801776e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017772:	1c4a      	adds	r2, r1, #1
 8017774:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017778:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801777c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017780:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017784:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017788:	f8a2 c006 	strh.w	ip, [r2, #6]
 801778c:	3301      	adds	r3, #1
 801778e:	b29b      	uxth	r3, r3
 8017790:	e7df      	b.n	8017752 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017792:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017796:	2b00      	cmp	r3, #0
 8017798:	d1cf      	bne.n	801773a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801779a:	b01b      	add	sp, #108	; 0x6c
 801779c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177a0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80177a4:	42b3      	cmp	r3, r6
 80177a6:	d90c      	bls.n	80177c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80177a8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80177ac:	6822      	ldr	r2, [r4, #0]
 80177ae:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80177b2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80177b4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80177b8:	4620      	mov	r0, r4
 80177ba:	3601      	adds	r6, #1
 80177bc:	47b8      	blx	r7
 80177be:	b2b6      	uxth	r6, r6
 80177c0:	e7ee      	b.n	80177a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80177c2:	4a9b      	ldr	r2, [pc, #620]	; (8017a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80177c4:	6813      	ldr	r3, [r2, #0]
 80177c6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80177ca:	2b01      	cmp	r3, #1
 80177cc:	4691      	mov	r9, r2
 80177ce:	f040 80e2 	bne.w	8017996 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80177d2:	8829      	ldrh	r1, [r5, #0]
 80177d4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80177d8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80177dc:	33ae      	adds	r3, #174	; 0xae
 80177de:	2600      	movs	r6, #0
 80177e0:	428f      	cmp	r7, r1
 80177e2:	f103 0308 	add.w	r3, r3, #8
 80177e6:	dd0a      	ble.n	80177fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80177e8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80177ec:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80177f0:	4402      	add	r2, r0
 80177f2:	b212      	sxth	r2, r2
 80177f4:	4296      	cmp	r6, r2
 80177f6:	bfb8      	it	lt
 80177f8:	4616      	movlt	r6, r2
 80177fa:	3101      	adds	r1, #1
 80177fc:	e7f0      	b.n	80177e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80177fe:	4b8d      	ldr	r3, [pc, #564]	; (8017a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017800:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8017804:	881b      	ldrh	r3, [r3, #0]
 8017806:	2b0f      	cmp	r3, #15
 8017808:	bf88      	it	hi
 801780a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801780e:	f04f 0300 	mov.w	r3, #0
 8017812:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017816:	bf98      	it	ls
 8017818:	f04f 0b01 	movls.w	fp, #1
 801781c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017820:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017824:	4b82      	ldr	r3, [pc, #520]	; (8017a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017826:	4438      	add	r0, r7
 8017828:	b207      	sxth	r7, r0
 801782a:	6818      	ldr	r0, [r3, #0]
 801782c:	42b7      	cmp	r7, r6
 801782e:	6803      	ldr	r3, [r0, #0]
 8017830:	f280 8083 	bge.w	801793a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017834:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017838:	4798      	blx	r3
 801783a:	eb07 030b 	add.w	r3, r7, fp
 801783e:	4298      	cmp	r0, r3
 8017840:	da07      	bge.n	8017852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017842:	42b0      	cmp	r0, r6
 8017844:	da05      	bge.n	8017852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017846:	4287      	cmp	r7, r0
 8017848:	dd6c      	ble.n	8017924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801784a:	2f00      	cmp	r7, #0
 801784c:	dd6a      	ble.n	8017924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801784e:	4630      	mov	r0, r6
 8017850:	e004      	b.n	801785c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017852:	4287      	cmp	r7, r0
 8017854:	dcfb      	bgt.n	801784e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017856:	42b0      	cmp	r0, r6
 8017858:	bfa8      	it	ge
 801785a:	4630      	movge	r0, r6
 801785c:	4b76      	ldr	r3, [pc, #472]	; (8017a38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801785e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017862:	1bc0      	subs	r0, r0, r7
 8017864:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017868:	882f      	ldrh	r7, [r5, #0]
 801786a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801786e:	2200      	movs	r2, #0
 8017870:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017874:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017878:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801787c:	42bb      	cmp	r3, r7
 801787e:	d9cd      	bls.n	801781c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017880:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017884:	ab07      	add	r3, sp, #28
 8017886:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801788a:	6851      	ldr	r1, [r2, #4]
 801788c:	c303      	stmia	r3!, {r0, r1}
 801788e:	a905      	add	r1, sp, #20
 8017890:	a807      	add	r0, sp, #28
 8017892:	f7ff f93e 	bl	8016b12 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017896:	2800      	cmp	r0, #0
 8017898:	d04c      	beq.n	8017934 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801789a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801789e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80178a2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80178a6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80178aa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80178ae:	9302      	str	r3, [sp, #8]
 80178b0:	4686      	mov	lr, r0
 80178b2:	4290      	cmp	r0, r2
 80178b4:	4450      	add	r0, sl
 80178b6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80178ba:	bfb8      	it	lt
 80178bc:	4696      	movlt	lr, r2
 80178be:	4452      	add	r2, sl
 80178c0:	4299      	cmp	r1, r3
 80178c2:	b280      	uxth	r0, r0
 80178c4:	b292      	uxth	r2, r2
 80178c6:	468c      	mov	ip, r1
 80178c8:	fa0f fa82 	sxth.w	sl, r2
 80178cc:	bfb8      	it	lt
 80178ce:	469c      	movlt	ip, r3
 80178d0:	b203      	sxth	r3, r0
 80178d2:	4553      	cmp	r3, sl
 80178d4:	bfb8      	it	lt
 80178d6:	4602      	movlt	r2, r0
 80178d8:	eba2 020e 	sub.w	r2, r2, lr
 80178dc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80178e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80178e4:	9b02      	ldr	r3, [sp, #8]
 80178e6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80178ea:	4411      	add	r1, r2
 80178ec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80178f0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80178f4:	4413      	add	r3, r2
 80178f6:	b289      	uxth	r1, r1
 80178f8:	b29b      	uxth	r3, r3
 80178fa:	b208      	sxth	r0, r1
 80178fc:	b21a      	sxth	r2, r3
 80178fe:	4290      	cmp	r0, r2
 8017900:	bfb8      	it	lt
 8017902:	460b      	movlt	r3, r1
 8017904:	eba3 030c 	sub.w	r3, r3, ip
 8017908:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801790c:	a807      	add	r0, sp, #28
 801790e:	f7f9 fad0 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017912:	b920      	cbnz	r0, 801791e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017914:	6823      	ldr	r3, [r4, #0]
 8017916:	a907      	add	r1, sp, #28
 8017918:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801791a:	4620      	mov	r0, r4
 801791c:	4798      	blx	r3
 801791e:	3701      	adds	r7, #1
 8017920:	b2bf      	uxth	r7, r7
 8017922:	e7a9      	b.n	8017878 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017924:	f8d9 0000 	ldr.w	r0, [r9]
 8017928:	6803      	ldr	r3, [r0, #0]
 801792a:	2101      	movs	r1, #1
 801792c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017930:	4798      	blx	r3
 8017932:	e773      	b.n	801781c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017934:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017938:	e7e8      	b.n	801790c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801793a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801793c:	4798      	blx	r3
 801793e:	4b3f      	ldr	r3, [pc, #252]	; (8017a3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017940:	781b      	ldrb	r3, [r3, #0]
 8017942:	2b00      	cmp	r3, #0
 8017944:	f43f af29 	beq.w	801779a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017948:	2300      	movs	r3, #0
 801794a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801794e:	882b      	ldrh	r3, [r5, #0]
 8017950:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017954:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017958:	42ab      	cmp	r3, r5
 801795a:	f4bf af1e 	bcs.w	801779a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801795e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017962:	2907      	cmp	r1, #7
 8017964:	d814      	bhi.n	8017990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017966:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801796a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801796e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017972:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017976:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801797a:	1c4a      	adds	r2, r1, #1
 801797c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017980:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017984:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017988:	f8a2 c002 	strh.w	ip, [r2, #2]
 801798c:	8097      	strh	r7, [r2, #4]
 801798e:	80d6      	strh	r6, [r2, #6]
 8017990:	3301      	adds	r3, #1
 8017992:	b29b      	uxth	r3, r3
 8017994:	e7e0      	b.n	8017958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017996:	2b02      	cmp	r3, #2
 8017998:	f040 8133 	bne.w	8017c02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801799c:	4b28      	ldr	r3, [pc, #160]	; (8017a40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801799e:	781b      	ldrb	r3, [r3, #0]
 80179a0:	2b01      	cmp	r3, #1
 80179a2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80179a6:	f000 8098 	beq.w	8017ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80179aa:	882a      	ldrh	r2, [r5, #0]
 80179ac:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80179b0:	3201      	adds	r2, #1
 80179b2:	b292      	uxth	r2, r2
 80179b4:	2900      	cmp	r1, #0
 80179b6:	d0c2      	beq.n	801793e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80179b8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80179bc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80179c0:	441e      	add	r6, r3
 80179c2:	b236      	sxth	r6, r6
 80179c4:	4694      	mov	ip, r2
 80179c6:	f04f 0900 	mov.w	r9, #0
 80179ca:	fa1f f38c 	uxth.w	r3, ip
 80179ce:	4299      	cmp	r1, r3
 80179d0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80179d4:	f240 80bf 	bls.w	8017b56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80179d8:	4427      	add	r7, r4
 80179da:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80179de:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80179e2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80179e6:	4283      	cmp	r3, r0
 80179e8:	f340 80a1 	ble.w	8017b2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80179ec:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80179f0:	4406      	add	r6, r0
 80179f2:	b236      	sxth	r6, r6
 80179f4:	429e      	cmp	r6, r3
 80179f6:	bfa8      	it	ge
 80179f8:	461e      	movge	r6, r3
 80179fa:	46e1      	mov	r9, ip
 80179fc:	f10c 0c01 	add.w	ip, ip, #1
 8017a00:	e7e3      	b.n	80179ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8017a02:	d10a      	bne.n	8017a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017a04:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8017a08:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8017a0c:	4562      	cmp	r2, ip
 8017a0e:	bfb8      	it	lt
 8017a10:	4662      	movlt	r2, ip
 8017a12:	4288      	cmp	r0, r1
 8017a14:	bfb8      	it	lt
 8017a16:	461f      	movlt	r7, r3
 8017a18:	e087      	b.n	8017b2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017a1a:	428a      	cmp	r2, r1
 8017a1c:	bfb8      	it	lt
 8017a1e:	460a      	movlt	r2, r1
 8017a20:	e083      	b.n	8017b2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017a22:	bf00      	nop
 8017a24:	20013874 	.word	0x20013874
 8017a28:	20013880 	.word	0x20013880
 8017a2c:	20000088 	.word	0x20000088
 8017a30:	20013834 	.word	0x20013834
 8017a34:	2001382a 	.word	0x2001382a
 8017a38:	20013828 	.word	0x20013828
 8017a3c:	20013832 	.word	0x20013832
 8017a40:	2001382c 	.word	0x2001382c
 8017a44:	19a1      	adds	r1, r4, r6
 8017a46:	ab07      	add	r3, sp, #28
 8017a48:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017a4c:	6849      	ldr	r1, [r1, #4]
 8017a4e:	c303      	stmia	r3!, {r0, r1}
 8017a50:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017a54:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017a58:	2b13      	cmp	r3, #19
 8017a5a:	bfd8      	it	le
 8017a5c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017a60:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017a64:	440b      	add	r3, r1
 8017a66:	1a9b      	subs	r3, r3, r2
 8017a68:	a807      	add	r0, sp, #28
 8017a6a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017a6e:	f7fe ff7b 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a72:	a807      	add	r0, sp, #28
 8017a74:	f7f9 fa1d 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a78:	bb78      	cbnz	r0, 8017ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017a7a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8017a7e:	f8d9 0000 	ldr.w	r0, [r9]
 8017a82:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017a86:	f8d0 e000 	ldr.w	lr, [r0]
 8017a8a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8017a8e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017a92:	f1bc 0f14 	cmp.w	ip, #20
 8017a96:	bfa8      	it	ge
 8017a98:	f04f 0c14 	movge.w	ip, #20
 8017a9c:	fa1f fc8c 	uxth.w	ip, ip
 8017aa0:	f8cd c000 	str.w	ip, [sp]
 8017aa4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8017aa8:	47d8      	blx	fp
 8017aaa:	4683      	mov	fp, r0
 8017aac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017ab0:	a807      	add	r0, sp, #28
 8017ab2:	f7fe ff3f 	bl	8016934 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017ab6:	6823      	ldr	r3, [r4, #0]
 8017ab8:	4426      	add	r6, r4
 8017aba:	4620      	mov	r0, r4
 8017abc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017abe:	a907      	add	r1, sp, #28
 8017ac0:	4798      	blx	r3
 8017ac2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017ac6:	eba0 000b 	sub.w	r0, r0, fp
 8017aca:	b200      	sxth	r0, r0
 8017acc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017ad0:	b918      	cbnz	r0, 8017ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017ad2:	b2b9      	uxth	r1, r7
 8017ad4:	4650      	mov	r0, sl
 8017ad6:	f7ff fa79 	bl	8016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017ada:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8017ade:	f1bb 0f00 	cmp.w	fp, #0
 8017ae2:	f43f af2c 	beq.w	801793e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017ae6:	882b      	ldrh	r3, [r5, #0]
 8017ae8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8017aec:	3301      	adds	r3, #1
 8017aee:	b29b      	uxth	r3, r3
 8017af0:	2700      	movs	r7, #0
 8017af2:	b299      	uxth	r1, r3
 8017af4:	458b      	cmp	fp, r1
 8017af6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8017afa:	d9a3      	bls.n	8017a44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8017afc:	4426      	add	r6, r4
 8017afe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017b02:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017b06:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017b0a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8017b0e:	4408      	add	r0, r1
 8017b10:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8017b14:	4461      	add	r1, ip
 8017b16:	b200      	sxth	r0, r0
 8017b18:	b209      	sxth	r1, r1
 8017b1a:	4288      	cmp	r0, r1
 8017b1c:	f6bf af71 	bge.w	8017a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017b20:	4584      	cmp	ip, r0
 8017b22:	4662      	mov	r2, ip
 8017b24:	461f      	mov	r7, r3
 8017b26:	bfb8      	it	lt
 8017b28:	4602      	movlt	r2, r0
 8017b2a:	3301      	adds	r3, #1
 8017b2c:	e7e1      	b.n	8017af2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8017b2e:	d10e      	bne.n	8017b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017b30:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017b34:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017b38:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8017b3c:	4473      	add	r3, lr
 8017b3e:	b21b      	sxth	r3, r3
 8017b40:	429e      	cmp	r6, r3
 8017b42:	bfa8      	it	ge
 8017b44:	461e      	movge	r6, r3
 8017b46:	4287      	cmp	r7, r0
 8017b48:	bfb8      	it	lt
 8017b4a:	46e1      	movlt	r9, ip
 8017b4c:	e756      	b.n	80179fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b4e:	4286      	cmp	r6, r0
 8017b50:	bfa8      	it	ge
 8017b52:	4606      	movge	r6, r0
 8017b54:	e752      	b.n	80179fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b56:	eb0a 0007 	add.w	r0, sl, r7
 8017b5a:	4427      	add	r7, r4
 8017b5c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017b60:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017b64:	f1bb 0f13 	cmp.w	fp, #19
 8017b68:	bfde      	ittt	le
 8017b6a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8017b6e:	445e      	addle	r6, fp
 8017b70:	b236      	sxthle	r6, r6
 8017b72:	f7f9 f99e 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017b76:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8017b7a:	2800      	cmp	r0, #0
 8017b7c:	f47f af1a 	bne.w	80179b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017b80:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017b84:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017b88:	482a      	ldr	r0, [pc, #168]	; (8017c34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8017b8a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8017b8e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017b92:	6800      	ldr	r0, [r0, #0]
 8017b94:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017b98:	1ab6      	subs	r6, r6, r2
 8017b9a:	2e14      	cmp	r6, #20
 8017b9c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017ba0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017ba4:	bfa8      	it	ge
 8017ba6:	2614      	movge	r6, #20
 8017ba8:	f8d0 c000 	ldr.w	ip, [r0]
 8017bac:	b2b6      	uxth	r6, r6
 8017bae:	fa1f fb8b 	uxth.w	fp, fp
 8017bb2:	455e      	cmp	r6, fp
 8017bb4:	bf94      	ite	ls
 8017bb6:	9600      	strls	r6, [sp, #0]
 8017bb8:	f8cd b000 	strhi.w	fp, [sp]
 8017bbc:	b292      	uxth	r2, r2
 8017bbe:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8017bc2:	b29b      	uxth	r3, r3
 8017bc4:	b289      	uxth	r1, r1
 8017bc6:	47b0      	blx	r6
 8017bc8:	6823      	ldr	r3, [r4, #0]
 8017bca:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017bce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017bd0:	a907      	add	r1, sp, #28
 8017bd2:	4620      	mov	r0, r4
 8017bd4:	4798      	blx	r3
 8017bd6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017bda:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8017bde:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8017be2:	1a5b      	subs	r3, r3, r1
 8017be4:	440a      	add	r2, r1
 8017be6:	b21b      	sxth	r3, r3
 8017be8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8017bec:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017bf0:	2b00      	cmp	r3, #0
 8017bf2:	f47f aeda 	bne.w	80179aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017bf6:	fa1f f189 	uxth.w	r1, r9
 8017bfa:	4650      	mov	r0, sl
 8017bfc:	f7ff f9e6 	bl	8016fcc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017c00:	e6d3      	b.n	80179aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017c02:	882e      	ldrh	r6, [r5, #0]
 8017c04:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017c08:	42b3      	cmp	r3, r6
 8017c0a:	f67f ae98 	bls.w	801793e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017c0e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017c12:	ab07      	add	r3, sp, #28
 8017c14:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017c18:	6851      	ldr	r1, [r2, #4]
 8017c1a:	c303      	stmia	r3!, {r0, r1}
 8017c1c:	a807      	add	r0, sp, #28
 8017c1e:	f7f9 f948 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c22:	b920      	cbnz	r0, 8017c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017c24:	6823      	ldr	r3, [r4, #0]
 8017c26:	a907      	add	r1, sp, #28
 8017c28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017c2a:	4620      	mov	r0, r4
 8017c2c:	4798      	blx	r3
 8017c2e:	3601      	adds	r6, #1
 8017c30:	b2b6      	uxth	r6, r6
 8017c32:	e7e7      	b.n	8017c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017c34:	20013834 	.word	0x20013834

08017c38 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017c38:	4b03      	ldr	r3, [pc, #12]	; (8017c48 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017c3a:	2200      	movs	r2, #0
 8017c3c:	801a      	strh	r2, [r3, #0]
 8017c3e:	805a      	strh	r2, [r3, #2]
 8017c40:	809a      	strh	r2, [r3, #4]
 8017c42:	80da      	strh	r2, [r3, #6]
 8017c44:	4770      	bx	lr
 8017c46:	bf00      	nop
 8017c48:	20013880 	.word	0x20013880

08017c4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c50:	4606      	mov	r6, r0
 8017c52:	b09d      	sub	sp, #116	; 0x74
 8017c54:	a803      	add	r0, sp, #12
 8017c56:	4614      	mov	r4, r2
 8017c58:	468a      	mov	sl, r1
 8017c5a:	461d      	mov	r5, r3
 8017c5c:	f000 ff08 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 8017c60:	6833      	ldr	r3, [r6, #0]
 8017c62:	4630      	mov	r0, r6
 8017c64:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017c66:	4798      	blx	r3
 8017c68:	6833      	ldr	r3, [r6, #0]
 8017c6a:	4607      	mov	r7, r0
 8017c6c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017c6e:	4630      	mov	r0, r6
 8017c70:	4798      	blx	r3
 8017c72:	462a      	mov	r2, r5
 8017c74:	9000      	str	r0, [sp, #0]
 8017c76:	4621      	mov	r1, r4
 8017c78:	463b      	mov	r3, r7
 8017c7a:	a803      	add	r0, sp, #12
 8017c7c:	f000 ff53 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017c80:	2500      	movs	r5, #0
 8017c82:	462c      	mov	r4, r5
 8017c84:	46a9      	mov	r9, r5
 8017c86:	46a8      	mov	r8, r5
 8017c88:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017c8c:	2300      	movs	r3, #0
 8017c8e:	9302      	str	r3, [sp, #8]
 8017c90:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c94:	429c      	cmp	r4, r3
 8017c96:	d002      	beq.n	8017c9e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017c98:	455c      	cmp	r4, fp
 8017c9a:	bf18      	it	ne
 8017c9c:	4625      	movne	r5, r4
 8017c9e:	ab02      	add	r3, sp, #8
 8017ca0:	4632      	mov	r2, r6
 8017ca2:	4651      	mov	r1, sl
 8017ca4:	a803      	add	r0, sp, #12
 8017ca6:	f001 fa41 	bl	801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017caa:	4604      	mov	r4, r0
 8017cac:	b108      	cbz	r0, 8017cb2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8017cae:	280a      	cmp	r0, #10
 8017cb0:	d10a      	bne.n	8017cc8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017cb2:	45c1      	cmp	r9, r8
 8017cb4:	bf38      	it	cc
 8017cb6:	46c1      	movcc	r9, r8
 8017cb8:	f04f 0800 	mov.w	r8, #0
 8017cbc:	2c00      	cmp	r4, #0
 8017cbe:	d1e5      	bne.n	8017c8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017cc0:	4648      	mov	r0, r9
 8017cc2:	b01d      	add	sp, #116	; 0x74
 8017cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cc8:	9a02      	ldr	r2, [sp, #8]
 8017cca:	2a00      	cmp	r2, #0
 8017ccc:	d0de      	beq.n	8017c8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017cce:	7b57      	ldrb	r7, [r2, #13]
 8017cd0:	6833      	ldr	r3, [r6, #0]
 8017cd2:	8894      	ldrh	r4, [r2, #4]
 8017cd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cd6:	007f      	lsls	r7, r7, #1
 8017cd8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8017cdc:	7a97      	ldrb	r7, [r2, #10]
 8017cde:	4629      	mov	r1, r5
 8017ce0:	4307      	orrs	r7, r0
 8017ce2:	4630      	mov	r0, r6
 8017ce4:	4798      	blx	r3
 8017ce6:	4438      	add	r0, r7
 8017ce8:	4480      	add	r8, r0
 8017cea:	fa1f f888 	uxth.w	r8, r8
 8017cee:	e7e5      	b.n	8017cbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017cf0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017cf0:	b508      	push	{r3, lr}
 8017cf2:	6803      	ldr	r3, [r0, #0]
 8017cf4:	68db      	ldr	r3, [r3, #12]
 8017cf6:	4798      	blx	r3
 8017cf8:	b128      	cbz	r0, 8017d06 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8017cfa:	7b43      	ldrb	r3, [r0, #13]
 8017cfc:	7a80      	ldrb	r0, [r0, #10]
 8017cfe:	005b      	lsls	r3, r3, #1
 8017d00:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017d04:	4318      	orrs	r0, r3
 8017d06:	bd08      	pop	{r3, pc}

08017d08 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017d08:	b40e      	push	{r1, r2, r3}
 8017d0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017d0c:	b09e      	sub	sp, #120	; 0x78
 8017d0e:	ab23      	add	r3, sp, #140	; 0x8c
 8017d10:	4605      	mov	r5, r0
 8017d12:	f853 4b04 	ldr.w	r4, [r3], #4
 8017d16:	9303      	str	r3, [sp, #12]
 8017d18:	a805      	add	r0, sp, #20
 8017d1a:	f000 fea9 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 8017d1e:	682b      	ldr	r3, [r5, #0]
 8017d20:	4628      	mov	r0, r5
 8017d22:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017d24:	4798      	blx	r3
 8017d26:	682b      	ldr	r3, [r5, #0]
 8017d28:	4606      	mov	r6, r0
 8017d2a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017d2c:	4628      	mov	r0, r5
 8017d2e:	4798      	blx	r3
 8017d30:	4633      	mov	r3, r6
 8017d32:	ae1e      	add	r6, sp, #120	; 0x78
 8017d34:	4621      	mov	r1, r4
 8017d36:	9000      	str	r0, [sp, #0]
 8017d38:	9a03      	ldr	r2, [sp, #12]
 8017d3a:	2400      	movs	r4, #0
 8017d3c:	a805      	add	r0, sp, #20
 8017d3e:	f000 fef2 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d42:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017d46:	462a      	mov	r2, r5
 8017d48:	4633      	mov	r3, r6
 8017d4a:	4621      	mov	r1, r4
 8017d4c:	a805      	add	r0, sp, #20
 8017d4e:	f001 f9ed 	bl	801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017d52:	b1f0      	cbz	r0, 8017d92 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017d54:	280a      	cmp	r0, #10
 8017d56:	d018      	beq.n	8017d8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017d58:	9f04      	ldr	r7, [sp, #16]
 8017d5a:	b1b7      	cbz	r7, 8017d8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017d5c:	7b78      	ldrb	r0, [r7, #13]
 8017d5e:	7a3b      	ldrb	r3, [r7, #8]
 8017d60:	88ea      	ldrh	r2, [r5, #6]
 8017d62:	00c1      	lsls	r1, r0, #3
 8017d64:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017d68:	4319      	orrs	r1, r3
 8017d6a:	0643      	lsls	r3, r0, #25
 8017d6c:	bf44      	itt	mi
 8017d6e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017d72:	b219      	sxthmi	r1, r3
 8017d74:	0100      	lsls	r0, r0, #4
 8017d76:	79fb      	ldrb	r3, [r7, #7]
 8017d78:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017d7c:	4303      	orrs	r3, r0
 8017d7e:	4413      	add	r3, r2
 8017d80:	1a5b      	subs	r3, r3, r1
 8017d82:	b21b      	sxth	r3, r3
 8017d84:	429c      	cmp	r4, r3
 8017d86:	bfb8      	it	lt
 8017d88:	461c      	movlt	r4, r3
 8017d8a:	4633      	mov	r3, r6
 8017d8c:	462a      	mov	r2, r5
 8017d8e:	2100      	movs	r1, #0
 8017d90:	e7dc      	b.n	8017d4c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017d92:	b2a0      	uxth	r0, r4
 8017d94:	b01e      	add	sp, #120	; 0x78
 8017d96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017d9a:	b003      	add	sp, #12
 8017d9c:	4770      	bx	lr

08017d9e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017d9e:	7a43      	ldrb	r3, [r0, #9]
 8017da0:	8880      	ldrh	r0, [r0, #4]
 8017da2:	4418      	add	r0, r3
 8017da4:	b280      	uxth	r0, r0
 8017da6:	4770      	bx	lr

08017da8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017da8:	6803      	ldr	r3, [r0, #0]
 8017daa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017dac:	4718      	bx	r3

08017dae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017dae:	b40e      	push	{r1, r2, r3}
 8017db0:	b570      	push	{r4, r5, r6, lr}
 8017db2:	b09d      	sub	sp, #116	; 0x74
 8017db4:	ab21      	add	r3, sp, #132	; 0x84
 8017db6:	4604      	mov	r4, r0
 8017db8:	f853 5b04 	ldr.w	r5, [r3], #4
 8017dbc:	9302      	str	r3, [sp, #8]
 8017dbe:	a803      	add	r0, sp, #12
 8017dc0:	f000 fe56 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 8017dc4:	6823      	ldr	r3, [r4, #0]
 8017dc6:	4620      	mov	r0, r4
 8017dc8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017dca:	4798      	blx	r3
 8017dcc:	6823      	ldr	r3, [r4, #0]
 8017dce:	4606      	mov	r6, r0
 8017dd0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017dd2:	4620      	mov	r0, r4
 8017dd4:	4798      	blx	r3
 8017dd6:	4633      	mov	r3, r6
 8017dd8:	9000      	str	r0, [sp, #0]
 8017dda:	9a02      	ldr	r2, [sp, #8]
 8017ddc:	4629      	mov	r1, r5
 8017dde:	a803      	add	r0, sp, #12
 8017de0:	f000 fea1 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017de4:	a803      	add	r0, sp, #12
 8017de6:	f001 fa6f 	bl	80192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017dea:	2401      	movs	r4, #1
 8017dec:	b2a3      	uxth	r3, r4
 8017dee:	b140      	cbz	r0, 8017e02 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017df0:	280a      	cmp	r0, #10
 8017df2:	bf08      	it	eq
 8017df4:	3301      	addeq	r3, #1
 8017df6:	a803      	add	r0, sp, #12
 8017df8:	bf08      	it	eq
 8017dfa:	b21c      	sxtheq	r4, r3
 8017dfc:	f001 fa64 	bl	80192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017e00:	e7f4      	b.n	8017dec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017e02:	4618      	mov	r0, r3
 8017e04:	b01d      	add	sp, #116	; 0x74
 8017e06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017e0a:	b003      	add	sp, #12
 8017e0c:	4770      	bx	lr

08017e0e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017e0e:	b40e      	push	{r1, r2, r3}
 8017e10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e12:	b09e      	sub	sp, #120	; 0x78
 8017e14:	ab23      	add	r3, sp, #140	; 0x8c
 8017e16:	4604      	mov	r4, r0
 8017e18:	f853 5b04 	ldr.w	r5, [r3], #4
 8017e1c:	9303      	str	r3, [sp, #12]
 8017e1e:	a805      	add	r0, sp, #20
 8017e20:	f000 fe26 	bl	8018a70 <_ZN8touchgfx12TextProviderC1Ev>
 8017e24:	6823      	ldr	r3, [r4, #0]
 8017e26:	4620      	mov	r0, r4
 8017e28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017e2a:	4798      	blx	r3
 8017e2c:	6823      	ldr	r3, [r4, #0]
 8017e2e:	4606      	mov	r6, r0
 8017e30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017e32:	4620      	mov	r0, r4
 8017e34:	4798      	blx	r3
 8017e36:	4633      	mov	r3, r6
 8017e38:	4629      	mov	r1, r5
 8017e3a:	9000      	str	r0, [sp, #0]
 8017e3c:	9a03      	ldr	r2, [sp, #12]
 8017e3e:	a805      	add	r0, sp, #20
 8017e40:	ad1e      	add	r5, sp, #120	; 0x78
 8017e42:	f000 fe70 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017e46:	2100      	movs	r1, #0
 8017e48:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017e4c:	4622      	mov	r2, r4
 8017e4e:	462b      	mov	r3, r5
 8017e50:	a805      	add	r0, sp, #20
 8017e52:	f001 f96b 	bl	801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e56:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017e5a:	b1d8      	cbz	r0, 8017e94 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017e5c:	280a      	cmp	r0, #10
 8017e5e:	d012      	beq.n	8017e86 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017e60:	9804      	ldr	r0, [sp, #16]
 8017e62:	b180      	cbz	r0, 8017e86 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017e64:	7b47      	ldrb	r7, [r0, #13]
 8017e66:	88e2      	ldrh	r2, [r4, #6]
 8017e68:	00fb      	lsls	r3, r7, #3
 8017e6a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017e6e:	7a03      	ldrb	r3, [r0, #8]
 8017e70:	430b      	orrs	r3, r1
 8017e72:	0679      	lsls	r1, r7, #25
 8017e74:	bf44      	itt	mi
 8017e76:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e7a:	b21b      	sxthmi	r3, r3
 8017e7c:	1ad3      	subs	r3, r2, r3
 8017e7e:	b21b      	sxth	r3, r3
 8017e80:	429e      	cmp	r6, r3
 8017e82:	bfa8      	it	ge
 8017e84:	461e      	movge	r6, r3
 8017e86:	462b      	mov	r3, r5
 8017e88:	4622      	mov	r2, r4
 8017e8a:	2100      	movs	r1, #0
 8017e8c:	a805      	add	r0, sp, #20
 8017e8e:	f001 f94d 	bl	801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e92:	e7e2      	b.n	8017e5a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017e94:	4630      	mov	r0, r6
 8017e96:	b01e      	add	sp, #120	; 0x78
 8017e98:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017e9c:	b003      	add	sp, #12
 8017e9e:	4770      	bx	lr

08017ea0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017ea0:	b513      	push	{r0, r1, r4, lr}
 8017ea2:	6803      	ldr	r3, [r0, #0]
 8017ea4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017ea8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017eac:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017eb0:	2400      	movs	r4, #0
 8017eb2:	9400      	str	r4, [sp, #0]
 8017eb4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017eb8:	691b      	ldr	r3, [r3, #16]
 8017eba:	4669      	mov	r1, sp
 8017ebc:	4798      	blx	r3
 8017ebe:	b002      	add	sp, #8
 8017ec0:	bd10      	pop	{r4, pc}

08017ec2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017ec2:	b538      	push	{r3, r4, r5, lr}
 8017ec4:	680b      	ldr	r3, [r1, #0]
 8017ec6:	460c      	mov	r4, r1
 8017ec8:	68db      	ldr	r3, [r3, #12]
 8017eca:	4605      	mov	r5, r0
 8017ecc:	4798      	blx	r3
 8017ece:	6823      	ldr	r3, [r4, #0]
 8017ed0:	4620      	mov	r0, r4
 8017ed2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ed4:	4629      	mov	r1, r5
 8017ed6:	4798      	blx	r3
 8017ed8:	4628      	mov	r0, r5
 8017eda:	bd38      	pop	{r3, r4, r5, pc}

08017edc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017edc:	b410      	push	{r4}
 8017ede:	880a      	ldrh	r2, [r1, #0]
 8017ee0:	8884      	ldrh	r4, [r0, #4]
 8017ee2:	4422      	add	r2, r4
 8017ee4:	800a      	strh	r2, [r1, #0]
 8017ee6:	88c4      	ldrh	r4, [r0, #6]
 8017ee8:	884a      	ldrh	r2, [r1, #2]
 8017eea:	4422      	add	r2, r4
 8017eec:	804a      	strh	r2, [r1, #2]
 8017eee:	6940      	ldr	r0, [r0, #20]
 8017ef0:	b120      	cbz	r0, 8017efc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017ef2:	6803      	ldr	r3, [r0, #0]
 8017ef4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ef8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017efa:	4718      	bx	r3
 8017efc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017f00:	4770      	bx	lr

08017f02 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017f02:	b570      	push	{r4, r5, r6, lr}
 8017f04:	8882      	ldrh	r2, [r0, #4]
 8017f06:	880b      	ldrh	r3, [r1, #0]
 8017f08:	4413      	add	r3, r2
 8017f0a:	800b      	strh	r3, [r1, #0]
 8017f0c:	88c2      	ldrh	r2, [r0, #6]
 8017f0e:	884b      	ldrh	r3, [r1, #2]
 8017f10:	460c      	mov	r4, r1
 8017f12:	4413      	add	r3, r2
 8017f14:	804b      	strh	r3, [r1, #2]
 8017f16:	4605      	mov	r5, r0
 8017f18:	1d01      	adds	r1, r0, #4
 8017f1a:	4620      	mov	r0, r4
 8017f1c:	f7f8 ff86 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8017f20:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017f24:	2b00      	cmp	r3, #0
 8017f26:	dd0b      	ble.n	8017f40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017f2c:	2b00      	cmp	r3, #0
 8017f2e:	dd07      	ble.n	8017f40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f30:	6968      	ldr	r0, [r5, #20]
 8017f32:	b128      	cbz	r0, 8017f40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f34:	6803      	ldr	r3, [r0, #0]
 8017f36:	4621      	mov	r1, r4
 8017f38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f3e:	4718      	bx	r3
 8017f40:	bd70      	pop	{r4, r5, r6, pc}
	...

08017f44 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017f44:	b570      	push	{r4, r5, r6, lr}
 8017f46:	8882      	ldrh	r2, [r0, #4]
 8017f48:	880b      	ldrh	r3, [r1, #0]
 8017f4a:	4413      	add	r3, r2
 8017f4c:	800b      	strh	r3, [r1, #0]
 8017f4e:	88c2      	ldrh	r2, [r0, #6]
 8017f50:	884b      	ldrh	r3, [r1, #2]
 8017f52:	460c      	mov	r4, r1
 8017f54:	4413      	add	r3, r2
 8017f56:	804b      	strh	r3, [r1, #2]
 8017f58:	4605      	mov	r5, r0
 8017f5a:	1d01      	adds	r1, r0, #4
 8017f5c:	4620      	mov	r0, r4
 8017f5e:	f7f8 ff65 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8017f62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017f66:	2b00      	cmp	r3, #0
 8017f68:	dd19      	ble.n	8017f9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f6a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017f6e:	2b00      	cmp	r3, #0
 8017f70:	dd15      	ble.n	8017f9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f72:	6968      	ldr	r0, [r5, #20]
 8017f74:	b128      	cbz	r0, 8017f82 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017f76:	6803      	ldr	r3, [r0, #0]
 8017f78:	4621      	mov	r1, r4
 8017f7a:	691b      	ldr	r3, [r3, #16]
 8017f7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f80:	4718      	bx	r3
 8017f82:	4b07      	ldr	r3, [pc, #28]	; (8017fa0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017f84:	681b      	ldr	r3, [r3, #0]
 8017f86:	3304      	adds	r3, #4
 8017f88:	429d      	cmp	r5, r3
 8017f8a:	d108      	bne.n	8017f9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f8c:	f7fe fea0 	bl	8016cd0 <_ZN8touchgfx11Application11getInstanceEv>
 8017f90:	6803      	ldr	r3, [r0, #0]
 8017f92:	6821      	ldr	r1, [r4, #0]
 8017f94:	6862      	ldr	r2, [r4, #4]
 8017f96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017f98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f9c:	4718      	bx	r3
 8017f9e:	bd70      	pop	{r4, r5, r6, pc}
 8017fa0:	20013878 	.word	0x20013878

08017fa4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017fa4:	b570      	push	{r4, r5, r6, lr}
 8017fa6:	4604      	mov	r4, r0
 8017fa8:	4616      	mov	r6, r2
 8017faa:	460d      	mov	r5, r1
 8017fac:	b901      	cbnz	r1, 8017fb0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017fae:	b192      	cbz	r2, 8017fd6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017fb0:	6823      	ldr	r3, [r4, #0]
 8017fb2:	4620      	mov	r0, r4
 8017fb4:	699b      	ldr	r3, [r3, #24]
 8017fb6:	4798      	blx	r3
 8017fb8:	88e2      	ldrh	r2, [r4, #6]
 8017fba:	88a1      	ldrh	r1, [r4, #4]
 8017fbc:	4432      	add	r2, r6
 8017fbe:	4429      	add	r1, r5
 8017fc0:	4620      	mov	r0, r4
 8017fc2:	b212      	sxth	r2, r2
 8017fc4:	b209      	sxth	r1, r1
 8017fc6:	f7ea fd25 	bl	8002a14 <_ZN8touchgfx8Drawable5setXYEss>
 8017fca:	6823      	ldr	r3, [r4, #0]
 8017fcc:	4620      	mov	r0, r4
 8017fce:	699b      	ldr	r3, [r3, #24]
 8017fd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017fd4:	4718      	bx	r3
 8017fd6:	bd70      	pop	{r4, r5, r6, pc}

08017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017fd8:	b510      	push	{r4, lr}
 8017fda:	4604      	mov	r4, r0
 8017fdc:	4608      	mov	r0, r1
 8017fde:	2300      	movs	r3, #0
 8017fe0:	8023      	strh	r3, [r4, #0]
 8017fe2:	8063      	strh	r3, [r4, #2]
 8017fe4:	6803      	ldr	r3, [r0, #0]
 8017fe6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017fea:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017fee:	80a1      	strh	r1, [r4, #4]
 8017ff0:	80e2      	strh	r2, [r4, #6]
 8017ff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ff4:	4621      	mov	r1, r4
 8017ff6:	4798      	blx	r3
 8017ff8:	4620      	mov	r0, r4
 8017ffa:	bd10      	pop	{r4, pc}

08017ffc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017ffc:	b530      	push	{r4, r5, lr}
 8017ffe:	8083      	strh	r3, [r0, #4]
 8018000:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8018004:	80c3      	strh	r3, [r0, #6]
 8018006:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801800a:	7203      	strb	r3, [r0, #8]
 801800c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018010:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8018014:	7243      	strb	r3, [r0, #9]
 8018016:	7a83      	ldrb	r3, [r0, #10]
 8018018:	6141      	str	r1, [r0, #20]
 801801a:	f365 0306 	bfi	r3, r5, #0, #7
 801801e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8018022:	8302      	strh	r2, [r0, #24]
 8018024:	f365 13c7 	bfi	r3, r5, #7, #1
 8018028:	7283      	strb	r3, [r0, #10]
 801802a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801802e:	72c3      	strb	r3, [r0, #11]
 8018030:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8018034:	7303      	strb	r3, [r0, #12]
 8018036:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801803a:	81c3      	strh	r3, [r0, #14]
 801803c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018040:	8203      	strh	r3, [r0, #16]
 8018042:	4b01      	ldr	r3, [pc, #4]	; (8018048 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8018044:	6003      	str	r3, [r0, #0]
 8018046:	bd30      	pop	{r4, r5, pc}
 8018048:	0802ff3c 	.word	0x0802ff3c

0801804c <_ZNK8touchgfx9ConstFont4findEt>:
 801804c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801804e:	6944      	ldr	r4, [r0, #20]
 8018050:	b3bc      	cbz	r4, 80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018052:	88a3      	ldrh	r3, [r4, #4]
 8018054:	8b02      	ldrh	r2, [r0, #24]
 8018056:	1acb      	subs	r3, r1, r3
 8018058:	f102 32ff 	add.w	r2, r2, #4294967295
 801805c:	d431      	bmi.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801805e:	4293      	cmp	r3, r2
 8018060:	dd0c      	ble.n	801807c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8018062:	230e      	movs	r3, #14
 8018064:	fb03 4302 	mla	r3, r3, r2, r4
 8018068:	889b      	ldrh	r3, [r3, #4]
 801806a:	1a5b      	subs	r3, r3, r1
 801806c:	1ad3      	subs	r3, r2, r3
 801806e:	429a      	cmp	r2, r3
 8018070:	db27      	blt.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018072:	2b00      	cmp	r3, #0
 8018074:	bfbc      	itt	lt
 8018076:	2302      	movlt	r3, #2
 8018078:	fb92 f3f3 	sdivlt	r3, r2, r3
 801807c:	2500      	movs	r5, #0
 801807e:	260e      	movs	r6, #14
 8018080:	4295      	cmp	r5, r2
 8018082:	dc1e      	bgt.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018084:	fb06 4003 	mla	r0, r6, r3, r4
 8018088:	8887      	ldrh	r7, [r0, #4]
 801808a:	42b9      	cmp	r1, r7
 801808c:	d01a      	beq.n	80180c4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801808e:	d20d      	bcs.n	80180ac <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018090:	1e5a      	subs	r2, r3, #1
 8018092:	4295      	cmp	r5, r2
 8018094:	dc15      	bgt.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018096:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801809a:	1a5b      	subs	r3, r3, r1
 801809c:	1ad3      	subs	r3, r2, r3
 801809e:	429a      	cmp	r2, r3
 80180a0:	db0f      	blt.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80180a2:	429d      	cmp	r5, r3
 80180a4:	ddec      	ble.n	8018080 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80180a6:	1953      	adds	r3, r2, r5
 80180a8:	105b      	asrs	r3, r3, #1
 80180aa:	e7e9      	b.n	8018080 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80180ac:	1c5d      	adds	r5, r3, #1
 80180ae:	42aa      	cmp	r2, r5
 80180b0:	db07      	blt.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80180b2:	8a43      	ldrh	r3, [r0, #18]
 80180b4:	1acb      	subs	r3, r1, r3
 80180b6:	442b      	add	r3, r5
 80180b8:	429d      	cmp	r5, r3
 80180ba:	dc02      	bgt.n	80180c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80180bc:	429a      	cmp	r2, r3
 80180be:	dadf      	bge.n	8018080 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80180c0:	e7f1      	b.n	80180a6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80180c2:	2000      	movs	r0, #0
 80180c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080180c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80180c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80180c8:	4604      	mov	r4, r0
 80180ca:	4617      	mov	r7, r2
 80180cc:	461e      	mov	r6, r3
 80180ce:	b911      	cbnz	r1, 80180d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80180d0:	2500      	movs	r5, #0
 80180d2:	4628      	mov	r0, r5
 80180d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80180d6:	290a      	cmp	r1, #10
 80180d8:	d0fa      	beq.n	80180d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180da:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80180de:	4291      	cmp	r1, r2
 80180e0:	d0f6      	beq.n	80180d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180e2:	f242 020b 	movw	r2, #8203	; 0x200b
 80180e6:	4291      	cmp	r1, r2
 80180e8:	d0f2      	beq.n	80180d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180ea:	f7ff ffaf 	bl	801804c <_ZNK8touchgfx9ConstFont4findEt>
 80180ee:	4605      	mov	r5, r0
 80180f0:	b950      	cbnz	r0, 8018108 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80180f2:	6823      	ldr	r3, [r4, #0]
 80180f4:	4620      	mov	r0, r4
 80180f6:	691b      	ldr	r3, [r3, #16]
 80180f8:	4798      	blx	r3
 80180fa:	4601      	mov	r1, r0
 80180fc:	4620      	mov	r0, r4
 80180fe:	f7ff ffa5 	bl	801804c <_ZNK8touchgfx9ConstFont4findEt>
 8018102:	4605      	mov	r5, r0
 8018104:	2800      	cmp	r0, #0
 8018106:	d0e3      	beq.n	80180d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018108:	6823      	ldr	r3, [r4, #0]
 801810a:	4629      	mov	r1, r5
 801810c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801810e:	4620      	mov	r0, r4
 8018110:	4798      	blx	r3
 8018112:	6038      	str	r0, [r7, #0]
 8018114:	6823      	ldr	r3, [r4, #0]
 8018116:	4620      	mov	r0, r4
 8018118:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801811a:	4798      	blx	r3
 801811c:	7030      	strb	r0, [r6, #0]
 801811e:	e7d8      	b.n	80180d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08018120 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8018120:	b538      	push	{r3, r4, r5, lr}
 8018122:	4605      	mov	r5, r0
 8018124:	f002 fb94 	bl	801a850 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018128:	4604      	mov	r4, r0
 801812a:	4628      	mov	r0, r5
 801812c:	f002 fad4 	bl	801a6d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018130:	2800      	cmp	r0, #0
 8018132:	bf14      	ite	ne
 8018134:	2002      	movne	r0, #2
 8018136:	2000      	moveq	r0, #0
 8018138:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801813c:	b280      	uxth	r0, r0
 801813e:	bd38      	pop	{r3, r4, r5, pc}

08018140 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8018140:	b538      	push	{r3, r4, r5, lr}
 8018142:	4605      	mov	r5, r0
 8018144:	f002 fb84 	bl	801a850 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018148:	4604      	mov	r4, r0
 801814a:	4628      	mov	r0, r5
 801814c:	f002 fac4 	bl	801a6d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018150:	2800      	cmp	r0, #0
 8018152:	bf14      	ite	ne
 8018154:	2002      	movne	r0, #2
 8018156:	2000      	moveq	r0, #0
 8018158:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801815c:	f040 0001 	orr.w	r0, r0, #1
 8018160:	b280      	uxth	r0, r0
 8018162:	bd38      	pop	{r3, r4, r5, pc}

08018164 <_ZN8touchgfx4clzuEm>:
 8018164:	4603      	mov	r3, r0
 8018166:	b1c8      	cbz	r0, 801819c <_ZN8touchgfx4clzuEm+0x38>
 8018168:	0c02      	lsrs	r2, r0, #16
 801816a:	0412      	lsls	r2, r2, #16
 801816c:	b9a2      	cbnz	r2, 8018198 <_ZN8touchgfx4clzuEm+0x34>
 801816e:	0403      	lsls	r3, r0, #16
 8018170:	2010      	movs	r0, #16
 8018172:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018176:	bf04      	itt	eq
 8018178:	021b      	lsleq	r3, r3, #8
 801817a:	3008      	addeq	r0, #8
 801817c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018180:	bf04      	itt	eq
 8018182:	011b      	lsleq	r3, r3, #4
 8018184:	3004      	addeq	r0, #4
 8018186:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801818a:	bf04      	itt	eq
 801818c:	009b      	lsleq	r3, r3, #2
 801818e:	3002      	addeq	r0, #2
 8018190:	2b00      	cmp	r3, #0
 8018192:	db04      	blt.n	801819e <_ZN8touchgfx4clzuEm+0x3a>
 8018194:	3001      	adds	r0, #1
 8018196:	4770      	bx	lr
 8018198:	2000      	movs	r0, #0
 801819a:	e7ea      	b.n	8018172 <_ZN8touchgfx4clzuEm+0xe>
 801819c:	2020      	movs	r0, #32
 801819e:	4770      	bx	lr

080181a0 <_ZN8touchgfx7muldivuEmmmRm>:
 80181a0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80181a4:	460f      	mov	r7, r1
 80181a6:	4615      	mov	r5, r2
 80181a8:	461e      	mov	r6, r3
 80181aa:	4601      	mov	r1, r0
 80181ac:	b100      	cbz	r0, 80181b0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80181ae:	b927      	cbnz	r7, 80181ba <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80181b0:	2000      	movs	r0, #0
 80181b2:	6030      	str	r0, [r6, #0]
 80181b4:	b002      	add	sp, #8
 80181b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80181ba:	f7ff ffd3 	bl	8018164 <_ZN8touchgfx4clzuEm>
 80181be:	b980      	cbnz	r0, 80181e2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80181c0:	4638      	mov	r0, r7
 80181c2:	f7ff ffcf 	bl	8018164 <_ZN8touchgfx4clzuEm>
 80181c6:	2800      	cmp	r0, #0
 80181c8:	dd05      	ble.n	80181d6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80181ca:	4633      	mov	r3, r6
 80181cc:	462a      	mov	r2, r5
 80181ce:	4638      	mov	r0, r7
 80181d0:	f7ff ffe6 	bl	80181a0 <_ZN8touchgfx7muldivuEmmmRm>
 80181d4:	e7ee      	b.n	80181b4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181d6:	f04f 33ff 	mov.w	r3, #4294967295
 80181da:	6033      	str	r3, [r6, #0]
 80181dc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80181e0:	e7e8      	b.n	80181b4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181e2:	fa37 f800 	lsrs.w	r8, r7, r0
 80181e6:	fb07 f301 	mul.w	r3, r7, r1
 80181ea:	d105      	bne.n	80181f8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80181ec:	fbb3 f0f5 	udiv	r0, r3, r5
 80181f0:	fb05 3510 	mls	r5, r5, r0, r3
 80181f4:	6035      	str	r5, [r6, #0]
 80181f6:	e7dd      	b.n	80181b4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181f8:	2301      	movs	r3, #1
 80181fa:	fa01 fa00 	lsl.w	sl, r1, r0
 80181fe:	fa03 f000 	lsl.w	r0, r3, r0
 8018202:	3801      	subs	r0, #1
 8018204:	462a      	mov	r2, r5
 8018206:	4633      	mov	r3, r6
 8018208:	4038      	ands	r0, r7
 801820a:	f7ff ffc9 	bl	80181a0 <_ZN8touchgfx7muldivuEmmmRm>
 801820e:	fbba f9f5 	udiv	r9, sl, r5
 8018212:	462a      	mov	r2, r5
 8018214:	4607      	mov	r7, r0
 8018216:	ab01      	add	r3, sp, #4
 8018218:	fb05 a119 	mls	r1, r5, r9, sl
 801821c:	4640      	mov	r0, r8
 801821e:	f7ff ffbf 	bl	80181a0 <_ZN8touchgfx7muldivuEmmmRm>
 8018222:	9b01      	ldr	r3, [sp, #4]
 8018224:	6832      	ldr	r2, [r6, #0]
 8018226:	fb08 f409 	mul.w	r4, r8, r9
 801822a:	441a      	add	r2, r3
 801822c:	fbb2 f3f5 	udiv	r3, r2, r5
 8018230:	441c      	add	r4, r3
 8018232:	443c      	add	r4, r7
 8018234:	4420      	add	r0, r4
 8018236:	fb05 2513 	mls	r5, r5, r3, r2
 801823a:	e7db      	b.n	80181f4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801823c <_ZN8touchgfx6muldivElllRl>:
 801823c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801823e:	2800      	cmp	r0, #0
 8018240:	bfba      	itte	lt
 8018242:	4240      	neglt	r0, r0
 8018244:	f04f 34ff 	movlt.w	r4, #4294967295
 8018248:	2401      	movge	r4, #1
 801824a:	2900      	cmp	r1, #0
 801824c:	bfbc      	itt	lt
 801824e:	4249      	neglt	r1, r1
 8018250:	4264      	neglt	r4, r4
 8018252:	2a00      	cmp	r2, #0
 8018254:	bfb6      	itet	lt
 8018256:	4265      	neglt	r5, r4
 8018258:	4625      	movge	r5, r4
 801825a:	4252      	neglt	r2, r2
 801825c:	4288      	cmp	r0, r1
 801825e:	461e      	mov	r6, r3
 8018260:	bfc2      	ittt	gt
 8018262:	4603      	movgt	r3, r0
 8018264:	4608      	movgt	r0, r1
 8018266:	4619      	movgt	r1, r3
 8018268:	ab01      	add	r3, sp, #4
 801826a:	f7ff ff99 	bl	80181a0 <_ZN8touchgfx7muldivuEmmmRm>
 801826e:	9b01      	ldr	r3, [sp, #4]
 8018270:	4368      	muls	r0, r5
 8018272:	435c      	muls	r4, r3
 8018274:	6034      	str	r4, [r6, #0]
 8018276:	b002      	add	sp, #8
 8018278:	bd70      	pop	{r4, r5, r6, pc}

0801827a <_ZN8touchgfx6muldivElll>:
 801827a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801827c:	4606      	mov	r6, r0
 801827e:	ab01      	add	r3, sp, #4
 8018280:	460d      	mov	r5, r1
 8018282:	4614      	mov	r4, r2
 8018284:	f7ff ffda 	bl	801823c <_ZN8touchgfx6muldivElllRl>
 8018288:	2e00      	cmp	r6, #0
 801828a:	db20      	blt.n	80182ce <_ZN8touchgfx6muldivElll+0x54>
 801828c:	bf14      	ite	ne
 801828e:	2301      	movne	r3, #1
 8018290:	2300      	moveq	r3, #0
 8018292:	2d00      	cmp	r5, #0
 8018294:	db1e      	blt.n	80182d4 <_ZN8touchgfx6muldivElll+0x5a>
 8018296:	bf14      	ite	ne
 8018298:	2201      	movne	r2, #1
 801829a:	2200      	moveq	r2, #0
 801829c:	2c00      	cmp	r4, #0
 801829e:	fb03 f202 	mul.w	r2, r3, r2
 80182a2:	db1a      	blt.n	80182da <_ZN8touchgfx6muldivElll+0x60>
 80182a4:	bf14      	ite	ne
 80182a6:	2301      	movne	r3, #1
 80182a8:	2300      	moveq	r3, #0
 80182aa:	4353      	muls	r3, r2
 80182ac:	2b01      	cmp	r3, #1
 80182ae:	d117      	bne.n	80182e0 <_ZN8touchgfx6muldivElll+0x66>
 80182b0:	9b01      	ldr	r3, [sp, #4]
 80182b2:	2c00      	cmp	r4, #0
 80182b4:	bfb8      	it	lt
 80182b6:	4264      	neglt	r4, r4
 80182b8:	2b00      	cmp	r3, #0
 80182ba:	f104 0401 	add.w	r4, r4, #1
 80182be:	bfb8      	it	lt
 80182c0:	425b      	neglt	r3, r3
 80182c2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80182c6:	db00      	blt.n	80182ca <_ZN8touchgfx6muldivElll+0x50>
 80182c8:	3001      	adds	r0, #1
 80182ca:	b002      	add	sp, #8
 80182cc:	bd70      	pop	{r4, r5, r6, pc}
 80182ce:	f04f 33ff 	mov.w	r3, #4294967295
 80182d2:	e7de      	b.n	8018292 <_ZN8touchgfx6muldivElll+0x18>
 80182d4:	f04f 32ff 	mov.w	r2, #4294967295
 80182d8:	e7e0      	b.n	801829c <_ZN8touchgfx6muldivElll+0x22>
 80182da:	f04f 33ff 	mov.w	r3, #4294967295
 80182de:	e7e4      	b.n	80182aa <_ZN8touchgfx6muldivElll+0x30>
 80182e0:	3301      	adds	r3, #1
 80182e2:	d1f2      	bne.n	80182ca <_ZN8touchgfx6muldivElll+0x50>
 80182e4:	9b01      	ldr	r3, [sp, #4]
 80182e6:	2c00      	cmp	r4, #0
 80182e8:	bfb8      	it	lt
 80182ea:	4264      	neglt	r4, r4
 80182ec:	2b00      	cmp	r3, #0
 80182ee:	bfb8      	it	lt
 80182f0:	425b      	neglt	r3, r3
 80182f2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80182f6:	bfc8      	it	gt
 80182f8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80182fc:	e7e5      	b.n	80182ca <_ZN8touchgfx6muldivElll+0x50>

080182fe <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80182fe:	2000      	movs	r0, #0
 8018300:	4770      	bx	lr

08018302 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8018302:	2001      	movs	r0, #1
 8018304:	4770      	bx	lr

08018306 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8018306:	2002      	movs	r0, #2
 8018308:	4770      	bx	lr

0801830a <_ZN8touchgfx6ScreenD1Ev>:
 801830a:	4770      	bx	lr

0801830c <_ZN8touchgfx12GestureEventD1Ev>:
 801830c:	4770      	bx	lr

0801830e <_ZN8touchgfx9DragEventD1Ev>:
 801830e:	4770      	bx	lr

08018310 <_ZN8touchgfx10ClickEventD1Ev>:
 8018310:	4770      	bx	lr

08018312 <_ZN8touchgfx10ClickEventD0Ev>:
 8018312:	b510      	push	{r4, lr}
 8018314:	210c      	movs	r1, #12
 8018316:	4604      	mov	r4, r0
 8018318:	f012 fd8f 	bl	802ae3a <_ZdlPvj>
 801831c:	4620      	mov	r0, r4
 801831e:	bd10      	pop	{r4, pc}

08018320 <_ZN8touchgfx9DragEventD0Ev>:
 8018320:	b510      	push	{r4, lr}
 8018322:	2110      	movs	r1, #16
 8018324:	4604      	mov	r4, r0
 8018326:	f012 fd88 	bl	802ae3a <_ZdlPvj>
 801832a:	4620      	mov	r0, r4
 801832c:	bd10      	pop	{r4, pc}

0801832e <_ZN8touchgfx12GestureEventD0Ev>:
 801832e:	b510      	push	{r4, lr}
 8018330:	210c      	movs	r1, #12
 8018332:	4604      	mov	r4, r0
 8018334:	f012 fd81 	bl	802ae3a <_ZdlPvj>
 8018338:	4620      	mov	r0, r4
 801833a:	bd10      	pop	{r4, pc}

0801833c <_ZN8touchgfx6ScreenD0Ev>:
 801833c:	b510      	push	{r4, lr}
 801833e:	213c      	movs	r1, #60	; 0x3c
 8018340:	4604      	mov	r4, r0
 8018342:	f012 fd7a 	bl	802ae3a <_ZdlPvj>
 8018346:	4620      	mov	r0, r4
 8018348:	bd10      	pop	{r4, pc}
	...

0801834c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801834c:	b530      	push	{r4, r5, lr}
 801834e:	460d      	mov	r5, r1
 8018350:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018352:	b087      	sub	sp, #28
 8018354:	4604      	mov	r4, r0
 8018356:	b301      	cbz	r1, 801839a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018358:	a801      	add	r0, sp, #4
 801835a:	f7ff fe3d 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801835e:	892a      	ldrh	r2, [r5, #8]
 8018360:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8018364:	7928      	ldrb	r0, [r5, #4]
 8018366:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801836a:	f88d 0010 	strb.w	r0, [sp, #16]
 801836e:	1ad2      	subs	r2, r2, r3
 8018370:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8018372:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018374:	f8ad 1012 	strh.w	r1, [sp, #18]
 8018378:	441a      	add	r2, r3
 801837a:	896b      	ldrh	r3, [r5, #10]
 801837c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8018380:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018384:	1b5b      	subs	r3, r3, r5
 8018386:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8018388:	442b      	add	r3, r5
 801838a:	4d05      	ldr	r5, [pc, #20]	; (80183a0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801838c:	9503      	str	r5, [sp, #12]
 801838e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018392:	6803      	ldr	r3, [r0, #0]
 8018394:	a903      	add	r1, sp, #12
 8018396:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018398:	4798      	blx	r3
 801839a:	b007      	add	sp, #28
 801839c:	bd30      	pop	{r4, r5, pc}
 801839e:	bf00      	nop
 80183a0:	0802ffc4 	.word	0x0802ffc4

080183a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80183a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80183a8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80183aa:	b08a      	sub	sp, #40	; 0x28
 80183ac:	4604      	mov	r4, r0
 80183ae:	460d      	mov	r5, r1
 80183b0:	b113      	cbz	r3, 80183b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80183b2:	790b      	ldrb	r3, [r1, #4]
 80183b4:	2b00      	cmp	r3, #0
 80183b6:	d044      	beq.n	8018442 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80183b8:	f104 0804 	add.w	r8, r4, #4
 80183bc:	4641      	mov	r1, r8
 80183be:	a803      	add	r0, sp, #12
 80183c0:	f7ff fe0a 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80183c4:	792b      	ldrb	r3, [r5, #4]
 80183c6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80183ca:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80183ce:	b983      	cbnz	r3, 80183f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80183d0:	892a      	ldrh	r2, [r5, #8]
 80183d2:	88e9      	ldrh	r1, [r5, #6]
 80183d4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80183d8:	1b92      	subs	r2, r2, r6
 80183da:	1bc9      	subs	r1, r1, r7
 80183dc:	9301      	str	r3, [sp, #4]
 80183de:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80183e2:	9300      	str	r3, [sp, #0]
 80183e4:	b212      	sxth	r2, r2
 80183e6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80183ea:	b209      	sxth	r1, r1
 80183ec:	4640      	mov	r0, r8
 80183ee:	f7f8 fc39 	bl	8010c64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80183f2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80183f4:	b329      	cbz	r1, 8018442 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80183f6:	a805      	add	r0, sp, #20
 80183f8:	f7ff fdee 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80183fc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8018400:	792b      	ldrb	r3, [r5, #4]
 8018402:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018404:	f88d 3020 	strb.w	r3, [sp, #32]
 8018408:	1abf      	subs	r7, r7, r2
 801840a:	88ea      	ldrh	r2, [r5, #6]
 801840c:	4417      	add	r7, r2
 801840e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8018410:	4417      	add	r7, r2
 8018412:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8018416:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801841a:	1ab6      	subs	r6, r6, r2
 801841c:	892a      	ldrh	r2, [r5, #8]
 801841e:	4416      	add	r6, r2
 8018420:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018422:	4416      	add	r6, r2
 8018424:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8018428:	4a07      	ldr	r2, [pc, #28]	; (8018448 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801842a:	9207      	str	r2, [sp, #28]
 801842c:	2600      	movs	r6, #0
 801842e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8018432:	6803      	ldr	r3, [r0, #0]
 8018434:	a907      	add	r1, sp, #28
 8018436:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018438:	4798      	blx	r3
 801843a:	792b      	ldrb	r3, [r5, #4]
 801843c:	b10b      	cbz	r3, 8018442 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801843e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8018442:	b00a      	add	sp, #40	; 0x28
 8018444:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018448:	0802ff9c 	.word	0x0802ff9c

0801844c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801844c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018450:	460c      	mov	r4, r1
 8018452:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018454:	b088      	sub	sp, #32
 8018456:	4605      	mov	r5, r0
 8018458:	2900      	cmp	r1, #0
 801845a:	d06d      	beq.n	8018538 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801845c:	4668      	mov	r0, sp
 801845e:	f7ff fdbb 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018462:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8018464:	88e3      	ldrh	r3, [r4, #6]
 8018466:	f9bd 8000 	ldrsh.w	r8, [sp]
 801846a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801846e:	440b      	add	r3, r1
 8018470:	b21b      	sxth	r3, r3
 8018472:	4543      	cmp	r3, r8
 8018474:	db31      	blt.n	80184da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018476:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801847a:	44c4      	add	ip, r8
 801847c:	fa0f fc8c 	sxth.w	ip, ip
 8018480:	4563      	cmp	r3, ip
 8018482:	da2a      	bge.n	80184da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018484:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8018486:	8926      	ldrh	r6, [r4, #8]
 8018488:	4416      	add	r6, r2
 801848a:	b236      	sxth	r6, r6
 801848c:	42be      	cmp	r6, r7
 801848e:	db24      	blt.n	80184da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018490:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018494:	4438      	add	r0, r7
 8018496:	b200      	sxth	r0, r0
 8018498:	4286      	cmp	r6, r0
 801849a:	da1e      	bge.n	80184da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801849c:	8963      	ldrh	r3, [r4, #10]
 801849e:	4419      	add	r1, r3
 80184a0:	b209      	sxth	r1, r1
 80184a2:	4541      	cmp	r1, r8
 80184a4:	db08      	blt.n	80184b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80184a6:	4561      	cmp	r1, ip
 80184a8:	da06      	bge.n	80184b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80184aa:	89a3      	ldrh	r3, [r4, #12]
 80184ac:	441a      	add	r2, r3
 80184ae:	b212      	sxth	r2, r2
 80184b0:	42ba      	cmp	r2, r7
 80184b2:	db01      	blt.n	80184b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80184b4:	4282      	cmp	r2, r0
 80184b6:	db10      	blt.n	80184da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80184b8:	4b21      	ldr	r3, [pc, #132]	; (8018540 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80184ba:	9304      	str	r3, [sp, #16]
 80184bc:	2302      	movs	r3, #2
 80184be:	f88d 3014 	strb.w	r3, [sp, #20]
 80184c2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80184c4:	2300      	movs	r3, #0
 80184c6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80184ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 80184ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 80184d2:	6803      	ldr	r3, [r0, #0]
 80184d4:	a904      	add	r1, sp, #16
 80184d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80184d8:	4798      	blx	r3
 80184da:	1d29      	adds	r1, r5, #4
 80184dc:	a802      	add	r0, sp, #8
 80184de:	f7ff fd7b 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80184e2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80184e6:	88e0      	ldrh	r0, [r4, #6]
 80184e8:	7921      	ldrb	r1, [r4, #4]
 80184ea:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80184ee:	8922      	ldrh	r2, [r4, #8]
 80184f0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80184f2:	f88d 1014 	strb.w	r1, [sp, #20]
 80184f6:	eba3 0808 	sub.w	r8, r3, r8
 80184fa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80184fe:	1bdf      	subs	r7, r3, r7
 8018500:	b2bb      	uxth	r3, r7
 8018502:	fa1f f888 	uxth.w	r8, r8
 8018506:	8967      	ldrh	r7, [r4, #10]
 8018508:	89a4      	ldrh	r4, [r4, #12]
 801850a:	4440      	add	r0, r8
 801850c:	4460      	add	r0, ip
 801850e:	441a      	add	r2, r3
 8018510:	44b8      	add	r8, r7
 8018512:	4423      	add	r3, r4
 8018514:	f8ad 0016 	strh.w	r0, [sp, #22]
 8018518:	4433      	add	r3, r6
 801851a:	4432      	add	r2, r6
 801851c:	44e0      	add	r8, ip
 801851e:	4c09      	ldr	r4, [pc, #36]	; (8018544 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018520:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018522:	9404      	str	r4, [sp, #16]
 8018524:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018528:	f8ad 801a 	strh.w	r8, [sp, #26]
 801852c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018530:	6803      	ldr	r3, [r0, #0]
 8018532:	a904      	add	r1, sp, #16
 8018534:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018536:	4798      	blx	r3
 8018538:	b008      	add	sp, #32
 801853a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801853e:	bf00      	nop
 8018540:	0802ff9c 	.word	0x0802ff9c
 8018544:	0802ffb0 	.word	0x0802ffb0

08018548 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018548:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801854a:	4604      	mov	r4, r0
 801854c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018550:	3201      	adds	r2, #1
 8018552:	d112      	bne.n	801857a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018554:	6803      	ldr	r3, [r0, #0]
 8018556:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801855a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801855e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018562:	2500      	movs	r5, #0
 8018564:	9500      	str	r5, [sp, #0]
 8018566:	466d      	mov	r5, sp
 8018568:	4629      	mov	r1, r5
 801856a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801856e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018570:	4798      	blx	r3
 8018572:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018576:	e884 0003 	stmia.w	r4, {r0, r1}
 801857a:	4620      	mov	r0, r4
 801857c:	b003      	add	sp, #12
 801857e:	bd30      	pop	{r4, r5, pc}

08018580 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018580:	b513      	push	{r0, r1, r4, lr}
 8018582:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018586:	3301      	adds	r3, #1
 8018588:	4604      	mov	r4, r0
 801858a:	d109      	bne.n	80185a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801858c:	4601      	mov	r1, r0
 801858e:	4668      	mov	r0, sp
 8018590:	f7ff fd22 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018594:	f8bd 3000 	ldrh.w	r3, [sp]
 8018598:	8423      	strh	r3, [r4, #32]
 801859a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801859e:	8463      	strh	r3, [r4, #34]	; 0x22
 80185a0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80185a4:	b002      	add	sp, #8
 80185a6:	bd10      	pop	{r4, pc}

080185a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80185a8:	b513      	push	{r0, r1, r4, lr}
 80185aa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80185ae:	3301      	adds	r3, #1
 80185b0:	4604      	mov	r4, r0
 80185b2:	d109      	bne.n	80185c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80185b4:	4601      	mov	r1, r0
 80185b6:	4668      	mov	r0, sp
 80185b8:	f7ff fd0e 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80185bc:	f8bd 3000 	ldrh.w	r3, [sp]
 80185c0:	8423      	strh	r3, [r4, #32]
 80185c2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80185c6:	8463      	strh	r3, [r4, #34]	; 0x22
 80185c8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80185cc:	b002      	add	sp, #8
 80185ce:	bd10      	pop	{r4, pc}

080185d0 <_ZN8touchgfx6ScreenC1Ev>:
 80185d0:	b570      	push	{r4, r5, r6, lr}
 80185d2:	4605      	mov	r5, r0
 80185d4:	4b16      	ldr	r3, [pc, #88]	; (8018630 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80185d6:	f845 3b04 	str.w	r3, [r5], #4
 80185da:	2300      	movs	r3, #0
 80185dc:	8103      	strh	r3, [r0, #8]
 80185de:	8143      	strh	r3, [r0, #10]
 80185e0:	8183      	strh	r3, [r0, #12]
 80185e2:	81c3      	strh	r3, [r0, #14]
 80185e4:	8203      	strh	r3, [r0, #16]
 80185e6:	8243      	strh	r3, [r0, #18]
 80185e8:	8283      	strh	r3, [r0, #20]
 80185ea:	82c3      	strh	r3, [r0, #22]
 80185ec:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80185f0:	6203      	str	r3, [r0, #32]
 80185f2:	8483      	strh	r3, [r0, #36]	; 0x24
 80185f4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80185f6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80185fa:	4a0e      	ldr	r2, [pc, #56]	; (8018634 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80185fc:	6343      	str	r3, [r0, #52]	; 0x34
 80185fe:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8018602:	4b0d      	ldr	r3, [pc, #52]	; (8018638 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8018604:	6042      	str	r2, [r0, #4]
 8018606:	f9b3 6000 	ldrsh.w	r6, [r3]
 801860a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801860c:	4a0b      	ldr	r2, [pc, #44]	; (801863c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801860e:	4604      	mov	r4, r0
 8018610:	2101      	movs	r1, #1
 8018612:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8018616:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801861a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801861e:	4628      	mov	r0, r5
 8018620:	4798      	blx	r3
 8018622:	6863      	ldr	r3, [r4, #4]
 8018624:	4628      	mov	r0, r5
 8018626:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018628:	4631      	mov	r1, r6
 801862a:	4798      	blx	r3
 801862c:	4620      	mov	r0, r4
 801862e:	bd70      	pop	{r4, r5, r6, pc}
 8018630:	0802ffd8 	.word	0x0802ffd8
 8018634:	0802f65c 	.word	0x0802f65c
 8018638:	2001382a 	.word	0x2001382a
 801863c:	20013828 	.word	0x20013828

08018640 <_ZN8touchgfx6Screen4drawEv>:
 8018640:	b507      	push	{r0, r1, r2, lr}
 8018642:	4b09      	ldr	r3, [pc, #36]	; (8018668 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018644:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018648:	4b08      	ldr	r3, [pc, #32]	; (801866c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801864a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801864e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018652:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018656:	6803      	ldr	r3, [r0, #0]
 8018658:	2100      	movs	r1, #0
 801865a:	9100      	str	r1, [sp, #0]
 801865c:	689b      	ldr	r3, [r3, #8]
 801865e:	4669      	mov	r1, sp
 8018660:	4798      	blx	r3
 8018662:	b003      	add	sp, #12
 8018664:	f85d fb04 	ldr.w	pc, [sp], #4
 8018668:	20013828 	.word	0x20013828
 801866c:	2001382a 	.word	0x2001382a

08018670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018674:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018678:	2b00      	cmp	r3, #0
 801867a:	b089      	sub	sp, #36	; 0x24
 801867c:	4680      	mov	r8, r0
 801867e:	460c      	mov	r4, r1
 8018680:	4615      	mov	r5, r2
 8018682:	dd0e      	ble.n	80186a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018684:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018688:	2b00      	cmp	r3, #0
 801868a:	dd0a      	ble.n	80186a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801868c:	4628      	mov	r0, r5
 801868e:	f7ff ff5b 	bl	8018548 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018692:	4621      	mov	r1, r4
 8018694:	f7fe fa3d 	bl	8016b12 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018698:	69eb      	ldr	r3, [r5, #28]
 801869a:	b928      	cbnz	r0, 80186a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801869c:	461d      	mov	r5, r3
 801869e:	2b00      	cmp	r3, #0
 80186a0:	d1f4      	bne.n	801868c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80186a2:	b009      	add	sp, #36	; 0x24
 80186a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186a8:	ae04      	add	r6, sp, #16
 80186aa:	2b00      	cmp	r3, #0
 80186ac:	f000 80b5 	beq.w	801881a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80186b0:	682b      	ldr	r3, [r5, #0]
 80186b2:	4629      	mov	r1, r5
 80186b4:	68db      	ldr	r3, [r3, #12]
 80186b6:	a802      	add	r0, sp, #8
 80186b8:	4798      	blx	r3
 80186ba:	4628      	mov	r0, r5
 80186bc:	f7ff ff60 	bl	8018580 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80186c0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80186c4:	4407      	add	r7, r0
 80186c6:	4628      	mov	r0, r5
 80186c8:	f7ff ff6e 	bl	80185a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80186cc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80186d0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80186d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80186d8:	4418      	add	r0, r3
 80186da:	4621      	mov	r1, r4
 80186dc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80186e0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80186e4:	b23f      	sxth	r7, r7
 80186e6:	4630      	mov	r0, r6
 80186e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80186ec:	f8ad 7010 	strh.w	r7, [sp, #16]
 80186f0:	f7f8 fb9c 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 80186f4:	4628      	mov	r0, r5
 80186f6:	f7ff ff27 	bl	8018548 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80186fa:	4602      	mov	r2, r0
 80186fc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018700:	ab06      	add	r3, sp, #24
 8018702:	e883 0003 	stmia.w	r3, {r0, r1}
 8018706:	4611      	mov	r1, r2
 8018708:	4618      	mov	r0, r3
 801870a:	f7f8 fb8f 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 801870e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018712:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018716:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801871a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801871e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018722:	4299      	cmp	r1, r3
 8018724:	d10b      	bne.n	801873e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018726:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801872a:	4552      	cmp	r2, sl
 801872c:	d107      	bne.n	801873e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801872e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018732:	455a      	cmp	r2, fp
 8018734:	d103      	bne.n	801873e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018736:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801873a:	454a      	cmp	r2, r9
 801873c:	d06d      	beq.n	801881a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801873e:	f1bb 0f00 	cmp.w	fp, #0
 8018742:	dd65      	ble.n	8018810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018744:	f1b9 0f00 	cmp.w	r9, #0
 8018748:	dd62      	ble.n	8018810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801874a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801874e:	fa1f f08a 	uxth.w	r0, sl
 8018752:	4552      	cmp	r2, sl
 8018754:	9000      	str	r0, [sp, #0]
 8018756:	da12      	bge.n	801877e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018758:	9301      	str	r3, [sp, #4]
 801875a:	9b00      	ldr	r3, [sp, #0]
 801875c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018760:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018764:	1a9a      	subs	r2, r3, r2
 8018766:	f8ad 1010 	strh.w	r1, [sp, #16]
 801876a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801876e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018772:	69ea      	ldr	r2, [r5, #28]
 8018774:	4631      	mov	r1, r6
 8018776:	4640      	mov	r0, r8
 8018778:	f7ff ff7a 	bl	8018670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801877c:	9b01      	ldr	r3, [sp, #4]
 801877e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018782:	429a      	cmp	r2, r3
 8018784:	b29f      	uxth	r7, r3
 8018786:	da0d      	bge.n	80187a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018788:	f8ad 2010 	strh.w	r2, [sp, #16]
 801878c:	1aba      	subs	r2, r7, r2
 801878e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018792:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018796:	f8ad 9016 	strh.w	r9, [sp, #22]
 801879a:	69ea      	ldr	r2, [r5, #28]
 801879c:	4631      	mov	r1, r6
 801879e:	4640      	mov	r0, r8
 80187a0:	f7ff ff66 	bl	8018670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80187a4:	8822      	ldrh	r2, [r4, #0]
 80187a6:	88a3      	ldrh	r3, [r4, #4]
 80187a8:	445f      	add	r7, fp
 80187aa:	4413      	add	r3, r2
 80187ac:	b29b      	uxth	r3, r3
 80187ae:	b2bf      	uxth	r7, r7
 80187b0:	b23a      	sxth	r2, r7
 80187b2:	b219      	sxth	r1, r3
 80187b4:	4291      	cmp	r1, r2
 80187b6:	dd0d      	ble.n	80187d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80187b8:	1bdb      	subs	r3, r3, r7
 80187ba:	f8ad 2010 	strh.w	r2, [sp, #16]
 80187be:	f8ad a012 	strh.w	sl, [sp, #18]
 80187c2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80187c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80187ca:	69ea      	ldr	r2, [r5, #28]
 80187cc:	4631      	mov	r1, r6
 80187ce:	4640      	mov	r0, r8
 80187d0:	f7ff ff4e 	bl	8018670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80187d4:	88e2      	ldrh	r2, [r4, #6]
 80187d6:	8863      	ldrh	r3, [r4, #2]
 80187d8:	4413      	add	r3, r2
 80187da:	9a00      	ldr	r2, [sp, #0]
 80187dc:	444a      	add	r2, r9
 80187de:	b29b      	uxth	r3, r3
 80187e0:	fa1f f982 	uxth.w	r9, r2
 80187e4:	fa0f f289 	sxth.w	r2, r9
 80187e8:	b219      	sxth	r1, r3
 80187ea:	428a      	cmp	r2, r1
 80187ec:	da15      	bge.n	801881a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80187ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80187f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80187f6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80187fa:	eba3 0309 	sub.w	r3, r3, r9
 80187fe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018802:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018806:	f8ad 3016 	strh.w	r3, [sp, #22]
 801880a:	69ea      	ldr	r2, [r5, #28]
 801880c:	4631      	mov	r1, r6
 801880e:	e001      	b.n	8018814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018810:	69ea      	ldr	r2, [r5, #28]
 8018812:	4621      	mov	r1, r4
 8018814:	4640      	mov	r0, r8
 8018816:	f7ff ff2b 	bl	8018670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801881a:	4628      	mov	r0, r5
 801881c:	f7ff fe94 	bl	8018548 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018820:	6861      	ldr	r1, [r4, #4]
 8018822:	4602      	mov	r2, r0
 8018824:	6820      	ldr	r0, [r4, #0]
 8018826:	4633      	mov	r3, r6
 8018828:	c303      	stmia	r3!, {r0, r1}
 801882a:	4611      	mov	r1, r2
 801882c:	4630      	mov	r0, r6
 801882e:	f7f8 fafd 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 8018832:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018836:	2b00      	cmp	r3, #0
 8018838:	f77f af33 	ble.w	80186a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801883c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018840:	2b00      	cmp	r3, #0
 8018842:	f77f af2e 	ble.w	80186a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018846:	4628      	mov	r0, r5
 8018848:	f7ff fe9a 	bl	8018580 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801884c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018850:	1a18      	subs	r0, r3, r0
 8018852:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018856:	4628      	mov	r0, r5
 8018858:	f7ff fea6 	bl	80185a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801885c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018860:	1a18      	subs	r0, r3, r0
 8018862:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018866:	682b      	ldr	r3, [r5, #0]
 8018868:	4631      	mov	r1, r6
 801886a:	689b      	ldr	r3, [r3, #8]
 801886c:	4628      	mov	r0, r5
 801886e:	4798      	blx	r3
 8018870:	e717      	b.n	80186a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018872 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018872:	b570      	push	{r4, r5, r6, lr}
 8018874:	460c      	mov	r4, r1
 8018876:	b086      	sub	sp, #24
 8018878:	1d06      	adds	r6, r0, #4
 801887a:	2300      	movs	r3, #0
 801887c:	4631      	mov	r1, r6
 801887e:	4605      	mov	r5, r0
 8018880:	a802      	add	r0, sp, #8
 8018882:	9301      	str	r3, [sp, #4]
 8018884:	f7ff fba8 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018888:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801888c:	8822      	ldrh	r2, [r4, #0]
 801888e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018892:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018896:	f8ad 0014 	strh.w	r0, [sp, #20]
 801889a:	1ad2      	subs	r2, r2, r3
 801889c:	8863      	ldrh	r3, [r4, #2]
 801889e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80188a2:	1a5b      	subs	r3, r3, r1
 80188a4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80188a8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80188ac:	aa01      	add	r2, sp, #4
 80188ae:	a904      	add	r1, sp, #16
 80188b0:	4630      	mov	r0, r6
 80188b2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80188b6:	f7f8 fb91 	bl	8010fdc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80188ba:	9a01      	ldr	r2, [sp, #4]
 80188bc:	b11a      	cbz	r2, 80188c6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80188be:	4621      	mov	r1, r4
 80188c0:	4628      	mov	r0, r5
 80188c2:	f7ff fed5 	bl	8018670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80188c6:	b006      	add	sp, #24
 80188c8:	bd70      	pop	{r4, r5, r6, pc}

080188ca <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80188ca:	b530      	push	{r4, r5, lr}
 80188cc:	4602      	mov	r2, r0
 80188ce:	4604      	mov	r4, r0
 80188d0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80188d4:	b085      	sub	sp, #20
 80188d6:	460d      	mov	r5, r1
 80188d8:	6851      	ldr	r1, [r2, #4]
 80188da:	466b      	mov	r3, sp
 80188dc:	c303      	stmia	r3!, {r0, r1}
 80188de:	4629      	mov	r1, r5
 80188e0:	4668      	mov	r0, sp
 80188e2:	f7f8 faa3 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 80188e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80188ea:	b12b      	cbz	r3, 80188f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80188ec:	4669      	mov	r1, sp
 80188ee:	4620      	mov	r0, r4
 80188f0:	f7ff ffbf 	bl	8018872 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80188f4:	b005      	add	sp, #20
 80188f6:	bd30      	pop	{r4, r5, pc}
 80188f8:	3404      	adds	r4, #4
 80188fa:	4621      	mov	r1, r4
 80188fc:	a802      	add	r0, sp, #8
 80188fe:	f7ff fb6b 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018902:	f8bd 3000 	ldrh.w	r3, [sp]
 8018906:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801890a:	1a9b      	subs	r3, r3, r2
 801890c:	f8ad 3000 	strh.w	r3, [sp]
 8018910:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018914:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018918:	4669      	mov	r1, sp
 801891a:	1a9b      	subs	r3, r3, r2
 801891c:	4620      	mov	r0, r4
 801891e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018922:	f7f8 fb22 	bl	8010f6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018926:	e7e5      	b.n	80188f4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018928 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018928:	680a      	ldr	r2, [r1, #0]
 801892a:	460b      	mov	r3, r1
 801892c:	6992      	ldr	r2, [r2, #24]
 801892e:	1d01      	adds	r1, r0, #4
 8018930:	4618      	mov	r0, r3
 8018932:	4710      	bx	r2

08018934 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018934:	4298      	cmp	r0, r3
 8018936:	d200      	bcs.n	801893a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018938:	b913      	cbnz	r3, 8018940 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801893a:	440a      	add	r2, r1
 801893c:	b210      	sxth	r0, r2
 801893e:	4770      	bx	lr
 8018940:	ee07 0a90 	vmov	s15, r0
 8018944:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018948:	ee07 3a90 	vmov	s15, r3
 801894c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018950:	eddf 4a15 	vldr	s9, [pc, #84]	; 80189a8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018954:	eddf 5a15 	vldr	s11, [pc, #84]	; 80189ac <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018958:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801895c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018960:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018964:	ee07 2a90 	vmov	s15, r2
 8018968:	eee7 5a24 	vfma.f32	s11, s14, s9
 801896c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018970:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018974:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018978:	ee07 1a90 	vmov	s15, r1
 801897c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018980:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018984:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018988:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801898c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018990:	bfcc      	ite	gt
 8018992:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018996:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801899a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801899e:	ee17 3a90 	vmov	r3, s15
 80189a2:	b218      	sxth	r0, r3
 80189a4:	4770      	bx	lr
 80189a6:	bf00      	nop
 80189a8:	402ce6b0 	.word	0x402ce6b0
 80189ac:	3fd9cd60 	.word	0x3fd9cd60

080189b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80189b0:	4298      	cmp	r0, r3
 80189b2:	d200      	bcs.n	80189b6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80189b4:	b913      	cbnz	r3, 80189bc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80189b6:	440a      	add	r2, r1
 80189b8:	b210      	sxth	r0, r2
 80189ba:	4770      	bx	lr
 80189bc:	ee07 0a90 	vmov	s15, r0
 80189c0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80189c4:	ee07 3a90 	vmov	s15, r3
 80189c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80189cc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80189d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80189d4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80189d8:	ee07 2a90 	vmov	s15, r2
 80189dc:	ee67 5a07 	vmul.f32	s11, s14, s14
 80189e0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80189e4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80189e8:	ee07 1a90 	vmov	s15, r1
 80189ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80189f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80189f4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80189f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a00:	bfcc      	ite	gt
 8018a02:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018a06:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018a0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018a0e:	ee17 3a90 	vmov	r3, s15
 8018a12:	b218      	sxth	r0, r3
 8018a14:	4770      	bx	lr

08018a16 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8018a16:	4298      	cmp	r0, r3
 8018a18:	d200      	bcs.n	8018a1c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8018a1a:	b913      	cbnz	r3, 8018a22 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8018a1c:	440a      	add	r2, r1
 8018a1e:	b210      	sxth	r0, r2
 8018a20:	4770      	bx	lr
 8018a22:	ee07 2a90 	vmov	s15, r2
 8018a26:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018a2a:	ee07 0a90 	vmov	s15, r0
 8018a2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018a32:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018a36:	ee07 3a10 	vmov	s14, r3
 8018a3a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018a3e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018a42:	ee07 1a90 	vmov	s15, r1
 8018a46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018a4a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018a4e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018a52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a5a:	bfcc      	ite	gt
 8018a5c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018a60:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018a64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018a68:	ee17 3a90 	vmov	r3, s15
 8018a6c:	b218      	sxth	r0, r3
 8018a6e:	4770      	bx	lr

08018a70 <_ZN8touchgfx12TextProviderC1Ev>:
 8018a70:	b538      	push	{r3, r4, r5, lr}
 8018a72:	2500      	movs	r5, #0
 8018a74:	2302      	movs	r3, #2
 8018a76:	4604      	mov	r4, r0
 8018a78:	e9c0 5500 	strd	r5, r5, [r0]
 8018a7c:	7403      	strb	r3, [r0, #16]
 8018a7e:	6145      	str	r5, [r0, #20]
 8018a80:	7605      	strb	r5, [r0, #24]
 8018a82:	83c5      	strh	r5, [r0, #30]
 8018a84:	8405      	strh	r5, [r0, #32]
 8018a86:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018a88:	8705      	strh	r5, [r0, #56]	; 0x38
 8018a8a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8018a8c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018a90:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018a94:	220e      	movs	r2, #14
 8018a96:	4629      	mov	r1, r5
 8018a98:	304c      	adds	r0, #76	; 0x4c
 8018a9a:	f013 f9e6 	bl	802be6a <memset>
 8018a9e:	2301      	movs	r3, #1
 8018aa0:	4620      	mov	r0, r4
 8018aa2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018aa6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018aaa:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8018aae:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018ab2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8018ab6:	f7ef ff61 	bl	800897c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8018aba:	4620      	mov	r0, r4
 8018abc:	bd38      	pop	{r3, r4, r5, pc}

08018abe <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8018abe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018ac0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ac4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8018ac6:	fab0 f080 	clz	r0, r0
 8018aca:	0940      	lsrs	r0, r0, #5
 8018acc:	4770      	bx	lr

08018ace <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018ace:	b530      	push	{r4, r5, lr}
 8018ad0:	2500      	movs	r5, #0
 8018ad2:	2401      	movs	r4, #1
 8018ad4:	6843      	ldr	r3, [r0, #4]
 8018ad6:	b913      	cbnz	r3, 8018ade <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018ad8:	6803      	ldr	r3, [r0, #0]
 8018ada:	b313      	cbz	r3, 8018b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018adc:	6043      	str	r3, [r0, #4]
 8018ade:	7e03      	ldrb	r3, [r0, #24]
 8018ae0:	b143      	cbz	r3, 8018af4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018ae2:	6943      	ldr	r3, [r0, #20]
 8018ae4:	b12b      	cbz	r3, 8018af2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018ae6:	881a      	ldrh	r2, [r3, #0]
 8018ae8:	b11a      	cbz	r2, 8018af2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018aea:	1c9a      	adds	r2, r3, #2
 8018aec:	6142      	str	r2, [r0, #20]
 8018aee:	8818      	ldrh	r0, [r3, #0]
 8018af0:	bd30      	pop	{r4, r5, pc}
 8018af2:	7605      	strb	r5, [r0, #24]
 8018af4:	6843      	ldr	r3, [r0, #4]
 8018af6:	8819      	ldrh	r1, [r3, #0]
 8018af8:	b199      	cbz	r1, 8018b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018afa:	1c9a      	adds	r2, r3, #2
 8018afc:	2902      	cmp	r1, #2
 8018afe:	6042      	str	r2, [r0, #4]
 8018b00:	d1f5      	bne.n	8018aee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018b02:	7c03      	ldrb	r3, [r0, #16]
 8018b04:	2b01      	cmp	r3, #1
 8018b06:	d8e5      	bhi.n	8018ad4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b08:	1c5a      	adds	r2, r3, #1
 8018b0a:	3302      	adds	r3, #2
 8018b0c:	7402      	strb	r2, [r0, #16]
 8018b0e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018b12:	6143      	str	r3, [r0, #20]
 8018b14:	2b00      	cmp	r3, #0
 8018b16:	d0dd      	beq.n	8018ad4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b18:	881b      	ldrh	r3, [r3, #0]
 8018b1a:	2b00      	cmp	r3, #0
 8018b1c:	d0da      	beq.n	8018ad4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b1e:	7604      	strb	r4, [r0, #24]
 8018b20:	e7d8      	b.n	8018ad4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b22:	2000      	movs	r0, #0
 8018b24:	e7e4      	b.n	8018af0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018b26:	b430      	push	{r4, r5}
 8018b28:	6001      	str	r1, [r0, #0]
 8018b2a:	2100      	movs	r1, #0
 8018b2c:	6041      	str	r1, [r0, #4]
 8018b2e:	6815      	ldr	r5, [r2, #0]
 8018b30:	6085      	str	r5, [r0, #8]
 8018b32:	6852      	ldr	r2, [r2, #4]
 8018b34:	6443      	str	r3, [r0, #68]	; 0x44
 8018b36:	9b02      	ldr	r3, [sp, #8]
 8018b38:	60c2      	str	r2, [r0, #12]
 8018b3a:	7401      	strb	r1, [r0, #16]
 8018b3c:	6141      	str	r1, [r0, #20]
 8018b3e:	7601      	strb	r1, [r0, #24]
 8018b40:	8701      	strh	r1, [r0, #56]	; 0x38
 8018b42:	8401      	strh	r1, [r0, #32]
 8018b44:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018b48:	6483      	str	r3, [r0, #72]	; 0x48
 8018b4a:	bc30      	pop	{r4, r5}
 8018b4c:	f7ef bf16 	b.w	800897c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018b50 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018b50:	b408      	push	{r3}
 8018b52:	b510      	push	{r4, lr}
 8018b54:	b085      	sub	sp, #20
 8018b56:	ac07      	add	r4, sp, #28
 8018b58:	f854 3b04 	ldr.w	r3, [r4], #4
 8018b5c:	9300      	str	r3, [sp, #0]
 8018b5e:	4613      	mov	r3, r2
 8018b60:	4622      	mov	r2, r4
 8018b62:	9403      	str	r4, [sp, #12]
 8018b64:	f7ff ffdf 	bl	8018b26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b68:	b005      	add	sp, #20
 8018b6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b6e:	b001      	add	sp, #4
 8018b70:	4770      	bx	lr

08018b72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018b72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b74:	4605      	mov	r5, r0
 8018b76:	4608      	mov	r0, r1
 8018b78:	b1e9      	cbz	r1, 8018bb6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018b7a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8018b7e:	460b      	mov	r3, r1
 8018b80:	f101 0708 	add.w	r7, r1, #8
 8018b84:	4622      	mov	r2, r4
 8018b86:	6818      	ldr	r0, [r3, #0]
 8018b88:	6859      	ldr	r1, [r3, #4]
 8018b8a:	4626      	mov	r6, r4
 8018b8c:	c603      	stmia	r6!, {r0, r1}
 8018b8e:	3308      	adds	r3, #8
 8018b90:	42bb      	cmp	r3, r7
 8018b92:	4634      	mov	r4, r6
 8018b94:	d1f7      	bne.n	8018b86 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018b96:	6818      	ldr	r0, [r3, #0]
 8018b98:	6030      	str	r0, [r6, #0]
 8018b9a:	889b      	ldrh	r3, [r3, #4]
 8018b9c:	80b3      	strh	r3, [r6, #4]
 8018b9e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018ba2:	015b      	lsls	r3, r3, #5
 8018ba4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018ba8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8018bac:	430b      	orrs	r3, r1
 8018bae:	425b      	negs	r3, r3
 8018bb0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018bb4:	4610      	mov	r0, r2
 8018bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018bb8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018bb8:	b538      	push	{r3, r4, r5, lr}
 8018bba:	460c      	mov	r4, r1
 8018bbc:	6811      	ldr	r1, [r2, #0]
 8018bbe:	4610      	mov	r0, r2
 8018bc0:	68cd      	ldr	r5, [r1, #12]
 8018bc2:	4619      	mov	r1, r3
 8018bc4:	47a8      	blx	r5
 8018bc6:	2800      	cmp	r0, #0
 8018bc8:	bf08      	it	eq
 8018bca:	4620      	moveq	r0, r4
 8018bcc:	bd38      	pop	{r3, r4, r5, pc}
	...

08018bd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018bd2:	4604      	mov	r4, r0
 8018bd4:	4615      	mov	r5, r2
 8018bd6:	4608      	mov	r0, r1
 8018bd8:	b93a      	cbnz	r2, 8018bea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8018bda:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018bde:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8018be2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8018be6:	4628      	mov	r0, r5
 8018be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018bea:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018bee:	8893      	ldrh	r3, [r2, #4]
 8018bf0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018bf4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018bf8:	79ee      	ldrb	r6, [r5, #7]
 8018bfa:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018bfe:	4316      	orrs	r6, r2
 8018c00:	19da      	adds	r2, r3, r7
 8018c02:	b291      	uxth	r1, r2
 8018c04:	291d      	cmp	r1, #29
 8018c06:	b2b7      	uxth	r7, r6
 8018c08:	d87a      	bhi.n	8018d00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018c0a:	2201      	movs	r2, #1
 8018c0c:	408a      	lsls	r2, r1
 8018c0e:	4975      	ldr	r1, [pc, #468]	; (8018de4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018c10:	420a      	tst	r2, r1
 8018c12:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018c16:	d12d      	bne.n	8018c74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018c18:	f412 7f60 	tst.w	r2, #896	; 0x380
 8018c1c:	d070      	beq.n	8018d00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018c1e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018c22:	462b      	mov	r3, r5
 8018c24:	f105 0e08 	add.w	lr, r5, #8
 8018c28:	4615      	mov	r5, r2
 8018c2a:	6818      	ldr	r0, [r3, #0]
 8018c2c:	6859      	ldr	r1, [r3, #4]
 8018c2e:	4694      	mov	ip, r2
 8018c30:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018c34:	3308      	adds	r3, #8
 8018c36:	4573      	cmp	r3, lr
 8018c38:	4662      	mov	r2, ip
 8018c3a:	d1f6      	bne.n	8018c2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018c3c:	6818      	ldr	r0, [r3, #0]
 8018c3e:	f8cc 0000 	str.w	r0, [ip]
 8018c42:	889b      	ldrh	r3, [r3, #4]
 8018c44:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018c48:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018c4c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018c50:	b2b3      	uxth	r3, r6
 8018c52:	1aca      	subs	r2, r1, r3
 8018c54:	b292      	uxth	r2, r2
 8018c56:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018c5a:	10d2      	asrs	r2, r2, #3
 8018c5c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018c60:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018c64:	4302      	orrs	r2, r0
 8018c66:	1bcf      	subs	r7, r1, r7
 8018c68:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8018c6c:	1afb      	subs	r3, r7, r3
 8018c6e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018c72:	e7b8      	b.n	8018be6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018c74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018c76:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018c7a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8018c7c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018c80:	4299      	cmp	r1, r3
 8018c82:	d110      	bne.n	8018ca6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018c84:	6803      	ldr	r3, [r0, #0]
 8018c86:	68db      	ldr	r3, [r3, #12]
 8018c88:	4798      	blx	r3
 8018c8a:	7b41      	ldrb	r1, [r0, #13]
 8018c8c:	00cb      	lsls	r3, r1, #3
 8018c8e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018c92:	7a03      	ldrb	r3, [r0, #8]
 8018c94:	0648      	lsls	r0, r1, #25
 8018c96:	ea43 0302 	orr.w	r3, r3, r2
 8018c9a:	bf44      	itt	mi
 8018c9c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ca0:	b21b      	sxthmi	r3, r3
 8018ca2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018ca6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8018caa:	443b      	add	r3, r7
 8018cac:	4433      	add	r3, r6
 8018cae:	b29b      	uxth	r3, r3
 8018cb0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018cb4:	462a      	mov	r2, r5
 8018cb6:	f105 0c08 	add.w	ip, r5, #8
 8018cba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018cbe:	4635      	mov	r5, r6
 8018cc0:	6810      	ldr	r0, [r2, #0]
 8018cc2:	6851      	ldr	r1, [r2, #4]
 8018cc4:	4637      	mov	r7, r6
 8018cc6:	c703      	stmia	r7!, {r0, r1}
 8018cc8:	3208      	adds	r2, #8
 8018cca:	4562      	cmp	r2, ip
 8018ccc:	463e      	mov	r6, r7
 8018cce:	d1f7      	bne.n	8018cc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018cd0:	6810      	ldr	r0, [r2, #0]
 8018cd2:	6038      	str	r0, [r7, #0]
 8018cd4:	8892      	ldrh	r2, [r2, #4]
 8018cd6:	80ba      	strh	r2, [r7, #4]
 8018cd8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018cdc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018ce0:	10db      	asrs	r3, r3, #3
 8018ce2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018ce6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018cea:	4313      	orrs	r3, r2
 8018cec:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018cf0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018cf4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018cf8:	1a9b      	subs	r3, r3, r2
 8018cfa:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018cfe:	e772      	b.n	8018be6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018d00:	f023 0204 	bic.w	r2, r3, #4
 8018d04:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018d08:	428a      	cmp	r2, r1
 8018d0a:	d003      	beq.n	8018d14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8018d0c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018d10:	4293      	cmp	r3, r2
 8018d12:	d120      	bne.n	8018d56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8018d14:	3b01      	subs	r3, #1
 8018d16:	4602      	mov	r2, r0
 8018d18:	b29b      	uxth	r3, r3
 8018d1a:	4629      	mov	r1, r5
 8018d1c:	4620      	mov	r0, r4
 8018d1e:	f7ff ff4b 	bl	8018bb8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018d22:	7b41      	ldrb	r1, [r0, #13]
 8018d24:	00cb      	lsls	r3, r1, #3
 8018d26:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018d2a:	7a03      	ldrb	r3, [r0, #8]
 8018d2c:	0649      	lsls	r1, r1, #25
 8018d2e:	ea43 0302 	orr.w	r3, r3, r2
 8018d32:	bf44      	itt	mi
 8018d34:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018d38:	b21b      	sxthmi	r3, r3
 8018d3a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018d3e:	7b6b      	ldrb	r3, [r5, #13]
 8018d40:	7aaa      	ldrb	r2, [r5, #10]
 8018d42:	005b      	lsls	r3, r3, #1
 8018d44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018d48:	4313      	orrs	r3, r2
 8018d4a:	115a      	asrs	r2, r3, #5
 8018d4c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018d50:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018d54:	e036      	b.n	8018dc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018d56:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018d5a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018d5e:	7a2a      	ldrb	r2, [r5, #8]
 8018d60:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018d64:	ea42 0201 	orr.w	r2, r2, r1
 8018d68:	bf1c      	itt	ne
 8018d6a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8018d6e:	b212      	sxthne	r2, r2
 8018d70:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018d74:	f640 6109 	movw	r1, #3593	; 0xe09
 8018d78:	f023 0210 	bic.w	r2, r3, #16
 8018d7c:	428a      	cmp	r2, r1
 8018d7e:	d003      	beq.n	8018d88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018d80:	f640 6213 	movw	r2, #3603	; 0xe13
 8018d84:	4293      	cmp	r3, r2
 8018d86:	d12a      	bne.n	8018dde <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018d88:	7b6e      	ldrb	r6, [r5, #13]
 8018d8a:	0076      	lsls	r6, r6, #1
 8018d8c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018d90:	7aae      	ldrb	r6, [r5, #10]
 8018d92:	4316      	orrs	r6, r2
 8018d94:	f640 6213 	movw	r2, #3603	; 0xe13
 8018d98:	4293      	cmp	r3, r2
 8018d9a:	bf18      	it	ne
 8018d9c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018da0:	4602      	mov	r2, r0
 8018da2:	bf14      	ite	ne
 8018da4:	b29b      	uxthne	r3, r3
 8018da6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8018daa:	4629      	mov	r1, r5
 8018dac:	4620      	mov	r0, r4
 8018dae:	f7ff ff03 	bl	8018bb8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018db2:	7b43      	ldrb	r3, [r0, #13]
 8018db4:	7a82      	ldrb	r2, [r0, #10]
 8018db6:	005b      	lsls	r3, r3, #1
 8018db8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018dbc:	4313      	orrs	r3, r2
 8018dbe:	1af6      	subs	r6, r6, r3
 8018dc0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018dc4:	7b69      	ldrb	r1, [r5, #13]
 8018dc6:	00cb      	lsls	r3, r1, #3
 8018dc8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018dcc:	7a2b      	ldrb	r3, [r5, #8]
 8018dce:	4313      	orrs	r3, r2
 8018dd0:	064a      	lsls	r2, r1, #25
 8018dd2:	bf44      	itt	mi
 8018dd4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018dd8:	b21b      	sxthmi	r3, r3
 8018dda:	1bdb      	subs	r3, r3, r7
 8018ddc:	e747      	b.n	8018c6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018dde:	2300      	movs	r3, #0
 8018de0:	e7b6      	b.n	8018d50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8018de2:	bf00      	nop
 8018de4:	3fc00079 	.word	0x3fc00079

08018de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018de8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018dec:	4604      	mov	r4, r0
 8018dee:	b942      	cbnz	r2, 8018e02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018df0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018df4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018df8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018dfc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018e00:	e047      	b.n	8018e92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018e02:	7b51      	ldrb	r1, [r2, #13]
 8018e04:	8893      	ldrh	r3, [r2, #4]
 8018e06:	010d      	lsls	r5, r1, #4
 8018e08:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8018e0c:	79d5      	ldrb	r5, [r2, #7]
 8018e0e:	4305      	orrs	r5, r0
 8018e10:	2d04      	cmp	r5, #4
 8018e12:	bfcc      	ite	gt
 8018e14:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018e18:	f04f 0e01 	movle.w	lr, #1
 8018e1c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018e20:	f200 80ab 	bhi.w	8018f7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018e24:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018e28:	4283      	cmp	r3, r0
 8018e2a:	d216      	bcs.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e2c:	f240 605b 	movw	r0, #1627	; 0x65b
 8018e30:	4283      	cmp	r3, r0
 8018e32:	d859      	bhi.n	8018ee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018e34:	f240 6057 	movw	r0, #1623	; 0x657
 8018e38:	4283      	cmp	r3, r0
 8018e3a:	d20e      	bcs.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e3c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018e40:	d24a      	bcs.n	8018ed8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018e42:	f240 604e 	movw	r0, #1614	; 0x64e
 8018e46:	4283      	cmp	r3, r0
 8018e48:	d207      	bcs.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e4a:	f240 601a 	movw	r0, #1562	; 0x61a
 8018e4e:	4283      	cmp	r3, r0
 8018e50:	d02a      	beq.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018e52:	d821      	bhi.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018e54:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018e58:	d35b      	bcc.n	8018f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018e5a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018e5e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018e62:	f040 80d0 	bne.w	8019006 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018e66:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018e6a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018e6e:	f040 80ca 	bne.w	8019006 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018e72:	00cb      	lsls	r3, r1, #3
 8018e74:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018e78:	7a13      	ldrb	r3, [r2, #8]
 8018e7a:	0649      	lsls	r1, r1, #25
 8018e7c:	ea43 0300 	orr.w	r3, r3, r0
 8018e80:	bf44      	itt	mi
 8018e82:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018e86:	b21b      	sxthmi	r3, r3
 8018e88:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018e8c:	1b5d      	subs	r5, r3, r5
 8018e8e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018e92:	4610      	mov	r0, r2
 8018e94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018e98:	f240 604b 	movw	r0, #1611	; 0x64b
 8018e9c:	4283      	cmp	r3, r0
 8018e9e:	d338      	bcc.n	8018f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018ea0:	f240 604c 	movw	r0, #1612	; 0x64c
 8018ea4:	4283      	cmp	r3, r0
 8018ea6:	d9d8      	bls.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ea8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018eac:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018eb0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018eb4:	f040 80f2 	bne.w	801909c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018eb8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018ebc:	f040 80ee 	bne.w	801909c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018ec0:	00cb      	lsls	r3, r1, #3
 8018ec2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018ec6:	7a13      	ldrb	r3, [r2, #8]
 8018ec8:	064e      	lsls	r6, r1, #25
 8018eca:	ea43 0300 	orr.w	r3, r3, r0
 8018ece:	bf44      	itt	mi
 8018ed0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ed4:	b21b      	sxthmi	r3, r3
 8018ed6:	e7d9      	b.n	8018e8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018ed8:	f240 6054 	movw	r0, #1620	; 0x654
 8018edc:	4283      	cmp	r3, r0
 8018ede:	d8e3      	bhi.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ee0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018ee4:	d9e0      	bls.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ee6:	e7b8      	b.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ee8:	f240 6074 	movw	r0, #1652	; 0x674
 8018eec:	4283      	cmp	r3, r0
 8018eee:	d0b4      	beq.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ef0:	d82d      	bhi.n	8018f4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018ef2:	f240 605e 	movw	r0, #1630	; 0x65e
 8018ef6:	4283      	cmp	r3, r0
 8018ef8:	d804      	bhi.n	8018f04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018efa:	f240 605d 	movw	r0, #1629	; 0x65d
 8018efe:	4283      	cmp	r3, r0
 8018f00:	d3d2      	bcc.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f02:	e7aa      	b.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f04:	f240 605f 	movw	r0, #1631	; 0x65f
 8018f08:	4283      	cmp	r3, r0
 8018f0a:	d0cd      	beq.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f0c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018f10:	d0a3      	beq.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f12:	00cb      	lsls	r3, r1, #3
 8018f14:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018f18:	7a13      	ldrb	r3, [r2, #8]
 8018f1a:	0649      	lsls	r1, r1, #25
 8018f1c:	ea43 0300 	orr.w	r3, r3, r0
 8018f20:	bf44      	itt	mi
 8018f22:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018f26:	b21b      	sxthmi	r3, r3
 8018f28:	1b5d      	subs	r5, r3, r5
 8018f2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018f2e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018f32:	7b53      	ldrb	r3, [r2, #13]
 8018f34:	015b      	lsls	r3, r3, #5
 8018f36:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018f3a:	7993      	ldrb	r3, [r2, #6]
 8018f3c:	430b      	orrs	r3, r1
 8018f3e:	005b      	lsls	r3, r3, #1
 8018f40:	2105      	movs	r1, #5
 8018f42:	fb93 f3f1 	sdiv	r3, r3, r1
 8018f46:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018f4a:	440b      	add	r3, r1
 8018f4c:	e756      	b.n	8018dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018f4e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018f52:	4283      	cmp	r3, r0
 8018f54:	d809      	bhi.n	8018f6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018f56:	f240 60df 	movw	r0, #1759	; 0x6df
 8018f5a:	4283      	cmp	r3, r0
 8018f5c:	f4bf af7d 	bcs.w	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f60:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8018f64:	2b05      	cmp	r3, #5
 8018f66:	d8d4      	bhi.n	8018f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018f68:	e777      	b.n	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f6a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018f6e:	4283      	cmp	r3, r0
 8018f70:	d09a      	beq.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f72:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018f76:	4283      	cmp	r3, r0
 8018f78:	e7ca      	b.n	8018f10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018f7a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018f7e:	d22b      	bcs.n	8018fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018f80:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018f84:	4283      	cmp	r3, r0
 8018f86:	d28f      	bcs.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f88:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018f8c:	4283      	cmp	r3, r0
 8018f8e:	d816      	bhi.n	8018fbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018f90:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018f94:	4283      	cmp	r3, r0
 8018f96:	f4bf af60 	bcs.w	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f9a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018f9e:	4283      	cmp	r3, r0
 8018fa0:	d80a      	bhi.n	8018fb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018fa2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018fa6:	4283      	cmp	r3, r0
 8018fa8:	f4bf af57 	bcs.w	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fac:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018fb0:	4283      	cmp	r3, r0
 8018fb2:	f43f af79 	beq.w	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fb6:	e7ac      	b.n	8018f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018fb8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018fbc:	e7f8      	b.n	8018fb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018fbe:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018fc2:	4283      	cmp	r3, r0
 8018fc4:	d802      	bhi.n	8018fcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018fc6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018fca:	e798      	b.n	8018efe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018fcc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018fd0:	4283      	cmp	r3, r0
 8018fd2:	f47f af42 	bne.w	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fd6:	e767      	b.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fd8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018fdc:	4283      	cmp	r3, r0
 8018fde:	f43f af63 	beq.w	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fe2:	d802      	bhi.n	8018fea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018fe4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018fe8:	e7f2      	b.n	8018fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018fea:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018fee:	4283      	cmp	r3, r0
 8018ff0:	d805      	bhi.n	8018ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018ff2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018ff6:	4283      	cmp	r3, r0
 8018ff8:	f4ff af2f 	bcc.w	8018e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ffc:	e754      	b.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ffe:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8019002:	4283      	cmp	r3, r0
 8019004:	e7af      	b.n	8018f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8019006:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801900a:	4617      	mov	r7, r2
 801900c:	f102 0808 	add.w	r8, r2, #8
 8019010:	4666      	mov	r6, ip
 8019012:	6838      	ldr	r0, [r7, #0]
 8019014:	6879      	ldr	r1, [r7, #4]
 8019016:	46e6      	mov	lr, ip
 8019018:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801901c:	3708      	adds	r7, #8
 801901e:	4547      	cmp	r7, r8
 8019020:	46f4      	mov	ip, lr
 8019022:	d1f6      	bne.n	8019012 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8019024:	6838      	ldr	r0, [r7, #0]
 8019026:	f8ce 0000 	str.w	r0, [lr]
 801902a:	88b9      	ldrh	r1, [r7, #4]
 801902c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019030:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8019034:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019038:	d009      	beq.n	801904e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801903a:	7b51      	ldrb	r1, [r2, #13]
 801903c:	7992      	ldrb	r2, [r2, #6]
 801903e:	0149      	lsls	r1, r1, #5
 8019040:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019044:	4311      	orrs	r1, r2
 8019046:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801904a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801904e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019052:	b2ad      	uxth	r5, r5
 8019054:	d00d      	beq.n	8019072 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8019056:	442b      	add	r3, r5
 8019058:	b29b      	uxth	r3, r3
 801905a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801905e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019062:	10db      	asrs	r3, r3, #3
 8019064:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019068:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801906c:	4313      	orrs	r3, r2
 801906e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019072:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8019076:	00cb      	lsls	r3, r1, #3
 8019078:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801907c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019080:	064f      	lsls	r7, r1, #25
 8019082:	ea43 0302 	orr.w	r3, r3, r2
 8019086:	bf44      	itt	mi
 8019088:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801908c:	b21b      	sxthmi	r3, r3
 801908e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019092:	1b5b      	subs	r3, r3, r5
 8019094:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019098:	4632      	mov	r2, r6
 801909a:	e6fa      	b.n	8018e92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801909c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80190a0:	4617      	mov	r7, r2
 80190a2:	f102 0908 	add.w	r9, r2, #8
 80190a6:	4666      	mov	r6, ip
 80190a8:	6838      	ldr	r0, [r7, #0]
 80190aa:	6879      	ldr	r1, [r7, #4]
 80190ac:	46e0      	mov	r8, ip
 80190ae:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80190b2:	3708      	adds	r7, #8
 80190b4:	454f      	cmp	r7, r9
 80190b6:	46c4      	mov	ip, r8
 80190b8:	d1f6      	bne.n	80190a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80190ba:	6838      	ldr	r0, [r7, #0]
 80190bc:	f8c8 0000 	str.w	r0, [r8]
 80190c0:	88b9      	ldrh	r1, [r7, #4]
 80190c2:	f8a8 1004 	strh.w	r1, [r8, #4]
 80190c6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80190ca:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80190ce:	d009      	beq.n	80190e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80190d0:	7b51      	ldrb	r1, [r2, #13]
 80190d2:	7992      	ldrb	r2, [r2, #6]
 80190d4:	0149      	lsls	r1, r1, #5
 80190d6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80190da:	4311      	orrs	r1, r2
 80190dc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80190e0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80190e4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80190e8:	d00e      	beq.n	8019108 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80190ea:	eba3 030e 	sub.w	r3, r3, lr
 80190ee:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80190f2:	b29b      	uxth	r3, r3
 80190f4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80190f8:	10db      	asrs	r3, r3, #3
 80190fa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80190fe:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019102:	4313      	orrs	r3, r2
 8019104:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019108:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801910c:	00cb      	lsls	r3, r1, #3
 801910e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019112:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019116:	0648      	lsls	r0, r1, #25
 8019118:	ea43 0302 	orr.w	r3, r3, r2
 801911c:	bf44      	itt	mi
 801911e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019122:	b21b      	sxthmi	r3, r3
 8019124:	1b5d      	subs	r5, r3, r5
 8019126:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801912a:	e7b5      	b.n	8019098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801912c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801912c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019130:	461e      	mov	r6, r3
 8019132:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019134:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019138:	4604      	mov	r4, r0
 801913a:	4617      	mov	r7, r2
 801913c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019140:	f7ef fbda 	bl	80088f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019144:	4605      	mov	r5, r0
 8019146:	b918      	cbnz	r0, 8019150 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8019148:	6030      	str	r0, [r6, #0]
 801914a:	4628      	mov	r0, r5
 801914c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019150:	683b      	ldr	r3, [r7, #0]
 8019152:	4601      	mov	r1, r0
 8019154:	68db      	ldr	r3, [r3, #12]
 8019156:	4638      	mov	r0, r7
 8019158:	4798      	blx	r3
 801915a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801915e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8019162:	4602      	mov	r2, r0
 8019164:	6030      	str	r0, [r6, #0]
 8019166:	d213      	bcs.n	8019190 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8019168:	4643      	mov	r3, r8
 801916a:	4639      	mov	r1, r7
 801916c:	4620      	mov	r0, r4
 801916e:	f7ff fe3b 	bl	8018de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019172:	6030      	str	r0, [r6, #0]
 8019174:	6833      	ldr	r3, [r6, #0]
 8019176:	b143      	cbz	r3, 801918a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8019178:	7b5a      	ldrb	r2, [r3, #13]
 801917a:	7a9b      	ldrb	r3, [r3, #10]
 801917c:	0052      	lsls	r2, r2, #1
 801917e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8019182:	4313      	orrs	r3, r2
 8019184:	bf0c      	ite	eq
 8019186:	2301      	moveq	r3, #1
 8019188:	2300      	movne	r3, #0
 801918a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801918e:	e7dc      	b.n	801914a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019190:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019194:	b29b      	uxth	r3, r3
 8019196:	2b7f      	cmp	r3, #127	; 0x7f
 8019198:	d804      	bhi.n	80191a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801919a:	4639      	mov	r1, r7
 801919c:	4620      	mov	r0, r4
 801919e:	f7ff fd17 	bl	8018bd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80191a2:	e7e6      	b.n	8019172 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80191a4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80191a8:	2b00      	cmp	r3, #0
 80191aa:	d0e3      	beq.n	8019174 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80191ac:	f640 1302 	movw	r3, #2306	; 0x902
 80191b0:	429d      	cmp	r5, r3
 80191b2:	d1df      	bne.n	8019174 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80191b4:	4601      	mov	r1, r0
 80191b6:	4620      	mov	r0, r4
 80191b8:	f7ff fcdb 	bl	8018b72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80191bc:	e7d9      	b.n	8019172 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080191be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80191be:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80191c2:	461e      	mov	r6, r3
 80191c4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80191c6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80191ca:	4604      	mov	r4, r0
 80191cc:	4617      	mov	r7, r2
 80191ce:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80191d2:	f7ef fb91 	bl	80088f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80191d6:	4605      	mov	r5, r0
 80191d8:	b918      	cbnz	r0, 80191e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80191da:	6030      	str	r0, [r6, #0]
 80191dc:	4628      	mov	r0, r5
 80191de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80191e2:	683b      	ldr	r3, [r7, #0]
 80191e4:	4601      	mov	r1, r0
 80191e6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80191ea:	4638      	mov	r0, r7
 80191ec:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80191f0:	47c8      	blx	r9
 80191f2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80191f6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80191fa:	4602      	mov	r2, r0
 80191fc:	6030      	str	r0, [r6, #0]
 80191fe:	d213      	bcs.n	8019228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8019200:	4643      	mov	r3, r8
 8019202:	4639      	mov	r1, r7
 8019204:	4620      	mov	r0, r4
 8019206:	f7ff fdef 	bl	8018de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801920a:	6030      	str	r0, [r6, #0]
 801920c:	6833      	ldr	r3, [r6, #0]
 801920e:	b143      	cbz	r3, 8019222 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8019210:	7b5a      	ldrb	r2, [r3, #13]
 8019212:	7a9b      	ldrb	r3, [r3, #10]
 8019214:	0052      	lsls	r2, r2, #1
 8019216:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801921a:	4313      	orrs	r3, r2
 801921c:	bf0c      	ite	eq
 801921e:	2301      	moveq	r3, #1
 8019220:	2300      	movne	r3, #0
 8019222:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8019226:	e7d9      	b.n	80191dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8019228:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801922c:	b29b      	uxth	r3, r3
 801922e:	2b7f      	cmp	r3, #127	; 0x7f
 8019230:	d804      	bhi.n	801923c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8019232:	4639      	mov	r1, r7
 8019234:	4620      	mov	r0, r4
 8019236:	f7ff fccb 	bl	8018bd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801923a:	e7e6      	b.n	801920a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801923c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019240:	2b00      	cmp	r3, #0
 8019242:	d0e3      	beq.n	801920c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019244:	f640 1302 	movw	r3, #2306	; 0x902
 8019248:	429d      	cmp	r5, r3
 801924a:	d1df      	bne.n	801920c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801924c:	4601      	mov	r1, r0
 801924e:	4620      	mov	r0, r4
 8019250:	f7ff fc8f 	bl	8018b72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019254:	e7d9      	b.n	801920a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08019256 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8019256:	b510      	push	{r4, lr}
 8019258:	4604      	mov	r4, r0
 801925a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801925e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019260:	b1f1      	cbz	r1, 80192a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019262:	2b0a      	cmp	r3, #10
 8019264:	d02f      	beq.n	80192c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019266:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8019268:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801926c:	3901      	subs	r1, #1
 801926e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8019270:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8019274:	1c51      	adds	r1, r2, #1
 8019276:	b289      	uxth	r1, r1
 8019278:	2901      	cmp	r1, #1
 801927a:	bf84      	itt	hi
 801927c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8019280:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8019282:	f103 0201 	add.w	r2, r3, #1
 8019286:	8722      	strh	r2, [r4, #56]	; 0x38
 8019288:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801928a:	bf98      	it	ls
 801928c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801928e:	4413      	add	r3, r2
 8019290:	b29b      	uxth	r3, r3
 8019292:	2b09      	cmp	r3, #9
 8019294:	bf88      	it	hi
 8019296:	3b0a      	subhi	r3, #10
 8019298:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801929c:	8458      	strh	r0, [r3, #34]	; 0x22
 801929e:	e7dc      	b.n	801925a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80192a0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80192a2:	2b0a      	cmp	r3, #10
 80192a4:	d00f      	beq.n	80192c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80192a6:	4620      	mov	r0, r4
 80192a8:	f7ff fc11 	bl	8018ace <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80192ac:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80192ae:	1c5a      	adds	r2, r3, #1
 80192b0:	8722      	strh	r2, [r4, #56]	; 0x38
 80192b2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80192b4:	4413      	add	r3, r2
 80192b6:	b29b      	uxth	r3, r3
 80192b8:	2b09      	cmp	r3, #9
 80192ba:	bf88      	it	hi
 80192bc:	3b0a      	subhi	r3, #10
 80192be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80192c2:	8458      	strh	r0, [r3, #34]	; 0x22
 80192c4:	e7ec      	b.n	80192a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80192c6:	bd10      	pop	{r4, pc}

080192c8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80192c8:	b538      	push	{r3, r4, r5, lr}
 80192ca:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80192cc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80192d0:	4604      	mov	r4, r0
 80192d2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80192d4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80192d6:	3a01      	subs	r2, #1
 80192d8:	8702      	strh	r2, [r0, #56]	; 0x38
 80192da:	1c5a      	adds	r2, r3, #1
 80192dc:	b292      	uxth	r2, r2
 80192de:	2a09      	cmp	r2, #9
 80192e0:	bf86      	itte	hi
 80192e2:	3b09      	subhi	r3, #9
 80192e4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80192e6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80192e8:	f7ff ffb5 	bl	8019256 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80192ec:	8c23      	ldrh	r3, [r4, #32]
 80192ee:	2b01      	cmp	r3, #1
 80192f0:	bf9c      	itt	ls
 80192f2:	3301      	addls	r3, #1
 80192f4:	8423      	strhls	r3, [r4, #32]
 80192f6:	8be3      	ldrh	r3, [r4, #30]
 80192f8:	b90b      	cbnz	r3, 80192fe <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80192fa:	2302      	movs	r3, #2
 80192fc:	83e3      	strh	r3, [r4, #30]
 80192fe:	8be3      	ldrh	r3, [r4, #30]
 8019300:	3b01      	subs	r3, #1
 8019302:	b29b      	uxth	r3, r3
 8019304:	83e3      	strh	r3, [r4, #30]
 8019306:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801930a:	4628      	mov	r0, r5
 801930c:	8365      	strh	r5, [r4, #26]
 801930e:	bd38      	pop	{r3, r4, r5, pc}

08019310 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8019310:	428a      	cmp	r2, r1
 8019312:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019316:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8019318:	d931      	bls.n	801937e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801931a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801931c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8019320:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8019324:	19ee      	adds	r6, r5, r7
 8019326:	1a54      	subs	r4, r2, r1
 8019328:	3e01      	subs	r6, #1
 801932a:	fa1f fe84 	uxth.w	lr, r4
 801932e:	b2b4      	uxth	r4, r6
 8019330:	eba4 090e 	sub.w	r9, r4, lr
 8019334:	fa1f f989 	uxth.w	r9, r9
 8019338:	2c09      	cmp	r4, #9
 801933a:	4626      	mov	r6, r4
 801933c:	bf88      	it	hi
 801933e:	f1a4 060a 	subhi.w	r6, r4, #10
 8019342:	f1bc 0f00 	cmp.w	ip, #0
 8019346:	bf08      	it	eq
 8019348:	f04f 0c02 	moveq.w	ip, #2
 801934c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019350:	f10c 3cff 	add.w	ip, ip, #4294967295
 8019354:	fa1f fc8c 	uxth.w	ip, ip
 8019358:	3c01      	subs	r4, #1
 801935a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801935e:	b2a4      	uxth	r4, r4
 8019360:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8019364:	454c      	cmp	r4, r9
 8019366:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801936a:	d1e5      	bne.n	8019338 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801936c:	eba5 050e 	sub.w	r5, r5, lr
 8019370:	eb0e 0408 	add.w	r4, lr, r8
 8019374:	8705      	strh	r5, [r0, #56]	; 0x38
 8019376:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801937a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801937e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8019380:	1a64      	subs	r4, r4, r1
 8019382:	4439      	add	r1, r7
 8019384:	b289      	uxth	r1, r1
 8019386:	2909      	cmp	r1, #9
 8019388:	bf88      	it	hi
 801938a:	390a      	subhi	r1, #10
 801938c:	8704      	strh	r4, [r0, #56]	; 0x38
 801938e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019390:	250a      	movs	r5, #10
 8019392:	b18a      	cbz	r2, 80193b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8019394:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8019396:	3a01      	subs	r2, #1
 8019398:	b292      	uxth	r2, r2
 801939a:	3101      	adds	r1, #1
 801939c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80193a0:	8701      	strh	r1, [r0, #56]	; 0x38
 80193a2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80193a4:	b901      	cbnz	r1, 80193a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80193a6:	86c5      	strh	r5, [r0, #54]	; 0x36
 80193a8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80193aa:	3901      	subs	r1, #1
 80193ac:	b289      	uxth	r1, r1
 80193ae:	86c1      	strh	r1, [r0, #54]	; 0x36
 80193b0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80193b4:	844c      	strh	r4, [r1, #34]	; 0x22
 80193b6:	e7ec      	b.n	8019392 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80193b8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80193bc:	f7ff bf4b 	b.w	8019256 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080193c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80193c0:	b570      	push	{r4, r5, r6, lr}
 80193c2:	2500      	movs	r5, #0
 80193c4:	4295      	cmp	r5, r2
 80193c6:	d011      	beq.n	80193ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80193c8:	8bc4      	ldrh	r4, [r0, #30]
 80193ca:	f831 6b02 	ldrh.w	r6, [r1], #2
 80193ce:	4414      	add	r4, r2
 80193d0:	3c01      	subs	r4, #1
 80193d2:	1b64      	subs	r4, r4, r5
 80193d4:	b2a4      	uxth	r4, r4
 80193d6:	2c01      	cmp	r4, #1
 80193d8:	bf88      	it	hi
 80193da:	3c02      	subhi	r4, #2
 80193dc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80193e0:	8b64      	ldrh	r4, [r4, #26]
 80193e2:	42b4      	cmp	r4, r6
 80193e4:	d117      	bne.n	8019416 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80193e6:	3501      	adds	r5, #1
 80193e8:	b2ad      	uxth	r5, r5
 80193ea:	e7eb      	b.n	80193c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80193ec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80193f0:	2400      	movs	r4, #0
 80193f2:	4413      	add	r3, r2
 80193f4:	b2a2      	uxth	r2, r4
 80193f6:	429a      	cmp	r2, r3
 80193f8:	da0f      	bge.n	801941a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80193fa:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80193fc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8019400:	4432      	add	r2, r6
 8019402:	b292      	uxth	r2, r2
 8019404:	2a09      	cmp	r2, #9
 8019406:	bf88      	it	hi
 8019408:	3a0a      	subhi	r2, #10
 801940a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801940e:	3401      	adds	r4, #1
 8019410:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8019412:	42aa      	cmp	r2, r5
 8019414:	d0ee      	beq.n	80193f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8019416:	2000      	movs	r0, #0
 8019418:	bd70      	pop	{r4, r5, r6, pc}
 801941a:	2001      	movs	r0, #1
 801941c:	e7fc      	b.n	8019418 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801941e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801941e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019422:	4605      	mov	r5, r0
 8019424:	4616      	mov	r6, r2
 8019426:	1c8c      	adds	r4, r1, #2
 8019428:	8809      	ldrh	r1, [r1, #0]
 801942a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801942e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019432:	42b3      	cmp	r3, r6
 8019434:	d124      	bne.n	8019480 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8019436:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801943a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801943e:	f001 070f 	and.w	r7, r1, #15
 8019442:	f8cd 8000 	str.w	r8, [sp]
 8019446:	464b      	mov	r3, r9
 8019448:	4652      	mov	r2, sl
 801944a:	4621      	mov	r1, r4
 801944c:	4628      	mov	r0, r5
 801944e:	f7ff ffb7 	bl	80193c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019452:	4683      	mov	fp, r0
 8019454:	b168      	cbz	r0, 8019472 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8019456:	eb0a 0109 	add.w	r1, sl, r9
 801945a:	4441      	add	r1, r8
 801945c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019460:	463a      	mov	r2, r7
 8019462:	4649      	mov	r1, r9
 8019464:	4628      	mov	r0, r5
 8019466:	f7ff ff53 	bl	8019310 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801946a:	4658      	mov	r0, fp
 801946c:	b003      	add	sp, #12
 801946e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019472:	eb07 010a 	add.w	r1, r7, sl
 8019476:	4449      	add	r1, r9
 8019478:	4441      	add	r1, r8
 801947a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801947e:	e7d2      	b.n	8019426 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8019480:	f04f 0b00 	mov.w	fp, #0
 8019484:	e7f1      	b.n	801946a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08019486 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8019486:	b570      	push	{r4, r5, r6, lr}
 8019488:	8810      	ldrh	r0, [r2, #0]
 801948a:	4298      	cmp	r0, r3
 801948c:	d817      	bhi.n	80194be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801948e:	1e48      	subs	r0, r1, #1
 8019490:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019494:	4298      	cmp	r0, r3
 8019496:	d312      	bcc.n	80194be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019498:	2400      	movs	r4, #0
 801949a:	428c      	cmp	r4, r1
 801949c:	d20f      	bcs.n	80194be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801949e:	1860      	adds	r0, r4, r1
 80194a0:	1040      	asrs	r0, r0, #1
 80194a2:	0085      	lsls	r5, r0, #2
 80194a4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80194a8:	42b3      	cmp	r3, r6
 80194aa:	d902      	bls.n	80194b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80194ac:	3001      	adds	r0, #1
 80194ae:	b284      	uxth	r4, r0
 80194b0:	e7f3      	b.n	801949a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80194b2:	d201      	bcs.n	80194b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80194b4:	b281      	uxth	r1, r0
 80194b6:	e7f0      	b.n	801949a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80194b8:	442a      	add	r2, r5
 80194ba:	8850      	ldrh	r0, [r2, #2]
 80194bc:	bd70      	pop	{r4, r5, r6, pc}
 80194be:	2000      	movs	r0, #0
 80194c0:	e7fc      	b.n	80194bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080194c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80194c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80194c6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80194c8:	886f      	ldrh	r7, [r5, #2]
 80194ca:	4604      	mov	r4, r0
 80194cc:	087f      	lsrs	r7, r7, #1
 80194ce:	260b      	movs	r6, #11
 80194d0:	3e01      	subs	r6, #1
 80194d2:	d013      	beq.n	80194fc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80194d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80194d6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80194da:	462a      	mov	r2, r5
 80194dc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80194e0:	4639      	mov	r1, r7
 80194e2:	4643      	mov	r3, r8
 80194e4:	4620      	mov	r0, r4
 80194e6:	f7ff ffce 	bl	8019486 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80194ea:	b138      	cbz	r0, 80194fc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80194ec:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80194f0:	4642      	mov	r2, r8
 80194f2:	4620      	mov	r0, r4
 80194f4:	f7ff ff93 	bl	801941e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80194f8:	2800      	cmp	r0, #0
 80194fa:	d1e9      	bne.n	80194d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80194fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019500 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8019500:	b570      	push	{r4, r5, r6, lr}
 8019502:	694a      	ldr	r2, [r1, #20]
 8019504:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8019506:	684b      	ldr	r3, [r1, #4]
 8019508:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801950a:	1b54      	subs	r4, r2, r5
 801950c:	f000 8106 	beq.w	801971c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019510:	1b9b      	subs	r3, r3, r6
 8019512:	d003      	beq.n	801951c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019514:	4363      	muls	r3, r4
 8019516:	2210      	movs	r2, #16
 8019518:	fb93 f3f2 	sdiv	r3, r3, r2
 801951c:	680c      	ldr	r4, [r1, #0]
 801951e:	698a      	ldr	r2, [r1, #24]
 8019520:	1b65      	subs	r5, r4, r5
 8019522:	f000 80fd 	beq.w	8019720 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019526:	1b92      	subs	r2, r2, r6
 8019528:	d003      	beq.n	8019532 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801952a:	436a      	muls	r2, r5
 801952c:	2410      	movs	r4, #16
 801952e:	fb92 f2f4 	sdiv	r2, r2, r4
 8019532:	1a9b      	subs	r3, r3, r2
 8019534:	ee07 3a90 	vmov	s15, r3
 8019538:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801975c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801953c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019540:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019544:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019548:	460a      	mov	r2, r1
 801954a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801954e:	4603      	mov	r3, r0
 8019550:	f100 040c 	add.w	r4, r0, #12
 8019554:	eeb1 6a43 	vneg.f32	s12, s6
 8019558:	edd2 7a02 	vldr	s15, [r2, #8]
 801955c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019560:	3214      	adds	r2, #20
 8019562:	ece3 6a01 	vstmia	r3!, {s13}
 8019566:	ed52 7a02 	vldr	s15, [r2, #-8]
 801956a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801956e:	429c      	cmp	r4, r3
 8019570:	edc3 7a02 	vstr	s15, [r3, #8]
 8019574:	ed52 7a01 	vldr	s15, [r2, #-4]
 8019578:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801957c:	edc3 7a05 	vstr	s15, [r3, #20]
 8019580:	d1ea      	bne.n	8019558 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8019582:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019584:	698b      	ldr	r3, [r1, #24]
 8019586:	edd0 4a02 	vldr	s9, [r0, #8]
 801958a:	edd0 3a00 	vldr	s7, [r0]
 801958e:	edd0 6a01 	vldr	s13, [r0, #4]
 8019592:	ed90 5a05 	vldr	s10, [r0, #20]
 8019596:	ed90 2a03 	vldr	s4, [r0, #12]
 801959a:	edd0 5a04 	vldr	s11, [r0, #16]
 801959e:	ed90 1a07 	vldr	s2, [r0, #28]
 80195a2:	edd0 2a06 	vldr	s5, [r0, #24]
 80195a6:	1a9b      	subs	r3, r3, r2
 80195a8:	ee07 3a90 	vmov	s15, r3
 80195ac:	684b      	ldr	r3, [r1, #4]
 80195ae:	1a9b      	subs	r3, r3, r2
 80195b0:	ee07 3a10 	vmov	s14, r3
 80195b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80195b8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80195bc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80195c0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80195c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195c8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80195cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195d0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80195d4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80195d8:	ee32 5a45 	vsub.f32	s10, s4, s10
 80195dc:	ee67 7a83 	vmul.f32	s15, s15, s6
 80195e0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80195e4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80195e6:	694a      	ldr	r2, [r1, #20]
 80195e8:	1b13      	subs	r3, r2, r4
 80195ea:	ee07 3a10 	vmov	s14, r3
 80195ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195f2:	680b      	ldr	r3, [r1, #0]
 80195f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195f8:	1b1b      	subs	r3, r3, r4
 80195fa:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80195fe:	ee07 3a10 	vmov	s14, r3
 8019602:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019606:	ee27 7a04 	vmul.f32	s14, s14, s8
 801960a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801960e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019612:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8019616:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019618:	698b      	ldr	r3, [r1, #24]
 801961a:	1a9b      	subs	r3, r3, r2
 801961c:	ee06 3a90 	vmov	s13, r3
 8019620:	684b      	ldr	r3, [r1, #4]
 8019622:	1a9b      	subs	r3, r3, r2
 8019624:	ee07 3a10 	vmov	s14, r3
 8019628:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801962c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019630:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019634:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019638:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801963c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019640:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019644:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019648:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801964a:	694a      	ldr	r2, [r1, #20]
 801964c:	1b13      	subs	r3, r2, r4
 801964e:	ee07 3a10 	vmov	s14, r3
 8019652:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019656:	680b      	ldr	r3, [r1, #0]
 8019658:	ee27 7a04 	vmul.f32	s14, s14, s8
 801965c:	1b1b      	subs	r3, r3, r4
 801965e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019662:	ee07 3a10 	vmov	s14, r3
 8019666:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801966a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801966e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019672:	edd0 5a08 	vldr	s11, [r0, #32]
 8019676:	ee25 5a06 	vmul.f32	s10, s10, s12
 801967a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801967e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8019682:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019684:	698b      	ldr	r3, [r1, #24]
 8019686:	1a9b      	subs	r3, r3, r2
 8019688:	ee07 3a10 	vmov	s14, r3
 801968c:	684b      	ldr	r3, [r1, #4]
 801968e:	1a9b      	subs	r3, r3, r2
 8019690:	ee01 3a90 	vmov	s3, r3
 8019694:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019698:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801969c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80196a0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80196a4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80196a8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80196ac:	eea1 7a21 	vfma.f32	s14, s2, s3
 80196b0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80196b4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80196b8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80196ba:	694a      	ldr	r2, [r1, #20]
 80196bc:	1b13      	subs	r3, r2, r4
 80196be:	ee03 3a10 	vmov	s6, r3
 80196c2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80196c6:	680b      	ldr	r3, [r1, #0]
 80196c8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80196cc:	1b1b      	subs	r3, r3, r4
 80196ce:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80196d2:	ee03 3a10 	vmov	s6, r3
 80196d6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80196da:	ee23 4a04 	vmul.f32	s8, s6, s8
 80196de:	eee1 5a04 	vfma.f32	s11, s2, s8
 80196e2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80196e6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80196ea:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80196ee:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80196f2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80196f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196fa:	dd13      	ble.n	8019724 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80196fc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019700:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019704:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019706:	eee3 7a87 	vfma.f32	s15, s7, s14
 801970a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801970e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019712:	dd15      	ble.n	8019740 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019714:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019718:	6403      	str	r3, [r0, #64]	; 0x40
 801971a:	bd70      	pop	{r4, r5, r6, pc}
 801971c:	4623      	mov	r3, r4
 801971e:	e6fd      	b.n	801951c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019720:	462a      	mov	r2, r5
 8019722:	e706      	b.n	8019532 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019724:	d502      	bpl.n	801972c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019726:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801972a:	e7e9      	b.n	8019700 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801972c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019730:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019734:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801973c:	dade      	bge.n	80196fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801973e:	e7f2      	b.n	8019726 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019740:	d502      	bpl.n	8019748 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019742:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019746:	e7e7      	b.n	8019718 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019748:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801974c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019750:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019758:	dadc      	bge.n	8019714 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801975a:	e7f2      	b.n	8019742 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801975c:	3d800000 	.word	0x3d800000

08019760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019764:	2714      	movs	r7, #20
 8019766:	435f      	muls	r7, r3
 8019768:	eb02 0c07 	add.w	ip, r2, r7
 801976c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019770:	f115 0e0f 	adds.w	lr, r5, #15
 8019774:	f100 80a2 	bmi.w	80198bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019778:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801977c:	9c08      	ldr	r4, [sp, #32]
 801977e:	f8c0 e014 	str.w	lr, [r0, #20]
 8019782:	2614      	movs	r6, #20
 8019784:	4366      	muls	r6, r4
 8019786:	eb02 0806 	add.w	r8, r2, r6
 801978a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801978e:	f115 040f 	adds.w	r4, r5, #15
 8019792:	f100 809f 	bmi.w	80198d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019796:	1124      	asrs	r4, r4, #4
 8019798:	eba4 040e 	sub.w	r4, r4, lr
 801979c:	6184      	str	r4, [r0, #24]
 801979e:	2c00      	cmp	r4, #0
 80197a0:	f000 808a 	beq.w	80198b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80197a4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80197a8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80197ac:	5995      	ldr	r5, [r2, r6]
 80197ae:	eba4 0809 	sub.w	r8, r4, r9
 80197b2:	59d4      	ldr	r4, [r2, r7]
 80197b4:	eba5 0a04 	sub.w	sl, r5, r4
 80197b8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80197bc:	fb0e fe05 	mul.w	lr, lr, r5
 80197c0:	fb0a ee19 	mls	lr, sl, r9, lr
 80197c4:	fb08 e404 	mla	r4, r8, r4, lr
 80197c8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80197cc:	3c01      	subs	r4, #1
 80197ce:	19a4      	adds	r4, r4, r6
 80197d0:	f100 808c 	bmi.w	80198ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80197d4:	fb94 fef6 	sdiv	lr, r4, r6
 80197d8:	f8c0 e000 	str.w	lr, [r0]
 80197dc:	fb06 441e 	mls	r4, r6, lr, r4
 80197e0:	6104      	str	r4, [r0, #16]
 80197e2:	2d00      	cmp	r5, #0
 80197e4:	f2c0 8095 	blt.w	8019912 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80197e8:	fb95 f4f6 	sdiv	r4, r5, r6
 80197ec:	6044      	str	r4, [r0, #4]
 80197ee:	fb06 5514 	mls	r5, r6, r4, r5
 80197f2:	6085      	str	r5, [r0, #8]
 80197f4:	60c6      	str	r6, [r0, #12]
 80197f6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80197fa:	6945      	ldr	r5, [r0, #20]
 80197fc:	59d2      	ldr	r2, [r2, r7]
 80197fe:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019802:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019806:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801980a:	ee07 4a10 	vmov	s14, r4
 801980e:	6804      	ldr	r4, [r0, #0]
 8019810:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019814:	ee07 2a90 	vmov	s15, r2
 8019818:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801981c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019820:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019824:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019828:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801982c:	edd3 6a00 	vldr	s13, [r3]
 8019830:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019834:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019838:	eee6 6a27 	vfma.f32	s13, s12, s15
 801983c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019840:	edd0 6a01 	vldr	s13, [r0, #4]
 8019844:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019848:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801984c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019850:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019854:	ed80 6a08 	vstr	s12, [r0, #32]
 8019858:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801985a:	6242      	str	r2, [r0, #36]	; 0x24
 801985c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019860:	ed93 6a03 	vldr	s12, [r3, #12]
 8019864:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019868:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801986c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019870:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019874:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019878:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801987c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019880:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019884:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019886:	6302      	str	r2, [r0, #48]	; 0x30
 8019888:	ed93 6a06 	vldr	s12, [r3, #24]
 801988c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019890:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019894:	eeb0 7a46 	vmov.f32	s14, s12
 8019898:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801989c:	eea6 7a27 	vfma.f32	s14, s12, s15
 80198a0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80198a4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80198a8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80198ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 80198b0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80198b4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80198b6:	63c3      	str	r3, [r0, #60]	; 0x3c
 80198b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80198bc:	f1c5 0501 	rsb	r5, r5, #1
 80198c0:	f015 050f 	ands.w	r5, r5, #15
 80198c4:	bf18      	it	ne
 80198c6:	2501      	movne	r5, #1
 80198c8:	2410      	movs	r4, #16
 80198ca:	fb9e fef4 	sdiv	lr, lr, r4
 80198ce:	ebae 0e05 	sub.w	lr, lr, r5
 80198d2:	e753      	b.n	801977c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80198d4:	f1c5 0501 	rsb	r5, r5, #1
 80198d8:	f015 050f 	ands.w	r5, r5, #15
 80198dc:	bf18      	it	ne
 80198de:	2501      	movne	r5, #1
 80198e0:	f04f 0910 	mov.w	r9, #16
 80198e4:	fb94 f4f9 	sdiv	r4, r4, r9
 80198e8:	1b64      	subs	r4, r4, r5
 80198ea:	e755      	b.n	8019798 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80198ec:	4264      	negs	r4, r4
 80198ee:	fb94 fef6 	sdiv	lr, r4, r6
 80198f2:	f1ce 0800 	rsb	r8, lr, #0
 80198f6:	fb06 441e 	mls	r4, r6, lr, r4
 80198fa:	f8c0 8000 	str.w	r8, [r0]
 80198fe:	6104      	str	r4, [r0, #16]
 8019900:	2c00      	cmp	r4, #0
 8019902:	f43f af6e 	beq.w	80197e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019906:	ea6f 0e0e 	mvn.w	lr, lr
 801990a:	f8c0 e000 	str.w	lr, [r0]
 801990e:	1b34      	subs	r4, r6, r4
 8019910:	e766      	b.n	80197e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019912:	426d      	negs	r5, r5
 8019914:	fb95 f4f6 	sdiv	r4, r5, r6
 8019918:	f1c4 0e00 	rsb	lr, r4, #0
 801991c:	fb06 5514 	mls	r5, r6, r4, r5
 8019920:	f8c0 e004 	str.w	lr, [r0, #4]
 8019924:	6085      	str	r5, [r0, #8]
 8019926:	2d00      	cmp	r5, #0
 8019928:	f43f af64 	beq.w	80197f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801992c:	43e4      	mvns	r4, r4
 801992e:	6044      	str	r4, [r0, #4]
 8019930:	1b75      	subs	r5, r6, r5
 8019932:	e75e      	b.n	80197f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019934:	3d800000 	.word	0x3d800000

08019938 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019938:	4602      	mov	r2, r0
 801993a:	b148      	cbz	r0, 8019950 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801993c:	2300      	movs	r3, #0
 801993e:	b298      	uxth	r0, r3
 8019940:	3301      	adds	r3, #1
 8019942:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019946:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801994a:	2900      	cmp	r1, #0
 801994c:	d1f7      	bne.n	801993e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801994e:	4770      	bx	lr
 8019950:	4770      	bx	lr

08019952 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019952:	b530      	push	{r4, r5, lr}
 8019954:	4604      	mov	r4, r0
 8019956:	b159      	cbz	r1, 8019970 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019958:	b148      	cbz	r0, 801996e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801995a:	2300      	movs	r3, #0
 801995c:	b298      	uxth	r0, r3
 801995e:	4282      	cmp	r2, r0
 8019960:	d905      	bls.n	801996e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019962:	5ccd      	ldrb	r5, [r1, r3]
 8019964:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019968:	3301      	adds	r3, #1
 801996a:	2d00      	cmp	r5, #0
 801996c:	d1f6      	bne.n	801995c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801996e:	bd30      	pop	{r4, r5, pc}
 8019970:	4608      	mov	r0, r1
 8019972:	e7fc      	b.n	801996e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019974 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019974:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019976:	b08b      	sub	sp, #44	; 0x2c
 8019978:	468c      	mov	ip, r1
 801997a:	2100      	movs	r1, #0
 801997c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019980:	4604      	mov	r4, r0
 8019982:	261f      	movs	r6, #31
 8019984:	af01      	add	r7, sp, #4
 8019986:	fb94 fef3 	sdiv	lr, r4, r3
 801998a:	fb03 441e 	mls	r4, r3, lr, r4
 801998e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019992:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019996:	b2ec      	uxtb	r4, r5
 8019998:	2d09      	cmp	r5, #9
 801999a:	bfd4      	ite	le
 801999c:	3430      	addle	r4, #48	; 0x30
 801999e:	3457      	addgt	r4, #87	; 0x57
 80199a0:	b2e4      	uxtb	r4, r4
 80199a2:	55bc      	strb	r4, [r7, r6]
 80199a4:	4674      	mov	r4, lr
 80199a6:	1e71      	subs	r1, r6, #1
 80199a8:	b974      	cbnz	r4, 80199c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80199aa:	2800      	cmp	r0, #0
 80199ac:	da05      	bge.n	80199ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80199ae:	ab0a      	add	r3, sp, #40	; 0x28
 80199b0:	4419      	add	r1, r3
 80199b2:	232d      	movs	r3, #45	; 0x2d
 80199b4:	f801 3c24 	strb.w	r3, [r1, #-36]
 80199b8:	1eb1      	subs	r1, r6, #2
 80199ba:	3101      	adds	r1, #1
 80199bc:	4439      	add	r1, r7
 80199be:	4660      	mov	r0, ip
 80199c0:	f7ff ffc7 	bl	8019952 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80199c4:	b00b      	add	sp, #44	; 0x2c
 80199c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80199c8:	460e      	mov	r6, r1
 80199ca:	e7dc      	b.n	8019986 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080199cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80199cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80199ce:	b08b      	sub	sp, #44	; 0x2c
 80199d0:	468c      	mov	ip, r1
 80199d2:	2100      	movs	r1, #0
 80199d4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80199d8:	ae01      	add	r6, sp, #4
 80199da:	211f      	movs	r1, #31
 80199dc:	fbb0 f7f3 	udiv	r7, r0, r3
 80199e0:	fb03 0517 	mls	r5, r3, r7, r0
 80199e4:	b2ec      	uxtb	r4, r5
 80199e6:	2d09      	cmp	r5, #9
 80199e8:	bfd4      	ite	le
 80199ea:	3430      	addle	r4, #48	; 0x30
 80199ec:	3457      	addgt	r4, #87	; 0x57
 80199ee:	b2e4      	uxtb	r4, r4
 80199f0:	558c      	strb	r4, [r1, r6]
 80199f2:	4638      	mov	r0, r7
 80199f4:	1e4c      	subs	r4, r1, #1
 80199f6:	b92f      	cbnz	r7, 8019a04 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80199f8:	4431      	add	r1, r6
 80199fa:	4660      	mov	r0, ip
 80199fc:	f7ff ffa9 	bl	8019952 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019a00:	b00b      	add	sp, #44	; 0x2c
 8019a02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019a04:	4621      	mov	r1, r4
 8019a06:	e7e9      	b.n	80199dc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019a08 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8019a08:	b410      	push	{r4}
 8019a0a:	b131      	cbz	r1, 8019a1a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019a0c:	1e9c      	subs	r4, r3, #2
 8019a0e:	2c22      	cmp	r4, #34	; 0x22
 8019a10:	d803      	bhi.n	8019a1a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019a12:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019a16:	f7ff bfad 	b.w	8019974 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019a1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019a1e:	4770      	bx	lr

08019a20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a24:	4691      	mov	r9, r2
 8019a26:	b085      	sub	sp, #20
 8019a28:	6802      	ldr	r2, [r0, #0]
 8019a2a:	9201      	str	r2, [sp, #4]
 8019a2c:	4688      	mov	r8, r1
 8019a2e:	4683      	mov	fp, r0
 8019a30:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019a34:	9103      	str	r1, [sp, #12]
 8019a36:	4610      	mov	r0, r2
 8019a38:	461c      	mov	r4, r3
 8019a3a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8019a3e:	9302      	str	r3, [sp, #8]
 8019a40:	f7ff ff7a 	bl	8019938 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019a44:	f1b8 0f00 	cmp.w	r8, #0
 8019a48:	bf0c      	ite	eq
 8019a4a:	4684      	moveq	ip, r0
 8019a4c:	f100 0c01 	addne.w	ip, r0, #1
 8019a50:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019a54:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019a58:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019a5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a5c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019a60:	9903      	ldr	r1, [sp, #12]
 8019a62:	fa1f fc8c 	uxth.w	ip, ip
 8019a66:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8019a6a:	d041      	beq.n	8019af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019a6c:	d834      	bhi.n	8019ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019a6e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019a72:	d059      	beq.n	8019b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019a74:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019a78:	d03a      	beq.n	8019af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019a7a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8019a7e:	d034      	beq.n	8019aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019a80:	2400      	movs	r4, #0
 8019a82:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019a86:	3a01      	subs	r2, #1
 8019a88:	b169      	cbz	r1, 8019aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019a8a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019a8c:	458c      	cmp	ip, r1
 8019a8e:	da09      	bge.n	8019aa4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019a90:	eba1 010c 	sub.w	r1, r1, ip
 8019a94:	b289      	uxth	r1, r1
 8019a96:	b933      	cbnz	r3, 8019aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019a98:	2e00      	cmp	r6, #0
 8019a9a:	d051      	beq.n	8019b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019a9c:	2800      	cmp	r0, #0
 8019a9e:	d04f      	beq.n	8019b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019aa0:	440c      	add	r4, r1
 8019aa2:	b2a4      	uxth	r4, r4
 8019aa4:	2100      	movs	r1, #0
 8019aa6:	682b      	ldr	r3, [r5, #0]
 8019aa8:	4293      	cmp	r3, r2
 8019aaa:	da07      	bge.n	8019abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019aac:	f1b8 0f00 	cmp.w	r8, #0
 8019ab0:	d004      	beq.n	8019abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019ab2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019ab6:	682b      	ldr	r3, [r5, #0]
 8019ab8:	3301      	adds	r3, #1
 8019aba:	602b      	str	r3, [r5, #0]
 8019abc:	2730      	movs	r7, #48	; 0x30
 8019abe:	2c00      	cmp	r4, #0
 8019ac0:	d04e      	beq.n	8019b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019ac2:	682e      	ldr	r6, [r5, #0]
 8019ac4:	3c01      	subs	r4, #1
 8019ac6:	42b2      	cmp	r2, r6
 8019ac8:	b2a4      	uxth	r4, r4
 8019aca:	dd49      	ble.n	8019b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019acc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019ad0:	682b      	ldr	r3, [r5, #0]
 8019ad2:	3301      	adds	r3, #1
 8019ad4:	602b      	str	r3, [r5, #0]
 8019ad6:	e7f2      	b.n	8019abe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019ad8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8019adc:	d01d      	beq.n	8019b1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019ade:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8019ae2:	d002      	beq.n	8019aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019ae4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019ae8:	e7c9      	b.n	8019a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019aea:	4684      	mov	ip, r0
 8019aec:	f04f 0800 	mov.w	r8, #0
 8019af0:	2c00      	cmp	r4, #0
 8019af2:	d0c6      	beq.n	8019a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019af4:	b947      	cbnz	r7, 8019b08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019af6:	2801      	cmp	r0, #1
 8019af8:	d106      	bne.n	8019b08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019afa:	8814      	ldrh	r4, [r2, #0]
 8019afc:	2c30      	cmp	r4, #48	; 0x30
 8019afe:	bf02      	ittt	eq
 8019b00:	3202      	addeq	r2, #2
 8019b02:	f8cb 2000 	streq.w	r2, [fp]
 8019b06:	4638      	moveq	r0, r7
 8019b08:	45bc      	cmp	ip, r7
 8019b0a:	da14      	bge.n	8019b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019b0c:	b2bf      	uxth	r7, r7
 8019b0e:	eba7 040c 	sub.w	r4, r7, ip
 8019b12:	b2a4      	uxth	r4, r4
 8019b14:	46bc      	mov	ip, r7
 8019b16:	2600      	movs	r6, #0
 8019b18:	e7b3      	b.n	8019a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b1a:	4684      	mov	ip, r0
 8019b1c:	b16c      	cbz	r4, 8019b3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019b1e:	42b8      	cmp	r0, r7
 8019b20:	dd00      	ble.n	8019b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019b22:	b2b8      	uxth	r0, r7
 8019b24:	2400      	movs	r4, #0
 8019b26:	e003      	b.n	8019b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019b28:	f04f 0c01 	mov.w	ip, #1
 8019b2c:	2400      	movs	r4, #0
 8019b2e:	4660      	mov	r0, ip
 8019b30:	4626      	mov	r6, r4
 8019b32:	46a0      	mov	r8, r4
 8019b34:	e7a5      	b.n	8019a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b36:	2400      	movs	r4, #0
 8019b38:	e7ed      	b.n	8019b16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019b3a:	4626      	mov	r6, r4
 8019b3c:	46a0      	mov	r8, r4
 8019b3e:	e7a0      	b.n	8019a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b40:	2900      	cmp	r1, #0
 8019b42:	d0b0      	beq.n	8019aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019b44:	2720      	movs	r7, #32
 8019b46:	682e      	ldr	r6, [r5, #0]
 8019b48:	2900      	cmp	r1, #0
 8019b4a:	d0ac      	beq.n	8019aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019b4c:	3901      	subs	r1, #1
 8019b4e:	4296      	cmp	r6, r2
 8019b50:	b289      	uxth	r1, r1
 8019b52:	daa7      	bge.n	8019aa4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019b54:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019b58:	682b      	ldr	r3, [r5, #0]
 8019b5a:	3301      	adds	r3, #1
 8019b5c:	602b      	str	r3, [r5, #0]
 8019b5e:	e7f2      	b.n	8019b46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019b60:	b188      	cbz	r0, 8019b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019b62:	682b      	ldr	r3, [r5, #0]
 8019b64:	3801      	subs	r0, #1
 8019b66:	429a      	cmp	r2, r3
 8019b68:	b280      	uxth	r0, r0
 8019b6a:	dd0c      	ble.n	8019b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019b6c:	f8db 3000 	ldr.w	r3, [fp]
 8019b70:	1c9c      	adds	r4, r3, #2
 8019b72:	f8cb 4000 	str.w	r4, [fp]
 8019b76:	881c      	ldrh	r4, [r3, #0]
 8019b78:	682b      	ldr	r3, [r5, #0]
 8019b7a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019b7e:	682b      	ldr	r3, [r5, #0]
 8019b80:	3301      	adds	r3, #1
 8019b82:	602b      	str	r3, [r5, #0]
 8019b84:	e7ec      	b.n	8019b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019b86:	2620      	movs	r6, #32
 8019b88:	b151      	cbz	r1, 8019ba0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019b8a:	6828      	ldr	r0, [r5, #0]
 8019b8c:	3901      	subs	r1, #1
 8019b8e:	4282      	cmp	r2, r0
 8019b90:	b289      	uxth	r1, r1
 8019b92:	dd05      	ble.n	8019ba0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019b94:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019b98:	682b      	ldr	r3, [r5, #0]
 8019b9a:	3301      	adds	r3, #1
 8019b9c:	602b      	str	r3, [r5, #0]
 8019b9e:	e7f3      	b.n	8019b88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019ba0:	b005      	add	sp, #20
 8019ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019ba6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019baa:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019bae:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019bb2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8019bb6:	2400      	movs	r4, #0
 8019bb8:	8014      	strh	r4, [r2, #0]
 8019bba:	701c      	strb	r4, [r3, #0]
 8019bbc:	f888 4000 	strb.w	r4, [r8]
 8019bc0:	f88c 4000 	strb.w	r4, [ip]
 8019bc4:	f88e 4000 	strb.w	r4, [lr]
 8019bc8:	703c      	strb	r4, [r7, #0]
 8019bca:	6804      	ldr	r4, [r0, #0]
 8019bcc:	b1a4      	cbz	r4, 8019bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019bce:	8824      	ldrh	r4, [r4, #0]
 8019bd0:	f04f 0901 	mov.w	r9, #1
 8019bd4:	b314      	cbz	r4, 8019c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019bd6:	2c2b      	cmp	r4, #43	; 0x2b
 8019bd8:	d001      	beq.n	8019bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019bda:	2c20      	cmp	r4, #32
 8019bdc:	d110      	bne.n	8019c00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019bde:	8014      	strh	r4, [r2, #0]
 8019be0:	6804      	ldr	r4, [r0, #0]
 8019be2:	b10c      	cbz	r4, 8019be8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8019be4:	3402      	adds	r4, #2
 8019be6:	6004      	str	r4, [r0, #0]
 8019be8:	680c      	ldr	r4, [r1, #0]
 8019bea:	b10c      	cbz	r4, 8019bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019bec:	3401      	adds	r4, #1
 8019bee:	600c      	str	r4, [r1, #0]
 8019bf0:	6804      	ldr	r4, [r0, #0]
 8019bf2:	b17c      	cbz	r4, 8019c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8019bf4:	8824      	ldrh	r4, [r4, #0]
 8019bf6:	e7ed      	b.n	8019bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019bf8:	680c      	ldr	r4, [r1, #0]
 8019bfa:	b17c      	cbz	r4, 8019c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019bfc:	7824      	ldrb	r4, [r4, #0]
 8019bfe:	e7e7      	b.n	8019bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019c00:	2c2d      	cmp	r4, #45	; 0x2d
 8019c02:	d102      	bne.n	8019c0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019c04:	f883 9000 	strb.w	r9, [r3]
 8019c08:	e7ea      	b.n	8019be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019c0a:	2c23      	cmp	r4, #35	; 0x23
 8019c0c:	d107      	bne.n	8019c1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019c0e:	f888 9000 	strb.w	r9, [r8]
 8019c12:	e7e5      	b.n	8019be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019c14:	680c      	ldr	r4, [r1, #0]
 8019c16:	b10c      	cbz	r4, 8019c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019c18:	7824      	ldrb	r4, [r4, #0]
 8019c1a:	e7db      	b.n	8019bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019c1c:	2400      	movs	r4, #0
 8019c1e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019c22:	2b09      	cmp	r3, #9
 8019c24:	d901      	bls.n	8019c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019c26:	2c2a      	cmp	r4, #42	; 0x2a
 8019c28:	d122      	bne.n	8019c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019c2a:	2301      	movs	r3, #1
 8019c2c:	2c30      	cmp	r4, #48	; 0x30
 8019c2e:	f88e 3000 	strb.w	r3, [lr]
 8019c32:	d10d      	bne.n	8019c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019c34:	f88c 3000 	strb.w	r3, [ip]
 8019c38:	6803      	ldr	r3, [r0, #0]
 8019c3a:	b10b      	cbz	r3, 8019c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019c3c:	3302      	adds	r3, #2
 8019c3e:	6003      	str	r3, [r0, #0]
 8019c40:	680b      	ldr	r3, [r1, #0]
 8019c42:	b10b      	cbz	r3, 8019c48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019c44:	3301      	adds	r3, #1
 8019c46:	600b      	str	r3, [r1, #0]
 8019c48:	6803      	ldr	r3, [r0, #0]
 8019c4a:	2b00      	cmp	r3, #0
 8019c4c:	d02f      	beq.n	8019cae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019c4e:	881c      	ldrh	r4, [r3, #0]
 8019c50:	2c2a      	cmp	r4, #42	; 0x2a
 8019c52:	d135      	bne.n	8019cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019c54:	f04f 33ff 	mov.w	r3, #4294967295
 8019c58:	6033      	str	r3, [r6, #0]
 8019c5a:	6803      	ldr	r3, [r0, #0]
 8019c5c:	b10b      	cbz	r3, 8019c62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019c5e:	3302      	adds	r3, #2
 8019c60:	6003      	str	r3, [r0, #0]
 8019c62:	680b      	ldr	r3, [r1, #0]
 8019c64:	b10b      	cbz	r3, 8019c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019c66:	3301      	adds	r3, #1
 8019c68:	600b      	str	r3, [r1, #0]
 8019c6a:	6803      	ldr	r3, [r0, #0]
 8019c6c:	b31b      	cbz	r3, 8019cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019c6e:	881c      	ldrh	r4, [r3, #0]
 8019c70:	2c2e      	cmp	r4, #46	; 0x2e
 8019c72:	d11a      	bne.n	8019caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019c74:	2301      	movs	r3, #1
 8019c76:	703b      	strb	r3, [r7, #0]
 8019c78:	6803      	ldr	r3, [r0, #0]
 8019c7a:	b10b      	cbz	r3, 8019c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019c7c:	3302      	adds	r3, #2
 8019c7e:	6003      	str	r3, [r0, #0]
 8019c80:	680b      	ldr	r3, [r1, #0]
 8019c82:	b10b      	cbz	r3, 8019c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019c84:	3301      	adds	r3, #1
 8019c86:	600b      	str	r3, [r1, #0]
 8019c88:	6803      	ldr	r3, [r0, #0]
 8019c8a:	2b00      	cmp	r3, #0
 8019c8c:	d036      	beq.n	8019cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019c8e:	881b      	ldrh	r3, [r3, #0]
 8019c90:	2b2a      	cmp	r3, #42	; 0x2a
 8019c92:	d137      	bne.n	8019d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019c94:	f04f 33ff 	mov.w	r3, #4294967295
 8019c98:	602b      	str	r3, [r5, #0]
 8019c9a:	6803      	ldr	r3, [r0, #0]
 8019c9c:	b10b      	cbz	r3, 8019ca2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019c9e:	3302      	adds	r3, #2
 8019ca0:	6003      	str	r3, [r0, #0]
 8019ca2:	680b      	ldr	r3, [r1, #0]
 8019ca4:	b10b      	cbz	r3, 8019caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019ca6:	3301      	adds	r3, #1
 8019ca8:	600b      	str	r3, [r1, #0]
 8019caa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019cae:	680c      	ldr	r4, [r1, #0]
 8019cb0:	b134      	cbz	r4, 8019cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019cb2:	7824      	ldrb	r4, [r4, #0]
 8019cb4:	e7cc      	b.n	8019c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019cb6:	680b      	ldr	r3, [r1, #0]
 8019cb8:	2b00      	cmp	r3, #0
 8019cba:	d0f6      	beq.n	8019caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019cbc:	781c      	ldrb	r4, [r3, #0]
 8019cbe:	e7d7      	b.n	8019c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019cc0:	2300      	movs	r3, #0
 8019cc2:	6033      	str	r3, [r6, #0]
 8019cc4:	220a      	movs	r2, #10
 8019cc6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019cca:	fa1f f38c 	uxth.w	r3, ip
 8019cce:	2b09      	cmp	r3, #9
 8019cd0:	d8ce      	bhi.n	8019c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019cd2:	6833      	ldr	r3, [r6, #0]
 8019cd4:	fb02 c303 	mla	r3, r2, r3, ip
 8019cd8:	6033      	str	r3, [r6, #0]
 8019cda:	6803      	ldr	r3, [r0, #0]
 8019cdc:	b10b      	cbz	r3, 8019ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019cde:	3302      	adds	r3, #2
 8019ce0:	6003      	str	r3, [r0, #0]
 8019ce2:	680b      	ldr	r3, [r1, #0]
 8019ce4:	b10b      	cbz	r3, 8019cea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8019ce6:	3301      	adds	r3, #1
 8019ce8:	600b      	str	r3, [r1, #0]
 8019cea:	6803      	ldr	r3, [r0, #0]
 8019cec:	b10b      	cbz	r3, 8019cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019cee:	881c      	ldrh	r4, [r3, #0]
 8019cf0:	e7e9      	b.n	8019cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019cf2:	680c      	ldr	r4, [r1, #0]
 8019cf4:	2c00      	cmp	r4, #0
 8019cf6:	d0e6      	beq.n	8019cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019cf8:	7824      	ldrb	r4, [r4, #0]
 8019cfa:	e7e4      	b.n	8019cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019cfc:	680b      	ldr	r3, [r1, #0]
 8019cfe:	b10b      	cbz	r3, 8019d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019d00:	781b      	ldrb	r3, [r3, #0]
 8019d02:	e7c5      	b.n	8019c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019d04:	2200      	movs	r2, #0
 8019d06:	602a      	str	r2, [r5, #0]
 8019d08:	240a      	movs	r4, #10
 8019d0a:	3b30      	subs	r3, #48	; 0x30
 8019d0c:	b29e      	uxth	r6, r3
 8019d0e:	2e09      	cmp	r6, #9
 8019d10:	682a      	ldr	r2, [r5, #0]
 8019d12:	d813      	bhi.n	8019d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019d14:	fb04 3302 	mla	r3, r4, r2, r3
 8019d18:	602b      	str	r3, [r5, #0]
 8019d1a:	6803      	ldr	r3, [r0, #0]
 8019d1c:	b10b      	cbz	r3, 8019d22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019d1e:	3302      	adds	r3, #2
 8019d20:	6003      	str	r3, [r0, #0]
 8019d22:	680b      	ldr	r3, [r1, #0]
 8019d24:	b10b      	cbz	r3, 8019d2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019d26:	3301      	adds	r3, #1
 8019d28:	600b      	str	r3, [r1, #0]
 8019d2a:	6803      	ldr	r3, [r0, #0]
 8019d2c:	b10b      	cbz	r3, 8019d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019d2e:	881b      	ldrh	r3, [r3, #0]
 8019d30:	e7eb      	b.n	8019d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d32:	680b      	ldr	r3, [r1, #0]
 8019d34:	2b00      	cmp	r3, #0
 8019d36:	d0e8      	beq.n	8019d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d38:	781b      	ldrb	r3, [r3, #0]
 8019d3a:	e7e6      	b.n	8019d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d3c:	2a06      	cmp	r2, #6
 8019d3e:	bfa8      	it	ge
 8019d40:	2206      	movge	r2, #6
 8019d42:	602a      	str	r2, [r5, #0]
 8019d44:	e7b1      	b.n	8019caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019d46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d4a:	b0a3      	sub	sp, #140	; 0x8c
 8019d4c:	2600      	movs	r6, #0
 8019d4e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019d52:	4607      	mov	r7, r0
 8019d54:	4688      	mov	r8, r1
 8019d56:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019d5a:	4631      	mov	r1, r6
 8019d5c:	2242      	movs	r2, #66	; 0x42
 8019d5e:	4648      	mov	r0, r9
 8019d60:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019d62:	960d      	str	r6, [sp, #52]	; 0x34
 8019d64:	f012 f881 	bl	802be6a <memset>
 8019d68:	b15f      	cbz	r7, 8019d82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019d6a:	f108 3aff 	add.w	sl, r8, #4294967295
 8019d6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019d70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d72:	b152      	cbz	r2, 8019d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019d74:	8812      	ldrh	r2, [r2, #0]
 8019d76:	b10a      	cbz	r2, 8019d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019d78:	459a      	cmp	sl, r3
 8019d7a:	dc2e      	bgt.n	8019dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019d7c:	2200      	movs	r2, #0
 8019d7e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019d82:	4638      	mov	r0, r7
 8019d84:	b023      	add	sp, #140	; 0x8c
 8019d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d8a:	9a08      	ldr	r2, [sp, #32]
 8019d8c:	2a00      	cmp	r2, #0
 8019d8e:	d0f5      	beq.n	8019d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019d90:	7812      	ldrb	r2, [r2, #0]
 8019d92:	e7f0      	b.n	8019d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019d94:	2d00      	cmp	r5, #0
 8019d96:	d0ea      	beq.n	8019d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019d98:	782a      	ldrb	r2, [r5, #0]
 8019d9a:	b142      	cbz	r2, 8019dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019d9c:	2a25      	cmp	r2, #37	; 0x25
 8019d9e:	d001      	beq.n	8019da4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019da0:	459a      	cmp	sl, r3
 8019da2:	dc08      	bgt.n	8019db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019da4:	f1bb 0f00 	cmp.w	fp, #0
 8019da8:	d121      	bne.n	8019dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019daa:	2d00      	cmp	r5, #0
 8019dac:	d0df      	beq.n	8019d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019dae:	782a      	ldrb	r2, [r5, #0]
 8019db0:	f04f 0b00 	mov.w	fp, #0
 8019db4:	e01d      	b.n	8019df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8019db6:	f1bb 0f00 	cmp.w	fp, #0
 8019dba:	d078      	beq.n	8019eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019dbc:	f8bb 2000 	ldrh.w	r2, [fp]
 8019dc0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019dc4:	f1bb 0f00 	cmp.w	fp, #0
 8019dc8:	d002      	beq.n	8019dd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019dca:	f10b 0202 	add.w	r2, fp, #2
 8019dce:	9209      	str	r2, [sp, #36]	; 0x24
 8019dd0:	b10d      	cbz	r5, 8019dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8019dd2:	3501      	adds	r5, #1
 8019dd4:	9508      	str	r5, [sp, #32]
 8019dd6:	3301      	adds	r3, #1
 8019dd8:	930d      	str	r3, [sp, #52]	; 0x34
 8019dda:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019dde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019de0:	f1bb 0f00 	cmp.w	fp, #0
 8019de4:	d0d6      	beq.n	8019d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8019de6:	f8bb 2000 	ldrh.w	r2, [fp]
 8019dea:	2a00      	cmp	r2, #0
 8019dec:	d1d6      	bne.n	8019d9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019dee:	f8bb 2000 	ldrh.w	r2, [fp]
 8019df2:	2a00      	cmp	r2, #0
 8019df4:	d0bb      	beq.n	8019d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019df6:	459a      	cmp	sl, r3
 8019df8:	ddb9      	ble.n	8019d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019dfa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019dfe:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019e02:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019e06:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8019e0a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8019e0e:	960e      	str	r6, [sp, #56]	; 0x38
 8019e10:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019e14:	960f      	str	r6, [sp, #60]	; 0x3c
 8019e16:	f1bb 0f00 	cmp.w	fp, #0
 8019e1a:	d002      	beq.n	8019e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019e1c:	f10b 0302 	add.w	r3, fp, #2
 8019e20:	9309      	str	r3, [sp, #36]	; 0x24
 8019e22:	b10d      	cbz	r5, 8019e28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019e24:	1c6b      	adds	r3, r5, #1
 8019e26:	9308      	str	r3, [sp, #32]
 8019e28:	ab0f      	add	r3, sp, #60	; 0x3c
 8019e2a:	9305      	str	r3, [sp, #20]
 8019e2c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019e30:	9304      	str	r3, [sp, #16]
 8019e32:	ab0e      	add	r3, sp, #56	; 0x38
 8019e34:	9303      	str	r3, [sp, #12]
 8019e36:	ab0c      	add	r3, sp, #48	; 0x30
 8019e38:	9302      	str	r3, [sp, #8]
 8019e3a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019e3e:	9301      	str	r3, [sp, #4]
 8019e40:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019e44:	9300      	str	r3, [sp, #0]
 8019e46:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019e4a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019e4e:	a908      	add	r1, sp, #32
 8019e50:	a809      	add	r0, sp, #36	; 0x24
 8019e52:	f7ff fea8 	bl	8019ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019e56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e58:	2b00      	cmp	r3, #0
 8019e5a:	bfbe      	ittt	lt
 8019e5c:	6823      	ldrlt	r3, [r4, #0]
 8019e5e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019e62:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019e64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e66:	bfb8      	it	lt
 8019e68:	3404      	addlt	r4, #4
 8019e6a:	2b00      	cmp	r3, #0
 8019e6c:	bfb8      	it	lt
 8019e6e:	6823      	ldrlt	r3, [r4, #0]
 8019e70:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019e74:	bfbe      	ittt	lt
 8019e76:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019e7a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019e7c:	3404      	addlt	r4, #4
 8019e7e:	b1d9      	cbz	r1, 8019eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019e80:	880b      	ldrh	r3, [r1, #0]
 8019e82:	2b69      	cmp	r3, #105	; 0x69
 8019e84:	d01f      	beq.n	8019ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019e86:	d82f      	bhi.n	8019ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019e88:	2b58      	cmp	r3, #88	; 0x58
 8019e8a:	d01c      	beq.n	8019ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019e8c:	d818      	bhi.n	8019ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019e8e:	2b25      	cmp	r3, #37	; 0x25
 8019e90:	d034      	beq.n	8019efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019e92:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019e96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e98:	f1bb 0f00 	cmp.w	fp, #0
 8019e9c:	f000 80b8 	beq.w	801a010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019ea0:	f8bb 5000 	ldrh.w	r5, [fp]
 8019ea4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019ea8:	3301      	adds	r3, #1
 8019eaa:	930d      	str	r3, [sp, #52]	; 0x34
 8019eac:	e029      	b.n	8019f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019eae:	b10d      	cbz	r5, 8019eb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019eb0:	782a      	ldrb	r2, [r5, #0]
 8019eb2:	e785      	b.n	8019dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019eb4:	462a      	mov	r2, r5
 8019eb6:	e783      	b.n	8019dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019eb8:	2a00      	cmp	r2, #0
 8019eba:	d0ea      	beq.n	8019e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019ebc:	7813      	ldrb	r3, [r2, #0]
 8019ebe:	e7e0      	b.n	8019e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019ec0:	3b63      	subs	r3, #99	; 0x63
 8019ec2:	2b01      	cmp	r3, #1
 8019ec4:	d8e5      	bhi.n	8019e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019ec6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019eca:	b329      	cbz	r1, 8019f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019ecc:	880b      	ldrh	r3, [r1, #0]
 8019ece:	2b69      	cmp	r3, #105	; 0x69
 8019ed0:	d063      	beq.n	8019f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019ed2:	d825      	bhi.n	8019f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8019ed4:	2b63      	cmp	r3, #99	; 0x63
 8019ed6:	d038      	beq.n	8019f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019ed8:	2b64      	cmp	r3, #100	; 0x64
 8019eda:	d05e      	beq.n	8019f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019edc:	2b58      	cmp	r3, #88	; 0x58
 8019ede:	d07b      	beq.n	8019fd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019ee0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8019ee4:	4625      	mov	r5, r4
 8019ee6:	e036      	b.n	8019f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019ee8:	2b73      	cmp	r3, #115	; 0x73
 8019eea:	d0ec      	beq.n	8019ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019eec:	d802      	bhi.n	8019ef4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019eee:	2b6f      	cmp	r3, #111	; 0x6f
 8019ef0:	d1cf      	bne.n	8019e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019ef2:	e7e8      	b.n	8019ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ef4:	2b75      	cmp	r3, #117	; 0x75
 8019ef6:	d0e6      	beq.n	8019ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ef8:	2b78      	cmp	r3, #120	; 0x78
 8019efa:	e7f9      	b.n	8019ef0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019efc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019efe:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019f02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f04:	b10b      	cbz	r3, 8019f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019f06:	3302      	adds	r3, #2
 8019f08:	9309      	str	r3, [sp, #36]	; 0x24
 8019f0a:	9b08      	ldr	r3, [sp, #32]
 8019f0c:	2b00      	cmp	r3, #0
 8019f0e:	f43f af2e 	beq.w	8019d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f12:	3301      	adds	r3, #1
 8019f14:	9308      	str	r3, [sp, #32]
 8019f16:	e72a      	b.n	8019d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f18:	2a00      	cmp	r2, #0
 8019f1a:	d0e1      	beq.n	8019ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f1c:	7813      	ldrb	r3, [r2, #0]
 8019f1e:	e7d6      	b.n	8019ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019f20:	2b73      	cmp	r3, #115	; 0x73
 8019f22:	d036      	beq.n	8019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019f24:	d807      	bhi.n	8019f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019f26:	2b6f      	cmp	r3, #111	; 0x6f
 8019f28:	d1da      	bne.n	8019ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f2c:	1d25      	adds	r5, r4, #4
 8019f2e:	eba8 0202 	sub.w	r2, r8, r2
 8019f32:	2308      	movs	r3, #8
 8019f34:	e04a      	b.n	8019fcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019f36:	2b75      	cmp	r3, #117	; 0x75
 8019f38:	d043      	beq.n	8019fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019f3a:	2b78      	cmp	r3, #120	; 0x78
 8019f3c:	d1d0      	bne.n	8019ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f40:	1d25      	adds	r5, r4, #4
 8019f42:	eba8 0202 	sub.w	r2, r8, r2
 8019f46:	2310      	movs	r3, #16
 8019f48:	e040      	b.n	8019fcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019f4a:	6823      	ldr	r3, [r4, #0]
 8019f4c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019f50:	1d25      	adds	r5, r4, #4
 8019f52:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019f56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f58:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019f5c:	2b00      	cmp	r3, #0
 8019f5e:	d052      	beq.n	801a006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019f60:	881a      	ldrh	r2, [r3, #0]
 8019f62:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019f66:	a80d      	add	r0, sp, #52	; 0x34
 8019f68:	9005      	str	r0, [sp, #20]
 8019f6a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019f6e:	9004      	str	r0, [sp, #16]
 8019f70:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019f72:	9003      	str	r0, [sp, #12]
 8019f74:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019f78:	9002      	str	r0, [sp, #8]
 8019f7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019f7c:	9001      	str	r0, [sp, #4]
 8019f7e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019f82:	9000      	str	r0, [sp, #0]
 8019f84:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019f88:	a810      	add	r0, sp, #64	; 0x40
 8019f8a:	f7ff fd49 	bl	8019a20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019f8e:	462c      	mov	r4, r5
 8019f90:	e7b7      	b.n	8019f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019f92:	6823      	ldr	r3, [r4, #0]
 8019f94:	1d25      	adds	r5, r4, #4
 8019f96:	9310      	str	r3, [sp, #64]	; 0x40
 8019f98:	e7dd      	b.n	8019f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019f9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f9c:	6820      	ldr	r0, [r4, #0]
 8019f9e:	eba8 0202 	sub.w	r2, r8, r2
 8019fa2:	230a      	movs	r3, #10
 8019fa4:	b292      	uxth	r2, r2
 8019fa6:	4649      	mov	r1, r9
 8019fa8:	f7ff fce4 	bl	8019974 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019fac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019fb0:	2b2d      	cmp	r3, #45	; 0x2d
 8019fb2:	f104 0504 	add.w	r5, r4, #4
 8019fb6:	d1ce      	bne.n	8019f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fb8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019fbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fbe:	3302      	adds	r3, #2
 8019fc0:	e7e9      	b.n	8019f96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019fc2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019fc4:	1d25      	adds	r5, r4, #4
 8019fc6:	eba8 0202 	sub.w	r2, r8, r2
 8019fca:	230a      	movs	r3, #10
 8019fcc:	b292      	uxth	r2, r2
 8019fce:	4649      	mov	r1, r9
 8019fd0:	6820      	ldr	r0, [r4, #0]
 8019fd2:	f7ff fcfb 	bl	80199cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019fd6:	e7be      	b.n	8019f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fd8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019fda:	6820      	ldr	r0, [r4, #0]
 8019fdc:	eba8 0202 	sub.w	r2, r8, r2
 8019fe0:	b292      	uxth	r2, r2
 8019fe2:	2310      	movs	r3, #16
 8019fe4:	4649      	mov	r1, r9
 8019fe6:	f7ff fcf1 	bl	80199cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019fea:	1d25      	adds	r5, r4, #4
 8019fec:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019ff0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019ff4:	2b00      	cmp	r3, #0
 8019ff6:	d0ae      	beq.n	8019f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019ff8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019ffc:	2919      	cmp	r1, #25
 8019ffe:	d8f7      	bhi.n	8019ff0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a000:	3b20      	subs	r3, #32
 801a002:	8013      	strh	r3, [r2, #0]
 801a004:	e7f4      	b.n	8019ff0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a006:	9a08      	ldr	r2, [sp, #32]
 801a008:	2a00      	cmp	r2, #0
 801a00a:	d0aa      	beq.n	8019f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a00c:	7812      	ldrb	r2, [r2, #0]
 801a00e:	e7a8      	b.n	8019f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a010:	2d00      	cmp	r5, #0
 801a012:	f43f af47 	beq.w	8019ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801a016:	782d      	ldrb	r5, [r5, #0]
 801a018:	e744      	b.n	8019ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801a01a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801a01a:	b507      	push	{r0, r1, r2, lr}
 801a01c:	9300      	str	r3, [sp, #0]
 801a01e:	4613      	mov	r3, r2
 801a020:	2200      	movs	r2, #0
 801a022:	f7ff fe90 	bl	8019d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801a026:	b003      	add	sp, #12
 801a028:	f85d fb04 	ldr.w	pc, [sp], #4

0801a02c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801a02c:	b40c      	push	{r2, r3}
 801a02e:	b507      	push	{r0, r1, r2, lr}
 801a030:	ab04      	add	r3, sp, #16
 801a032:	f853 2b04 	ldr.w	r2, [r3], #4
 801a036:	9301      	str	r3, [sp, #4]
 801a038:	f7ff ffef 	bl	801a01a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801a03c:	b003      	add	sp, #12
 801a03e:	f85d eb04 	ldr.w	lr, [sp], #4
 801a042:	b002      	add	sp, #8
 801a044:	4770      	bx	lr
	...

0801a048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801a048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a04c:	b0c5      	sub	sp, #276	; 0x114
 801a04e:	2400      	movs	r4, #0
 801a050:	af11      	add	r7, sp, #68	; 0x44
 801a052:	4606      	mov	r6, r0
 801a054:	468a      	mov	sl, r1
 801a056:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a05a:	4621      	mov	r1, r4
 801a05c:	22c8      	movs	r2, #200	; 0xc8
 801a05e:	4638      	mov	r0, r7
 801a060:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801a064:	940d      	str	r4, [sp, #52]	; 0x34
 801a066:	f011 ff00 	bl	802be6a <memset>
 801a06a:	b16e      	cbz	r6, 801a088 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801a06c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801a310 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801a070:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a072:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a074:	b162      	cbz	r2, 801a090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801a076:	8812      	ldrh	r2, [r2, #0]
 801a078:	b11a      	cbz	r2, 801a082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a07a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801a07e:	4299      	cmp	r1, r3
 801a080:	dc2e      	bgt.n	801a0e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801a082:	2200      	movs	r2, #0
 801a084:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a088:	4630      	mov	r0, r6
 801a08a:	b045      	add	sp, #276	; 0x114
 801a08c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a090:	9a08      	ldr	r2, [sp, #32]
 801a092:	2a00      	cmp	r2, #0
 801a094:	d0f5      	beq.n	801a082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a096:	7812      	ldrb	r2, [r2, #0]
 801a098:	e7ee      	b.n	801a078 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801a09a:	2d00      	cmp	r5, #0
 801a09c:	d0e8      	beq.n	801a070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a09e:	782a      	ldrb	r2, [r5, #0]
 801a0a0:	b142      	cbz	r2, 801a0b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801a0a2:	2a25      	cmp	r2, #37	; 0x25
 801a0a4:	d001      	beq.n	801a0aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801a0a6:	4299      	cmp	r1, r3
 801a0a8:	dc08      	bgt.n	801a0bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801a0aa:	f1b8 0f00 	cmp.w	r8, #0
 801a0ae:	d121      	bne.n	801a0f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801a0b0:	2d00      	cmp	r5, #0
 801a0b2:	d0dd      	beq.n	801a070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0b4:	782a      	ldrb	r2, [r5, #0]
 801a0b6:	f04f 0800 	mov.w	r8, #0
 801a0ba:	e01d      	b.n	801a0f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801a0bc:	f1b8 0f00 	cmp.w	r8, #0
 801a0c0:	d07f      	beq.n	801a1c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801a0c2:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0c6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a0ca:	f1b8 0f00 	cmp.w	r8, #0
 801a0ce:	d002      	beq.n	801a0d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801a0d0:	f108 0202 	add.w	r2, r8, #2
 801a0d4:	9209      	str	r2, [sp, #36]	; 0x24
 801a0d6:	b10d      	cbz	r5, 801a0dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801a0d8:	3501      	adds	r5, #1
 801a0da:	9508      	str	r5, [sp, #32]
 801a0dc:	3301      	adds	r3, #1
 801a0de:	930d      	str	r3, [sp, #52]	; 0x34
 801a0e0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801a0e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a0e6:	f1b8 0f00 	cmp.w	r8, #0
 801a0ea:	d0d6      	beq.n	801a09a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801a0ec:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0f0:	2a00      	cmp	r2, #0
 801a0f2:	d1d6      	bne.n	801a0a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801a0f4:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0f8:	2a00      	cmp	r2, #0
 801a0fa:	d0b9      	beq.n	801a070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0fc:	4299      	cmp	r1, r3
 801a0fe:	ddb7      	ble.n	801a070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a100:	2300      	movs	r3, #0
 801a102:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a106:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801a10a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801a10e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801a112:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801a116:	930e      	str	r3, [sp, #56]	; 0x38
 801a118:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a11c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a11e:	f1b8 0f00 	cmp.w	r8, #0
 801a122:	d002      	beq.n	801a12a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801a124:	f108 0302 	add.w	r3, r8, #2
 801a128:	9309      	str	r3, [sp, #36]	; 0x24
 801a12a:	b10d      	cbz	r5, 801a130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801a12c:	1c6b      	adds	r3, r5, #1
 801a12e:	9308      	str	r3, [sp, #32]
 801a130:	ab0f      	add	r3, sp, #60	; 0x3c
 801a132:	9305      	str	r3, [sp, #20]
 801a134:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801a138:	9304      	str	r3, [sp, #16]
 801a13a:	ab0e      	add	r3, sp, #56	; 0x38
 801a13c:	9303      	str	r3, [sp, #12]
 801a13e:	ab0c      	add	r3, sp, #48	; 0x30
 801a140:	9302      	str	r3, [sp, #8]
 801a142:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801a146:	9301      	str	r3, [sp, #4]
 801a148:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801a14c:	9300      	str	r3, [sp, #0]
 801a14e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801a152:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801a156:	a908      	add	r1, sp, #32
 801a158:	a809      	add	r0, sp, #36	; 0x24
 801a15a:	f7ff fd24 	bl	8019ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a15e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a160:	2b00      	cmp	r3, #0
 801a162:	da0b      	bge.n	801a17c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801a164:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a168:	edd3 7a00 	vldr	s15, [r3]
 801a16c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a170:	3401      	adds	r4, #1
 801a172:	ee17 3a90 	vmov	r3, s15
 801a176:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a17a:	930e      	str	r3, [sp, #56]	; 0x38
 801a17c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a17e:	2b00      	cmp	r3, #0
 801a180:	da0b      	bge.n	801a19a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801a182:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a186:	edd3 7a00 	vldr	s15, [r3]
 801a18a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a18e:	3401      	adds	r4, #1
 801a190:	ee17 3a90 	vmov	r3, s15
 801a194:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a198:	930f      	str	r3, [sp, #60]	; 0x3c
 801a19a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a19c:	b1b3      	cbz	r3, 801a1cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801a19e:	881a      	ldrh	r2, [r3, #0]
 801a1a0:	2a25      	cmp	r2, #37	; 0x25
 801a1a2:	d018      	beq.n	801a1d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801a1a4:	2a66      	cmp	r2, #102	; 0x66
 801a1a6:	d01c      	beq.n	801a1e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801a1a8:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801a1ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1ae:	f1b8 0f00 	cmp.w	r8, #0
 801a1b2:	f000 8121 	beq.w	801a3f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801a1b6:	f8b8 5000 	ldrh.w	r5, [r8]
 801a1ba:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801a1be:	3301      	adds	r3, #1
 801a1c0:	e00d      	b.n	801a1de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801a1c2:	b10d      	cbz	r5, 801a1c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801a1c4:	782a      	ldrb	r2, [r5, #0]
 801a1c6:	e77e      	b.n	801a0c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a1c8:	462a      	mov	r2, r5
 801a1ca:	e77c      	b.n	801a0c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a1cc:	9b08      	ldr	r3, [sp, #32]
 801a1ce:	2b00      	cmp	r3, #0
 801a1d0:	d0ea      	beq.n	801a1a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801a1d2:	781a      	ldrb	r2, [r3, #0]
 801a1d4:	e7e4      	b.n	801a1a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801a1d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1d8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a1dc:	3302      	adds	r3, #2
 801a1de:	930d      	str	r3, [sp, #52]	; 0x34
 801a1e0:	e041      	b.n	801a266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801a1e2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a1e6:	edd3 7a00 	vldr	s15, [r3]
 801a1ea:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a1ee:	9710      	str	r7, [sp, #64]	; 0x40
 801a1f0:	3401      	adds	r4, #1
 801a1f2:	b923      	cbnz	r3, 801a1fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801a1f4:	2301      	movs	r3, #1
 801a1f6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a1fa:	2306      	movs	r3, #6
 801a1fc:	930f      	str	r3, [sp, #60]	; 0x3c
 801a1fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a206:	bf48      	it	mi
 801a208:	eef1 7a67 	vnegmi.f32	s15, s15
 801a20c:	eeb0 7ae7 	vabs.f32	s14, s15
 801a210:	bf48      	it	mi
 801a212:	232d      	movmi	r3, #45	; 0x2d
 801a214:	eeb4 7a45 	vcmp.f32	s14, s10
 801a218:	bf48      	it	mi
 801a21a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801a21e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a222:	dd2b      	ble.n	801a27c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801a224:	4b3b      	ldr	r3, [pc, #236]	; (801a314 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801a226:	9311      	str	r3, [sp, #68]	; 0x44
 801a228:	2366      	movs	r3, #102	; 0x66
 801a22a:	9312      	str	r3, [sp, #72]	; 0x48
 801a22c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a22e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801a232:	2b00      	cmp	r3, #0
 801a234:	f000 80da 	beq.w	801a3ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801a238:	881a      	ldrh	r2, [r3, #0]
 801a23a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a23e:	a80d      	add	r0, sp, #52	; 0x34
 801a240:	9005      	str	r0, [sp, #20]
 801a242:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801a246:	9004      	str	r0, [sp, #16]
 801a248:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a24a:	9003      	str	r0, [sp, #12]
 801a24c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801a250:	9002      	str	r0, [sp, #8]
 801a252:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a254:	9001      	str	r0, [sp, #4]
 801a256:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801a25a:	9000      	str	r0, [sp, #0]
 801a25c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801a260:	a810      	add	r0, sp, #64	; 0x40
 801a262:	f7ff fbdd 	bl	8019a20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a266:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a268:	b10b      	cbz	r3, 801a26e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801a26a:	3302      	adds	r3, #2
 801a26c:	9309      	str	r3, [sp, #36]	; 0x24
 801a26e:	9b08      	ldr	r3, [sp, #32]
 801a270:	2b00      	cmp	r3, #0
 801a272:	f43f aefd 	beq.w	801a070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a276:	3301      	adds	r3, #1
 801a278:	9308      	str	r3, [sp, #32]
 801a27a:	e6f9      	b.n	801a070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a27c:	eef4 7a67 	vcmp.f32	s15, s15
 801a280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a284:	d63a      	bvs.n	801a2fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801a286:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801a28a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801a28e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801a292:	eeb0 6a67 	vmov.f32	s12, s15
 801a296:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a29a:	eef0 5a47 	vmov.f32	s11, s14
 801a29e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a2a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2a6:	da2d      	bge.n	801a304 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801a2a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a2aa:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801a2ae:	2100      	movs	r1, #0
 801a2b0:	eef0 4a46 	vmov.f32	s9, s12
 801a2b4:	ebaa 0202 	sub.w	r2, sl, r2
 801a2b8:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a2bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2c0:	b28d      	uxth	r5, r1
 801a2c2:	db2c      	blt.n	801a31e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a2c4:	1a53      	subs	r3, r2, r1
 801a2c6:	2b00      	cmp	r3, #0
 801a2c8:	dd29      	ble.n	801a31e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a2ca:	3101      	adds	r1, #1
 801a2cc:	2964      	cmp	r1, #100	; 0x64
 801a2ce:	d025      	beq.n	801a31c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801a2d0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a2d4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801a2d8:	ee17 3a10 	vmov	r3, s14
 801a2dc:	2b09      	cmp	r3, #9
 801a2de:	bfa8      	it	ge
 801a2e0:	2309      	movge	r3, #9
 801a2e2:	ee07 3a10 	vmov	s14, r3
 801a2e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a2ea:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801a2ee:	eee7 7a66 	vfms.f32	s15, s14, s13
 801a2f2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801a2f6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801a2fa:	e7dd      	b.n	801a2b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801a2fc:	4b06      	ldr	r3, [pc, #24]	; (801a318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801a2fe:	9311      	str	r3, [sp, #68]	; 0x44
 801a300:	236e      	movs	r3, #110	; 0x6e
 801a302:	e792      	b.n	801a22a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801a304:	ee66 6a87 	vmul.f32	s13, s13, s14
 801a308:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801a30c:	e7c7      	b.n	801a29e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801a30e:	bf00      	nop
 801a310:	7f7fffff 	.word	0x7f7fffff
 801a314:	006e0069 	.word	0x006e0069
 801a318:	0061006e 	.word	0x0061006e
 801a31c:	2563      	movs	r5, #99	; 0x63
 801a31e:	2a63      	cmp	r2, #99	; 0x63
 801a320:	bfd4      	ite	le
 801a322:	ebc5 0202 	rsble	r2, r5, r2
 801a326:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801a32a:	2a00      	cmp	r2, #0
 801a32c:	dd43      	ble.n	801a3b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a32e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a330:	2b00      	cmp	r3, #0
 801a332:	dd40      	ble.n	801a3b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a334:	f04f 0901 	mov.w	r9, #1
 801a338:	210a      	movs	r1, #10
 801a33a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801a33e:	d30c      	bcc.n	801a35a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801a340:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801a344:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801a348:	ee17 0a10 	vmov	r0, s14
 801a34c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a350:	fb01 0909 	mla	r9, r1, r9, r0
 801a354:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a358:	e7ef      	b.n	801a33a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801a35a:	3501      	adds	r5, #1
 801a35c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a35e:	b292      	uxth	r2, r2
 801a360:	230a      	movs	r3, #10
 801a362:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801a366:	4648      	mov	r0, r9
 801a368:	f7ff fb4e 	bl	8019a08 <_ZN8touchgfx7Unicode4itoaElPtti>
 801a36c:	f1b9 0f01 	cmp.w	r9, #1
 801a370:	dc1f      	bgt.n	801a3b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801a372:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801a376:	2b00      	cmp	r3, #0
 801a378:	bf0c      	ite	eq
 801a37a:	2300      	moveq	r3, #0
 801a37c:	232e      	movne	r3, #46	; 0x2e
 801a37e:	aa44      	add	r2, sp, #272	; 0x110
 801a380:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a384:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a38c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801a390:	f6ff af4c 	blt.w	801a22c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a394:	2300      	movs	r3, #0
 801a396:	f838 2b02 	ldrh.w	r2, [r8], #2
 801a39a:	1c59      	adds	r1, r3, #1
 801a39c:	b98a      	cbnz	r2, 801a3c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801a39e:	b29b      	uxth	r3, r3
 801a3a0:	2130      	movs	r1, #48	; 0x30
 801a3a2:	b983      	cbnz	r3, 801a3c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801a3a4:	2331      	movs	r3, #49	; 0x31
 801a3a6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801a3aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3ac:	3b02      	subs	r3, #2
 801a3ae:	9310      	str	r3, [sp, #64]	; 0x40
 801a3b0:	e73c      	b.n	801a22c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a3b2:	232e      	movs	r3, #46	; 0x2e
 801a3b4:	e7e3      	b.n	801a37e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801a3b6:	ab44      	add	r3, sp, #272	; 0x110
 801a3b8:	3501      	adds	r5, #1
 801a3ba:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a3be:	2300      	movs	r3, #0
 801a3c0:	e7e0      	b.n	801a384 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801a3c2:	460b      	mov	r3, r1
 801a3c4:	e7e7      	b.n	801a396 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801a3c6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801a3ca:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801a3ce:	2808      	cmp	r0, #8
 801a3d0:	d806      	bhi.n	801a3e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801a3d2:	a944      	add	r1, sp, #272	; 0x110
 801a3d4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801a3d8:	3201      	adds	r2, #1
 801a3da:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801a3de:	e725      	b.n	801a22c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a3e0:	2a39      	cmp	r2, #57	; 0x39
 801a3e2:	bf08      	it	eq
 801a3e4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801a3e8:	3b01      	subs	r3, #1
 801a3ea:	e7da      	b.n	801a3a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801a3ec:	9a08      	ldr	r2, [sp, #32]
 801a3ee:	2a00      	cmp	r2, #0
 801a3f0:	f43f af23 	beq.w	801a23a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a3f4:	7812      	ldrb	r2, [r2, #0]
 801a3f6:	e720      	b.n	801a23a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a3f8:	2d00      	cmp	r5, #0
 801a3fa:	f43f aede 	beq.w	801a1ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a3fe:	782d      	ldrb	r5, [r5, #0]
 801a400:	e6db      	b.n	801a1ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a402:	bf00      	nop

0801a404 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801a404:	b507      	push	{r0, r1, r2, lr}
 801a406:	9300      	str	r3, [sp, #0]
 801a408:	4613      	mov	r3, r2
 801a40a:	2200      	movs	r2, #0
 801a40c:	f7ff fe1c 	bl	801a048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801a410:	b003      	add	sp, #12
 801a412:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801a418 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801a418:	4b01      	ldr	r3, [pc, #4]	; (801a420 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801a41a:	6018      	str	r0, [r3, #0]
 801a41c:	4770      	bx	lr
 801a41e:	bf00      	nop
 801a420:	2001389c 	.word	0x2001389c

0801a424 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a424:	4b06      	ldr	r3, [pc, #24]	; (801a440 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a426:	881a      	ldrh	r2, [r3, #0]
 801a428:	4282      	cmp	r2, r0
 801a42a:	d807      	bhi.n	801a43c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a42c:	4b05      	ldr	r3, [pc, #20]	; (801a444 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a42e:	881b      	ldrh	r3, [r3, #0]
 801a430:	4413      	add	r3, r2
 801a432:	4298      	cmp	r0, r3
 801a434:	bfac      	ite	ge
 801a436:	2000      	movge	r0, #0
 801a438:	2001      	movlt	r0, #1
 801a43a:	4770      	bx	lr
 801a43c:	2000      	movs	r0, #0
 801a43e:	4770      	bx	lr
 801a440:	200138bc 	.word	0x200138bc
 801a444:	200138c0 	.word	0x200138c0

0801a448 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a448:	b508      	push	{r3, lr}
 801a44a:	4601      	mov	r1, r0
 801a44c:	f7ff ffea 	bl	801a424 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a450:	b118      	cbz	r0, 801a45a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a452:	4b02      	ldr	r3, [pc, #8]	; (801a45c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a454:	681b      	ldr	r3, [r3, #0]
 801a456:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a45a:	bd08      	pop	{r3, pc}
 801a45c:	200138a0 	.word	0x200138a0

0801a460 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a460:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a462:	4c24      	ldr	r4, [pc, #144]	; (801a4f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a464:	6823      	ldr	r3, [r4, #0]
 801a466:	2b00      	cmp	r3, #0
 801a468:	d042      	beq.n	801a4f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a46a:	4a23      	ldr	r2, [pc, #140]	; (801a4f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a46c:	4d23      	ldr	r5, [pc, #140]	; (801a4fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a46e:	8811      	ldrh	r1, [r2, #0]
 801a470:	f8b5 c000 	ldrh.w	ip, [r5]
 801a474:	4822      	ldr	r0, [pc, #136]	; (801a500 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a476:	4461      	add	r1, ip
 801a478:	1c4a      	adds	r2, r1, #1
 801a47a:	f022 0201 	bic.w	r2, r2, #1
 801a47e:	008f      	lsls	r7, r1, #2
 801a480:	0412      	lsls	r2, r2, #16
 801a482:	19de      	adds	r6, r3, r7
 801a484:	0c12      	lsrs	r2, r2, #16
 801a486:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a48a:	6006      	str	r6, [r0, #0]
 801a48c:	4e1d      	ldr	r6, [pc, #116]	; (801a504 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a48e:	19da      	adds	r2, r3, r7
 801a490:	6032      	str	r2, [r6, #0]
 801a492:	220e      	movs	r2, #14
 801a494:	fb02 f20c 	mul.w	r2, r2, ip
 801a498:	3203      	adds	r2, #3
 801a49a:	f022 0203 	bic.w	r2, r2, #3
 801a49e:	443a      	add	r2, r7
 801a4a0:	4f19      	ldr	r7, [pc, #100]	; (801a508 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a4a2:	4413      	add	r3, r2
 801a4a4:	603b      	str	r3, [r7, #0]
 801a4a6:	4f19      	ldr	r7, [pc, #100]	; (801a50c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a4a8:	2300      	movs	r3, #0
 801a4aa:	803b      	strh	r3, [r7, #0]
 801a4ac:	4f18      	ldr	r7, [pc, #96]	; (801a510 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a4ae:	683f      	ldr	r7, [r7, #0]
 801a4b0:	1aba      	subs	r2, r7, r2
 801a4b2:	4f18      	ldr	r7, [pc, #96]	; (801a514 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a4b4:	603a      	str	r2, [r7, #0]
 801a4b6:	4a18      	ldr	r2, [pc, #96]	; (801a518 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a4b8:	469c      	mov	ip, r3
 801a4ba:	8013      	strh	r3, [r2, #0]
 801a4bc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801a4c0:	428b      	cmp	r3, r1
 801a4c2:	d10d      	bne.n	801a4e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a4c4:	882d      	ldrh	r5, [r5, #0]
 801a4c6:	6830      	ldr	r0, [r6, #0]
 801a4c8:	2300      	movs	r3, #0
 801a4ca:	240e      	movs	r4, #14
 801a4cc:	429d      	cmp	r5, r3
 801a4ce:	d90f      	bls.n	801a4f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a4d0:	fb04 0203 	mla	r2, r4, r3, r0
 801a4d4:	3301      	adds	r3, #1
 801a4d6:	7b11      	ldrb	r1, [r2, #12]
 801a4d8:	f36f 1145 	bfc	r1, #5, #1
 801a4dc:	7311      	strb	r1, [r2, #12]
 801a4de:	e7f5      	b.n	801a4cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a4e0:	6822      	ldr	r2, [r4, #0]
 801a4e2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a4e6:	6802      	ldr	r2, [r0, #0]
 801a4e8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a4ec:	3301      	adds	r3, #1
 801a4ee:	e7e7      	b.n	801a4c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a4f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a4f2:	bf00      	nop
 801a4f4:	200138a0 	.word	0x200138a0
 801a4f8:	200138bc 	.word	0x200138bc
 801a4fc:	200138c0 	.word	0x200138c0
 801a500:	200138b4 	.word	0x200138b4
 801a504:	200138a4 	.word	0x200138a4
 801a508:	200138ac 	.word	0x200138ac
 801a50c:	200138be 	.word	0x200138be
 801a510:	200138a8 	.word	0x200138a8
 801a514:	200138b8 	.word	0x200138b8
 801a518:	200138b0 	.word	0x200138b0

0801a51c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a51c:	4b06      	ldr	r3, [pc, #24]	; (801a538 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a51e:	681b      	ldr	r3, [r3, #0]
 801a520:	b943      	cbnz	r3, 801a534 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a522:	b139      	cbz	r1, 801a534 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a524:	4b05      	ldr	r3, [pc, #20]	; (801a53c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a526:	801a      	strh	r2, [r3, #0]
 801a528:	4b05      	ldr	r3, [pc, #20]	; (801a540 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a52a:	6019      	str	r1, [r3, #0]
 801a52c:	4b05      	ldr	r3, [pc, #20]	; (801a544 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a52e:	6018      	str	r0, [r3, #0]
 801a530:	f7ff bf96 	b.w	801a460 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a534:	4770      	bx	lr
 801a536:	bf00      	nop
 801a538:	200138ac 	.word	0x200138ac
 801a53c:	200138c0 	.word	0x200138c0
 801a540:	200138a8 	.word	0x200138a8
 801a544:	200138a0 	.word	0x200138a0

0801a548 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a548:	b470      	push	{r4, r5, r6}
 801a54a:	4c07      	ldr	r4, [pc, #28]	; (801a568 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a54c:	6826      	ldr	r6, [r4, #0]
 801a54e:	4605      	mov	r5, r0
 801a550:	4610      	mov	r0, r2
 801a552:	9a03      	ldr	r2, [sp, #12]
 801a554:	b936      	cbnz	r6, 801a564 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a556:	6025      	str	r5, [r4, #0]
 801a558:	4c04      	ldr	r4, [pc, #16]	; (801a56c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a55a:	8021      	strh	r1, [r4, #0]
 801a55c:	bc70      	pop	{r4, r5, r6}
 801a55e:	4619      	mov	r1, r3
 801a560:	f7ff bfdc 	b.w	801a51c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a564:	bc70      	pop	{r4, r5, r6}
 801a566:	4770      	bx	lr
 801a568:	200138c4 	.word	0x200138c4
 801a56c:	200138bc 	.word	0x200138bc

0801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a570:	4a12      	ldr	r2, [pc, #72]	; (801a5bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a572:	8803      	ldrh	r3, [r0, #0]
 801a574:	8812      	ldrh	r2, [r2, #0]
 801a576:	4293      	cmp	r3, r2
 801a578:	d207      	bcs.n	801a58a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a57a:	4a11      	ldr	r2, [pc, #68]	; (801a5c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a57c:	6812      	ldr	r2, [r2, #0]
 801a57e:	2114      	movs	r1, #20
 801a580:	fb01 2303 	mla	r3, r1, r3, r2
 801a584:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a588:	4770      	bx	lr
 801a58a:	490e      	ldr	r1, [pc, #56]	; (801a5c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a58c:	8809      	ldrh	r1, [r1, #0]
 801a58e:	4411      	add	r1, r2
 801a590:	428b      	cmp	r3, r1
 801a592:	da04      	bge.n	801a59e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a594:	1a9b      	subs	r3, r3, r2
 801a596:	4a0c      	ldr	r2, [pc, #48]	; (801a5c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a598:	210e      	movs	r1, #14
 801a59a:	6812      	ldr	r2, [r2, #0]
 801a59c:	e7f0      	b.n	801a580 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a59e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a5a2:	4293      	cmp	r3, r2
 801a5a4:	d108      	bne.n	801a5b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a5a6:	4b09      	ldr	r3, [pc, #36]	; (801a5cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a5a8:	781b      	ldrb	r3, [r3, #0]
 801a5aa:	b91b      	cbnz	r3, 801a5b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a5ac:	4b08      	ldr	r3, [pc, #32]	; (801a5d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a5ae:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a5b2:	4770      	bx	lr
 801a5b4:	4b07      	ldr	r3, [pc, #28]	; (801a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a5b6:	e7fa      	b.n	801a5ae <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a5b8:	2000      	movs	r0, #0
 801a5ba:	4770      	bx	lr
 801a5bc:	200138bc 	.word	0x200138bc
 801a5c0:	200138c4 	.word	0x200138c4
 801a5c4:	200138c0 	.word	0x200138c0
 801a5c8:	200138a4 	.word	0x200138a4
 801a5cc:	2001382c 	.word	0x2001382c
 801a5d0:	2001382e 	.word	0x2001382e
 801a5d4:	20013830 	.word	0x20013830

0801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a5d8:	4a12      	ldr	r2, [pc, #72]	; (801a624 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a5da:	8803      	ldrh	r3, [r0, #0]
 801a5dc:	8812      	ldrh	r2, [r2, #0]
 801a5de:	4293      	cmp	r3, r2
 801a5e0:	d207      	bcs.n	801a5f2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a5e2:	4a11      	ldr	r2, [pc, #68]	; (801a628 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a5e4:	6812      	ldr	r2, [r2, #0]
 801a5e6:	2114      	movs	r1, #20
 801a5e8:	fb01 2303 	mla	r3, r1, r3, r2
 801a5ec:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a5f0:	4770      	bx	lr
 801a5f2:	490e      	ldr	r1, [pc, #56]	; (801a62c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a5f4:	8809      	ldrh	r1, [r1, #0]
 801a5f6:	4411      	add	r1, r2
 801a5f8:	428b      	cmp	r3, r1
 801a5fa:	da04      	bge.n	801a606 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a5fc:	1a9b      	subs	r3, r3, r2
 801a5fe:	4a0c      	ldr	r2, [pc, #48]	; (801a630 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a600:	210e      	movs	r1, #14
 801a602:	6812      	ldr	r2, [r2, #0]
 801a604:	e7f0      	b.n	801a5e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a606:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a60a:	4293      	cmp	r3, r2
 801a60c:	d108      	bne.n	801a620 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a60e:	4b09      	ldr	r3, [pc, #36]	; (801a634 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a610:	781b      	ldrb	r3, [r3, #0]
 801a612:	b91b      	cbnz	r3, 801a61c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a614:	4b08      	ldr	r3, [pc, #32]	; (801a638 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a616:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a61a:	4770      	bx	lr
 801a61c:	4b07      	ldr	r3, [pc, #28]	; (801a63c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a61e:	e7fa      	b.n	801a616 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a620:	2000      	movs	r0, #0
 801a622:	4770      	bx	lr
 801a624:	200138bc 	.word	0x200138bc
 801a628:	200138c4 	.word	0x200138c4
 801a62c:	200138c0 	.word	0x200138c0
 801a630:	200138a4 	.word	0x200138a4
 801a634:	2001382c 	.word	0x2001382c
 801a638:	20013830 	.word	0x20013830
 801a63c:	2001382e 	.word	0x2001382e

0801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a640:	b510      	push	{r4, lr}
 801a642:	4a1f      	ldr	r2, [pc, #124]	; (801a6c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a644:	880b      	ldrh	r3, [r1, #0]
 801a646:	8812      	ldrh	r2, [r2, #0]
 801a648:	4293      	cmp	r3, r2
 801a64a:	d213      	bcs.n	801a674 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a64c:	4a1d      	ldr	r2, [pc, #116]	; (801a6c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a64e:	6812      	ldr	r2, [r2, #0]
 801a650:	2114      	movs	r1, #20
 801a652:	fb01 2303 	mla	r3, r1, r3, r2
 801a656:	8a1a      	ldrh	r2, [r3, #16]
 801a658:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a65c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a660:	8a5b      	ldrh	r3, [r3, #18]
 801a662:	8004      	strh	r4, [r0, #0]
 801a664:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a668:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a66c:	8041      	strh	r1, [r0, #2]
 801a66e:	8082      	strh	r2, [r0, #4]
 801a670:	80c3      	strh	r3, [r0, #6]
 801a672:	e00e      	b.n	801a692 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a674:	4914      	ldr	r1, [pc, #80]	; (801a6c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a676:	8809      	ldrh	r1, [r1, #0]
 801a678:	4411      	add	r1, r2
 801a67a:	428b      	cmp	r3, r1
 801a67c:	da0a      	bge.n	801a694 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a67e:	1a9b      	subs	r3, r3, r2
 801a680:	4a12      	ldr	r2, [pc, #72]	; (801a6cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a682:	6812      	ldr	r2, [r2, #0]
 801a684:	210e      	movs	r1, #14
 801a686:	fb01 2303 	mla	r3, r1, r3, r2
 801a68a:	681a      	ldr	r2, [r3, #0]
 801a68c:	6002      	str	r2, [r0, #0]
 801a68e:	685a      	ldr	r2, [r3, #4]
 801a690:	6042      	str	r2, [r0, #4]
 801a692:	bd10      	pop	{r4, pc}
 801a694:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a698:	4293      	cmp	r3, r2
 801a69a:	d10b      	bne.n	801a6b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a69c:	4b0c      	ldr	r3, [pc, #48]	; (801a6d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a69e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a6a2:	4b0c      	ldr	r3, [pc, #48]	; (801a6d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a6a4:	8081      	strh	r1, [r0, #4]
 801a6a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a6aa:	80c2      	strh	r2, [r0, #6]
 801a6ac:	2300      	movs	r3, #0
 801a6ae:	8003      	strh	r3, [r0, #0]
 801a6b0:	8043      	strh	r3, [r0, #2]
 801a6b2:	e7ee      	b.n	801a692 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a6b4:	2300      	movs	r3, #0
 801a6b6:	8003      	strh	r3, [r0, #0]
 801a6b8:	8043      	strh	r3, [r0, #2]
 801a6ba:	8083      	strh	r3, [r0, #4]
 801a6bc:	e7d8      	b.n	801a670 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a6be:	bf00      	nop
 801a6c0:	200138bc 	.word	0x200138bc
 801a6c4:	200138c4 	.word	0x200138c4
 801a6c8:	200138c0 	.word	0x200138c0
 801a6cc:	200138a4 	.word	0x200138a4
 801a6d0:	20013828 	.word	0x20013828
 801a6d4:	2001382a 	.word	0x2001382a

0801a6d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a6d8:	4a17      	ldr	r2, [pc, #92]	; (801a738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a6da:	8803      	ldrh	r3, [r0, #0]
 801a6dc:	8812      	ldrh	r2, [r2, #0]
 801a6de:	4293      	cmp	r3, r2
 801a6e0:	d213      	bcs.n	801a70a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a6e2:	4a16      	ldr	r2, [pc, #88]	; (801a73c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a6e4:	6812      	ldr	r2, [r2, #0]
 801a6e6:	2114      	movs	r1, #20
 801a6e8:	fb01 2303 	mla	r3, r1, r3, r2
 801a6ec:	8a1a      	ldrh	r2, [r3, #16]
 801a6ee:	8919      	ldrh	r1, [r3, #8]
 801a6f0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a6f4:	428a      	cmp	r2, r1
 801a6f6:	db1d      	blt.n	801a734 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a6f8:	8a58      	ldrh	r0, [r3, #18]
 801a6fa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a6fe:	895b      	ldrh	r3, [r3, #10]
 801a700:	4298      	cmp	r0, r3
 801a702:	bfac      	ite	ge
 801a704:	2000      	movge	r0, #0
 801a706:	2001      	movlt	r0, #1
 801a708:	4770      	bx	lr
 801a70a:	490d      	ldr	r1, [pc, #52]	; (801a740 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a70c:	8809      	ldrh	r1, [r1, #0]
 801a70e:	4411      	add	r1, r2
 801a710:	428b      	cmp	r3, r1
 801a712:	da0d      	bge.n	801a730 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a714:	1a9b      	subs	r3, r3, r2
 801a716:	4a0b      	ldr	r2, [pc, #44]	; (801a744 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a718:	6812      	ldr	r2, [r2, #0]
 801a71a:	210e      	movs	r1, #14
 801a71c:	fb01 2303 	mla	r3, r1, r3, r2
 801a720:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a724:	891a      	ldrh	r2, [r3, #8]
 801a726:	4291      	cmp	r1, r2
 801a728:	db04      	blt.n	801a734 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a72a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a72e:	e7e6      	b.n	801a6fe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a730:	2000      	movs	r0, #0
 801a732:	4770      	bx	lr
 801a734:	2001      	movs	r0, #1
 801a736:	4770      	bx	lr
 801a738:	200138bc 	.word	0x200138bc
 801a73c:	200138c4 	.word	0x200138c4
 801a740:	200138c0 	.word	0x200138c0
 801a744:	200138a4 	.word	0x200138a4

0801a748 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a748:	4a12      	ldr	r2, [pc, #72]	; (801a794 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a74a:	8803      	ldrh	r3, [r0, #0]
 801a74c:	8811      	ldrh	r1, [r2, #0]
 801a74e:	428b      	cmp	r3, r1
 801a750:	d20b      	bcs.n	801a76a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a752:	4a11      	ldr	r2, [pc, #68]	; (801a798 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a754:	6812      	ldr	r2, [r2, #0]
 801a756:	b112      	cbz	r2, 801a75e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a758:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a75c:	b9c0      	cbnz	r0, 801a790 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a75e:	4a0f      	ldr	r2, [pc, #60]	; (801a79c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a760:	6811      	ldr	r1, [r2, #0]
 801a762:	2214      	movs	r2, #20
 801a764:	4353      	muls	r3, r2
 801a766:	58c8      	ldr	r0, [r1, r3]
 801a768:	4770      	bx	lr
 801a76a:	4a0d      	ldr	r2, [pc, #52]	; (801a7a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a76c:	8812      	ldrh	r2, [r2, #0]
 801a76e:	440a      	add	r2, r1
 801a770:	4293      	cmp	r3, r2
 801a772:	da04      	bge.n	801a77e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a774:	4a08      	ldr	r2, [pc, #32]	; (801a798 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a776:	6812      	ldr	r2, [r2, #0]
 801a778:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a77c:	4770      	bx	lr
 801a77e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a782:	4293      	cmp	r3, r2
 801a784:	d103      	bne.n	801a78e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a786:	4b07      	ldr	r3, [pc, #28]	; (801a7a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a788:	681b      	ldr	r3, [r3, #0]
 801a78a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a78c:	4770      	bx	lr
 801a78e:	2000      	movs	r0, #0
 801a790:	4770      	bx	lr
 801a792:	bf00      	nop
 801a794:	200138bc 	.word	0x200138bc
 801a798:	200138a0 	.word	0x200138a0
 801a79c:	200138c4 	.word	0x200138c4
 801a7a0:	200138c0 	.word	0x200138c0
 801a7a4:	20013834 	.word	0x20013834

0801a7a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a7a8:	4b24      	ldr	r3, [pc, #144]	; (801a83c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a7aa:	8802      	ldrh	r2, [r0, #0]
 801a7ac:	8818      	ldrh	r0, [r3, #0]
 801a7ae:	4282      	cmp	r2, r0
 801a7b0:	d221      	bcs.n	801a7f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a7b2:	4b23      	ldr	r3, [pc, #140]	; (801a840 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a7b4:	6819      	ldr	r1, [r3, #0]
 801a7b6:	2314      	movs	r3, #20
 801a7b8:	fb03 1302 	mla	r3, r3, r2, r1
 801a7bc:	6858      	ldr	r0, [r3, #4]
 801a7be:	2800      	cmp	r0, #0
 801a7c0:	d03a      	beq.n	801a838 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7c2:	4920      	ldr	r1, [pc, #128]	; (801a844 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a7c4:	6809      	ldr	r1, [r1, #0]
 801a7c6:	2900      	cmp	r1, #0
 801a7c8:	d036      	beq.n	801a838 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7ca:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a7ce:	2900      	cmp	r1, #0
 801a7d0:	d032      	beq.n	801a838 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7d2:	891a      	ldrh	r2, [r3, #8]
 801a7d4:	8958      	ldrh	r0, [r3, #10]
 801a7d6:	4350      	muls	r0, r2
 801a7d8:	7c5a      	ldrb	r2, [r3, #17]
 801a7da:	7cdb      	ldrb	r3, [r3, #19]
 801a7dc:	0952      	lsrs	r2, r2, #5
 801a7de:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a7e2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a7e6:	2b0b      	cmp	r3, #11
 801a7e8:	bf18      	it	ne
 801a7ea:	0040      	lslne	r0, r0, #1
 801a7ec:	3003      	adds	r0, #3
 801a7ee:	f020 0003 	bic.w	r0, r0, #3
 801a7f2:	4408      	add	r0, r1
 801a7f4:	4770      	bx	lr
 801a7f6:	4b14      	ldr	r3, [pc, #80]	; (801a848 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a7f8:	881b      	ldrh	r3, [r3, #0]
 801a7fa:	4403      	add	r3, r0
 801a7fc:	429a      	cmp	r2, r3
 801a7fe:	da1a      	bge.n	801a836 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a800:	4b12      	ldr	r3, [pc, #72]	; (801a84c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a802:	681b      	ldr	r3, [r3, #0]
 801a804:	1a10      	subs	r0, r2, r0
 801a806:	210e      	movs	r1, #14
 801a808:	fb01 3000 	mla	r0, r1, r0, r3
 801a80c:	7b03      	ldrb	r3, [r0, #12]
 801a80e:	f003 031f 	and.w	r3, r3, #31
 801a812:	2b0b      	cmp	r3, #11
 801a814:	d10b      	bne.n	801a82e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a816:	8903      	ldrh	r3, [r0, #8]
 801a818:	8940      	ldrh	r0, [r0, #10]
 801a81a:	4358      	muls	r0, r3
 801a81c:	4b09      	ldr	r3, [pc, #36]	; (801a844 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a81e:	6819      	ldr	r1, [r3, #0]
 801a820:	3003      	adds	r0, #3
 801a822:	f020 0303 	bic.w	r3, r0, #3
 801a826:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a82a:	4418      	add	r0, r3
 801a82c:	4770      	bx	lr
 801a82e:	2b0d      	cmp	r3, #13
 801a830:	d101      	bne.n	801a836 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a832:	300d      	adds	r0, #13
 801a834:	4770      	bx	lr
 801a836:	2000      	movs	r0, #0
 801a838:	4770      	bx	lr
 801a83a:	bf00      	nop
 801a83c:	200138bc 	.word	0x200138bc
 801a840:	200138c4 	.word	0x200138c4
 801a844:	200138a0 	.word	0x200138a0
 801a848:	200138c0 	.word	0x200138c0
 801a84c:	200138a4 	.word	0x200138a4

0801a850 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a850:	b510      	push	{r4, lr}
 801a852:	4a17      	ldr	r2, [pc, #92]	; (801a8b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a854:	8803      	ldrh	r3, [r0, #0]
 801a856:	8812      	ldrh	r2, [r2, #0]
 801a858:	4293      	cmp	r3, r2
 801a85a:	d20c      	bcs.n	801a876 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a85c:	4a15      	ldr	r2, [pc, #84]	; (801a8b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a85e:	6812      	ldr	r2, [r2, #0]
 801a860:	2114      	movs	r1, #20
 801a862:	fb01 2303 	mla	r3, r1, r3, r2
 801a866:	7c58      	ldrb	r0, [r3, #17]
 801a868:	0942      	lsrs	r2, r0, #5
 801a86a:	7cd8      	ldrb	r0, [r3, #19]
 801a86c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a870:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a874:	bd10      	pop	{r4, pc}
 801a876:	4910      	ldr	r1, [pc, #64]	; (801a8b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a878:	8809      	ldrh	r1, [r1, #0]
 801a87a:	4411      	add	r1, r2
 801a87c:	428b      	cmp	r3, r1
 801a87e:	da09      	bge.n	801a894 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a880:	1a9b      	subs	r3, r3, r2
 801a882:	4a0e      	ldr	r2, [pc, #56]	; (801a8bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a884:	6812      	ldr	r2, [r2, #0]
 801a886:	210e      	movs	r1, #14
 801a888:	fb01 2303 	mla	r3, r1, r3, r2
 801a88c:	7b18      	ldrb	r0, [r3, #12]
 801a88e:	f000 001f 	and.w	r0, r0, #31
 801a892:	e7ef      	b.n	801a874 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a894:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a898:	4293      	cmp	r3, r2
 801a89a:	d106      	bne.n	801a8aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a89c:	f7ea f840 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 801a8a0:	6803      	ldr	r3, [r0, #0]
 801a8a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a8a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a8a8:	4718      	bx	r3
 801a8aa:	2000      	movs	r0, #0
 801a8ac:	e7e2      	b.n	801a874 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a8ae:	bf00      	nop
 801a8b0:	200138bc 	.word	0x200138bc
 801a8b4:	200138c4 	.word	0x200138c4
 801a8b8:	200138c0 	.word	0x200138c0
 801a8bc:	200138a4 	.word	0x200138a4

0801a8c0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a8c0:	2010      	movs	r0, #16
 801a8c2:	4770      	bx	lr

0801a8c4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a8c4:	2000      	movs	r0, #0
 801a8c6:	4770      	bx	lr

0801a8c8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a8c8:	4b02      	ldr	r3, [pc, #8]	; (801a8d4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a8ca:	8818      	ldrh	r0, [r3, #0]
 801a8cc:	0040      	lsls	r0, r0, #1
 801a8ce:	b280      	uxth	r0, r0
 801a8d0:	4770      	bx	lr
 801a8d2:	bf00      	nop
 801a8d4:	2001382e 	.word	0x2001382e

0801a8d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a8d8:	2bff      	cmp	r3, #255	; 0xff
 801a8da:	d050      	beq.n	801a97e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a8dc:	2a0b      	cmp	r2, #11
 801a8de:	d04a      	beq.n	801a976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a8e0:	d80e      	bhi.n	801a900 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a8e2:	2a03      	cmp	r2, #3
 801a8e4:	d03f      	beq.n	801a966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a8e6:	d804      	bhi.n	801a8f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a8e8:	2a01      	cmp	r2, #1
 801a8ea:	d03e      	beq.n	801a96a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a8ec:	d93f      	bls.n	801a96e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a8ee:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a8f0:	4770      	bx	lr
 801a8f2:	2a09      	cmp	r2, #9
 801a8f4:	d03f      	beq.n	801a976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a8f6:	d83c      	bhi.n	801a972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a8f8:	2a08      	cmp	r2, #8
 801a8fa:	d03a      	beq.n	801a972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a8fc:	2000      	movs	r0, #0
 801a8fe:	4770      	bx	lr
 801a900:	2a2f      	cmp	r2, #47	; 0x2f
 801a902:	d024      	beq.n	801a94e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a904:	d80d      	bhi.n	801a922 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a906:	2a2d      	cmp	r2, #45	; 0x2d
 801a908:	d014      	beq.n	801a934 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a90a:	d826      	bhi.n	801a95a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a90c:	2a2c      	cmp	r2, #44	; 0x2c
 801a90e:	d1f5      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a910:	684b      	ldr	r3, [r1, #4]
 801a912:	781b      	ldrb	r3, [r3, #0]
 801a914:	2b01      	cmp	r3, #1
 801a916:	d018      	beq.n	801a94a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a918:	d323      	bcc.n	801a962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a91a:	2b02      	cmp	r3, #2
 801a91c:	d1ee      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a91e:	6880      	ldr	r0, [r0, #8]
 801a920:	4770      	bx	lr
 801a922:	2a31      	cmp	r2, #49	; 0x31
 801a924:	d004      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a926:	d328      	bcc.n	801a97a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a928:	2a32      	cmp	r2, #50	; 0x32
 801a92a:	d026      	beq.n	801a97a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a92c:	2a33      	cmp	r2, #51	; 0x33
 801a92e:	d1e5      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a930:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a932:	4770      	bx	lr
 801a934:	684b      	ldr	r3, [r1, #4]
 801a936:	781b      	ldrb	r3, [r3, #0]
 801a938:	2b01      	cmp	r3, #1
 801a93a:	d004      	beq.n	801a946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a93c:	d30b      	bcc.n	801a956 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a93e:	2b02      	cmp	r3, #2
 801a940:	d1dc      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a942:	6900      	ldr	r0, [r0, #16]
 801a944:	4770      	bx	lr
 801a946:	6a00      	ldr	r0, [r0, #32]
 801a948:	4770      	bx	lr
 801a94a:	6980      	ldr	r0, [r0, #24]
 801a94c:	4770      	bx	lr
 801a94e:	684b      	ldr	r3, [r1, #4]
 801a950:	781b      	ldrb	r3, [r3, #0]
 801a952:	2b00      	cmp	r3, #0
 801a954:	d1d2      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a956:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a958:	4770      	bx	lr
 801a95a:	684b      	ldr	r3, [r1, #4]
 801a95c:	781b      	ldrb	r3, [r3, #0]
 801a95e:	2b00      	cmp	r3, #0
 801a960:	d1cc      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a962:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a964:	4770      	bx	lr
 801a966:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a968:	4770      	bx	lr
 801a96a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a96c:	4770      	bx	lr
 801a96e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a970:	4770      	bx	lr
 801a972:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a974:	4770      	bx	lr
 801a976:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a978:	4770      	bx	lr
 801a97a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a97c:	4770      	bx	lr
 801a97e:	2a0b      	cmp	r2, #11
 801a980:	d049      	beq.n	801aa16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a982:	d80e      	bhi.n	801a9a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a984:	2a03      	cmp	r2, #3
 801a986:	d040      	beq.n	801aa0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a988:	d804      	bhi.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a98a:	2a01      	cmp	r2, #1
 801a98c:	d03f      	beq.n	801aa0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a98e:	d940      	bls.n	801aa12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a990:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a992:	4770      	bx	lr
 801a994:	2a09      	cmp	r2, #9
 801a996:	d03e      	beq.n	801aa16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a998:	d801      	bhi.n	801a99e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a99a:	2a08      	cmp	r2, #8
 801a99c:	d1ae      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a99e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a9a0:	4770      	bx	lr
 801a9a2:	2a2f      	cmp	r2, #47	; 0x2f
 801a9a4:	d024      	beq.n	801a9f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a9a6:	d80d      	bhi.n	801a9c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a9a8:	2a2d      	cmp	r2, #45	; 0x2d
 801a9aa:	d014      	beq.n	801a9d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a9ac:	d826      	bhi.n	801a9fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a9ae:	2a2c      	cmp	r2, #44	; 0x2c
 801a9b0:	d1a4      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9b2:	684b      	ldr	r3, [r1, #4]
 801a9b4:	781b      	ldrb	r3, [r3, #0]
 801a9b6:	2b01      	cmp	r3, #1
 801a9b8:	d018      	beq.n	801a9ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a9ba:	d324      	bcc.n	801aa06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a9bc:	2b02      	cmp	r3, #2
 801a9be:	d19d      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9c0:	68c0      	ldr	r0, [r0, #12]
 801a9c2:	4770      	bx	lr
 801a9c4:	2a31      	cmp	r2, #49	; 0x31
 801a9c6:	d004      	beq.n	801a9d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a9c8:	d327      	bcc.n	801aa1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a9ca:	2a32      	cmp	r2, #50	; 0x32
 801a9cc:	d025      	beq.n	801aa1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a9ce:	2a33      	cmp	r2, #51	; 0x33
 801a9d0:	d194      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9d2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a9d4:	4770      	bx	lr
 801a9d6:	684b      	ldr	r3, [r1, #4]
 801a9d8:	781b      	ldrb	r3, [r3, #0]
 801a9da:	2b01      	cmp	r3, #1
 801a9dc:	d004      	beq.n	801a9e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a9de:	d30b      	bcc.n	801a9f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a9e0:	2b02      	cmp	r3, #2
 801a9e2:	d18b      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9e4:	6940      	ldr	r0, [r0, #20]
 801a9e6:	4770      	bx	lr
 801a9e8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a9ea:	4770      	bx	lr
 801a9ec:	69c0      	ldr	r0, [r0, #28]
 801a9ee:	4770      	bx	lr
 801a9f0:	684b      	ldr	r3, [r1, #4]
 801a9f2:	781b      	ldrb	r3, [r3, #0]
 801a9f4:	2b00      	cmp	r3, #0
 801a9f6:	d181      	bne.n	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9f8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a9fa:	4770      	bx	lr
 801a9fc:	684b      	ldr	r3, [r1, #4]
 801a9fe:	781b      	ldrb	r3, [r3, #0]
 801aa00:	2b00      	cmp	r3, #0
 801aa02:	f47f af7b 	bne.w	801a8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa06:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801aa08:	4770      	bx	lr
 801aa0a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801aa0c:	4770      	bx	lr
 801aa0e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801aa10:	4770      	bx	lr
 801aa12:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801aa14:	4770      	bx	lr
 801aa16:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801aa18:	4770      	bx	lr
 801aa1a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801aa1c:	4770      	bx	lr

0801aa1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa22:	b087      	sub	sp, #28
 801aa24:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa26:	9205      	str	r2, [sp, #20]
 801aa28:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aa2c:	9202      	str	r2, [sp, #8]
 801aa2e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aa32:	9101      	str	r1, [sp, #4]
 801aa34:	6841      	ldr	r1, [r0, #4]
 801aa36:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801aa3a:	fb01 2404 	mla	r4, r1, r4, r2
 801aa3e:	6802      	ldr	r2, [r0, #0]
 801aa40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa44:	f8de 2000 	ldr.w	r2, [lr]
 801aa48:	9203      	str	r2, [sp, #12]
 801aa4a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aa4e:	3204      	adds	r2, #4
 801aa50:	9204      	str	r2, [sp, #16]
 801aa52:	9a02      	ldr	r2, [sp, #8]
 801aa54:	43d6      	mvns	r6, r2
 801aa56:	b2f6      	uxtb	r6, r6
 801aa58:	9a01      	ldr	r2, [sp, #4]
 801aa5a:	2a00      	cmp	r2, #0
 801aa5c:	dc03      	bgt.n	801aa66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aa5e:	9a05      	ldr	r2, [sp, #20]
 801aa60:	2a00      	cmp	r2, #0
 801aa62:	f340 8129 	ble.w	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801aa66:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa68:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801aa6c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801aa70:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa74:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa76:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa7a:	2b00      	cmp	r3, #0
 801aa7c:	dd0e      	ble.n	801aa9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aa7e:	1408      	asrs	r0, r1, #16
 801aa80:	d405      	bmi.n	801aa8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa82:	4560      	cmp	r0, ip
 801aa84:	da03      	bge.n	801aa8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa86:	1410      	asrs	r0, r2, #16
 801aa88:	d401      	bmi.n	801aa8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa8a:	42b8      	cmp	r0, r7
 801aa8c:	db07      	blt.n	801aa9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aa8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aa90:	4401      	add	r1, r0
 801aa92:	9814      	ldr	r0, [sp, #80]	; 0x50
 801aa94:	3b01      	subs	r3, #1
 801aa96:	4402      	add	r2, r0
 801aa98:	3402      	adds	r4, #2
 801aa9a:	e7ee      	b.n	801aa7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801aa9c:	d071      	beq.n	801ab82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa9e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aaa0:	1e58      	subs	r0, r3, #1
 801aaa2:	fb05 1500 	mla	r5, r5, r0, r1
 801aaa6:	142d      	asrs	r5, r5, #16
 801aaa8:	d45f      	bmi.n	801ab6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aaaa:	4565      	cmp	r5, ip
 801aaac:	da5d      	bge.n	801ab6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aaae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aab0:	fb05 2000 	mla	r0, r5, r0, r2
 801aab4:	1400      	asrs	r0, r0, #16
 801aab6:	d458      	bmi.n	801ab6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aab8:	42b8      	cmp	r0, r7
 801aaba:	da56      	bge.n	801ab6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aabc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801aac0:	4699      	mov	r9, r3
 801aac2:	46a2      	mov	sl, r4
 801aac4:	f1b9 0f00 	cmp.w	r9, #0
 801aac8:	dd57      	ble.n	801ab7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801aaca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aace:	9803      	ldr	r0, [sp, #12]
 801aad0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801aad4:	140d      	asrs	r5, r1, #16
 801aad6:	fb07 000c 	mla	r0, r7, ip, r0
 801aada:	f109 39ff 	add.w	r9, r9, #4294967295
 801aade:	5d40      	ldrb	r0, [r0, r5]
 801aae0:	9d04      	ldr	r5, [sp, #16]
 801aae2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801aae6:	f8ba 5000 	ldrh.w	r5, [sl]
 801aaea:	122f      	asrs	r7, r5, #8
 801aaec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801aaf0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aaf4:	fb17 f706 	smulbb	r7, r7, r6
 801aaf8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801aafc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab00:	00ed      	lsls	r5, r5, #3
 801ab02:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ab06:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ab0a:	10c7      	asrs	r7, r0, #3
 801ab0c:	b2ed      	uxtb	r5, r5
 801ab0e:	00c0      	lsls	r0, r0, #3
 801ab10:	fb18 f806 	smulbb	r8, r8, r6
 801ab14:	fb15 f506 	smulbb	r5, r5, r6
 801ab18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ab1c:	b2c0      	uxtb	r0, r0
 801ab1e:	fa1f fc8c 	uxth.w	ip, ip
 801ab22:	fb07 870b 	mla	r7, r7, fp, r8
 801ab26:	fb00 500b 	mla	r0, r0, fp, r5
 801ab2a:	b280      	uxth	r0, r0
 801ab2c:	b2bf      	uxth	r7, r7
 801ab2e:	f10c 0501 	add.w	r5, ip, #1
 801ab32:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ab36:	f107 0801 	add.w	r8, r7, #1
 801ab3a:	1c45      	adds	r5, r0, #1
 801ab3c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ab40:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ab44:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab4a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ab4e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ab52:	ea45 0c0c 	orr.w	ip, r5, ip
 801ab56:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ab5a:	4401      	add	r1, r0
 801ab5c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ab5e:	ea4c 0c08 	orr.w	ip, ip, r8
 801ab62:	f82a cb02 	strh.w	ip, [sl], #2
 801ab66:	4402      	add	r2, r0
 801ab68:	e7ac      	b.n	801aac4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ab6a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ab6e:	f04f 0800 	mov.w	r8, #0
 801ab72:	eb03 0008 	add.w	r0, r3, r8
 801ab76:	2800      	cmp	r0, #0
 801ab78:	dc41      	bgt.n	801abfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ab7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab82:	9b01      	ldr	r3, [sp, #4]
 801ab84:	2b00      	cmp	r3, #0
 801ab86:	f340 8097 	ble.w	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ab8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab8e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab92:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ab96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aba0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aba4:	eef0 6a62 	vmov.f32	s13, s5
 801aba8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abb4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801abb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abbc:	eef0 6a43 	vmov.f32	s13, s6
 801abc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abc4:	ee12 2a90 	vmov	r2, s5
 801abc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abcc:	fb92 f3f3 	sdiv	r3, r2, r3
 801abd0:	ee13 2a10 	vmov	r2, s6
 801abd4:	9313      	str	r3, [sp, #76]	; 0x4c
 801abd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abd8:	fb92 f3f3 	sdiv	r3, r2, r3
 801abdc:	9314      	str	r3, [sp, #80]	; 0x50
 801abde:	9b01      	ldr	r3, [sp, #4]
 801abe0:	9a05      	ldr	r2, [sp, #20]
 801abe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abe6:	3b01      	subs	r3, #1
 801abe8:	9301      	str	r3, [sp, #4]
 801abea:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801abee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abf0:	eeb0 3a67 	vmov.f32	s6, s15
 801abf4:	bf08      	it	eq
 801abf6:	4613      	moveq	r3, r2
 801abf8:	eef0 2a47 	vmov.f32	s5, s14
 801abfc:	e72c      	b.n	801aa58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801abfe:	140f      	asrs	r7, r1, #16
 801ac00:	d453      	bmi.n	801acaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ac02:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ac06:	42bd      	cmp	r5, r7
 801ac08:	dd4f      	ble.n	801acaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ac0a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ac0e:	d44c      	bmi.n	801acaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ac10:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ac14:	4560      	cmp	r0, ip
 801ac16:	dd48      	ble.n	801acaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ac18:	9803      	ldr	r0, [sp, #12]
 801ac1a:	b22d      	sxth	r5, r5
 801ac1c:	fb0c 0505 	mla	r5, ip, r5, r0
 801ac20:	5de8      	ldrb	r0, [r5, r7]
 801ac22:	9d04      	ldr	r5, [sp, #16]
 801ac24:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ac28:	f06f 0501 	mvn.w	r5, #1
 801ac2c:	fb05 fb08 	mul.w	fp, r5, r8
 801ac30:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ac34:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ac38:	122f      	asrs	r7, r5, #8
 801ac3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac3e:	fb17 f706 	smulbb	r7, r7, r6
 801ac42:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ac46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac4a:	00ed      	lsls	r5, r5, #3
 801ac4c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ac50:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ac54:	10c7      	asrs	r7, r0, #3
 801ac56:	b2ed      	uxtb	r5, r5
 801ac58:	00c0      	lsls	r0, r0, #3
 801ac5a:	fb19 f906 	smulbb	r9, r9, r6
 801ac5e:	fb15 f506 	smulbb	r5, r5, r6
 801ac62:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac66:	b2c0      	uxtb	r0, r0
 801ac68:	fa1f fc8c 	uxth.w	ip, ip
 801ac6c:	fb07 970a 	mla	r7, r7, sl, r9
 801ac70:	fb00 500a 	mla	r0, r0, sl, r5
 801ac74:	b2bf      	uxth	r7, r7
 801ac76:	b280      	uxth	r0, r0
 801ac78:	f10c 0501 	add.w	r5, ip, #1
 801ac7c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ac80:	f107 0901 	add.w	r9, r7, #1
 801ac84:	1c45      	adds	r5, r0, #1
 801ac86:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ac8a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ac8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac96:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ac9a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac9e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801aca2:	ea4c 0c09 	orr.w	ip, ip, r9
 801aca6:	f824 c00b 	strh.w	ip, [r4, fp]
 801acaa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801acac:	4401      	add	r1, r0
 801acae:	9814      	ldr	r0, [sp, #80]	; 0x50
 801acb0:	f108 38ff 	add.w	r8, r8, #4294967295
 801acb4:	4402      	add	r2, r0
 801acb6:	e75c      	b.n	801ab72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801acb8:	b007      	add	sp, #28
 801acba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801acbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acc2:	b085      	sub	sp, #20
 801acc4:	4693      	mov	fp, r2
 801acc6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801acc8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801acca:	6870      	ldr	r0, [r6, #4]
 801accc:	9100      	str	r1, [sp, #0]
 801acce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801acd2:	fb00 2404 	mla	r4, r0, r4, r2
 801acd6:	6832      	ldr	r2, [r6, #0]
 801acd8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801acdc:	682a      	ldr	r2, [r5, #0]
 801acde:	9201      	str	r2, [sp, #4]
 801ace0:	686a      	ldr	r2, [r5, #4]
 801ace2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ace6:	3204      	adds	r2, #4
 801ace8:	9202      	str	r2, [sp, #8]
 801acea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801acee:	9a00      	ldr	r2, [sp, #0]
 801acf0:	2a00      	cmp	r2, #0
 801acf2:	dc03      	bgt.n	801acfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801acf4:	f1bb 0f00 	cmp.w	fp, #0
 801acf8:	f340 80a0 	ble.w	801ae3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801acfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acfe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ad02:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ad06:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ad0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad10:	2b00      	cmp	r3, #0
 801ad12:	dd0c      	ble.n	801ad2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad14:	1406      	asrs	r6, r0, #16
 801ad16:	d405      	bmi.n	801ad24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad18:	454e      	cmp	r6, r9
 801ad1a:	da03      	bge.n	801ad24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad1c:	1416      	asrs	r6, r2, #16
 801ad1e:	d401      	bmi.n	801ad24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad20:	4546      	cmp	r6, r8
 801ad22:	db05      	blt.n	801ad30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ad24:	4470      	add	r0, lr
 801ad26:	4462      	add	r2, ip
 801ad28:	3b01      	subs	r3, #1
 801ad2a:	3402      	adds	r4, #2
 801ad2c:	e7f0      	b.n	801ad10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ad2e:	d00f      	beq.n	801ad50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ad30:	1e5e      	subs	r6, r3, #1
 801ad32:	fb0e 0706 	mla	r7, lr, r6, r0
 801ad36:	143f      	asrs	r7, r7, #16
 801ad38:	d541      	bpl.n	801adbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ad3a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ad3e:	4698      	mov	r8, r3
 801ad40:	9603      	str	r6, [sp, #12]
 801ad42:	f1b8 0f00 	cmp.w	r8, #0
 801ad46:	dc59      	bgt.n	801adfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad4c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad50:	9b00      	ldr	r3, [sp, #0]
 801ad52:	2b00      	cmp	r3, #0
 801ad54:	dd72      	ble.n	801ae3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ad56:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad5e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad64:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad6c:	eeb0 6a62 	vmov.f32	s12, s5
 801ad70:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad78:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad7c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad84:	eeb0 6a43 	vmov.f32	s12, s6
 801ad88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad8c:	ee12 2a90 	vmov	r2, s5
 801ad90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad94:	fb92 fef3 	sdiv	lr, r2, r3
 801ad98:	ee13 2a10 	vmov	r2, s6
 801ad9c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ada0:	9b00      	ldr	r3, [sp, #0]
 801ada2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ada6:	3b01      	subs	r3, #1
 801ada8:	9300      	str	r3, [sp, #0]
 801adaa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801adae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adb0:	eeb0 3a67 	vmov.f32	s6, s15
 801adb4:	bf08      	it	eq
 801adb6:	465b      	moveq	r3, fp
 801adb8:	eef0 2a47 	vmov.f32	s5, s14
 801adbc:	e797      	b.n	801acee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801adbe:	454f      	cmp	r7, r9
 801adc0:	dabb      	bge.n	801ad3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adc2:	fb0c 2606 	mla	r6, ip, r6, r2
 801adc6:	1436      	asrs	r6, r6, #16
 801adc8:	d4b7      	bmi.n	801ad3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adca:	4546      	cmp	r6, r8
 801adcc:	dab5      	bge.n	801ad3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adce:	461e      	mov	r6, r3
 801add0:	46a0      	mov	r8, r4
 801add2:	2e00      	cmp	r6, #0
 801add4:	ddb8      	ble.n	801ad48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801add6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801adda:	9901      	ldr	r1, [sp, #4]
 801addc:	1417      	asrs	r7, r2, #16
 801adde:	ea4f 4920 	mov.w	r9, r0, asr #16
 801ade2:	fb0a 1707 	mla	r7, sl, r7, r1
 801ade6:	9902      	ldr	r1, [sp, #8]
 801ade8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801adec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801adf0:	f828 7b02 	strh.w	r7, [r8], #2
 801adf4:	4470      	add	r0, lr
 801adf6:	4462      	add	r2, ip
 801adf8:	3e01      	subs	r6, #1
 801adfa:	e7ea      	b.n	801add2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801adfc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ae00:	d417      	bmi.n	801ae32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ae02:	68ae      	ldr	r6, [r5, #8]
 801ae04:	454e      	cmp	r6, r9
 801ae06:	dd14      	ble.n	801ae32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ae08:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801ae0c:	d411      	bmi.n	801ae32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ae0e:	68ef      	ldr	r7, [r5, #12]
 801ae10:	4557      	cmp	r7, sl
 801ae12:	dd0e      	ble.n	801ae32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ae14:	9f01      	ldr	r7, [sp, #4]
 801ae16:	b236      	sxth	r6, r6
 801ae18:	fb0a 7606 	mla	r6, sl, r6, r7
 801ae1c:	9f02      	ldr	r7, [sp, #8]
 801ae1e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801ae22:	f06f 0101 	mvn.w	r1, #1
 801ae26:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801ae2a:	fb01 f608 	mul.w	r6, r1, r8
 801ae2e:	9903      	ldr	r1, [sp, #12]
 801ae30:	538f      	strh	r7, [r1, r6]
 801ae32:	4470      	add	r0, lr
 801ae34:	4462      	add	r2, ip
 801ae36:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae3a:	e782      	b.n	801ad42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ae3c:	b005      	add	sp, #20
 801ae3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae46:	b087      	sub	sp, #28
 801ae48:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae4a:	9205      	str	r2, [sp, #20]
 801ae4c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ae50:	9203      	str	r2, [sp, #12]
 801ae52:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801ae56:	9102      	str	r1, [sp, #8]
 801ae58:	6861      	ldr	r1, [r4, #4]
 801ae5a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801ae5e:	fb01 2000 	mla	r0, r1, r0, r2
 801ae62:	6822      	ldr	r2, [r4, #0]
 801ae64:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801ae68:	9200      	str	r2, [sp, #0]
 801ae6a:	f8dc 2000 	ldr.w	r2, [ip]
 801ae6e:	9204      	str	r2, [sp, #16]
 801ae70:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ae74:	3204      	adds	r2, #4
 801ae76:	9201      	str	r2, [sp, #4]
 801ae78:	9a03      	ldr	r2, [sp, #12]
 801ae7a:	43d5      	mvns	r5, r2
 801ae7c:	b2ed      	uxtb	r5, r5
 801ae7e:	9a02      	ldr	r2, [sp, #8]
 801ae80:	2a00      	cmp	r2, #0
 801ae82:	dc03      	bgt.n	801ae8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ae84:	9a05      	ldr	r2, [sp, #20]
 801ae86:	2a00      	cmp	r2, #0
 801ae88:	f340 812c 	ble.w	801b0e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ae8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ae8e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801ae92:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801ae96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ae9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aea0:	2b00      	cmp	r3, #0
 801aea2:	dd10      	ble.n	801aec6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801aea4:	140c      	asrs	r4, r1, #16
 801aea6:	d405      	bmi.n	801aeb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aea8:	4574      	cmp	r4, lr
 801aeaa:	da03      	bge.n	801aeb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aeac:	1414      	asrs	r4, r2, #16
 801aeae:	d401      	bmi.n	801aeb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aeb0:	42bc      	cmp	r4, r7
 801aeb2:	db09      	blt.n	801aec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aeb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aeb6:	9800      	ldr	r0, [sp, #0]
 801aeb8:	4421      	add	r1, r4
 801aeba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aebc:	3002      	adds	r0, #2
 801aebe:	4422      	add	r2, r4
 801aec0:	3b01      	subs	r3, #1
 801aec2:	9000      	str	r0, [sp, #0]
 801aec4:	e7ec      	b.n	801aea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aec6:	d071      	beq.n	801afac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801aec8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801aeca:	1e5c      	subs	r4, r3, #1
 801aecc:	fb06 1604 	mla	r6, r6, r4, r1
 801aed0:	1436      	asrs	r6, r6, #16
 801aed2:	d45d      	bmi.n	801af90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aed4:	4576      	cmp	r6, lr
 801aed6:	da5b      	bge.n	801af90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aed8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801aeda:	fb06 2404 	mla	r4, r6, r4, r2
 801aede:	1424      	asrs	r4, r4, #16
 801aee0:	d456      	bmi.n	801af90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aee2:	42bc      	cmp	r4, r7
 801aee4:	da54      	bge.n	801af90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aee6:	f8dd 9000 	ldr.w	r9, [sp]
 801aeea:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801aeee:	4698      	mov	r8, r3
 801aef0:	f1b8 0f00 	cmp.w	r8, #0
 801aef4:	dd54      	ble.n	801afa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aef6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801aefa:	9804      	ldr	r0, [sp, #16]
 801aefc:	1414      	asrs	r4, r2, #16
 801aefe:	fb07 0404 	mla	r4, r7, r4, r0
 801af02:	140e      	asrs	r6, r1, #16
 801af04:	9801      	ldr	r0, [sp, #4]
 801af06:	f814 e006 	ldrb.w	lr, [r4, r6]
 801af0a:	f8b9 4000 	ldrh.w	r4, [r9]
 801af0e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801af12:	eb00 0b0e 	add.w	fp, r0, lr
 801af16:	1227      	asrs	r7, r4, #8
 801af18:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801af1c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801af20:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801af24:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801af26:	fb16 f60a 	smulbb	r6, r6, sl
 801af2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af2e:	fb07 6705 	mla	r7, r7, r5, r6
 801af32:	10e6      	asrs	r6, r4, #3
 801af34:	00e4      	lsls	r4, r4, #3
 801af36:	b2e4      	uxtb	r4, r4
 801af38:	fb1b fb0a 	smulbb	fp, fp, sl
 801af3c:	fb14 f405 	smulbb	r4, r4, r5
 801af40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af44:	b2bf      	uxth	r7, r7
 801af46:	fb06 b605 	mla	r6, r6, r5, fp
 801af4a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801af4e:	b2b6      	uxth	r6, r6
 801af50:	fa1f fe8e 	uxth.w	lr, lr
 801af54:	1c7c      	adds	r4, r7, #1
 801af56:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801af5a:	f106 0b01 	add.w	fp, r6, #1
 801af5e:	f10e 0401 	add.w	r4, lr, #1
 801af62:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801af66:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801af6a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801af6e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801af72:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801af76:	4327      	orrs	r7, r4
 801af78:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801af7c:	4401      	add	r1, r0
 801af7e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801af80:	ea47 070b 	orr.w	r7, r7, fp
 801af84:	f829 7b02 	strh.w	r7, [r9], #2
 801af88:	4402      	add	r2, r0
 801af8a:	f108 38ff 	add.w	r8, r8, #4294967295
 801af8e:	e7af      	b.n	801aef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af90:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801af94:	f04f 0e00 	mov.w	lr, #0
 801af98:	eb03 040e 	add.w	r4, r3, lr
 801af9c:	2c00      	cmp	r4, #0
 801af9e:	dc43      	bgt.n	801b028 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801afa0:	9a00      	ldr	r2, [sp, #0]
 801afa2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afa6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801afaa:	9300      	str	r3, [sp, #0]
 801afac:	9b02      	ldr	r3, [sp, #8]
 801afae:	2b00      	cmp	r3, #0
 801afb0:	f340 8098 	ble.w	801b0e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801afbc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afce:	eef0 6a62 	vmov.f32	s13, s5
 801afd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afda:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afde:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801afe2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afe6:	eef0 6a43 	vmov.f32	s13, s6
 801afea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afee:	ee12 2a90 	vmov	r2, s5
 801aff2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aff6:	fb92 f3f3 	sdiv	r3, r2, r3
 801affa:	ee13 2a10 	vmov	r2, s6
 801affe:	9313      	str	r3, [sp, #76]	; 0x4c
 801b000:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b002:	fb92 f3f3 	sdiv	r3, r2, r3
 801b006:	9314      	str	r3, [sp, #80]	; 0x50
 801b008:	9b02      	ldr	r3, [sp, #8]
 801b00a:	9a05      	ldr	r2, [sp, #20]
 801b00c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b010:	3b01      	subs	r3, #1
 801b012:	9302      	str	r3, [sp, #8]
 801b014:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801b018:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b01a:	eeb0 3a67 	vmov.f32	s6, s15
 801b01e:	bf08      	it	eq
 801b020:	4613      	moveq	r3, r2
 801b022:	eef0 2a47 	vmov.f32	s5, s14
 801b026:	e72a      	b.n	801ae7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b028:	140f      	asrs	r7, r1, #16
 801b02a:	d454      	bmi.n	801b0d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b02c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b030:	42be      	cmp	r6, r7
 801b032:	dd50      	ble.n	801b0d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b034:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b038:	d44d      	bmi.n	801b0d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b03a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b03e:	4544      	cmp	r4, r8
 801b040:	dd49      	ble.n	801b0d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b042:	9c04      	ldr	r4, [sp, #16]
 801b044:	b236      	sxth	r6, r6
 801b046:	fb08 4606 	mla	r6, r8, r6, r4
 801b04a:	f06f 0001 	mvn.w	r0, #1
 801b04e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b052:	9c01      	ldr	r4, [sp, #4]
 801b054:	fb00 fa0e 	mul.w	sl, r0, lr
 801b058:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b05c:	9800      	ldr	r0, [sp, #0]
 801b05e:	eb04 0b08 	add.w	fp, r4, r8
 801b062:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b066:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b06a:	9801      	ldr	r0, [sp, #4]
 801b06c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b070:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b074:	9800      	ldr	r0, [sp, #0]
 801b076:	1227      	asrs	r7, r4, #8
 801b078:	fb16 f609 	smulbb	r6, r6, r9
 801b07c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b080:	fb07 6705 	mla	r7, r7, r5, r6
 801b084:	10e6      	asrs	r6, r4, #3
 801b086:	00e4      	lsls	r4, r4, #3
 801b088:	b2e4      	uxtb	r4, r4
 801b08a:	fb1b fb09 	smulbb	fp, fp, r9
 801b08e:	fb14 f405 	smulbb	r4, r4, r5
 801b092:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b096:	b2bf      	uxth	r7, r7
 801b098:	fb06 b605 	mla	r6, r6, r5, fp
 801b09c:	fb08 4809 	mla	r8, r8, r9, r4
 801b0a0:	b2b6      	uxth	r6, r6
 801b0a2:	fa1f f888 	uxth.w	r8, r8
 801b0a6:	1c7c      	adds	r4, r7, #1
 801b0a8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b0ac:	f106 0b01 	add.w	fp, r6, #1
 801b0b0:	f108 0401 	add.w	r4, r8, #1
 801b0b4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b0b8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b0bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b0c0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b0c4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b0c8:	4327      	orrs	r7, r4
 801b0ca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b0ce:	ea47 070b 	orr.w	r7, r7, fp
 801b0d2:	f820 700a 	strh.w	r7, [r0, sl]
 801b0d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b0d8:	4401      	add	r1, r0
 801b0da:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b0dc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b0e0:	4402      	add	r2, r0
 801b0e2:	e759      	b.n	801af98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0e4:	b007      	add	sp, #28
 801b0e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b0ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0f0:	b085      	sub	sp, #20
 801b0f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b0f6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b0f8:	9203      	str	r2, [sp, #12]
 801b0fa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b0fe:	6870      	ldr	r0, [r6, #4]
 801b100:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b102:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801b106:	686f      	ldr	r7, [r5, #4]
 801b108:	9101      	str	r1, [sp, #4]
 801b10a:	fb00 2404 	mla	r4, r0, r4, r2
 801b10e:	6832      	ldr	r2, [r6, #0]
 801b110:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b114:	682a      	ldr	r2, [r5, #0]
 801b116:	9202      	str	r2, [sp, #8]
 801b118:	3704      	adds	r7, #4
 801b11a:	9a01      	ldr	r2, [sp, #4]
 801b11c:	2a00      	cmp	r2, #0
 801b11e:	dc03      	bgt.n	801b128 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b120:	9a03      	ldr	r2, [sp, #12]
 801b122:	2a00      	cmp	r2, #0
 801b124:	f340 80cc 	ble.w	801b2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b128:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b12a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b12e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b132:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b136:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b138:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b13c:	2b00      	cmp	r3, #0
 801b13e:	dd0d      	ble.n	801b15c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b140:	1406      	asrs	r6, r0, #16
 801b142:	d405      	bmi.n	801b150 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b144:	454e      	cmp	r6, r9
 801b146:	da03      	bge.n	801b150 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b148:	1416      	asrs	r6, r2, #16
 801b14a:	d401      	bmi.n	801b150 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b14c:	4546      	cmp	r6, r8
 801b14e:	db06      	blt.n	801b15e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b150:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801b152:	4460      	add	r0, ip
 801b154:	4432      	add	r2, r6
 801b156:	3b01      	subs	r3, #1
 801b158:	3402      	adds	r4, #2
 801b15a:	e7ef      	b.n	801b13c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b15c:	d00f      	beq.n	801b17e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b15e:	1e5e      	subs	r6, r3, #1
 801b160:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b164:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b168:	d543      	bpl.n	801b1f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b16a:	4698      	mov	r8, r3
 801b16c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b170:	f1b8 0f00 	cmp.w	r8, #0
 801b174:	dc71      	bgt.n	801b25a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b176:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b17a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b17e:	9b01      	ldr	r3, [sp, #4]
 801b180:	2b00      	cmp	r3, #0
 801b182:	f340 809d 	ble.w	801b2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b186:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b18a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b18e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b192:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b194:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b198:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b19c:	eeb0 6a62 	vmov.f32	s12, s5
 801b1a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b1b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1b4:	eeb0 6a43 	vmov.f32	s12, s6
 801b1b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1bc:	ee12 2a90 	vmov	r2, s5
 801b1c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1c4:	fb92 fcf3 	sdiv	ip, r2, r3
 801b1c8:	ee13 2a10 	vmov	r2, s6
 801b1cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1d0:	9312      	str	r3, [sp, #72]	; 0x48
 801b1d2:	9b01      	ldr	r3, [sp, #4]
 801b1d4:	9a03      	ldr	r2, [sp, #12]
 801b1d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1da:	3b01      	subs	r3, #1
 801b1dc:	9301      	str	r3, [sp, #4]
 801b1de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b1e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1e4:	eeb0 3a67 	vmov.f32	s6, s15
 801b1e8:	bf08      	it	eq
 801b1ea:	4613      	moveq	r3, r2
 801b1ec:	eef0 2a47 	vmov.f32	s5, s14
 801b1f0:	e793      	b.n	801b11a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b1f2:	45ce      	cmp	lr, r9
 801b1f4:	dab9      	bge.n	801b16a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1f6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b1f8:	fb01 2606 	mla	r6, r1, r6, r2
 801b1fc:	1436      	asrs	r6, r6, #16
 801b1fe:	d4b4      	bmi.n	801b16a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b200:	4546      	cmp	r6, r8
 801b202:	dab2      	bge.n	801b16a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b204:	4698      	mov	r8, r3
 801b206:	46a2      	mov	sl, r4
 801b208:	f1b8 0f00 	cmp.w	r8, #0
 801b20c:	ddb3      	ble.n	801b176 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b20e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b212:	9902      	ldr	r1, [sp, #8]
 801b214:	1416      	asrs	r6, r2, #16
 801b216:	fb09 1606 	mla	r6, r9, r6, r1
 801b21a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b21e:	492a      	ldr	r1, [pc, #168]	; (801b2c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b220:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b224:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b228:	eb07 0b0e 	add.w	fp, r7, lr
 801b22c:	4460      	add	r0, ip
 801b22e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b232:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b236:	00f6      	lsls	r6, r6, #3
 801b238:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b23c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b240:	ea49 0606 	orr.w	r6, r9, r6
 801b244:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b248:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b24a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b24e:	f82a 6b02 	strh.w	r6, [sl], #2
 801b252:	440a      	add	r2, r1
 801b254:	f108 38ff 	add.w	r8, r8, #4294967295
 801b258:	e7d6      	b.n	801b208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b25a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b25e:	d429      	bmi.n	801b2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b260:	68ae      	ldr	r6, [r5, #8]
 801b262:	454e      	cmp	r6, r9
 801b264:	dd26      	ble.n	801b2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b266:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b26a:	d423      	bmi.n	801b2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b26c:	68e9      	ldr	r1, [r5, #12]
 801b26e:	4559      	cmp	r1, fp
 801b270:	dd20      	ble.n	801b2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b272:	9902      	ldr	r1, [sp, #8]
 801b274:	fa0f fe86 	sxth.w	lr, r6
 801b278:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b27c:	f06f 0101 	mvn.w	r1, #1
 801b280:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b284:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b288:	eb07 060e 	add.w	r6, r7, lr
 801b28c:	fb01 f908 	mul.w	r9, r1, r8
 801b290:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b294:	7876      	ldrb	r6, [r6, #1]
 801b296:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801b29a:	00f6      	lsls	r6, r6, #3
 801b29c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b2a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b2a4:	ea4b 0606 	orr.w	r6, fp, r6
 801b2a8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801b2ac:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801b2b0:	f82a 6009 	strh.w	r6, [sl, r9]
 801b2b4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b2b6:	4460      	add	r0, ip
 801b2b8:	440a      	add	r2, r1
 801b2ba:	f108 38ff 	add.w	r8, r8, #4294967295
 801b2be:	e757      	b.n	801b170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b2c0:	b005      	add	sp, #20
 801b2c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2c6:	bf00      	nop
 801b2c8:	fffff800 	.word	0xfffff800

0801b2cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2d0:	b087      	sub	sp, #28
 801b2d2:	468b      	mov	fp, r1
 801b2d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b2d6:	9204      	str	r2, [sp, #16]
 801b2d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b2dc:	9205      	str	r2, [sp, #20]
 801b2de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b2e2:	6841      	ldr	r1, [r0, #4]
 801b2e4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801b2e8:	fb01 2404 	mla	r4, r1, r4, r2
 801b2ec:	6802      	ldr	r2, [r0, #0]
 801b2ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b2f2:	f8dc 2000 	ldr.w	r2, [ip]
 801b2f6:	9201      	str	r2, [sp, #4]
 801b2f8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b2fc:	3204      	adds	r2, #4
 801b2fe:	9202      	str	r2, [sp, #8]
 801b300:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b304:	f1bb 0f00 	cmp.w	fp, #0
 801b308:	dc03      	bgt.n	801b312 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b30a:	9a04      	ldr	r2, [sp, #16]
 801b30c:	2a00      	cmp	r2, #0
 801b30e:	f340 8138 	ble.w	801b582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b312:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b314:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b318:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801b31c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b320:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b322:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b326:	2b00      	cmp	r3, #0
 801b328:	dd0e      	ble.n	801b348 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b32a:	1402      	asrs	r2, r0, #16
 801b32c:	d405      	bmi.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b32e:	42ba      	cmp	r2, r7
 801b330:	da03      	bge.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b332:	140a      	asrs	r2, r1, #16
 801b334:	d401      	bmi.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b336:	42b2      	cmp	r2, r6
 801b338:	db07      	blt.n	801b34a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b33a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b33c:	4410      	add	r0, r2
 801b33e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b340:	3b01      	subs	r3, #1
 801b342:	4411      	add	r1, r2
 801b344:	3402      	adds	r4, #2
 801b346:	e7ee      	b.n	801b326 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b348:	d019      	beq.n	801b37e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b34a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b34c:	1e5a      	subs	r2, r3, #1
 801b34e:	fb05 0502 	mla	r5, r5, r2, r0
 801b352:	142d      	asrs	r5, r5, #16
 801b354:	d409      	bmi.n	801b36a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b356:	42bd      	cmp	r5, r7
 801b358:	da07      	bge.n	801b36a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b35a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b35c:	fb05 1202 	mla	r2, r5, r2, r1
 801b360:	1412      	asrs	r2, r2, #16
 801b362:	d402      	bmi.n	801b36a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b364:	42b2      	cmp	r2, r6
 801b366:	f2c0 80ac 	blt.w	801b4c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b36a:	f04f 0e00 	mov.w	lr, #0
 801b36e:	eb03 020e 	add.w	r2, r3, lr
 801b372:	2a00      	cmp	r2, #0
 801b374:	dc3e      	bgt.n	801b3f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b376:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b37a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b37e:	f1bb 0f00 	cmp.w	fp, #0
 801b382:	f340 80fe 	ble.w	801b582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b386:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b38a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b38e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b392:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b394:	f1bb 0b01 	subs.w	fp, fp, #1
 801b398:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b39c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b3a0:	eeb0 6a62 	vmov.f32	s12, s5
 801b3a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b3a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3b0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b3b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3b8:	eeb0 6a43 	vmov.f32	s12, s6
 801b3bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3c0:	ee12 2a90 	vmov	r2, s5
 801b3c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3cc:	ee13 2a10 	vmov	r2, s6
 801b3d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801b3d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3dc:	9a04      	ldr	r2, [sp, #16]
 801b3de:	9314      	str	r3, [sp, #80]	; 0x50
 801b3e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b3e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3e6:	eeb0 3a67 	vmov.f32	s6, s15
 801b3ea:	bf08      	it	eq
 801b3ec:	4613      	moveq	r3, r2
 801b3ee:	eef0 2a47 	vmov.f32	s5, s14
 801b3f2:	e787      	b.n	801b304 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b3f4:	1406      	asrs	r6, r0, #16
 801b3f6:	d45d      	bmi.n	801b4b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3f8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801b3fc:	42b5      	cmp	r5, r6
 801b3fe:	dd59      	ble.n	801b4b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b400:	140f      	asrs	r7, r1, #16
 801b402:	d457      	bmi.n	801b4b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b404:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801b408:	42ba      	cmp	r2, r7
 801b40a:	dd53      	ble.n	801b4b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b40c:	9a01      	ldr	r2, [sp, #4]
 801b40e:	b22d      	sxth	r5, r5
 801b410:	fb07 2505 	mla	r5, r7, r5, r2
 801b414:	5daa      	ldrb	r2, [r5, r6]
 801b416:	9d02      	ldr	r5, [sp, #8]
 801b418:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b41c:	0e2e      	lsrs	r6, r5, #24
 801b41e:	d049      	beq.n	801b4b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b420:	f06f 0201 	mvn.w	r2, #1
 801b424:	fb02 f20e 	mul.w	r2, r2, lr
 801b428:	9203      	str	r2, [sp, #12]
 801b42a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b42e:	9a05      	ldr	r2, [sp, #20]
 801b430:	4356      	muls	r6, r2
 801b432:	1c72      	adds	r2, r6, #1
 801b434:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b438:	1212      	asrs	r2, r2, #8
 801b43a:	fa1f f982 	uxth.w	r9, r2
 801b43e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b442:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b446:	43d2      	mvns	r2, r2
 801b448:	b2d2      	uxtb	r2, r2
 801b44a:	fb16 f609 	smulbb	r6, r6, r9
 801b44e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b452:	fb07 6702 	mla	r7, r7, r2, r6
 801b456:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b45a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b45e:	b2ed      	uxtb	r5, r5
 801b460:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b464:	fa5f f888 	uxtb.w	r8, r8
 801b468:	fb15 f509 	smulbb	r5, r5, r9
 801b46c:	fb08 5502 	mla	r5, r8, r2, r5
 801b470:	b2bf      	uxth	r7, r7
 801b472:	fb1a fa09 	smulbb	sl, sl, r9
 801b476:	b2ad      	uxth	r5, r5
 801b478:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b47c:	fb06 a602 	mla	r6, r6, r2, sl
 801b480:	1c7a      	adds	r2, r7, #1
 801b482:	f105 0a01 	add.w	sl, r5, #1
 801b486:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b48a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b48e:	b2b6      	uxth	r6, r6
 801b490:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b494:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b498:	ea4a 0707 	orr.w	r7, sl, r7
 801b49c:	f106 0a01 	add.w	sl, r6, #1
 801b4a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b4a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b4a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b4ac:	9a03      	ldr	r2, [sp, #12]
 801b4ae:	ea47 070a 	orr.w	r7, r7, sl
 801b4b2:	52a7      	strh	r7, [r4, r2]
 801b4b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4b6:	4410      	add	r0, r2
 801b4b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4ba:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b4be:	4411      	add	r1, r2
 801b4c0:	e755      	b.n	801b36e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b4c2:	f04f 0800 	mov.w	r8, #0
 801b4c6:	eba3 0208 	sub.w	r2, r3, r8
 801b4ca:	2a00      	cmp	r2, #0
 801b4cc:	f77f af53 	ble.w	801b376 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b4d0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b4d4:	9f01      	ldr	r7, [sp, #4]
 801b4d6:	140a      	asrs	r2, r1, #16
 801b4d8:	1405      	asrs	r5, r0, #16
 801b4da:	fb06 7202 	mla	r2, r6, r2, r7
 801b4de:	5d52      	ldrb	r2, [r2, r5]
 801b4e0:	9d02      	ldr	r5, [sp, #8]
 801b4e2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b4e6:	0e2e      	lsrs	r6, r5, #24
 801b4e8:	d044      	beq.n	801b574 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4ea:	9a05      	ldr	r2, [sp, #20]
 801b4ec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b4f0:	4356      	muls	r6, r2
 801b4f2:	1c72      	adds	r2, r6, #1
 801b4f4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b4f8:	1212      	asrs	r2, r2, #8
 801b4fa:	fa1f f982 	uxth.w	r9, r2
 801b4fe:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b502:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b506:	43d2      	mvns	r2, r2
 801b508:	b2d2      	uxtb	r2, r2
 801b50a:	fb16 f609 	smulbb	r6, r6, r9
 801b50e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b512:	fb07 6702 	mla	r7, r7, r2, r6
 801b516:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b51a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b51e:	b2ed      	uxtb	r5, r5
 801b520:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b524:	fa5f fe8e 	uxtb.w	lr, lr
 801b528:	fb15 f509 	smulbb	r5, r5, r9
 801b52c:	fb0e 5502 	mla	r5, lr, r2, r5
 801b530:	b2bf      	uxth	r7, r7
 801b532:	fb1a fa09 	smulbb	sl, sl, r9
 801b536:	b2ad      	uxth	r5, r5
 801b538:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b53c:	fb06 a602 	mla	r6, r6, r2, sl
 801b540:	1c7a      	adds	r2, r7, #1
 801b542:	f105 0a01 	add.w	sl, r5, #1
 801b546:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b54a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b54e:	b2b6      	uxth	r6, r6
 801b550:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b554:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b558:	ea4a 0707 	orr.w	r7, sl, r7
 801b55c:	f106 0a01 	add.w	sl, r6, #1
 801b560:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b564:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b568:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b56c:	ea47 070a 	orr.w	r7, r7, sl
 801b570:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b574:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b576:	4410      	add	r0, r2
 801b578:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b57a:	f108 0801 	add.w	r8, r8, #1
 801b57e:	4411      	add	r1, r2
 801b580:	e7a1      	b.n	801b4c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b582:	b007      	add	sp, #28
 801b584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b58c:	b085      	sub	sp, #20
 801b58e:	468b      	mov	fp, r1
 801b590:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b592:	9203      	str	r2, [sp, #12]
 801b594:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b598:	6841      	ldr	r1, [r0, #4]
 801b59a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b59e:	fb01 2404 	mla	r4, r1, r4, r2
 801b5a2:	6802      	ldr	r2, [r0, #0]
 801b5a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b5a8:	f8de 2000 	ldr.w	r2, [lr]
 801b5ac:	9200      	str	r2, [sp, #0]
 801b5ae:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b5b2:	3204      	adds	r2, #4
 801b5b4:	9201      	str	r2, [sp, #4]
 801b5b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b5ba:	f1bb 0f00 	cmp.w	fp, #0
 801b5be:	dc03      	bgt.n	801b5c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b5c0:	9a03      	ldr	r2, [sp, #12]
 801b5c2:	2a00      	cmp	r2, #0
 801b5c4:	f340 8153 	ble.w	801b86e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b5c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5ca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b5ce:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b5d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5dc:	2b00      	cmp	r3, #0
 801b5de:	dd0e      	ble.n	801b5fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5e0:	1408      	asrs	r0, r1, #16
 801b5e2:	d405      	bmi.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5e4:	42b8      	cmp	r0, r7
 801b5e6:	da03      	bge.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5e8:	1410      	asrs	r0, r2, #16
 801b5ea:	d401      	bmi.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5ec:	42b0      	cmp	r0, r6
 801b5ee:	db07      	blt.n	801b600 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b5f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5f2:	4401      	add	r1, r0
 801b5f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5f6:	3b01      	subs	r3, #1
 801b5f8:	4402      	add	r2, r0
 801b5fa:	3402      	adds	r4, #2
 801b5fc:	e7ee      	b.n	801b5dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b5fe:	d017      	beq.n	801b630 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b600:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b602:	1e58      	subs	r0, r3, #1
 801b604:	fb05 1500 	mla	r5, r5, r0, r1
 801b608:	142d      	asrs	r5, r5, #16
 801b60a:	d409      	bmi.n	801b620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b60c:	42bd      	cmp	r5, r7
 801b60e:	da07      	bge.n	801b620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b610:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b612:	fb05 2000 	mla	r0, r5, r0, r2
 801b616:	1400      	asrs	r0, r0, #16
 801b618:	d402      	bmi.n	801b620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b61a:	42b0      	cmp	r0, r6
 801b61c:	f2c0 80bc 	blt.w	801b798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b620:	2600      	movs	r6, #0
 801b622:	1998      	adds	r0, r3, r6
 801b624:	2800      	cmp	r0, #0
 801b626:	dc3e      	bgt.n	801b6a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b628:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b62c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b630:	f1bb 0f00 	cmp.w	fp, #0
 801b634:	f340 811b 	ble.w	801b86e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b638:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b63c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b640:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b646:	f1bb 0b01 	subs.w	fp, fp, #1
 801b64a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b64e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b652:	eeb0 6a62 	vmov.f32	s12, s5
 801b656:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b65a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b65e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b662:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b666:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b66a:	eeb0 6a43 	vmov.f32	s12, s6
 801b66e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b672:	ee12 2a90 	vmov	r2, s5
 801b676:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b67a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b67e:	ee13 2a10 	vmov	r2, s6
 801b682:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b686:	9311      	str	r3, [sp, #68]	; 0x44
 801b688:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b68a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b68e:	9a03      	ldr	r2, [sp, #12]
 801b690:	9312      	str	r3, [sp, #72]	; 0x48
 801b692:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b698:	eeb0 3a67 	vmov.f32	s6, s15
 801b69c:	bf08      	it	eq
 801b69e:	4613      	moveq	r3, r2
 801b6a0:	eef0 2a47 	vmov.f32	s5, s14
 801b6a4:	e789      	b.n	801b5ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b6a6:	140f      	asrs	r7, r1, #16
 801b6a8:	d426      	bmi.n	801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6aa:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b6ae:	42bd      	cmp	r5, r7
 801b6b0:	dd22      	ble.n	801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6b2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b6b6:	d41f      	bmi.n	801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6b8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b6bc:	4560      	cmp	r0, ip
 801b6be:	dd1b      	ble.n	801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6c0:	9800      	ldr	r0, [sp, #0]
 801b6c2:	b22d      	sxth	r5, r5
 801b6c4:	fb0c 0505 	mla	r5, ip, r5, r0
 801b6c8:	5de8      	ldrb	r0, [r5, r7]
 801b6ca:	9d01      	ldr	r5, [sp, #4]
 801b6cc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b6d0:	0e07      	lsrs	r7, r0, #24
 801b6d2:	2fff      	cmp	r7, #255	; 0xff
 801b6d4:	d116      	bne.n	801b704 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b6d6:	f06f 0501 	mvn.w	r5, #1
 801b6da:	fb05 f706 	mul.w	r7, r5, r6
 801b6de:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b6e2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b6e6:	0945      	lsrs	r5, r0, #5
 801b6e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6ec:	ea4c 0505 	orr.w	r5, ip, r5
 801b6f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b6f4:	4305      	orrs	r5, r0
 801b6f6:	53e5      	strh	r5, [r4, r7]
 801b6f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6fa:	4401      	add	r1, r0
 801b6fc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6fe:	3e01      	subs	r6, #1
 801b700:	4402      	add	r2, r0
 801b702:	e78e      	b.n	801b622 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b704:	b2fd      	uxtb	r5, r7
 801b706:	2f00      	cmp	r7, #0
 801b708:	d0f6      	beq.n	801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b70a:	f06f 0701 	mvn.w	r7, #1
 801b70e:	4377      	muls	r7, r6
 801b710:	fa1f f985 	uxth.w	r9, r5
 801b714:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b718:	9702      	str	r7, [sp, #8]
 801b71a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b71e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b722:	43ed      	mvns	r5, r5
 801b724:	b2ed      	uxtb	r5, r5
 801b726:	fb17 f709 	smulbb	r7, r7, r9
 801b72a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b72e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b732:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b736:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b73a:	b2c0      	uxtb	r0, r0
 801b73c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b740:	fa5f f888 	uxtb.w	r8, r8
 801b744:	fb10 f009 	smulbb	r0, r0, r9
 801b748:	fb08 0005 	mla	r0, r8, r5, r0
 801b74c:	b280      	uxth	r0, r0
 801b74e:	fa1f fc8c 	uxth.w	ip, ip
 801b752:	fb1a fa09 	smulbb	sl, sl, r9
 801b756:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b75a:	fb07 a705 	mla	r7, r7, r5, sl
 801b75e:	f100 0a01 	add.w	sl, r0, #1
 801b762:	f10c 0501 	add.w	r5, ip, #1
 801b766:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b76a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b76e:	b2bf      	uxth	r7, r7
 801b770:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b774:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b778:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b77c:	f107 0a01 	add.w	sl, r7, #1
 801b780:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b784:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b788:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b78c:	9802      	ldr	r0, [sp, #8]
 801b78e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b792:	f824 c000 	strh.w	ip, [r4, r0]
 801b796:	e7af      	b.n	801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b798:	f04f 0800 	mov.w	r8, #0
 801b79c:	eba3 0008 	sub.w	r0, r3, r8
 801b7a0:	2800      	cmp	r0, #0
 801b7a2:	f77f af41 	ble.w	801b628 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b7a6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b7aa:	9f00      	ldr	r7, [sp, #0]
 801b7ac:	1410      	asrs	r0, r2, #16
 801b7ae:	140d      	asrs	r5, r1, #16
 801b7b0:	fb06 7000 	mla	r0, r6, r0, r7
 801b7b4:	5d40      	ldrb	r0, [r0, r5]
 801b7b6:	9d01      	ldr	r5, [sp, #4]
 801b7b8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b7bc:	0e2e      	lsrs	r6, r5, #24
 801b7be:	2eff      	cmp	r6, #255	; 0xff
 801b7c0:	d112      	bne.n	801b7e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b7c2:	482c      	ldr	r0, [pc, #176]	; (801b874 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b7c4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b7c8:	0968      	lsrs	r0, r5, #5
 801b7ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7ce:	4330      	orrs	r0, r6
 801b7d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b7d4:	4328      	orrs	r0, r5
 801b7d6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b7da:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7dc:	4401      	add	r1, r0
 801b7de:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7e0:	f108 0801 	add.w	r8, r8, #1
 801b7e4:	4402      	add	r2, r0
 801b7e6:	e7d9      	b.n	801b79c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b7e8:	b2f0      	uxtb	r0, r6
 801b7ea:	2e00      	cmp	r6, #0
 801b7ec:	d0f5      	beq.n	801b7da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b7ee:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b7f2:	fa1f f980 	uxth.w	r9, r0
 801b7f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b7fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b7fe:	43c0      	mvns	r0, r0
 801b800:	b2c0      	uxtb	r0, r0
 801b802:	fb16 f609 	smulbb	r6, r6, r9
 801b806:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b80a:	fb07 6700 	mla	r7, r7, r0, r6
 801b80e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b812:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b816:	b2ed      	uxtb	r5, r5
 801b818:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b81c:	fa5f fc8c 	uxtb.w	ip, ip
 801b820:	fb15 f509 	smulbb	r5, r5, r9
 801b824:	fb0c 5500 	mla	r5, ip, r0, r5
 801b828:	b2bf      	uxth	r7, r7
 801b82a:	fb1a fa09 	smulbb	sl, sl, r9
 801b82e:	b2ad      	uxth	r5, r5
 801b830:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b834:	fb06 a600 	mla	r6, r6, r0, sl
 801b838:	1c78      	adds	r0, r7, #1
 801b83a:	f105 0a01 	add.w	sl, r5, #1
 801b83e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b842:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b846:	b2b6      	uxth	r6, r6
 801b848:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b84c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b850:	ea4a 0707 	orr.w	r7, sl, r7
 801b854:	f106 0a01 	add.w	sl, r6, #1
 801b858:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b85c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b860:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b864:	ea47 070a 	orr.w	r7, r7, sl
 801b868:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b86c:	e7b5      	b.n	801b7da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b86e:	b005      	add	sp, #20
 801b870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b874:	fffff800 	.word	0xfffff800

0801b878 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b87c:	b087      	sub	sp, #28
 801b87e:	468b      	mov	fp, r1
 801b880:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b882:	9204      	str	r2, [sp, #16]
 801b884:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b888:	9205      	str	r2, [sp, #20]
 801b88a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b88e:	6861      	ldr	r1, [r4, #4]
 801b890:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b894:	fb01 2000 	mla	r0, r1, r0, r2
 801b898:	6822      	ldr	r2, [r4, #0]
 801b89a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b89e:	f8de 2000 	ldr.w	r2, [lr]
 801b8a2:	9201      	str	r2, [sp, #4]
 801b8a4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b8a8:	9202      	str	r2, [sp, #8]
 801b8aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b8ae:	f1bb 0f00 	cmp.w	fp, #0
 801b8b2:	dc03      	bgt.n	801b8bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b8b4:	9a04      	ldr	r2, [sp, #16]
 801b8b6:	2a00      	cmp	r2, #0
 801b8b8:	f340 8142 	ble.w	801bb40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b8bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b8be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b8c2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b8c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b8ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b8cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b8d0:	2b00      	cmp	r3, #0
 801b8d2:	dd0e      	ble.n	801b8f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b8d4:	140c      	asrs	r4, r1, #16
 801b8d6:	d405      	bmi.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8d8:	42bc      	cmp	r4, r7
 801b8da:	da03      	bge.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8dc:	1414      	asrs	r4, r2, #16
 801b8de:	d401      	bmi.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8e0:	42b4      	cmp	r4, r6
 801b8e2:	db07      	blt.n	801b8f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b8e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8e6:	4421      	add	r1, r4
 801b8e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b8ea:	3b01      	subs	r3, #1
 801b8ec:	4422      	add	r2, r4
 801b8ee:	3002      	adds	r0, #2
 801b8f0:	e7ee      	b.n	801b8d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b8f2:	d019      	beq.n	801b928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b8f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b8f6:	1e5c      	subs	r4, r3, #1
 801b8f8:	fb05 1504 	mla	r5, r5, r4, r1
 801b8fc:	142d      	asrs	r5, r5, #16
 801b8fe:	d409      	bmi.n	801b914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b900:	42bd      	cmp	r5, r7
 801b902:	da07      	bge.n	801b914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b904:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b906:	fb05 2404 	mla	r4, r5, r4, r2
 801b90a:	1424      	asrs	r4, r4, #16
 801b90c:	d402      	bmi.n	801b914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b90e:	42b4      	cmp	r4, r6
 801b910:	f2c0 80b1 	blt.w	801ba76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b914:	f04f 0800 	mov.w	r8, #0
 801b918:	eb03 0408 	add.w	r4, r3, r8
 801b91c:	2c00      	cmp	r4, #0
 801b91e:	dc3e      	bgt.n	801b99e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b920:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b924:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b928:	f1bb 0f00 	cmp.w	fp, #0
 801b92c:	f340 8108 	ble.w	801bb40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b930:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b934:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b938:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b93c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b93e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b942:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b946:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b94a:	eeb0 6a62 	vmov.f32	s12, s5
 801b94e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b952:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b956:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b95a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b95e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b962:	eeb0 6a43 	vmov.f32	s12, s6
 801b966:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b96a:	ee12 2a90 	vmov	r2, s5
 801b96e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b972:	fb92 f3f3 	sdiv	r3, r2, r3
 801b976:	ee13 2a10 	vmov	r2, s6
 801b97a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b97e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b980:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b982:	fb92 f3f3 	sdiv	r3, r2, r3
 801b986:	9a04      	ldr	r2, [sp, #16]
 801b988:	9314      	str	r3, [sp, #80]	; 0x50
 801b98a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b98e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b990:	eeb0 3a67 	vmov.f32	s6, s15
 801b994:	bf08      	it	eq
 801b996:	4613      	moveq	r3, r2
 801b998:	eef0 2a47 	vmov.f32	s5, s14
 801b99c:	e787      	b.n	801b8ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b99e:	140e      	asrs	r6, r1, #16
 801b9a0:	d462      	bmi.n	801ba68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9a2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b9a6:	42b5      	cmp	r5, r6
 801b9a8:	dd5e      	ble.n	801ba68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9aa:	1417      	asrs	r7, r2, #16
 801b9ac:	d45c      	bmi.n	801ba68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9ae:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b9b2:	42bc      	cmp	r4, r7
 801b9b4:	dd58      	ble.n	801ba68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9b6:	b22d      	sxth	r5, r5
 801b9b8:	fb07 6505 	mla	r5, r7, r5, r6
 801b9bc:	9c02      	ldr	r4, [sp, #8]
 801b9be:	5d66      	ldrb	r6, [r4, r5]
 801b9c0:	2e00      	cmp	r6, #0
 801b9c2:	d051      	beq.n	801ba68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9c4:	9c01      	ldr	r4, [sp, #4]
 801b9c6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b9ca:	f06f 0401 	mvn.w	r4, #1
 801b9ce:	fb04 f408 	mul.w	r4, r4, r8
 801b9d2:	9403      	str	r4, [sp, #12]
 801b9d4:	5b05      	ldrh	r5, [r0, r4]
 801b9d6:	9c05      	ldr	r4, [sp, #20]
 801b9d8:	4366      	muls	r6, r4
 801b9da:	1c74      	adds	r4, r6, #1
 801b9dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b9e0:	1224      	asrs	r4, r4, #8
 801b9e2:	b2a7      	uxth	r7, r4
 801b9e4:	122e      	asrs	r6, r5, #8
 801b9e6:	43e4      	mvns	r4, r4
 801b9e8:	b2e4      	uxtb	r4, r4
 801b9ea:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b9ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9f2:	fb16 f604 	smulbb	r6, r6, r4
 801b9f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b9fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9fe:	00ed      	lsls	r5, r5, #3
 801ba00:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ba04:	b2ed      	uxtb	r5, r5
 801ba06:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801ba0a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ba0e:	fb15 f504 	smulbb	r5, r5, r4
 801ba12:	fa5f f989 	uxtb.w	r9, r9
 801ba16:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ba1a:	fb09 5507 	mla	r5, r9, r7, r5
 801ba1e:	fb1a fa04 	smulbb	sl, sl, r4
 801ba22:	fa1f fc8c 	uxth.w	ip, ip
 801ba26:	b2ad      	uxth	r5, r5
 801ba28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ba2c:	fb06 a607 	mla	r6, r6, r7, sl
 801ba30:	f10c 0401 	add.w	r4, ip, #1
 801ba34:	f105 0a01 	add.w	sl, r5, #1
 801ba38:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ba3c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ba40:	b2b6      	uxth	r6, r6
 801ba42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ba46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba4a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ba4e:	f106 0a01 	add.w	sl, r6, #1
 801ba52:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ba56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba5e:	9c03      	ldr	r4, [sp, #12]
 801ba60:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ba64:	f820 c004 	strh.w	ip, [r0, r4]
 801ba68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba6a:	4421      	add	r1, r4
 801ba6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba6e:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba72:	4422      	add	r2, r4
 801ba74:	e750      	b.n	801b918 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba76:	f04f 0900 	mov.w	r9, #0
 801ba7a:	eba3 0409 	sub.w	r4, r3, r9
 801ba7e:	2c00      	cmp	r4, #0
 801ba80:	f77f af4e 	ble.w	801b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ba84:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ba88:	140d      	asrs	r5, r1, #16
 801ba8a:	1414      	asrs	r4, r2, #16
 801ba8c:	fb06 5404 	mla	r4, r6, r4, r5
 801ba90:	9d02      	ldr	r5, [sp, #8]
 801ba92:	5d2e      	ldrb	r6, [r5, r4]
 801ba94:	2e00      	cmp	r6, #0
 801ba96:	d04c      	beq.n	801bb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ba98:	9d01      	ldr	r5, [sp, #4]
 801ba9a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ba9e:	9c05      	ldr	r4, [sp, #20]
 801baa0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801baa4:	4366      	muls	r6, r4
 801baa6:	1c74      	adds	r4, r6, #1
 801baa8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801baac:	1224      	asrs	r4, r4, #8
 801baae:	b2a7      	uxth	r7, r4
 801bab0:	122e      	asrs	r6, r5, #8
 801bab2:	43e4      	mvns	r4, r4
 801bab4:	b2e4      	uxtb	r4, r4
 801bab6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801baba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801babe:	fb16 f604 	smulbb	r6, r6, r4
 801bac2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bac6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801baca:	00ed      	lsls	r5, r5, #3
 801bacc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bad0:	b2ed      	uxtb	r5, r5
 801bad2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801bad6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bada:	fb15 f504 	smulbb	r5, r5, r4
 801bade:	fa5f f888 	uxtb.w	r8, r8
 801bae2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bae6:	fb08 5507 	mla	r5, r8, r7, r5
 801baea:	fb1a fa04 	smulbb	sl, sl, r4
 801baee:	fa1f fc8c 	uxth.w	ip, ip
 801baf2:	b2ad      	uxth	r5, r5
 801baf4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801baf8:	fb06 a607 	mla	r6, r6, r7, sl
 801bafc:	f10c 0401 	add.w	r4, ip, #1
 801bb00:	f105 0a01 	add.w	sl, r5, #1
 801bb04:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bb08:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bb0c:	b2b6      	uxth	r6, r6
 801bb0e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bb12:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bb16:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bb1a:	f106 0a01 	add.w	sl, r6, #1
 801bb1e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bb22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bb2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bb2e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bb32:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb34:	4421      	add	r1, r4
 801bb36:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb38:	f109 0901 	add.w	r9, r9, #1
 801bb3c:	4422      	add	r2, r4
 801bb3e:	e79c      	b.n	801ba7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801bb40:	b007      	add	sp, #28
 801bb42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb4a:	b085      	sub	sp, #20
 801bb4c:	468b      	mov	fp, r1
 801bb4e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb50:	9203      	str	r2, [sp, #12]
 801bb52:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801bb56:	6861      	ldr	r1, [r4, #4]
 801bb58:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801bb5c:	fb01 2000 	mla	r0, r1, r0, r2
 801bb60:	6822      	ldr	r2, [r4, #0]
 801bb62:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bb66:	f8d8 2000 	ldr.w	r2, [r8]
 801bb6a:	9200      	str	r2, [sp, #0]
 801bb6c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801bb70:	9201      	str	r2, [sp, #4]
 801bb72:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb76:	f1bb 0f00 	cmp.w	fp, #0
 801bb7a:	dc03      	bgt.n	801bb84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bb7c:	9a03      	ldr	r2, [sp, #12]
 801bb7e:	2a00      	cmp	r2, #0
 801bb80:	f340 8146 	ble.w	801be10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bb84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bb86:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bb8a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bb8e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bb94:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bb98:	2b00      	cmp	r3, #0
 801bb9a:	dd0e      	ble.n	801bbba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bb9c:	140c      	asrs	r4, r1, #16
 801bb9e:	d405      	bmi.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bba0:	42bc      	cmp	r4, r7
 801bba2:	da03      	bge.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bba4:	1414      	asrs	r4, r2, #16
 801bba6:	d401      	bmi.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bba8:	42b4      	cmp	r4, r6
 801bbaa:	db07      	blt.n	801bbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bbac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbae:	4421      	add	r1, r4
 801bbb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bbb2:	3b01      	subs	r3, #1
 801bbb4:	4422      	add	r2, r4
 801bbb6:	3002      	adds	r0, #2
 801bbb8:	e7ee      	b.n	801bb98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bbba:	d017      	beq.n	801bbec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bbbc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bbbe:	1e5c      	subs	r4, r3, #1
 801bbc0:	fb05 1504 	mla	r5, r5, r4, r1
 801bbc4:	142d      	asrs	r5, r5, #16
 801bbc6:	d409      	bmi.n	801bbdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bbc8:	42bd      	cmp	r5, r7
 801bbca:	da07      	bge.n	801bbdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bbcc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bbce:	fb05 2404 	mla	r4, r5, r4, r2
 801bbd2:	1424      	asrs	r4, r4, #16
 801bbd4:	d402      	bmi.n	801bbdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bbd6:	42b4      	cmp	r4, r6
 801bbd8:	f2c0 80b3 	blt.w	801bd42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801bbdc:	2600      	movs	r6, #0
 801bbde:	199c      	adds	r4, r3, r6
 801bbe0:	2c00      	cmp	r4, #0
 801bbe2:	dc3e      	bgt.n	801bc62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bbe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bbe8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbec:	f1bb 0f00 	cmp.w	fp, #0
 801bbf0:	f340 810e 	ble.w	801be10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bbf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bbf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bbfc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bc00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc02:	f1bb 0b01 	subs.w	fp, fp, #1
 801bc06:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bc0e:	eeb0 6a62 	vmov.f32	s12, s5
 801bc12:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc1e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bc22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc26:	eeb0 6a43 	vmov.f32	s12, s6
 801bc2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc2e:	ee12 2a90 	vmov	r2, s5
 801bc32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc36:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc3a:	ee13 2a10 	vmov	r2, s6
 801bc3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc42:	9311      	str	r3, [sp, #68]	; 0x44
 801bc44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc46:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc4a:	9a03      	ldr	r2, [sp, #12]
 801bc4c:	9312      	str	r3, [sp, #72]	; 0x48
 801bc4e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bc52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc54:	eeb0 3a67 	vmov.f32	s6, s15
 801bc58:	bf08      	it	eq
 801bc5a:	4613      	moveq	r3, r2
 801bc5c:	eef0 2a47 	vmov.f32	s5, s14
 801bc60:	e789      	b.n	801bb76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bc62:	140f      	asrs	r7, r1, #16
 801bc64:	d418      	bmi.n	801bc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc66:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bc6a:	42bd      	cmp	r5, r7
 801bc6c:	dd14      	ble.n	801bc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc6e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bc72:	d411      	bmi.n	801bc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc74:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801bc78:	4564      	cmp	r4, ip
 801bc7a:	dd0d      	ble.n	801bc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc7c:	b22d      	sxth	r5, r5
 801bc7e:	fb0c 7505 	mla	r5, ip, r5, r7
 801bc82:	9c01      	ldr	r4, [sp, #4]
 801bc84:	5d64      	ldrb	r4, [r4, r5]
 801bc86:	2cff      	cmp	r4, #255	; 0xff
 801bc88:	d10c      	bne.n	801bca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bc8a:	9c00      	ldr	r4, [sp, #0]
 801bc8c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801bc90:	f06f 0401 	mvn.w	r4, #1
 801bc94:	4374      	muls	r4, r6
 801bc96:	5305      	strh	r5, [r0, r4]
 801bc98:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc9a:	4421      	add	r1, r4
 801bc9c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc9e:	3e01      	subs	r6, #1
 801bca0:	4422      	add	r2, r4
 801bca2:	e79c      	b.n	801bbde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bca4:	2c00      	cmp	r4, #0
 801bca6:	d0f7      	beq.n	801bc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bca8:	9f00      	ldr	r7, [sp, #0]
 801bcaa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801bcae:	f06f 0501 	mvn.w	r5, #1
 801bcb2:	4375      	muls	r5, r6
 801bcb4:	9502      	str	r5, [sp, #8]
 801bcb6:	5b45      	ldrh	r5, [r0, r5]
 801bcb8:	fa1f fc84 	uxth.w	ip, r4
 801bcbc:	122f      	asrs	r7, r5, #8
 801bcbe:	43e4      	mvns	r4, r4
 801bcc0:	b2e4      	uxtb	r4, r4
 801bcc2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801bcc6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bcca:	fb17 f704 	smulbb	r7, r7, r4
 801bcce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bcd2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bcd6:	00ed      	lsls	r5, r5, #3
 801bcd8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801bcdc:	b2ed      	uxtb	r5, r5
 801bcde:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801bce2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bce6:	fb15 f504 	smulbb	r5, r5, r4
 801bcea:	fa5f f989 	uxtb.w	r9, r9
 801bcee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bcf2:	fb09 550c 	mla	r5, r9, ip, r5
 801bcf6:	fb1a fa04 	smulbb	sl, sl, r4
 801bcfa:	fa1f fe8e 	uxth.w	lr, lr
 801bcfe:	b2ad      	uxth	r5, r5
 801bd00:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bd04:	fb07 a70c 	mla	r7, r7, ip, sl
 801bd08:	f10e 0401 	add.w	r4, lr, #1
 801bd0c:	f105 0a01 	add.w	sl, r5, #1
 801bd10:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801bd14:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bd18:	b2bf      	uxth	r7, r7
 801bd1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bd1e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bd22:	ea4a 0e0e 	orr.w	lr, sl, lr
 801bd26:	f107 0a01 	add.w	sl, r7, #1
 801bd2a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bd2e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd32:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd36:	9c02      	ldr	r4, [sp, #8]
 801bd38:	ea4e 0e0a 	orr.w	lr, lr, sl
 801bd3c:	f820 e004 	strh.w	lr, [r0, r4]
 801bd40:	e7aa      	b.n	801bc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd42:	f04f 0900 	mov.w	r9, #0
 801bd46:	eba3 0409 	sub.w	r4, r3, r9
 801bd4a:	2c00      	cmp	r4, #0
 801bd4c:	f77f af4a 	ble.w	801bbe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bd50:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801bd54:	1414      	asrs	r4, r2, #16
 801bd56:	140d      	asrs	r5, r1, #16
 801bd58:	fb06 5504 	mla	r5, r6, r4, r5
 801bd5c:	9c01      	ldr	r4, [sp, #4]
 801bd5e:	5d64      	ldrb	r4, [r4, r5]
 801bd60:	2cff      	cmp	r4, #255	; 0xff
 801bd62:	d10b      	bne.n	801bd7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bd64:	9c00      	ldr	r4, [sp, #0]
 801bd66:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801bd6a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801bd6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd70:	4421      	add	r1, r4
 801bd72:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bd74:	f109 0901 	add.w	r9, r9, #1
 801bd78:	4422      	add	r2, r4
 801bd7a:	e7e4      	b.n	801bd46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801bd7c:	2c00      	cmp	r4, #0
 801bd7e:	d0f6      	beq.n	801bd6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bd80:	9e00      	ldr	r6, [sp, #0]
 801bd82:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801bd86:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801bd8a:	b2a7      	uxth	r7, r4
 801bd8c:	122e      	asrs	r6, r5, #8
 801bd8e:	43e4      	mvns	r4, r4
 801bd90:	b2e4      	uxtb	r4, r4
 801bd92:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bd96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd9a:	fb16 f604 	smulbb	r6, r6, r4
 801bd9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bda2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bda6:	00ed      	lsls	r5, r5, #3
 801bda8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bdac:	b2ed      	uxtb	r5, r5
 801bdae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bdb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bdb6:	fb15 f504 	smulbb	r5, r5, r4
 801bdba:	fa5f fe8e 	uxtb.w	lr, lr
 801bdbe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bdc2:	fb0e 5507 	mla	r5, lr, r7, r5
 801bdc6:	fb1a fa04 	smulbb	sl, sl, r4
 801bdca:	fa1f fc8c 	uxth.w	ip, ip
 801bdce:	b2ad      	uxth	r5, r5
 801bdd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bdd4:	fb06 a607 	mla	r6, r6, r7, sl
 801bdd8:	f10c 0401 	add.w	r4, ip, #1
 801bddc:	f105 0a01 	add.w	sl, r5, #1
 801bde0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bde4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bde8:	b2b6      	uxth	r6, r6
 801bdea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bdf2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bdf6:	f106 0a01 	add.w	sl, r6, #1
 801bdfa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bdfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801be06:	ea4c 0c0a 	orr.w	ip, ip, sl
 801be0a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801be0e:	e7ae      	b.n	801bd6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801be10:	b005      	add	sp, #20
 801be12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be1a:	b085      	sub	sp, #20
 801be1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801be1e:	9203      	str	r2, [sp, #12]
 801be20:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801be24:	9201      	str	r2, [sp, #4]
 801be26:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801be2a:	9100      	str	r1, [sp, #0]
 801be2c:	6841      	ldr	r1, [r0, #4]
 801be2e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801be32:	fb01 2404 	mla	r4, r1, r4, r2
 801be36:	6802      	ldr	r2, [r0, #0]
 801be38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801be3c:	f8de 2000 	ldr.w	r2, [lr]
 801be40:	9202      	str	r2, [sp, #8]
 801be42:	9a01      	ldr	r2, [sp, #4]
 801be44:	43d6      	mvns	r6, r2
 801be46:	b2f6      	uxtb	r6, r6
 801be48:	9a00      	ldr	r2, [sp, #0]
 801be4a:	2a00      	cmp	r2, #0
 801be4c:	dc03      	bgt.n	801be56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801be4e:	9a03      	ldr	r2, [sp, #12]
 801be50:	2a00      	cmp	r2, #0
 801be52:	f340 8124 	ble.w	801c09e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801be56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be58:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801be5c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801be60:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be64:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be66:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801be6a:	2b00      	cmp	r3, #0
 801be6c:	dd0e      	ble.n	801be8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801be6e:	1408      	asrs	r0, r1, #16
 801be70:	d405      	bmi.n	801be7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be72:	4560      	cmp	r0, ip
 801be74:	da03      	bge.n	801be7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be76:	1410      	asrs	r0, r2, #16
 801be78:	d401      	bmi.n	801be7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be7a:	42b8      	cmp	r0, r7
 801be7c:	db07      	blt.n	801be8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801be7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be80:	4401      	add	r1, r0
 801be82:	9812      	ldr	r0, [sp, #72]	; 0x48
 801be84:	3b01      	subs	r3, #1
 801be86:	4402      	add	r2, r0
 801be88:	3402      	adds	r4, #2
 801be8a:	e7ee      	b.n	801be6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801be8c:	d06e      	beq.n	801bf6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801be8e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801be90:	1e58      	subs	r0, r3, #1
 801be92:	fb05 1500 	mla	r5, r5, r0, r1
 801be96:	142d      	asrs	r5, r5, #16
 801be98:	d45c      	bmi.n	801bf54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be9a:	4565      	cmp	r5, ip
 801be9c:	da5a      	bge.n	801bf54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be9e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bea0:	fb05 2000 	mla	r0, r5, r0, r2
 801bea4:	1400      	asrs	r0, r0, #16
 801bea6:	d455      	bmi.n	801bf54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801bea8:	42b8      	cmp	r0, r7
 801beaa:	da53      	bge.n	801bf54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801beac:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801beb0:	4699      	mov	r9, r3
 801beb2:	46a2      	mov	sl, r4
 801beb4:	f1b9 0f00 	cmp.w	r9, #0
 801beb8:	dd54      	ble.n	801bf64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801beba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801bebe:	140d      	asrs	r5, r1, #16
 801bec0:	1410      	asrs	r0, r2, #16
 801bec2:	fb07 5000 	mla	r0, r7, r0, r5
 801bec6:	9d02      	ldr	r5, [sp, #8]
 801bec8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801becc:	f8ba 5000 	ldrh.w	r5, [sl]
 801bed0:	122f      	asrs	r7, r5, #8
 801bed2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bed6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801beda:	fb17 f706 	smulbb	r7, r7, r6
 801bede:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bee2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bee6:	00ed      	lsls	r5, r5, #3
 801bee8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801beec:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801bef0:	10c7      	asrs	r7, r0, #3
 801bef2:	b2ed      	uxtb	r5, r5
 801bef4:	00c0      	lsls	r0, r0, #3
 801bef6:	fb18 f806 	smulbb	r8, r8, r6
 801befa:	fb15 f506 	smulbb	r5, r5, r6
 801befe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bf02:	b2c0      	uxtb	r0, r0
 801bf04:	fa1f fc8c 	uxth.w	ip, ip
 801bf08:	fb07 870b 	mla	r7, r7, fp, r8
 801bf0c:	fb00 500b 	mla	r0, r0, fp, r5
 801bf10:	b280      	uxth	r0, r0
 801bf12:	b2bf      	uxth	r7, r7
 801bf14:	f10c 0501 	add.w	r5, ip, #1
 801bf18:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bf1c:	f107 0801 	add.w	r8, r7, #1
 801bf20:	1c45      	adds	r5, r0, #1
 801bf22:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bf26:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801bf2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bf2c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bf30:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bf34:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bf38:	ea45 0c0c 	orr.w	ip, r5, ip
 801bf3c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf40:	4401      	add	r1, r0
 801bf42:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bf44:	ea4c 0c08 	orr.w	ip, ip, r8
 801bf48:	f82a cb02 	strh.w	ip, [sl], #2
 801bf4c:	4402      	add	r2, r0
 801bf4e:	f109 39ff 	add.w	r9, r9, #4294967295
 801bf52:	e7af      	b.n	801beb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf54:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801bf58:	f04f 0800 	mov.w	r8, #0
 801bf5c:	eb03 0008 	add.w	r0, r3, r8
 801bf60:	2800      	cmp	r0, #0
 801bf62:	dc41      	bgt.n	801bfe8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801bf64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bf68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf6c:	9b00      	ldr	r3, [sp, #0]
 801bf6e:	2b00      	cmp	r3, #0
 801bf70:	f340 8095 	ble.w	801c09e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801bf74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bf7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bf80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf8e:	eef0 6a62 	vmov.f32	s13, s5
 801bf92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf9e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801bfa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bfa6:	eef0 6a43 	vmov.f32	s13, s6
 801bfaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bfae:	ee12 2a90 	vmov	r2, s5
 801bfb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bfb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfba:	ee13 2a10 	vmov	r2, s6
 801bfbe:	9311      	str	r3, [sp, #68]	; 0x44
 801bfc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bfc2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfc6:	9312      	str	r3, [sp, #72]	; 0x48
 801bfc8:	9b00      	ldr	r3, [sp, #0]
 801bfca:	9a03      	ldr	r2, [sp, #12]
 801bfcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bfd0:	3b01      	subs	r3, #1
 801bfd2:	9300      	str	r3, [sp, #0]
 801bfd4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801bfd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bfda:	eeb0 3a67 	vmov.f32	s6, s15
 801bfde:	bf08      	it	eq
 801bfe0:	4613      	moveq	r3, r2
 801bfe2:	eef0 2a47 	vmov.f32	s5, s14
 801bfe6:	e72f      	b.n	801be48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bfe8:	140f      	asrs	r7, r1, #16
 801bfea:	d451      	bmi.n	801c090 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfec:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bff0:	42bd      	cmp	r5, r7
 801bff2:	dd4d      	ble.n	801c090 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bff4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bff8:	d44a      	bmi.n	801c090 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bffa:	f8de 000c 	ldr.w	r0, [lr, #12]
 801bffe:	4560      	cmp	r0, ip
 801c000:	dd46      	ble.n	801c090 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c002:	b22d      	sxth	r5, r5
 801c004:	fb0c 7505 	mla	r5, ip, r5, r7
 801c008:	9802      	ldr	r0, [sp, #8]
 801c00a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801c00e:	f06f 0501 	mvn.w	r5, #1
 801c012:	fb05 fb08 	mul.w	fp, r5, r8
 801c016:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c01a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c01e:	122f      	asrs	r7, r5, #8
 801c020:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c024:	fb17 f706 	smulbb	r7, r7, r6
 801c028:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c02c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c030:	00ed      	lsls	r5, r5, #3
 801c032:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c036:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c03a:	10c7      	asrs	r7, r0, #3
 801c03c:	b2ed      	uxtb	r5, r5
 801c03e:	00c0      	lsls	r0, r0, #3
 801c040:	fb19 f906 	smulbb	r9, r9, r6
 801c044:	fb15 f506 	smulbb	r5, r5, r6
 801c048:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c04c:	b2c0      	uxtb	r0, r0
 801c04e:	fa1f fc8c 	uxth.w	ip, ip
 801c052:	fb07 970a 	mla	r7, r7, sl, r9
 801c056:	fb00 500a 	mla	r0, r0, sl, r5
 801c05a:	b2bf      	uxth	r7, r7
 801c05c:	b280      	uxth	r0, r0
 801c05e:	f10c 0501 	add.w	r5, ip, #1
 801c062:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c066:	f107 0901 	add.w	r9, r7, #1
 801c06a:	1c45      	adds	r5, r0, #1
 801c06c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c070:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c074:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c078:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c07c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c080:	ea45 0c0c 	orr.w	ip, r5, ip
 801c084:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c088:	ea4c 0c09 	orr.w	ip, ip, r9
 801c08c:	f824 c00b 	strh.w	ip, [r4, fp]
 801c090:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c092:	4401      	add	r1, r0
 801c094:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c096:	f108 38ff 	add.w	r8, r8, #4294967295
 801c09a:	4402      	add	r2, r0
 801c09c:	e75e      	b.n	801bf5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c09e:	b005      	add	sp, #20
 801c0a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c0a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0a8:	b085      	sub	sp, #20
 801c0aa:	4693      	mov	fp, r2
 801c0ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c0ae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c0b0:	6870      	ldr	r0, [r6, #4]
 801c0b2:	9101      	str	r1, [sp, #4]
 801c0b4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c0b8:	fb00 2404 	mla	r4, r0, r4, r2
 801c0bc:	6832      	ldr	r2, [r6, #0]
 801c0be:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c0c2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c0c6:	682a      	ldr	r2, [r5, #0]
 801c0c8:	9202      	str	r2, [sp, #8]
 801c0ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c0ce:	9a01      	ldr	r2, [sp, #4]
 801c0d0:	2a00      	cmp	r2, #0
 801c0d2:	dc03      	bgt.n	801c0dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c0d4:	f1bb 0f00 	cmp.w	fp, #0
 801c0d8:	f340 809a 	ble.w	801c210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c0dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c0e2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c0e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c0ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c0ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c0f0:	2b00      	cmp	r3, #0
 801c0f2:	dd0c      	ble.n	801c10e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c0f4:	1406      	asrs	r6, r0, #16
 801c0f6:	d405      	bmi.n	801c104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0f8:	454e      	cmp	r6, r9
 801c0fa:	da03      	bge.n	801c104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0fc:	1416      	asrs	r6, r2, #16
 801c0fe:	d401      	bmi.n	801c104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c100:	4546      	cmp	r6, r8
 801c102:	db05      	blt.n	801c110 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c104:	4470      	add	r0, lr
 801c106:	4462      	add	r2, ip
 801c108:	3b01      	subs	r3, #1
 801c10a:	3402      	adds	r4, #2
 801c10c:	e7f0      	b.n	801c0f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c10e:	d00f      	beq.n	801c130 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c110:	1e5e      	subs	r6, r3, #1
 801c112:	fb0e 0706 	mla	r7, lr, r6, r0
 801c116:	143f      	asrs	r7, r7, #16
 801c118:	d541      	bpl.n	801c19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c11a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c11e:	4698      	mov	r8, r3
 801c120:	9603      	str	r6, [sp, #12]
 801c122:	f1b8 0f00 	cmp.w	r8, #0
 801c126:	dc56      	bgt.n	801c1d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c128:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c12c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c130:	9b01      	ldr	r3, [sp, #4]
 801c132:	2b00      	cmp	r3, #0
 801c134:	dd6c      	ble.n	801c210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c136:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c13a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c13e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c142:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c144:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c148:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c14c:	eeb0 6a62 	vmov.f32	s12, s5
 801c150:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c154:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c158:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c15c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c160:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c164:	eeb0 6a43 	vmov.f32	s12, s6
 801c168:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c16c:	ee12 2a90 	vmov	r2, s5
 801c170:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c174:	fb92 fef3 	sdiv	lr, r2, r3
 801c178:	ee13 2a10 	vmov	r2, s6
 801c17c:	fb92 fcf3 	sdiv	ip, r2, r3
 801c180:	9b01      	ldr	r3, [sp, #4]
 801c182:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c186:	3b01      	subs	r3, #1
 801c188:	9301      	str	r3, [sp, #4]
 801c18a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c18e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c190:	eeb0 3a67 	vmov.f32	s6, s15
 801c194:	bf08      	it	eq
 801c196:	465b      	moveq	r3, fp
 801c198:	eef0 2a47 	vmov.f32	s5, s14
 801c19c:	e797      	b.n	801c0ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c19e:	454f      	cmp	r7, r9
 801c1a0:	dabb      	bge.n	801c11a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c1a2:	fb0c 2606 	mla	r6, ip, r6, r2
 801c1a6:	1436      	asrs	r6, r6, #16
 801c1a8:	d4b7      	bmi.n	801c11a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c1aa:	4546      	cmp	r6, r8
 801c1ac:	dab5      	bge.n	801c11a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c1ae:	461e      	mov	r6, r3
 801c1b0:	46a0      	mov	r8, r4
 801c1b2:	2e00      	cmp	r6, #0
 801c1b4:	ddb8      	ble.n	801c128 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c1b6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c1ba:	9902      	ldr	r1, [sp, #8]
 801c1bc:	1417      	asrs	r7, r2, #16
 801c1be:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c1c2:	fb0a 9707 	mla	r7, sl, r7, r9
 801c1c6:	4470      	add	r0, lr
 801c1c8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c1cc:	f828 7b02 	strh.w	r7, [r8], #2
 801c1d0:	4462      	add	r2, ip
 801c1d2:	3e01      	subs	r6, #1
 801c1d4:	e7ed      	b.n	801c1b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c1d6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c1da:	d414      	bmi.n	801c206 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1dc:	68ae      	ldr	r6, [r5, #8]
 801c1de:	454e      	cmp	r6, r9
 801c1e0:	dd11      	ble.n	801c206 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1e2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c1e6:	d40e      	bmi.n	801c206 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1e8:	68ef      	ldr	r7, [r5, #12]
 801c1ea:	4557      	cmp	r7, sl
 801c1ec:	dd0b      	ble.n	801c206 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1ee:	b236      	sxth	r6, r6
 801c1f0:	fb0a 9606 	mla	r6, sl, r6, r9
 801c1f4:	9f02      	ldr	r7, [sp, #8]
 801c1f6:	f06f 0101 	mvn.w	r1, #1
 801c1fa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c1fe:	fb01 f608 	mul.w	r6, r1, r8
 801c202:	9903      	ldr	r1, [sp, #12]
 801c204:	538f      	strh	r7, [r1, r6]
 801c206:	4470      	add	r0, lr
 801c208:	4462      	add	r2, ip
 801c20a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c20e:	e788      	b.n	801c122 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c210:	b005      	add	sp, #20
 801c212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c216 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c216:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c21a:	b087      	sub	sp, #28
 801c21c:	468b      	mov	fp, r1
 801c21e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c220:	9203      	str	r2, [sp, #12]
 801c222:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c226:	9204      	str	r2, [sp, #16]
 801c228:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801c22c:	6841      	ldr	r1, [r0, #4]
 801c22e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c232:	fb01 2505 	mla	r5, r1, r5, r2
 801c236:	6802      	ldr	r2, [r0, #0]
 801c238:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c23c:	f8d9 2000 	ldr.w	r2, [r9]
 801c240:	9201      	str	r2, [sp, #4]
 801c242:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c246:	f1bb 0f00 	cmp.w	fp, #0
 801c24a:	dc03      	bgt.n	801c254 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c24c:	9a03      	ldr	r2, [sp, #12]
 801c24e:	2a00      	cmp	r2, #0
 801c250:	f340 8159 	ble.w	801c506 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c254:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c256:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c25a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c25e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c262:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c264:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c268:	2b00      	cmp	r3, #0
 801c26a:	dd0e      	ble.n	801c28a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c26c:	1402      	asrs	r2, r0, #16
 801c26e:	d405      	bmi.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c270:	42ba      	cmp	r2, r7
 801c272:	da03      	bge.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c274:	140a      	asrs	r2, r1, #16
 801c276:	d401      	bmi.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c278:	42b2      	cmp	r2, r6
 801c27a:	db07      	blt.n	801c28c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c27c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c27e:	4410      	add	r0, r2
 801c280:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c282:	3b01      	subs	r3, #1
 801c284:	4411      	add	r1, r2
 801c286:	3502      	adds	r5, #2
 801c288:	e7ee      	b.n	801c268 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c28a:	d017      	beq.n	801c2bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c28c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c28e:	1e5a      	subs	r2, r3, #1
 801c290:	fb04 0402 	mla	r4, r4, r2, r0
 801c294:	1424      	asrs	r4, r4, #16
 801c296:	d409      	bmi.n	801c2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c298:	42bc      	cmp	r4, r7
 801c29a:	da07      	bge.n	801c2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c29c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c29e:	fb04 1202 	mla	r2, r4, r2, r1
 801c2a2:	1412      	asrs	r2, r2, #16
 801c2a4:	d402      	bmi.n	801c2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c2a6:	42b2      	cmp	r2, r6
 801c2a8:	f2c0 80bf 	blt.w	801c42a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c2ac:	2700      	movs	r7, #0
 801c2ae:	19da      	adds	r2, r3, r7
 801c2b0:	2a00      	cmp	r2, #0
 801c2b2:	dc3e      	bgt.n	801c332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c2b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c2b8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c2bc:	f1bb 0f00 	cmp.w	fp, #0
 801c2c0:	f340 8121 	ble.w	801c506 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c2c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c2c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c2cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c2d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c2d2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c2d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2de:	eeb0 6a62 	vmov.f32	s12, s5
 801c2e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2ee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c2f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2f6:	eeb0 6a43 	vmov.f32	s12, s6
 801c2fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2fe:	ee12 2a90 	vmov	r2, s5
 801c302:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c306:	fb92 f3f3 	sdiv	r3, r2, r3
 801c30a:	ee13 2a10 	vmov	r2, s6
 801c30e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c312:	9313      	str	r3, [sp, #76]	; 0x4c
 801c314:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c316:	fb92 f3f3 	sdiv	r3, r2, r3
 801c31a:	9a03      	ldr	r2, [sp, #12]
 801c31c:	9314      	str	r3, [sp, #80]	; 0x50
 801c31e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c322:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c324:	eeb0 3a67 	vmov.f32	s6, s15
 801c328:	bf08      	it	eq
 801c32a:	4613      	moveq	r3, r2
 801c32c:	eef0 2a47 	vmov.f32	s5, s14
 801c330:	e789      	b.n	801c246 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c332:	1406      	asrs	r6, r0, #16
 801c334:	d42d      	bmi.n	801c392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c336:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801c33a:	42b4      	cmp	r4, r6
 801c33c:	dd29      	ble.n	801c392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c33e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801c342:	d426      	bmi.n	801c392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c344:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c348:	4562      	cmp	r2, ip
 801c34a:	dd22      	ble.n	801c392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c34c:	b224      	sxth	r4, r4
 801c34e:	9a01      	ldr	r2, [sp, #4]
 801c350:	fb0c 6404 	mla	r4, ip, r4, r6
 801c354:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801c358:	0e22      	lsrs	r2, r4, #24
 801c35a:	d01a      	beq.n	801c392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c35c:	9e04      	ldr	r6, [sp, #16]
 801c35e:	4372      	muls	r2, r6
 801c360:	1c56      	adds	r6, r2, #1
 801c362:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c366:	1212      	asrs	r2, r2, #8
 801c368:	0a26      	lsrs	r6, r4, #8
 801c36a:	2aff      	cmp	r2, #255	; 0xff
 801c36c:	9605      	str	r6, [sp, #20]
 801c36e:	d116      	bne.n	801c39e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c370:	f06f 0201 	mvn.w	r2, #1
 801c374:	fb02 fc07 	mul.w	ip, r2, r7
 801c378:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c37c:	0962      	lsrs	r2, r4, #5
 801c37e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c382:	f026 0607 	bic.w	r6, r6, #7
 801c386:	4316      	orrs	r6, r2
 801c388:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c38c:	4326      	orrs	r6, r4
 801c38e:	f825 600c 	strh.w	r6, [r5, ip]
 801c392:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c394:	4410      	add	r0, r2
 801c396:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c398:	3f01      	subs	r7, #1
 801c39a:	4411      	add	r1, r2
 801c39c:	e787      	b.n	801c2ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c39e:	f06f 0601 	mvn.w	r6, #1
 801c3a2:	437e      	muls	r6, r7
 801c3a4:	fa1f fa82 	uxth.w	sl, r2
 801c3a8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801c3ac:	9602      	str	r6, [sp, #8]
 801c3ae:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c3b2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801c3b6:	43d2      	mvns	r2, r2
 801c3b8:	b2d2      	uxtb	r2, r2
 801c3ba:	fb1c fc0a 	smulbb	ip, ip, sl
 801c3be:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c3c2:	fb0e ce02 	mla	lr, lr, r2, ip
 801c3c6:	b2e4      	uxtb	r4, r4
 801c3c8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c3cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c3d0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c3d4:	fa5f f888 	uxtb.w	r8, r8
 801c3d8:	fb14 f40a 	smulbb	r4, r4, sl
 801c3dc:	fb08 4402 	mla	r4, r8, r2, r4
 801c3e0:	fa1f fe8e 	uxth.w	lr, lr
 801c3e4:	fb16 f60a 	smulbb	r6, r6, sl
 801c3e8:	b2a4      	uxth	r4, r4
 801c3ea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c3ee:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c3f2:	f10e 0201 	add.w	r2, lr, #1
 801c3f6:	1c66      	adds	r6, r4, #1
 801c3f8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c3fc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c400:	fa1f fc8c 	uxth.w	ip, ip
 801c404:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c408:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c40c:	ea46 0e0e 	orr.w	lr, r6, lr
 801c410:	f10c 0601 	add.w	r6, ip, #1
 801c414:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c418:	0976      	lsrs	r6, r6, #5
 801c41a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c41e:	9a02      	ldr	r2, [sp, #8]
 801c420:	ea4e 0e06 	orr.w	lr, lr, r6
 801c424:	f825 e002 	strh.w	lr, [r5, r2]
 801c428:	e7b3      	b.n	801c392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c42a:	f04f 0800 	mov.w	r8, #0
 801c42e:	eba3 0208 	sub.w	r2, r3, r8
 801c432:	2a00      	cmp	r2, #0
 801c434:	f77f af3e 	ble.w	801c2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c438:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c43c:	1404      	asrs	r4, r0, #16
 801c43e:	140a      	asrs	r2, r1, #16
 801c440:	fb06 4202 	mla	r2, r6, r2, r4
 801c444:	9c01      	ldr	r4, [sp, #4]
 801c446:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c44a:	0e22      	lsrs	r2, r4, #24
 801c44c:	d016      	beq.n	801c47c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c44e:	9e04      	ldr	r6, [sp, #16]
 801c450:	4372      	muls	r2, r6
 801c452:	1c56      	adds	r6, r2, #1
 801c454:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c458:	1212      	asrs	r2, r2, #8
 801c45a:	2aff      	cmp	r2, #255	; 0xff
 801c45c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c460:	d113      	bne.n	801c48a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c462:	0962      	lsrs	r2, r4, #5
 801c464:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c468:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c46c:	f026 0607 	bic.w	r6, r6, #7
 801c470:	4316      	orrs	r6, r2
 801c472:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c476:	4326      	orrs	r6, r4
 801c478:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c47c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c47e:	4410      	add	r0, r2
 801c480:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c482:	f108 0801 	add.w	r8, r8, #1
 801c486:	4411      	add	r1, r2
 801c488:	e7d1      	b.n	801c42e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c48a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c48e:	fa1f fa82 	uxth.w	sl, r2
 801c492:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c496:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c49a:	43d2      	mvns	r2, r2
 801c49c:	b2d2      	uxtb	r2, r2
 801c49e:	fb17 f70a 	smulbb	r7, r7, sl
 801c4a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c4a6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c4aa:	b2e4      	uxtb	r4, r4
 801c4ac:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c4b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c4b4:	fa5f fe8e 	uxtb.w	lr, lr
 801c4b8:	fb14 f40a 	smulbb	r4, r4, sl
 801c4bc:	fb0e 4402 	mla	r4, lr, r2, r4
 801c4c0:	b2f6      	uxtb	r6, r6
 801c4c2:	fa1f fc8c 	uxth.w	ip, ip
 801c4c6:	fb16 f60a 	smulbb	r6, r6, sl
 801c4ca:	b2a4      	uxth	r4, r4
 801c4cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c4d0:	fb07 6702 	mla	r7, r7, r2, r6
 801c4d4:	f10c 0201 	add.w	r2, ip, #1
 801c4d8:	1c66      	adds	r6, r4, #1
 801c4da:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c4de:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c4e2:	b2bf      	uxth	r7, r7
 801c4e4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c4e8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c4ec:	ea46 0c0c 	orr.w	ip, r6, ip
 801c4f0:	1c7e      	adds	r6, r7, #1
 801c4f2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c4f6:	0976      	lsrs	r6, r6, #5
 801c4f8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c4fc:	ea4c 0c06 	orr.w	ip, ip, r6
 801c500:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c504:	e7ba      	b.n	801c47c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c506:	b007      	add	sp, #28
 801c508:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c50c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c50c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c510:	b085      	sub	sp, #20
 801c512:	468b      	mov	fp, r1
 801c514:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c516:	9203      	str	r2, [sp, #12]
 801c518:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c51c:	6841      	ldr	r1, [r0, #4]
 801c51e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c522:	fb01 2404 	mla	r4, r1, r4, r2
 801c526:	6802      	ldr	r2, [r0, #0]
 801c528:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c52c:	f8d8 2000 	ldr.w	r2, [r8]
 801c530:	9201      	str	r2, [sp, #4]
 801c532:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c536:	f1bb 0f00 	cmp.w	fp, #0
 801c53a:	dc03      	bgt.n	801c544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c53c:	9a03      	ldr	r2, [sp, #12]
 801c53e:	2a00      	cmp	r2, #0
 801c540:	f340 814f 	ble.w	801c7e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c544:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c546:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c54a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c54e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c552:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c554:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c558:	2b00      	cmp	r3, #0
 801c55a:	dd0e      	ble.n	801c57a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c55c:	1408      	asrs	r0, r1, #16
 801c55e:	d405      	bmi.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c560:	42b8      	cmp	r0, r7
 801c562:	da03      	bge.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c564:	1410      	asrs	r0, r2, #16
 801c566:	d401      	bmi.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c568:	42b0      	cmp	r0, r6
 801c56a:	db07      	blt.n	801c57c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c56c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c56e:	4401      	add	r1, r0
 801c570:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c572:	3b01      	subs	r3, #1
 801c574:	4402      	add	r2, r0
 801c576:	3402      	adds	r4, #2
 801c578:	e7ee      	b.n	801c558 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c57a:	d017      	beq.n	801c5ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c57c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c57e:	1e58      	subs	r0, r3, #1
 801c580:	fb05 1500 	mla	r5, r5, r0, r1
 801c584:	142d      	asrs	r5, r5, #16
 801c586:	d409      	bmi.n	801c59c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c588:	42bd      	cmp	r5, r7
 801c58a:	da07      	bge.n	801c59c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c58c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c58e:	fb05 2000 	mla	r0, r5, r0, r2
 801c592:	1400      	asrs	r0, r0, #16
 801c594:	d402      	bmi.n	801c59c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c596:	42b0      	cmp	r0, r6
 801c598:	f2c0 80ba 	blt.w	801c710 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c59c:	2600      	movs	r6, #0
 801c59e:	1998      	adds	r0, r3, r6
 801c5a0:	2800      	cmp	r0, #0
 801c5a2:	dc3e      	bgt.n	801c622 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c5a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c5a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c5ac:	f1bb 0f00 	cmp.w	fp, #0
 801c5b0:	f340 8117 	ble.w	801c7e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c5b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c5b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c5bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c5c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5c2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c5c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c5ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c5ce:	eeb0 6a62 	vmov.f32	s12, s5
 801c5d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c5d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c5da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c5de:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c5e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5e6:	eeb0 6a43 	vmov.f32	s12, s6
 801c5ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5ee:	ee12 2a90 	vmov	r2, s5
 801c5f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5fa:	ee13 2a10 	vmov	r2, s6
 801c5fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c602:	9311      	str	r3, [sp, #68]	; 0x44
 801c604:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c606:	fb92 f3f3 	sdiv	r3, r2, r3
 801c60a:	9a03      	ldr	r2, [sp, #12]
 801c60c:	9312      	str	r3, [sp, #72]	; 0x48
 801c60e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c612:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c614:	eeb0 3a67 	vmov.f32	s6, s15
 801c618:	bf08      	it	eq
 801c61a:	4613      	moveq	r3, r2
 801c61c:	eef0 2a47 	vmov.f32	s5, s14
 801c620:	e789      	b.n	801c536 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c622:	140f      	asrs	r7, r1, #16
 801c624:	d424      	bmi.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c626:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c62a:	42bd      	cmp	r5, r7
 801c62c:	dd20      	ble.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c62e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c632:	d41d      	bmi.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c634:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c638:	4560      	cmp	r0, ip
 801c63a:	dd19      	ble.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c63c:	b22d      	sxth	r5, r5
 801c63e:	fb0c 7505 	mla	r5, ip, r5, r7
 801c642:	9801      	ldr	r0, [sp, #4]
 801c644:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c648:	0e07      	lsrs	r7, r0, #24
 801c64a:	2fff      	cmp	r7, #255	; 0xff
 801c64c:	d116      	bne.n	801c67c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c64e:	f06f 0501 	mvn.w	r5, #1
 801c652:	fb05 f706 	mul.w	r7, r5, r6
 801c656:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c65a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c65e:	0945      	lsrs	r5, r0, #5
 801c660:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c664:	ea4c 0505 	orr.w	r5, ip, r5
 801c668:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c66c:	4305      	orrs	r5, r0
 801c66e:	53e5      	strh	r5, [r4, r7]
 801c670:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c672:	4401      	add	r1, r0
 801c674:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c676:	3e01      	subs	r6, #1
 801c678:	4402      	add	r2, r0
 801c67a:	e790      	b.n	801c59e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c67c:	b2fd      	uxtb	r5, r7
 801c67e:	2f00      	cmp	r7, #0
 801c680:	d0f6      	beq.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c682:	f06f 0701 	mvn.w	r7, #1
 801c686:	4377      	muls	r7, r6
 801c688:	fa1f f985 	uxth.w	r9, r5
 801c68c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c690:	9702      	str	r7, [sp, #8]
 801c692:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c696:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c69a:	43ed      	mvns	r5, r5
 801c69c:	b2ed      	uxtb	r5, r5
 801c69e:	fb17 f709 	smulbb	r7, r7, r9
 801c6a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c6a6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c6aa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c6ae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c6b2:	b2c0      	uxtb	r0, r0
 801c6b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c6b8:	fa5f fe8e 	uxtb.w	lr, lr
 801c6bc:	fb10 f009 	smulbb	r0, r0, r9
 801c6c0:	fb0e 0005 	mla	r0, lr, r5, r0
 801c6c4:	b280      	uxth	r0, r0
 801c6c6:	fa1f fc8c 	uxth.w	ip, ip
 801c6ca:	fb1a fa09 	smulbb	sl, sl, r9
 801c6ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c6d2:	fb07 a705 	mla	r7, r7, r5, sl
 801c6d6:	f100 0a01 	add.w	sl, r0, #1
 801c6da:	f10c 0501 	add.w	r5, ip, #1
 801c6de:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c6e2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c6e6:	b2bf      	uxth	r7, r7
 801c6e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c6ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c6f0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c6f4:	f107 0a01 	add.w	sl, r7, #1
 801c6f8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c6fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c700:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c704:	9802      	ldr	r0, [sp, #8]
 801c706:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c70a:	f824 c000 	strh.w	ip, [r4, r0]
 801c70e:	e7af      	b.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c710:	f04f 0e00 	mov.w	lr, #0
 801c714:	eba3 000e 	sub.w	r0, r3, lr
 801c718:	2800      	cmp	r0, #0
 801c71a:	f77f af43 	ble.w	801c5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c71e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c722:	140d      	asrs	r5, r1, #16
 801c724:	1410      	asrs	r0, r2, #16
 801c726:	fb06 5000 	mla	r0, r6, r0, r5
 801c72a:	9d01      	ldr	r5, [sp, #4]
 801c72c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c730:	0e2e      	lsrs	r6, r5, #24
 801c732:	2eff      	cmp	r6, #255	; 0xff
 801c734:	d112      	bne.n	801c75c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c736:	482c      	ldr	r0, [pc, #176]	; (801c7e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c738:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c73c:	0968      	lsrs	r0, r5, #5
 801c73e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c742:	4330      	orrs	r0, r6
 801c744:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c748:	4328      	orrs	r0, r5
 801c74a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c74e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c750:	4401      	add	r1, r0
 801c752:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c754:	f10e 0e01 	add.w	lr, lr, #1
 801c758:	4402      	add	r2, r0
 801c75a:	e7db      	b.n	801c714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c75c:	b2f0      	uxtb	r0, r6
 801c75e:	2e00      	cmp	r6, #0
 801c760:	d0f5      	beq.n	801c74e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c762:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c766:	fa1f f980 	uxth.w	r9, r0
 801c76a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c76e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c772:	43c0      	mvns	r0, r0
 801c774:	b2c0      	uxtb	r0, r0
 801c776:	fb16 f609 	smulbb	r6, r6, r9
 801c77a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c77e:	fb07 6700 	mla	r7, r7, r0, r6
 801c782:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c786:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c78a:	b2ed      	uxtb	r5, r5
 801c78c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c790:	fa5f fc8c 	uxtb.w	ip, ip
 801c794:	fb15 f509 	smulbb	r5, r5, r9
 801c798:	fb0c 5500 	mla	r5, ip, r0, r5
 801c79c:	b2bf      	uxth	r7, r7
 801c79e:	fb1a fa09 	smulbb	sl, sl, r9
 801c7a2:	b2ad      	uxth	r5, r5
 801c7a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c7a8:	fb06 a600 	mla	r6, r6, r0, sl
 801c7ac:	1c78      	adds	r0, r7, #1
 801c7ae:	f105 0a01 	add.w	sl, r5, #1
 801c7b2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c7b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c7ba:	b2b6      	uxth	r6, r6
 801c7bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c7c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c7c4:	ea4a 0707 	orr.w	r7, sl, r7
 801c7c8:	f106 0a01 	add.w	sl, r6, #1
 801c7cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c7d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c7d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c7d8:	ea47 070a 	orr.w	r7, r7, sl
 801c7dc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c7e0:	e7b5      	b.n	801c74e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c7e2:	b005      	add	sp, #20
 801c7e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7e8:	fffff800 	.word	0xfffff800

0801c7ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7f0:	b087      	sub	sp, #28
 801c7f2:	468b      	mov	fp, r1
 801c7f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c7f6:	9203      	str	r2, [sp, #12]
 801c7f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c7fc:	9204      	str	r2, [sp, #16]
 801c7fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c802:	6841      	ldr	r1, [r0, #4]
 801c804:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c808:	fb01 2404 	mla	r4, r1, r4, r2
 801c80c:	6802      	ldr	r2, [r0, #0]
 801c80e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c812:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c816:	3201      	adds	r2, #1
 801c818:	f022 0201 	bic.w	r2, r2, #1
 801c81c:	9200      	str	r2, [sp, #0]
 801c81e:	f8d9 2000 	ldr.w	r2, [r9]
 801c822:	9201      	str	r2, [sp, #4]
 801c824:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c828:	f1bb 0f00 	cmp.w	fp, #0
 801c82c:	dc03      	bgt.n	801c836 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c82e:	9a03      	ldr	r2, [sp, #12]
 801c830:	2a00      	cmp	r2, #0
 801c832:	f340 8169 	ble.w	801cb08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c836:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c838:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c83c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c840:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c844:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c846:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c84a:	2b00      	cmp	r3, #0
 801c84c:	dd0e      	ble.n	801c86c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c84e:	1402      	asrs	r2, r0, #16
 801c850:	d405      	bmi.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c852:	42ba      	cmp	r2, r7
 801c854:	da03      	bge.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c856:	140a      	asrs	r2, r1, #16
 801c858:	d401      	bmi.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c85a:	42b2      	cmp	r2, r6
 801c85c:	db07      	blt.n	801c86e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c85e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c860:	4410      	add	r0, r2
 801c862:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c864:	3b01      	subs	r3, #1
 801c866:	4411      	add	r1, r2
 801c868:	3402      	adds	r4, #2
 801c86a:	e7ee      	b.n	801c84a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c86c:	d017      	beq.n	801c89e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c86e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c870:	1e5a      	subs	r2, r3, #1
 801c872:	fb05 0502 	mla	r5, r5, r2, r0
 801c876:	142d      	asrs	r5, r5, #16
 801c878:	d409      	bmi.n	801c88e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c87a:	42bd      	cmp	r5, r7
 801c87c:	da07      	bge.n	801c88e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c87e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c880:	fb05 1202 	mla	r2, r5, r2, r1
 801c884:	1412      	asrs	r2, r2, #16
 801c886:	d402      	bmi.n	801c88e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c888:	42b2      	cmp	r2, r6
 801c88a:	f2c0 80c7 	blt.w	801ca1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c88e:	2700      	movs	r7, #0
 801c890:	19da      	adds	r2, r3, r7
 801c892:	2a00      	cmp	r2, #0
 801c894:	dc3e      	bgt.n	801c914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c896:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c89a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c89e:	f1bb 0f00 	cmp.w	fp, #0
 801c8a2:	f340 8131 	ble.w	801cb08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c8a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c8aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c8ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c8b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8b4:	f1bb 0b01 	subs.w	fp, fp, #1
 801c8b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c8bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c8c0:	eeb0 6a62 	vmov.f32	s12, s5
 801c8c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c8c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8d0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c8d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8d8:	eeb0 6a43 	vmov.f32	s12, s6
 801c8dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8e0:	ee12 2a90 	vmov	r2, s5
 801c8e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8ec:	ee13 2a10 	vmov	r2, s6
 801c8f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8fc:	9a03      	ldr	r2, [sp, #12]
 801c8fe:	9314      	str	r3, [sp, #80]	; 0x50
 801c900:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c904:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c906:	eeb0 3a67 	vmov.f32	s6, s15
 801c90a:	bf08      	it	eq
 801c90c:	4613      	moveq	r3, r2
 801c90e:	eef0 2a47 	vmov.f32	s5, s14
 801c912:	e789      	b.n	801c828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c914:	1405      	asrs	r5, r0, #16
 801c916:	d435      	bmi.n	801c984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c918:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c91c:	42aa      	cmp	r2, r5
 801c91e:	dd31      	ble.n	801c984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c920:	140e      	asrs	r6, r1, #16
 801c922:	d42f      	bmi.n	801c984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c924:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c928:	42b2      	cmp	r2, r6
 801c92a:	dd2b      	ble.n	801c984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c92c:	9a00      	ldr	r2, [sp, #0]
 801c92e:	fb06 5502 	mla	r5, r6, r2, r5
 801c932:	086a      	lsrs	r2, r5, #1
 801c934:	9e01      	ldr	r6, [sp, #4]
 801c936:	5cb2      	ldrb	r2, [r6, r2]
 801c938:	07ee      	lsls	r6, r5, #31
 801c93a:	bf54      	ite	pl
 801c93c:	f002 020f 	andpl.w	r2, r2, #15
 801c940:	1112      	asrmi	r2, r2, #4
 801c942:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c946:	b2d2      	uxtb	r2, r2
 801c948:	b1e2      	cbz	r2, 801c984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c94a:	9d04      	ldr	r5, [sp, #16]
 801c94c:	436a      	muls	r2, r5
 801c94e:	1c55      	adds	r5, r2, #1
 801c950:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c954:	4d6e      	ldr	r5, [pc, #440]	; (801cb10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c956:	682d      	ldr	r5, [r5, #0]
 801c958:	1212      	asrs	r2, r2, #8
 801c95a:	0a2e      	lsrs	r6, r5, #8
 801c95c:	2aff      	cmp	r2, #255	; 0xff
 801c95e:	9605      	str	r6, [sp, #20]
 801c960:	d116      	bne.n	801c990 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c962:	f06f 0201 	mvn.w	r2, #1
 801c966:	fb02 fc07 	mul.w	ip, r2, r7
 801c96a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c96e:	096a      	lsrs	r2, r5, #5
 801c970:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c974:	f026 0607 	bic.w	r6, r6, #7
 801c978:	4316      	orrs	r6, r2
 801c97a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c97e:	432e      	orrs	r6, r5
 801c980:	f824 600c 	strh.w	r6, [r4, ip]
 801c984:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c986:	4410      	add	r0, r2
 801c988:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c98a:	3f01      	subs	r7, #1
 801c98c:	4411      	add	r1, r2
 801c98e:	e77f      	b.n	801c890 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c990:	f06f 0601 	mvn.w	r6, #1
 801c994:	437e      	muls	r6, r7
 801c996:	fa1f fa82 	uxth.w	sl, r2
 801c99a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c99e:	9602      	str	r6, [sp, #8]
 801c9a0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c9a4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c9a8:	43d2      	mvns	r2, r2
 801c9aa:	b2d2      	uxtb	r2, r2
 801c9ac:	fb1c fc0a 	smulbb	ip, ip, sl
 801c9b0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c9b4:	fb0e ce02 	mla	lr, lr, r2, ip
 801c9b8:	b2ed      	uxtb	r5, r5
 801c9ba:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c9be:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c9c2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c9c6:	fa5f f888 	uxtb.w	r8, r8
 801c9ca:	fb15 f50a 	smulbb	r5, r5, sl
 801c9ce:	fb08 5502 	mla	r5, r8, r2, r5
 801c9d2:	fa1f fe8e 	uxth.w	lr, lr
 801c9d6:	fb16 f60a 	smulbb	r6, r6, sl
 801c9da:	b2ad      	uxth	r5, r5
 801c9dc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c9e0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c9e4:	f10e 0201 	add.w	r2, lr, #1
 801c9e8:	1c6e      	adds	r6, r5, #1
 801c9ea:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c9ee:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c9f2:	fa1f fc8c 	uxth.w	ip, ip
 801c9f6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c9fa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c9fe:	ea46 0e0e 	orr.w	lr, r6, lr
 801ca02:	f10c 0601 	add.w	r6, ip, #1
 801ca06:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ca0a:	0976      	lsrs	r6, r6, #5
 801ca0c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ca10:	9a02      	ldr	r2, [sp, #8]
 801ca12:	ea4e 0e06 	orr.w	lr, lr, r6
 801ca16:	f824 e002 	strh.w	lr, [r4, r2]
 801ca1a:	e7b3      	b.n	801c984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca1c:	f04f 0800 	mov.w	r8, #0
 801ca20:	eba3 0208 	sub.w	r2, r3, r8
 801ca24:	2a00      	cmp	r2, #0
 801ca26:	f77f af36 	ble.w	801c896 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ca2a:	9e00      	ldr	r6, [sp, #0]
 801ca2c:	1402      	asrs	r2, r0, #16
 801ca2e:	140d      	asrs	r5, r1, #16
 801ca30:	fb06 2505 	mla	r5, r6, r5, r2
 801ca34:	086a      	lsrs	r2, r5, #1
 801ca36:	9e01      	ldr	r6, [sp, #4]
 801ca38:	5cb2      	ldrb	r2, [r6, r2]
 801ca3a:	07ed      	lsls	r5, r5, #31
 801ca3c:	bf54      	ite	pl
 801ca3e:	f002 020f 	andpl.w	r2, r2, #15
 801ca42:	1112      	asrmi	r2, r2, #4
 801ca44:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ca48:	b2d2      	uxtb	r2, r2
 801ca4a:	b1c2      	cbz	r2, 801ca7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ca4c:	9d04      	ldr	r5, [sp, #16]
 801ca4e:	436a      	muls	r2, r5
 801ca50:	1c55      	adds	r5, r2, #1
 801ca52:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ca56:	4d2e      	ldr	r5, [pc, #184]	; (801cb10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ca58:	1212      	asrs	r2, r2, #8
 801ca5a:	682e      	ldr	r6, [r5, #0]
 801ca5c:	2aff      	cmp	r2, #255	; 0xff
 801ca5e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ca62:	d113      	bne.n	801ca8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ca64:	0972      	lsrs	r2, r6, #5
 801ca66:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ca6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca6e:	f025 0507 	bic.w	r5, r5, #7
 801ca72:	4315      	orrs	r5, r2
 801ca74:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ca78:	4335      	orrs	r5, r6
 801ca7a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ca7e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ca80:	4410      	add	r0, r2
 801ca82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ca84:	f108 0801 	add.w	r8, r8, #1
 801ca88:	4411      	add	r1, r2
 801ca8a:	e7c9      	b.n	801ca20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ca8c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ca90:	fa1f fa82 	uxth.w	sl, r2
 801ca94:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ca98:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ca9c:	43d2      	mvns	r2, r2
 801ca9e:	b2d2      	uxtb	r2, r2
 801caa0:	fb17 f70a 	smulbb	r7, r7, sl
 801caa4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801caa8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801caac:	b2f6      	uxtb	r6, r6
 801caae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801cab2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cab6:	fa5f fe8e 	uxtb.w	lr, lr
 801caba:	fb16 f60a 	smulbb	r6, r6, sl
 801cabe:	fb0e 6602 	mla	r6, lr, r2, r6
 801cac2:	b2ed      	uxtb	r5, r5
 801cac4:	fa1f fc8c 	uxth.w	ip, ip
 801cac8:	fb15 f50a 	smulbb	r5, r5, sl
 801cacc:	b2b6      	uxth	r6, r6
 801cace:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cad2:	fb07 5702 	mla	r7, r7, r2, r5
 801cad6:	f10c 0201 	add.w	r2, ip, #1
 801cada:	1c75      	adds	r5, r6, #1
 801cadc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cae0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cae4:	b2bf      	uxth	r7, r7
 801cae6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801caea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801caee:	ea45 0c0c 	orr.w	ip, r5, ip
 801caf2:	1c7d      	adds	r5, r7, #1
 801caf4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801caf8:	096d      	lsrs	r5, r5, #5
 801cafa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cafe:	ea4c 0c05 	orr.w	ip, ip, r5
 801cb02:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801cb06:	e7ba      	b.n	801ca7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cb08:	b007      	add	sp, #28
 801cb0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb0e:	bf00      	nop
 801cb10:	20013844 	.word	0x20013844

0801cb14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb18:	b087      	sub	sp, #28
 801cb1a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ce28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801cb1e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cb20:	9205      	str	r2, [sp, #20]
 801cb22:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cb26:	9101      	str	r1, [sp, #4]
 801cb28:	6841      	ldr	r1, [r0, #4]
 801cb2a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801cb2e:	fb01 2404 	mla	r4, r1, r4, r2
 801cb32:	6802      	ldr	r2, [r0, #0]
 801cb34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cb38:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cb3c:	3201      	adds	r2, #1
 801cb3e:	f022 0201 	bic.w	r2, r2, #1
 801cb42:	9202      	str	r2, [sp, #8]
 801cb44:	f8db 2000 	ldr.w	r2, [fp]
 801cb48:	9203      	str	r2, [sp, #12]
 801cb4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cb4e:	9a01      	ldr	r2, [sp, #4]
 801cb50:	2a00      	cmp	r2, #0
 801cb52:	dc03      	bgt.n	801cb5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cb54:	9a05      	ldr	r2, [sp, #20]
 801cb56:	2a00      	cmp	r2, #0
 801cb58:	f340 8162 	ble.w	801ce20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cb5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb5e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801cb62:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801cb66:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cb6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb6c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb70:	2b00      	cmp	r3, #0
 801cb72:	dd0e      	ble.n	801cb92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cb74:	1402      	asrs	r2, r0, #16
 801cb76:	d405      	bmi.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb78:	42ba      	cmp	r2, r7
 801cb7a:	da03      	bge.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb7c:	140a      	asrs	r2, r1, #16
 801cb7e:	d401      	bmi.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb80:	42b2      	cmp	r2, r6
 801cb82:	db07      	blt.n	801cb94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cb84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cb86:	4410      	add	r0, r2
 801cb88:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cb8a:	3b01      	subs	r3, #1
 801cb8c:	4411      	add	r1, r2
 801cb8e:	3402      	adds	r4, #2
 801cb90:	e7ee      	b.n	801cb70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cb92:	d017      	beq.n	801cbc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801cb94:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cb96:	1e5a      	subs	r2, r3, #1
 801cb98:	fb05 0502 	mla	r5, r5, r2, r0
 801cb9c:	142d      	asrs	r5, r5, #16
 801cb9e:	d409      	bmi.n	801cbb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cba0:	42bd      	cmp	r5, r7
 801cba2:	da07      	bge.n	801cbb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cba4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cba6:	fb05 1202 	mla	r2, r5, r2, r1
 801cbaa:	1412      	asrs	r2, r2, #16
 801cbac:	d402      	bmi.n	801cbb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cbae:	42b2      	cmp	r2, r6
 801cbb0:	f2c0 80c3 	blt.w	801cd3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801cbb4:	2500      	movs	r5, #0
 801cbb6:	195a      	adds	r2, r3, r5
 801cbb8:	2a00      	cmp	r2, #0
 801cbba:	dc3f      	bgt.n	801cc3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cbbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cbc0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cbc4:	9b01      	ldr	r3, [sp, #4]
 801cbc6:	2b00      	cmp	r3, #0
 801cbc8:	f340 812a 	ble.w	801ce20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cbcc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cbd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cbd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cbd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cbde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cbe2:	eeb0 6a62 	vmov.f32	s12, s5
 801cbe6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cbea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cbee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cbf2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cbf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cbfa:	eeb0 6a43 	vmov.f32	s12, s6
 801cbfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cc02:	ee12 2a90 	vmov	r2, s5
 801cc06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cc0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc0e:	ee13 2a10 	vmov	r2, s6
 801cc12:	9313      	str	r3, [sp, #76]	; 0x4c
 801cc14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc16:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc1a:	9314      	str	r3, [sp, #80]	; 0x50
 801cc1c:	9b01      	ldr	r3, [sp, #4]
 801cc1e:	9a05      	ldr	r2, [sp, #20]
 801cc20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cc24:	3b01      	subs	r3, #1
 801cc26:	9301      	str	r3, [sp, #4]
 801cc28:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cc2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc2e:	eeb0 3a67 	vmov.f32	s6, s15
 801cc32:	bf08      	it	eq
 801cc34:	4613      	moveq	r3, r2
 801cc36:	eef0 2a47 	vmov.f32	s5, s14
 801cc3a:	e788      	b.n	801cb4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cc3c:	1406      	asrs	r6, r0, #16
 801cc3e:	d42c      	bmi.n	801cc9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc40:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cc44:	42b2      	cmp	r2, r6
 801cc46:	dd28      	ble.n	801cc9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc48:	140f      	asrs	r7, r1, #16
 801cc4a:	d426      	bmi.n	801cc9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc4c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801cc50:	42ba      	cmp	r2, r7
 801cc52:	dd22      	ble.n	801cc9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc54:	9a02      	ldr	r2, [sp, #8]
 801cc56:	fb07 6602 	mla	r6, r7, r2, r6
 801cc5a:	0872      	lsrs	r2, r6, #1
 801cc5c:	9f03      	ldr	r7, [sp, #12]
 801cc5e:	5cba      	ldrb	r2, [r7, r2]
 801cc60:	07f6      	lsls	r6, r6, #31
 801cc62:	bf54      	ite	pl
 801cc64:	f002 020f 	andpl.w	r2, r2, #15
 801cc68:	1112      	asrmi	r2, r2, #4
 801cc6a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cc6e:	b2d2      	uxtb	r2, r2
 801cc70:	2aff      	cmp	r2, #255	; 0xff
 801cc72:	d118      	bne.n	801cca6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801cc74:	f8d8 2000 	ldr.w	r2, [r8]
 801cc78:	f06f 0601 	mvn.w	r6, #1
 801cc7c:	fb06 f705 	mul.w	r7, r6, r5
 801cc80:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801cc84:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801cc88:	0956      	lsrs	r6, r2, #5
 801cc8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cc8e:	ea4c 0606 	orr.w	r6, ip, r6
 801cc92:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc96:	4316      	orrs	r6, r2
 801cc98:	53e6      	strh	r6, [r4, r7]
 801cc9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cc9c:	4410      	add	r0, r2
 801cc9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cca0:	3d01      	subs	r5, #1
 801cca2:	4411      	add	r1, r2
 801cca4:	e787      	b.n	801cbb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cca6:	2a00      	cmp	r2, #0
 801cca8:	d0f7      	beq.n	801cc9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ccaa:	f06f 0601 	mvn.w	r6, #1
 801ccae:	436e      	muls	r6, r5
 801ccb0:	f8d8 c000 	ldr.w	ip, [r8]
 801ccb4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ccb8:	9604      	str	r6, [sp, #16]
 801ccba:	fa1f f982 	uxth.w	r9, r2
 801ccbe:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ccc2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ccc6:	43d2      	mvns	r2, r2
 801ccc8:	b2d2      	uxtb	r2, r2
 801ccca:	fb16 f609 	smulbb	r6, r6, r9
 801ccce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ccd2:	fb07 6702 	mla	r7, r7, r2, r6
 801ccd6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ccda:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ccde:	fa5f fc8c 	uxtb.w	ip, ip
 801cce2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cce6:	fa5f fe8e 	uxtb.w	lr, lr
 801ccea:	fb1c fc09 	smulbb	ip, ip, r9
 801ccee:	fb0e cc02 	mla	ip, lr, r2, ip
 801ccf2:	b2bf      	uxth	r7, r7
 801ccf4:	fb1a fa09 	smulbb	sl, sl, r9
 801ccf8:	fa1f fc8c 	uxth.w	ip, ip
 801ccfc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd00:	fb06 a602 	mla	r6, r6, r2, sl
 801cd04:	1c7a      	adds	r2, r7, #1
 801cd06:	f10c 0a01 	add.w	sl, ip, #1
 801cd0a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801cd0e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801cd12:	b2b6      	uxth	r6, r6
 801cd14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cd18:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd1c:	ea4a 0707 	orr.w	r7, sl, r7
 801cd20:	f106 0a01 	add.w	sl, r6, #1
 801cd24:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cd28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cd2c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cd30:	9a04      	ldr	r2, [sp, #16]
 801cd32:	ea47 070a 	orr.w	r7, r7, sl
 801cd36:	52a7      	strh	r7, [r4, r2]
 801cd38:	e7af      	b.n	801cc9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd3a:	f04f 0e00 	mov.w	lr, #0
 801cd3e:	eba3 020e 	sub.w	r2, r3, lr
 801cd42:	2a00      	cmp	r2, #0
 801cd44:	f77f af3a 	ble.w	801cbbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801cd48:	9e02      	ldr	r6, [sp, #8]
 801cd4a:	1402      	asrs	r2, r0, #16
 801cd4c:	140d      	asrs	r5, r1, #16
 801cd4e:	fb06 2505 	mla	r5, r6, r5, r2
 801cd52:	086a      	lsrs	r2, r5, #1
 801cd54:	9e03      	ldr	r6, [sp, #12]
 801cd56:	5cb2      	ldrb	r2, [r6, r2]
 801cd58:	07ed      	lsls	r5, r5, #31
 801cd5a:	bf54      	ite	pl
 801cd5c:	f002 020f 	andpl.w	r2, r2, #15
 801cd60:	1112      	asrmi	r2, r2, #4
 801cd62:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cd66:	b2d2      	uxtb	r2, r2
 801cd68:	2aff      	cmp	r2, #255	; 0xff
 801cd6a:	d115      	bne.n	801cd98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801cd6c:	f8d8 5000 	ldr.w	r5, [r8]
 801cd70:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801cd74:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801cd78:	096a      	lsrs	r2, r5, #5
 801cd7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd7e:	4332      	orrs	r2, r6
 801cd80:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cd84:	432a      	orrs	r2, r5
 801cd86:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801cd8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cd8c:	4410      	add	r0, r2
 801cd8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cd90:	f10e 0e01 	add.w	lr, lr, #1
 801cd94:	4411      	add	r1, r2
 801cd96:	e7d2      	b.n	801cd3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cd98:	2a00      	cmp	r2, #0
 801cd9a:	d0f6      	beq.n	801cd8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cd9c:	f8d8 7000 	ldr.w	r7, [r8]
 801cda0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801cda4:	fa1f f982 	uxth.w	r9, r2
 801cda8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801cdac:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801cdb0:	43d2      	mvns	r2, r2
 801cdb2:	b2d2      	uxtb	r2, r2
 801cdb4:	fb15 f509 	smulbb	r5, r5, r9
 801cdb8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cdbc:	fb06 5602 	mla	r6, r6, r2, r5
 801cdc0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801cdc4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cdc8:	b2ff      	uxtb	r7, r7
 801cdca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cdce:	fa5f fc8c 	uxtb.w	ip, ip
 801cdd2:	fb17 f709 	smulbb	r7, r7, r9
 801cdd6:	fb0c 7702 	mla	r7, ip, r2, r7
 801cdda:	b2b6      	uxth	r6, r6
 801cddc:	fb1a fa09 	smulbb	sl, sl, r9
 801cde0:	b2bf      	uxth	r7, r7
 801cde2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cde6:	fb05 a502 	mla	r5, r5, r2, sl
 801cdea:	1c72      	adds	r2, r6, #1
 801cdec:	f107 0a01 	add.w	sl, r7, #1
 801cdf0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801cdf4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801cdf8:	b2ad      	uxth	r5, r5
 801cdfa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cdfe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ce02:	ea4a 0606 	orr.w	r6, sl, r6
 801ce06:	f105 0a01 	add.w	sl, r5, #1
 801ce0a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ce0e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ce12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ce16:	ea46 060a 	orr.w	r6, r6, sl
 801ce1a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ce1e:	e7b4      	b.n	801cd8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ce20:	b007      	add	sp, #28
 801ce22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce26:	bf00      	nop
 801ce28:	20013844 	.word	0x20013844

0801ce2c <_ZN8touchgfx8LCD16bppD1Ev>:
 801ce2c:	4770      	bx	lr

0801ce2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ce2e:	4770      	bx	lr

0801ce30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ce30:	4770      	bx	lr

0801ce32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ce32:	4770      	bx	lr

0801ce34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ce34:	4770      	bx	lr

0801ce36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ce36:	4770      	bx	lr

0801ce38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ce38:	4770      	bx	lr

0801ce3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ce3a:	4770      	bx	lr

0801ce3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce3c:	4770      	bx	lr

0801ce3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce3e:	4770      	bx	lr

0801ce40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce40:	4770      	bx	lr

0801ce42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce42:	4770      	bx	lr

0801ce44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce44:	4770      	bx	lr

0801ce46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce46:	4770      	bx	lr

0801ce48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce48:	4770      	bx	lr

0801ce4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce4a:	4770      	bx	lr

0801ce4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce4c:	4770      	bx	lr

0801ce4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ce4e:	4770      	bx	lr

0801ce50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce50:	4770      	bx	lr

0801ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce52:	4770      	bx	lr

0801ce54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce54:	4770      	bx	lr

0801ce56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce56:	4770      	bx	lr

0801ce58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce58:	4770      	bx	lr

0801ce5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce5a:	4770      	bx	lr

0801ce5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce5c:	4770      	bx	lr

0801ce5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce5e:	4770      	bx	lr

0801ce60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce60:	4770      	bx	lr

0801ce62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ce62:	4770      	bx	lr

0801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce64:	4770      	bx	lr

0801ce66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce66:	4770      	bx	lr

0801ce68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce68:	4770      	bx	lr

0801ce6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ce6a:	4770      	bx	lr

0801ce6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ce6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ce70:	b088      	sub	sp, #32
 801ce72:	ac08      	add	r4, sp, #32
 801ce74:	4606      	mov	r6, r0
 801ce76:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ce7a:	4620      	mov	r0, r4
 801ce7c:	4688      	mov	r8, r1
 801ce7e:	4691      	mov	r9, r2
 801ce80:	f7fd fc62 	bl	801a748 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ce84:	6833      	ldr	r3, [r6, #0]
 801ce86:	4605      	mov	r5, r0
 801ce88:	4620      	mov	r0, r4
 801ce8a:	699f      	ldr	r7, [r3, #24]
 801ce8c:	f7fd fb70 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ce90:	4682      	mov	sl, r0
 801ce92:	4620      	mov	r0, r4
 801ce94:	f7fd fba0 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ce98:	9500      	str	r5, [sp, #0]
 801ce9a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ce9e:	464b      	mov	r3, r9
 801cea0:	a806      	add	r0, sp, #24
 801cea2:	4642      	mov	r2, r8
 801cea4:	4631      	mov	r1, r6
 801cea6:	47b8      	blx	r7
 801cea8:	4628      	mov	r0, r5
 801ceaa:	b008      	add	sp, #32
 801ceac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ceb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ceb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ceb4:	2300      	movs	r3, #0
 801ceb6:	9300      	str	r3, [sp, #0]
 801ceb8:	4b3d      	ldr	r3, [pc, #244]	; (801cfb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ceba:	781b      	ldrb	r3, [r3, #0]
 801cebc:	2b00      	cmp	r3, #0
 801cebe:	d137      	bne.n	801cf30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801cec0:	4a3c      	ldr	r2, [pc, #240]	; (801cfb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cec2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801cec6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ceca:	2b00      	cmp	r3, #0
 801cecc:	d132      	bne.n	801cf34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801cece:	4b3a      	ldr	r3, [pc, #232]	; (801cfb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ced0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ced4:	6808      	ldr	r0, [r1, #0]
 801ced6:	6849      	ldr	r1, [r1, #4]
 801ced8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cedc:	ac02      	add	r4, sp, #8
 801cede:	ab02      	add	r3, sp, #8
 801cee0:	c303      	stmia	r3!, {r0, r1}
 801cee2:	4669      	mov	r1, sp
 801cee4:	4620      	mov	r0, r4
 801cee6:	f7f9 fd83 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ceea:	4668      	mov	r0, sp
 801ceec:	f7f9 fd3c 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cef0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cef4:	f8bd 2000 	ldrh.w	r2, [sp]
 801cef8:	4d30      	ldr	r5, [pc, #192]	; (801cfbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801cefa:	4413      	add	r3, r2
 801cefc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801cf00:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cf04:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cf08:	6828      	ldr	r0, [r5, #0]
 801cf0a:	4413      	add	r3, r2
 801cf0c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cf10:	6803      	ldr	r3, [r0, #0]
 801cf12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf14:	4798      	blx	r3
 801cf16:	f010 0f01 	tst.w	r0, #1
 801cf1a:	462f      	mov	r7, r5
 801cf1c:	d00c      	beq.n	801cf38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801cf1e:	6828      	ldr	r0, [r5, #0]
 801cf20:	6803      	ldr	r3, [r0, #0]
 801cf22:	e894 0006 	ldmia.w	r4, {r1, r2}
 801cf26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801cf28:	4798      	blx	r3
 801cf2a:	b004      	add	sp, #16
 801cf2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cf30:	4a21      	ldr	r2, [pc, #132]	; (801cfb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cf32:	e7c6      	b.n	801cec2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801cf34:	4b1f      	ldr	r3, [pc, #124]	; (801cfb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf36:	e7cb      	b.n	801ced0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801cf38:	6838      	ldr	r0, [r7, #0]
 801cf3a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801cf3e:	6803      	ldr	r3, [r0, #0]
 801cf40:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801cf44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cf46:	4798      	blx	r3
 801cf48:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801cf4c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cf50:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801cf54:	fb16 3602 	smlabb	r6, r6, r2, r3
 801cf58:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cf5c:	6838      	ldr	r0, [r7, #0]
 801cf5e:	6803      	ldr	r3, [r0, #0]
 801cf60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf62:	4798      	blx	r3
 801cf64:	4a13      	ldr	r2, [pc, #76]	; (801cfb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf66:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801cf6a:	8813      	ldrh	r3, [r2, #0]
 801cf6c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cf70:	fb03 1404 	mla	r4, r3, r4, r1
 801cf74:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cf78:	435d      	muls	r5, r3
 801cf7a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cf7e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801cf82:	4691      	mov	r9, r2
 801cf84:	6838      	ldr	r0, [r7, #0]
 801cf86:	42ac      	cmp	r4, r5
 801cf88:	6803      	ldr	r3, [r0, #0]
 801cf8a:	d20e      	bcs.n	801cfaa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801cf8c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801cf90:	4632      	mov	r2, r6
 801cf92:	4643      	mov	r3, r8
 801cf94:	4621      	mov	r1, r4
 801cf96:	47d0      	blx	sl
 801cf98:	f8b9 3000 	ldrh.w	r3, [r9]
 801cf9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cfa0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801cfa4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cfa8:	e7ec      	b.n	801cf84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801cfaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfac:	4798      	blx	r3
 801cfae:	e7bc      	b.n	801cf2a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801cfb0:	2001382c 	.word	0x2001382c
 801cfb4:	2001382e 	.word	0x2001382e
 801cfb8:	20013830 	.word	0x20013830
 801cfbc:	20013834 	.word	0x20013834

0801cfc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801cfc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfc4:	b08b      	sub	sp, #44	; 0x2c
 801cfc6:	460f      	mov	r7, r1
 801cfc8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801cfcc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801cfd0:	4616      	mov	r6, r2
 801cfd2:	f1bb 0f00 	cmp.w	fp, #0
 801cfd6:	d04a      	beq.n	801d06e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cfd8:	6810      	ldr	r0, [r2, #0]
 801cfda:	6851      	ldr	r1, [r2, #4]
 801cfdc:	ad06      	add	r5, sp, #24
 801cfde:	c503      	stmia	r5!, {r0, r1}
 801cfe0:	6818      	ldr	r0, [r3, #0]
 801cfe2:	6859      	ldr	r1, [r3, #4]
 801cfe4:	ad08      	add	r5, sp, #32
 801cfe6:	c503      	stmia	r5!, {r0, r1}
 801cfe8:	a806      	add	r0, sp, #24
 801cfea:	f7f9 fcbd 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfee:	4631      	mov	r1, r6
 801cff0:	a808      	add	r0, sp, #32
 801cff2:	f7f9 fcfd 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cff6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801cffa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801cffe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801d002:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801d006:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801d00a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801d00e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801d012:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801d016:	4f5f      	ldr	r7, [pc, #380]	; (801d194 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d018:	440a      	add	r2, r1
 801d01a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801d01e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801d022:	6838      	ldr	r0, [r7, #0]
 801d024:	4413      	add	r3, r2
 801d026:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801d02a:	6803      	ldr	r3, [r0, #0]
 801d02c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d02e:	4798      	blx	r3
 801d030:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d034:	46b9      	mov	r9, r7
 801d036:	d11d      	bne.n	801d074 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d038:	b9fc      	cbnz	r4, 801d07a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d03a:	f010 0f01 	tst.w	r0, #1
 801d03e:	d01c      	beq.n	801d07a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d040:	f8d9 0000 	ldr.w	r0, [r9]
 801d044:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801d048:	6801      	ldr	r1, [r0, #0]
 801d04a:	f8cd b00c 	str.w	fp, [sp, #12]
 801d04e:	2700      	movs	r7, #0
 801d050:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d054:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d058:	9402      	str	r4, [sp, #8]
 801d05a:	b2ad      	uxth	r5, r5
 801d05c:	fa1f f488 	uxth.w	r4, r8
 801d060:	9501      	str	r5, [sp, #4]
 801d062:	9400      	str	r4, [sp, #0]
 801d064:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801d066:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d06a:	4631      	mov	r1, r6
 801d06c:	47a0      	blx	r4
 801d06e:	b00b      	add	sp, #44	; 0x2c
 801d070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d074:	f010 0f04 	tst.w	r0, #4
 801d078:	e7e1      	b.n	801d03e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d07a:	f8d9 0000 	ldr.w	r0, [r9]
 801d07e:	6803      	ldr	r3, [r0, #0]
 801d080:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d082:	4798      	blx	r3
 801d084:	4b44      	ldr	r3, [pc, #272]	; (801d198 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d086:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801d08a:	881a      	ldrh	r2, [r3, #0]
 801d08c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d090:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d094:	fb02 1404 	mla	r4, r2, r4, r1
 801d098:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d09c:	469a      	mov	sl, r3
 801d09e:	fb05 f502 	mul.w	r5, r5, r2
 801d0a2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d0a6:	d059      	beq.n	801d15c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d0a8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801d0ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d0b0:	fa1f f28b 	uxth.w	r2, fp
 801d0b4:	fa1f f989 	uxth.w	r9, r9
 801d0b8:	469e      	mov	lr, r3
 801d0ba:	42ac      	cmp	r4, r5
 801d0bc:	d264      	bcs.n	801d188 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d0be:	eb04 0a07 	add.w	sl, r4, r7
 801d0c2:	4554      	cmp	r4, sl
 801d0c4:	d23d      	bcs.n	801d142 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d0c6:	8821      	ldrh	r1, [r4, #0]
 801d0c8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d0cc:	1208      	asrs	r0, r1, #8
 801d0ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d0d2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d0d6:	fb10 f009 	smulbb	r0, r0, r9
 801d0da:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d0de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d0e2:	00c9      	lsls	r1, r1, #3
 801d0e4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d0e8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d0ec:	10d8      	asrs	r0, r3, #3
 801d0ee:	b2c9      	uxtb	r1, r1
 801d0f0:	00db      	lsls	r3, r3, #3
 801d0f2:	fa1f fc8c 	uxth.w	ip, ip
 801d0f6:	fb1b fb09 	smulbb	fp, fp, r9
 801d0fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d0fe:	b2db      	uxtb	r3, r3
 801d100:	fb11 f109 	smulbb	r1, r1, r9
 801d104:	fb00 b002 	mla	r0, r0, r2, fp
 801d108:	fb03 1302 	mla	r3, r3, r2, r1
 801d10c:	f10c 0b01 	add.w	fp, ip, #1
 801d110:	b29b      	uxth	r3, r3
 801d112:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d116:	b280      	uxth	r0, r0
 801d118:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801d11c:	f103 0c01 	add.w	ip, r3, #1
 801d120:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d124:	1c43      	adds	r3, r0, #1
 801d126:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d12a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d12e:	0940      	lsrs	r0, r0, #5
 801d130:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d134:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d138:	ea4c 0c00 	orr.w	ip, ip, r0
 801d13c:	f824 cb02 	strh.w	ip, [r4], #2
 801d140:	e7bf      	b.n	801d0c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d142:	f8be 3000 	ldrh.w	r3, [lr]
 801d146:	eba3 0308 	sub.w	r3, r3, r8
 801d14a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d14e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d152:	eba3 0308 	sub.w	r3, r3, r8
 801d156:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d15a:	e7ae      	b.n	801d0ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d15c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d160:	f8d9 0000 	ldr.w	r0, [r9]
 801d164:	42ac      	cmp	r4, r5
 801d166:	6803      	ldr	r3, [r0, #0]
 801d168:	d20e      	bcs.n	801d188 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d16a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801d16e:	4632      	mov	r2, r6
 801d170:	463b      	mov	r3, r7
 801d172:	4621      	mov	r1, r4
 801d174:	47c0      	blx	r8
 801d176:	f8ba 3000 	ldrh.w	r3, [sl]
 801d17a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d17e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d182:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d186:	e7eb      	b.n	801d160 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d188:	4b02      	ldr	r3, [pc, #8]	; (801d194 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d18a:	6818      	ldr	r0, [r3, #0]
 801d18c:	6803      	ldr	r3, [r0, #0]
 801d18e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d190:	4798      	blx	r3
 801d192:	e76c      	b.n	801d06e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d194:	20013834 	.word	0x20013834
 801d198:	2001382e 	.word	0x2001382e

0801d19c <_ZN8touchgfx8LCD16bppD0Ev>:
 801d19c:	b510      	push	{r4, lr}
 801d19e:	2184      	movs	r1, #132	; 0x84
 801d1a0:	4604      	mov	r4, r0
 801d1a2:	f00d fe4a 	bl	802ae3a <_ZdlPvj>
 801d1a6:	4620      	mov	r0, r4
 801d1a8:	bd10      	pop	{r4, pc}

0801d1aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d1aa:	b510      	push	{r4, lr}
 801d1ac:	2104      	movs	r1, #4
 801d1ae:	4604      	mov	r4, r0
 801d1b0:	f00d fe43 	bl	802ae3a <_ZdlPvj>
 801d1b4:	4620      	mov	r0, r4
 801d1b6:	bd10      	pop	{r4, pc}

0801d1b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d1b8:	b510      	push	{r4, lr}
 801d1ba:	2104      	movs	r1, #4
 801d1bc:	4604      	mov	r4, r0
 801d1be:	f00d fe3c 	bl	802ae3a <_ZdlPvj>
 801d1c2:	4620      	mov	r0, r4
 801d1c4:	bd10      	pop	{r4, pc}

0801d1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d1c6:	b510      	push	{r4, lr}
 801d1c8:	f640 0144 	movw	r1, #2116	; 0x844
 801d1cc:	4604      	mov	r4, r0
 801d1ce:	f00d fe34 	bl	802ae3a <_ZdlPvj>
 801d1d2:	4620      	mov	r0, r4
 801d1d4:	bd10      	pop	{r4, pc}

0801d1d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d1d6:	b510      	push	{r4, lr}
 801d1d8:	2104      	movs	r1, #4
 801d1da:	4604      	mov	r4, r0
 801d1dc:	f00d fe2d 	bl	802ae3a <_ZdlPvj>
 801d1e0:	4620      	mov	r0, r4
 801d1e2:	bd10      	pop	{r4, pc}

0801d1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d1e4:	b510      	push	{r4, lr}
 801d1e6:	2104      	movs	r1, #4
 801d1e8:	4604      	mov	r4, r0
 801d1ea:	f00d fe26 	bl	802ae3a <_ZdlPvj>
 801d1ee:	4620      	mov	r0, r4
 801d1f0:	bd10      	pop	{r4, pc}

0801d1f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d1f2:	b510      	push	{r4, lr}
 801d1f4:	2104      	movs	r1, #4
 801d1f6:	4604      	mov	r4, r0
 801d1f8:	f00d fe1f 	bl	802ae3a <_ZdlPvj>
 801d1fc:	4620      	mov	r0, r4
 801d1fe:	bd10      	pop	{r4, pc}

0801d200 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d200:	b510      	push	{r4, lr}
 801d202:	2104      	movs	r1, #4
 801d204:	4604      	mov	r4, r0
 801d206:	f00d fe18 	bl	802ae3a <_ZdlPvj>
 801d20a:	4620      	mov	r0, r4
 801d20c:	bd10      	pop	{r4, pc}

0801d20e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d20e:	b510      	push	{r4, lr}
 801d210:	2104      	movs	r1, #4
 801d212:	4604      	mov	r4, r0
 801d214:	f00d fe11 	bl	802ae3a <_ZdlPvj>
 801d218:	4620      	mov	r0, r4
 801d21a:	bd10      	pop	{r4, pc}

0801d21c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d21c:	b510      	push	{r4, lr}
 801d21e:	2104      	movs	r1, #4
 801d220:	4604      	mov	r4, r0
 801d222:	f00d fe0a 	bl	802ae3a <_ZdlPvj>
 801d226:	4620      	mov	r0, r4
 801d228:	bd10      	pop	{r4, pc}

0801d22a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d22a:	b510      	push	{r4, lr}
 801d22c:	2104      	movs	r1, #4
 801d22e:	4604      	mov	r4, r0
 801d230:	f00d fe03 	bl	802ae3a <_ZdlPvj>
 801d234:	4620      	mov	r0, r4
 801d236:	bd10      	pop	{r4, pc}

0801d238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d238:	b510      	push	{r4, lr}
 801d23a:	2104      	movs	r1, #4
 801d23c:	4604      	mov	r4, r0
 801d23e:	f00d fdfc 	bl	802ae3a <_ZdlPvj>
 801d242:	4620      	mov	r0, r4
 801d244:	bd10      	pop	{r4, pc}

0801d246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d246:	b510      	push	{r4, lr}
 801d248:	2104      	movs	r1, #4
 801d24a:	4604      	mov	r4, r0
 801d24c:	f00d fdf5 	bl	802ae3a <_ZdlPvj>
 801d250:	4620      	mov	r0, r4
 801d252:	bd10      	pop	{r4, pc}

0801d254 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d254:	b510      	push	{r4, lr}
 801d256:	2104      	movs	r1, #4
 801d258:	4604      	mov	r4, r0
 801d25a:	f00d fdee 	bl	802ae3a <_ZdlPvj>
 801d25e:	4620      	mov	r0, r4
 801d260:	bd10      	pop	{r4, pc}

0801d262 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d262:	b510      	push	{r4, lr}
 801d264:	2104      	movs	r1, #4
 801d266:	4604      	mov	r4, r0
 801d268:	f00d fde7 	bl	802ae3a <_ZdlPvj>
 801d26c:	4620      	mov	r0, r4
 801d26e:	bd10      	pop	{r4, pc}

0801d270 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d270:	b510      	push	{r4, lr}
 801d272:	2104      	movs	r1, #4
 801d274:	4604      	mov	r4, r0
 801d276:	f00d fde0 	bl	802ae3a <_ZdlPvj>
 801d27a:	4620      	mov	r0, r4
 801d27c:	bd10      	pop	{r4, pc}

0801d27e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d27e:	b510      	push	{r4, lr}
 801d280:	2104      	movs	r1, #4
 801d282:	4604      	mov	r4, r0
 801d284:	f00d fdd9 	bl	802ae3a <_ZdlPvj>
 801d288:	4620      	mov	r0, r4
 801d28a:	bd10      	pop	{r4, pc}

0801d28c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d28c:	b510      	push	{r4, lr}
 801d28e:	2104      	movs	r1, #4
 801d290:	4604      	mov	r4, r0
 801d292:	f00d fdd2 	bl	802ae3a <_ZdlPvj>
 801d296:	4620      	mov	r0, r4
 801d298:	bd10      	pop	{r4, pc}

0801d29a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d29a:	b510      	push	{r4, lr}
 801d29c:	2104      	movs	r1, #4
 801d29e:	4604      	mov	r4, r0
 801d2a0:	f00d fdcb 	bl	802ae3a <_ZdlPvj>
 801d2a4:	4620      	mov	r0, r4
 801d2a6:	bd10      	pop	{r4, pc}

0801d2a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d2a8:	b510      	push	{r4, lr}
 801d2aa:	2104      	movs	r1, #4
 801d2ac:	4604      	mov	r4, r0
 801d2ae:	f00d fdc4 	bl	802ae3a <_ZdlPvj>
 801d2b2:	4620      	mov	r0, r4
 801d2b4:	bd10      	pop	{r4, pc}

0801d2b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d2b6:	b510      	push	{r4, lr}
 801d2b8:	2104      	movs	r1, #4
 801d2ba:	4604      	mov	r4, r0
 801d2bc:	f00d fdbd 	bl	802ae3a <_ZdlPvj>
 801d2c0:	4620      	mov	r0, r4
 801d2c2:	bd10      	pop	{r4, pc}

0801d2c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d2c4:	b510      	push	{r4, lr}
 801d2c6:	2104      	movs	r1, #4
 801d2c8:	4604      	mov	r4, r0
 801d2ca:	f00d fdb6 	bl	802ae3a <_ZdlPvj>
 801d2ce:	4620      	mov	r0, r4
 801d2d0:	bd10      	pop	{r4, pc}

0801d2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d2d2:	b510      	push	{r4, lr}
 801d2d4:	2104      	movs	r1, #4
 801d2d6:	4604      	mov	r4, r0
 801d2d8:	f00d fdaf 	bl	802ae3a <_ZdlPvj>
 801d2dc:	4620      	mov	r0, r4
 801d2de:	bd10      	pop	{r4, pc}

0801d2e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d2e0:	b510      	push	{r4, lr}
 801d2e2:	2104      	movs	r1, #4
 801d2e4:	4604      	mov	r4, r0
 801d2e6:	f00d fda8 	bl	802ae3a <_ZdlPvj>
 801d2ea:	4620      	mov	r0, r4
 801d2ec:	bd10      	pop	{r4, pc}

0801d2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d2ee:	b510      	push	{r4, lr}
 801d2f0:	2104      	movs	r1, #4
 801d2f2:	4604      	mov	r4, r0
 801d2f4:	f00d fda1 	bl	802ae3a <_ZdlPvj>
 801d2f8:	4620      	mov	r0, r4
 801d2fa:	bd10      	pop	{r4, pc}

0801d2fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d2fc:	b510      	push	{r4, lr}
 801d2fe:	2104      	movs	r1, #4
 801d300:	4604      	mov	r4, r0
 801d302:	f00d fd9a 	bl	802ae3a <_ZdlPvj>
 801d306:	4620      	mov	r0, r4
 801d308:	bd10      	pop	{r4, pc}

0801d30a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d30a:	b510      	push	{r4, lr}
 801d30c:	2104      	movs	r1, #4
 801d30e:	4604      	mov	r4, r0
 801d310:	f00d fd93 	bl	802ae3a <_ZdlPvj>
 801d314:	4620      	mov	r0, r4
 801d316:	bd10      	pop	{r4, pc}

0801d318 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d318:	b510      	push	{r4, lr}
 801d31a:	2104      	movs	r1, #4
 801d31c:	4604      	mov	r4, r0
 801d31e:	f00d fd8c 	bl	802ae3a <_ZdlPvj>
 801d322:	4620      	mov	r0, r4
 801d324:	bd10      	pop	{r4, pc}

0801d326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801d326:	b510      	push	{r4, lr}
 801d328:	2104      	movs	r1, #4
 801d32a:	4604      	mov	r4, r0
 801d32c:	f00d fd85 	bl	802ae3a <_ZdlPvj>
 801d330:	4620      	mov	r0, r4
 801d332:	bd10      	pop	{r4, pc}

0801d334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801d334:	b510      	push	{r4, lr}
 801d336:	2104      	movs	r1, #4
 801d338:	4604      	mov	r4, r0
 801d33a:	f00d fd7e 	bl	802ae3a <_ZdlPvj>
 801d33e:	4620      	mov	r0, r4
 801d340:	bd10      	pop	{r4, pc}

0801d342 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801d342:	b510      	push	{r4, lr}
 801d344:	2104      	movs	r1, #4
 801d346:	4604      	mov	r4, r0
 801d348:	f00d fd77 	bl	802ae3a <_ZdlPvj>
 801d34c:	4620      	mov	r0, r4
 801d34e:	bd10      	pop	{r4, pc}

0801d350 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801d350:	b510      	push	{r4, lr}
 801d352:	2104      	movs	r1, #4
 801d354:	4604      	mov	r4, r0
 801d356:	f00d fd70 	bl	802ae3a <_ZdlPvj>
 801d35a:	4620      	mov	r0, r4
 801d35c:	bd10      	pop	{r4, pc}
	...

0801d360 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d364:	b08f      	sub	sp, #60	; 0x3c
 801d366:	461c      	mov	r4, r3
 801d368:	9205      	str	r2, [sp, #20]
 801d36a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d36e:	9100      	str	r1, [sp, #0]
 801d370:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d372:	9201      	str	r2, [sp, #4]
 801d374:	2a00      	cmp	r2, #0
 801d376:	f000 8115 	beq.w	801d5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801d37a:	6820      	ldr	r0, [r4, #0]
 801d37c:	6861      	ldr	r1, [r4, #4]
 801d37e:	aa0a      	add	r2, sp, #40	; 0x28
 801d380:	c203      	stmia	r2!, {r0, r1}
 801d382:	6818      	ldr	r0, [r3, #0]
 801d384:	6859      	ldr	r1, [r3, #4]
 801d386:	aa0c      	add	r2, sp, #48	; 0x30
 801d388:	c203      	stmia	r2!, {r0, r1}
 801d38a:	a80a      	add	r0, sp, #40	; 0x28
 801d38c:	f7f9 faec 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d390:	4621      	mov	r1, r4
 801d392:	a80c      	add	r0, sp, #48	; 0x30
 801d394:	f7f9 fb2c 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d398:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d39c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d3a0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d3a4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d3a8:	bfde      	ittt	le
 801d3aa:	b2b3      	uxthle	r3, r6
 801d3ac:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d3b0:	fb92 f3f3 	sdivle	r3, r2, r3
 801d3b4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d3b8:	bfc8      	it	gt
 801d3ba:	2301      	movgt	r3, #1
 801d3bc:	fb92 f1f3 	sdiv	r1, r2, r3
 801d3c0:	fa1f fc81 	uxth.w	ip, r1
 801d3c4:	fb0c 2413 	mls	r4, ip, r3, r2
 801d3c8:	fb14 f406 	smulbb	r4, r4, r6
 801d3cc:	441d      	add	r5, r3
 801d3ce:	4404      	add	r4, r0
 801d3d0:	4661      	mov	r1, ip
 801d3d2:	3d01      	subs	r5, #1
 801d3d4:	b2a4      	uxth	r4, r4
 801d3d6:	fb95 f5f3 	sdiv	r5, r5, r3
 801d3da:	b131      	cbz	r1, 801d3ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801d3dc:	9b05      	ldr	r3, [sp, #20]
 801d3de:	9900      	ldr	r1, [sp, #0]
 801d3e0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d3e4:	ba1b      	rev	r3, r3
 801d3e6:	4419      	add	r1, r3
 801d3e8:	9100      	str	r1, [sp, #0]
 801d3ea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d3ee:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801d3f2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d3f6:	4418      	add	r0, r3
 801d3f8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d3fc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d400:	441a      	add	r2, r3
 801d402:	4b6a      	ldr	r3, [pc, #424]	; (801d5ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d404:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d408:	6818      	ldr	r0, [r3, #0]
 801d40a:	6803      	ldr	r3, [r0, #0]
 801d40c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d40e:	4798      	blx	r3
 801d410:	4967      	ldr	r1, [pc, #412]	; (801d5b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801d412:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d416:	880b      	ldrh	r3, [r1, #0]
 801d418:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d41c:	9109      	str	r1, [sp, #36]	; 0x24
 801d41e:	fb03 c202 	mla	r2, r3, r2, ip
 801d422:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d426:	4373      	muls	r3, r6
 801d428:	b2ad      	uxth	r5, r5
 801d42a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d42e:	00ad      	lsls	r5, r5, #2
 801d430:	9306      	str	r3, [sp, #24]
 801d432:	1d2b      	adds	r3, r5, #4
 801d434:	9307      	str	r3, [sp, #28]
 801d436:	9b01      	ldr	r3, [sp, #4]
 801d438:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d43c:	9103      	str	r1, [sp, #12]
 801d43e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801d442:	2c00      	cmp	r4, #0
 801d444:	bf0c      	ite	eq
 801d446:	46c6      	moveq	lr, r8
 801d448:	f04f 0e00 	movne.w	lr, #0
 801d44c:	2300      	movs	r3, #0
 801d44e:	b292      	uxth	r2, r2
 801d450:	fa1f fe8e 	uxth.w	lr, lr
 801d454:	9302      	str	r3, [sp, #8]
 801d456:	9204      	str	r2, [sp, #16]
 801d458:	9a06      	ldr	r2, [sp, #24]
 801d45a:	4282      	cmp	r2, r0
 801d45c:	f240 809d 	bls.w	801d59a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d460:	b963      	cbnz	r3, 801d47c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d462:	9b00      	ldr	r3, [sp, #0]
 801d464:	781a      	ldrb	r2, [r3, #0]
 801d466:	0993      	lsrs	r3, r2, #6
 801d468:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d46c:	9202      	str	r2, [sp, #8]
 801d46e:	1e5a      	subs	r2, r3, #1
 801d470:	2a02      	cmp	r2, #2
 801d472:	d815      	bhi.n	801d4a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d474:	9a00      	ldr	r2, [sp, #0]
 801d476:	3201      	adds	r2, #1
 801d478:	9200      	str	r2, [sp, #0]
 801d47a:	b29b      	uxth	r3, r3
 801d47c:	b1b4      	cbz	r4, 801d4ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d47e:	429c      	cmp	r4, r3
 801d480:	bf95      	itete	ls
 801d482:	1b1c      	subls	r4, r3, r4
 801d484:	1ae4      	subhi	r4, r4, r3
 801d486:	fa1f fa84 	uxthls.w	sl, r4
 801d48a:	b2a4      	uxthhi	r4, r4
 801d48c:	bf87      	ittee	hi
 801d48e:	4671      	movhi	r1, lr
 801d490:	f04f 0a00 	movhi.w	sl, #0
 801d494:	fa1f f188 	uxthls.w	r1, r8
 801d498:	2400      	movls	r4, #0
 801d49a:	4653      	mov	r3, sl
 801d49c:	468e      	mov	lr, r1
 801d49e:	e7db      	b.n	801d458 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d4a0:	9a00      	ldr	r2, [sp, #0]
 801d4a2:	9b00      	ldr	r3, [sp, #0]
 801d4a4:	3202      	adds	r2, #2
 801d4a6:	785b      	ldrb	r3, [r3, #1]
 801d4a8:	9200      	str	r2, [sp, #0]
 801d4aa:	e7e7      	b.n	801d47c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d4ac:	2202      	movs	r2, #2
 801d4ae:	4615      	mov	r5, r2
 801d4b0:	9907      	ldr	r1, [sp, #28]
 801d4b2:	9a02      	ldr	r2, [sp, #8]
 801d4b4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d4b8:	9905      	ldr	r1, [sp, #20]
 801d4ba:	4573      	cmp	r3, lr
 801d4bc:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d4c0:	9a01      	ldr	r2, [sp, #4]
 801d4c2:	bf2b      	itete	cs
 801d4c4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d4c8:	ebae 0103 	subcc.w	r1, lr, r3
 801d4cc:	46f1      	movcs	r9, lr
 801d4ce:	4699      	movcc	r9, r3
 801d4d0:	bf27      	ittee	cs
 801d4d2:	fa1f fa8a 	uxthcs.w	sl, sl
 801d4d6:	4621      	movcs	r1, r4
 801d4d8:	b289      	uxthcc	r1, r1
 801d4da:	46a2      	movcc	sl, r4
 801d4dc:	2aff      	cmp	r2, #255	; 0xff
 801d4de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d4e2:	d105      	bne.n	801d4f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d4e4:	4481      	add	r9, r0
 801d4e6:	4581      	cmp	r9, r0
 801d4e8:	d045      	beq.n	801d576 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d4ea:	f820 cb02 	strh.w	ip, [r0], #2
 801d4ee:	e7fa      	b.n	801d4e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d4f0:	9d03      	ldr	r5, [sp, #12]
 801d4f2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d4f6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d4fa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d4fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d502:	436a      	muls	r2, r5
 801d504:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d508:	fa5f fc8c 	uxtb.w	ip, ip
 801d50c:	9208      	str	r2, [sp, #32]
 801d50e:	fb0b fb05 	mul.w	fp, fp, r5
 801d512:	fb0c fc05 	mul.w	ip, ip, r5
 801d516:	4481      	add	r9, r0
 801d518:	4581      	cmp	r9, r0
 801d51a:	d02c      	beq.n	801d576 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d51c:	8802      	ldrh	r2, [r0, #0]
 801d51e:	9d04      	ldr	r5, [sp, #16]
 801d520:	9f04      	ldr	r7, [sp, #16]
 801d522:	1216      	asrs	r6, r2, #8
 801d524:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d528:	fb16 f605 	smulbb	r6, r6, r5
 801d52c:	9d08      	ldr	r5, [sp, #32]
 801d52e:	442e      	add	r6, r5
 801d530:	10d5      	asrs	r5, r2, #3
 801d532:	00d2      	lsls	r2, r2, #3
 801d534:	b2d2      	uxtb	r2, r2
 801d536:	fb12 f207 	smulbb	r2, r2, r7
 801d53a:	b2b6      	uxth	r6, r6
 801d53c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d540:	4462      	add	r2, ip
 801d542:	fb15 f507 	smulbb	r5, r5, r7
 801d546:	b292      	uxth	r2, r2
 801d548:	1c77      	adds	r7, r6, #1
 801d54a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d54e:	1c57      	adds	r7, r2, #1
 801d550:	445d      	add	r5, fp
 801d552:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d556:	b2ad      	uxth	r5, r5
 801d558:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d55c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d560:	4316      	orrs	r6, r2
 801d562:	1c6a      	adds	r2, r5, #1
 801d564:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d568:	096d      	lsrs	r5, r5, #5
 801d56a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d56e:	432e      	orrs	r6, r5
 801d570:	f820 6b02 	strh.w	r6, [r0], #2
 801d574:	e7d0      	b.n	801d518 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d576:	4573      	cmp	r3, lr
 801d578:	d38f      	bcc.n	801d49a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d57a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d57e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d580:	fa1f f188 	uxth.w	r1, r8
 801d584:	1a64      	subs	r4, r4, r1
 801d586:	881b      	ldrh	r3, [r3, #0]
 801d588:	b2a4      	uxth	r4, r4
 801d58a:	2c00      	cmp	r4, #0
 801d58c:	eba3 0308 	sub.w	r3, r3, r8
 801d590:	bf18      	it	ne
 801d592:	2100      	movne	r1, #0
 801d594:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d598:	e77f      	b.n	801d49a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d59a:	4b04      	ldr	r3, [pc, #16]	; (801d5ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d59c:	6818      	ldr	r0, [r3, #0]
 801d59e:	6803      	ldr	r3, [r0, #0]
 801d5a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5a2:	4798      	blx	r3
 801d5a4:	b00f      	add	sp, #60	; 0x3c
 801d5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5aa:	bf00      	nop
 801d5ac:	20013834 	.word	0x20013834
 801d5b0:	2001382e 	.word	0x2001382e

0801d5b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d5b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5b8:	b09f      	sub	sp, #124	; 0x7c
 801d5ba:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d5be:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d5c2:	9209      	str	r2, [sp, #36]	; 0x24
 801d5c4:	461d      	mov	r5, r3
 801d5c6:	4604      	mov	r4, r0
 801d5c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d5ca:	2a00      	cmp	r2, #0
 801d5cc:	f000 81eb 	beq.w	801d9a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d5d0:	6828      	ldr	r0, [r5, #0]
 801d5d2:	6869      	ldr	r1, [r5, #4]
 801d5d4:	aa1a      	add	r2, sp, #104	; 0x68
 801d5d6:	c203      	stmia	r2!, {r0, r1}
 801d5d8:	6818      	ldr	r0, [r3, #0]
 801d5da:	6859      	ldr	r1, [r3, #4]
 801d5dc:	aa1c      	add	r2, sp, #112	; 0x70
 801d5de:	c203      	stmia	r2!, {r0, r1}
 801d5e0:	a81a      	add	r0, sp, #104	; 0x68
 801d5e2:	f7f9 f9c1 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5e6:	4629      	mov	r1, r5
 801d5e8:	a81c      	add	r0, sp, #112	; 0x70
 801d5ea:	f7f9 fa01 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d5ee:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d5f2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d5f6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d5fa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d5fe:	bfd7      	itett	le
 801d600:	b29a      	uxthle	r2, r3
 801d602:	2201      	movgt	r2, #1
 801d604:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d608:	fb91 f2f2 	sdivle	r2, r1, r2
 801d60c:	9202      	str	r2, [sp, #8]
 801d60e:	9802      	ldr	r0, [sp, #8]
 801d610:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d614:	fb92 f0f0 	sdiv	r0, r2, r0
 801d618:	b280      	uxth	r0, r0
 801d61a:	9010      	str	r0, [sp, #64]	; 0x40
 801d61c:	9902      	ldr	r1, [sp, #8]
 801d61e:	9802      	ldr	r0, [sp, #8]
 801d620:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d622:	4488      	add	r8, r1
 801d624:	fb05 2510 	mls	r5, r5, r0, r2
 801d628:	fb15 f503 	smulbb	r5, r5, r3
 801d62c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d630:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d634:	fb98 f8f1 	sdiv	r8, r8, r1
 801d638:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d63c:	440d      	add	r5, r1
 801d63e:	4419      	add	r1, r3
 801d640:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d644:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d648:	441a      	add	r2, r3
 801d64a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d64e:	9304      	str	r3, [sp, #16]
 801d650:	4b95      	ldr	r3, [pc, #596]	; (801d8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d652:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d656:	6818      	ldr	r0, [r3, #0]
 801d658:	6803      	ldr	r3, [r0, #0]
 801d65a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d65c:	4798      	blx	r3
 801d65e:	4b93      	ldr	r3, [pc, #588]	; (801d8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d660:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d664:	881a      	ldrh	r2, [r3, #0]
 801d666:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d66a:	9318      	str	r3, [sp, #96]	; 0x60
 801d66c:	fb02 7101 	mla	r1, r2, r1, r7
 801d670:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d674:	4356      	muls	r6, r2
 801d676:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d67a:	f108 0801 	add.w	r8, r8, #1
 801d67e:	920a      	str	r2, [sp, #40]	; 0x28
 801d680:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d682:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d686:	930f      	str	r3, [sp, #60]	; 0x3c
 801d688:	fa1f f888 	uxth.w	r8, r8
 801d68c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d690:	f108 0204 	add.w	r2, r8, #4
 801d694:	9211      	str	r2, [sp, #68]	; 0x44
 801d696:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d698:	4b85      	ldr	r3, [pc, #532]	; (801d8b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d69a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d69e:	b2ad      	uxth	r5, r5
 801d6a0:	9215      	str	r2, [sp, #84]	; 0x54
 801d6a2:	2d00      	cmp	r5, #0
 801d6a4:	9a04      	ldr	r2, [sp, #16]
 801d6a6:	f04f 0100 	mov.w	r1, #0
 801d6aa:	bf18      	it	ne
 801d6ac:	2200      	movne	r2, #0
 801d6ae:	1b1b      	subs	r3, r3, r4
 801d6b0:	b292      	uxth	r2, r2
 801d6b2:	910d      	str	r1, [sp, #52]	; 0x34
 801d6b4:	9319      	str	r3, [sp, #100]	; 0x64
 801d6b6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d6b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d6ba:	fa11 f383 	uxtah	r3, r1, r3
 801d6be:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d6c0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d6c4:	3304      	adds	r3, #4
 801d6c6:	9306      	str	r3, [sp, #24]
 801d6c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6ca:	4283      	cmp	r3, r0
 801d6cc:	f240 8166 	bls.w	801d99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d6d0:	9902      	ldr	r1, [sp, #8]
 801d6d2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d6d6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d6da:	1acb      	subs	r3, r1, r3
 801d6dc:	b29b      	uxth	r3, r3
 801d6de:	9316      	str	r3, [sp, #88]	; 0x58
 801d6e0:	9b06      	ldr	r3, [sp, #24]
 801d6e2:	9e06      	ldr	r6, [sp, #24]
 801d6e4:	7859      	ldrb	r1, [r3, #1]
 801d6e6:	789b      	ldrb	r3, [r3, #2]
 801d6e8:	7836      	ldrb	r6, [r6, #0]
 801d6ea:	9612      	str	r6, [sp, #72]	; 0x48
 801d6ec:	021b      	lsls	r3, r3, #8
 801d6ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d6f2:	9906      	ldr	r1, [sp, #24]
 801d6f4:	78c9      	ldrb	r1, [r1, #3]
 801d6f6:	430b      	orrs	r3, r1
 801d6f8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d6fa:	3601      	adds	r6, #1
 801d6fc:	4419      	add	r1, r3
 801d6fe:	9605      	str	r6, [sp, #20]
 801d700:	1c4e      	adds	r6, r1, #1
 801d702:	9603      	str	r6, [sp, #12]
 801d704:	7849      	ldrb	r1, [r1, #1]
 801d706:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d708:	0209      	lsls	r1, r1, #8
 801d70a:	5cf3      	ldrb	r3, [r6, r3]
 801d70c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d710:	4319      	orrs	r1, r3
 801d712:	b28b      	uxth	r3, r1
 801d714:	930c      	str	r3, [sp, #48]	; 0x30
 801d716:	2300      	movs	r3, #0
 801d718:	f04f 0a01 	mov.w	sl, #1
 801d71c:	9307      	str	r3, [sp, #28]
 801d71e:	469c      	mov	ip, r3
 801d720:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d724:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d728:	46d3      	mov	fp, sl
 801d72a:	4657      	mov	r7, sl
 801d72c:	930e      	str	r3, [sp, #56]	; 0x38
 801d72e:	2d00      	cmp	r5, #0
 801d730:	d07e      	beq.n	801d830 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d732:	42af      	cmp	r7, r5
 801d734:	d26e      	bcs.n	801d814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d736:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d738:	9201      	str	r2, [sp, #4]
 801d73a:	1bed      	subs	r5, r5, r7
 801d73c:	4283      	cmp	r3, r0
 801d73e:	b2ad      	uxth	r5, r5
 801d740:	d802      	bhi.n	801d748 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d742:	e073      	b.n	801d82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d744:	2b00      	cmp	r3, #0
 801d746:	d15f      	bne.n	801d808 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d748:	9b03      	ldr	r3, [sp, #12]
 801d74a:	785b      	ldrb	r3, [r3, #1]
 801d74c:	f1cb 0207 	rsb	r2, fp, #7
 801d750:	4093      	lsls	r3, r2
 801d752:	005b      	lsls	r3, r3, #1
 801d754:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d758:	9b03      	ldr	r3, [sp, #12]
 801d75a:	781b      	ldrb	r3, [r3, #0]
 801d75c:	fa43 f30b 	asr.w	r3, r3, fp
 801d760:	b2db      	uxtb	r3, r3
 801d762:	4313      	orrs	r3, r2
 801d764:	f10b 0201 	add.w	r2, fp, #1
 801d768:	fa5f fb82 	uxtb.w	fp, r2
 801d76c:	9a03      	ldr	r2, [sp, #12]
 801d76e:	f1bb 0f08 	cmp.w	fp, #8
 801d772:	bf15      	itete	ne
 801d774:	3201      	addne	r2, #1
 801d776:	3202      	addeq	r2, #2
 801d778:	9203      	strne	r2, [sp, #12]
 801d77a:	9203      	streq	r2, [sp, #12]
 801d77c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d77e:	b29f      	uxth	r7, r3
 801d780:	bf08      	it	eq
 801d782:	f04f 0b00 	moveq.w	fp, #0
 801d786:	42ba      	cmp	r2, r7
 801d788:	d309      	bcc.n	801d79e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d78a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d78e:	2301      	movs	r3, #1
 801d790:	9a05      	ldr	r2, [sp, #20]
 801d792:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d796:	d30e      	bcc.n	801d7b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d798:	469a      	mov	sl, r3
 801d79a:	2600      	movs	r6, #0
 801d79c:	e035      	b.n	801d80a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d79e:	9b05      	ldr	r3, [sp, #20]
 801d7a0:	429f      	cmp	r7, r3
 801d7a2:	d318      	bcc.n	801d7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d7a4:	eb04 030a 	add.w	r3, r4, sl
 801d7a8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d7ac:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d7b0:	f10a 0301 	add.w	r3, sl, #1
 801d7b4:	b29b      	uxth	r3, r3
 801d7b6:	9a05      	ldr	r2, [sp, #20]
 801d7b8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d7bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d7be:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d7c2:	7116      	strb	r6, [r2, #4]
 801d7c4:	f10a 0601 	add.w	r6, sl, #1
 801d7c8:	80d1      	strh	r1, [r2, #6]
 801d7ca:	7156      	strb	r6, [r2, #5]
 801d7cc:	9a05      	ldr	r2, [sp, #20]
 801d7ce:	3201      	adds	r2, #1
 801d7d0:	b292      	uxth	r2, r2
 801d7d2:	9205      	str	r2, [sp, #20]
 801d7d4:	e7e0      	b.n	801d798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d7d6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d7da:	463a      	mov	r2, r7
 801d7dc:	795b      	ldrb	r3, [r3, #5]
 801d7de:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d7e2:	4426      	add	r6, r4
 801d7e4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d7e6:	eb01 0c06 	add.w	ip, r1, r6
 801d7ea:	f1bc 0f00 	cmp.w	ip, #0
 801d7ee:	dd07      	ble.n	801d800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d7f0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d7f4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d7f8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d7fc:	88d2      	ldrh	r2, [r2, #6]
 801d7fe:	e7f1      	b.n	801d7e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d800:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d804:	b29b      	uxth	r3, r3
 801d806:	e7c3      	b.n	801d790 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d808:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d80a:	970c      	str	r7, [sp, #48]	; 0x30
 801d80c:	9a01      	ldr	r2, [sp, #4]
 801d80e:	46b4      	mov	ip, r6
 801d810:	461f      	mov	r7, r3
 801d812:	e78c      	b.n	801d72e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d814:	1b7b      	subs	r3, r7, r5
 801d816:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d81a:	9201      	str	r2, [sp, #4]
 801d81c:	eb0c 0605 	add.w	r6, ip, r5
 801d820:	b29b      	uxth	r3, r3
 801d822:	b2b6      	uxth	r6, r6
 801d824:	2500      	movs	r5, #0
 801d826:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d828:	4282      	cmp	r2, r0
 801d82a:	d88b      	bhi.n	801d744 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d82c:	9a01      	ldr	r2, [sp, #4]
 801d82e:	e74b      	b.n	801d6c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d830:	4297      	cmp	r7, r2
 801d832:	d332      	bcc.n	801d89a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d834:	1abb      	subs	r3, r7, r2
 801d836:	b29b      	uxth	r3, r3
 801d838:	9208      	str	r2, [sp, #32]
 801d83a:	9501      	str	r5, [sp, #4]
 801d83c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d83e:	29ff      	cmp	r1, #255	; 0xff
 801d840:	9908      	ldr	r1, [sp, #32]
 801d842:	eb0c 0601 	add.w	r6, ip, r1
 801d846:	d135      	bne.n	801d8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d848:	f1a0 0e02 	sub.w	lr, r0, #2
 801d84c:	b2b6      	uxth	r6, r6
 801d84e:	45b4      	cmp	ip, r6
 801d850:	f040 808c 	bne.w	801d96c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d854:	9908      	ldr	r1, [sp, #32]
 801d856:	4297      	cmp	r7, r2
 801d858:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d85c:	d3e2      	bcc.n	801d824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d85e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d860:	9904      	ldr	r1, [sp, #16]
 801d862:	8812      	ldrh	r2, [r2, #0]
 801d864:	1a52      	subs	r2, r2, r1
 801d866:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d86a:	9a07      	ldr	r2, [sp, #28]
 801d86c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d86e:	3201      	adds	r2, #1
 801d870:	428a      	cmp	r2, r1
 801d872:	9207      	str	r2, [sp, #28]
 801d874:	f040 8087 	bne.w	801d986 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d878:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d87c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d880:	9b04      	ldr	r3, [sp, #16]
 801d882:	1bed      	subs	r5, r5, r7
 801d884:	b2ad      	uxth	r5, r5
 801d886:	2d00      	cmp	r5, #0
 801d888:	bf08      	it	eq
 801d88a:	461a      	moveq	r2, r3
 801d88c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d88e:	bf18      	it	ne
 801d890:	2200      	movne	r2, #0
 801d892:	3301      	adds	r3, #1
 801d894:	930d      	str	r3, [sp, #52]	; 0x34
 801d896:	b292      	uxth	r2, r2
 801d898:	e70d      	b.n	801d6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d89a:	1bd1      	subs	r1, r2, r7
 801d89c:	b28b      	uxth	r3, r1
 801d89e:	9301      	str	r3, [sp, #4]
 801d8a0:	9708      	str	r7, [sp, #32]
 801d8a2:	462b      	mov	r3, r5
 801d8a4:	e7ca      	b.n	801d83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d8a6:	bf00      	nop
 801d8a8:	20013834 	.word	0x20013834
 801d8ac:	2001382e 	.word	0x2001382e
 801d8b0:	fffff7fb 	.word	0xfffff7fb
 801d8b4:	b2b6      	uxth	r6, r6
 801d8b6:	900b      	str	r0, [sp, #44]	; 0x2c
 801d8b8:	45b4      	cmp	ip, r6
 801d8ba:	d0cb      	beq.n	801d854 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d8bc:	f10c 0101 	add.w	r1, ip, #1
 801d8c0:	44a4      	add	ip, r4
 801d8c2:	9117      	str	r1, [sp, #92]	; 0x5c
 801d8c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d8c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d8ca:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d8ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d8d0:	f8b1 c000 	ldrh.w	ip, [r1]
 801d8d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8d6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d8da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d8de:	fb1e fe01 	smulbb	lr, lr, r1
 801d8e2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d8e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8e8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d8ec:	fb08 e801 	mla	r8, r8, r1, lr
 801d8f0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d8f4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8f6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d8fa:	fb19 f901 	smulbb	r9, r9, r1
 801d8fe:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d902:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d904:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d908:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d90c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d910:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d912:	fa5f fc8c 	uxtb.w	ip, ip
 801d916:	fb1c fc01 	smulbb	ip, ip, r1
 801d91a:	00ed      	lsls	r5, r5, #3
 801d91c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d91e:	b2ed      	uxtb	r5, r5
 801d920:	fb05 c501 	mla	r5, r5, r1, ip
 801d924:	fa1f f888 	uxth.w	r8, r8
 801d928:	fa1f fe8e 	uxth.w	lr, lr
 801d92c:	b2ad      	uxth	r5, r5
 801d92e:	f108 0c01 	add.w	ip, r8, #1
 801d932:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d936:	f10e 0901 	add.w	r9, lr, #1
 801d93a:	f105 0c01 	add.w	ip, r5, #1
 801d93e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d942:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d946:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d94a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d94e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d952:	ea4c 0808 	orr.w	r8, ip, r8
 801d956:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d958:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d95c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d960:	ea48 0809 	orr.w	r8, r8, r9
 801d964:	f821 8b02 	strh.w	r8, [r1], #2
 801d968:	910b      	str	r1, [sp, #44]	; 0x2c
 801d96a:	e7a5      	b.n	801d8b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d96c:	f10c 0801 	add.w	r8, ip, #1
 801d970:	44a4      	add	ip, r4
 801d972:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d974:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d978:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d97c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d980:	fa1f fc88 	uxth.w	ip, r8
 801d984:	e763      	b.n	801d84e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d986:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d98a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d98e:	1aad      	subs	r5, r5, r2
 801d990:	b2ad      	uxth	r5, r5
 801d992:	2d00      	cmp	r5, #0
 801d994:	bf18      	it	ne
 801d996:	2200      	movne	r2, #0
 801d998:	9201      	str	r2, [sp, #4]
 801d99a:	e744      	b.n	801d826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d99c:	4b03      	ldr	r3, [pc, #12]	; (801d9ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d99e:	6818      	ldr	r0, [r3, #0]
 801d9a0:	6803      	ldr	r3, [r0, #0]
 801d9a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9a4:	4798      	blx	r3
 801d9a6:	b01f      	add	sp, #124	; 0x7c
 801d9a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9ac:	20013834 	.word	0x20013834

0801d9b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9b4:	b08f      	sub	sp, #60	; 0x3c
 801d9b6:	461c      	mov	r4, r3
 801d9b8:	9203      	str	r2, [sp, #12]
 801d9ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d9be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d9c0:	9202      	str	r2, [sp, #8]
 801d9c2:	460f      	mov	r7, r1
 801d9c4:	2a00      	cmp	r2, #0
 801d9c6:	f000 8128 	beq.w	801dc1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d9ca:	6820      	ldr	r0, [r4, #0]
 801d9cc:	6861      	ldr	r1, [r4, #4]
 801d9ce:	aa0a      	add	r2, sp, #40	; 0x28
 801d9d0:	c203      	stmia	r2!, {r0, r1}
 801d9d2:	6818      	ldr	r0, [r3, #0]
 801d9d4:	6859      	ldr	r1, [r3, #4]
 801d9d6:	aa0c      	add	r2, sp, #48	; 0x30
 801d9d8:	c203      	stmia	r2!, {r0, r1}
 801d9da:	a80a      	add	r0, sp, #40	; 0x28
 801d9dc:	f7f8 ffc4 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d9e0:	4621      	mov	r1, r4
 801d9e2:	a80c      	add	r0, sp, #48	; 0x30
 801d9e4:	f7f9 f804 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d9e8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d9ec:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d9f0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d9f4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d9f8:	bfde      	ittt	le
 801d9fa:	b2b3      	uxthle	r3, r6
 801d9fc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801da00:	fb92 f3f3 	sdivle	r3, r2, r3
 801da04:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801da08:	bfc8      	it	gt
 801da0a:	2301      	movgt	r3, #1
 801da0c:	fb92 f1f3 	sdiv	r1, r2, r3
 801da10:	fa1f fc81 	uxth.w	ip, r1
 801da14:	fb0c 2413 	mls	r4, ip, r3, r2
 801da18:	fb14 f406 	smulbb	r4, r4, r6
 801da1c:	441d      	add	r5, r3
 801da1e:	4404      	add	r4, r0
 801da20:	4661      	mov	r1, ip
 801da22:	3d01      	subs	r5, #1
 801da24:	b2a4      	uxth	r4, r4
 801da26:	fb95 f5f3 	sdiv	r5, r5, r3
 801da2a:	b121      	cbz	r1, 801da36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801da2c:	9b03      	ldr	r3, [sp, #12]
 801da2e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801da32:	ba1b      	rev	r3, r3
 801da34:	441f      	add	r7, r3
 801da36:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801da3a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801da3e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801da42:	4418      	add	r0, r3
 801da44:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801da48:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801da4c:	441a      	add	r2, r3
 801da4e:	4b74      	ldr	r3, [pc, #464]	; (801dc20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801da50:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801da54:	6818      	ldr	r0, [r3, #0]
 801da56:	6803      	ldr	r3, [r0, #0]
 801da58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da5a:	4798      	blx	r3
 801da5c:	4a71      	ldr	r2, [pc, #452]	; (801dc24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801da5e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801da62:	8813      	ldrh	r3, [r2, #0]
 801da64:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801da68:	9209      	str	r2, [sp, #36]	; 0x24
 801da6a:	fb03 c101 	mla	r1, r3, r1, ip
 801da6e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801da72:	4373      	muls	r3, r6
 801da74:	b2ad      	uxth	r5, r5
 801da76:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801da7a:	00ad      	lsls	r5, r5, #2
 801da7c:	2c00      	cmp	r4, #0
 801da7e:	9304      	str	r3, [sp, #16]
 801da80:	f105 0304 	add.w	r3, r5, #4
 801da84:	9305      	str	r3, [sp, #20]
 801da86:	bf0c      	ite	eq
 801da88:	46c8      	moveq	r8, r9
 801da8a:	f04f 0800 	movne.w	r8, #0
 801da8e:	2300      	movs	r3, #0
 801da90:	fa1f f888 	uxth.w	r8, r8
 801da94:	9301      	str	r3, [sp, #4]
 801da96:	9a04      	ldr	r2, [sp, #16]
 801da98:	4282      	cmp	r2, r0
 801da9a:	f240 80b9 	bls.w	801dc10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801da9e:	b95b      	cbnz	r3, 801dab8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801daa0:	783a      	ldrb	r2, [r7, #0]
 801daa2:	0993      	lsrs	r3, r2, #6
 801daa4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801daa8:	9201      	str	r2, [sp, #4]
 801daaa:	1e5a      	subs	r2, r3, #1
 801daac:	2a02      	cmp	r2, #2
 801daae:	bf8d      	iteet	hi
 801dab0:	787b      	ldrbhi	r3, [r7, #1]
 801dab2:	3701      	addls	r7, #1
 801dab4:	b29b      	uxthls	r3, r3
 801dab6:	3702      	addhi	r7, #2
 801dab8:	b184      	cbz	r4, 801dadc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801daba:	429c      	cmp	r4, r3
 801dabc:	bf95      	itete	ls
 801dabe:	1b1c      	subls	r4, r3, r4
 801dac0:	1ae4      	subhi	r4, r4, r3
 801dac2:	fa1f fa84 	uxthls.w	sl, r4
 801dac6:	b2a4      	uxthhi	r4, r4
 801dac8:	bf87      	ittee	hi
 801daca:	46c4      	movhi	ip, r8
 801dacc:	f04f 0a00 	movhi.w	sl, #0
 801dad0:	fa1f fc89 	uxthls.w	ip, r9
 801dad4:	2400      	movls	r4, #0
 801dad6:	4653      	mov	r3, sl
 801dad8:	46e0      	mov	r8, ip
 801dada:	e7dc      	b.n	801da96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801dadc:	2204      	movs	r2, #4
 801dade:	4615      	mov	r5, r2
 801dae0:	9905      	ldr	r1, [sp, #20]
 801dae2:	9a01      	ldr	r2, [sp, #4]
 801dae4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dae8:	9903      	ldr	r1, [sp, #12]
 801daea:	588a      	ldr	r2, [r1, r2]
 801daec:	4543      	cmp	r3, r8
 801daee:	bf27      	ittee	cs
 801daf0:	eba3 0a08 	subcs.w	sl, r3, r8
 801daf4:	46c6      	movcs	lr, r8
 801daf6:	eba8 0c03 	subcc.w	ip, r8, r3
 801dafa:	469e      	movcc	lr, r3
 801dafc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801db00:	bf27      	ittee	cs
 801db02:	fa1f fa8a 	uxthcs.w	sl, sl
 801db06:	46a4      	movcs	ip, r4
 801db08:	fa1f fc8c 	uxthcc.w	ip, ip
 801db0c:	46a2      	movcc	sl, r4
 801db0e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801db12:	2900      	cmp	r1, #0
 801db14:	d066      	beq.n	801dbe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801db16:	29ff      	cmp	r1, #255	; 0xff
 801db18:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801db1c:	d114      	bne.n	801db48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801db1e:	9d02      	ldr	r5, [sp, #8]
 801db20:	2dff      	cmp	r5, #255	; 0xff
 801db22:	d111      	bne.n	801db48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801db24:	0951      	lsrs	r1, r2, #5
 801db26:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801db2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801db2e:	f026 0607 	bic.w	r6, r6, #7
 801db32:	430e      	orrs	r6, r1
 801db34:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801db38:	4316      	orrs	r6, r2
 801db3a:	b2b6      	uxth	r6, r6
 801db3c:	4486      	add	lr, r0
 801db3e:	4586      	cmp	lr, r0
 801db40:	d051      	beq.n	801dbe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db42:	f820 6b02 	strh.w	r6, [r0], #2
 801db46:	e7fa      	b.n	801db3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801db48:	9d02      	ldr	r5, [sp, #8]
 801db4a:	4369      	muls	r1, r5
 801db4c:	1c4d      	adds	r5, r1, #1
 801db4e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801db52:	122d      	asrs	r5, r5, #8
 801db54:	ea6f 0b05 	mvn.w	fp, r5
 801db58:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801db5c:	b2ad      	uxth	r5, r5
 801db5e:	b2f6      	uxtb	r6, r6
 801db60:	b2d2      	uxtb	r2, r2
 801db62:	fb11 f105 	smulbb	r1, r1, r5
 801db66:	fb16 f605 	smulbb	r6, r6, r5
 801db6a:	fb12 f205 	smulbb	r2, r2, r5
 801db6e:	b289      	uxth	r1, r1
 801db70:	b2b6      	uxth	r6, r6
 801db72:	b292      	uxth	r2, r2
 801db74:	9106      	str	r1, [sp, #24]
 801db76:	9607      	str	r6, [sp, #28]
 801db78:	9208      	str	r2, [sp, #32]
 801db7a:	4486      	add	lr, r0
 801db7c:	fa5f fb8b 	uxtb.w	fp, fp
 801db80:	4586      	cmp	lr, r0
 801db82:	d030      	beq.n	801dbe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db84:	8802      	ldrh	r2, [r0, #0]
 801db86:	9906      	ldr	r1, [sp, #24]
 801db88:	1216      	asrs	r6, r2, #8
 801db8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db8e:	10d5      	asrs	r5, r2, #3
 801db90:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801db94:	fb06 160b 	mla	r6, r6, fp, r1
 801db98:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801db9c:	9907      	ldr	r1, [sp, #28]
 801db9e:	00d2      	lsls	r2, r2, #3
 801dba0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dba4:	fb05 150b 	mla	r5, r5, fp, r1
 801dba8:	b2d2      	uxtb	r2, r2
 801dbaa:	9908      	ldr	r1, [sp, #32]
 801dbac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dbb0:	b2b6      	uxth	r6, r6
 801dbb2:	fb02 120b 	mla	r2, r2, fp, r1
 801dbb6:	b292      	uxth	r2, r2
 801dbb8:	1c71      	adds	r1, r6, #1
 801dbba:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801dbbe:	1c51      	adds	r1, r2, #1
 801dbc0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dbc4:	b2ad      	uxth	r5, r5
 801dbc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dbca:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801dbce:	4316      	orrs	r6, r2
 801dbd0:	1c6a      	adds	r2, r5, #1
 801dbd2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801dbd6:	096d      	lsrs	r5, r5, #5
 801dbd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dbdc:	432e      	orrs	r6, r5
 801dbde:	f820 6b02 	strh.w	r6, [r0], #2
 801dbe2:	e7cd      	b.n	801db80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801dbe4:	4470      	add	r0, lr
 801dbe6:	4543      	cmp	r3, r8
 801dbe8:	f4ff af75 	bcc.w	801dad6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dbec:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801dbf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dbf2:	fa1f fc89 	uxth.w	ip, r9
 801dbf6:	eba4 040c 	sub.w	r4, r4, ip
 801dbfa:	881b      	ldrh	r3, [r3, #0]
 801dbfc:	b2a4      	uxth	r4, r4
 801dbfe:	2c00      	cmp	r4, #0
 801dc00:	eba3 0309 	sub.w	r3, r3, r9
 801dc04:	bf18      	it	ne
 801dc06:	f04f 0c00 	movne.w	ip, #0
 801dc0a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dc0e:	e762      	b.n	801dad6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dc10:	4b03      	ldr	r3, [pc, #12]	; (801dc20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dc12:	6818      	ldr	r0, [r3, #0]
 801dc14:	6803      	ldr	r3, [r0, #0]
 801dc16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dc18:	4798      	blx	r3
 801dc1a:	b00f      	add	sp, #60	; 0x3c
 801dc1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc20:	20013834 	.word	0x20013834
 801dc24:	2001382e 	.word	0x2001382e

0801dc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dc28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc2c:	b093      	sub	sp, #76	; 0x4c
 801dc2e:	461c      	mov	r4, r3
 801dc30:	9205      	str	r2, [sp, #20]
 801dc32:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801dc36:	9101      	str	r1, [sp, #4]
 801dc38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc3a:	9202      	str	r2, [sp, #8]
 801dc3c:	2a00      	cmp	r2, #0
 801dc3e:	f000 812c 	beq.w	801de9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801dc42:	6820      	ldr	r0, [r4, #0]
 801dc44:	6861      	ldr	r1, [r4, #4]
 801dc46:	aa0e      	add	r2, sp, #56	; 0x38
 801dc48:	c203      	stmia	r2!, {r0, r1}
 801dc4a:	6818      	ldr	r0, [r3, #0]
 801dc4c:	6859      	ldr	r1, [r3, #4]
 801dc4e:	aa10      	add	r2, sp, #64	; 0x40
 801dc50:	c203      	stmia	r2!, {r0, r1}
 801dc52:	a80e      	add	r0, sp, #56	; 0x38
 801dc54:	f7f8 fe88 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc58:	4621      	mov	r1, r4
 801dc5a:	a810      	add	r0, sp, #64	; 0x40
 801dc5c:	f7f8 fec8 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc60:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801dc64:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801dc68:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801dc6c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801dc70:	bfde      	ittt	le
 801dc72:	b2b3      	uxthle	r3, r6
 801dc74:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801dc78:	fb92 f3f3 	sdivle	r3, r2, r3
 801dc7c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dc80:	bfc8      	it	gt
 801dc82:	2301      	movgt	r3, #1
 801dc84:	fb92 f1f3 	sdiv	r1, r2, r3
 801dc88:	fa1f fc81 	uxth.w	ip, r1
 801dc8c:	fb0c 2413 	mls	r4, ip, r3, r2
 801dc90:	fb14 f406 	smulbb	r4, r4, r6
 801dc94:	441d      	add	r5, r3
 801dc96:	4404      	add	r4, r0
 801dc98:	4661      	mov	r1, ip
 801dc9a:	3d01      	subs	r5, #1
 801dc9c:	b2a4      	uxth	r4, r4
 801dc9e:	fb95 f5f3 	sdiv	r5, r5, r3
 801dca2:	b131      	cbz	r1, 801dcb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801dca4:	9b05      	ldr	r3, [sp, #20]
 801dca6:	9901      	ldr	r1, [sp, #4]
 801dca8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801dcac:	ba1b      	rev	r3, r3
 801dcae:	4419      	add	r1, r3
 801dcb0:	9101      	str	r1, [sp, #4]
 801dcb2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801dcb6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801dcba:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801dcbe:	4418      	add	r0, r3
 801dcc0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801dcc4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801dcc8:	441a      	add	r2, r3
 801dcca:	4b75      	ldr	r3, [pc, #468]	; (801dea0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801dccc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801dcd0:	6818      	ldr	r0, [r3, #0]
 801dcd2:	6803      	ldr	r3, [r0, #0]
 801dcd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dcd6:	4798      	blx	r3
 801dcd8:	4972      	ldr	r1, [pc, #456]	; (801dea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801dcda:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801dcde:	880b      	ldrh	r3, [r1, #0]
 801dce0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dce4:	910d      	str	r1, [sp, #52]	; 0x34
 801dce6:	fb03 c202 	mla	r2, r3, r2, ip
 801dcea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dcee:	4373      	muls	r3, r6
 801dcf0:	b2ad      	uxth	r5, r5
 801dcf2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dcf6:	00ad      	lsls	r5, r5, #2
 801dcf8:	9308      	str	r3, [sp, #32]
 801dcfa:	1d2b      	adds	r3, r5, #4
 801dcfc:	9309      	str	r3, [sp, #36]	; 0x24
 801dcfe:	9b02      	ldr	r3, [sp, #8]
 801dd00:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dd04:	9106      	str	r1, [sp, #24]
 801dd06:	43da      	mvns	r2, r3
 801dd08:	2c00      	cmp	r4, #0
 801dd0a:	bf0c      	ite	eq
 801dd0c:	46dc      	moveq	ip, fp
 801dd0e:	f04f 0c00 	movne.w	ip, #0
 801dd12:	2300      	movs	r3, #0
 801dd14:	b2d2      	uxtb	r2, r2
 801dd16:	fa1f fc8c 	uxth.w	ip, ip
 801dd1a:	9303      	str	r3, [sp, #12]
 801dd1c:	9207      	str	r2, [sp, #28]
 801dd1e:	9a08      	ldr	r2, [sp, #32]
 801dd20:	4282      	cmp	r2, r0
 801dd22:	f240 80b5 	bls.w	801de90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801dd26:	b963      	cbnz	r3, 801dd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dd28:	9b01      	ldr	r3, [sp, #4]
 801dd2a:	781a      	ldrb	r2, [r3, #0]
 801dd2c:	0993      	lsrs	r3, r2, #6
 801dd2e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dd32:	9203      	str	r2, [sp, #12]
 801dd34:	1e5a      	subs	r2, r3, #1
 801dd36:	2a02      	cmp	r2, #2
 801dd38:	d815      	bhi.n	801dd66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801dd3a:	9a01      	ldr	r2, [sp, #4]
 801dd3c:	3201      	adds	r2, #1
 801dd3e:	9201      	str	r2, [sp, #4]
 801dd40:	b29b      	uxth	r3, r3
 801dd42:	b1b4      	cbz	r4, 801dd72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801dd44:	429c      	cmp	r4, r3
 801dd46:	bf95      	itete	ls
 801dd48:	1b1c      	subls	r4, r3, r4
 801dd4a:	1ae4      	subhi	r4, r4, r3
 801dd4c:	fa1f f884 	uxthls.w	r8, r4
 801dd50:	b2a4      	uxthhi	r4, r4
 801dd52:	bf87      	ittee	hi
 801dd54:	4666      	movhi	r6, ip
 801dd56:	f04f 0800 	movhi.w	r8, #0
 801dd5a:	fa1f f68b 	uxthls.w	r6, fp
 801dd5e:	2400      	movls	r4, #0
 801dd60:	4643      	mov	r3, r8
 801dd62:	46b4      	mov	ip, r6
 801dd64:	e7db      	b.n	801dd1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801dd66:	9a01      	ldr	r2, [sp, #4]
 801dd68:	9b01      	ldr	r3, [sp, #4]
 801dd6a:	3202      	adds	r2, #2
 801dd6c:	785b      	ldrb	r3, [r3, #1]
 801dd6e:	9201      	str	r2, [sp, #4]
 801dd70:	e7e7      	b.n	801dd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dd72:	2203      	movs	r2, #3
 801dd74:	4615      	mov	r5, r2
 801dd76:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dd78:	9a03      	ldr	r2, [sp, #12]
 801dd7a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dd7e:	9905      	ldr	r1, [sp, #20]
 801dd80:	4563      	cmp	r3, ip
 801dd82:	eb01 0502 	add.w	r5, r1, r2
 801dd86:	9902      	ldr	r1, [sp, #8]
 801dd88:	bf29      	itett	cs
 801dd8a:	eba3 080c 	subcs.w	r8, r3, ip
 801dd8e:	ebac 0603 	subcc.w	r6, ip, r3
 801dd92:	fa1f f888 	uxthcs.w	r8, r8
 801dd96:	46e1      	movcs	r9, ip
 801dd98:	bf2f      	iteee	cs
 801dd9a:	4626      	movcs	r6, r4
 801dd9c:	b2b6      	uxthcc	r6, r6
 801dd9e:	4699      	movcc	r9, r3
 801dda0:	46a0      	movcc	r8, r4
 801dda2:	29ff      	cmp	r1, #255	; 0xff
 801dda4:	d04a      	beq.n	801de3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801dda6:	9f06      	ldr	r7, [sp, #24]
 801dda8:	78a9      	ldrb	r1, [r5, #2]
 801ddaa:	9004      	str	r0, [sp, #16]
 801ddac:	4379      	muls	r1, r7
 801ddae:	910a      	str	r1, [sp, #40]	; 0x28
 801ddb0:	7869      	ldrb	r1, [r5, #1]
 801ddb2:	4379      	muls	r1, r7
 801ddb4:	910b      	str	r1, [sp, #44]	; 0x2c
 801ddb6:	9905      	ldr	r1, [sp, #20]
 801ddb8:	5c8a      	ldrb	r2, [r1, r2]
 801ddba:	437a      	muls	r2, r7
 801ddbc:	920c      	str	r2, [sp, #48]	; 0x30
 801ddbe:	46ca      	mov	sl, r9
 801ddc0:	f1ba 0f00 	cmp.w	sl, #0
 801ddc4:	d03d      	beq.n	801de42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801ddc6:	9a04      	ldr	r2, [sp, #16]
 801ddc8:	9f07      	ldr	r7, [sp, #28]
 801ddca:	8812      	ldrh	r2, [r2, #0]
 801ddcc:	1215      	asrs	r5, r2, #8
 801ddce:	46be      	mov	lr, r7
 801ddd0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ddd4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ddd6:	10d1      	asrs	r1, r2, #3
 801ddd8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801dddc:	fb05 750e 	mla	r5, r5, lr, r7
 801dde0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dde4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801dde6:	00d2      	lsls	r2, r2, #3
 801dde8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ddec:	fb01 710e 	mla	r1, r1, lr, r7
 801ddf0:	b2d2      	uxtb	r2, r2
 801ddf2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ddf4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ddf8:	b2ad      	uxth	r5, r5
 801ddfa:	fb02 720e 	mla	r2, r2, lr, r7
 801ddfe:	b292      	uxth	r2, r2
 801de00:	f105 0e01 	add.w	lr, r5, #1
 801de04:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801de08:	f102 0e01 	add.w	lr, r2, #1
 801de0c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801de10:	b289      	uxth	r1, r1
 801de12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de16:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801de1a:	4315      	orrs	r5, r2
 801de1c:	1c4a      	adds	r2, r1, #1
 801de1e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801de22:	0949      	lsrs	r1, r1, #5
 801de24:	9a04      	ldr	r2, [sp, #16]
 801de26:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801de2a:	430d      	orrs	r5, r1
 801de2c:	f822 5b02 	strh.w	r5, [r2], #2
 801de30:	f10a 3aff 	add.w	sl, sl, #4294967295
 801de34:	9204      	str	r2, [sp, #16]
 801de36:	fa1f fa8a 	uxth.w	sl, sl
 801de3a:	e7c1      	b.n	801ddc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801de3c:	4649      	mov	r1, r9
 801de3e:	4686      	mov	lr, r0
 801de40:	b999      	cbnz	r1, 801de6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801de42:	4563      	cmp	r3, ip
 801de44:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801de48:	d38a      	bcc.n	801dd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801de4a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801de4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de50:	fa1f f68b 	uxth.w	r6, fp
 801de54:	1ba4      	subs	r4, r4, r6
 801de56:	881b      	ldrh	r3, [r3, #0]
 801de58:	b2a4      	uxth	r4, r4
 801de5a:	2c00      	cmp	r4, #0
 801de5c:	eba3 030b 	sub.w	r3, r3, fp
 801de60:	bf18      	it	ne
 801de62:	2600      	movne	r6, #0
 801de64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de68:	e77a      	b.n	801dd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801de6a:	78aa      	ldrb	r2, [r5, #2]
 801de6c:	4f0e      	ldr	r7, [pc, #56]	; (801dea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801de6e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801de72:	786a      	ldrb	r2, [r5, #1]
 801de74:	00d2      	lsls	r2, r2, #3
 801de76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de7a:	ea4a 0202 	orr.w	r2, sl, r2
 801de7e:	f895 a000 	ldrb.w	sl, [r5]
 801de82:	3901      	subs	r1, #1
 801de84:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801de88:	f82e 2b02 	strh.w	r2, [lr], #2
 801de8c:	b289      	uxth	r1, r1
 801de8e:	e7d7      	b.n	801de40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801de90:	4b03      	ldr	r3, [pc, #12]	; (801dea0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801de92:	6818      	ldr	r0, [r3, #0]
 801de94:	6803      	ldr	r3, [r0, #0]
 801de96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de98:	4798      	blx	r3
 801de9a:	b013      	add	sp, #76	; 0x4c
 801de9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dea0:	20013834 	.word	0x20013834
 801dea4:	2001382e 	.word	0x2001382e
 801dea8:	fffff800 	.word	0xfffff800

0801deac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801deac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801deb0:	b09d      	sub	sp, #116	; 0x74
 801deb2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801deb6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801deba:	920e      	str	r2, [sp, #56]	; 0x38
 801debc:	461c      	mov	r4, r3
 801debe:	4683      	mov	fp, r0
 801dec0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801dec2:	2a00      	cmp	r2, #0
 801dec4:	f000 81e0 	beq.w	801e288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801dec8:	6820      	ldr	r0, [r4, #0]
 801deca:	6861      	ldr	r1, [r4, #4]
 801decc:	aa18      	add	r2, sp, #96	; 0x60
 801dece:	c203      	stmia	r2!, {r0, r1}
 801ded0:	6818      	ldr	r0, [r3, #0]
 801ded2:	6859      	ldr	r1, [r3, #4]
 801ded4:	aa1a      	add	r2, sp, #104	; 0x68
 801ded6:	c203      	stmia	r2!, {r0, r1}
 801ded8:	a818      	add	r0, sp, #96	; 0x60
 801deda:	f7f8 fd45 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dede:	4621      	mov	r1, r4
 801dee0:	a81a      	add	r0, sp, #104	; 0x68
 801dee2:	f7f8 fd85 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dee6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801deea:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801deee:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801def2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801def6:	bfd7      	itett	le
 801def8:	b29a      	uxthle	r2, r3
 801defa:	2201      	movgt	r2, #1
 801defc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801df00:	fb91 f2f2 	sdivle	r2, r1, r2
 801df04:	9202      	str	r2, [sp, #8]
 801df06:	9802      	ldr	r0, [sp, #8]
 801df08:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801df0c:	fb92 f0f0 	sdiv	r0, r2, r0
 801df10:	b280      	uxth	r0, r0
 801df12:	900f      	str	r0, [sp, #60]	; 0x3c
 801df14:	9902      	ldr	r1, [sp, #8]
 801df16:	9802      	ldr	r0, [sp, #8]
 801df18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801df1a:	440c      	add	r4, r1
 801df1c:	fb05 2510 	mls	r5, r5, r0, r2
 801df20:	fb15 f503 	smulbb	r5, r5, r3
 801df24:	3c01      	subs	r4, #1
 801df26:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801df2a:	fb94 f4f1 	sdiv	r4, r4, r1
 801df2e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801df32:	440d      	add	r5, r1
 801df34:	4419      	add	r1, r3
 801df36:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801df3a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801df3e:	441a      	add	r2, r3
 801df40:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801df44:	9306      	str	r3, [sp, #24]
 801df46:	4bb3      	ldr	r3, [pc, #716]	; (801e214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801df48:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801df4c:	6818      	ldr	r0, [r3, #0]
 801df4e:	6803      	ldr	r3, [r0, #0]
 801df50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df52:	4798      	blx	r3
 801df54:	4bb0      	ldr	r3, [pc, #704]	; (801e218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801df56:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801df5a:	881a      	ldrh	r2, [r3, #0]
 801df5c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801df60:	9316      	str	r3, [sp, #88]	; 0x58
 801df62:	fb02 7101 	mla	r1, r2, r1, r7
 801df66:	3401      	adds	r4, #1
 801df68:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801df6c:	b2a4      	uxth	r4, r4
 801df6e:	4356      	muls	r6, r2
 801df70:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801df74:	00a4      	lsls	r4, r4, #2
 801df76:	920a      	str	r2, [sp, #40]	; 0x28
 801df78:	1d22      	adds	r2, r4, #4
 801df7a:	b2ad      	uxth	r5, r5
 801df7c:	9213      	str	r2, [sp, #76]	; 0x4c
 801df7e:	4ba7      	ldr	r3, [pc, #668]	; (801e21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801df80:	9a06      	ldr	r2, [sp, #24]
 801df82:	2d00      	cmp	r5, #0
 801df84:	bf0c      	ite	eq
 801df86:	4611      	moveq	r1, r2
 801df88:	2100      	movne	r1, #0
 801df8a:	2200      	movs	r2, #0
 801df8c:	eba3 030b 	sub.w	r3, r3, fp
 801df90:	b289      	uxth	r1, r1
 801df92:	920d      	str	r2, [sp, #52]	; 0x34
 801df94:	9317      	str	r3, [sp, #92]	; 0x5c
 801df96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801df98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df9a:	fa12 f383 	uxtah	r3, r2, r3
 801df9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801dfa0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801dfa4:	3304      	adds	r3, #4
 801dfa6:	9308      	str	r3, [sp, #32]
 801dfa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfaa:	4543      	cmp	r3, r8
 801dfac:	f240 8167 	bls.w	801e27e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801dfb0:	9a02      	ldr	r2, [sp, #8]
 801dfb2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801dfb6:	fbb5 f3f3 	udiv	r3, r5, r3
 801dfba:	1ad3      	subs	r3, r2, r3
 801dfbc:	b29b      	uxth	r3, r3
 801dfbe:	9314      	str	r3, [sp, #80]	; 0x50
 801dfc0:	9b08      	ldr	r3, [sp, #32]
 801dfc2:	9808      	ldr	r0, [sp, #32]
 801dfc4:	785a      	ldrb	r2, [r3, #1]
 801dfc6:	789b      	ldrb	r3, [r3, #2]
 801dfc8:	7800      	ldrb	r0, [r0, #0]
 801dfca:	9010      	str	r0, [sp, #64]	; 0x40
 801dfcc:	021b      	lsls	r3, r3, #8
 801dfce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dfd2:	9a08      	ldr	r2, [sp, #32]
 801dfd4:	78d2      	ldrb	r2, [r2, #3]
 801dfd6:	4313      	orrs	r3, r2
 801dfd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dfda:	3001      	adds	r0, #1
 801dfdc:	441a      	add	r2, r3
 801dfde:	9007      	str	r0, [sp, #28]
 801dfe0:	1c50      	adds	r0, r2, #1
 801dfe2:	9005      	str	r0, [sp, #20]
 801dfe4:	7852      	ldrb	r2, [r2, #1]
 801dfe6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dfe8:	0212      	lsls	r2, r2, #8
 801dfea:	5cc3      	ldrb	r3, [r0, r3]
 801dfec:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dff0:	431a      	orrs	r2, r3
 801dff2:	b293      	uxth	r3, r2
 801dff4:	930b      	str	r3, [sp, #44]	; 0x2c
 801dff6:	2300      	movs	r3, #0
 801dff8:	9309      	str	r3, [sp, #36]	; 0x24
 801dffa:	2301      	movs	r3, #1
 801dffc:	9301      	str	r3, [sp, #4]
 801dffe:	9304      	str	r3, [sp, #16]
 801e000:	2300      	movs	r3, #0
 801e002:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801e006:	9303      	str	r3, [sp, #12]
 801e008:	f04f 0e01 	mov.w	lr, #1
 801e00c:	2d00      	cmp	r5, #0
 801e00e:	d07c      	beq.n	801e10a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801e010:	45ae      	cmp	lr, r5
 801e012:	d26b      	bcs.n	801e0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801e014:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e016:	eba5 050e 	sub.w	r5, r5, lr
 801e01a:	4543      	cmp	r3, r8
 801e01c:	b2ad      	uxth	r5, r5
 801e01e:	460c      	mov	r4, r1
 801e020:	d802      	bhi.n	801e028 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801e022:	e070      	b.n	801e106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801e024:	2b00      	cmp	r3, #0
 801e026:	d15c      	bne.n	801e0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e028:	9b05      	ldr	r3, [sp, #20]
 801e02a:	9a04      	ldr	r2, [sp, #16]
 801e02c:	785b      	ldrb	r3, [r3, #1]
 801e02e:	9904      	ldr	r1, [sp, #16]
 801e030:	f1c2 0207 	rsb	r2, r2, #7
 801e034:	4093      	lsls	r3, r2
 801e036:	005b      	lsls	r3, r3, #1
 801e038:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e03c:	9b05      	ldr	r3, [sp, #20]
 801e03e:	781b      	ldrb	r3, [r3, #0]
 801e040:	410b      	asrs	r3, r1
 801e042:	3101      	adds	r1, #1
 801e044:	b2c9      	uxtb	r1, r1
 801e046:	2908      	cmp	r1, #8
 801e048:	9104      	str	r1, [sp, #16]
 801e04a:	9905      	ldr	r1, [sp, #20]
 801e04c:	bf0a      	itet	eq
 801e04e:	3102      	addeq	r1, #2
 801e050:	3101      	addne	r1, #1
 801e052:	9105      	streq	r1, [sp, #20]
 801e054:	b2db      	uxtb	r3, r3
 801e056:	bf0a      	itet	eq
 801e058:	2100      	moveq	r1, #0
 801e05a:	9105      	strne	r1, [sp, #20]
 801e05c:	9104      	streq	r1, [sp, #16]
 801e05e:	4313      	orrs	r3, r2
 801e060:	9910      	ldr	r1, [sp, #64]	; 0x40
 801e062:	b29a      	uxth	r2, r3
 801e064:	4291      	cmp	r1, r2
 801e066:	d30a      	bcc.n	801e07e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e068:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801e06c:	2301      	movs	r3, #1
 801e06e:	9907      	ldr	r1, [sp, #28]
 801e070:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e074:	d30f      	bcc.n	801e096 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e076:	2100      	movs	r1, #0
 801e078:	9301      	str	r3, [sp, #4]
 801e07a:	9103      	str	r1, [sp, #12]
 801e07c:	e032      	b.n	801e0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801e07e:	9b07      	ldr	r3, [sp, #28]
 801e080:	429a      	cmp	r2, r3
 801e082:	d318      	bcc.n	801e0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801e084:	9b01      	ldr	r3, [sp, #4]
 801e086:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801e08a:	445b      	add	r3, fp
 801e08c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e090:	9b01      	ldr	r3, [sp, #4]
 801e092:	3301      	adds	r3, #1
 801e094:	b29b      	uxth	r3, r3
 801e096:	9907      	ldr	r1, [sp, #28]
 801e098:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801e09c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e0a0:	7108      	strb	r0, [r1, #4]
 801e0a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e0a4:	80c8      	strh	r0, [r1, #6]
 801e0a6:	9801      	ldr	r0, [sp, #4]
 801e0a8:	3001      	adds	r0, #1
 801e0aa:	7148      	strb	r0, [r1, #5]
 801e0ac:	9907      	ldr	r1, [sp, #28]
 801e0ae:	3101      	adds	r1, #1
 801e0b0:	b289      	uxth	r1, r1
 801e0b2:	9107      	str	r1, [sp, #28]
 801e0b4:	e7df      	b.n	801e076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801e0b6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801e0ba:	4611      	mov	r1, r2
 801e0bc:	795b      	ldrb	r3, [r3, #5]
 801e0be:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801e0c2:	4458      	add	r0, fp
 801e0c4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801e0c6:	4406      	add	r6, r0
 801e0c8:	2e00      	cmp	r6, #0
 801e0ca:	dd06      	ble.n	801e0da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801e0cc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e0d0:	790e      	ldrb	r6, [r1, #4]
 801e0d2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801e0d6:	88c9      	ldrh	r1, [r1, #6]
 801e0d8:	e7f4      	b.n	801e0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801e0da:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801e0de:	b29b      	uxth	r3, r3
 801e0e0:	e7c5      	b.n	801e06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801e0e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e0e4:	920b      	str	r2, [sp, #44]	; 0x2c
 801e0e6:	4621      	mov	r1, r4
 801e0e8:	469e      	mov	lr, r3
 801e0ea:	e78f      	b.n	801e00c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801e0ec:	9a03      	ldr	r2, [sp, #12]
 801e0ee:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e0f2:	442a      	add	r2, r5
 801e0f4:	ebae 0305 	sub.w	r3, lr, r5
 801e0f8:	b292      	uxth	r2, r2
 801e0fa:	b29b      	uxth	r3, r3
 801e0fc:	9203      	str	r2, [sp, #12]
 801e0fe:	2500      	movs	r5, #0
 801e100:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e102:	4542      	cmp	r2, r8
 801e104:	d88e      	bhi.n	801e024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801e106:	4621      	mov	r1, r4
 801e108:	e74e      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801e10a:	458e      	cmp	lr, r1
 801e10c:	bf29      	itett	cs
 801e10e:	ebae 0301 	subcs.w	r3, lr, r1
 801e112:	eba1 040e 	subcc.w	r4, r1, lr
 801e116:	b29b      	uxthcs	r3, r3
 801e118:	910c      	strcs	r1, [sp, #48]	; 0x30
 801e11a:	bf2f      	iteee	cs
 801e11c:	462c      	movcs	r4, r5
 801e11e:	b2a4      	uxthcc	r4, r4
 801e120:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801e124:	462b      	movcc	r3, r5
 801e126:	f04f 0900 	mov.w	r9, #0
 801e12a:	9a03      	ldr	r2, [sp, #12]
 801e12c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e12e:	444a      	add	r2, r9
 801e130:	4548      	cmp	r0, r9
 801e132:	b292      	uxth	r2, r2
 801e134:	d074      	beq.n	801e220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801e136:	445a      	add	r2, fp
 801e138:	2004      	movs	r0, #4
 801e13a:	4605      	mov	r5, r0
 801e13c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801e140:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e142:	fb15 0202 	smlabb	r2, r5, r2, r0
 801e146:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e148:	5880      	ldr	r0, [r0, r2]
 801e14a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801e14e:	d014      	beq.n	801e17a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e150:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e154:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801e158:	d112      	bne.n	801e180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e15a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e15c:	2aff      	cmp	r2, #255	; 0xff
 801e15e:	d10f      	bne.n	801e180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e160:	0942      	lsrs	r2, r0, #5
 801e162:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e166:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e16a:	f025 0507 	bic.w	r5, r5, #7
 801e16e:	4315      	orrs	r5, r2
 801e170:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e174:	4305      	orrs	r5, r0
 801e176:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801e17a:	f109 0901 	add.w	r9, r9, #1
 801e17e:	e7d4      	b.n	801e12a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801e180:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801e184:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e188:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801e18c:	9215      	str	r2, [sp, #84]	; 0x54
 801e18e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e190:	fb02 fa0a 	mul.w	sl, r2, sl
 801e194:	f10a 0201 	add.w	r2, sl, #1
 801e198:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801e19c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e1a0:	1212      	asrs	r2, r2, #8
 801e1a2:	fa1f fa82 	uxth.w	sl, r2
 801e1a6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801e1aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e1ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e1b2:	43d2      	mvns	r2, r2
 801e1b4:	b2d2      	uxtb	r2, r2
 801e1b6:	fb16 f60a 	smulbb	r6, r6, sl
 801e1ba:	fa5f fc8c 	uxtb.w	ip, ip
 801e1be:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e1c2:	b2c0      	uxtb	r0, r0
 801e1c4:	fb07 6702 	mla	r7, r7, r2, r6
 801e1c8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801e1cc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801e1ce:	fb10 f00a 	smulbb	r0, r0, sl
 801e1d2:	fb0c 0002 	mla	r0, ip, r2, r0
 801e1d6:	b2ed      	uxtb	r5, r5
 801e1d8:	b2bf      	uxth	r7, r7
 801e1da:	fb15 f50a 	smulbb	r5, r5, sl
 801e1de:	b280      	uxth	r0, r0
 801e1e0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e1e4:	fb06 5602 	mla	r6, r6, r2, r5
 801e1e8:	1c7a      	adds	r2, r7, #1
 801e1ea:	1c45      	adds	r5, r0, #1
 801e1ec:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e1f0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e1f4:	b2b6      	uxth	r6, r6
 801e1f6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e1fa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e1fe:	432f      	orrs	r7, r5
 801e200:	1c75      	adds	r5, r6, #1
 801e202:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e206:	096d      	lsrs	r5, r5, #5
 801e208:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e20c:	432f      	orrs	r7, r5
 801e20e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801e212:	e7b2      	b.n	801e17a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e214:	20013834 	.word	0x20013834
 801e218:	2001382e 	.word	0x2001382e
 801e21c:	fffff7fb 	.word	0xfffff7fb
 801e220:	9203      	str	r2, [sp, #12]
 801e222:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e224:	458e      	cmp	lr, r1
 801e226:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e22a:	f4ff af68 	bcc.w	801e0fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801e22e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801e230:	9906      	ldr	r1, [sp, #24]
 801e232:	8812      	ldrh	r2, [r2, #0]
 801e234:	1a52      	subs	r2, r2, r1
 801e236:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e23a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e23c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801e23e:	3201      	adds	r2, #1
 801e240:	428a      	cmp	r2, r1
 801e242:	9209      	str	r2, [sp, #36]	; 0x24
 801e244:	d111      	bne.n	801e26a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801e246:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801e24a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801e24e:	9b06      	ldr	r3, [sp, #24]
 801e250:	eba5 0509 	sub.w	r5, r5, r9
 801e254:	b2ad      	uxth	r5, r5
 801e256:	2d00      	cmp	r5, #0
 801e258:	bf08      	it	eq
 801e25a:	4619      	moveq	r1, r3
 801e25c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e25e:	bf18      	it	ne
 801e260:	2100      	movne	r1, #0
 801e262:	3301      	adds	r3, #1
 801e264:	930d      	str	r3, [sp, #52]	; 0x34
 801e266:	b289      	uxth	r1, r1
 801e268:	e695      	b.n	801df96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801e26a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e26e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801e272:	1b2d      	subs	r5, r5, r4
 801e274:	b2ad      	uxth	r5, r5
 801e276:	2d00      	cmp	r5, #0
 801e278:	bf18      	it	ne
 801e27a:	2400      	movne	r4, #0
 801e27c:	e740      	b.n	801e100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801e27e:	4b04      	ldr	r3, [pc, #16]	; (801e290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801e280:	6818      	ldr	r0, [r3, #0]
 801e282:	6803      	ldr	r3, [r0, #0]
 801e284:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e286:	4798      	blx	r3
 801e288:	b01d      	add	sp, #116	; 0x74
 801e28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e28e:	bf00      	nop
 801e290:	20013834 	.word	0x20013834

0801e294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e298:	b09f      	sub	sp, #124	; 0x7c
 801e29a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801e29e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801e2a2:	920a      	str	r2, [sp, #40]	; 0x28
 801e2a4:	461d      	mov	r5, r3
 801e2a6:	4604      	mov	r4, r0
 801e2a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e2aa:	2a00      	cmp	r2, #0
 801e2ac:	f000 81fa 	beq.w	801e6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801e2b0:	6828      	ldr	r0, [r5, #0]
 801e2b2:	6869      	ldr	r1, [r5, #4]
 801e2b4:	aa1a      	add	r2, sp, #104	; 0x68
 801e2b6:	c203      	stmia	r2!, {r0, r1}
 801e2b8:	6818      	ldr	r0, [r3, #0]
 801e2ba:	6859      	ldr	r1, [r3, #4]
 801e2bc:	aa1c      	add	r2, sp, #112	; 0x70
 801e2be:	c203      	stmia	r2!, {r0, r1}
 801e2c0:	a81a      	add	r0, sp, #104	; 0x68
 801e2c2:	f7f8 fb51 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2c6:	4629      	mov	r1, r5
 801e2c8:	a81c      	add	r0, sp, #112	; 0x70
 801e2ca:	f7f8 fb91 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2ce:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e2d2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e2d6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801e2da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e2de:	bfd7      	itett	le
 801e2e0:	b29a      	uxthle	r2, r3
 801e2e2:	2201      	movgt	r2, #1
 801e2e4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e2e8:	fb91 f2f2 	sdivle	r2, r1, r2
 801e2ec:	9201      	str	r2, [sp, #4]
 801e2ee:	9801      	ldr	r0, [sp, #4]
 801e2f0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801e2f4:	fb92 f0f0 	sdiv	r0, r2, r0
 801e2f8:	b280      	uxth	r0, r0
 801e2fa:	9010      	str	r0, [sp, #64]	; 0x40
 801e2fc:	9901      	ldr	r1, [sp, #4]
 801e2fe:	9801      	ldr	r0, [sp, #4]
 801e300:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e302:	440e      	add	r6, r1
 801e304:	fb05 2510 	mls	r5, r5, r0, r2
 801e308:	fb15 f503 	smulbb	r5, r5, r3
 801e30c:	3e01      	subs	r6, #1
 801e30e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e312:	fb96 f6f1 	sdiv	r6, r6, r1
 801e316:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801e31a:	440d      	add	r5, r1
 801e31c:	4419      	add	r1, r3
 801e31e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801e322:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801e326:	441a      	add	r2, r3
 801e328:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801e32c:	9304      	str	r3, [sp, #16]
 801e32e:	4b96      	ldr	r3, [pc, #600]	; (801e588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e330:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801e334:	6818      	ldr	r0, [r3, #0]
 801e336:	6803      	ldr	r3, [r0, #0]
 801e338:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e33a:	4798      	blx	r3
 801e33c:	4b93      	ldr	r3, [pc, #588]	; (801e58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e33e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801e342:	881a      	ldrh	r2, [r3, #0]
 801e344:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801e348:	9318      	str	r3, [sp, #96]	; 0x60
 801e34a:	fb02 c101 	mla	r1, r2, r1, ip
 801e34e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801e352:	4357      	muls	r7, r2
 801e354:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801e358:	3601      	adds	r6, #1
 801e35a:	920b      	str	r2, [sp, #44]	; 0x2c
 801e35c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e35e:	4b8c      	ldr	r3, [pc, #560]	; (801e590 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e360:	b2b6      	uxth	r6, r6
 801e362:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801e366:	1d32      	adds	r2, r6, #4
 801e368:	9206      	str	r2, [sp, #24]
 801e36a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e36c:	43d2      	mvns	r2, r2
 801e36e:	b2d2      	uxtb	r2, r2
 801e370:	b2ad      	uxth	r5, r5
 801e372:	9215      	str	r2, [sp, #84]	; 0x54
 801e374:	9a04      	ldr	r2, [sp, #16]
 801e376:	2d00      	cmp	r5, #0
 801e378:	bf0c      	ite	eq
 801e37a:	4611      	moveq	r1, r2
 801e37c:	2100      	movne	r1, #0
 801e37e:	2200      	movs	r2, #0
 801e380:	1b1b      	subs	r3, r3, r4
 801e382:	b289      	uxth	r1, r1
 801e384:	920d      	str	r2, [sp, #52]	; 0x34
 801e386:	9319      	str	r3, [sp, #100]	; 0x64
 801e388:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e38a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e38c:	fa12 f383 	uxtah	r3, r2, r3
 801e390:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e392:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e396:	3304      	adds	r3, #4
 801e398:	9307      	str	r3, [sp, #28]
 801e39a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e39c:	455b      	cmp	r3, fp
 801e39e:	f240 817c 	bls.w	801e69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801e3a2:	9a01      	ldr	r2, [sp, #4]
 801e3a4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801e3a8:	fbb5 f3f3 	udiv	r3, r5, r3
 801e3ac:	1ad3      	subs	r3, r2, r3
 801e3ae:	b29b      	uxth	r3, r3
 801e3b0:	9316      	str	r3, [sp, #88]	; 0x58
 801e3b2:	9b07      	ldr	r3, [sp, #28]
 801e3b4:	9807      	ldr	r0, [sp, #28]
 801e3b6:	785a      	ldrb	r2, [r3, #1]
 801e3b8:	789b      	ldrb	r3, [r3, #2]
 801e3ba:	7800      	ldrb	r0, [r0, #0]
 801e3bc:	9011      	str	r0, [sp, #68]	; 0x44
 801e3be:	021b      	lsls	r3, r3, #8
 801e3c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e3c4:	9a07      	ldr	r2, [sp, #28]
 801e3c6:	78d2      	ldrb	r2, [r2, #3]
 801e3c8:	4313      	orrs	r3, r2
 801e3ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e3cc:	3001      	adds	r0, #1
 801e3ce:	441a      	add	r2, r3
 801e3d0:	9005      	str	r0, [sp, #20]
 801e3d2:	1c50      	adds	r0, r2, #1
 801e3d4:	9003      	str	r0, [sp, #12]
 801e3d6:	7852      	ldrb	r2, [r2, #1]
 801e3d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e3da:	0212      	lsls	r2, r2, #8
 801e3dc:	5cc3      	ldrb	r3, [r0, r3]
 801e3de:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e3e2:	431a      	orrs	r2, r3
 801e3e4:	b293      	uxth	r3, r2
 801e3e6:	930c      	str	r3, [sp, #48]	; 0x30
 801e3e8:	2300      	movs	r3, #0
 801e3ea:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801e3ee:	9308      	str	r3, [sp, #32]
 801e3f0:	461a      	mov	r2, r3
 801e3f2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e3f6:	930e      	str	r3, [sp, #56]	; 0x38
 801e3f8:	f04f 0801 	mov.w	r8, #1
 801e3fc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801e400:	f8cd 8008 	str.w	r8, [sp, #8]
 801e404:	46c4      	mov	ip, r8
 801e406:	930f      	str	r3, [sp, #60]	; 0x3c
 801e408:	2d00      	cmp	r5, #0
 801e40a:	d07c      	beq.n	801e506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e40c:	45ac      	cmp	ip, r5
 801e40e:	d26c      	bcs.n	801e4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801e410:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e412:	eba5 050c 	sub.w	r5, r5, ip
 801e416:	455b      	cmp	r3, fp
 801e418:	b2ad      	uxth	r5, r5
 801e41a:	4608      	mov	r0, r1
 801e41c:	d802      	bhi.n	801e424 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801e41e:	e070      	b.n	801e502 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e420:	2b00      	cmp	r3, #0
 801e422:	d15c      	bne.n	801e4de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e424:	9b03      	ldr	r3, [sp, #12]
 801e426:	9a02      	ldr	r2, [sp, #8]
 801e428:	785b      	ldrb	r3, [r3, #1]
 801e42a:	9902      	ldr	r1, [sp, #8]
 801e42c:	f1c2 0207 	rsb	r2, r2, #7
 801e430:	4093      	lsls	r3, r2
 801e432:	005b      	lsls	r3, r3, #1
 801e434:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e438:	9b03      	ldr	r3, [sp, #12]
 801e43a:	781b      	ldrb	r3, [r3, #0]
 801e43c:	410b      	asrs	r3, r1
 801e43e:	3101      	adds	r1, #1
 801e440:	b2c9      	uxtb	r1, r1
 801e442:	2908      	cmp	r1, #8
 801e444:	9102      	str	r1, [sp, #8]
 801e446:	9903      	ldr	r1, [sp, #12]
 801e448:	bf0a      	itet	eq
 801e44a:	3102      	addeq	r1, #2
 801e44c:	3101      	addne	r1, #1
 801e44e:	9103      	streq	r1, [sp, #12]
 801e450:	b2db      	uxtb	r3, r3
 801e452:	bf0a      	itet	eq
 801e454:	2100      	moveq	r1, #0
 801e456:	9103      	strne	r1, [sp, #12]
 801e458:	9102      	streq	r1, [sp, #8]
 801e45a:	4313      	orrs	r3, r2
 801e45c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e45e:	b29a      	uxth	r2, r3
 801e460:	4291      	cmp	r1, r2
 801e462:	d30a      	bcc.n	801e47a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e464:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e468:	2301      	movs	r3, #1
 801e46a:	9905      	ldr	r1, [sp, #20]
 801e46c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e470:	d30f      	bcc.n	801e492 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e472:	2100      	movs	r1, #0
 801e474:	4698      	mov	r8, r3
 801e476:	9100      	str	r1, [sp, #0]
 801e478:	e032      	b.n	801e4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e47a:	9b05      	ldr	r3, [sp, #20]
 801e47c:	429a      	cmp	r2, r3
 801e47e:	d318      	bcc.n	801e4b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e480:	eb04 0308 	add.w	r3, r4, r8
 801e484:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801e488:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e48c:	f108 0301 	add.w	r3, r8, #1
 801e490:	b29b      	uxth	r3, r3
 801e492:	9905      	ldr	r1, [sp, #20]
 801e494:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e498:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e49c:	710e      	strb	r6, [r1, #4]
 801e49e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e4a0:	80ce      	strh	r6, [r1, #6]
 801e4a2:	f108 0601 	add.w	r6, r8, #1
 801e4a6:	714e      	strb	r6, [r1, #5]
 801e4a8:	9905      	ldr	r1, [sp, #20]
 801e4aa:	3101      	adds	r1, #1
 801e4ac:	b289      	uxth	r1, r1
 801e4ae:	9105      	str	r1, [sp, #20]
 801e4b0:	e7df      	b.n	801e472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e4b2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e4b6:	4611      	mov	r1, r2
 801e4b8:	795b      	ldrb	r3, [r3, #5]
 801e4ba:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e4be:	4426      	add	r6, r4
 801e4c0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801e4c2:	4437      	add	r7, r6
 801e4c4:	2f00      	cmp	r7, #0
 801e4c6:	dd06      	ble.n	801e4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e4c8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e4cc:	790f      	ldrb	r7, [r1, #4]
 801e4ce:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e4d2:	88c9      	ldrh	r1, [r1, #6]
 801e4d4:	e7f4      	b.n	801e4c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e4d6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e4da:	b29b      	uxth	r3, r3
 801e4dc:	e7c5      	b.n	801e46a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e4de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e4e0:	920c      	str	r2, [sp, #48]	; 0x30
 801e4e2:	4601      	mov	r1, r0
 801e4e4:	9a00      	ldr	r2, [sp, #0]
 801e4e6:	469c      	mov	ip, r3
 801e4e8:	e78e      	b.n	801e408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e4ea:	1957      	adds	r7, r2, r5
 801e4ec:	ebac 0305 	sub.w	r3, ip, r5
 801e4f0:	b2ba      	uxth	r2, r7
 801e4f2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e4f6:	9200      	str	r2, [sp, #0]
 801e4f8:	b29b      	uxth	r3, r3
 801e4fa:	2500      	movs	r5, #0
 801e4fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e4fe:	455a      	cmp	r2, fp
 801e500:	d88e      	bhi.n	801e420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e502:	4601      	mov	r1, r0
 801e504:	e749      	b.n	801e39a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e506:	458c      	cmp	ip, r1
 801e508:	bf2c      	ite	cs
 801e50a:	4628      	movcs	r0, r5
 801e50c:	462b      	movcc	r3, r5
 801e50e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e510:	bf27      	ittee	cs
 801e512:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e514:	ebac 0301 	subcs.w	r3, ip, r1
 801e518:	eba1 000c 	subcc.w	r0, r1, ip
 801e51c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e520:	bf2c      	ite	cs
 801e522:	b29b      	uxthcs	r3, r3
 801e524:	b280      	uxthcc	r0, r0
 801e526:	2dff      	cmp	r5, #255	; 0xff
 801e528:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e52a:	eb02 0705 	add.w	r7, r2, r5
 801e52e:	b2bd      	uxth	r5, r7
 801e530:	9500      	str	r5, [sp, #0]
 801e532:	d12f      	bne.n	801e594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e534:	465e      	mov	r6, fp
 801e536:	9d00      	ldr	r5, [sp, #0]
 801e538:	42aa      	cmp	r2, r5
 801e53a:	f040 8084 	bne.w	801e646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e53e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e540:	458c      	cmp	ip, r1
 801e542:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e546:	d3d8      	bcc.n	801e4fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e548:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e54a:	9904      	ldr	r1, [sp, #16]
 801e54c:	8812      	ldrh	r2, [r2, #0]
 801e54e:	1a52      	subs	r2, r2, r1
 801e550:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e554:	9a08      	ldr	r2, [sp, #32]
 801e556:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e558:	3201      	adds	r2, #1
 801e55a:	428a      	cmp	r2, r1
 801e55c:	9208      	str	r2, [sp, #32]
 801e55e:	f040 8092 	bne.w	801e686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e562:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e566:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e56a:	9b04      	ldr	r3, [sp, #16]
 801e56c:	eba5 050c 	sub.w	r5, r5, ip
 801e570:	b2ad      	uxth	r5, r5
 801e572:	2d00      	cmp	r5, #0
 801e574:	bf08      	it	eq
 801e576:	4619      	moveq	r1, r3
 801e578:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e57a:	bf18      	it	ne
 801e57c:	2100      	movne	r1, #0
 801e57e:	3301      	adds	r3, #1
 801e580:	930d      	str	r3, [sp, #52]	; 0x34
 801e582:	b289      	uxth	r1, r1
 801e584:	e700      	b.n	801e388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e586:	bf00      	nop
 801e588:	20013834 	.word	0x20013834
 801e58c:	2001382e 	.word	0x2001382e
 801e590:	fffff7fb 	.word	0xfffff7fb
 801e594:	46d9      	mov	r9, fp
 801e596:	9d00      	ldr	r5, [sp, #0]
 801e598:	42aa      	cmp	r2, r5
 801e59a:	d0d0      	beq.n	801e53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e59c:	1c55      	adds	r5, r2, #1
 801e59e:	4422      	add	r2, r4
 801e5a0:	9517      	str	r5, [sp, #92]	; 0x5c
 801e5a2:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e5a6:	9a06      	ldr	r2, [sp, #24]
 801e5a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e5ac:	4472      	add	r2, lr
 801e5ae:	9212      	str	r2, [sp, #72]	; 0x48
 801e5b0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e5b2:	f8b9 2000 	ldrh.w	r2, [r9]
 801e5b6:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e5ba:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5bc:	1216      	asrs	r6, r2, #8
 801e5be:	fb1a fa07 	smulbb	sl, sl, r7
 801e5c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e5c6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5c8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e5cc:	fb06 a607 	mla	r6, r6, r7, sl
 801e5d0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e5d2:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e5d6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5d8:	10d5      	asrs	r5, r2, #3
 801e5da:	fb1a fa07 	smulbb	sl, sl, r7
 801e5de:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e5e2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5e4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e5e8:	fb05 a507 	mla	r5, r5, r7, sl
 801e5ec:	9f06      	ldr	r7, [sp, #24]
 801e5ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e5f2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5f4:	00d2      	lsls	r2, r2, #3
 801e5f6:	fb1e fe07 	smulbb	lr, lr, r7
 801e5fa:	b2d2      	uxtb	r2, r2
 801e5fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5fe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e602:	b2b6      	uxth	r6, r6
 801e604:	fb02 e207 	mla	r2, r2, r7, lr
 801e608:	b292      	uxth	r2, r2
 801e60a:	b2ad      	uxth	r5, r5
 801e60c:	f106 0a01 	add.w	sl, r6, #1
 801e610:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e614:	f102 0e01 	add.w	lr, r2, #1
 801e618:	f105 0a01 	add.w	sl, r5, #1
 801e61c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e620:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e624:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e628:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e62c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e630:	ea4e 0606 	orr.w	r6, lr, r6
 801e634:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e638:	ea46 060a 	orr.w	r6, r6, sl
 801e63c:	f829 6b02 	strh.w	r6, [r9], #2
 801e640:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e644:	e7a7      	b.n	801e596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e646:	f102 0e01 	add.w	lr, r2, #1
 801e64a:	4422      	add	r2, r4
 801e64c:	9f06      	ldr	r7, [sp, #24]
 801e64e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e652:	9a06      	ldr	r2, [sp, #24]
 801e654:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e658:	eb02 0a05 	add.w	sl, r2, r5
 801e65c:	4a13      	ldr	r2, [pc, #76]	; (801e6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e65e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e662:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e666:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e66a:	00d2      	lsls	r2, r2, #3
 801e66c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e670:	ea49 0202 	orr.w	r2, r9, r2
 801e674:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e678:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e67c:	f826 2b02 	strh.w	r2, [r6], #2
 801e680:	fa1f f28e 	uxth.w	r2, lr
 801e684:	e757      	b.n	801e536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e686:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e68a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e68e:	1a2d      	subs	r5, r5, r0
 801e690:	b2ad      	uxth	r5, r5
 801e692:	2d00      	cmp	r5, #0
 801e694:	bf18      	it	ne
 801e696:	2000      	movne	r0, #0
 801e698:	e730      	b.n	801e4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e69a:	4b05      	ldr	r3, [pc, #20]	; (801e6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e69c:	6818      	ldr	r0, [r3, #0]
 801e69e:	6803      	ldr	r3, [r0, #0]
 801e6a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e6a2:	4798      	blx	r3
 801e6a4:	b01f      	add	sp, #124	; 0x7c
 801e6a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6aa:	bf00      	nop
 801e6ac:	fffff800 	.word	0xfffff800
 801e6b0:	20013834 	.word	0x20013834

0801e6b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6b8:	b091      	sub	sp, #68	; 0x44
 801e6ba:	469b      	mov	fp, r3
 801e6bc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e6c0:	4616      	mov	r6, r2
 801e6c2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e6c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e6ca:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e6ce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e6d2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e6d6:	4604      	mov	r4, r0
 801e6d8:	460d      	mov	r5, r1
 801e6da:	4640      	mov	r0, r8
 801e6dc:	4659      	mov	r1, fp
 801e6de:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e6e2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e6e6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e6ea:	f7f2 fb9f 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 801e6ee:	4631      	mov	r1, r6
 801e6f0:	4640      	mov	r0, r8
 801e6f2:	f7f2 fb9b 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 801e6f6:	4b74      	ldr	r3, [pc, #464]	; (801e8c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e6f8:	8818      	ldrh	r0, [r3, #0]
 801e6fa:	4b74      	ldr	r3, [pc, #464]	; (801e8cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e6fc:	8819      	ldrh	r1, [r3, #0]
 801e6fe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e702:	2b00      	cmp	r3, #0
 801e704:	b202      	sxth	r2, r0
 801e706:	b20e      	sxth	r6, r1
 801e708:	da07      	bge.n	801e71a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e70a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e70e:	4463      	add	r3, ip
 801e710:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e714:	2300      	movs	r3, #0
 801e716:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e71a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e71e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e722:	1ad2      	subs	r2, r2, r3
 801e724:	4594      	cmp	ip, r2
 801e726:	bfc4      	itt	gt
 801e728:	1ac2      	subgt	r2, r0, r3
 801e72a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e72e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e732:	2a00      	cmp	r2, #0
 801e734:	da07      	bge.n	801e746 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e736:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e73a:	4462      	add	r2, ip
 801e73c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e740:	2200      	movs	r2, #0
 801e742:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e746:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e74a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e74e:	eba6 060a 	sub.w	r6, r6, sl
 801e752:	42b2      	cmp	r2, r6
 801e754:	bfc4      	itt	gt
 801e756:	eba1 020a 	subgt.w	r2, r1, sl
 801e75a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e75e:	4a5c      	ldr	r2, [pc, #368]	; (801e8d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e760:	7812      	ldrb	r2, [r2, #0]
 801e762:	b9a2      	cbnz	r2, 801e78e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e764:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e768:	4286      	cmp	r6, r0
 801e76a:	4640      	mov	r0, r8
 801e76c:	9303      	str	r3, [sp, #12]
 801e76e:	bf14      	ite	ne
 801e770:	2600      	movne	r6, #0
 801e772:	2601      	moveq	r6, #1
 801e774:	f7f2 fb9d 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e778:	9b03      	ldr	r3, [sp, #12]
 801e77a:	b160      	cbz	r0, 801e796 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e77c:	2300      	movs	r3, #0
 801e77e:	8023      	strh	r3, [r4, #0]
 801e780:	8063      	strh	r3, [r4, #2]
 801e782:	80a3      	strh	r3, [r4, #4]
 801e784:	4620      	mov	r0, r4
 801e786:	80e3      	strh	r3, [r4, #6]
 801e788:	b011      	add	sp, #68	; 0x44
 801e78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e78e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e792:	428e      	cmp	r6, r1
 801e794:	e7e9      	b.n	801e76a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e796:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e79a:	9205      	str	r2, [sp, #20]
 801e79c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e7a0:	9206      	str	r2, [sp, #24]
 801e7a2:	f8bb 2000 	ldrh.w	r2, [fp]
 801e7a6:	900e      	str	r0, [sp, #56]	; 0x38
 801e7a8:	1a9b      	subs	r3, r3, r2
 801e7aa:	b21b      	sxth	r3, r3
 801e7ac:	9303      	str	r3, [sp, #12]
 801e7ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e7b2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e7b6:	ebaa 0a03 	sub.w	sl, sl, r3
 801e7ba:	fa0f f38a 	sxth.w	r3, sl
 801e7be:	9304      	str	r3, [sp, #16]
 801e7c0:	9b03      	ldr	r3, [sp, #12]
 801e7c2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e7c6:	9b04      	ldr	r3, [sp, #16]
 801e7c8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e7cc:	9b05      	ldr	r3, [sp, #20]
 801e7ce:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e7d2:	a90e      	add	r1, sp, #56	; 0x38
 801e7d4:	9b06      	ldr	r3, [sp, #24]
 801e7d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e7da:	a80c      	add	r0, sp, #48	; 0x30
 801e7dc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e7e0:	f7f8 f906 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e7e4:	4640      	mov	r0, r8
 801e7e6:	f7f8 f8bf 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7ea:	a80e      	add	r0, sp, #56	; 0x38
 801e7ec:	f7f8 f8bc 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7f0:	4b38      	ldr	r3, [pc, #224]	; (801e8d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e7f2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e7f6:	881b      	ldrh	r3, [r3, #0]
 801e7f8:	9307      	str	r3, [sp, #28]
 801e7fa:	682b      	ldr	r3, [r5, #0]
 801e7fc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e8d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e800:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e802:	4628      	mov	r0, r5
 801e804:	4798      	blx	r3
 801e806:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e80a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e80e:	4681      	mov	r9, r0
 801e810:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e814:	f8db 0000 	ldr.w	r0, [fp]
 801e818:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e81a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e81e:	6803      	ldr	r3, [r0, #0]
 801e820:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e822:	4798      	blx	r3
 801e824:	4607      	mov	r7, r0
 801e826:	f8db 0000 	ldr.w	r0, [fp]
 801e82a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e82e:	6803      	ldr	r3, [r0, #0]
 801e830:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e834:	9109      	str	r1, [sp, #36]	; 0x24
 801e836:	9208      	str	r2, [sp, #32]
 801e838:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e83a:	4798      	blx	r3
 801e83c:	f010 0f01 	tst.w	r0, #1
 801e840:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e844:	d012      	beq.n	801e86c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e846:	f8db 0000 	ldr.w	r0, [fp]
 801e84a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e84e:	6803      	ldr	r3, [r0, #0]
 801e850:	9200      	str	r2, [sp, #0]
 801e852:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e854:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e858:	462b      	mov	r3, r5
 801e85a:	47b0      	blx	r6
 801e85c:	9b03      	ldr	r3, [sp, #12]
 801e85e:	8023      	strh	r3, [r4, #0]
 801e860:	9b04      	ldr	r3, [sp, #16]
 801e862:	8063      	strh	r3, [r4, #2]
 801e864:	9b05      	ldr	r3, [sp, #20]
 801e866:	80a3      	strh	r3, [r4, #4]
 801e868:	9b06      	ldr	r3, [sp, #24]
 801e86a:	e78b      	b.n	801e784 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e86c:	fb09 f202 	mul.w	r2, r9, r2
 801e870:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e874:	440f      	add	r7, r1
 801e876:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e87a:	b166      	cbz	r6, 801e896 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e87c:	9a07      	ldr	r2, [sp, #28]
 801e87e:	4592      	cmp	sl, r2
 801e880:	d109      	bne.n	801e896 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e882:	f8db 0000 	ldr.w	r0, [fp]
 801e886:	6802      	ldr	r2, [r0, #0]
 801e888:	fb09 f303 	mul.w	r3, r9, r3
 801e88c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e88e:	4629      	mov	r1, r5
 801e890:	463a      	mov	r2, r7
 801e892:	47b0      	blx	r6
 801e894:	e7e2      	b.n	801e85c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e896:	fb0a f303 	mul.w	r3, sl, r3
 801e89a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e8d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e89e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e8a2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e8a6:	4545      	cmp	r5, r8
 801e8a8:	d2d8      	bcs.n	801e85c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e8aa:	f8db 0000 	ldr.w	r0, [fp]
 801e8ae:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e8b2:	6802      	ldr	r2, [r0, #0]
 801e8b4:	4629      	mov	r1, r5
 801e8b6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e8ba:	005b      	lsls	r3, r3, #1
 801e8bc:	463a      	mov	r2, r7
 801e8be:	47d0      	blx	sl
 801e8c0:	444f      	add	r7, r9
 801e8c2:	4435      	add	r5, r6
 801e8c4:	e7ef      	b.n	801e8a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e8c6:	bf00      	nop
 801e8c8:	20013828 	.word	0x20013828
 801e8cc:	2001382a 	.word	0x2001382a
 801e8d0:	2001382c 	.word	0x2001382c
 801e8d4:	2001382e 	.word	0x2001382e
 801e8d8:	20013834 	.word	0x20013834

0801e8dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e8dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e8de:	4606      	mov	r6, r0
 801e8e0:	b087      	sub	sp, #28
 801e8e2:	460c      	mov	r4, r1
 801e8e4:	4617      	mov	r7, r2
 801e8e6:	461d      	mov	r5, r3
 801e8e8:	b333      	cbz	r3, 801e938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e8ea:	4608      	mov	r0, r1
 801e8ec:	f7f2 fae1 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e8f0:	bb10      	cbnz	r0, 801e938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e8f2:	6820      	ldr	r0, [r4, #0]
 801e8f4:	6861      	ldr	r1, [r4, #4]
 801e8f6:	4c1c      	ldr	r4, [pc, #112]	; (801e968 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e8f8:	ab04      	add	r3, sp, #16
 801e8fa:	c303      	stmia	r3!, {r0, r1}
 801e8fc:	a804      	add	r0, sp, #16
 801e8fe:	f7f8 f833 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e902:	6820      	ldr	r0, [r4, #0]
 801e904:	6803      	ldr	r3, [r0, #0]
 801e906:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e908:	4798      	blx	r3
 801e90a:	2dff      	cmp	r5, #255	; 0xff
 801e90c:	d016      	beq.n	801e93c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e90e:	f010 0f08 	tst.w	r0, #8
 801e912:	6820      	ldr	r0, [r4, #0]
 801e914:	d015      	beq.n	801e942 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e916:	2400      	movs	r4, #0
 801e918:	6801      	ldr	r1, [r0, #0]
 801e91a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e91e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e922:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e926:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e92a:	9401      	str	r4, [sp, #4]
 801e92c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e930:	9400      	str	r4, [sp, #0]
 801e932:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e934:	4639      	mov	r1, r7
 801e936:	47a0      	blx	r4
 801e938:	b007      	add	sp, #28
 801e93a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e93c:	f010 0f02 	tst.w	r0, #2
 801e940:	e7e7      	b.n	801e912 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e942:	6803      	ldr	r3, [r0, #0]
 801e944:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e946:	4798      	blx	r3
 801e948:	4b08      	ldr	r3, [pc, #32]	; (801e96c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e94a:	881a      	ldrh	r2, [r3, #0]
 801e94c:	6833      	ldr	r3, [r6, #0]
 801e94e:	e9cd 7500 	strd	r7, r5, [sp]
 801e952:	4601      	mov	r1, r0
 801e954:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e956:	4630      	mov	r0, r6
 801e958:	ab04      	add	r3, sp, #16
 801e95a:	47a8      	blx	r5
 801e95c:	6820      	ldr	r0, [r4, #0]
 801e95e:	6803      	ldr	r3, [r0, #0]
 801e960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e962:	4798      	blx	r3
 801e964:	e7e8      	b.n	801e938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e966:	bf00      	nop
 801e968:	20013834 	.word	0x20013834
 801e96c:	2001382e 	.word	0x2001382e

0801e970 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e974:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e978:	9e08      	ldr	r6, [sp, #32]
 801e97a:	4688      	mov	r8, r1
 801e97c:	4614      	mov	r4, r2
 801e97e:	461d      	mov	r5, r3
 801e980:	2f00      	cmp	r7, #0
 801e982:	f000 80a9 	beq.w	801ead8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e986:	4618      	mov	r0, r3
 801e988:	f7f2 fa93 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e98c:	2800      	cmp	r0, #0
 801e98e:	f040 80a3 	bne.w	801ead8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e992:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e996:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e99a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e99e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e9a2:	fb04 1303 	mla	r3, r4, r3, r1
 801e9a6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e9aa:	4365      	muls	r5, r4
 801e9ac:	2fff      	cmp	r7, #255	; 0xff
 801e9ae:	eba4 0200 	sub.w	r2, r4, r0
 801e9b2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e9b6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e9ba:	d04a      	beq.n	801ea52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e9bc:	b2bc      	uxth	r4, r7
 801e9be:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e9c2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e9c6:	fa5f f788 	uxtb.w	r7, r8
 801e9ca:	b2f3      	uxtb	r3, r6
 801e9cc:	0040      	lsls	r0, r0, #1
 801e9ce:	fb0e fe04 	mul.w	lr, lr, r4
 801e9d2:	4367      	muls	r7, r4
 801e9d4:	4363      	muls	r3, r4
 801e9d6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e9da:	fa1f fc8c 	uxth.w	ip, ip
 801e9de:	42a9      	cmp	r1, r5
 801e9e0:	d27a      	bcs.n	801ead8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e9e2:	eb01 0900 	add.w	r9, r1, r0
 801e9e6:	4549      	cmp	r1, r9
 801e9e8:	d231      	bcs.n	801ea4e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e9ea:	880a      	ldrh	r2, [r1, #0]
 801e9ec:	1214      	asrs	r4, r2, #8
 801e9ee:	10d6      	asrs	r6, r2, #3
 801e9f0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e9f4:	00d2      	lsls	r2, r2, #3
 801e9f6:	b2d2      	uxtb	r2, r2
 801e9f8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e9fc:	fb14 f40c 	smulbb	r4, r4, ip
 801ea00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ea04:	4474      	add	r4, lr
 801ea06:	fb12 f20c 	smulbb	r2, r2, ip
 801ea0a:	b2a4      	uxth	r4, r4
 801ea0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ea10:	441a      	add	r2, r3
 801ea12:	b292      	uxth	r2, r2
 801ea14:	f104 0a01 	add.w	sl, r4, #1
 801ea18:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ea1c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ea20:	fb16 f60c 	smulbb	r6, r6, ip
 801ea24:	f102 0a01 	add.w	sl, r2, #1
 801ea28:	443e      	add	r6, r7
 801ea2a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ea2e:	b2b6      	uxth	r6, r6
 801ea30:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ea34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ea38:	4322      	orrs	r2, r4
 801ea3a:	1c74      	adds	r4, r6, #1
 801ea3c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ea40:	0976      	lsrs	r6, r6, #5
 801ea42:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ea46:	4332      	orrs	r2, r6
 801ea48:	f821 2b02 	strh.w	r2, [r1], #2
 801ea4c:	e7cb      	b.n	801e9e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ea4e:	4441      	add	r1, r8
 801ea50:	e7c5      	b.n	801e9de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ea52:	4f22      	ldr	r7, [pc, #136]	; (801eadc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ea54:	0973      	lsrs	r3, r6, #5
 801ea56:	ea08 0707 	and.w	r7, r8, r7
 801ea5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea5e:	433b      	orrs	r3, r7
 801ea60:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ea64:	4333      	orrs	r3, r6
 801ea66:	07e7      	lsls	r7, r4, #31
 801ea68:	b29b      	uxth	r3, r3
 801ea6a:	d50b      	bpl.n	801ea84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ea6c:	0040      	lsls	r0, r0, #1
 801ea6e:	0052      	lsls	r2, r2, #1
 801ea70:	42a9      	cmp	r1, r5
 801ea72:	d231      	bcs.n	801ead8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ea74:	180c      	adds	r4, r1, r0
 801ea76:	42a1      	cmp	r1, r4
 801ea78:	d202      	bcs.n	801ea80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ea7a:	f821 3b02 	strh.w	r3, [r1], #2
 801ea7e:	e7fa      	b.n	801ea76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801ea80:	4411      	add	r1, r2
 801ea82:	e7f5      	b.n	801ea70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801ea84:	078e      	lsls	r6, r1, #30
 801ea86:	d008      	beq.n	801ea9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ea88:	0066      	lsls	r6, r4, #1
 801ea8a:	460a      	mov	r2, r1
 801ea8c:	42aa      	cmp	r2, r5
 801ea8e:	d202      	bcs.n	801ea96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ea90:	8013      	strh	r3, [r2, #0]
 801ea92:	4432      	add	r2, r6
 801ea94:	e7fa      	b.n	801ea8c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ea96:	3102      	adds	r1, #2
 801ea98:	3801      	subs	r0, #1
 801ea9a:	07c2      	lsls	r2, r0, #31
 801ea9c:	d50b      	bpl.n	801eab6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ea9e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801eaa2:	3a01      	subs	r2, #1
 801eaa4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801eaa8:	0066      	lsls	r6, r4, #1
 801eaaa:	42aa      	cmp	r2, r5
 801eaac:	d202      	bcs.n	801eab4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801eaae:	8013      	strh	r3, [r2, #0]
 801eab0:	4432      	add	r2, r6
 801eab2:	e7fa      	b.n	801eaaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801eab4:	3801      	subs	r0, #1
 801eab6:	b178      	cbz	r0, 801ead8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eab8:	1040      	asrs	r0, r0, #1
 801eaba:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801eabe:	0080      	lsls	r0, r0, #2
 801eac0:	0064      	lsls	r4, r4, #1
 801eac2:	42a9      	cmp	r1, r5
 801eac4:	d208      	bcs.n	801ead8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eac6:	180e      	adds	r6, r1, r0
 801eac8:	460a      	mov	r2, r1
 801eaca:	42b2      	cmp	r2, r6
 801eacc:	d202      	bcs.n	801ead4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801eace:	f842 3b04 	str.w	r3, [r2], #4
 801ead2:	e7fa      	b.n	801eaca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801ead4:	4421      	add	r1, r4
 801ead6:	e7f4      	b.n	801eac2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801ead8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eadc:	00fff800 	.word	0x00fff800

0801eae0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801eae0:	2200      	movs	r2, #0
 801eae2:	4912      	ldr	r1, [pc, #72]	; (801eb2c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801eae4:	6042      	str	r2, [r0, #4]
 801eae6:	6001      	str	r1, [r0, #0]
 801eae8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801eaec:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801eaf0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801eaf4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801eaf8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801eafc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801eb00:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801eb04:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801eb08:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801eb0c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801eb10:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801eb14:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801eb18:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801eb1c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801eb20:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801eb24:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801eb28:	4770      	bx	lr
 801eb2a:	bf00      	nop
 801eb2c:	08030290 	.word	0x08030290

0801eb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801eb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb34:	460d      	mov	r5, r1
 801eb36:	b08d      	sub	sp, #52	; 0x34
 801eb38:	4604      	mov	r4, r0
 801eb3a:	6808      	ldr	r0, [r1, #0]
 801eb3c:	6849      	ldr	r1, [r1, #4]
 801eb3e:	4699      	mov	r9, r3
 801eb40:	ab08      	add	r3, sp, #32
 801eb42:	c303      	stmia	r3!, {r0, r1}
 801eb44:	6810      	ldr	r0, [r2, #0]
 801eb46:	6851      	ldr	r1, [r2, #4]
 801eb48:	ab0a      	add	r3, sp, #40	; 0x28
 801eb4a:	c303      	stmia	r3!, {r0, r1}
 801eb4c:	a808      	add	r0, sp, #32
 801eb4e:	f7f7 ff0b 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb52:	4629      	mov	r1, r5
 801eb54:	a80a      	add	r0, sp, #40	; 0x28
 801eb56:	f7f7 ff4b 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb5a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801eb5e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801eb62:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801eb66:	4d63      	ldr	r5, [pc, #396]	; (801ecf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801eb68:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801eb6c:	6828      	ldr	r0, [r5, #0]
 801eb6e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801eb72:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eb76:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801eb7a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801eb7e:	440a      	add	r2, r1
 801eb80:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801eb84:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801eb88:	4413      	add	r3, r2
 801eb8a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801eb8e:	6803      	ldr	r3, [r0, #0]
 801eb90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb92:	4798      	blx	r3
 801eb94:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801eb98:	d119      	bne.n	801ebce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801eb9a:	f010 0f20 	tst.w	r0, #32
 801eb9e:	6828      	ldr	r0, [r5, #0]
 801eba0:	d018      	beq.n	801ebd4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801eba2:	2500      	movs	r5, #0
 801eba4:	6801      	ldr	r1, [r0, #0]
 801eba6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ebaa:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ebae:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ebb2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801ebb6:	9502      	str	r5, [sp, #8]
 801ebb8:	b2b6      	uxth	r6, r6
 801ebba:	fa1f f588 	uxth.w	r5, r8
 801ebbe:	9601      	str	r6, [sp, #4]
 801ebc0:	9500      	str	r5, [sp, #0]
 801ebc2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801ebc4:	4621      	mov	r1, r4
 801ebc6:	47a8      	blx	r5
 801ebc8:	b00d      	add	sp, #52	; 0x34
 801ebca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebce:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ebd2:	e7e4      	b.n	801eb9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ebd4:	6803      	ldr	r3, [r0, #0]
 801ebd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebd8:	4798      	blx	r3
 801ebda:	4947      	ldr	r1, [pc, #284]	; (801ecf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ebdc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ebe0:	880b      	ldrh	r3, [r1, #0]
 801ebe2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ebe6:	fb03 5202 	mla	r2, r3, r2, r5
 801ebea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ebee:	4373      	muls	r3, r6
 801ebf0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ebf4:	9307      	str	r3, [sp, #28]
 801ebf6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ebfa:	9306      	str	r3, [sp, #24]
 801ebfc:	468a      	mov	sl, r1
 801ebfe:	9b07      	ldr	r3, [sp, #28]
 801ec00:	4298      	cmp	r0, r3
 801ec02:	d270      	bcs.n	801ece6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ec04:	9b06      	ldr	r3, [sp, #24]
 801ec06:	4621      	mov	r1, r4
 801ec08:	eb00 0b03 	add.w	fp, r0, r3
 801ec0c:	4558      	cmp	r0, fp
 801ec0e:	d25d      	bcs.n	801eccc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ec10:	f851 4b04 	ldr.w	r4, [r1], #4
 801ec14:	0e23      	lsrs	r3, r4, #24
 801ec16:	d014      	beq.n	801ec42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ec18:	2bff      	cmp	r3, #255	; 0xff
 801ec1a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ec1e:	d112      	bne.n	801ec46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ec20:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ec24:	d10f      	bne.n	801ec46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ec26:	0963      	lsrs	r3, r4, #5
 801ec28:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ec2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec30:	f02c 0c07 	bic.w	ip, ip, #7
 801ec34:	ea43 0c0c 	orr.w	ip, r3, ip
 801ec38:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ec3c:	ea4c 0404 	orr.w	r4, ip, r4
 801ec40:	8004      	strh	r4, [r0, #0]
 801ec42:	3002      	adds	r0, #2
 801ec44:	e7e2      	b.n	801ec0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ec46:	fb09 f303 	mul.w	r3, r9, r3
 801ec4a:	8807      	ldrh	r7, [r0, #0]
 801ec4c:	1c5a      	adds	r2, r3, #1
 801ec4e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ec52:	1212      	asrs	r2, r2, #8
 801ec54:	123e      	asrs	r6, r7, #8
 801ec56:	b293      	uxth	r3, r2
 801ec58:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ec5c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ec60:	43d2      	mvns	r2, r2
 801ec62:	b2d2      	uxtb	r2, r2
 801ec64:	10fd      	asrs	r5, r7, #3
 801ec66:	fb1e fe03 	smulbb	lr, lr, r3
 801ec6a:	00ff      	lsls	r7, r7, #3
 801ec6c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ec70:	fb06 e602 	mla	r6, r6, r2, lr
 801ec74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ec78:	b2ff      	uxtb	r7, r7
 801ec7a:	fa5f fc8c 	uxtb.w	ip, ip
 801ec7e:	b2e4      	uxtb	r4, r4
 801ec80:	b2b6      	uxth	r6, r6
 801ec82:	fb1c fc03 	smulbb	ip, ip, r3
 801ec86:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ec8a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ec8e:	fb14 f403 	smulbb	r4, r4, r3
 801ec92:	fb05 c502 	mla	r5, r5, r2, ip
 801ec96:	f106 0e01 	add.w	lr, r6, #1
 801ec9a:	fb07 4702 	mla	r7, r7, r2, r4
 801ec9e:	b2ad      	uxth	r5, r5
 801eca0:	b2bf      	uxth	r7, r7
 801eca2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801eca6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ecaa:	f105 0c01 	add.w	ip, r5, #1
 801ecae:	1c7e      	adds	r6, r7, #1
 801ecb0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ecb4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ecb8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ecbc:	096d      	lsrs	r5, r5, #5
 801ecbe:	ea46 060e 	orr.w	r6, r6, lr
 801ecc2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ecc6:	432e      	orrs	r6, r5
 801ecc8:	8006      	strh	r6, [r0, #0]
 801ecca:	e7ba      	b.n	801ec42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801eccc:	f8ba 3000 	ldrh.w	r3, [sl]
 801ecd0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ecd4:	eba3 0308 	sub.w	r3, r3, r8
 801ecd8:	eba4 0408 	sub.w	r4, r4, r8
 801ecdc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ece0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ece4:	e78b      	b.n	801ebfe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ece6:	4b03      	ldr	r3, [pc, #12]	; (801ecf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ece8:	6818      	ldr	r0, [r3, #0]
 801ecea:	6803      	ldr	r3, [r0, #0]
 801ecec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ecee:	4798      	blx	r3
 801ecf0:	e76a      	b.n	801ebc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ecf2:	bf00      	nop
 801ecf4:	20013834 	.word	0x20013834
 801ecf8:	2001382e 	.word	0x2001382e

0801ecfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ecfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ed00:	460c      	mov	r4, r1
 801ed02:	b085      	sub	sp, #20
 801ed04:	6810      	ldr	r0, [r2, #0]
 801ed06:	6851      	ldr	r1, [r2, #4]
 801ed08:	466d      	mov	r5, sp
 801ed0a:	c503      	stmia	r5!, {r0, r1}
 801ed0c:	6818      	ldr	r0, [r3, #0]
 801ed0e:	6859      	ldr	r1, [r3, #4]
 801ed10:	4616      	mov	r6, r2
 801ed12:	c503      	stmia	r5!, {r0, r1}
 801ed14:	4668      	mov	r0, sp
 801ed16:	f7f7 fe27 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed1a:	4631      	mov	r1, r6
 801ed1c:	a802      	add	r0, sp, #8
 801ed1e:	f7f7 fe67 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed22:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ed26:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ed2a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ed2e:	4d28      	ldr	r5, [pc, #160]	; (801edd0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ed30:	4e28      	ldr	r6, [pc, #160]	; (801edd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ed32:	6828      	ldr	r0, [r5, #0]
 801ed34:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ed38:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ed3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ed40:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ed44:	f8bd 1000 	ldrh.w	r1, [sp]
 801ed48:	440a      	add	r2, r1
 801ed4a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ed4e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ed52:	4413      	add	r3, r2
 801ed54:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ed58:	6803      	ldr	r3, [r0, #0]
 801ed5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed5c:	4798      	blx	r3
 801ed5e:	8833      	ldrh	r3, [r6, #0]
 801ed60:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ed64:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ed68:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801edd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ed6c:	fb03 1202 	mla	r2, r3, r2, r1
 801ed70:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ed74:	fb08 f303 	mul.w	r3, r8, r3
 801ed78:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ed7c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801ed80:	4298      	cmp	r0, r3
 801ed82:	d21d      	bcs.n	801edc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ed84:	eb00 080c 	add.w	r8, r0, ip
 801ed88:	4540      	cmp	r0, r8
 801ed8a:	d20f      	bcs.n	801edac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ed8c:	f854 1b04 	ldr.w	r1, [r4], #4
 801ed90:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ed94:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ed98:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ed9c:	ea42 0209 	orr.w	r2, r2, r9
 801eda0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801eda4:	430a      	orrs	r2, r1
 801eda6:	f820 2b02 	strh.w	r2, [r0], #2
 801edaa:	e7ed      	b.n	801ed88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801edac:	8832      	ldrh	r2, [r6, #0]
 801edae:	1bd2      	subs	r2, r2, r7
 801edb0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801edb4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801edb8:	1bd2      	subs	r2, r2, r7
 801edba:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801edbe:	e7df      	b.n	801ed80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801edc0:	6828      	ldr	r0, [r5, #0]
 801edc2:	6803      	ldr	r3, [r0, #0]
 801edc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801edc6:	4798      	blx	r3
 801edc8:	b005      	add	sp, #20
 801edca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801edce:	bf00      	nop
 801edd0:	20013834 	.word	0x20013834
 801edd4:	2001382e 	.word	0x2001382e
 801edd8:	fffff800 	.word	0xfffff800

0801eddc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801eddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ede0:	460e      	mov	r6, r1
 801ede2:	b08e      	sub	sp, #56	; 0x38
 801ede4:	4604      	mov	r4, r0
 801ede6:	6808      	ldr	r0, [r1, #0]
 801ede8:	6849      	ldr	r1, [r1, #4]
 801edea:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801efc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801edee:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801efc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801edf2:	461d      	mov	r5, r3
 801edf4:	ab0a      	add	r3, sp, #40	; 0x28
 801edf6:	c303      	stmia	r3!, {r0, r1}
 801edf8:	6810      	ldr	r0, [r2, #0]
 801edfa:	6851      	ldr	r1, [r2, #4]
 801edfc:	ab0c      	add	r3, sp, #48	; 0x30
 801edfe:	c303      	stmia	r3!, {r0, r1}
 801ee00:	a80a      	add	r0, sp, #40	; 0x28
 801ee02:	f7f7 fdb1 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ee06:	4631      	mov	r1, r6
 801ee08:	a80c      	add	r0, sp, #48	; 0x30
 801ee0a:	f7f7 fdf1 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ee0e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ee12:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ee16:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ee1a:	f8d8 0000 	ldr.w	r0, [r8]
 801ee1e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ee22:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ee26:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ee2a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ee2e:	440c      	add	r4, r1
 801ee30:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ee34:	440a      	add	r2, r1
 801ee36:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ee3a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ee3e:	4413      	add	r3, r2
 801ee40:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ee44:	6803      	ldr	r3, [r0, #0]
 801ee46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee48:	4798      	blx	r3
 801ee4a:	2dff      	cmp	r5, #255	; 0xff
 801ee4c:	d124      	bne.n	801ee98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ee4e:	f010 0f01 	tst.w	r0, #1
 801ee52:	f8d8 0000 	ldr.w	r0, [r8]
 801ee56:	d022      	beq.n	801ee9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ee58:	2100      	movs	r1, #0
 801ee5a:	f8d0 c000 	ldr.w	ip, [r0]
 801ee5e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801ee62:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801ee66:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ee6a:	f04f 0e01 	mov.w	lr, #1
 801ee6e:	f8cd e018 	str.w	lr, [sp, #24]
 801ee72:	f8b9 e000 	ldrh.w	lr, [r9]
 801ee76:	9503      	str	r5, [sp, #12]
 801ee78:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ee7c:	b2b6      	uxth	r6, r6
 801ee7e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ee82:	9102      	str	r1, [sp, #8]
 801ee84:	b2bf      	uxth	r7, r7
 801ee86:	9601      	str	r6, [sp, #4]
 801ee88:	9700      	str	r7, [sp, #0]
 801ee8a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801ee8e:	4621      	mov	r1, r4
 801ee90:	47a8      	blx	r5
 801ee92:	b00e      	add	sp, #56	; 0x38
 801ee94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee98:	f010 0f04 	tst.w	r0, #4
 801ee9c:	e7d9      	b.n	801ee52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ee9e:	6803      	ldr	r3, [r0, #0]
 801eea0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eea2:	4798      	blx	r3
 801eea4:	f8b9 3000 	ldrh.w	r3, [r9]
 801eea8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801eeac:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801eeb0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801eeb4:	fb03 1202 	mla	r2, r3, r2, r1
 801eeb8:	ebac 0c07 	sub.w	ip, ip, r7
 801eebc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eec0:	435e      	muls	r6, r3
 801eec2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801eec6:	2dff      	cmp	r5, #255	; 0xff
 801eec8:	eba3 0707 	sub.w	r7, r3, r7
 801eecc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801eed0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801eed4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801eed8:	d049      	beq.n	801ef6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801eeda:	43eb      	mvns	r3, r5
 801eedc:	fa1f f985 	uxth.w	r9, r5
 801eee0:	b2db      	uxtb	r3, r3
 801eee2:	42b0      	cmp	r0, r6
 801eee4:	d266      	bcs.n	801efb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801eee6:	eb00 0a0e 	add.w	sl, r0, lr
 801eeea:	4550      	cmp	r0, sl
 801eeec:	4621      	mov	r1, r4
 801eeee:	f104 0403 	add.w	r4, r4, #3
 801eef2:	d25b      	bcs.n	801efac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801eef4:	8802      	ldrh	r2, [r0, #0]
 801eef6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801eefa:	ea4f 2822 	mov.w	r8, r2, asr #8
 801eefe:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ef02:	fb11 f109 	smulbb	r1, r1, r9
 801ef06:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ef0a:	10d5      	asrs	r5, r2, #3
 801ef0c:	fb08 1803 	mla	r8, r8, r3, r1
 801ef10:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ef14:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ef18:	fb11 f109 	smulbb	r1, r1, r9
 801ef1c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ef20:	fb05 1503 	mla	r5, r5, r3, r1
 801ef24:	00d2      	lsls	r2, r2, #3
 801ef26:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ef2a:	b2d2      	uxtb	r2, r2
 801ef2c:	fb11 f109 	smulbb	r1, r1, r9
 801ef30:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ef34:	fa1f f888 	uxth.w	r8, r8
 801ef38:	fb02 1203 	mla	r2, r2, r3, r1
 801ef3c:	b292      	uxth	r2, r2
 801ef3e:	f108 0101 	add.w	r1, r8, #1
 801ef42:	b2ad      	uxth	r5, r5
 801ef44:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ef48:	1c51      	adds	r1, r2, #1
 801ef4a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ef4e:	1c69      	adds	r1, r5, #1
 801ef50:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ef54:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ef58:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ef5c:	096d      	lsrs	r5, r5, #5
 801ef5e:	ea42 0208 	orr.w	r2, r2, r8
 801ef62:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef66:	432a      	orrs	r2, r5
 801ef68:	f820 2b02 	strh.w	r2, [r0], #2
 801ef6c:	e7bd      	b.n	801eeea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ef6e:	4a14      	ldr	r2, [pc, #80]	; (801efc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ef70:	42b0      	cmp	r0, r6
 801ef72:	d21f      	bcs.n	801efb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ef74:	eb00 050e 	add.w	r5, r0, lr
 801ef78:	42a8      	cmp	r0, r5
 801ef7a:	4621      	mov	r1, r4
 801ef7c:	f104 0403 	add.w	r4, r4, #3
 801ef80:	d210      	bcs.n	801efa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ef82:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ef86:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ef8a:	00db      	lsls	r3, r3, #3
 801ef8c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ef90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef94:	430b      	orrs	r3, r1
 801ef96:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ef9a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ef9e:	f820 3b02 	strh.w	r3, [r0], #2
 801efa2:	e7e9      	b.n	801ef78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801efa4:	4438      	add	r0, r7
 801efa6:	eb01 040c 	add.w	r4, r1, ip
 801efaa:	e7e1      	b.n	801ef70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801efac:	4438      	add	r0, r7
 801efae:	eb01 040c 	add.w	r4, r1, ip
 801efb2:	e796      	b.n	801eee2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801efb4:	4b03      	ldr	r3, [pc, #12]	; (801efc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801efb6:	6818      	ldr	r0, [r3, #0]
 801efb8:	6803      	ldr	r3, [r0, #0]
 801efba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801efbc:	4798      	blx	r3
 801efbe:	e768      	b.n	801ee92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801efc0:	fffff800 	.word	0xfffff800
 801efc4:	20013834 	.word	0x20013834
 801efc8:	2001382e 	.word	0x2001382e

0801efcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801efcc:	b4f0      	push	{r4, r5, r6, r7}
 801efce:	4616      	mov	r6, r2
 801efd0:	2e01      	cmp	r6, #1
 801efd2:	461c      	mov	r4, r3
 801efd4:	460d      	mov	r5, r1
 801efd6:	9a04      	ldr	r2, [sp, #16]
 801efd8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801efdc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801efe0:	d012      	beq.n	801f008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801efe2:	d303      	bcc.n	801efec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801efe4:	2e02      	cmp	r6, #2
 801efe6:	d00a      	beq.n	801effe <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801efe8:	bcf0      	pop	{r4, r5, r6, r7}
 801efea:	4770      	bx	lr
 801efec:	6805      	ldr	r5, [r0, #0]
 801efee:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801eff2:	68ed      	ldr	r5, [r5, #12]
 801eff4:	4613      	mov	r3, r2
 801eff6:	46ac      	mov	ip, r5
 801eff8:	4622      	mov	r2, r4
 801effa:	bcf0      	pop	{r4, r5, r6, r7}
 801effc:	4760      	bx	ip
 801effe:	4621      	mov	r1, r4
 801f000:	4628      	mov	r0, r5
 801f002:	bcf0      	pop	{r4, r5, r6, r7}
 801f004:	f7ff bd94 	b.w	801eb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f008:	4621      	mov	r1, r4
 801f00a:	4628      	mov	r0, r5
 801f00c:	bcf0      	pop	{r4, r5, r6, r7}
 801f00e:	f7ff bee5 	b.w	801eddc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801f014 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801f014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f018:	4681      	mov	r9, r0
 801f01a:	b093      	sub	sp, #76	; 0x4c
 801f01c:	6810      	ldr	r0, [r2, #0]
 801f01e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801f022:	4f6d      	ldr	r7, [pc, #436]	; (801f1d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801f024:	4688      	mov	r8, r1
 801f026:	6851      	ldr	r1, [r2, #4]
 801f028:	ac0e      	add	r4, sp, #56	; 0x38
 801f02a:	c403      	stmia	r4!, {r0, r1}
 801f02c:	6818      	ldr	r0, [r3, #0]
 801f02e:	6859      	ldr	r1, [r3, #4]
 801f030:	ac10      	add	r4, sp, #64	; 0x40
 801f032:	4616      	mov	r6, r2
 801f034:	c403      	stmia	r4!, {r0, r1}
 801f036:	a80e      	add	r0, sp, #56	; 0x38
 801f038:	f7f7 fc96 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f03c:	4631      	mov	r1, r6
 801f03e:	a810      	add	r0, sp, #64	; 0x40
 801f040:	f7f7 fcd6 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f044:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801f048:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801f04c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801f050:	4e62      	ldr	r6, [pc, #392]	; (801f1dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f052:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801f056:	6830      	ldr	r0, [r6, #0]
 801f058:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801f05c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f060:	4489      	add	r9, r1
 801f062:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801f066:	440a      	add	r2, r1
 801f068:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801f06c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f070:	4413      	add	r3, r2
 801f072:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801f076:	6803      	ldr	r3, [r0, #0]
 801f078:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f07a:	4798      	blx	r3
 801f07c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f080:	6830      	ldr	r0, [r6, #0]
 801f082:	d01d      	beq.n	801f0c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801f084:	2200      	movs	r2, #0
 801f086:	6801      	ldr	r1, [r0, #0]
 801f088:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801f08c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f090:	220b      	movs	r2, #11
 801f092:	9207      	str	r2, [sp, #28]
 801f094:	883a      	ldrh	r2, [r7, #0]
 801f096:	9206      	str	r2, [sp, #24]
 801f098:	2201      	movs	r2, #1
 801f09a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801f09e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801f0a2:	9203      	str	r2, [sp, #12]
 801f0a4:	b2a4      	uxth	r4, r4
 801f0a6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801f0aa:	9200      	str	r2, [sp, #0]
 801f0ac:	b2ad      	uxth	r5, r5
 801f0ae:	9502      	str	r5, [sp, #8]
 801f0b0:	9401      	str	r4, [sp, #4]
 801f0b2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801f0b4:	4642      	mov	r2, r8
 801f0b6:	4649      	mov	r1, r9
 801f0b8:	47a0      	blx	r4
 801f0ba:	b013      	add	sp, #76	; 0x4c
 801f0bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0c0:	6803      	ldr	r3, [r0, #0]
 801f0c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0c4:	4798      	blx	r3
 801f0c6:	883b      	ldrh	r3, [r7, #0]
 801f0c8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f0cc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801f0d0:	fb03 1202 	mla	r2, r3, r2, r1
 801f0d4:	435d      	muls	r5, r3
 801f0d6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f0da:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801f0de:	920c      	str	r2, [sp, #48]	; 0x30
 801f0e0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801f0e4:	1b12      	subs	r2, r2, r4
 801f0e6:	920d      	str	r2, [sp, #52]	; 0x34
 801f0e8:	0062      	lsls	r2, r4, #1
 801f0ea:	1b1c      	subs	r4, r3, r4
 801f0ec:	0063      	lsls	r3, r4, #1
 801f0ee:	920a      	str	r2, [sp, #40]	; 0x28
 801f0f0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f0f2:	f04f 0e04 	mov.w	lr, #4
 801f0f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0f8:	4298      	cmp	r0, r3
 801f0fa:	d266      	bcs.n	801f1ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801f0fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0fe:	eb00 0b03 	add.w	fp, r0, r3
 801f102:	4558      	cmp	r0, fp
 801f104:	d25c      	bcs.n	801f1c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801f106:	f819 3b01 	ldrb.w	r3, [r9], #1
 801f10a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801f10e:	f858 2003 	ldr.w	r2, [r8, r3]
 801f112:	0e11      	lsrs	r1, r2, #24
 801f114:	d012      	beq.n	801f13c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f116:	29ff      	cmp	r1, #255	; 0xff
 801f118:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801f11c:	d110      	bne.n	801f140 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f11e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f122:	d10d      	bne.n	801f140 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f124:	0953      	lsrs	r3, r2, #5
 801f126:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801f12a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f12e:	f027 0707 	bic.w	r7, r7, #7
 801f132:	431f      	orrs	r7, r3
 801f134:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f138:	433a      	orrs	r2, r7
 801f13a:	8002      	strh	r2, [r0, #0]
 801f13c:	3002      	adds	r0, #2
 801f13e:	e7e0      	b.n	801f102 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801f140:	fb0a f101 	mul.w	r1, sl, r1
 801f144:	8806      	ldrh	r6, [r0, #0]
 801f146:	1c4b      	adds	r3, r1, #1
 801f148:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801f14c:	1235      	asrs	r5, r6, #8
 801f14e:	10f4      	asrs	r4, r6, #3
 801f150:	121b      	asrs	r3, r3, #8
 801f152:	00f6      	lsls	r6, r6, #3
 801f154:	b299      	uxth	r1, r3
 801f156:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801f15a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f15e:	b2f6      	uxtb	r6, r6
 801f160:	43db      	mvns	r3, r3
 801f162:	b2d2      	uxtb	r2, r2
 801f164:	b2db      	uxtb	r3, r3
 801f166:	fb1c fc01 	smulbb	ip, ip, r1
 801f16a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f16e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f172:	fb12 f201 	smulbb	r2, r2, r1
 801f176:	fb05 c503 	mla	r5, r5, r3, ip
 801f17a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801f17e:	b2ff      	uxtb	r7, r7
 801f180:	fb06 2203 	mla	r2, r6, r3, r2
 801f184:	b2ad      	uxth	r5, r5
 801f186:	fb17 f701 	smulbb	r7, r7, r1
 801f18a:	b292      	uxth	r2, r2
 801f18c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801f190:	fb04 7403 	mla	r4, r4, r3, r7
 801f194:	f105 0c01 	add.w	ip, r5, #1
 801f198:	1c57      	adds	r7, r2, #1
 801f19a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f19e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f1a2:	b2a4      	uxth	r4, r4
 801f1a4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f1a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f1ac:	433d      	orrs	r5, r7
 801f1ae:	1c67      	adds	r7, r4, #1
 801f1b0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801f1b4:	0964      	lsrs	r4, r4, #5
 801f1b6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f1ba:	4325      	orrs	r5, r4
 801f1bc:	8005      	strh	r5, [r0, #0]
 801f1be:	e7bd      	b.n	801f13c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f1c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f1c2:	4418      	add	r0, r3
 801f1c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f1c6:	4499      	add	r9, r3
 801f1c8:	e795      	b.n	801f0f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801f1ca:	4b04      	ldr	r3, [pc, #16]	; (801f1dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f1cc:	6818      	ldr	r0, [r3, #0]
 801f1ce:	6803      	ldr	r3, [r0, #0]
 801f1d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f1d2:	4798      	blx	r3
 801f1d4:	e771      	b.n	801f0ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801f1d6:	bf00      	nop
 801f1d8:	2001382e 	.word	0x2001382e
 801f1dc:	20013834 	.word	0x20013834

0801f1e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801f1e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1e4:	b087      	sub	sp, #28
 801f1e6:	4680      	mov	r8, r0
 801f1e8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801f1ec:	460d      	mov	r5, r1
 801f1ee:	4614      	mov	r4, r2
 801f1f0:	2e00      	cmp	r6, #0
 801f1f2:	f000 80b9 	beq.w	801f368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801f1f6:	6810      	ldr	r0, [r2, #0]
 801f1f8:	6851      	ldr	r1, [r2, #4]
 801f1fa:	af02      	add	r7, sp, #8
 801f1fc:	c703      	stmia	r7!, {r0, r1}
 801f1fe:	6818      	ldr	r0, [r3, #0]
 801f200:	6859      	ldr	r1, [r3, #4]
 801f202:	af04      	add	r7, sp, #16
 801f204:	c703      	stmia	r7!, {r0, r1}
 801f206:	a802      	add	r0, sp, #8
 801f208:	f7f7 fbae 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f20c:	4621      	mov	r1, r4
 801f20e:	a804      	add	r0, sp, #16
 801f210:	f7f7 fbee 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f214:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f218:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f21c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801f220:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801f224:	fb14 2103 	smlabb	r1, r4, r3, r2
 801f228:	eb08 0401 	add.w	r4, r8, r1
 801f22c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f230:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f234:	440a      	add	r2, r1
 801f236:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f23a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f23e:	4413      	add	r3, r2
 801f240:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f244:	4b4a      	ldr	r3, [pc, #296]	; (801f370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f246:	6818      	ldr	r0, [r3, #0]
 801f248:	6803      	ldr	r3, [r0, #0]
 801f24a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f24c:	4798      	blx	r3
 801f24e:	4b49      	ldr	r3, [pc, #292]	; (801f374 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801f250:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801f254:	881a      	ldrh	r2, [r3, #0]
 801f256:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801f25a:	2eff      	cmp	r6, #255	; 0xff
 801f25c:	fb02 c101 	mla	r1, r2, r1, ip
 801f260:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f264:	fb02 f207 	mul.w	r2, r2, r7
 801f268:	f105 0104 	add.w	r1, r5, #4
 801f26c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801f270:	461d      	mov	r5, r3
 801f272:	d05a      	beq.n	801f32a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801f274:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801f278:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f27c:	b2b6      	uxth	r6, r6
 801f27e:	fa1f fe8e 	uxth.w	lr, lr
 801f282:	9301      	str	r3, [sp, #4]
 801f284:	4282      	cmp	r2, r0
 801f286:	d96a      	bls.n	801f35e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f288:	eb00 0b0a 	add.w	fp, r0, sl
 801f28c:	4583      	cmp	fp, r0
 801f28e:	d940      	bls.n	801f312 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801f290:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f294:	8805      	ldrh	r5, [r0, #0]
 801f296:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f29a:	122f      	asrs	r7, r5, #8
 801f29c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f2a0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f2a4:	fb17 f70e 	smulbb	r7, r7, lr
 801f2a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f2ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f2b0:	00ed      	lsls	r5, r5, #3
 801f2b2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f2b6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f2ba:	10df      	asrs	r7, r3, #3
 801f2bc:	b2ed      	uxtb	r5, r5
 801f2be:	00db      	lsls	r3, r3, #3
 801f2c0:	fa1f fc8c 	uxth.w	ip, ip
 801f2c4:	fb19 f90e 	smulbb	r9, r9, lr
 801f2c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f2cc:	b2db      	uxtb	r3, r3
 801f2ce:	fb15 f50e 	smulbb	r5, r5, lr
 801f2d2:	fb07 9706 	mla	r7, r7, r6, r9
 801f2d6:	fb03 5306 	mla	r3, r3, r6, r5
 801f2da:	f10c 0901 	add.w	r9, ip, #1
 801f2de:	b29b      	uxth	r3, r3
 801f2e0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f2e4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801f2e8:	f103 0c01 	add.w	ip, r3, #1
 801f2ec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f2f0:	b2bf      	uxth	r7, r7
 801f2f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f2f6:	ea4c 0c09 	orr.w	ip, ip, r9
 801f2fa:	f107 0901 	add.w	r9, r7, #1
 801f2fe:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f302:	097f      	lsrs	r7, r7, #5
 801f304:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f308:	ea4c 0c07 	orr.w	ip, ip, r7
 801f30c:	f820 cb02 	strh.w	ip, [r0], #2
 801f310:	e7bc      	b.n	801f28c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801f312:	9b01      	ldr	r3, [sp, #4]
 801f314:	881b      	ldrh	r3, [r3, #0]
 801f316:	eba3 0308 	sub.w	r3, r3, r8
 801f31a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f31e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f322:	eba3 0308 	sub.w	r3, r3, r8
 801f326:	441c      	add	r4, r3
 801f328:	e7ac      	b.n	801f284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801f32a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f32e:	4282      	cmp	r2, r0
 801f330:	d915      	bls.n	801f35e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f332:	eb00 060a 	add.w	r6, r0, sl
 801f336:	4286      	cmp	r6, r0
 801f338:	d906      	bls.n	801f348 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801f33a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f33e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f342:	f820 3b02 	strh.w	r3, [r0], #2
 801f346:	e7f6      	b.n	801f336 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801f348:	882b      	ldrh	r3, [r5, #0]
 801f34a:	eba3 0308 	sub.w	r3, r3, r8
 801f34e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f352:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f356:	eba3 0308 	sub.w	r3, r3, r8
 801f35a:	441c      	add	r4, r3
 801f35c:	e7e7      	b.n	801f32e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801f35e:	4b04      	ldr	r3, [pc, #16]	; (801f370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f360:	6818      	ldr	r0, [r3, #0]
 801f362:	6803      	ldr	r3, [r0, #0]
 801f364:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f366:	4798      	blx	r3
 801f368:	b007      	add	sp, #28
 801f36a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f36e:	bf00      	nop
 801f370:	20013834 	.word	0x20013834
 801f374:	2001382e 	.word	0x2001382e

0801f378 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f37c:	b091      	sub	sp, #68	; 0x44
 801f37e:	4680      	mov	r8, r0
 801f380:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801f384:	460f      	mov	r7, r1
 801f386:	4614      	mov	r4, r2
 801f388:	2d00      	cmp	r5, #0
 801f38a:	d051      	beq.n	801f430 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f38c:	6810      	ldr	r0, [r2, #0]
 801f38e:	6851      	ldr	r1, [r2, #4]
 801f390:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801f394:	ae0c      	add	r6, sp, #48	; 0x30
 801f396:	c603      	stmia	r6!, {r0, r1}
 801f398:	6818      	ldr	r0, [r3, #0]
 801f39a:	6859      	ldr	r1, [r3, #4]
 801f39c:	ae0e      	add	r6, sp, #56	; 0x38
 801f39e:	c603      	stmia	r6!, {r0, r1}
 801f3a0:	a80c      	add	r0, sp, #48	; 0x30
 801f3a2:	f7f7 fae1 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f3a6:	4621      	mov	r1, r4
 801f3a8:	a80e      	add	r0, sp, #56	; 0x38
 801f3aa:	f7f7 fb21 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f3ae:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801f3b2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f3b6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801f3ba:	f8d9 0000 	ldr.w	r0, [r9]
 801f3be:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f3c2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801f3c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f3ca:	eb08 0401 	add.w	r4, r8, r1
 801f3ce:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801f3d2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f598 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801f3d6:	440a      	add	r2, r1
 801f3d8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801f3dc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801f3e0:	4413      	add	r3, r2
 801f3e2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801f3e6:	6803      	ldr	r3, [r0, #0]
 801f3e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f3ea:	4798      	blx	r3
 801f3ec:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f3f0:	f8d9 0000 	ldr.w	r0, [r9]
 801f3f4:	d01f      	beq.n	801f436 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801f3f6:	2200      	movs	r2, #0
 801f3f8:	6801      	ldr	r1, [r0, #0]
 801f3fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f3fe:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f402:	220b      	movs	r2, #11
 801f404:	9207      	str	r2, [sp, #28]
 801f406:	f8b8 2000 	ldrh.w	r2, [r8]
 801f40a:	9206      	str	r2, [sp, #24]
 801f40c:	2201      	movs	r2, #1
 801f40e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801f412:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801f416:	9203      	str	r2, [sp, #12]
 801f418:	fa1f f28a 	uxth.w	r2, sl
 801f41c:	9202      	str	r2, [sp, #8]
 801f41e:	b2b6      	uxth	r6, r6
 801f420:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f424:	9200      	str	r2, [sp, #0]
 801f426:	9601      	str	r6, [sp, #4]
 801f428:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f42a:	463a      	mov	r2, r7
 801f42c:	4621      	mov	r1, r4
 801f42e:	47a8      	blx	r5
 801f430:	b011      	add	sp, #68	; 0x44
 801f432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f436:	6803      	ldr	r3, [r0, #0]
 801f438:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f43a:	4798      	blx	r3
 801f43c:	f8b8 2000 	ldrh.w	r2, [r8]
 801f440:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f444:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f448:	2dff      	cmp	r5, #255	; 0xff
 801f44a:	fb02 1303 	mla	r3, r2, r3, r1
 801f44e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f452:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f456:	fb0a fa02 	mul.w	sl, sl, r2
 801f45a:	d062      	beq.n	801f522 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f45c:	ea6f 0c05 	mvn.w	ip, r5
 801f460:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f464:	930a      	str	r3, [sp, #40]	; 0x28
 801f466:	b2ad      	uxth	r5, r5
 801f468:	fa5f fc8c 	uxtb.w	ip, ip
 801f46c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f470:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f472:	4298      	cmp	r0, r3
 801f474:	f080 8085 	bcs.w	801f582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f478:	eb00 0b09 	add.w	fp, r0, r9
 801f47c:	4558      	cmp	r0, fp
 801f47e:	d246      	bcs.n	801f50e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f480:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f484:	2303      	movs	r3, #3
 801f486:	2204      	movs	r2, #4
 801f488:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f48c:	eb07 0a0e 	add.w	sl, r7, lr
 801f490:	8803      	ldrh	r3, [r0, #0]
 801f492:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f496:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f49a:	1219      	asrs	r1, r3, #8
 801f49c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f4a0:	fb18 f805 	smulbb	r8, r8, r5
 801f4a4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f4a8:	10da      	asrs	r2, r3, #3
 801f4aa:	fb01 810c 	mla	r1, r1, ip, r8
 801f4ae:	00db      	lsls	r3, r3, #3
 801f4b0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f4b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f4b8:	b2db      	uxtb	r3, r3
 801f4ba:	fb18 f805 	smulbb	r8, r8, r5
 801f4be:	fb1e fe05 	smulbb	lr, lr, r5
 801f4c2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f4c6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f4ca:	b289      	uxth	r1, r1
 801f4cc:	fb02 820c 	mla	r2, r2, ip, r8
 801f4d0:	fb03 e30c 	mla	r3, r3, ip, lr
 801f4d4:	b292      	uxth	r2, r2
 801f4d6:	b29b      	uxth	r3, r3
 801f4d8:	f101 0801 	add.w	r8, r1, #1
 801f4dc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f4e0:	f103 0e01 	add.w	lr, r3, #1
 801f4e4:	f102 0801 	add.w	r8, r2, #1
 801f4e8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f4ec:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f4f0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f4f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f4f8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f4fc:	ea4e 0101 	orr.w	r1, lr, r1
 801f500:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f504:	ea41 0108 	orr.w	r1, r1, r8
 801f508:	f820 1b02 	strh.w	r1, [r0], #2
 801f50c:	e7b6      	b.n	801f47c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f50e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f510:	881b      	ldrh	r3, [r3, #0]
 801f512:	1b9b      	subs	r3, r3, r6
 801f514:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f518:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f51c:	1b9b      	subs	r3, r3, r6
 801f51e:	441c      	add	r4, r3
 801f520:	e7a6      	b.n	801f470 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f522:	491b      	ldr	r1, [pc, #108]	; (801f590 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f524:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f528:	2203      	movs	r2, #3
 801f52a:	2504      	movs	r5, #4
 801f52c:	4550      	cmp	r0, sl
 801f52e:	d228      	bcs.n	801f582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f530:	eb00 0c09 	add.w	ip, r0, r9
 801f534:	4560      	cmp	r0, ip
 801f536:	4623      	mov	r3, r4
 801f538:	d219      	bcs.n	801f56e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f53a:	f893 e000 	ldrb.w	lr, [r3]
 801f53e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f542:	eb07 0b0e 	add.w	fp, r7, lr
 801f546:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f54a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f54e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f552:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f556:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f55a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f55e:	ea43 030b 	orr.w	r3, r3, fp
 801f562:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f566:	3401      	adds	r4, #1
 801f568:	f820 3b02 	strh.w	r3, [r0], #2
 801f56c:	e7e2      	b.n	801f534 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f56e:	f8b8 3000 	ldrh.w	r3, [r8]
 801f572:	1b9b      	subs	r3, r3, r6
 801f574:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f578:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f57c:	1b9b      	subs	r3, r3, r6
 801f57e:	441c      	add	r4, r3
 801f580:	e7d4      	b.n	801f52c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f582:	4b04      	ldr	r3, [pc, #16]	; (801f594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f584:	6818      	ldr	r0, [r3, #0]
 801f586:	6803      	ldr	r3, [r0, #0]
 801f588:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f58a:	4798      	blx	r3
 801f58c:	e750      	b.n	801f430 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f58e:	bf00      	nop
 801f590:	fffff800 	.word	0xfffff800
 801f594:	20013834 	.word	0x20013834
 801f598:	2001382e 	.word	0x2001382e

0801f59c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f59c:	b4f0      	push	{r4, r5, r6, r7}
 801f59e:	460c      	mov	r4, r1
 801f5a0:	4611      	mov	r1, r2
 801f5a2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f5a6:	780f      	ldrb	r7, [r1, #0]
 801f5a8:	784e      	ldrb	r6, [r1, #1]
 801f5aa:	2f01      	cmp	r7, #1
 801f5ac:	461a      	mov	r2, r3
 801f5ae:	9b04      	ldr	r3, [sp, #16]
 801f5b0:	d036      	beq.n	801f620 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f5b2:	d31e      	bcc.n	801f5f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f5b4:	2f02      	cmp	r7, #2
 801f5b6:	d14a      	bne.n	801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5b8:	2e03      	cmp	r6, #3
 801f5ba:	d848      	bhi.n	801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5bc:	e8df f006 	tbb	[pc, r6]
 801f5c0:	16140702 	.word	0x16140702
 801f5c4:	9504      	str	r5, [sp, #16]
 801f5c6:	4620      	mov	r0, r4
 801f5c8:	bcf0      	pop	{r4, r5, r6, r7}
 801f5ca:	f7ff be09 	b.w	801f1e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f5ce:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f5d0:	2800      	cmp	r0, #0
 801f5d2:	d03c      	beq.n	801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5d4:	6806      	ldr	r6, [r0, #0]
 801f5d6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f5da:	68b5      	ldr	r5, [r6, #8]
 801f5dc:	4613      	mov	r3, r2
 801f5de:	46ac      	mov	ip, r5
 801f5e0:	460a      	mov	r2, r1
 801f5e2:	4621      	mov	r1, r4
 801f5e4:	bcf0      	pop	{r4, r5, r6, r7}
 801f5e6:	4760      	bx	ip
 801f5e8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f5ea:	e7f1      	b.n	801f5d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f5ec:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f5f0:	e7ee      	b.n	801f5d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f5f2:	2e03      	cmp	r6, #3
 801f5f4:	d82b      	bhi.n	801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5f6:	e8df f006 	tbb	[pc, r6]
 801f5fa:	0702      	.short	0x0702
 801f5fc:	100e      	.short	0x100e
 801f5fe:	9504      	str	r5, [sp, #16]
 801f600:	4620      	mov	r0, r4
 801f602:	bcf0      	pop	{r4, r5, r6, r7}
 801f604:	f7ff bd06 	b.w	801f014 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f608:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f60a:	b300      	cbz	r0, 801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f60c:	6806      	ldr	r6, [r0, #0]
 801f60e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f612:	68f5      	ldr	r5, [r6, #12]
 801f614:	e7e2      	b.n	801f5dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f616:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f618:	e7f7      	b.n	801f60a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f61a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f61e:	e7f4      	b.n	801f60a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f620:	2e03      	cmp	r6, #3
 801f622:	d814      	bhi.n	801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f624:	e8df f006 	tbb	[pc, r6]
 801f628:	100e0702 	.word	0x100e0702
 801f62c:	9504      	str	r5, [sp, #16]
 801f62e:	4620      	mov	r0, r4
 801f630:	bcf0      	pop	{r4, r5, r6, r7}
 801f632:	f7ff bea1 	b.w	801f378 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f636:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f638:	b148      	cbz	r0, 801f64e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f63a:	6806      	ldr	r6, [r0, #0]
 801f63c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f640:	6935      	ldr	r5, [r6, #16]
 801f642:	e7cb      	b.n	801f5dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f644:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f646:	e7f7      	b.n	801f638 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f648:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f64c:	e7f4      	b.n	801f638 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f64e:	bcf0      	pop	{r4, r5, r6, r7}
 801f650:	4770      	bx	lr
	...

0801f654 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f658:	4604      	mov	r4, r0
 801f65a:	b087      	sub	sp, #28
 801f65c:	6810      	ldr	r0, [r2, #0]
 801f65e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f662:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f89c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f666:	460e      	mov	r6, r1
 801f668:	6851      	ldr	r1, [r2, #4]
 801f66a:	ad02      	add	r5, sp, #8
 801f66c:	c503      	stmia	r5!, {r0, r1}
 801f66e:	6818      	ldr	r0, [r3, #0]
 801f670:	6859      	ldr	r1, [r3, #4]
 801f672:	ad04      	add	r5, sp, #16
 801f674:	4617      	mov	r7, r2
 801f676:	c503      	stmia	r5!, {r0, r1}
 801f678:	a802      	add	r0, sp, #8
 801f67a:	f7f7 f975 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f67e:	4639      	mov	r1, r7
 801f680:	a804      	add	r0, sp, #16
 801f682:	f7f7 f9b5 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f686:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f68a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f68e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f692:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f696:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f69a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f69e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f6a2:	440e      	add	r6, r1
 801f6a4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f6a8:	440a      	add	r2, r1
 801f6aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f6ae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f6b2:	4413      	add	r3, r2
 801f6b4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f6b8:	4b77      	ldr	r3, [pc, #476]	; (801f898 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f6ba:	6818      	ldr	r0, [r3, #0]
 801f6bc:	6803      	ldr	r3, [r0, #0]
 801f6be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f6c0:	4798      	blx	r3
 801f6c2:	f8b9 b000 	ldrh.w	fp, [r9]
 801f6c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f6ca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f6ce:	fb0b 2303 	mla	r3, fp, r3, r2
 801f6d2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f6d6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f6da:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f6de:	fb05 f50b 	mul.w	r5, r5, fp
 801f6e2:	9300      	str	r3, [sp, #0]
 801f6e4:	d069      	beq.n	801f7ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f6e6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f6ea:	4558      	cmp	r0, fp
 801f6ec:	f080 80cc 	bcs.w	801f888 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f6f0:	9b00      	ldr	r3, [sp, #0]
 801f6f2:	18c3      	adds	r3, r0, r3
 801f6f4:	9301      	str	r3, [sp, #4]
 801f6f6:	4631      	mov	r1, r6
 801f6f8:	9b01      	ldr	r3, [sp, #4]
 801f6fa:	4298      	cmp	r0, r3
 801f6fc:	d24f      	bcs.n	801f79e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f6fe:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f702:	2a00      	cmp	r2, #0
 801f704:	d048      	beq.n	801f798 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f706:	fb0a f202 	mul.w	r2, sl, r2
 801f70a:	1c53      	adds	r3, r2, #1
 801f70c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f710:	121b      	asrs	r3, r3, #8
 801f712:	d041      	beq.n	801f798 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f714:	8802      	ldrh	r2, [r0, #0]
 801f716:	f8b4 c000 	ldrh.w	ip, [r4]
 801f71a:	b29e      	uxth	r6, r3
 801f71c:	1215      	asrs	r5, r2, #8
 801f71e:	43db      	mvns	r3, r3
 801f720:	b2db      	uxtb	r3, r3
 801f722:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f726:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f72a:	fb15 f503 	smulbb	r5, r5, r3
 801f72e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f732:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f736:	00d2      	lsls	r2, r2, #3
 801f738:	fb07 5706 	mla	r7, r7, r6, r5
 801f73c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f740:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f744:	b2d2      	uxtb	r2, r2
 801f746:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f74a:	b2bf      	uxth	r7, r7
 801f74c:	fb1e fe03 	smulbb	lr, lr, r3
 801f750:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f754:	fa5f fc8c 	uxtb.w	ip, ip
 801f758:	fb12 f203 	smulbb	r2, r2, r3
 801f75c:	fb05 e506 	mla	r5, r5, r6, lr
 801f760:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f764:	f107 0e01 	add.w	lr, r7, #1
 801f768:	fa1f fc8c 	uxth.w	ip, ip
 801f76c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f770:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f774:	f10c 0701 	add.w	r7, ip, #1
 801f778:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f77c:	b2ad      	uxth	r5, r5
 801f77e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f782:	ea47 070e 	orr.w	r7, r7, lr
 801f786:	f105 0e01 	add.w	lr, r5, #1
 801f78a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f78e:	096d      	lsrs	r5, r5, #5
 801f790:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f794:	432f      	orrs	r7, r5
 801f796:	8007      	strh	r7, [r0, #0]
 801f798:	3002      	adds	r0, #2
 801f79a:	3402      	adds	r4, #2
 801f79c:	e7ac      	b.n	801f6f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f79e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f7a2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f7a6:	eba3 0308 	sub.w	r3, r3, r8
 801f7aa:	eba6 0608 	sub.w	r6, r6, r8
 801f7ae:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f7b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f7b6:	440e      	add	r6, r1
 801f7b8:	e797      	b.n	801f6ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f7ba:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f7be:	42a8      	cmp	r0, r5
 801f7c0:	d262      	bcs.n	801f888 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f7c2:	9b00      	ldr	r3, [sp, #0]
 801f7c4:	4631      	mov	r1, r6
 801f7c6:	eb00 0b03 	add.w	fp, r0, r3
 801f7ca:	4558      	cmp	r0, fp
 801f7cc:	d24e      	bcs.n	801f86c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f7ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f7d2:	b12b      	cbz	r3, 801f7e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f7d4:	2bff      	cmp	r3, #255	; 0xff
 801f7d6:	f8b4 e000 	ldrh.w	lr, [r4]
 801f7da:	d104      	bne.n	801f7e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f7dc:	f8a0 e000 	strh.w	lr, [r0]
 801f7e0:	3002      	adds	r0, #2
 801f7e2:	3402      	adds	r4, #2
 801f7e4:	e7f1      	b.n	801f7ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f7e6:	8802      	ldrh	r2, [r0, #0]
 801f7e8:	b29f      	uxth	r7, r3
 801f7ea:	1216      	asrs	r6, r2, #8
 801f7ec:	43db      	mvns	r3, r3
 801f7ee:	b2db      	uxtb	r3, r3
 801f7f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f7f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f7f8:	fb16 f603 	smulbb	r6, r6, r3
 801f7fc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f800:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f804:	00d2      	lsls	r2, r2, #3
 801f806:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f80a:	b2d2      	uxtb	r2, r2
 801f80c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f810:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f814:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f818:	fb1a fa03 	smulbb	sl, sl, r3
 801f81c:	fa1f fc8c 	uxth.w	ip, ip
 801f820:	fb12 f303 	smulbb	r3, r2, r3
 801f824:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f828:	fa5f fe8e 	uxtb.w	lr, lr
 801f82c:	fb06 a607 	mla	r6, r6, r7, sl
 801f830:	f10c 0201 	add.w	r2, ip, #1
 801f834:	fb0e 3307 	mla	r3, lr, r7, r3
 801f838:	b2b6      	uxth	r6, r6
 801f83a:	b29b      	uxth	r3, r3
 801f83c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f840:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f844:	f106 0a01 	add.w	sl, r6, #1
 801f848:	f103 0c01 	add.w	ip, r3, #1
 801f84c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f850:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f854:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f858:	0976      	lsrs	r6, r6, #5
 801f85a:	ea4c 0c02 	orr.w	ip, ip, r2
 801f85e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f862:	ea4c 0c06 	orr.w	ip, ip, r6
 801f866:	f8a0 c000 	strh.w	ip, [r0]
 801f86a:	e7b9      	b.n	801f7e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f86c:	f8b9 3000 	ldrh.w	r3, [r9]
 801f870:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f874:	eba3 0308 	sub.w	r3, r3, r8
 801f878:	eba6 0608 	sub.w	r6, r6, r8
 801f87c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f880:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f884:	440e      	add	r6, r1
 801f886:	e79a      	b.n	801f7be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f888:	4b03      	ldr	r3, [pc, #12]	; (801f898 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f88a:	6818      	ldr	r0, [r3, #0]
 801f88c:	6803      	ldr	r3, [r0, #0]
 801f88e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f890:	4798      	blx	r3
 801f892:	b007      	add	sp, #28
 801f894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f898:	20013834 	.word	0x20013834
 801f89c:	2001382e 	.word	0x2001382e

0801f8a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f8a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8a4:	b089      	sub	sp, #36	; 0x24
 801f8a6:	4682      	mov	sl, r0
 801f8a8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f8ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f8ae:	460f      	mov	r7, r1
 801f8b0:	4691      	mov	r9, r2
 801f8b2:	4698      	mov	r8, r3
 801f8b4:	2e00      	cmp	r6, #0
 801f8b6:	d03d      	beq.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8b8:	4608      	mov	r0, r1
 801f8ba:	f7fa fe59 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f8be:	4605      	mov	r5, r0
 801f8c0:	4638      	mov	r0, r7
 801f8c2:	f7fa fe89 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f8c6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f8ca:	4638      	mov	r0, r7
 801f8cc:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f8d0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f8d4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f8d8:	f7fa ff36 	bl	801a748 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f8dc:	4605      	mov	r5, r0
 801f8de:	4638      	mov	r0, r7
 801f8e0:	f7fa ff62 	bl	801a7a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f8e4:	4681      	mov	r9, r0
 801f8e6:	4638      	mov	r0, r7
 801f8e8:	f7fa ffb2 	bl	801a850 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f8ec:	280b      	cmp	r0, #11
 801f8ee:	d821      	bhi.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8f0:	e8df f000 	tbb	[pc, r0]
 801f8f4:	2006aebe 	.word	0x2006aebe
 801f8f8:	20202020 	.word	0x20202020
 801f8fc:	b5202020 	.word	0xb5202020
 801f900:	4bb0      	ldr	r3, [pc, #704]	; (801fbc4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f902:	6818      	ldr	r0, [r3, #0]
 801f904:	6803      	ldr	r3, [r0, #0]
 801f906:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f908:	4798      	blx	r3
 801f90a:	2eff      	cmp	r6, #255	; 0xff
 801f90c:	d101      	bne.n	801f912 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f90e:	0683      	lsls	r3, r0, #26
 801f910:	d506      	bpl.n	801f920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f912:	4633      	mov	r3, r6
 801f914:	4622      	mov	r2, r4
 801f916:	a902      	add	r1, sp, #8
 801f918:	4628      	mov	r0, r5
 801f91a:	f7ff f909 	bl	801eb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f91e:	e009      	b.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f920:	4638      	mov	r0, r7
 801f922:	f7fa fed9 	bl	801a6d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f926:	b940      	cbnz	r0, 801f93a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f928:	4623      	mov	r3, r4
 801f92a:	aa02      	add	r2, sp, #8
 801f92c:	4629      	mov	r1, r5
 801f92e:	4650      	mov	r0, sl
 801f930:	f7ff f9e4 	bl	801ecfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f934:	b009      	add	sp, #36	; 0x24
 801f936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f93a:	f10d 0818 	add.w	r8, sp, #24
 801f93e:	4639      	mov	r1, r7
 801f940:	4640      	mov	r0, r8
 801f942:	f7fa fe7d 	bl	801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f946:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f94a:	af04      	add	r7, sp, #16
 801f94c:	e887 0003 	stmia.w	r7, {r0, r1}
 801f950:	4638      	mov	r0, r7
 801f952:	4621      	mov	r1, r4
 801f954:	f7f1 fa6a 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 801f958:	4638      	mov	r0, r7
 801f95a:	f7f1 faaa 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f95e:	2800      	cmp	r0, #0
 801f960:	d1d7      	bne.n	801f912 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f962:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f966:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f96a:	4293      	cmp	r3, r2
 801f96c:	dd12      	ble.n	801f994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f96e:	1a9b      	subs	r3, r3, r2
 801f970:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f974:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f978:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f97c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f980:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f984:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f988:	4642      	mov	r2, r8
 801f98a:	4633      	mov	r3, r6
 801f98c:	a902      	add	r1, sp, #8
 801f98e:	4628      	mov	r0, r5
 801f990:	f7ff f8ce 	bl	801eb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f994:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f998:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f99c:	4293      	cmp	r3, r2
 801f99e:	dd12      	ble.n	801f9c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f9a0:	1a9b      	subs	r3, r3, r2
 801f9a2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f9a6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f9aa:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f9ae:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f9b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f9b6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f9ba:	23ff      	movs	r3, #255	; 0xff
 801f9bc:	4642      	mov	r2, r8
 801f9be:	a902      	add	r1, sp, #8
 801f9c0:	4628      	mov	r0, r5
 801f9c2:	f7ff f8b5 	bl	801eb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f9c6:	463b      	mov	r3, r7
 801f9c8:	aa02      	add	r2, sp, #8
 801f9ca:	4629      	mov	r1, r5
 801f9cc:	4650      	mov	r0, sl
 801f9ce:	f7ff f995 	bl	801ecfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f9d2:	88a2      	ldrh	r2, [r4, #4]
 801f9d4:	8823      	ldrh	r3, [r4, #0]
 801f9d6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f9da:	4413      	add	r3, r2
 801f9dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f9e0:	440a      	add	r2, r1
 801f9e2:	b29b      	uxth	r3, r3
 801f9e4:	b292      	uxth	r2, r2
 801f9e6:	b211      	sxth	r1, r2
 801f9e8:	b218      	sxth	r0, r3
 801f9ea:	4288      	cmp	r0, r1
 801f9ec:	dd12      	ble.n	801fa14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f9ee:	1a9b      	subs	r3, r3, r2
 801f9f0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f9f4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f9f8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f9fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fa00:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fa04:	23ff      	movs	r3, #255	; 0xff
 801fa06:	4642      	mov	r2, r8
 801fa08:	a902      	add	r1, sp, #8
 801fa0a:	4628      	mov	r0, r5
 801fa0c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801fa10:	f7ff f88e 	bl	801eb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fa14:	88e2      	ldrh	r2, [r4, #6]
 801fa16:	8863      	ldrh	r3, [r4, #2]
 801fa18:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fa1c:	4413      	add	r3, r2
 801fa1e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fa22:	440a      	add	r2, r1
 801fa24:	b29b      	uxth	r3, r3
 801fa26:	b292      	uxth	r2, r2
 801fa28:	b211      	sxth	r1, r2
 801fa2a:	b218      	sxth	r0, r3
 801fa2c:	4288      	cmp	r0, r1
 801fa2e:	dd81      	ble.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa30:	1a9b      	subs	r3, r3, r2
 801fa32:	f9b4 6000 	ldrsh.w	r6, [r4]
 801fa36:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fa3a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fa3e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801fa42:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fa46:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fa4a:	23ff      	movs	r3, #255	; 0xff
 801fa4c:	4642      	mov	r2, r8
 801fa4e:	e762      	b.n	801f916 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801fa50:	4633      	mov	r3, r6
 801fa52:	4622      	mov	r2, r4
 801fa54:	a902      	add	r1, sp, #8
 801fa56:	4628      	mov	r0, r5
 801fa58:	f7ff f9c0 	bl	801eddc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801fa5c:	e76a      	b.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa5e:	e9cd 4600 	strd	r4, r6, [sp]
 801fa62:	ab02      	add	r3, sp, #8
 801fa64:	464a      	mov	r2, r9
 801fa66:	4629      	mov	r1, r5
 801fa68:	4650      	mov	r0, sl
 801fa6a:	f7ff fd97 	bl	801f59c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801fa6e:	e761      	b.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa70:	4638      	mov	r0, r7
 801fa72:	f7fa fe31 	bl	801a6d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fa76:	b950      	cbnz	r0, 801fa8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801fa78:	e9cd 6000 	strd	r6, r0, [sp]
 801fa7c:	f8da 3000 	ldr.w	r3, [sl]
 801fa80:	aa02      	add	r2, sp, #8
 801fa82:	68de      	ldr	r6, [r3, #12]
 801fa84:	4629      	mov	r1, r5
 801fa86:	4623      	mov	r3, r4
 801fa88:	4650      	mov	r0, sl
 801fa8a:	47b0      	blx	r6
 801fa8c:	e752      	b.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa8e:	f10d 0818 	add.w	r8, sp, #24
 801fa92:	4639      	mov	r1, r7
 801fa94:	4640      	mov	r0, r8
 801fa96:	f7fa fdd3 	bl	801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fa9a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801fa9e:	af04      	add	r7, sp, #16
 801faa0:	e887 0003 	stmia.w	r7, {r0, r1}
 801faa4:	4638      	mov	r0, r7
 801faa6:	4621      	mov	r1, r4
 801faa8:	f7f1 f9c0 	bl	8010e2c <_ZN8touchgfx4RectaNERKS0_>
 801faac:	4638      	mov	r0, r7
 801faae:	f7f1 fa00 	bl	8010eb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fab2:	b138      	cbz	r0, 801fac4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801fab4:	9600      	str	r6, [sp, #0]
 801fab6:	4623      	mov	r3, r4
 801fab8:	aa02      	add	r2, sp, #8
 801faba:	4649      	mov	r1, r9
 801fabc:	4628      	mov	r0, r5
 801fabe:	f7ff fdc9 	bl	801f654 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fac2:	e737      	b.n	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fac4:	e9cd 6000 	strd	r6, r0, [sp]
 801fac8:	f8da 3000 	ldr.w	r3, [sl]
 801facc:	aa02      	add	r2, sp, #8
 801face:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801fad2:	4629      	mov	r1, r5
 801fad4:	463b      	mov	r3, r7
 801fad6:	4650      	mov	r0, sl
 801fad8:	47d8      	blx	fp
 801fada:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fade:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fae2:	4293      	cmp	r3, r2
 801fae4:	dd13      	ble.n	801fb0e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801fae6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801faea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801faee:	f8ad 0018 	strh.w	r0, [sp, #24]
 801faf2:	1a9b      	subs	r3, r3, r2
 801faf4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801faf8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801fafc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fb00:	9600      	str	r6, [sp, #0]
 801fb02:	4643      	mov	r3, r8
 801fb04:	aa02      	add	r2, sp, #8
 801fb06:	4649      	mov	r1, r9
 801fb08:	4628      	mov	r0, r5
 801fb0a:	f7ff fda3 	bl	801f654 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb0e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fb12:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fb16:	4293      	cmp	r3, r2
 801fb18:	dd13      	ble.n	801fb42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801fb1a:	1a9b      	subs	r3, r3, r2
 801fb1c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fb20:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fb24:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fb28:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fb2c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb30:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fb34:	9600      	str	r6, [sp, #0]
 801fb36:	4643      	mov	r3, r8
 801fb38:	aa02      	add	r2, sp, #8
 801fb3a:	4649      	mov	r1, r9
 801fb3c:	4628      	mov	r0, r5
 801fb3e:	f7ff fd89 	bl	801f654 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb42:	88a2      	ldrh	r2, [r4, #4]
 801fb44:	8823      	ldrh	r3, [r4, #0]
 801fb46:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fb4a:	4413      	add	r3, r2
 801fb4c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fb50:	440a      	add	r2, r1
 801fb52:	b29b      	uxth	r3, r3
 801fb54:	b292      	uxth	r2, r2
 801fb56:	b211      	sxth	r1, r2
 801fb58:	b218      	sxth	r0, r3
 801fb5a:	4288      	cmp	r0, r1
 801fb5c:	dd13      	ble.n	801fb86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801fb5e:	1a9b      	subs	r3, r3, r2
 801fb60:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fb64:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801fb68:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fb6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb70:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fb74:	9600      	str	r6, [sp, #0]
 801fb76:	4643      	mov	r3, r8
 801fb78:	aa02      	add	r2, sp, #8
 801fb7a:	4649      	mov	r1, r9
 801fb7c:	4628      	mov	r0, r5
 801fb7e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801fb82:	f7ff fd67 	bl	801f654 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb86:	88e2      	ldrh	r2, [r4, #6]
 801fb88:	8863      	ldrh	r3, [r4, #2]
 801fb8a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fb8e:	4413      	add	r3, r2
 801fb90:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fb94:	440a      	add	r2, r1
 801fb96:	b29b      	uxth	r3, r3
 801fb98:	b292      	uxth	r2, r2
 801fb9a:	b211      	sxth	r1, r2
 801fb9c:	b218      	sxth	r0, r3
 801fb9e:	4288      	cmp	r0, r1
 801fba0:	f77f aec8 	ble.w	801f934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fba4:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fba8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fbac:	f8ad 7018 	strh.w	r7, [sp, #24]
 801fbb0:	1a9b      	subs	r3, r3, r2
 801fbb2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fbb6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fbba:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fbbe:	9600      	str	r6, [sp, #0]
 801fbc0:	4643      	mov	r3, r8
 801fbc2:	e779      	b.n	801fab8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801fbc4:	20013834 	.word	0x20013834

0801fbc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801fbc8:	b180      	cbz	r0, 801fbec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801fbca:	2903      	cmp	r1, #3
 801fbcc:	d81c      	bhi.n	801fc08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fbce:	e8df f001 	tbb	[pc, r1]
 801fbd2:	1d02      	.short	0x1d02
 801fbd4:	1f08      	.short	0x1f08
 801fbd6:	4b10      	ldr	r3, [pc, #64]	; (801fc18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fbd8:	8818      	ldrh	r0, [r3, #0]
 801fbda:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fbde:	4240      	negs	r0, r0
 801fbe0:	4770      	bx	lr
 801fbe2:	4b0d      	ldr	r3, [pc, #52]	; (801fc18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fbe4:	8818      	ldrh	r0, [r3, #0]
 801fbe6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fbea:	4770      	bx	lr
 801fbec:	2903      	cmp	r1, #3
 801fbee:	d80b      	bhi.n	801fc08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fbf0:	a301      	add	r3, pc, #4	; (adr r3, 801fbf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801fbf2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fbf6:	bf00      	nop
 801fbf8:	0801fc0d 	.word	0x0801fc0d
 801fbfc:	0801fbe3 	.word	0x0801fbe3
 801fc00:	0801fc11 	.word	0x0801fc11
 801fc04:	0801fbd7 	.word	0x0801fbd7
 801fc08:	2000      	movs	r0, #0
 801fc0a:	4770      	bx	lr
 801fc0c:	2001      	movs	r0, #1
 801fc0e:	4770      	bx	lr
 801fc10:	f04f 30ff 	mov.w	r0, #4294967295
 801fc14:	4770      	bx	lr
 801fc16:	bf00      	nop
 801fc18:	2001382e 	.word	0x2001382e

0801fc1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801fc1c:	b180      	cbz	r0, 801fc40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801fc1e:	2903      	cmp	r1, #3
 801fc20:	d81c      	bhi.n	801fc5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fc22:	e8df f001 	tbb	[pc, r1]
 801fc26:	021d      	.short	0x021d
 801fc28:	071f      	.short	0x071f
 801fc2a:	4b10      	ldr	r3, [pc, #64]	; (801fc6c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fc2c:	8818      	ldrh	r0, [r3, #0]
 801fc2e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fc32:	4770      	bx	lr
 801fc34:	4b0d      	ldr	r3, [pc, #52]	; (801fc6c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fc36:	8818      	ldrh	r0, [r3, #0]
 801fc38:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fc3c:	4240      	negs	r0, r0
 801fc3e:	4770      	bx	lr
 801fc40:	2903      	cmp	r1, #3
 801fc42:	d80b      	bhi.n	801fc5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fc44:	a301      	add	r3, pc, #4	; (adr r3, 801fc4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801fc46:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fc4a:	bf00      	nop
 801fc4c:	0801fc2b 	.word	0x0801fc2b
 801fc50:	0801fc65 	.word	0x0801fc65
 801fc54:	0801fc35 	.word	0x0801fc35
 801fc58:	0801fc61 	.word	0x0801fc61
 801fc5c:	2000      	movs	r0, #0
 801fc5e:	4770      	bx	lr
 801fc60:	2001      	movs	r0, #1
 801fc62:	4770      	bx	lr
 801fc64:	f04f 30ff 	mov.w	r0, #4294967295
 801fc68:	4770      	bx	lr
 801fc6a:	bf00      	nop
 801fc6c:	2001382e 	.word	0x2001382e

0801fc70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801fc70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc74:	b099      	sub	sp, #100	; 0x64
 801fc76:	910b      	str	r1, [sp, #44]	; 0x2c
 801fc78:	a914      	add	r1, sp, #80	; 0x50
 801fc7a:	e881 000c 	stmia.w	r1, {r2, r3}
 801fc7e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801fc82:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801fc86:	f891 900d 	ldrb.w	r9, [r1, #13]
 801fc8a:	9309      	str	r3, [sp, #36]	; 0x24
 801fc8c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801fc90:	9310      	str	r3, [sp, #64]	; 0x40
 801fc92:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801fc96:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801fc9a:	930c      	str	r3, [sp, #48]	; 0x30
 801fc9c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801fca0:	798f      	ldrb	r7, [r1, #6]
 801fca2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801fca6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801fcaa:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801fcae:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801fcb2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801fcb6:	431f      	orrs	r7, r3
 801fcb8:	f000 8195 	beq.w	801ffe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fcbc:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801fcc0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801fcc4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801fcc8:	ea59 0903 	orrs.w	r9, r9, r3
 801fccc:	f000 818b 	beq.w	801ffe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fcd0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801fcd4:	b29b      	uxth	r3, r3
 801fcd6:	2d00      	cmp	r5, #0
 801fcd8:	f000 812e 	beq.w	801ff38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801fcdc:	1aed      	subs	r5, r5, r3
 801fcde:	b2ad      	uxth	r5, r5
 801fce0:	042b      	lsls	r3, r5, #16
 801fce2:	d502      	bpl.n	801fcea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801fce4:	1b64      	subs	r4, r4, r5
 801fce6:	b224      	sxth	r4, r4
 801fce8:	2500      	movs	r5, #0
 801fcea:	f9b2 1000 	ldrsh.w	r1, [r2]
 801fcee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801fcf2:	428c      	cmp	r4, r1
 801fcf4:	b28b      	uxth	r3, r1
 801fcf6:	bfbf      	itttt	lt
 801fcf8:	18ed      	addlt	r5, r5, r3
 801fcfa:	1b2c      	sublt	r4, r5, r4
 801fcfc:	b2a5      	uxthlt	r5, r4
 801fcfe:	460c      	movlt	r4, r1
 801fd00:	8891      	ldrh	r1, [r2, #4]
 801fd02:	440b      	add	r3, r1
 801fd04:	b21b      	sxth	r3, r3
 801fd06:	930f      	str	r3, [sp, #60]	; 0x3c
 801fd08:	88d3      	ldrh	r3, [r2, #6]
 801fd0a:	8852      	ldrh	r2, [r2, #2]
 801fd0c:	4413      	add	r3, r2
 801fd0e:	b21b      	sxth	r3, r3
 801fd10:	930d      	str	r3, [sp, #52]	; 0x34
 801fd12:	4bbe      	ldr	r3, [pc, #760]	; (802000c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801fd14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd16:	f893 b000 	ldrb.w	fp, [r3]
 801fd1a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801fd1e:	f1dc 0300 	rsbs	r3, ip, #0
 801fd22:	eb43 030c 	adc.w	r3, r3, ip
 801fd26:	930e      	str	r3, [sp, #56]	; 0x38
 801fd28:	4621      	mov	r1, r4
 801fd2a:	4653      	mov	r3, sl
 801fd2c:	a814      	add	r0, sp, #80	; 0x50
 801fd2e:	f7f6 fc90 	bl	8016652 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801fd32:	4621      	mov	r1, r4
 801fd34:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801fd38:	4653      	mov	r3, sl
 801fd3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd3c:	a814      	add	r0, sp, #80	; 0x50
 801fd3e:	f7f6 fca5 	bl	801668c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801fd42:	a918      	add	r1, sp, #96	; 0x60
 801fd44:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801fd48:	a817      	add	r0, sp, #92	; 0x5c
 801fd4a:	f7f6 fdcb 	bl	80168e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801fd4e:	f1ba 0f00 	cmp.w	sl, #0
 801fd52:	f040 80f4 	bne.w	801ff3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801fd56:	f1bb 0f01 	cmp.w	fp, #1
 801fd5a:	f040 80f8 	bne.w	801ff4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801fd5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd60:	2b00      	cmp	r3, #0
 801fd62:	f040 8145 	bne.w	801fff0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801fd66:	b2ba      	uxth	r2, r7
 801fd68:	b905      	cbnz	r5, 801fd6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801fd6a:	b16e      	cbz	r6, 801fd88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801fd6c:	fb06 5302 	mla	r3, r6, r2, r5
 801fd70:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801fd72:	fb08 f303 	mul.w	r3, r8, r3
 801fd76:	4631      	mov	r1, r6
 801fd78:	f003 0607 	and.w	r6, r3, #7
 801fd7c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801fd80:	9328      	str	r3, [sp, #160]	; 0xa0
 801fd82:	eba9 0301 	sub.w	r3, r9, r1
 801fd86:	930a      	str	r3, [sp, #40]	; 0x28
 801fd88:	4651      	mov	r1, sl
 801fd8a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fd8c:	f7ff ff1c 	bl	801fbc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801fd90:	4681      	mov	r9, r0
 801fd92:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fd94:	f7ff ff42 	bl	801fc1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801fd98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fd9a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fd9c:	eba3 0a01 	sub.w	sl, r3, r1
 801fda0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fda2:	459a      	cmp	sl, r3
 801fda4:	bfa8      	it	ge
 801fda6:	469a      	movge	sl, r3
 801fda8:	f1ba 0f00 	cmp.w	sl, #0
 801fdac:	4683      	mov	fp, r0
 801fdae:	f340 811a 	ble.w	801ffe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fdb2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fdb4:	1b64      	subs	r4, r4, r5
 801fdb6:	1b1c      	subs	r4, r3, r4
 801fdb8:	42bc      	cmp	r4, r7
 801fdba:	bfd4      	ite	le
 801fdbc:	ebc5 0504 	rsble	r5, r5, r4
 801fdc0:	ebc5 0507 	rsbgt	r5, r5, r7
 801fdc4:	2d00      	cmp	r5, #0
 801fdc6:	f340 810e 	ble.w	801ffe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fdca:	1b52      	subs	r2, r2, r5
 801fdcc:	fb08 f302 	mul.w	r3, r8, r2
 801fdd0:	930f      	str	r3, [sp, #60]	; 0x3c
 801fdd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdd4:	2b00      	cmp	r3, #0
 801fdd6:	f040 8116 	bne.w	8020006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801fdda:	4b8d      	ldr	r3, [pc, #564]	; (8020010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801fddc:	6818      	ldr	r0, [r3, #0]
 801fdde:	6803      	ldr	r3, [r0, #0]
 801fde0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fde2:	4798      	blx	r3
 801fde4:	2301      	movs	r3, #1
 801fde6:	fa03 f308 	lsl.w	r3, r3, r8
 801fdea:	4a8a      	ldr	r2, [pc, #552]	; (8020014 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801fdec:	3b01      	subs	r3, #1
 801fdee:	b2db      	uxtb	r3, r3
 801fdf0:	8811      	ldrh	r1, [r2, #0]
 801fdf2:	930e      	str	r3, [sp, #56]	; 0x38
 801fdf4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801fdf8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801fdfc:	fb01 2303 	mla	r3, r1, r3, r2
 801fe00:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fe04:	930a      	str	r3, [sp, #40]	; 0x28
 801fe06:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe08:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801fe0c:	9313      	str	r3, [sp, #76]	; 0x4c
 801fe0e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe10:	0a19      	lsrs	r1, r3, #8
 801fe12:	b2cb      	uxtb	r3, r1
 801fe14:	9312      	str	r3, [sp, #72]	; 0x48
 801fe16:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe18:	b2db      	uxtb	r3, r3
 801fe1a:	9311      	str	r3, [sp, #68]	; 0x44
 801fe1c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe1e:	095a      	lsrs	r2, r3, #5
 801fe20:	4b7d      	ldr	r3, [pc, #500]	; (8020018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801fe22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe26:	400b      	ands	r3, r1
 801fe28:	4313      	orrs	r3, r2
 801fe2a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fe2c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe30:	4313      	orrs	r3, r2
 801fe32:	b29b      	uxth	r3, r3
 801fe34:	9310      	str	r3, [sp, #64]	; 0x40
 801fe36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fe38:	781a      	ldrb	r2, [r3, #0]
 801fe3a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801fe3e:	4132      	asrs	r2, r6
 801fe40:	fb05 b919 	mls	r9, r5, r9, fp
 801fe44:	fb03 fb05 	mul.w	fp, r3, r5
 801fe48:	b2d2      	uxtb	r2, r2
 801fe4a:	930d      	str	r3, [sp, #52]	; 0x34
 801fe4c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801fe50:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801fe54:	f0c0 80f5 	bcc.w	8020042 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801fe58:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801fe5c:	46ae      	mov	lr, r5
 801fe5e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801fe62:	f0c0 80dd 	bcc.w	8020020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801fe66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe68:	4013      	ands	r3, r2
 801fe6a:	d055      	beq.n	801ff18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801fe6c:	20ff      	movs	r0, #255	; 0xff
 801fe6e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fe70:	fb90 f1f1 	sdiv	r1, r0, r1
 801fe74:	434b      	muls	r3, r1
 801fe76:	2bfe      	cmp	r3, #254	; 0xfe
 801fe78:	dd03      	ble.n	801fe82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801fe7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fe7c:	4281      	cmp	r1, r0
 801fe7e:	f000 80cd 	beq.w	802001c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801fe82:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fe84:	f8bc 4000 	ldrh.w	r4, [ip]
 801fe88:	fb11 f303 	smulbb	r3, r1, r3
 801fe8c:	b29b      	uxth	r3, r3
 801fe8e:	1c59      	adds	r1, r3, #1
 801fe90:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fe94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe98:	b29f      	uxth	r7, r3
 801fe9a:	43db      	mvns	r3, r3
 801fe9c:	b2db      	uxtb	r3, r3
 801fe9e:	9309      	str	r3, [sp, #36]	; 0x24
 801fea0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fea2:	1220      	asrs	r0, r4, #8
 801fea4:	fb13 f907 	smulbb	r9, r3, r7
 801fea8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801feac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801feae:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801feb2:	fb00 9003 	mla	r0, r0, r3, r9
 801feb6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801feb8:	10e1      	asrs	r1, r4, #3
 801feba:	fb13 f907 	smulbb	r9, r3, r7
 801febe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fec4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fec8:	fb01 9103 	mla	r1, r1, r3, r9
 801fecc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fece:	00e4      	lsls	r4, r4, #3
 801fed0:	fb13 f707 	smulbb	r7, r3, r7
 801fed4:	b2e4      	uxtb	r4, r4
 801fed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fed8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fedc:	fb04 7403 	mla	r4, r4, r3, r7
 801fee0:	b280      	uxth	r0, r0
 801fee2:	b2a4      	uxth	r4, r4
 801fee4:	1c43      	adds	r3, r0, #1
 801fee6:	f104 0901 	add.w	r9, r4, #1
 801feea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801feee:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801fef2:	b289      	uxth	r1, r1
 801fef4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801fef8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fefc:	ea49 0000 	orr.w	r0, r9, r0
 801ff00:	f101 0901 	add.w	r9, r1, #1
 801ff04:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ff08:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ff0c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ff10:	ea40 0009 	orr.w	r0, r0, r9
 801ff14:	f8ac 0000 	strh.w	r0, [ip]
 801ff18:	4446      	add	r6, r8
 801ff1a:	b2b6      	uxth	r6, r6
 801ff1c:	2e07      	cmp	r6, #7
 801ff1e:	bf81      	itttt	hi
 801ff20:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ff22:	785a      	ldrbhi	r2, [r3, #1]
 801ff24:	3301      	addhi	r3, #1
 801ff26:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ff28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff2a:	bf9a      	itte	ls
 801ff2c:	fa42 f208 	asrls.w	r2, r2, r8
 801ff30:	b2d2      	uxtbls	r2, r2
 801ff32:	2600      	movhi	r6, #0
 801ff34:	449c      	add	ip, r3
 801ff36:	e792      	b.n	801fe5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ff38:	441c      	add	r4, r3
 801ff3a:	b224      	sxth	r4, r4
 801ff3c:	e6d5      	b.n	801fcea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ff3e:	f1ba 0f01 	cmp.w	sl, #1
 801ff42:	f47f af0c 	bne.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff46:	f1bb 0f01 	cmp.w	fp, #1
 801ff4a:	f47f af08 	bne.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff4e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8020010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ff52:	f8db 0000 	ldr.w	r0, [fp]
 801ff56:	6803      	ldr	r3, [r0, #0]
 801ff58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ff5a:	4798      	blx	r3
 801ff5c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ff60:	465a      	mov	r2, fp
 801ff62:	d006      	beq.n	801ff72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ff64:	f1b8 0f04 	cmp.w	r8, #4
 801ff68:	d140      	bne.n	801ffec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ff6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ff6c:	3300      	adds	r3, #0
 801ff6e:	bf18      	it	ne
 801ff70:	2301      	movne	r3, #1
 801ff72:	0580      	lsls	r0, r0, #22
 801ff74:	d56e      	bpl.n	8020054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ff76:	f1b8 0f08 	cmp.w	r8, #8
 801ff7a:	d16b      	bne.n	8020054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ff7c:	2b00      	cmp	r3, #0
 801ff7e:	bf0c      	ite	eq
 801ff80:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ff84:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ff88:	2d00      	cmp	r5, #0
 801ff8a:	f47f aee8 	bne.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff8e:	2e00      	cmp	r6, #0
 801ff90:	f47f aee5 	bne.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff94:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ff96:	19e3      	adds	r3, r4, r7
 801ff98:	4283      	cmp	r3, r0
 801ff9a:	f73f aee0 	bgt.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ffa0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ffa2:	444b      	add	r3, r9
 801ffa4:	4283      	cmp	r3, r0
 801ffa6:	f73f aeda 	bgt.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ffaa:	6810      	ldr	r0, [r2, #0]
 801ffac:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ffb0:	6804      	ldr	r4, [r0, #0]
 801ffb2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ffb6:	b2bf      	uxth	r7, r7
 801ffb8:	f1b8 0f08 	cmp.w	r8, #8
 801ffbc:	f04f 0500 	mov.w	r5, #0
 801ffc0:	bf18      	it	ne
 801ffc2:	3701      	addne	r7, #1
 801ffc4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ffc8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ffca:	9104      	str	r1, [sp, #16]
 801ffcc:	bf18      	it	ne
 801ffce:	f027 0701 	bicne.w	r7, r7, #1
 801ffd2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ffd4:	bf18      	it	ne
 801ffd6:	b2bf      	uxthne	r7, r7
 801ffd8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ffdc:	e9cd 7900 	strd	r7, r9, [sp]
 801ffe0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ffe2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ffe4:	47a0      	blx	r4
 801ffe6:	b019      	add	sp, #100	; 0x64
 801ffe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffec:	2300      	movs	r3, #0
 801ffee:	e7c0      	b.n	801ff72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801fff0:	2208      	movs	r2, #8
 801fff2:	fb92 f3f8 	sdiv	r3, r2, r8
 801fff6:	1e5a      	subs	r2, r3, #1
 801fff8:	443a      	add	r2, r7
 801fffa:	fb92 f2f3 	sdiv	r2, r2, r3
 801fffe:	fb12 f203 	smulbb	r2, r2, r3
 8020002:	b292      	uxth	r2, r2
 8020004:	e6b0      	b.n	801fd68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8020006:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020008:	e6ec      	b.n	801fde4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 802000a:	bf00      	nop
 802000c:	2001382c 	.word	0x2001382c
 8020010:	20013834 	.word	0x20013834
 8020014:	2001382e 	.word	0x2001382e
 8020018:	00fff800 	.word	0x00fff800
 802001c:	9810      	ldr	r0, [sp, #64]	; 0x40
 802001e:	e779      	b.n	801ff14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8020020:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020022:	b153      	cbz	r3, 802003a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8020024:	441e      	add	r6, r3
 8020026:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020028:	b2b6      	uxth	r6, r6
 802002a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 802002e:	f006 0607 	and.w	r6, r6, #7
 8020032:	781a      	ldrb	r2, [r3, #0]
 8020034:	9328      	str	r3, [sp, #160]	; 0xa0
 8020036:	4132      	asrs	r2, r6
 8020038:	b2d2      	uxtb	r2, r2
 802003a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802003c:	445b      	add	r3, fp
 802003e:	930a      	str	r3, [sp, #40]	; 0x28
 8020040:	e706      	b.n	801fe50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8020042:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020044:	2b00      	cmp	r3, #0
 8020046:	d1ce      	bne.n	801ffe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020048:	4b05      	ldr	r3, [pc, #20]	; (8020060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 802004a:	6818      	ldr	r0, [r3, #0]
 802004c:	6803      	ldr	r3, [r0, #0]
 802004e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020050:	4798      	blx	r3
 8020052:	e7c8      	b.n	801ffe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020054:	2b00      	cmp	r3, #0
 8020056:	f43f ae82 	beq.w	801fd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802005a:	f44f 7180 	mov.w	r1, #256	; 0x100
 802005e:	e793      	b.n	801ff88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020060:	20013834 	.word	0x20013834

08020064 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020064:	b538      	push	{r3, r4, r5, lr}
 8020066:	4c15      	ldr	r4, [pc, #84]	; (80200bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020068:	7823      	ldrb	r3, [r4, #0]
 802006a:	f3bf 8f5b 	dmb	ish
 802006e:	07da      	lsls	r2, r3, #31
 8020070:	4605      	mov	r5, r0
 8020072:	d40b      	bmi.n	802008c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020074:	4620      	mov	r0, r4
 8020076:	f00a fee2 	bl	802ae3e <__cxa_guard_acquire>
 802007a:	b138      	cbz	r0, 802008c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802007c:	4620      	mov	r0, r4
 802007e:	f00a feea 	bl	802ae56 <__cxa_guard_release>
 8020082:	4a0f      	ldr	r2, [pc, #60]	; (80200c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020084:	490f      	ldr	r1, [pc, #60]	; (80200c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020086:	4810      	ldr	r0, [pc, #64]	; (80200c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020088:	f00a fed2 	bl	802ae30 <__aeabi_atexit>
 802008c:	4c0f      	ldr	r4, [pc, #60]	; (80200cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802008e:	7823      	ldrb	r3, [r4, #0]
 8020090:	f3bf 8f5b 	dmb	ish
 8020094:	07db      	lsls	r3, r3, #31
 8020096:	d40b      	bmi.n	80200b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020098:	4620      	mov	r0, r4
 802009a:	f00a fed0 	bl	802ae3e <__cxa_guard_acquire>
 802009e:	b138      	cbz	r0, 80200b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80200a0:	4620      	mov	r0, r4
 80200a2:	f00a fed8 	bl	802ae56 <__cxa_guard_release>
 80200a6:	4a06      	ldr	r2, [pc, #24]	; (80200c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80200a8:	4909      	ldr	r1, [pc, #36]	; (80200d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80200aa:	480a      	ldr	r0, [pc, #40]	; (80200d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80200ac:	f00a fec0 	bl	802ae30 <__aeabi_atexit>
 80200b0:	4b05      	ldr	r3, [pc, #20]	; (80200c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80200b2:	612b      	str	r3, [r5, #16]
 80200b4:	4b07      	ldr	r3, [pc, #28]	; (80200d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80200b6:	616b      	str	r3, [r5, #20]
 80200b8:	bd38      	pop	{r3, r4, r5, pc}
 80200ba:	bf00      	nop
 80200bc:	20013914 	.word	0x20013914
 80200c0:	20000000 	.word	0x20000000
 80200c4:	0801ce67 	.word	0x0801ce67
 80200c8:	200000d4 	.word	0x200000d4
 80200cc:	20013918 	.word	0x20013918
 80200d0:	0801ce65 	.word	0x0801ce65
 80200d4:	200000d8 	.word	0x200000d8

080200d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80200d8:	b538      	push	{r3, r4, r5, lr}
 80200da:	4c15      	ldr	r4, [pc, #84]	; (8020130 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80200dc:	7823      	ldrb	r3, [r4, #0]
 80200de:	f3bf 8f5b 	dmb	ish
 80200e2:	07da      	lsls	r2, r3, #31
 80200e4:	4605      	mov	r5, r0
 80200e6:	d40b      	bmi.n	8020100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80200e8:	4620      	mov	r0, r4
 80200ea:	f00a fea8 	bl	802ae3e <__cxa_guard_acquire>
 80200ee:	b138      	cbz	r0, 8020100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80200f0:	4620      	mov	r0, r4
 80200f2:	f00a feb0 	bl	802ae56 <__cxa_guard_release>
 80200f6:	4a0f      	ldr	r2, [pc, #60]	; (8020134 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80200f8:	490f      	ldr	r1, [pc, #60]	; (8020138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80200fa:	4810      	ldr	r0, [pc, #64]	; (802013c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80200fc:	f00a fe98 	bl	802ae30 <__aeabi_atexit>
 8020100:	4c0f      	ldr	r4, [pc, #60]	; (8020140 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8020102:	7823      	ldrb	r3, [r4, #0]
 8020104:	f3bf 8f5b 	dmb	ish
 8020108:	07db      	lsls	r3, r3, #31
 802010a:	d40b      	bmi.n	8020124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 802010c:	4620      	mov	r0, r4
 802010e:	f00a fe96 	bl	802ae3e <__cxa_guard_acquire>
 8020112:	b138      	cbz	r0, 8020124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020114:	4620      	mov	r0, r4
 8020116:	f00a fe9e 	bl	802ae56 <__cxa_guard_release>
 802011a:	4a06      	ldr	r2, [pc, #24]	; (8020134 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802011c:	4909      	ldr	r1, [pc, #36]	; (8020144 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 802011e:	480a      	ldr	r0, [pc, #40]	; (8020148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020120:	f00a fe86 	bl	802ae30 <__aeabi_atexit>
 8020124:	4b05      	ldr	r3, [pc, #20]	; (802013c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020126:	60ab      	str	r3, [r5, #8]
 8020128:	4b07      	ldr	r3, [pc, #28]	; (8020148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802012a:	60eb      	str	r3, [r5, #12]
 802012c:	bd38      	pop	{r3, r4, r5, pc}
 802012e:	bf00      	nop
 8020130:	200138ec 	.word	0x200138ec
 8020134:	20000000 	.word	0x20000000
 8020138:	0801ce6b 	.word	0x0801ce6b
 802013c:	200000ac 	.word	0x200000ac
 8020140:	200138f0 	.word	0x200138f0
 8020144:	0801ce69 	.word	0x0801ce69
 8020148:	200000b0 	.word	0x200000b0

0802014c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 802014c:	b510      	push	{r4, lr}
 802014e:	4604      	mov	r4, r0
 8020150:	f7ff ff88 	bl	8020064 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8020154:	4620      	mov	r0, r4
 8020156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802015a:	f7ff bfbd 	b.w	80200d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08020160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8020160:	b538      	push	{r3, r4, r5, lr}
 8020162:	4c15      	ldr	r4, [pc, #84]	; (80201b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020164:	7823      	ldrb	r3, [r4, #0]
 8020166:	f3bf 8f5b 	dmb	ish
 802016a:	07da      	lsls	r2, r3, #31
 802016c:	4605      	mov	r5, r0
 802016e:	d40b      	bmi.n	8020188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020170:	4620      	mov	r0, r4
 8020172:	f00a fe64 	bl	802ae3e <__cxa_guard_acquire>
 8020176:	b138      	cbz	r0, 8020188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020178:	4620      	mov	r0, r4
 802017a:	f00a fe6c 	bl	802ae56 <__cxa_guard_release>
 802017e:	4a0f      	ldr	r2, [pc, #60]	; (80201bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020180:	490f      	ldr	r1, [pc, #60]	; (80201c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8020182:	4810      	ldr	r0, [pc, #64]	; (80201c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020184:	f00a fe54 	bl	802ae30 <__aeabi_atexit>
 8020188:	4c0f      	ldr	r4, [pc, #60]	; (80201c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 802018a:	7823      	ldrb	r3, [r4, #0]
 802018c:	f3bf 8f5b 	dmb	ish
 8020190:	07db      	lsls	r3, r3, #31
 8020192:	d40b      	bmi.n	80201ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020194:	4620      	mov	r0, r4
 8020196:	f00a fe52 	bl	802ae3e <__cxa_guard_acquire>
 802019a:	b138      	cbz	r0, 80201ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802019c:	4620      	mov	r0, r4
 802019e:	f00a fe5a 	bl	802ae56 <__cxa_guard_release>
 80201a2:	4a06      	ldr	r2, [pc, #24]	; (80201bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80201a4:	4909      	ldr	r1, [pc, #36]	; (80201cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80201a6:	480a      	ldr	r0, [pc, #40]	; (80201d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80201a8:	f00a fe42 	bl	802ae30 <__aeabi_atexit>
 80201ac:	4b05      	ldr	r3, [pc, #20]	; (80201c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80201ae:	622b      	str	r3, [r5, #32]
 80201b0:	4b07      	ldr	r3, [pc, #28]	; (80201d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80201b2:	626b      	str	r3, [r5, #36]	; 0x24
 80201b4:	bd38      	pop	{r3, r4, r5, pc}
 80201b6:	bf00      	nop
 80201b8:	2001391c 	.word	0x2001391c
 80201bc:	20000000 	.word	0x20000000
 80201c0:	0801ce5f 	.word	0x0801ce5f
 80201c4:	200000dc 	.word	0x200000dc
 80201c8:	20013920 	.word	0x20013920
 80201cc:	0801ce5d 	.word	0x0801ce5d
 80201d0:	200000e0 	.word	0x200000e0

080201d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80201d4:	b538      	push	{r3, r4, r5, lr}
 80201d6:	4c15      	ldr	r4, [pc, #84]	; (802022c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80201d8:	7823      	ldrb	r3, [r4, #0]
 80201da:	f3bf 8f5b 	dmb	ish
 80201de:	07da      	lsls	r2, r3, #31
 80201e0:	4605      	mov	r5, r0
 80201e2:	d40b      	bmi.n	80201fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80201e4:	4620      	mov	r0, r4
 80201e6:	f00a fe2a 	bl	802ae3e <__cxa_guard_acquire>
 80201ea:	b138      	cbz	r0, 80201fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80201ec:	4620      	mov	r0, r4
 80201ee:	f00a fe32 	bl	802ae56 <__cxa_guard_release>
 80201f2:	4a0f      	ldr	r2, [pc, #60]	; (8020230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80201f4:	490f      	ldr	r1, [pc, #60]	; (8020234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80201f6:	4810      	ldr	r0, [pc, #64]	; (8020238 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80201f8:	f00a fe1a 	bl	802ae30 <__aeabi_atexit>
 80201fc:	4c0f      	ldr	r4, [pc, #60]	; (802023c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80201fe:	7823      	ldrb	r3, [r4, #0]
 8020200:	f3bf 8f5b 	dmb	ish
 8020204:	07db      	lsls	r3, r3, #31
 8020206:	d40b      	bmi.n	8020220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020208:	4620      	mov	r0, r4
 802020a:	f00a fe18 	bl	802ae3e <__cxa_guard_acquire>
 802020e:	b138      	cbz	r0, 8020220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020210:	4620      	mov	r0, r4
 8020212:	f00a fe20 	bl	802ae56 <__cxa_guard_release>
 8020216:	4a06      	ldr	r2, [pc, #24]	; (8020230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020218:	4909      	ldr	r1, [pc, #36]	; (8020240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802021a:	480a      	ldr	r0, [pc, #40]	; (8020244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802021c:	f00a fe08 	bl	802ae30 <__aeabi_atexit>
 8020220:	4b05      	ldr	r3, [pc, #20]	; (8020238 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020222:	61ab      	str	r3, [r5, #24]
 8020224:	4b07      	ldr	r3, [pc, #28]	; (8020244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020226:	61eb      	str	r3, [r5, #28]
 8020228:	bd38      	pop	{r3, r4, r5, pc}
 802022a:	bf00      	nop
 802022c:	200138f4 	.word	0x200138f4
 8020230:	20000000 	.word	0x20000000
 8020234:	0801ce63 	.word	0x0801ce63
 8020238:	200000b4 	.word	0x200000b4
 802023c:	200138f8 	.word	0x200138f8
 8020240:	0801ce61 	.word	0x0801ce61
 8020244:	200000b8 	.word	0x200000b8

08020248 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8020248:	b510      	push	{r4, lr}
 802024a:	4604      	mov	r4, r0
 802024c:	f7ff ff88 	bl	8020160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8020250:	4620      	mov	r0, r4
 8020252:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020256:	f7ff bfbd 	b.w	80201d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802025c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802025c:	b538      	push	{r3, r4, r5, lr}
 802025e:	4c15      	ldr	r4, [pc, #84]	; (80202b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8020260:	7823      	ldrb	r3, [r4, #0]
 8020262:	f3bf 8f5b 	dmb	ish
 8020266:	07da      	lsls	r2, r3, #31
 8020268:	4605      	mov	r5, r0
 802026a:	d40b      	bmi.n	8020284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802026c:	4620      	mov	r0, r4
 802026e:	f00a fde6 	bl	802ae3e <__cxa_guard_acquire>
 8020272:	b138      	cbz	r0, 8020284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020274:	4620      	mov	r0, r4
 8020276:	f00a fdee 	bl	802ae56 <__cxa_guard_release>
 802027a:	4a0f      	ldr	r2, [pc, #60]	; (80202b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802027c:	490f      	ldr	r1, [pc, #60]	; (80202bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802027e:	4810      	ldr	r0, [pc, #64]	; (80202c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8020280:	f00a fdd6 	bl	802ae30 <__aeabi_atexit>
 8020284:	4c0f      	ldr	r4, [pc, #60]	; (80202c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8020286:	7823      	ldrb	r3, [r4, #0]
 8020288:	f3bf 8f5b 	dmb	ish
 802028c:	07db      	lsls	r3, r3, #31
 802028e:	d40b      	bmi.n	80202a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020290:	4620      	mov	r0, r4
 8020292:	f00a fdd4 	bl	802ae3e <__cxa_guard_acquire>
 8020296:	b138      	cbz	r0, 80202a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020298:	4620      	mov	r0, r4
 802029a:	f00a fddc 	bl	802ae56 <__cxa_guard_release>
 802029e:	4a06      	ldr	r2, [pc, #24]	; (80202b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80202a0:	4909      	ldr	r1, [pc, #36]	; (80202c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80202a2:	480a      	ldr	r0, [pc, #40]	; (80202cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80202a4:	f00a fdc4 	bl	802ae30 <__aeabi_atexit>
 80202a8:	4b05      	ldr	r3, [pc, #20]	; (80202c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80202aa:	632b      	str	r3, [r5, #48]	; 0x30
 80202ac:	4b07      	ldr	r3, [pc, #28]	; (80202cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80202ae:	636b      	str	r3, [r5, #52]	; 0x34
 80202b0:	bd38      	pop	{r3, r4, r5, pc}
 80202b2:	bf00      	nop
 80202b4:	2001392c 	.word	0x2001392c
 80202b8:	20000000 	.word	0x20000000
 80202bc:	0801ce57 	.word	0x0801ce57
 80202c0:	200000ec 	.word	0x200000ec
 80202c4:	20013930 	.word	0x20013930
 80202c8:	0801ce55 	.word	0x0801ce55
 80202cc:	200000f0 	.word	0x200000f0

080202d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80202d0:	b538      	push	{r3, r4, r5, lr}
 80202d2:	4c15      	ldr	r4, [pc, #84]	; (8020328 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80202d4:	7823      	ldrb	r3, [r4, #0]
 80202d6:	f3bf 8f5b 	dmb	ish
 80202da:	07da      	lsls	r2, r3, #31
 80202dc:	4605      	mov	r5, r0
 80202de:	d40b      	bmi.n	80202f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80202e0:	4620      	mov	r0, r4
 80202e2:	f00a fdac 	bl	802ae3e <__cxa_guard_acquire>
 80202e6:	b138      	cbz	r0, 80202f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80202e8:	4620      	mov	r0, r4
 80202ea:	f00a fdb4 	bl	802ae56 <__cxa_guard_release>
 80202ee:	4a0f      	ldr	r2, [pc, #60]	; (802032c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80202f0:	490f      	ldr	r1, [pc, #60]	; (8020330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80202f2:	4810      	ldr	r0, [pc, #64]	; (8020334 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80202f4:	f00a fd9c 	bl	802ae30 <__aeabi_atexit>
 80202f8:	4c0f      	ldr	r4, [pc, #60]	; (8020338 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80202fa:	7823      	ldrb	r3, [r4, #0]
 80202fc:	f3bf 8f5b 	dmb	ish
 8020300:	07db      	lsls	r3, r3, #31
 8020302:	d40b      	bmi.n	802031c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8020304:	4620      	mov	r0, r4
 8020306:	f00a fd9a 	bl	802ae3e <__cxa_guard_acquire>
 802030a:	b138      	cbz	r0, 802031c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 802030c:	4620      	mov	r0, r4
 802030e:	f00a fda2 	bl	802ae56 <__cxa_guard_release>
 8020312:	4a06      	ldr	r2, [pc, #24]	; (802032c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8020314:	4909      	ldr	r1, [pc, #36]	; (802033c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8020316:	480a      	ldr	r0, [pc, #40]	; (8020340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020318:	f00a fd8a 	bl	802ae30 <__aeabi_atexit>
 802031c:	4b05      	ldr	r3, [pc, #20]	; (8020334 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802031e:	62ab      	str	r3, [r5, #40]	; 0x28
 8020320:	4b07      	ldr	r3, [pc, #28]	; (8020340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020322:	62eb      	str	r3, [r5, #44]	; 0x2c
 8020324:	bd38      	pop	{r3, r4, r5, pc}
 8020326:	bf00      	nop
 8020328:	200138fc 	.word	0x200138fc
 802032c:	20000000 	.word	0x20000000
 8020330:	0801ce5b 	.word	0x0801ce5b
 8020334:	200000bc 	.word	0x200000bc
 8020338:	20013900 	.word	0x20013900
 802033c:	0801ce59 	.word	0x0801ce59
 8020340:	200000c0 	.word	0x200000c0

08020344 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8020344:	b510      	push	{r4, lr}
 8020346:	4604      	mov	r4, r0
 8020348:	f7ff ff88 	bl	802025c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802034c:	4620      	mov	r0, r4
 802034e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020352:	f7ff bfbd 	b.w	80202d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08020358 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8020358:	b538      	push	{r3, r4, r5, lr}
 802035a:	4c15      	ldr	r4, [pc, #84]	; (80203b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802035c:	7823      	ldrb	r3, [r4, #0]
 802035e:	f3bf 8f5b 	dmb	ish
 8020362:	07da      	lsls	r2, r3, #31
 8020364:	4605      	mov	r5, r0
 8020366:	d40b      	bmi.n	8020380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020368:	4620      	mov	r0, r4
 802036a:	f00a fd68 	bl	802ae3e <__cxa_guard_acquire>
 802036e:	b138      	cbz	r0, 8020380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020370:	4620      	mov	r0, r4
 8020372:	f00a fd70 	bl	802ae56 <__cxa_guard_release>
 8020376:	4a0f      	ldr	r2, [pc, #60]	; (80203b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8020378:	490f      	ldr	r1, [pc, #60]	; (80203b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802037a:	4810      	ldr	r0, [pc, #64]	; (80203bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802037c:	f00a fd58 	bl	802ae30 <__aeabi_atexit>
 8020380:	4c0f      	ldr	r4, [pc, #60]	; (80203c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8020382:	7823      	ldrb	r3, [r4, #0]
 8020384:	f3bf 8f5b 	dmb	ish
 8020388:	07db      	lsls	r3, r3, #31
 802038a:	d40b      	bmi.n	80203a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802038c:	4620      	mov	r0, r4
 802038e:	f00a fd56 	bl	802ae3e <__cxa_guard_acquire>
 8020392:	b138      	cbz	r0, 80203a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020394:	4620      	mov	r0, r4
 8020396:	f00a fd5e 	bl	802ae56 <__cxa_guard_release>
 802039a:	4a06      	ldr	r2, [pc, #24]	; (80203b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802039c:	4909      	ldr	r1, [pc, #36]	; (80203c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802039e:	480a      	ldr	r0, [pc, #40]	; (80203c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80203a0:	f00a fd46 	bl	802ae30 <__aeabi_atexit>
 80203a4:	4b05      	ldr	r3, [pc, #20]	; (80203bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80203a6:	652b      	str	r3, [r5, #80]	; 0x50
 80203a8:	4b07      	ldr	r3, [pc, #28]	; (80203c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80203aa:	656b      	str	r3, [r5, #84]	; 0x54
 80203ac:	bd38      	pop	{r3, r4, r5, pc}
 80203ae:	bf00      	nop
 80203b0:	20013934 	.word	0x20013934
 80203b4:	20000000 	.word	0x20000000
 80203b8:	0801ce47 	.word	0x0801ce47
 80203bc:	200000f4 	.word	0x200000f4
 80203c0:	20013938 	.word	0x20013938
 80203c4:	0801ce45 	.word	0x0801ce45
 80203c8:	200000f8 	.word	0x200000f8

080203cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80203cc:	b538      	push	{r3, r4, r5, lr}
 80203ce:	4c15      	ldr	r4, [pc, #84]	; (8020424 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80203d0:	7823      	ldrb	r3, [r4, #0]
 80203d2:	f3bf 8f5b 	dmb	ish
 80203d6:	07da      	lsls	r2, r3, #31
 80203d8:	4605      	mov	r5, r0
 80203da:	d40b      	bmi.n	80203f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80203dc:	4620      	mov	r0, r4
 80203de:	f00a fd2e 	bl	802ae3e <__cxa_guard_acquire>
 80203e2:	b138      	cbz	r0, 80203f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80203e4:	4620      	mov	r0, r4
 80203e6:	f00a fd36 	bl	802ae56 <__cxa_guard_release>
 80203ea:	4a0f      	ldr	r2, [pc, #60]	; (8020428 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80203ec:	490f      	ldr	r1, [pc, #60]	; (802042c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80203ee:	4810      	ldr	r0, [pc, #64]	; (8020430 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80203f0:	f00a fd1e 	bl	802ae30 <__aeabi_atexit>
 80203f4:	4c0f      	ldr	r4, [pc, #60]	; (8020434 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80203f6:	7823      	ldrb	r3, [r4, #0]
 80203f8:	f3bf 8f5b 	dmb	ish
 80203fc:	07db      	lsls	r3, r3, #31
 80203fe:	d40b      	bmi.n	8020418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8020400:	4620      	mov	r0, r4
 8020402:	f00a fd1c 	bl	802ae3e <__cxa_guard_acquire>
 8020406:	b138      	cbz	r0, 8020418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8020408:	4620      	mov	r0, r4
 802040a:	f00a fd24 	bl	802ae56 <__cxa_guard_release>
 802040e:	4a06      	ldr	r2, [pc, #24]	; (8020428 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8020410:	4909      	ldr	r1, [pc, #36]	; (8020438 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8020412:	480a      	ldr	r0, [pc, #40]	; (802043c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8020414:	f00a fd0c 	bl	802ae30 <__aeabi_atexit>
 8020418:	4b05      	ldr	r3, [pc, #20]	; (8020430 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802041a:	64ab      	str	r3, [r5, #72]	; 0x48
 802041c:	4b07      	ldr	r3, [pc, #28]	; (802043c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802041e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8020420:	bd38      	pop	{r3, r4, r5, pc}
 8020422:	bf00      	nop
 8020424:	2001393c 	.word	0x2001393c
 8020428:	20000000 	.word	0x20000000
 802042c:	0801ce4b 	.word	0x0801ce4b
 8020430:	200000fc 	.word	0x200000fc
 8020434:	20013940 	.word	0x20013940
 8020438:	0801ce49 	.word	0x0801ce49
 802043c:	20000100 	.word	0x20000100

08020440 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8020440:	b538      	push	{r3, r4, r5, lr}
 8020442:	4c15      	ldr	r4, [pc, #84]	; (8020498 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8020444:	7823      	ldrb	r3, [r4, #0]
 8020446:	f3bf 8f5b 	dmb	ish
 802044a:	07da      	lsls	r2, r3, #31
 802044c:	4605      	mov	r5, r0
 802044e:	d40b      	bmi.n	8020468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020450:	4620      	mov	r0, r4
 8020452:	f00a fcf4 	bl	802ae3e <__cxa_guard_acquire>
 8020456:	b138      	cbz	r0, 8020468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020458:	4620      	mov	r0, r4
 802045a:	f00a fcfc 	bl	802ae56 <__cxa_guard_release>
 802045e:	4a0f      	ldr	r2, [pc, #60]	; (802049c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020460:	490f      	ldr	r1, [pc, #60]	; (80204a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8020462:	4810      	ldr	r0, [pc, #64]	; (80204a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020464:	f00a fce4 	bl	802ae30 <__aeabi_atexit>
 8020468:	4c0f      	ldr	r4, [pc, #60]	; (80204a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802046a:	7823      	ldrb	r3, [r4, #0]
 802046c:	f3bf 8f5b 	dmb	ish
 8020470:	07db      	lsls	r3, r3, #31
 8020472:	d40b      	bmi.n	802048c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020474:	4620      	mov	r0, r4
 8020476:	f00a fce2 	bl	802ae3e <__cxa_guard_acquire>
 802047a:	b138      	cbz	r0, 802048c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802047c:	4620      	mov	r0, r4
 802047e:	f00a fcea 	bl	802ae56 <__cxa_guard_release>
 8020482:	4a06      	ldr	r2, [pc, #24]	; (802049c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020484:	4909      	ldr	r1, [pc, #36]	; (80204ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8020486:	480a      	ldr	r0, [pc, #40]	; (80204b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020488:	f00a fcd2 	bl	802ae30 <__aeabi_atexit>
 802048c:	4b05      	ldr	r3, [pc, #20]	; (80204a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802048e:	642b      	str	r3, [r5, #64]	; 0x40
 8020490:	4b07      	ldr	r3, [pc, #28]	; (80204b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020492:	646b      	str	r3, [r5, #68]	; 0x44
 8020494:	bd38      	pop	{r3, r4, r5, pc}
 8020496:	bf00      	nop
 8020498:	20013904 	.word	0x20013904
 802049c:	20000000 	.word	0x20000000
 80204a0:	0801ce4f 	.word	0x0801ce4f
 80204a4:	200000c4 	.word	0x200000c4
 80204a8:	20013908 	.word	0x20013908
 80204ac:	0801ce4d 	.word	0x0801ce4d
 80204b0:	200000c8 	.word	0x200000c8

080204b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80204b4:	b538      	push	{r3, r4, r5, lr}
 80204b6:	4c15      	ldr	r4, [pc, #84]	; (802050c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80204b8:	7823      	ldrb	r3, [r4, #0]
 80204ba:	f3bf 8f5b 	dmb	ish
 80204be:	07da      	lsls	r2, r3, #31
 80204c0:	4605      	mov	r5, r0
 80204c2:	d40b      	bmi.n	80204dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80204c4:	4620      	mov	r0, r4
 80204c6:	f00a fcba 	bl	802ae3e <__cxa_guard_acquire>
 80204ca:	b138      	cbz	r0, 80204dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80204cc:	4620      	mov	r0, r4
 80204ce:	f00a fcc2 	bl	802ae56 <__cxa_guard_release>
 80204d2:	4a0f      	ldr	r2, [pc, #60]	; (8020510 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80204d4:	490f      	ldr	r1, [pc, #60]	; (8020514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80204d6:	4810      	ldr	r0, [pc, #64]	; (8020518 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80204d8:	f00a fcaa 	bl	802ae30 <__aeabi_atexit>
 80204dc:	4c0f      	ldr	r4, [pc, #60]	; (802051c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80204de:	7823      	ldrb	r3, [r4, #0]
 80204e0:	f3bf 8f5b 	dmb	ish
 80204e4:	07db      	lsls	r3, r3, #31
 80204e6:	d40b      	bmi.n	8020500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80204e8:	4620      	mov	r0, r4
 80204ea:	f00a fca8 	bl	802ae3e <__cxa_guard_acquire>
 80204ee:	b138      	cbz	r0, 8020500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80204f0:	4620      	mov	r0, r4
 80204f2:	f00a fcb0 	bl	802ae56 <__cxa_guard_release>
 80204f6:	4a06      	ldr	r2, [pc, #24]	; (8020510 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80204f8:	4909      	ldr	r1, [pc, #36]	; (8020520 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80204fa:	480a      	ldr	r0, [pc, #40]	; (8020524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80204fc:	f00a fc98 	bl	802ae30 <__aeabi_atexit>
 8020500:	4b05      	ldr	r3, [pc, #20]	; (8020518 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8020502:	63ab      	str	r3, [r5, #56]	; 0x38
 8020504:	4b07      	ldr	r3, [pc, #28]	; (8020524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8020506:	63eb      	str	r3, [r5, #60]	; 0x3c
 8020508:	bd38      	pop	{r3, r4, r5, pc}
 802050a:	bf00      	nop
 802050c:	20013924 	.word	0x20013924
 8020510:	20000000 	.word	0x20000000
 8020514:	0801ce53 	.word	0x0801ce53
 8020518:	200000e4 	.word	0x200000e4
 802051c:	20013928 	.word	0x20013928
 8020520:	0801ce51 	.word	0x0801ce51
 8020524:	200000e8 	.word	0x200000e8

08020528 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8020528:	b510      	push	{r4, lr}
 802052a:	4604      	mov	r4, r0
 802052c:	f7ff ff14 	bl	8020358 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8020530:	4620      	mov	r0, r4
 8020532:	f7ff ff85 	bl	8020440 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8020536:	4620      	mov	r0, r4
 8020538:	f7ff ff48 	bl	80203cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802053c:	4620      	mov	r0, r4
 802053e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020542:	f7ff bfb7 	b.w	80204b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08020548 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8020548:	b538      	push	{r3, r4, r5, lr}
 802054a:	4c15      	ldr	r4, [pc, #84]	; (80205a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802054c:	7823      	ldrb	r3, [r4, #0]
 802054e:	f3bf 8f5b 	dmb	ish
 8020552:	07da      	lsls	r2, r3, #31
 8020554:	4605      	mov	r5, r0
 8020556:	d40b      	bmi.n	8020570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020558:	4620      	mov	r0, r4
 802055a:	f00a fc70 	bl	802ae3e <__cxa_guard_acquire>
 802055e:	b138      	cbz	r0, 8020570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020560:	4620      	mov	r0, r4
 8020562:	f00a fc78 	bl	802ae56 <__cxa_guard_release>
 8020566:	4a0f      	ldr	r2, [pc, #60]	; (80205a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020568:	490f      	ldr	r1, [pc, #60]	; (80205a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802056a:	4810      	ldr	r0, [pc, #64]	; (80205ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802056c:	f00a fc60 	bl	802ae30 <__aeabi_atexit>
 8020570:	4c0f      	ldr	r4, [pc, #60]	; (80205b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8020572:	7823      	ldrb	r3, [r4, #0]
 8020574:	f3bf 8f5b 	dmb	ish
 8020578:	07db      	lsls	r3, r3, #31
 802057a:	d40b      	bmi.n	8020594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802057c:	4620      	mov	r0, r4
 802057e:	f00a fc5e 	bl	802ae3e <__cxa_guard_acquire>
 8020582:	b138      	cbz	r0, 8020594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020584:	4620      	mov	r0, r4
 8020586:	f00a fc66 	bl	802ae56 <__cxa_guard_release>
 802058a:	4a06      	ldr	r2, [pc, #24]	; (80205a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802058c:	4909      	ldr	r1, [pc, #36]	; (80205b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802058e:	480a      	ldr	r0, [pc, #40]	; (80205b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020590:	f00a fc4e 	bl	802ae30 <__aeabi_atexit>
 8020594:	4b05      	ldr	r3, [pc, #20]	; (80205ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020596:	662b      	str	r3, [r5, #96]	; 0x60
 8020598:	4b07      	ldr	r3, [pc, #28]	; (80205b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802059a:	666b      	str	r3, [r5, #100]	; 0x64
 802059c:	bd38      	pop	{r3, r4, r5, pc}
 802059e:	bf00      	nop
 80205a0:	2001390c 	.word	0x2001390c
 80205a4:	20000000 	.word	0x20000000
 80205a8:	0801ce3f 	.word	0x0801ce3f
 80205ac:	200000cc 	.word	0x200000cc
 80205b0:	20013910 	.word	0x20013910
 80205b4:	0801ce3d 	.word	0x0801ce3d
 80205b8:	200000d0 	.word	0x200000d0

080205bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80205bc:	b538      	push	{r3, r4, r5, lr}
 80205be:	4c15      	ldr	r4, [pc, #84]	; (8020614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80205c0:	7823      	ldrb	r3, [r4, #0]
 80205c2:	f3bf 8f5b 	dmb	ish
 80205c6:	07da      	lsls	r2, r3, #31
 80205c8:	4605      	mov	r5, r0
 80205ca:	d40b      	bmi.n	80205e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80205cc:	4620      	mov	r0, r4
 80205ce:	f00a fc36 	bl	802ae3e <__cxa_guard_acquire>
 80205d2:	b138      	cbz	r0, 80205e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80205d4:	4620      	mov	r0, r4
 80205d6:	f00a fc3e 	bl	802ae56 <__cxa_guard_release>
 80205da:	4a0f      	ldr	r2, [pc, #60]	; (8020618 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80205dc:	490f      	ldr	r1, [pc, #60]	; (802061c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80205de:	4810      	ldr	r0, [pc, #64]	; (8020620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80205e0:	f00a fc26 	bl	802ae30 <__aeabi_atexit>
 80205e4:	4c0f      	ldr	r4, [pc, #60]	; (8020624 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80205e6:	7823      	ldrb	r3, [r4, #0]
 80205e8:	f3bf 8f5b 	dmb	ish
 80205ec:	07db      	lsls	r3, r3, #31
 80205ee:	d40b      	bmi.n	8020608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80205f0:	4620      	mov	r0, r4
 80205f2:	f00a fc24 	bl	802ae3e <__cxa_guard_acquire>
 80205f6:	b138      	cbz	r0, 8020608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80205f8:	4620      	mov	r0, r4
 80205fa:	f00a fc2c 	bl	802ae56 <__cxa_guard_release>
 80205fe:	4a06      	ldr	r2, [pc, #24]	; (8020618 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020600:	4909      	ldr	r1, [pc, #36]	; (8020628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8020602:	480a      	ldr	r0, [pc, #40]	; (802062c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8020604:	f00a fc14 	bl	802ae30 <__aeabi_atexit>
 8020608:	4b05      	ldr	r3, [pc, #20]	; (8020620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802060a:	65ab      	str	r3, [r5, #88]	; 0x58
 802060c:	4b07      	ldr	r3, [pc, #28]	; (802062c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802060e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8020610:	bd38      	pop	{r3, r4, r5, pc}
 8020612:	bf00      	nop
 8020614:	200138e4 	.word	0x200138e4
 8020618:	20000000 	.word	0x20000000
 802061c:	0801ce43 	.word	0x0801ce43
 8020620:	200000a4 	.word	0x200000a4
 8020624:	200138e8 	.word	0x200138e8
 8020628:	0801ce41 	.word	0x0801ce41
 802062c:	200000a8 	.word	0x200000a8

08020630 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020630:	b510      	push	{r4, lr}
 8020632:	4604      	mov	r4, r0
 8020634:	f7ff ff88 	bl	8020548 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020638:	4620      	mov	r0, r4
 802063a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802063e:	f7ff bfbd 	b.w	80205bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020644:	b538      	push	{r3, r4, r5, lr}
 8020646:	4c15      	ldr	r4, [pc, #84]	; (802069c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020648:	7823      	ldrb	r3, [r4, #0]
 802064a:	f3bf 8f5b 	dmb	ish
 802064e:	07da      	lsls	r2, r3, #31
 8020650:	4605      	mov	r5, r0
 8020652:	d40b      	bmi.n	802066c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020654:	4620      	mov	r0, r4
 8020656:	f00a fbf2 	bl	802ae3e <__cxa_guard_acquire>
 802065a:	b138      	cbz	r0, 802066c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802065c:	4620      	mov	r0, r4
 802065e:	f00a fbfa 	bl	802ae56 <__cxa_guard_release>
 8020662:	4a0f      	ldr	r2, [pc, #60]	; (80206a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020664:	490f      	ldr	r1, [pc, #60]	; (80206a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8020666:	4810      	ldr	r0, [pc, #64]	; (80206a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020668:	f00a fbe2 	bl	802ae30 <__aeabi_atexit>
 802066c:	4c0f      	ldr	r4, [pc, #60]	; (80206ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802066e:	7823      	ldrb	r3, [r4, #0]
 8020670:	f3bf 8f5b 	dmb	ish
 8020674:	07db      	lsls	r3, r3, #31
 8020676:	d40b      	bmi.n	8020690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020678:	4620      	mov	r0, r4
 802067a:	f00a fbe0 	bl	802ae3e <__cxa_guard_acquire>
 802067e:	b138      	cbz	r0, 8020690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020680:	4620      	mov	r0, r4
 8020682:	f00a fbe8 	bl	802ae56 <__cxa_guard_release>
 8020686:	4a06      	ldr	r2, [pc, #24]	; (80206a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020688:	4909      	ldr	r1, [pc, #36]	; (80206b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802068a:	480a      	ldr	r0, [pc, #40]	; (80206b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802068c:	f00a fbd0 	bl	802ae30 <__aeabi_atexit>
 8020690:	4b05      	ldr	r3, [pc, #20]	; (80206a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020692:	672b      	str	r3, [r5, #112]	; 0x70
 8020694:	4b07      	ldr	r3, [pc, #28]	; (80206b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020696:	676b      	str	r3, [r5, #116]	; 0x74
 8020698:	bd38      	pop	{r3, r4, r5, pc}
 802069a:	bf00      	nop
 802069c:	200138dc 	.word	0x200138dc
 80206a0:	20000000 	.word	0x20000000
 80206a4:	0801ce37 	.word	0x0801ce37
 80206a8:	2000009c 	.word	0x2000009c
 80206ac:	200138e0 	.word	0x200138e0
 80206b0:	0801ce35 	.word	0x0801ce35
 80206b4:	200000a0 	.word	0x200000a0

080206b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80206b8:	b538      	push	{r3, r4, r5, lr}
 80206ba:	4c15      	ldr	r4, [pc, #84]	; (8020710 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80206bc:	7823      	ldrb	r3, [r4, #0]
 80206be:	f3bf 8f5b 	dmb	ish
 80206c2:	07da      	lsls	r2, r3, #31
 80206c4:	4605      	mov	r5, r0
 80206c6:	d40b      	bmi.n	80206e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80206c8:	4620      	mov	r0, r4
 80206ca:	f00a fbb8 	bl	802ae3e <__cxa_guard_acquire>
 80206ce:	b138      	cbz	r0, 80206e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80206d0:	4620      	mov	r0, r4
 80206d2:	f00a fbc0 	bl	802ae56 <__cxa_guard_release>
 80206d6:	4a0f      	ldr	r2, [pc, #60]	; (8020714 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80206d8:	490f      	ldr	r1, [pc, #60]	; (8020718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80206da:	4810      	ldr	r0, [pc, #64]	; (802071c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80206dc:	f00a fba8 	bl	802ae30 <__aeabi_atexit>
 80206e0:	4c0f      	ldr	r4, [pc, #60]	; (8020720 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80206e2:	7823      	ldrb	r3, [r4, #0]
 80206e4:	f3bf 8f5b 	dmb	ish
 80206e8:	07db      	lsls	r3, r3, #31
 80206ea:	d40b      	bmi.n	8020704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80206ec:	4620      	mov	r0, r4
 80206ee:	f00a fba6 	bl	802ae3e <__cxa_guard_acquire>
 80206f2:	b138      	cbz	r0, 8020704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80206f4:	4620      	mov	r0, r4
 80206f6:	f00a fbae 	bl	802ae56 <__cxa_guard_release>
 80206fa:	4a06      	ldr	r2, [pc, #24]	; (8020714 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80206fc:	4909      	ldr	r1, [pc, #36]	; (8020724 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80206fe:	480a      	ldr	r0, [pc, #40]	; (8020728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020700:	f00a fb96 	bl	802ae30 <__aeabi_atexit>
 8020704:	4b05      	ldr	r3, [pc, #20]	; (802071c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020706:	66ab      	str	r3, [r5, #104]	; 0x68
 8020708:	4b07      	ldr	r3, [pc, #28]	; (8020728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802070a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802070c:	bd38      	pop	{r3, r4, r5, pc}
 802070e:	bf00      	nop
 8020710:	200138d4 	.word	0x200138d4
 8020714:	20000000 	.word	0x20000000
 8020718:	0801ce3b 	.word	0x0801ce3b
 802071c:	20000094 	.word	0x20000094
 8020720:	200138d8 	.word	0x200138d8
 8020724:	0801ce39 	.word	0x0801ce39
 8020728:	20000098 	.word	0x20000098

0802072c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802072c:	b510      	push	{r4, lr}
 802072e:	4604      	mov	r4, r0
 8020730:	f7ff ff88 	bl	8020644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020734:	4620      	mov	r0, r4
 8020736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802073a:	f7ff bfbd 	b.w	80206b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802073e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802073e:	b510      	push	{r4, lr}
 8020740:	4604      	mov	r4, r0
 8020742:	f7ff fff3 	bl	802072c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020746:	4620      	mov	r0, r4
 8020748:	f7ff ff72 	bl	8020630 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802074c:	4620      	mov	r0, r4
 802074e:	f7ff fdf9 	bl	8020344 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020752:	4620      	mov	r0, r4
 8020754:	f7ff fcfa 	bl	802014c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020758:	4620      	mov	r0, r4
 802075a:	f7ff fd75 	bl	8020248 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802075e:	4620      	mov	r0, r4
 8020760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020764:	f7ff bee0 	b.w	8020528 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020768 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020768:	b538      	push	{r3, r4, r5, lr}
 802076a:	4c0b      	ldr	r4, [pc, #44]	; (8020798 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802076c:	7823      	ldrb	r3, [r4, #0]
 802076e:	f3bf 8f5b 	dmb	ish
 8020772:	07db      	lsls	r3, r3, #31
 8020774:	4605      	mov	r5, r0
 8020776:	d40b      	bmi.n	8020790 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020778:	4620      	mov	r0, r4
 802077a:	f00a fb60 	bl	802ae3e <__cxa_guard_acquire>
 802077e:	b138      	cbz	r0, 8020790 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020780:	4620      	mov	r0, r4
 8020782:	f00a fb68 	bl	802ae56 <__cxa_guard_release>
 8020786:	4a05      	ldr	r2, [pc, #20]	; (802079c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020788:	4905      	ldr	r1, [pc, #20]	; (80207a0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802078a:	4806      	ldr	r0, [pc, #24]	; (80207a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802078c:	f00a fb50 	bl	802ae30 <__aeabi_atexit>
 8020790:	4b04      	ldr	r3, [pc, #16]	; (80207a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020792:	67ab      	str	r3, [r5, #120]	; 0x78
 8020794:	bd38      	pop	{r3, r4, r5, pc}
 8020796:	bf00      	nop
 8020798:	200138c8 	.word	0x200138c8
 802079c:	20000000 	.word	0x20000000
 80207a0:	0801ce33 	.word	0x0801ce33
 80207a4:	2000008c 	.word	0x2000008c

080207a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80207a8:	b538      	push	{r3, r4, r5, lr}
 80207aa:	4c0b      	ldr	r4, [pc, #44]	; (80207d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80207ac:	7823      	ldrb	r3, [r4, #0]
 80207ae:	f3bf 8f5b 	dmb	ish
 80207b2:	07db      	lsls	r3, r3, #31
 80207b4:	4605      	mov	r5, r0
 80207b6:	d40b      	bmi.n	80207d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80207b8:	4620      	mov	r0, r4
 80207ba:	f00a fb40 	bl	802ae3e <__cxa_guard_acquire>
 80207be:	b138      	cbz	r0, 80207d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80207c0:	4620      	mov	r0, r4
 80207c2:	f00a fb48 	bl	802ae56 <__cxa_guard_release>
 80207c6:	4a05      	ldr	r2, [pc, #20]	; (80207dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80207c8:	4905      	ldr	r1, [pc, #20]	; (80207e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80207ca:	4806      	ldr	r0, [pc, #24]	; (80207e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80207cc:	f00a fb30 	bl	802ae30 <__aeabi_atexit>
 80207d0:	4b04      	ldr	r3, [pc, #16]	; (80207e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80207d2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80207d4:	bd38      	pop	{r3, r4, r5, pc}
 80207d6:	bf00      	nop
 80207d8:	200138cc 	.word	0x200138cc
 80207dc:	20000000 	.word	0x20000000
 80207e0:	0801ce31 	.word	0x0801ce31
 80207e4:	20000090 	.word	0x20000090

080207e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80207e8:	b570      	push	{r4, r5, r6, lr}
 80207ea:	4d0d      	ldr	r5, [pc, #52]	; (8020820 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80207ec:	4c0d      	ldr	r4, [pc, #52]	; (8020824 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80207ee:	782b      	ldrb	r3, [r5, #0]
 80207f0:	f3bf 8f5b 	dmb	ish
 80207f4:	f013 0f01 	tst.w	r3, #1
 80207f8:	4606      	mov	r6, r0
 80207fa:	d10d      	bne.n	8020818 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80207fc:	4628      	mov	r0, r5
 80207fe:	f00a fb1e 	bl	802ae3e <__cxa_guard_acquire>
 8020802:	b148      	cbz	r0, 8020818 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020804:	4b08      	ldr	r3, [pc, #32]	; (8020828 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8020806:	6023      	str	r3, [r4, #0]
 8020808:	4628      	mov	r0, r5
 802080a:	f00a fb24 	bl	802ae56 <__cxa_guard_release>
 802080e:	4a07      	ldr	r2, [pc, #28]	; (802082c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020810:	4907      	ldr	r1, [pc, #28]	; (8020830 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020812:	4620      	mov	r0, r4
 8020814:	f00a fb0c 	bl	802ae30 <__aeabi_atexit>
 8020818:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802081c:	bd70      	pop	{r4, r5, r6, pc}
 802081e:	bf00      	nop
 8020820:	200138d0 	.word	0x200138d0
 8020824:	20013944 	.word	0x20013944
 8020828:	08030044 	.word	0x08030044
 802082c:	20000000 	.word	0x20000000
 8020830:	0801ce2f 	.word	0x0801ce2f

08020834 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020834:	b510      	push	{r4, lr}
 8020836:	4604      	mov	r4, r0
 8020838:	f7ff ff96 	bl	8020768 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802083c:	4620      	mov	r0, r4
 802083e:	f7ff ffb3 	bl	80207a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020842:	4620      	mov	r0, r4
 8020844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020848:	f7ff bfce 	b.w	80207e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802084c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802084c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020850:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020854:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020858:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802085c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020860:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020864:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020868:	8808      	ldrh	r0, [r1, #0]
 802086a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802086e:	2d00      	cmp	r5, #0
 8020870:	eb02 0a0c 	add.w	sl, r2, ip
 8020874:	f2c0 80b0 	blt.w	80209d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020878:	45ab      	cmp	fp, r5
 802087a:	f340 80ad 	ble.w	80209d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802087e:	2c00      	cmp	r4, #0
 8020880:	f2c0 80a8 	blt.w	80209d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020884:	45a6      	cmp	lr, r4
 8020886:	f340 80a5 	ble.w	80209d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802088a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802088e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020892:	1c62      	adds	r2, r4, #1
 8020894:	f100 80a3 	bmi.w	80209de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020898:	4596      	cmp	lr, r2
 802089a:	f340 80a0 	ble.w	80209de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802089e:	f1b9 0f00 	cmp.w	r9, #0
 80208a2:	f000 809c 	beq.w	80209de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80208a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80208aa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80208ae:	3501      	adds	r5, #1
 80208b0:	f100 8099 	bmi.w	80209e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80208b4:	45ab      	cmp	fp, r5
 80208b6:	f340 8096 	ble.w	80209e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80208ba:	2f00      	cmp	r7, #0
 80208bc:	f000 8093 	beq.w	80209e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80208c0:	2c00      	cmp	r4, #0
 80208c2:	f2c0 808e 	blt.w	80209e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80208c6:	45a6      	cmp	lr, r4
 80208c8:	f340 808b 	ble.w	80209e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80208cc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80208d0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80208d4:	3401      	adds	r4, #1
 80208d6:	f100 8089 	bmi.w	80209ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208da:	45a6      	cmp	lr, r4
 80208dc:	f340 8086 	ble.w	80209ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208e0:	f1b9 0f00 	cmp.w	r9, #0
 80208e4:	f000 8082 	beq.w	80209ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208e8:	44d6      	add	lr, sl
 80208ea:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80208ee:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80208f2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80208f6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80208fa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80208fe:	fb19 fe07 	smulbb	lr, r9, r7
 8020902:	ea44 0808 	orr.w	r8, r4, r8
 8020906:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802090a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802090e:	f1c7 0210 	rsb	r2, r7, #16
 8020912:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020916:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802091a:	ea44 0c0c 	orr.w	ip, r4, ip
 802091e:	eba2 0209 	sub.w	r2, r2, r9
 8020922:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020926:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802092a:	fb04 f40c 	mul.w	r4, r4, ip
 802092e:	fb02 4808 	mla	r8, r2, r8, r4
 8020932:	041a      	lsls	r2, r3, #16
 8020934:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020938:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802093c:	4313      	orrs	r3, r2
 802093e:	042a      	lsls	r2, r5, #16
 8020940:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020944:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020948:	fb0e 8303 	mla	r3, lr, r3, r8
 802094c:	432a      	orrs	r2, r5
 802094e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020952:	fb07 3202 	mla	r2, r7, r2, r3
 8020956:	0d53      	lsrs	r3, r2, #21
 8020958:	0952      	lsrs	r2, r2, #5
 802095a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802095e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020962:	431a      	orrs	r2, r3
 8020964:	b293      	uxth	r3, r2
 8020966:	b2b4      	uxth	r4, r6
 8020968:	1202      	asrs	r2, r0, #8
 802096a:	43f6      	mvns	r6, r6
 802096c:	b2f6      	uxtb	r6, r6
 802096e:	121d      	asrs	r5, r3, #8
 8020970:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020974:	fb12 f206 	smulbb	r2, r2, r6
 8020978:	10c7      	asrs	r7, r0, #3
 802097a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802097e:	00c0      	lsls	r0, r0, #3
 8020980:	fb05 2504 	mla	r5, r5, r4, r2
 8020984:	b2c0      	uxtb	r0, r0
 8020986:	10da      	asrs	r2, r3, #3
 8020988:	00db      	lsls	r3, r3, #3
 802098a:	b2db      	uxtb	r3, r3
 802098c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020990:	fb10 f006 	smulbb	r0, r0, r6
 8020994:	b2ad      	uxth	r5, r5
 8020996:	fb03 0004 	mla	r0, r3, r4, r0
 802099a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802099e:	fb17 f706 	smulbb	r7, r7, r6
 80209a2:	b280      	uxth	r0, r0
 80209a4:	1c6b      	adds	r3, r5, #1
 80209a6:	fb02 7204 	mla	r2, r2, r4, r7
 80209aa:	b292      	uxth	r2, r2
 80209ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80209b0:	1c43      	adds	r3, r0, #1
 80209b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80209b6:	1c50      	adds	r0, r2, #1
 80209b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80209bc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80209c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80209c4:	0952      	lsrs	r2, r2, #5
 80209c6:	432b      	orrs	r3, r5
 80209c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80209cc:	4313      	orrs	r3, r2
 80209ce:	800b      	strh	r3, [r1, #0]
 80209d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209d4:	4680      	mov	r8, r0
 80209d6:	e75c      	b.n	8020892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80209d8:	4684      	mov	ip, r0
 80209da:	4680      	mov	r8, r0
 80209dc:	e767      	b.n	80208ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80209de:	4684      	mov	ip, r0
 80209e0:	e765      	b.n	80208ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80209e2:	4605      	mov	r5, r0
 80209e4:	e776      	b.n	80208d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80209e6:	4603      	mov	r3, r0
 80209e8:	4605      	mov	r5, r0
 80209ea:	e782      	b.n	80208f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80209ec:	4603      	mov	r3, r0
 80209ee:	e780      	b.n	80208f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080209f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80209f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209f4:	b099      	sub	sp, #100	; 0x64
 80209f6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80209fa:	9215      	str	r2, [sp, #84]	; 0x54
 80209fc:	9309      	str	r3, [sp, #36]	; 0x24
 80209fe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020a00:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8020a04:	930d      	str	r3, [sp, #52]	; 0x34
 8020a06:	910c      	str	r1, [sp, #48]	; 0x30
 8020a08:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8020a0c:	9016      	str	r0, [sp, #88]	; 0x58
 8020a0e:	6850      	ldr	r0, [r2, #4]
 8020a10:	6812      	ldr	r2, [r2, #0]
 8020a12:	fb00 1303 	mla	r3, r0, r3, r1
 8020a16:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020a1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a1c:	681b      	ldr	r3, [r3, #0]
 8020a1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8020a20:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a22:	685e      	ldr	r6, [r3, #4]
 8020a24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020a26:	43db      	mvns	r3, r3
 8020a28:	b2db      	uxtb	r3, r3
 8020a2a:	3604      	adds	r6, #4
 8020a2c:	930a      	str	r3, [sp, #40]	; 0x28
 8020a2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a30:	2b00      	cmp	r3, #0
 8020a32:	dc03      	bgt.n	8020a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020a34:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020a36:	2b00      	cmp	r3, #0
 8020a38:	f340 8225 	ble.w	8020e86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020a3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a42:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a46:	1e48      	subs	r0, r1, #1
 8020a48:	1e57      	subs	r7, r2, #1
 8020a4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a4c:	2b00      	cmp	r3, #0
 8020a4e:	f340 80e3 	ble.w	8020c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020a52:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020a56:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a5a:	d406      	bmi.n	8020a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a5c:	4584      	cmp	ip, r0
 8020a5e:	da04      	bge.n	8020a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a60:	2b00      	cmp	r3, #0
 8020a62:	db02      	blt.n	8020a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a64:	42bb      	cmp	r3, r7
 8020a66:	f2c0 80d8 	blt.w	8020c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020a6a:	f11c 0c01 	adds.w	ip, ip, #1
 8020a6e:	f100 80c9 	bmi.w	8020c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a72:	4561      	cmp	r1, ip
 8020a74:	f2c0 80c6 	blt.w	8020c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a78:	3301      	adds	r3, #1
 8020a7a:	f100 80c3 	bmi.w	8020c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a7e:	429a      	cmp	r2, r3
 8020a80:	f2c0 80c0 	blt.w	8020c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a84:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020a88:	4647      	mov	r7, r8
 8020a8a:	f1bb 0f00 	cmp.w	fp, #0
 8020a8e:	f340 80e3 	ble.w	8020c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020a92:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020a94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a96:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020a9a:	689b      	ldr	r3, [r3, #8]
 8020a9c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020aa0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020aa4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020aa8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020aac:	f100 8121 	bmi.w	8020cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020ab0:	f103 39ff 	add.w	r9, r3, #4294967295
 8020ab4:	454a      	cmp	r2, r9
 8020ab6:	f280 811c 	bge.w	8020cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020aba:	f1bc 0f00 	cmp.w	ip, #0
 8020abe:	f2c0 8118 	blt.w	8020cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020ac2:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020ac6:	45cc      	cmp	ip, r9
 8020ac8:	f280 8113 	bge.w	8020cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020acc:	b21b      	sxth	r3, r3
 8020ace:	fb0c 2203 	mla	r2, ip, r3, r2
 8020ad2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ad4:	eb04 0902 	add.w	r9, r4, r2
 8020ad8:	5ca2      	ldrb	r2, [r4, r2]
 8020ada:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020ade:	2800      	cmp	r0, #0
 8020ae0:	f000 80fe 	beq.w	8020ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020ae4:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ae8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020aec:	9211      	str	r2, [sp, #68]	; 0x44
 8020aee:	b151      	cbz	r1, 8020b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020af0:	eb09 0203 	add.w	r2, r9, r3
 8020af4:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020af8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020afc:	930f      	str	r3, [sp, #60]	; 0x3c
 8020afe:	7853      	ldrb	r3, [r2, #1]
 8020b00:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020b04:	9312      	str	r3, [sp, #72]	; 0x48
 8020b06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020b08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020b0a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020b0e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020b12:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b16:	ea4c 0c03 	orr.w	ip, ip, r3
 8020b1a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020b1c:	041b      	lsls	r3, r3, #16
 8020b1e:	fb10 f201 	smulbb	r2, r0, r1
 8020b22:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020b26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020b2a:	10d2      	asrs	r2, r2, #3
 8020b2c:	4323      	orrs	r3, r4
 8020b2e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020b32:	4353      	muls	r3, r2
 8020b34:	fb09 330c 	mla	r3, r9, ip, r3
 8020b38:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020b3c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020b40:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020b44:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020b48:	f1c1 0c10 	rsb	ip, r1, #16
 8020b4c:	ebac 0c00 	sub.w	ip, ip, r0
 8020b50:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020b54:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020b58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020b5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020b5c:	0418      	lsls	r0, r3, #16
 8020b5e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020b62:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b66:	4318      	orrs	r0, r3
 8020b68:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020b6c:	fb02 c200 	mla	r2, r2, r0, ip
 8020b70:	0d53      	lsrs	r3, r2, #21
 8020b72:	0952      	lsrs	r2, r2, #5
 8020b74:	8838      	ldrh	r0, [r7, #0]
 8020b76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b7a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020b7e:	431a      	orrs	r2, r3
 8020b80:	b292      	uxth	r2, r2
 8020b82:	1201      	asrs	r1, r0, #8
 8020b84:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020b88:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020b8c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020b90:	fb11 f104 	smulbb	r1, r1, r4
 8020b94:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020b98:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020b9c:	00c0      	lsls	r0, r0, #3
 8020b9e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020ba2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020ba6:	10d1      	asrs	r1, r2, #3
 8020ba8:	b2c0      	uxtb	r0, r0
 8020baa:	00d2      	lsls	r2, r2, #3
 8020bac:	b2d2      	uxtb	r2, r2
 8020bae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020bb2:	fb1e fe04 	smulbb	lr, lr, r4
 8020bb6:	fb10 f004 	smulbb	r0, r0, r4
 8020bba:	fa1f fc8c 	uxth.w	ip, ip
 8020bbe:	fb01 e103 	mla	r1, r1, r3, lr
 8020bc2:	fb02 0303 	mla	r3, r2, r3, r0
 8020bc6:	b29a      	uxth	r2, r3
 8020bc8:	f10c 0301 	add.w	r3, ip, #1
 8020bcc:	b289      	uxth	r1, r1
 8020bce:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020bd2:	1c53      	adds	r3, r2, #1
 8020bd4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020bd8:	1c4a      	adds	r2, r1, #1
 8020bda:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020bde:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020be2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020be6:	0949      	lsrs	r1, r1, #5
 8020be8:	ea43 030c 	orr.w	r3, r3, ip
 8020bec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020bf0:	430b      	orrs	r3, r1
 8020bf2:	803b      	strh	r3, [r7, #0]
 8020bf4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020bf6:	449a      	add	sl, r3
 8020bf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020bfa:	3702      	adds	r7, #2
 8020bfc:	441d      	add	r5, r3
 8020bfe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c02:	e742      	b.n	8020a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020c04:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020c06:	449a      	add	sl, r3
 8020c08:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020c0a:	441d      	add	r5, r3
 8020c0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c0e:	3b01      	subs	r3, #1
 8020c10:	9309      	str	r3, [sp, #36]	; 0x24
 8020c12:	f108 0802 	add.w	r8, r8, #2
 8020c16:	e718      	b.n	8020a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020c18:	d023      	beq.n	8020c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020c1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c1c:	9825      	ldr	r0, [sp, #148]	; 0x94
 8020c1e:	3b01      	subs	r3, #1
 8020c20:	fb00 a003 	mla	r0, r0, r3, sl
 8020c24:	1400      	asrs	r0, r0, #16
 8020c26:	f53f af2d 	bmi.w	8020a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c2a:	3901      	subs	r1, #1
 8020c2c:	4288      	cmp	r0, r1
 8020c2e:	f6bf af29 	bge.w	8020a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c32:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020c34:	fb01 5303 	mla	r3, r1, r3, r5
 8020c38:	141b      	asrs	r3, r3, #16
 8020c3a:	f53f af23 	bmi.w	8020a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c3e:	3a01      	subs	r2, #1
 8020c40:	4293      	cmp	r3, r2
 8020c42:	f6bf af1f 	bge.w	8020a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c46:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020c4a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8020c4e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020c52:	f1be 0f00 	cmp.w	lr, #0
 8020c56:	dc6c      	bgt.n	8020d32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020c58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c5a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020c5e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020c62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c64:	2b00      	cmp	r3, #0
 8020c66:	f340 810e 	ble.w	8020e86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020c6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c76:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020c78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c84:	eef0 6a62 	vmov.f32	s13, s5
 8020c88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c94:	ee16 aa90 	vmov	sl, s13
 8020c98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c9c:	eef0 6a43 	vmov.f32	s13, s6
 8020ca0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020ca4:	ee12 2a90 	vmov	r2, s5
 8020ca8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cac:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cb0:	ee13 2a10 	vmov	r2, s6
 8020cb4:	9325      	str	r3, [sp, #148]	; 0x94
 8020cb6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020cb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cbc:	9326      	str	r3, [sp, #152]	; 0x98
 8020cbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020cc0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020cc2:	3b01      	subs	r3, #1
 8020cc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cc8:	930c      	str	r3, [sp, #48]	; 0x30
 8020cca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020ccc:	bf08      	it	eq
 8020cce:	4613      	moveq	r3, r2
 8020cd0:	ee16 5a90 	vmov	r5, s13
 8020cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8020cd6:	eeb0 3a67 	vmov.f32	s6, s15
 8020cda:	eef0 2a47 	vmov.f32	s5, s14
 8020cde:	e6a6      	b.n	8020a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020ce0:	2900      	cmp	r1, #0
 8020ce2:	f43f af10 	beq.w	8020b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020ce6:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020cea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020cee:	930f      	str	r3, [sp, #60]	; 0x3c
 8020cf0:	e709      	b.n	8020b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020cf2:	f112 0901 	adds.w	r9, r2, #1
 8020cf6:	f53f af7d 	bmi.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cfa:	454b      	cmp	r3, r9
 8020cfc:	f6ff af7a 	blt.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020d00:	f11c 0901 	adds.w	r9, ip, #1
 8020d04:	f53f af76 	bmi.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020d08:	45ce      	cmp	lr, r9
 8020d0a:	f6ff af73 	blt.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020d0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020d10:	9202      	str	r2, [sp, #8]
 8020d12:	b21b      	sxth	r3, r3
 8020d14:	fa0f f28e 	sxth.w	r2, lr
 8020d18:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020d1c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020d20:	9201      	str	r2, [sp, #4]
 8020d22:	9300      	str	r3, [sp, #0]
 8020d24:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020d26:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020d28:	4633      	mov	r3, r6
 8020d2a:	4639      	mov	r1, r7
 8020d2c:	f7ff fd8e 	bl	802084c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020d30:	e760      	b.n	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020d32:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d36:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020d3a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020d3e:	1429      	asrs	r1, r5, #16
 8020d40:	fb03 2101 	mla	r1, r3, r1, r2
 8020d44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020d46:	440a      	add	r2, r1
 8020d48:	5c61      	ldrb	r1, [r4, r1]
 8020d4a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8020d4e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020d52:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020d56:	f1bc 0f00 	cmp.w	ip, #0
 8020d5a:	f000 808c 	beq.w	8020e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020d5e:	7857      	ldrb	r7, [r2, #1]
 8020d60:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020d64:	9413      	str	r4, [sp, #76]	; 0x4c
 8020d66:	b140      	cbz	r0, 8020d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020d68:	18d7      	adds	r7, r2, r3
 8020d6a:	5cd3      	ldrb	r3, [r2, r3]
 8020d6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d70:	9310      	str	r3, [sp, #64]	; 0x40
 8020d72:	787b      	ldrb	r3, [r7, #1]
 8020d74:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d78:	9314      	str	r3, [sp, #80]	; 0x50
 8020d7a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020d7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020d7e:	fb1c f200 	smulbb	r2, ip, r0
 8020d82:	041f      	lsls	r7, r3, #16
 8020d84:	10d2      	asrs	r2, r2, #3
 8020d86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020d8a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8020d8e:	431f      	orrs	r7, r3
 8020d90:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020d94:	9317      	str	r3, [sp, #92]	; 0x5c
 8020d96:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020d98:	041b      	lsls	r3, r3, #16
 8020d9a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8020d9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020da2:	ea43 030b 	orr.w	r3, r3, fp
 8020da6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020da8:	4353      	muls	r3, r2
 8020daa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020dae:	fb04 3707 	mla	r7, r4, r7, r3
 8020db2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020db6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020dba:	ea43 0b01 	orr.w	fp, r3, r1
 8020dbe:	f1c0 0110 	rsb	r1, r0, #16
 8020dc2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020dc4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020dc6:	eba1 0c0c 	sub.w	ip, r1, ip
 8020dca:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020dce:	fb0c 770b 	mla	r7, ip, fp, r7
 8020dd2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020dd6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020dda:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020dde:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020de2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020de6:	fb02 770c 	mla	r7, r2, ip, r7
 8020dea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020dec:	0d79      	lsrs	r1, r7, #21
 8020dee:	097f      	lsrs	r7, r7, #5
 8020df0:	8812      	ldrh	r2, [r2, #0]
 8020df2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020df6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020dfa:	430f      	orrs	r7, r1
 8020dfc:	b2bb      	uxth	r3, r7
 8020dfe:	1211      	asrs	r1, r2, #8
 8020e00:	1218      	asrs	r0, r3, #8
 8020e02:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020e06:	fb11 f104 	smulbb	r1, r1, r4
 8020e0a:	10d7      	asrs	r7, r2, #3
 8020e0c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020e10:	00d2      	lsls	r2, r2, #3
 8020e12:	fb00 1009 	mla	r0, r0, r9, r1
 8020e16:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020e1a:	10d9      	asrs	r1, r3, #3
 8020e1c:	b2d2      	uxtb	r2, r2
 8020e1e:	00db      	lsls	r3, r3, #3
 8020e20:	fb17 f704 	smulbb	r7, r7, r4
 8020e24:	fb12 f204 	smulbb	r2, r2, r4
 8020e28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020e2c:	b2db      	uxtb	r3, r3
 8020e2e:	b280      	uxth	r0, r0
 8020e30:	fb01 7109 	mla	r1, r1, r9, r7
 8020e34:	fb03 2309 	mla	r3, r3, r9, r2
 8020e38:	b29b      	uxth	r3, r3
 8020e3a:	b289      	uxth	r1, r1
 8020e3c:	1c42      	adds	r2, r0, #1
 8020e3e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020e42:	1c4f      	adds	r7, r1, #1
 8020e44:	1c5a      	adds	r2, r3, #1
 8020e46:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020e4a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020e4e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020e52:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020e56:	0949      	lsrs	r1, r1, #5
 8020e58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020e5a:	4310      	orrs	r0, r2
 8020e5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020e60:	4308      	orrs	r0, r1
 8020e62:	f823 0b02 	strh.w	r0, [r3], #2
 8020e66:	930e      	str	r3, [sp, #56]	; 0x38
 8020e68:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e6a:	449a      	add	sl, r3
 8020e6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e6e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020e72:	441d      	add	r5, r3
 8020e74:	e6ed      	b.n	8020c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020e76:	2800      	cmp	r0, #0
 8020e78:	f43f af7f 	beq.w	8020d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020e7c:	5cd3      	ldrb	r3, [r2, r3]
 8020e7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020e82:	9310      	str	r3, [sp, #64]	; 0x40
 8020e84:	e779      	b.n	8020d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020e86:	b019      	add	sp, #100	; 0x64
 8020e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020e8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020e90:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020e94:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020e98:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8020e9c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8020ea0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8020ea4:	8808      	ldrh	r0, [r1, #0]
 8020ea6:	fb08 470e 	mla	r7, r8, lr, r4
 8020eaa:	f1b8 0f00 	cmp.w	r8, #0
 8020eae:	eb02 0907 	add.w	r9, r2, r7
 8020eb2:	db67      	blt.n	8020f84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020eb4:	45c2      	cmp	sl, r8
 8020eb6:	dd65      	ble.n	8020f84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020eb8:	2c00      	cmp	r4, #0
 8020eba:	db61      	blt.n	8020f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020ebc:	45a6      	cmp	lr, r4
 8020ebe:	dd5f      	ble.n	8020f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020ec0:	5dd2      	ldrb	r2, [r2, r7]
 8020ec2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020ec6:	1c62      	adds	r2, r4, #1
 8020ec8:	d45f      	bmi.n	8020f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020eca:	4596      	cmp	lr, r2
 8020ecc:	dd5d      	ble.n	8020f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020ece:	2d00      	cmp	r5, #0
 8020ed0:	d05b      	beq.n	8020f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020ed2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ed6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020eda:	f118 0801 	adds.w	r8, r8, #1
 8020ede:	d458      	bmi.n	8020f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ee0:	45c2      	cmp	sl, r8
 8020ee2:	dd56      	ble.n	8020f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ee4:	2e00      	cmp	r6, #0
 8020ee6:	d054      	beq.n	8020f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ee8:	2c00      	cmp	r4, #0
 8020eea:	db50      	blt.n	8020f8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020eec:	45a6      	cmp	lr, r4
 8020eee:	dd4e      	ble.n	8020f8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020ef0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020ef4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020ef8:	3401      	adds	r4, #1
 8020efa:	d407      	bmi.n	8020f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020efc:	45a6      	cmp	lr, r4
 8020efe:	dd05      	ble.n	8020f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020f00:	b125      	cbz	r5, 8020f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020f02:	44ce      	add	lr, r9
 8020f04:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020f08:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020f0c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020f10:	fb15 f406 	smulbb	r4, r5, r6
 8020f14:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f18:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020f1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020f20:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020f24:	ea43 0c0c 	orr.w	ip, r3, ip
 8020f28:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020f2c:	f1c6 0310 	rsb	r3, r6, #16
 8020f30:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020f34:	1b5b      	subs	r3, r3, r5
 8020f36:	ea4e 0707 	orr.w	r7, lr, r7
 8020f3a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020f3e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f42:	437d      	muls	r5, r7
 8020f44:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020f48:	0403      	lsls	r3, r0, #16
 8020f4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f52:	4318      	orrs	r0, r3
 8020f54:	0413      	lsls	r3, r2, #16
 8020f56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020f5e:	4313      	orrs	r3, r2
 8020f60:	fb04 c000 	mla	r0, r4, r0, ip
 8020f64:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020f68:	fb06 0003 	mla	r0, r6, r3, r0
 8020f6c:	0d43      	lsrs	r3, r0, #21
 8020f6e:	0940      	lsrs	r0, r0, #5
 8020f70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f74:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f78:	4318      	orrs	r0, r3
 8020f7a:	8008      	strh	r0, [r1, #0]
 8020f7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020f80:	4684      	mov	ip, r0
 8020f82:	e7a0      	b.n	8020ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020f84:	4607      	mov	r7, r0
 8020f86:	4684      	mov	ip, r0
 8020f88:	e7a7      	b.n	8020eda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020f8a:	4607      	mov	r7, r0
 8020f8c:	e7a5      	b.n	8020eda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020f8e:	4602      	mov	r2, r0
 8020f90:	e7b2      	b.n	8020ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020f92:	4602      	mov	r2, r0
 8020f94:	e7ba      	b.n	8020f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f9a:	b093      	sub	sp, #76	; 0x4c
 8020f9c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020fa0:	920f      	str	r2, [sp, #60]	; 0x3c
 8020fa2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020fa4:	9108      	str	r1, [sp, #32]
 8020fa6:	9306      	str	r3, [sp, #24]
 8020fa8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020fac:	9010      	str	r0, [sp, #64]	; 0x40
 8020fae:	6850      	ldr	r0, [r2, #4]
 8020fb0:	6812      	ldr	r2, [r2, #0]
 8020fb2:	fb00 1303 	mla	r3, r0, r3, r1
 8020fb6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020fba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fbc:	681b      	ldr	r3, [r3, #0]
 8020fbe:	9307      	str	r3, [sp, #28]
 8020fc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fc2:	685f      	ldr	r7, [r3, #4]
 8020fc4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020fc8:	3704      	adds	r7, #4
 8020fca:	9b08      	ldr	r3, [sp, #32]
 8020fcc:	2b00      	cmp	r3, #0
 8020fce:	dc03      	bgt.n	8020fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020fd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020fd2:	2b00      	cmp	r3, #0
 8020fd4:	f340 81b2 	ble.w	802133c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020fd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fe2:	1e48      	subs	r0, r1, #1
 8020fe4:	f102 3cff 	add.w	ip, r2, #4294967295
 8020fe8:	9b06      	ldr	r3, [sp, #24]
 8020fea:	2b00      	cmp	r3, #0
 8020fec:	f340 80a9 	ble.w	8021142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020ff0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020ff4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020ff8:	d406      	bmi.n	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020ffa:	4586      	cmp	lr, r0
 8020ffc:	da04      	bge.n	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020ffe:	2b00      	cmp	r3, #0
 8021000:	db02      	blt.n	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021002:	4563      	cmp	r3, ip
 8021004:	f2c0 809e 	blt.w	8021144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021008:	f11e 0e01 	adds.w	lr, lr, #1
 802100c:	f100 808f 	bmi.w	802112e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021010:	4571      	cmp	r1, lr
 8021012:	f2c0 808c 	blt.w	802112e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021016:	3301      	adds	r3, #1
 8021018:	f100 8089 	bmi.w	802112e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802101c:	429a      	cmp	r2, r3
 802101e:	f2c0 8086 	blt.w	802112e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021022:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021026:	46c8      	mov	r8, r9
 8021028:	f1bb 0f00 	cmp.w	fp, #0
 802102c:	f340 80a6 	ble.w	802117c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021030:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8021032:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021034:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021038:	689b      	ldr	r3, [r3, #8]
 802103a:	1422      	asrs	r2, r4, #16
 802103c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021040:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021044:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021048:	f100 80e3 	bmi.w	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802104c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021050:	4552      	cmp	r2, sl
 8021052:	f280 80de 	bge.w	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021056:	f1bc 0f00 	cmp.w	ip, #0
 802105a:	f2c0 80da 	blt.w	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802105e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021062:	45d4      	cmp	ip, sl
 8021064:	f280 80d5 	bge.w	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021068:	b21b      	sxth	r3, r3
 802106a:	fb0c 2203 	mla	r2, ip, r3, r2
 802106e:	9d07      	ldr	r5, [sp, #28]
 8021070:	eb05 0a02 	add.w	sl, r5, r2
 8021074:	5caa      	ldrb	r2, [r5, r2]
 8021076:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802107a:	2800      	cmp	r0, #0
 802107c:	f000 80c0 	beq.w	8021200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021080:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021084:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021088:	920b      	str	r2, [sp, #44]	; 0x2c
 802108a:	b151      	cbz	r1, 80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802108c:	eb0a 0203 	add.w	r2, sl, r3
 8021090:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021094:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021098:	9309      	str	r3, [sp, #36]	; 0x24
 802109a:	7853      	ldrb	r3, [r2, #1]
 802109c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80210a0:	930c      	str	r3, [sp, #48]	; 0x30
 80210a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80210a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80210aa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80210ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80210b2:	ea4c 0c03 	orr.w	ip, ip, r3
 80210b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80210b8:	041b      	lsls	r3, r3, #16
 80210ba:	fb10 f201 	smulbb	r2, r0, r1
 80210be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80210c2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80210c6:	10d2      	asrs	r2, r2, #3
 80210c8:	432b      	orrs	r3, r5
 80210ca:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80210ce:	4353      	muls	r3, r2
 80210d0:	fb0a 330c 	mla	r3, sl, ip, r3
 80210d4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80210d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80210dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80210e0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80210e4:	f1c1 0c10 	rsb	ip, r1, #16
 80210e8:	ebac 0c00 	sub.w	ip, ip, r0
 80210ec:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80210f0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80210f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210f6:	0418      	lsls	r0, r3, #16
 80210f8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80210fc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021100:	4318      	orrs	r0, r3
 8021102:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021106:	fb02 c200 	mla	r2, r2, r0, ip
 802110a:	0d53      	lsrs	r3, r2, #21
 802110c:	0952      	lsrs	r2, r2, #5
 802110e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021112:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021116:	431a      	orrs	r2, r3
 8021118:	f8a8 2000 	strh.w	r2, [r8]
 802111c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802111e:	441c      	add	r4, r3
 8021120:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021122:	f108 0802 	add.w	r8, r8, #2
 8021126:	441e      	add	r6, r3
 8021128:	f10b 3bff 	add.w	fp, fp, #4294967295
 802112c:	e77c      	b.n	8021028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802112e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021130:	441c      	add	r4, r3
 8021132:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021134:	441e      	add	r6, r3
 8021136:	9b06      	ldr	r3, [sp, #24]
 8021138:	3b01      	subs	r3, #1
 802113a:	9306      	str	r3, [sp, #24]
 802113c:	f109 0902 	add.w	r9, r9, #2
 8021140:	e752      	b.n	8020fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021142:	d020      	beq.n	8021186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021144:	9b06      	ldr	r3, [sp, #24]
 8021146:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021148:	3b01      	subs	r3, #1
 802114a:	fb00 4003 	mla	r0, r0, r3, r4
 802114e:	1400      	asrs	r0, r0, #16
 8021150:	f53f af67 	bmi.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021154:	3901      	subs	r1, #1
 8021156:	4288      	cmp	r0, r1
 8021158:	f6bf af63 	bge.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802115c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802115e:	fb01 6303 	mla	r3, r1, r3, r6
 8021162:	141b      	asrs	r3, r3, #16
 8021164:	f53f af5d 	bmi.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021168:	3a01      	subs	r2, #1
 802116a:	4293      	cmp	r3, r2
 802116c:	f6bf af59 	bge.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021170:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021174:	46ca      	mov	sl, r9
 8021176:	f1b8 0f00 	cmp.w	r8, #0
 802117a:	dc67      	bgt.n	802124c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802117c:	9b06      	ldr	r3, [sp, #24]
 802117e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021182:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021186:	9b08      	ldr	r3, [sp, #32]
 8021188:	2b00      	cmp	r3, #0
 802118a:	f340 80d7 	ble.w	802133c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802118e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021192:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021196:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802119a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802119c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80211a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80211a4:	eeb0 6a62 	vmov.f32	s12, s5
 80211a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80211ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80211b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80211b4:	ee16 4a10 	vmov	r4, s12
 80211b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80211bc:	eeb0 6a43 	vmov.f32	s12, s6
 80211c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80211c4:	ee12 2a90 	vmov	r2, s5
 80211c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80211cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80211d0:	ee13 2a10 	vmov	r2, s6
 80211d4:	931f      	str	r3, [sp, #124]	; 0x7c
 80211d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80211dc:	9320      	str	r3, [sp, #128]	; 0x80
 80211de:	9b08      	ldr	r3, [sp, #32]
 80211e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80211e2:	3b01      	subs	r3, #1
 80211e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80211e8:	9308      	str	r3, [sp, #32]
 80211ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211ec:	bf08      	it	eq
 80211ee:	4613      	moveq	r3, r2
 80211f0:	ee16 6a10 	vmov	r6, s12
 80211f4:	9306      	str	r3, [sp, #24]
 80211f6:	eeb0 3a67 	vmov.f32	s6, s15
 80211fa:	eef0 2a47 	vmov.f32	s5, s14
 80211fe:	e6e4      	b.n	8020fca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021200:	2900      	cmp	r1, #0
 8021202:	f43f af4e 	beq.w	80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021206:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802120a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802120e:	9309      	str	r3, [sp, #36]	; 0x24
 8021210:	e747      	b.n	80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021212:	f112 0a01 	adds.w	sl, r2, #1
 8021216:	d481      	bmi.n	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021218:	4553      	cmp	r3, sl
 802121a:	f6ff af7f 	blt.w	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802121e:	f11c 0a01 	adds.w	sl, ip, #1
 8021222:	f53f af7b 	bmi.w	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021226:	45d6      	cmp	lr, sl
 8021228:	f6ff af78 	blt.w	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802122c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8021230:	b21b      	sxth	r3, r3
 8021232:	fa0f f28e 	sxth.w	r2, lr
 8021236:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802123a:	9201      	str	r2, [sp, #4]
 802123c:	9300      	str	r3, [sp, #0]
 802123e:	9a07      	ldr	r2, [sp, #28]
 8021240:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021242:	463b      	mov	r3, r7
 8021244:	4641      	mov	r1, r8
 8021246:	f7ff fe21 	bl	8020e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802124a:	e767      	b.n	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802124c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802124e:	9d07      	ldr	r5, [sp, #28]
 8021250:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021254:	1422      	asrs	r2, r4, #16
 8021256:	1431      	asrs	r1, r6, #16
 8021258:	fb03 2101 	mla	r1, r3, r1, r2
 802125c:	9a07      	ldr	r2, [sp, #28]
 802125e:	440a      	add	r2, r1
 8021260:	5c69      	ldrb	r1, [r5, r1]
 8021262:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8021266:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802126a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802126e:	f1be 0f00 	cmp.w	lr, #0
 8021272:	d05c      	beq.n	802132e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8021274:	f892 c001 	ldrb.w	ip, [r2, #1]
 8021278:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 802127c:	950d      	str	r5, [sp, #52]	; 0x34
 802127e:	b150      	cbz	r0, 8021296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021280:	eb02 0c03 	add.w	ip, r2, r3
 8021284:	5cd3      	ldrb	r3, [r2, r3]
 8021286:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802128a:	930a      	str	r3, [sp, #40]	; 0x28
 802128c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8021290:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021294:	930e      	str	r3, [sp, #56]	; 0x38
 8021296:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021298:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802129a:	fb1e f200 	smulbb	r2, lr, r0
 802129e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80212a2:	10d2      	asrs	r2, r2, #3
 80212a4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80212a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80212ac:	ea4c 0c03 	orr.w	ip, ip, r3
 80212b0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80212b4:	9311      	str	r3, [sp, #68]	; 0x44
 80212b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80212b8:	041b      	lsls	r3, r3, #16
 80212ba:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80212be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80212c2:	ea43 030b 	orr.w	r3, r3, fp
 80212c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80212c8:	4353      	muls	r3, r2
 80212ca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80212ce:	fb05 3c0c 	mla	ip, r5, ip, r3
 80212d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80212d6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80212da:	ea43 0b01 	orr.w	fp, r3, r1
 80212de:	f1c0 0110 	rsb	r1, r0, #16
 80212e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212e4:	eba1 0e0e 	sub.w	lr, r1, lr
 80212e8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80212ec:	fb0e cc0b 	mla	ip, lr, fp, ip
 80212f0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80212f4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80212f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80212fc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8021300:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021304:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021308:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802130c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021310:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021314:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021318:	ea43 0c0c 	orr.w	ip, r3, ip
 802131c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802131e:	f82a cb02 	strh.w	ip, [sl], #2
 8021322:	441c      	add	r4, r3
 8021324:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021326:	f108 38ff 	add.w	r8, r8, #4294967295
 802132a:	441e      	add	r6, r3
 802132c:	e723      	b.n	8021176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802132e:	2800      	cmp	r0, #0
 8021330:	d0b1      	beq.n	8021296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021332:	5cd3      	ldrb	r3, [r2, r3]
 8021334:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021338:	930a      	str	r3, [sp, #40]	; 0x28
 802133a:	e7ac      	b.n	8021296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802133c:	b013      	add	sp, #76	; 0x4c
 802133e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021342 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8021342:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021346:	880d      	ldrh	r5, [r1, #0]
 8021348:	b087      	sub	sp, #28
 802134a:	10ef      	asrs	r7, r5, #3
 802134c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8021350:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021354:	00ed      	lsls	r5, r5, #3
 8021356:	9701      	str	r7, [sp, #4]
 8021358:	b2ed      	uxtb	r5, r5
 802135a:	9502      	str	r5, [sp, #8]
 802135c:	9d01      	ldr	r5, [sp, #4]
 802135e:	9103      	str	r1, [sp, #12]
 8021360:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8021364:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8021368:	9902      	ldr	r1, [sp, #8]
 802136a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802136e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8021372:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8021376:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802137a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802137e:	022d      	lsls	r5, r5, #8
 8021380:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8021384:	fb06 0709 	mla	r7, r6, r9, r0
 8021388:	430d      	orrs	r5, r1
 802138a:	2e00      	cmp	r6, #0
 802138c:	eb02 0c07 	add.w	ip, r2, r7
 8021390:	9505      	str	r5, [sp, #20]
 8021392:	f2c0 80b6 	blt.w	8021502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8021396:	45b3      	cmp	fp, r6
 8021398:	f340 80b3 	ble.w	8021502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802139c:	2800      	cmp	r0, #0
 802139e:	f2c0 80ae 	blt.w	80214fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80213a2:	4581      	cmp	r9, r0
 80213a4:	f340 80ab 	ble.w	80214fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80213a8:	5dd7      	ldrb	r7, [r2, r7]
 80213aa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80213ae:	441f      	add	r7, r3
 80213b0:	1c42      	adds	r2, r0, #1
 80213b2:	f100 80a9 	bmi.w	8021508 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80213b6:	4591      	cmp	r9, r2
 80213b8:	f340 80a6 	ble.w	8021508 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80213bc:	2c00      	cmp	r4, #0
 80213be:	f000 80a3 	beq.w	8021508 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80213c2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80213c6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80213ca:	441d      	add	r5, r3
 80213cc:	3601      	adds	r6, #1
 80213ce:	f100 809f 	bmi.w	8021510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213d2:	45b3      	cmp	fp, r6
 80213d4:	f340 809c 	ble.w	8021510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213d8:	f1be 0f00 	cmp.w	lr, #0
 80213dc:	f000 8098 	beq.w	8021510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213e0:	2800      	cmp	r0, #0
 80213e2:	f2c0 8093 	blt.w	802150c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80213e6:	4581      	cmp	r9, r0
 80213e8:	f340 8090 	ble.w	802150c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80213ec:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80213f0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80213f4:	441e      	add	r6, r3
 80213f6:	3001      	adds	r0, #1
 80213f8:	f100 808d 	bmi.w	8021516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213fc:	4581      	cmp	r9, r0
 80213fe:	f340 808a 	ble.w	8021516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021402:	2c00      	cmp	r4, #0
 8021404:	f000 8087 	beq.w	8021516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021408:	44e1      	add	r9, ip
 802140a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802140e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021412:	4413      	add	r3, r2
 8021414:	b2a4      	uxth	r4, r4
 8021416:	fa1f fe8e 	uxth.w	lr, lr
 802141a:	fb04 fb0e 	mul.w	fp, r4, lr
 802141e:	0124      	lsls	r4, r4, #4
 8021420:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8021424:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8021428:	eba4 040b 	sub.w	r4, r4, fp
 802142c:	fa1f f08e 	uxth.w	r0, lr
 8021430:	b2a2      	uxth	r2, r4
 8021432:	78ac      	ldrb	r4, [r5, #2]
 8021434:	f897 c002 	ldrb.w	ip, [r7, #2]
 8021438:	9901      	ldr	r1, [sp, #4]
 802143a:	eba9 0900 	sub.w	r9, r9, r0
 802143e:	fa1f f989 	uxth.w	r9, r9
 8021442:	4354      	muls	r4, r2
 8021444:	fb09 440c 	mla	r4, r9, ip, r4
 8021448:	f896 c002 	ldrb.w	ip, [r6, #2]
 802144c:	fb00 440c 	mla	r4, r0, ip, r4
 8021450:	f893 c002 	ldrb.w	ip, [r3, #2]
 8021454:	fa1f fe88 	uxth.w	lr, r8
 8021458:	ea6f 0808 	mvn.w	r8, r8
 802145c:	fa5f f888 	uxtb.w	r8, r8
 8021460:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8021464:	fb1a fa08 	smulbb	sl, sl, r8
 8021468:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802146c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8021470:	f895 a001 	ldrb.w	sl, [r5, #1]
 8021474:	787c      	ldrb	r4, [r7, #1]
 8021476:	782d      	ldrb	r5, [r5, #0]
 8021478:	783f      	ldrb	r7, [r7, #0]
 802147a:	fb02 fa0a 	mul.w	sl, r2, sl
 802147e:	fb09 aa04 	mla	sl, r9, r4, sl
 8021482:	7874      	ldrb	r4, [r6, #1]
 8021484:	436a      	muls	r2, r5
 8021486:	7835      	ldrb	r5, [r6, #0]
 8021488:	fb00 aa04 	mla	sl, r0, r4, sl
 802148c:	fb09 2207 	mla	r2, r9, r7, r2
 8021490:	785c      	ldrb	r4, [r3, #1]
 8021492:	781b      	ldrb	r3, [r3, #0]
 8021494:	fb00 2005 	mla	r0, r0, r5, r2
 8021498:	fb0b a404 	mla	r4, fp, r4, sl
 802149c:	fb0b 0b03 	mla	fp, fp, r3, r0
 80214a0:	9b02      	ldr	r3, [sp, #8]
 80214a2:	fb11 fa08 	smulbb	sl, r1, r8
 80214a6:	fa1f fc8c 	uxth.w	ip, ip
 80214aa:	fb13 f808 	smulbb	r8, r3, r8
 80214ae:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80214b2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80214b6:	fb04 a40e 	mla	r4, r4, lr, sl
 80214ba:	f10c 0301 	add.w	r3, ip, #1
 80214be:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80214c2:	fa1f fe8e 	uxth.w	lr, lr
 80214c6:	b2a4      	uxth	r4, r4
 80214c8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80214cc:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80214d0:	f104 0a01 	add.w	sl, r4, #1
 80214d4:	f10e 0c01 	add.w	ip, lr, #1
 80214d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80214dc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80214e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80214e4:	0964      	lsrs	r4, r4, #5
 80214e6:	ea4c 0c03 	orr.w	ip, ip, r3
 80214ea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80214ee:	9b03      	ldr	r3, [sp, #12]
 80214f0:	ea4c 0c04 	orr.w	ip, ip, r4
 80214f4:	f8a3 c000 	strh.w	ip, [r3]
 80214f8:	b007      	add	sp, #28
 80214fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214fe:	af05      	add	r7, sp, #20
 8021500:	e756      	b.n	80213b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8021502:	ad05      	add	r5, sp, #20
 8021504:	462f      	mov	r7, r5
 8021506:	e761      	b.n	80213cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8021508:	ad05      	add	r5, sp, #20
 802150a:	e75f      	b.n	80213cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802150c:	ae05      	add	r6, sp, #20
 802150e:	e772      	b.n	80213f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8021510:	ab05      	add	r3, sp, #20
 8021512:	461e      	mov	r6, r3
 8021514:	e77e      	b.n	8021414 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8021516:	ab05      	add	r3, sp, #20
 8021518:	e77c      	b.n	8021414 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802151a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802151a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802151e:	b095      	sub	sp, #84	; 0x54
 8021520:	9212      	str	r2, [sp, #72]	; 0x48
 8021522:	9309      	str	r3, [sp, #36]	; 0x24
 8021524:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021526:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802152a:	930f      	str	r3, [sp, #60]	; 0x3c
 802152c:	910e      	str	r1, [sp, #56]	; 0x38
 802152e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8021532:	9013      	str	r0, [sp, #76]	; 0x4c
 8021534:	6850      	ldr	r0, [r2, #4]
 8021536:	6812      	ldr	r2, [r2, #0]
 8021538:	fb00 1303 	mla	r3, r0, r3, r1
 802153c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021540:	930a      	str	r3, [sp, #40]	; 0x28
 8021542:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021544:	681b      	ldr	r3, [r3, #0]
 8021546:	930d      	str	r3, [sp, #52]	; 0x34
 8021548:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802154a:	685c      	ldr	r4, [r3, #4]
 802154c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802154e:	43db      	mvns	r3, r3
 8021550:	b2db      	uxtb	r3, r3
 8021552:	3404      	adds	r4, #4
 8021554:	930b      	str	r3, [sp, #44]	; 0x2c
 8021556:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021558:	2b00      	cmp	r3, #0
 802155a:	dc03      	bgt.n	8021564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802155c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802155e:	2b00      	cmp	r3, #0
 8021560:	f340 8255 	ble.w	8021a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021564:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021566:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802156a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802156e:	1e48      	subs	r0, r1, #1
 8021570:	1e55      	subs	r5, r2, #1
 8021572:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021574:	2b00      	cmp	r3, #0
 8021576:	f340 80f9 	ble.w	802176c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802157a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802157c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802157e:	1436      	asrs	r6, r6, #16
 8021580:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021584:	d406      	bmi.n	8021594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021586:	4286      	cmp	r6, r0
 8021588:	da04      	bge.n	8021594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802158a:	2b00      	cmp	r3, #0
 802158c:	db02      	blt.n	8021594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802158e:	42ab      	cmp	r3, r5
 8021590:	f2c0 80ed 	blt.w	802176e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021594:	3601      	adds	r6, #1
 8021596:	f100 80da 	bmi.w	802174e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802159a:	42b1      	cmp	r1, r6
 802159c:	f2c0 80d7 	blt.w	802174e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80215a0:	3301      	adds	r3, #1
 80215a2:	f100 80d4 	bmi.w	802174e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80215a6:	429a      	cmp	r2, r3
 80215a8:	f2c0 80d1 	blt.w	802174e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80215ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215ae:	9311      	str	r3, [sp, #68]	; 0x44
 80215b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80215b2:	930c      	str	r3, [sp, #48]	; 0x30
 80215b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80215b6:	2b00      	cmp	r3, #0
 80215b8:	f340 80fa 	ble.w	80217b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80215bc:	9826      	ldr	r0, [sp, #152]	; 0x98
 80215be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215c0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80215c2:	68c6      	ldr	r6, [r0, #12]
 80215c4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80215c6:	141d      	asrs	r5, r3, #16
 80215c8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80215cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80215ce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80215d0:	1400      	asrs	r0, r0, #16
 80215d2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80215d6:	6892      	ldr	r2, [r2, #8]
 80215d8:	f100 813e 	bmi.w	8021858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215dc:	1e57      	subs	r7, r2, #1
 80215de:	42b8      	cmp	r0, r7
 80215e0:	f280 813a 	bge.w	8021858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215e4:	2d00      	cmp	r5, #0
 80215e6:	f2c0 8137 	blt.w	8021858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215ea:	1e77      	subs	r7, r6, #1
 80215ec:	42bd      	cmp	r5, r7
 80215ee:	f280 8133 	bge.w	8021858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215f2:	b212      	sxth	r2, r2
 80215f4:	fb05 0002 	mla	r0, r5, r2, r0
 80215f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80215fa:	f815 a000 	ldrb.w	sl, [r5, r0]
 80215fe:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8021602:	182e      	adds	r6, r5, r0
 8021604:	eb04 050a 	add.w	r5, r4, sl
 8021608:	2b00      	cmp	r3, #0
 802160a:	f000 8117 	beq.w	802183c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802160e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021612:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021616:	44a4      	add	ip, r4
 8021618:	2900      	cmp	r1, #0
 802161a:	f000 8117 	beq.w	802184c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802161e:	18b0      	adds	r0, r6, r2
 8021620:	5cb2      	ldrb	r2, [r6, r2]
 8021622:	7840      	ldrb	r0, [r0, #1]
 8021624:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021628:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802162c:	4422      	add	r2, r4
 802162e:	4420      	add	r0, r4
 8021630:	b29b      	uxth	r3, r3
 8021632:	b289      	uxth	r1, r1
 8021634:	fb03 f901 	mul.w	r9, r3, r1
 8021638:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802163c:	011b      	lsls	r3, r3, #4
 802163e:	b289      	uxth	r1, r1
 8021640:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021644:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021648:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802164a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802164e:	f8b6 e000 	ldrh.w	lr, [r6]
 8021652:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8021656:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802165a:	eba3 0309 	sub.w	r3, r3, r9
 802165e:	b29b      	uxth	r3, r3
 8021660:	eba8 0801 	sub.w	r8, r8, r1
 8021664:	fa1f f888 	uxth.w	r8, r8
 8021668:	435f      	muls	r7, r3
 802166a:	fb08 770b 	mla	r7, r8, fp, r7
 802166e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021672:	9310      	str	r3, [sp, #64]	; 0x40
 8021674:	fb01 770b 	mla	r7, r1, fp, r7
 8021678:	f890 b002 	ldrb.w	fp, [r0, #2]
 802167c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802167e:	fb09 770b 	mla	r7, r9, fp, r7
 8021682:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021686:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802168a:	fb1b fb03 	smulbb	fp, fp, r3
 802168e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021692:	fb07 b706 	mla	r7, r7, r6, fp
 8021696:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021698:	f895 b001 	ldrb.w	fp, [r5, #1]
 802169c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80216a0:	f89c c000 	ldrb.w	ip, [ip]
 80216a4:	435d      	muls	r5, r3
 80216a6:	fb08 550b 	mla	r5, r8, fp, r5
 80216aa:	f892 b001 	ldrb.w	fp, [r2, #1]
 80216ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216b0:	fb01 550b 	mla	r5, r1, fp, r5
 80216b4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80216b8:	fb09 550b 	mla	r5, r9, fp, r5
 80216bc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80216c0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80216c4:	fb1b fb03 	smulbb	fp, fp, r3
 80216c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80216ca:	fb03 f30c 	mul.w	r3, r3, ip
 80216ce:	f892 c000 	ldrb.w	ip, [r2]
 80216d2:	fb08 330a 	mla	r3, r8, sl, r3
 80216d6:	fb01 330c 	mla	r3, r1, ip, r3
 80216da:	f890 c000 	ldrb.w	ip, [r0]
 80216de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80216e2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80216e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216e8:	fa5f fe8e 	uxtb.w	lr, lr
 80216ec:	b2bf      	uxth	r7, r7
 80216ee:	fb1e fe03 	smulbb	lr, lr, r3
 80216f2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80216f6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80216fa:	fb05 b506 	mla	r5, r5, r6, fp
 80216fe:	1c7b      	adds	r3, r7, #1
 8021700:	fb0c e606 	mla	r6, ip, r6, lr
 8021704:	b2ad      	uxth	r5, r5
 8021706:	b2b6      	uxth	r6, r6
 8021708:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802170c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021710:	f105 0b01 	add.w	fp, r5, #1
 8021714:	1c77      	adds	r7, r6, #1
 8021716:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802171a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802171e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021722:	096d      	lsrs	r5, r5, #5
 8021724:	431f      	orrs	r7, r3
 8021726:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802172a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802172c:	433d      	orrs	r5, r7
 802172e:	801d      	strh	r5, [r3, #0]
 8021730:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021732:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021734:	3302      	adds	r3, #2
 8021736:	930c      	str	r3, [sp, #48]	; 0x30
 8021738:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802173a:	4413      	add	r3, r2
 802173c:	931f      	str	r3, [sp, #124]	; 0x7c
 802173e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021740:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021742:	4413      	add	r3, r2
 8021744:	9320      	str	r3, [sp, #128]	; 0x80
 8021746:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021748:	3b01      	subs	r3, #1
 802174a:	9311      	str	r3, [sp, #68]	; 0x44
 802174c:	e732      	b.n	80215b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802174e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021750:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021752:	4433      	add	r3, r6
 8021754:	931f      	str	r3, [sp, #124]	; 0x7c
 8021756:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021758:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802175a:	4433      	add	r3, r6
 802175c:	9320      	str	r3, [sp, #128]	; 0x80
 802175e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021760:	3b01      	subs	r3, #1
 8021762:	9309      	str	r3, [sp, #36]	; 0x24
 8021764:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021766:	3302      	adds	r3, #2
 8021768:	930a      	str	r3, [sp, #40]	; 0x28
 802176a:	e702      	b.n	8021572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802176c:	d027      	beq.n	80217be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802176e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021770:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021772:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021774:	3b01      	subs	r3, #1
 8021776:	fb00 5003 	mla	r0, r0, r3, r5
 802177a:	1400      	asrs	r0, r0, #16
 802177c:	f53f af16 	bmi.w	80215ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021780:	3901      	subs	r1, #1
 8021782:	4288      	cmp	r0, r1
 8021784:	f6bf af12 	bge.w	80215ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021788:	9922      	ldr	r1, [sp, #136]	; 0x88
 802178a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802178c:	fb01 0303 	mla	r3, r1, r3, r0
 8021790:	141b      	asrs	r3, r3, #16
 8021792:	f53f af0b 	bmi.w	80215ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021796:	3a01      	subs	r2, #1
 8021798:	4293      	cmp	r3, r2
 802179a:	f6bf af07 	bge.w	80215ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802179e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217a0:	9311      	str	r3, [sp, #68]	; 0x44
 80217a2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80217a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80217a8:	930c      	str	r3, [sp, #48]	; 0x30
 80217aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80217ac:	2b00      	cmp	r3, #0
 80217ae:	dc70      	bgt.n	8021892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80217b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80217b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80217b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80217bc:	930a      	str	r3, [sp, #40]	; 0x28
 80217be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80217c0:	2b00      	cmp	r3, #0
 80217c2:	f340 8124 	ble.w	8021a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80217c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80217ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80217ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80217d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80217d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80217d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80217dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80217e0:	eef0 6a62 	vmov.f32	s13, s5
 80217e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80217e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80217f0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80217f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80217f8:	eef0 6a43 	vmov.f32	s13, s6
 80217fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021800:	ee12 2a90 	vmov	r2, s5
 8021804:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021808:	fb92 f3f3 	sdiv	r3, r2, r3
 802180c:	ee13 2a10 	vmov	r2, s6
 8021810:	9321      	str	r3, [sp, #132]	; 0x84
 8021812:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021814:	fb92 f3f3 	sdiv	r3, r2, r3
 8021818:	9322      	str	r3, [sp, #136]	; 0x88
 802181a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802181c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802181e:	3b01      	subs	r3, #1
 8021820:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021824:	930e      	str	r3, [sp, #56]	; 0x38
 8021826:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021828:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802182c:	bf08      	it	eq
 802182e:	4613      	moveq	r3, r2
 8021830:	9309      	str	r3, [sp, #36]	; 0x24
 8021832:	eeb0 3a67 	vmov.f32	s6, s15
 8021836:	eef0 2a47 	vmov.f32	s5, s14
 802183a:	e68c      	b.n	8021556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802183c:	b149      	cbz	r1, 8021852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802183e:	5cb2      	ldrb	r2, [r6, r2]
 8021840:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021844:	4422      	add	r2, r4
 8021846:	4628      	mov	r0, r5
 8021848:	46ac      	mov	ip, r5
 802184a:	e6f1      	b.n	8021630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802184c:	4628      	mov	r0, r5
 802184e:	462a      	mov	r2, r5
 8021850:	e6ee      	b.n	8021630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021852:	4628      	mov	r0, r5
 8021854:	462a      	mov	r2, r5
 8021856:	e7f7      	b.n	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021858:	1c47      	adds	r7, r0, #1
 802185a:	f53f af69 	bmi.w	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802185e:	42ba      	cmp	r2, r7
 8021860:	f6ff af66 	blt.w	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021864:	1c6f      	adds	r7, r5, #1
 8021866:	f53f af63 	bmi.w	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802186a:	42be      	cmp	r6, r7
 802186c:	f6ff af60 	blt.w	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021870:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021872:	9002      	str	r0, [sp, #8]
 8021874:	b236      	sxth	r6, r6
 8021876:	b212      	sxth	r2, r2
 8021878:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802187c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021880:	9200      	str	r2, [sp, #0]
 8021882:	9601      	str	r6, [sp, #4]
 8021884:	4623      	mov	r3, r4
 8021886:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802188a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802188c:	f7ff fd59 	bl	8021342 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021890:	e74e      	b.n	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021892:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021894:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021896:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021898:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802189a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802189e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80218a0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80218a4:	142d      	asrs	r5, r5, #16
 80218a6:	1400      	asrs	r0, r0, #16
 80218a8:	fb02 5000 	mla	r0, r2, r0, r5
 80218ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80218ae:	f815 9000 	ldrb.w	r9, [r5, r0]
 80218b2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80218b6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80218ba:	182e      	adds	r6, r5, r0
 80218bc:	eb04 0509 	add.w	r5, r4, r9
 80218c0:	2b00      	cmp	r3, #0
 80218c2:	f000 8096 	beq.w	80219f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80218c6:	7877      	ldrb	r7, [r6, #1]
 80218c8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80218cc:	4427      	add	r7, r4
 80218ce:	2900      	cmp	r1, #0
 80218d0:	f000 8097 	beq.w	8021a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80218d4:	18b0      	adds	r0, r6, r2
 80218d6:	5cb2      	ldrb	r2, [r6, r2]
 80218d8:	7840      	ldrb	r0, [r0, #1]
 80218da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80218de:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80218e2:	4422      	add	r2, r4
 80218e4:	4420      	add	r0, r4
 80218e6:	b29b      	uxth	r3, r3
 80218e8:	b289      	uxth	r1, r1
 80218ea:	fb03 f801 	mul.w	r8, r3, r1
 80218ee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80218f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80218f4:	f8b6 c000 	ldrh.w	ip, [r6]
 80218f8:	78be      	ldrb	r6, [r7, #2]
 80218fa:	f814 9009 	ldrb.w	r9, [r4, r9]
 80218fe:	011b      	lsls	r3, r3, #4
 8021900:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021904:	b289      	uxth	r1, r1
 8021906:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802190a:	eba3 0308 	sub.w	r3, r3, r8
 802190e:	b29b      	uxth	r3, r3
 8021910:	ebae 0e01 	sub.w	lr, lr, r1
 8021914:	fa1f fe8e 	uxth.w	lr, lr
 8021918:	435e      	muls	r6, r3
 802191a:	fb0e 660b 	mla	r6, lr, fp, r6
 802191e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021922:	9310      	str	r3, [sp, #64]	; 0x40
 8021924:	fb01 660b 	mla	r6, r1, fp, r6
 8021928:	f890 b002 	ldrb.w	fp, [r0, #2]
 802192c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802192e:	fb08 660b 	mla	r6, r8, fp, r6
 8021932:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021936:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802193a:	fb1b fb03 	smulbb	fp, fp, r3
 802193e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021942:	fb06 b60a 	mla	r6, r6, sl, fp
 8021946:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021948:	f895 b001 	ldrb.w	fp, [r5, #1]
 802194c:	787d      	ldrb	r5, [r7, #1]
 802194e:	783f      	ldrb	r7, [r7, #0]
 8021950:	435d      	muls	r5, r3
 8021952:	fb0e 550b 	mla	r5, lr, fp, r5
 8021956:	f892 b001 	ldrb.w	fp, [r2, #1]
 802195a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802195c:	fb01 550b 	mla	r5, r1, fp, r5
 8021960:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021964:	fb08 550b 	mla	r5, r8, fp, r5
 8021968:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802196c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021970:	fb1b fb03 	smulbb	fp, fp, r3
 8021974:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021976:	437b      	muls	r3, r7
 8021978:	7817      	ldrb	r7, [r2, #0]
 802197a:	fb0e 3309 	mla	r3, lr, r9, r3
 802197e:	fb01 3307 	mla	r3, r1, r7, r3
 8021982:	7807      	ldrb	r7, [r0, #0]
 8021984:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021988:	fb08 3707 	mla	r7, r8, r7, r3
 802198c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802198e:	fa5f fc8c 	uxtb.w	ip, ip
 8021992:	fb1c fc03 	smulbb	ip, ip, r3
 8021996:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802199a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802199e:	fb05 b50a 	mla	r5, r5, sl, fp
 80219a2:	fb07 c70a 	mla	r7, r7, sl, ip
 80219a6:	b2b6      	uxth	r6, r6
 80219a8:	b2ad      	uxth	r5, r5
 80219aa:	b2bf      	uxth	r7, r7
 80219ac:	1c73      	adds	r3, r6, #1
 80219ae:	1c7a      	adds	r2, r7, #1
 80219b0:	f105 0b01 	add.w	fp, r5, #1
 80219b4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80219b8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80219bc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80219c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80219c4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80219c8:	096d      	lsrs	r5, r5, #5
 80219ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219cc:	4316      	orrs	r6, r2
 80219ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219d2:	432e      	orrs	r6, r5
 80219d4:	f823 6b02 	strh.w	r6, [r3], #2
 80219d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80219da:	930c      	str	r3, [sp, #48]	; 0x30
 80219dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80219de:	4413      	add	r3, r2
 80219e0:	931f      	str	r3, [sp, #124]	; 0x7c
 80219e2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80219e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80219e6:	4413      	add	r3, r2
 80219e8:	9320      	str	r3, [sp, #128]	; 0x80
 80219ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219ec:	3b01      	subs	r3, #1
 80219ee:	9311      	str	r3, [sp, #68]	; 0x44
 80219f0:	e6db      	b.n	80217aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80219f2:	b149      	cbz	r1, 8021a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80219f4:	5cb2      	ldrb	r2, [r6, r2]
 80219f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80219fa:	4422      	add	r2, r4
 80219fc:	4628      	mov	r0, r5
 80219fe:	462f      	mov	r7, r5
 8021a00:	e771      	b.n	80218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021a02:	4628      	mov	r0, r5
 8021a04:	462a      	mov	r2, r5
 8021a06:	e76e      	b.n	80218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021a08:	4628      	mov	r0, r5
 8021a0a:	462a      	mov	r2, r5
 8021a0c:	e7f7      	b.n	80219fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021a0e:	b015      	add	sp, #84	; 0x54
 8021a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021a14:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a18:	880f      	ldrh	r7, [r1, #0]
 8021a1a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8021a1e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021a22:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021a26:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021a2a:	023c      	lsls	r4, r7, #8
 8021a2c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021a30:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021a34:	017c      	lsls	r4, r7, #5
 8021a36:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8021a3a:	00ff      	lsls	r7, r7, #3
 8021a3c:	ea4b 0404 	orr.w	r4, fp, r4
 8021a40:	b2ff      	uxtb	r7, r7
 8021a42:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021a46:	4327      	orrs	r7, r4
 8021a48:	2d00      	cmp	r5, #0
 8021a4a:	eb02 080a 	add.w	r8, r2, sl
 8021a4e:	9701      	str	r7, [sp, #4]
 8021a50:	db7e      	blt.n	8021b50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021a52:	45a9      	cmp	r9, r5
 8021a54:	dd7c      	ble.n	8021b50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021a56:	f1bc 0f00 	cmp.w	ip, #0
 8021a5a:	db77      	blt.n	8021b4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021a5c:	45e6      	cmp	lr, ip
 8021a5e:	dd75      	ble.n	8021b4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021a60:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021a64:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021a68:	441f      	add	r7, r3
 8021a6a:	f11c 0201 	adds.w	r2, ip, #1
 8021a6e:	d472      	bmi.n	8021b56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a70:	4596      	cmp	lr, r2
 8021a72:	dd70      	ble.n	8021b56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a74:	2800      	cmp	r0, #0
 8021a76:	d06e      	beq.n	8021b56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a78:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021a7c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021a80:	441c      	add	r4, r3
 8021a82:	3501      	adds	r5, #1
 8021a84:	d46b      	bmi.n	8021b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a86:	45a9      	cmp	r9, r5
 8021a88:	dd69      	ble.n	8021b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a8a:	2e00      	cmp	r6, #0
 8021a8c:	d067      	beq.n	8021b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a8e:	f1bc 0f00 	cmp.w	ip, #0
 8021a92:	db62      	blt.n	8021b5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021a94:	45e6      	cmp	lr, ip
 8021a96:	dd60      	ble.n	8021b5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021a98:	f818 500e 	ldrb.w	r5, [r8, lr]
 8021a9c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021aa0:	441d      	add	r5, r3
 8021aa2:	f11c 0201 	adds.w	r2, ip, #1
 8021aa6:	d45d      	bmi.n	8021b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021aa8:	4596      	cmp	lr, r2
 8021aaa:	dd5b      	ble.n	8021b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021aac:	2800      	cmp	r0, #0
 8021aae:	d059      	beq.n	8021b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021ab0:	44c6      	add	lr, r8
 8021ab2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021ab6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021aba:	4413      	add	r3, r2
 8021abc:	b280      	uxth	r0, r0
 8021abe:	b2b2      	uxth	r2, r6
 8021ac0:	fb00 f602 	mul.w	r6, r0, r2
 8021ac4:	0100      	lsls	r0, r0, #4
 8021ac6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021aca:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8021ace:	1b80      	subs	r0, r0, r6
 8021ad0:	fa1f fc82 	uxth.w	ip, r2
 8021ad4:	b282      	uxth	r2, r0
 8021ad6:	78a0      	ldrb	r0, [r4, #2]
 8021ad8:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021adc:	f897 9000 	ldrb.w	r9, [r7]
 8021ae0:	787f      	ldrb	r7, [r7, #1]
 8021ae2:	eba8 080c 	sub.w	r8, r8, ip
 8021ae6:	fa1f f888 	uxth.w	r8, r8
 8021aea:	4350      	muls	r0, r2
 8021aec:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021af0:	78a8      	ldrb	r0, [r5, #2]
 8021af2:	fb0c e000 	mla	r0, ip, r0, lr
 8021af6:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021afa:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021afe:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021b02:	f894 e000 	ldrb.w	lr, [r4]
 8021b06:	fb02 fe0e 	mul.w	lr, r2, lr
 8021b0a:	fb08 e909 	mla	r9, r8, r9, lr
 8021b0e:	f895 e000 	ldrb.w	lr, [r5]
 8021b12:	fb0c 990e 	mla	r9, ip, lr, r9
 8021b16:	f893 e000 	ldrb.w	lr, [r3]
 8021b1a:	785b      	ldrb	r3, [r3, #1]
 8021b1c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021b20:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021b24:	ea4e 0e00 	orr.w	lr, lr, r0
 8021b28:	7860      	ldrb	r0, [r4, #1]
 8021b2a:	4350      	muls	r0, r2
 8021b2c:	786a      	ldrb	r2, [r5, #1]
 8021b2e:	fb08 0007 	mla	r0, r8, r7, r0
 8021b32:	fb0c 0202 	mla	r2, ip, r2, r0
 8021b36:	fb06 2303 	mla	r3, r6, r3, r2
 8021b3a:	095b      	lsrs	r3, r3, #5
 8021b3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b40:	ea4e 0303 	orr.w	r3, lr, r3
 8021b44:	800b      	strh	r3, [r1, #0]
 8021b46:	b003      	add	sp, #12
 8021b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b4c:	af01      	add	r7, sp, #4
 8021b4e:	e78c      	b.n	8021a6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021b50:	ac01      	add	r4, sp, #4
 8021b52:	4627      	mov	r7, r4
 8021b54:	e795      	b.n	8021a82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021b56:	ac01      	add	r4, sp, #4
 8021b58:	e793      	b.n	8021a82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021b5a:	ad01      	add	r5, sp, #4
 8021b5c:	e7a1      	b.n	8021aa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021b5e:	ab01      	add	r3, sp, #4
 8021b60:	461d      	mov	r5, r3
 8021b62:	e7ab      	b.n	8021abc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021b64:	ab01      	add	r3, sp, #4
 8021b66:	e7a9      	b.n	8021abc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b6c:	b08f      	sub	sp, #60	; 0x3c
 8021b6e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021b72:	920c      	str	r2, [sp, #48]	; 0x30
 8021b74:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021b76:	910a      	str	r1, [sp, #40]	; 0x28
 8021b78:	9306      	str	r3, [sp, #24]
 8021b7a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8021b7e:	900d      	str	r0, [sp, #52]	; 0x34
 8021b80:	6850      	ldr	r0, [r2, #4]
 8021b82:	6812      	ldr	r2, [r2, #0]
 8021b84:	fb00 1303 	mla	r3, r0, r3, r1
 8021b88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021b8c:	9307      	str	r3, [sp, #28]
 8021b8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b90:	681b      	ldr	r3, [r3, #0]
 8021b92:	9308      	str	r3, [sp, #32]
 8021b94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b96:	685c      	ldr	r4, [r3, #4]
 8021b98:	3404      	adds	r4, #4
 8021b9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b9c:	2b00      	cmp	r3, #0
 8021b9e:	dc03      	bgt.n	8021ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021ba0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021ba2:	2b00      	cmp	r3, #0
 8021ba4:	f340 81d6 	ble.w	8021f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021ba8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021baa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021bae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021bb2:	1e48      	subs	r0, r1, #1
 8021bb4:	1e56      	subs	r6, r2, #1
 8021bb6:	9b06      	ldr	r3, [sp, #24]
 8021bb8:	2b00      	cmp	r3, #0
 8021bba:	f340 80b7 	ble.w	8021d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021bbe:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021bc2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021bc6:	d406      	bmi.n	8021bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bc8:	4287      	cmp	r7, r0
 8021bca:	da04      	bge.n	8021bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bcc:	2b00      	cmp	r3, #0
 8021bce:	db02      	blt.n	8021bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bd0:	42b3      	cmp	r3, r6
 8021bd2:	f2c0 80ac 	blt.w	8021d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021bd6:	3701      	adds	r7, #1
 8021bd8:	f100 809d 	bmi.w	8021d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bdc:	42b9      	cmp	r1, r7
 8021bde:	f2c0 809a 	blt.w	8021d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021be2:	3301      	adds	r3, #1
 8021be4:	f100 8097 	bmi.w	8021d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021be8:	429a      	cmp	r2, r3
 8021bea:	f2c0 8094 	blt.w	8021d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bee:	9b06      	ldr	r3, [sp, #24]
 8021bf0:	930b      	str	r3, [sp, #44]	; 0x2c
 8021bf2:	9b07      	ldr	r3, [sp, #28]
 8021bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8021bf6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021bf8:	2b00      	cmp	r3, #0
 8021bfa:	f340 80b5 	ble.w	8021d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021bfe:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021c00:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021c02:	68c7      	ldr	r7, [r0, #12]
 8021c04:	6892      	ldr	r2, [r2, #8]
 8021c06:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021c0a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021c0e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021c12:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021c16:	f100 80fb 	bmi.w	8021e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c1a:	f102 3cff 	add.w	ip, r2, #4294967295
 8021c1e:	4560      	cmp	r0, ip
 8021c20:	f280 80f6 	bge.w	8021e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c24:	2e00      	cmp	r6, #0
 8021c26:	f2c0 80f3 	blt.w	8021e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c2a:	f107 3cff 	add.w	ip, r7, #4294967295
 8021c2e:	4566      	cmp	r6, ip
 8021c30:	f280 80ee 	bge.w	8021e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c34:	b212      	sxth	r2, r2
 8021c36:	fb06 0002 	mla	r0, r6, r2, r0
 8021c3a:	9e08      	ldr	r6, [sp, #32]
 8021c3c:	1837      	adds	r7, r6, r0
 8021c3e:	5c30      	ldrb	r0, [r6, r0]
 8021c40:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021c44:	eb04 0c08 	add.w	ip, r4, r8
 8021c48:	2b00      	cmp	r3, #0
 8021c4a:	f000 80d3 	beq.w	8021df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021c4e:	787e      	ldrb	r6, [r7, #1]
 8021c50:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021c54:	4426      	add	r6, r4
 8021c56:	2900      	cmp	r1, #0
 8021c58:	f000 80d4 	beq.w	8021e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021c5c:	18b8      	adds	r0, r7, r2
 8021c5e:	5cba      	ldrb	r2, [r7, r2]
 8021c60:	7840      	ldrb	r0, [r0, #1]
 8021c62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c66:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021c6a:	4422      	add	r2, r4
 8021c6c:	4420      	add	r0, r4
 8021c6e:	b29b      	uxth	r3, r3
 8021c70:	b289      	uxth	r1, r1
 8021c72:	fb03 f901 	mul.w	r9, r3, r1
 8021c76:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021c7a:	011b      	lsls	r3, r3, #4
 8021c7c:	b289      	uxth	r1, r1
 8021c7e:	78b7      	ldrb	r7, [r6, #2]
 8021c80:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021c84:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021c88:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021c8c:	eba3 0309 	sub.w	r3, r3, r9
 8021c90:	b29b      	uxth	r3, r3
 8021c92:	ebae 0e01 	sub.w	lr, lr, r1
 8021c96:	fa1f fe8e 	uxth.w	lr, lr
 8021c9a:	435f      	muls	r7, r3
 8021c9c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021ca0:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021ca4:	fb01 770a 	mla	r7, r1, sl, r7
 8021ca8:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021cac:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021cb0:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021cb4:	f896 8000 	ldrb.w	r8, [r6]
 8021cb8:	7876      	ldrb	r6, [r6, #1]
 8021cba:	fb03 f808 	mul.w	r8, r3, r8
 8021cbe:	fb0e 8807 	mla	r8, lr, r7, r8
 8021cc2:	7817      	ldrb	r7, [r2, #0]
 8021cc4:	fb01 8807 	mla	r8, r1, r7, r8
 8021cc8:	7807      	ldrb	r7, [r0, #0]
 8021cca:	fb09 8707 	mla	r7, r9, r7, r8
 8021cce:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021cd2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021cd6:	ea47 070a 	orr.w	r7, r7, sl
 8021cda:	4373      	muls	r3, r6
 8021cdc:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021ce0:	fb0e 330c 	mla	r3, lr, ip, r3
 8021ce4:	fb01 310a 	mla	r1, r1, sl, r3
 8021ce8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021cec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cee:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021cf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021cf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021cfa:	ea47 070a 	orr.w	r7, r7, sl
 8021cfe:	801f      	strh	r7, [r3, #0]
 8021d00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d02:	3302      	adds	r3, #2
 8021d04:	9309      	str	r3, [sp, #36]	; 0x24
 8021d06:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d08:	449b      	add	fp, r3
 8021d0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021d0c:	441d      	add	r5, r3
 8021d0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d10:	3b01      	subs	r3, #1
 8021d12:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d14:	e76f      	b.n	8021bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021d16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d18:	449b      	add	fp, r3
 8021d1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021d1c:	441d      	add	r5, r3
 8021d1e:	9b06      	ldr	r3, [sp, #24]
 8021d20:	3b01      	subs	r3, #1
 8021d22:	9306      	str	r3, [sp, #24]
 8021d24:	9b07      	ldr	r3, [sp, #28]
 8021d26:	3302      	adds	r3, #2
 8021d28:	9307      	str	r3, [sp, #28]
 8021d2a:	e744      	b.n	8021bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021d2c:	d023      	beq.n	8021d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021d2e:	9b06      	ldr	r3, [sp, #24]
 8021d30:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021d32:	3b01      	subs	r3, #1
 8021d34:	fb00 b003 	mla	r0, r0, r3, fp
 8021d38:	1400      	asrs	r0, r0, #16
 8021d3a:	f53f af58 	bmi.w	8021bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d3e:	3901      	subs	r1, #1
 8021d40:	4288      	cmp	r0, r1
 8021d42:	f6bf af54 	bge.w	8021bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d46:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021d48:	fb01 5303 	mla	r3, r1, r3, r5
 8021d4c:	141b      	asrs	r3, r3, #16
 8021d4e:	f53f af4e 	bmi.w	8021bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d52:	3a01      	subs	r2, #1
 8021d54:	4293      	cmp	r3, r2
 8021d56:	f6bf af4a 	bge.w	8021bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d5a:	9b06      	ldr	r3, [sp, #24]
 8021d5c:	9309      	str	r3, [sp, #36]	; 0x24
 8021d5e:	9b07      	ldr	r3, [sp, #28]
 8021d60:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d64:	2b00      	cmp	r3, #0
 8021d66:	dc70      	bgt.n	8021e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021d68:	9b06      	ldr	r3, [sp, #24]
 8021d6a:	9a07      	ldr	r2, [sp, #28]
 8021d6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021d70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d74:	9307      	str	r3, [sp, #28]
 8021d76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d78:	2b00      	cmp	r3, #0
 8021d7a:	f340 80eb 	ble.w	8021f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021d7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d82:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d86:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d8a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d98:	eef0 6a62 	vmov.f32	s13, s5
 8021d9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021da0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021da4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021da8:	ee16 ba90 	vmov	fp, s13
 8021dac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021db0:	eef0 6a43 	vmov.f32	s13, s6
 8021db4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021db8:	ee12 2a90 	vmov	r2, s5
 8021dbc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021dc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dc4:	ee13 2a10 	vmov	r2, s6
 8021dc8:	931b      	str	r3, [sp, #108]	; 0x6c
 8021dca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021dcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dd0:	931c      	str	r3, [sp, #112]	; 0x70
 8021dd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021dd4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021dd6:	3b01      	subs	r3, #1
 8021dd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ddc:	930a      	str	r3, [sp, #40]	; 0x28
 8021dde:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021de0:	bf08      	it	eq
 8021de2:	4613      	moveq	r3, r2
 8021de4:	ee16 5a90 	vmov	r5, s13
 8021de8:	9306      	str	r3, [sp, #24]
 8021dea:	eeb0 3a67 	vmov.f32	s6, s15
 8021dee:	eef0 2a47 	vmov.f32	s5, s14
 8021df2:	e6d2      	b.n	8021b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8021df4:	b149      	cbz	r1, 8021e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021df6:	5cba      	ldrb	r2, [r7, r2]
 8021df8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021dfc:	4422      	add	r2, r4
 8021dfe:	4660      	mov	r0, ip
 8021e00:	4666      	mov	r6, ip
 8021e02:	e734      	b.n	8021c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021e04:	4660      	mov	r0, ip
 8021e06:	4662      	mov	r2, ip
 8021e08:	e731      	b.n	8021c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021e0a:	4660      	mov	r0, ip
 8021e0c:	4662      	mov	r2, ip
 8021e0e:	e7f7      	b.n	8021e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021e10:	f110 0c01 	adds.w	ip, r0, #1
 8021e14:	f53f af74 	bmi.w	8021d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e18:	4562      	cmp	r2, ip
 8021e1a:	f6ff af71 	blt.w	8021d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e1e:	f116 0c01 	adds.w	ip, r6, #1
 8021e22:	f53f af6d 	bmi.w	8021d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e26:	4567      	cmp	r7, ip
 8021e28:	f6ff af6a 	blt.w	8021d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e2c:	b23f      	sxth	r7, r7
 8021e2e:	b212      	sxth	r2, r2
 8021e30:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021e34:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021e38:	9200      	str	r2, [sp, #0]
 8021e3a:	9701      	str	r7, [sp, #4]
 8021e3c:	4623      	mov	r3, r4
 8021e3e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021e42:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021e44:	f7ff fde6 	bl	8021a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021e48:	e75a      	b.n	8021d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e4a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021e4c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021e50:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021e54:	1428      	asrs	r0, r5, #16
 8021e56:	fb02 6000 	mla	r0, r2, r0, r6
 8021e5a:	9e08      	ldr	r6, [sp, #32]
 8021e5c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021e60:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021e64:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021e68:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021e6c:	1837      	adds	r7, r6, r0
 8021e6e:	eb04 0c08 	add.w	ip, r4, r8
 8021e72:	2b00      	cmp	r3, #0
 8021e74:	d060      	beq.n	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021e76:	787e      	ldrb	r6, [r7, #1]
 8021e78:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021e7c:	4426      	add	r6, r4
 8021e7e:	2900      	cmp	r1, #0
 8021e80:	d062      	beq.n	8021f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021e82:	18b8      	adds	r0, r7, r2
 8021e84:	5cba      	ldrb	r2, [r7, r2]
 8021e86:	7840      	ldrb	r0, [r0, #1]
 8021e88:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021e8c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021e90:	4422      	add	r2, r4
 8021e92:	4420      	add	r0, r4
 8021e94:	b29b      	uxth	r3, r3
 8021e96:	b289      	uxth	r1, r1
 8021e98:	fb03 f901 	mul.w	r9, r3, r1
 8021e9c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021ea0:	011b      	lsls	r3, r3, #4
 8021ea2:	b289      	uxth	r1, r1
 8021ea4:	78b7      	ldrb	r7, [r6, #2]
 8021ea6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021eaa:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021eae:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021eb2:	eba3 0309 	sub.w	r3, r3, r9
 8021eb6:	b29b      	uxth	r3, r3
 8021eb8:	ebae 0e01 	sub.w	lr, lr, r1
 8021ebc:	fa1f fe8e 	uxth.w	lr, lr
 8021ec0:	435f      	muls	r7, r3
 8021ec2:	fb0e 770a 	mla	r7, lr, sl, r7
 8021ec6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021eca:	fb01 770a 	mla	r7, r1, sl, r7
 8021ece:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021ed2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021ed6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021eda:	f896 8000 	ldrb.w	r8, [r6]
 8021ede:	7876      	ldrb	r6, [r6, #1]
 8021ee0:	fb03 f808 	mul.w	r8, r3, r8
 8021ee4:	fb0e 8807 	mla	r8, lr, r7, r8
 8021ee8:	7817      	ldrb	r7, [r2, #0]
 8021eea:	fb01 8807 	mla	r8, r1, r7, r8
 8021eee:	7807      	ldrb	r7, [r0, #0]
 8021ef0:	fb09 8707 	mla	r7, r9, r7, r8
 8021ef4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021ef8:	4373      	muls	r3, r6
 8021efa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021efe:	7856      	ldrb	r6, [r2, #1]
 8021f00:	ea47 070a 	orr.w	r7, r7, sl
 8021f04:	fb0e 330c 	mla	r3, lr, ip, r3
 8021f08:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021f0c:	fb01 3306 	mla	r3, r1, r6, r3
 8021f10:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021f14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021f18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021f1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021f1e:	ea47 070a 	orr.w	r7, r7, sl
 8021f22:	f823 7b02 	strh.w	r7, [r3], #2
 8021f26:	930b      	str	r3, [sp, #44]	; 0x2c
 8021f28:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021f2a:	449b      	add	fp, r3
 8021f2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f2e:	441d      	add	r5, r3
 8021f30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f32:	3b01      	subs	r3, #1
 8021f34:	9309      	str	r3, [sp, #36]	; 0x24
 8021f36:	e714      	b.n	8021d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021f38:	b149      	cbz	r1, 8021f4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021f3a:	5cba      	ldrb	r2, [r7, r2]
 8021f3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021f40:	4422      	add	r2, r4
 8021f42:	4660      	mov	r0, ip
 8021f44:	4666      	mov	r6, ip
 8021f46:	e7a5      	b.n	8021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021f48:	4660      	mov	r0, ip
 8021f4a:	4662      	mov	r2, ip
 8021f4c:	e7a2      	b.n	8021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021f4e:	4660      	mov	r0, ip
 8021f50:	4662      	mov	r2, ip
 8021f52:	e7f7      	b.n	8021f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021f54:	b00f      	add	sp, #60	; 0x3c
 8021f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021f5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f5e:	b085      	sub	sp, #20
 8021f60:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8021f64:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021f68:	9102      	str	r1, [sp, #8]
 8021f6a:	2c00      	cmp	r4, #0
 8021f6c:	fb04 710c 	mla	r1, r4, ip, r7
 8021f70:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021f74:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021f78:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021f7c:	eb02 0e01 	add.w	lr, r2, r1
 8021f80:	f2c0 8122 	blt.w	80221c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021f84:	45a0      	cmp	r8, r4
 8021f86:	f340 811f 	ble.w	80221c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021f8a:	2f00      	cmp	r7, #0
 8021f8c:	f2c0 811a 	blt.w	80221c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021f90:	45bc      	cmp	ip, r7
 8021f92:	f340 8117 	ble.w	80221c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021f96:	5c52      	ldrb	r2, [r2, r1]
 8021f98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8021f9c:	1c7a      	adds	r2, r7, #1
 8021f9e:	f100 8116 	bmi.w	80221ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021fa2:	4594      	cmp	ip, r2
 8021fa4:	f340 8113 	ble.w	80221ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021fa8:	2e00      	cmp	r6, #0
 8021faa:	f000 8112 	beq.w	80221d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021fae:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021fb2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021fb6:	3401      	adds	r4, #1
 8021fb8:	f100 810f 	bmi.w	80221da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021fbc:	45a0      	cmp	r8, r4
 8021fbe:	f340 810c 	ble.w	80221da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021fc2:	2800      	cmp	r0, #0
 8021fc4:	f000 810c 	beq.w	80221e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021fc8:	2f00      	cmp	r7, #0
 8021fca:	f2c0 8104 	blt.w	80221d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021fce:	45bc      	cmp	ip, r7
 8021fd0:	f340 8101 	ble.w	80221d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021fd4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021fd8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021fdc:	3701      	adds	r7, #1
 8021fde:	f100 8102 	bmi.w	80221e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021fe2:	45bc      	cmp	ip, r7
 8021fe4:	f340 80ff 	ble.w	80221e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021fe8:	2e00      	cmp	r6, #0
 8021fea:	f000 80fe 	beq.w	80221ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021fee:	44f4      	add	ip, lr
 8021ff0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021ff4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021ff8:	b2b6      	uxth	r6, r6
 8021ffa:	b280      	uxth	r0, r0
 8021ffc:	fb00 fe06 	mul.w	lr, r0, r6
 8022000:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022004:	0136      	lsls	r6, r6, #4
 8022006:	eba6 070e 	sub.w	r7, r6, lr
 802200a:	b280      	uxth	r0, r0
 802200c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022010:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022014:	b2bf      	uxth	r7, r7
 8022016:	1a1b      	subs	r3, r3, r0
 8022018:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802201c:	b29b      	uxth	r3, r3
 802201e:	fb0a f607 	mul.w	r6, sl, r7
 8022022:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022026:	fb0b 6603 	mla	r6, fp, r3, r6
 802202a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802202e:	fb00 6609 	mla	r6, r0, r9, r6
 8022032:	fb0e 6608 	mla	r6, lr, r8, r6
 8022036:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802203a:	9600      	str	r6, [sp, #0]
 802203c:	2e00      	cmp	r6, #0
 802203e:	f000 80be 	beq.w	80221be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8022042:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022046:	fb0b fc0c 	mul.w	ip, fp, ip
 802204a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802204e:	fb0b f505 	mul.w	r5, fp, r5
 8022052:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022056:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802205a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802205e:	44dc      	add	ip, fp
 8022060:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022064:	9501      	str	r5, [sp, #4]
 8022066:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802206a:	9503      	str	r5, [sp, #12]
 802206c:	9d01      	ldr	r5, [sp, #4]
 802206e:	9e02      	ldr	r6, [sp, #8]
 8022070:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022074:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022078:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802207c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022080:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022084:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022088:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802208c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022090:	4465      	add	r5, ip
 8022092:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022096:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802209a:	fb09 fc0c 	mul.w	ip, r9, ip
 802209e:	fb09 f904 	mul.w	r9, r9, r4
 80220a2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80220a6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80220aa:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80220ae:	fb08 f404 	mul.w	r4, r8, r4
 80220b2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80220b6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80220ba:	fb08 f802 	mul.w	r8, r8, r2
 80220be:	fb0a fa01 	mul.w	sl, sl, r1
 80220c2:	0a22      	lsrs	r2, r4, #8
 80220c4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80220c8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80220cc:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80220d0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80220d4:	4414      	add	r4, r2
 80220d6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80220da:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80220de:	0a2d      	lsrs	r5, r5, #8
 80220e0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80220e4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80220e8:	9a03      	ldr	r2, [sp, #12]
 80220ea:	8836      	ldrh	r6, [r6, #0]
 80220ec:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80220f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80220f4:	437d      	muls	r5, r7
 80220f6:	4461      	add	r1, ip
 80220f8:	0a24      	lsrs	r4, r4, #8
 80220fa:	fb02 5503 	mla	r5, r2, r3, r5
 80220fe:	0a09      	lsrs	r1, r1, #8
 8022100:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022104:	fb04 540e 	mla	r4, r4, lr, r5
 8022108:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802210c:	fb01 4100 	mla	r1, r1, r0, r4
 8022110:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022114:	0a09      	lsrs	r1, r1, #8
 8022116:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802211a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802211e:	fb07 f70a 	mul.w	r7, r7, sl
 8022122:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022126:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802212a:	fb03 7101 	mla	r1, r3, r1, r7
 802212e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022132:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022136:	fb0e 1e08 	mla	lr, lr, r8, r1
 802213a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802213e:	fb00 e101 	mla	r1, r0, r1, lr
 8022142:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8022146:	9a00      	ldr	r2, [sp, #0]
 8022148:	b287      	uxth	r7, r0
 802214a:	437a      	muls	r2, r7
 802214c:	0a09      	lsrs	r1, r1, #8
 802214e:	1c53      	adds	r3, r2, #1
 8022150:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022154:	4321      	orrs	r1, r4
 8022156:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802215a:	1235      	asrs	r5, r6, #8
 802215c:	0c0a      	lsrs	r2, r1, #16
 802215e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022162:	b2db      	uxtb	r3, r3
 8022164:	fb12 f207 	smulbb	r2, r2, r7
 8022168:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802216c:	fb05 2503 	mla	r5, r5, r3, r2
 8022170:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022174:	10f2      	asrs	r2, r6, #3
 8022176:	b2c8      	uxtb	r0, r1
 8022178:	00f6      	lsls	r6, r6, #3
 802217a:	fb14 f407 	smulbb	r4, r4, r7
 802217e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022182:	b2f6      	uxtb	r6, r6
 8022184:	fb10 f007 	smulbb	r0, r0, r7
 8022188:	fb02 4203 	mla	r2, r2, r3, r4
 802218c:	b2ad      	uxth	r5, r5
 802218e:	fb06 0303 	mla	r3, r6, r3, r0
 8022192:	b299      	uxth	r1, r3
 8022194:	b294      	uxth	r4, r2
 8022196:	1c6b      	adds	r3, r5, #1
 8022198:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802219c:	1c62      	adds	r2, r4, #1
 802219e:	1c4b      	adds	r3, r1, #1
 80221a0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80221a4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80221a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80221ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80221b0:	0952      	lsrs	r2, r2, #5
 80221b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221b6:	432b      	orrs	r3, r5
 80221b8:	4313      	orrs	r3, r2
 80221ba:	9a02      	ldr	r2, [sp, #8]
 80221bc:	8013      	strh	r3, [r2, #0]
 80221be:	b005      	add	sp, #20
 80221c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221c4:	2500      	movs	r5, #0
 80221c6:	e6e9      	b.n	8021f9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80221c8:	2100      	movs	r1, #0
 80221ca:	460d      	mov	r5, r1
 80221cc:	e6f3      	b.n	8021fb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221ce:	2100      	movs	r1, #0
 80221d0:	e6f1      	b.n	8021fb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221d2:	4631      	mov	r1, r6
 80221d4:	e6ef      	b.n	8021fb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221d6:	2400      	movs	r4, #0
 80221d8:	e700      	b.n	8021fdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80221da:	2200      	movs	r2, #0
 80221dc:	4614      	mov	r4, r2
 80221de:	e70b      	b.n	8021ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221e0:	4602      	mov	r2, r0
 80221e2:	4604      	mov	r4, r0
 80221e4:	e708      	b.n	8021ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221e6:	2200      	movs	r2, #0
 80221e8:	e706      	b.n	8021ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221ea:	4632      	mov	r2, r6
 80221ec:	e704      	b.n	8021ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080221ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80221ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221f2:	b09f      	sub	sp, #124	; 0x7c
 80221f4:	921b      	str	r2, [sp, #108]	; 0x6c
 80221f6:	9309      	str	r3, [sp, #36]	; 0x24
 80221f8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80221fa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80221fe:	931c      	str	r3, [sp, #112]	; 0x70
 8022200:	9119      	str	r1, [sp, #100]	; 0x64
 8022202:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8022206:	901d      	str	r0, [sp, #116]	; 0x74
 8022208:	6850      	ldr	r0, [r2, #4]
 802220a:	6812      	ldr	r2, [r2, #0]
 802220c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802220e:	fb00 1303 	mla	r3, r0, r3, r1
 8022212:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022216:	930c      	str	r3, [sp, #48]	; 0x30
 8022218:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802221a:	681b      	ldr	r3, [r3, #0]
 802221c:	9312      	str	r3, [sp, #72]	; 0x48
 802221e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022220:	685e      	ldr	r6, [r3, #4]
 8022222:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8022226:	930d      	str	r3, [sp, #52]	; 0x34
 8022228:	3604      	adds	r6, #4
 802222a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802222c:	2b00      	cmp	r3, #0
 802222e:	dc03      	bgt.n	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022230:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022232:	2b00      	cmp	r3, #0
 8022234:	f340 8388 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022238:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802223a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802223e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022242:	1e48      	subs	r0, r1, #1
 8022244:	1e57      	subs	r7, r2, #1
 8022246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022248:	2b00      	cmp	r3, #0
 802224a:	f340 8195 	ble.w	8022578 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802224e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022250:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022254:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022258:	d406      	bmi.n	8022268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802225a:	4584      	cmp	ip, r0
 802225c:	da04      	bge.n	8022268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802225e:	2b00      	cmp	r3, #0
 8022260:	db02      	blt.n	8022268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022262:	42bb      	cmp	r3, r7
 8022264:	f2c0 8189 	blt.w	802257a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8022268:	f11c 0c01 	adds.w	ip, ip, #1
 802226c:	f100 8177 	bmi.w	802255e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022270:	4561      	cmp	r1, ip
 8022272:	f2c0 8174 	blt.w	802255e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022276:	3301      	adds	r3, #1
 8022278:	f100 8171 	bmi.w	802255e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802227c:	429a      	cmp	r2, r3
 802227e:	f2c0 816e 	blt.w	802255e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022284:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8022286:	931a      	str	r3, [sp, #104]	; 0x68
 8022288:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802228a:	2b00      	cmp	r3, #0
 802228c:	f340 8193 	ble.w	80225b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8022290:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022292:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022296:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022298:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802229c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802229e:	141b      	asrs	r3, r3, #16
 80222a0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80222a4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80222a8:	f100 81d6 	bmi.w	8022658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222ac:	f100 38ff 	add.w	r8, r0, #4294967295
 80222b0:	4543      	cmp	r3, r8
 80222b2:	f280 81d1 	bge.w	8022658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222b6:	f1bc 0f00 	cmp.w	ip, #0
 80222ba:	f2c0 81cd 	blt.w	8022658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222be:	f10e 38ff 	add.w	r8, lr, #4294967295
 80222c2:	45c4      	cmp	ip, r8
 80222c4:	f280 81c8 	bge.w	8022658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222c8:	b200      	sxth	r0, r0
 80222ca:	fb0c 3300 	mla	r3, ip, r0, r3
 80222ce:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80222d0:	eb04 0803 	add.w	r8, r4, r3
 80222d4:	5ce3      	ldrb	r3, [r4, r3]
 80222d6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80222da:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80222de:	2a00      	cmp	r2, #0
 80222e0:	f000 81af 	beq.w	8022642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80222e4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80222e8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80222ec:	940e      	str	r4, [sp, #56]	; 0x38
 80222ee:	0e24      	lsrs	r4, r4, #24
 80222f0:	9415      	str	r4, [sp, #84]	; 0x54
 80222f2:	b179      	cbz	r1, 8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80222f4:	eb08 0c00 	add.w	ip, r8, r0
 80222f8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80222fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022300:	900a      	str	r0, [sp, #40]	; 0x28
 8022302:	0e00      	lsrs	r0, r0, #24
 8022304:	9013      	str	r0, [sp, #76]	; 0x4c
 8022306:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802230a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802230e:	900f      	str	r0, [sp, #60]	; 0x3c
 8022310:	0e00      	lsrs	r0, r0, #24
 8022312:	9016      	str	r0, [sp, #88]	; 0x58
 8022314:	b292      	uxth	r2, r2
 8022316:	b289      	uxth	r1, r1
 8022318:	fb02 f901 	mul.w	r9, r2, r1
 802231c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022320:	0112      	lsls	r2, r2, #4
 8022322:	eba2 0809 	sub.w	r8, r2, r9
 8022326:	b289      	uxth	r1, r1
 8022328:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802232c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802232e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022330:	fa1f f888 	uxth.w	r8, r8
 8022334:	1a52      	subs	r2, r2, r1
 8022336:	b292      	uxth	r2, r2
 8022338:	fb08 f000 	mul.w	r0, r8, r0
 802233c:	fb02 000e 	mla	r0, r2, lr, r0
 8022340:	fb01 0004 	mla	r0, r1, r4, r0
 8022344:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022346:	fb09 0004 	mla	r0, r9, r4, r0
 802234a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802234e:	2800      	cmp	r0, #0
 8022350:	f000 80fa 	beq.w	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022354:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022358:	d01b      	beq.n	8022392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802235a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802235e:	fb0e fa0a 	mul.w	sl, lr, sl
 8022362:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022366:	fb0e fe03 	mul.w	lr, lr, r3
 802236a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802236e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022372:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022376:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802237a:	4453      	add	r3, sl
 802237c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022380:	0a1b      	lsrs	r3, r3, #8
 8022382:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022386:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802238a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802238e:	ea43 030c 	orr.w	r3, r3, ip
 8022392:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022394:	2cff      	cmp	r4, #255	; 0xff
 8022396:	d021      	beq.n	80223dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022398:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802239a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802239e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80223a0:	fb04 fb0b 	mul.w	fp, r4, fp
 80223a4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80223a6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223aa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80223ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223b0:	fb04 fa0a 	mul.w	sl, r4, sl
 80223b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223c0:	44de      	add	lr, fp
 80223c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223d6:	ea4e 040a 	orr.w	r4, lr, sl
 80223da:	940e      	str	r4, [sp, #56]	; 0x38
 80223dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223de:	2cff      	cmp	r4, #255	; 0xff
 80223e0:	d021      	beq.n	8022426 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80223e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80223e4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80223e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223ea:	fb04 fb0b 	mul.w	fp, r4, fp
 80223ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80223f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80223fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022402:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022406:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802240a:	44de      	add	lr, fp
 802240c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022410:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022418:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802241c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022420:	ea4e 040a 	orr.w	r4, lr, sl
 8022424:	940a      	str	r4, [sp, #40]	; 0x28
 8022426:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022428:	2cff      	cmp	r4, #255	; 0xff
 802242a:	d021      	beq.n	8022470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802242c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802242e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022432:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022434:	fb04 fb0b 	mul.w	fp, r4, fp
 8022438:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802243a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802243e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022440:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022444:	fb04 fa0a 	mul.w	sl, r4, sl
 8022448:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802244c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022450:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022454:	44de      	add	lr, fp
 8022456:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802245a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802245e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022462:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022466:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802246a:	ea4e 040a 	orr.w	r4, lr, sl
 802246e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022470:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022472:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022476:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022478:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802247c:	fb08 fc0c 	mul.w	ip, r8, ip
 8022480:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022484:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022488:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802248a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802248e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022492:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022494:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022498:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802249c:	fb08 f80e 	mul.w	r8, r8, lr
 80224a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80224a4:	fb02 8303 	mla	r3, r2, r3, r8
 80224a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80224aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80224ac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80224b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80224b2:	fb01 330a 	mla	r3, r1, sl, r3
 80224b6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80224ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80224bc:	fb09 3901 	mla	r9, r9, r1, r3
 80224c0:	4342      	muls	r2, r0
 80224c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80224ca:	883b      	ldrh	r3, [r7, #0]
 80224cc:	1c50      	adds	r0, r2, #1
 80224ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224d2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80224d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80224da:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80224de:	1219      	asrs	r1, r3, #8
 80224e0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80224e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80224e8:	b2c0      	uxtb	r0, r0
 80224ea:	fb12 f204 	smulbb	r2, r2, r4
 80224ee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80224f2:	fb01 2100 	mla	r1, r1, r0, r2
 80224f6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80224fa:	10da      	asrs	r2, r3, #3
 80224fc:	fa5f fc8c 	uxtb.w	ip, ip
 8022500:	00db      	lsls	r3, r3, #3
 8022502:	fb1c fc04 	smulbb	ip, ip, r4
 8022506:	b2db      	uxtb	r3, r3
 8022508:	b289      	uxth	r1, r1
 802250a:	fb03 c300 	mla	r3, r3, r0, ip
 802250e:	fa1f fc83 	uxth.w	ip, r3
 8022512:	1c4b      	adds	r3, r1, #1
 8022514:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022518:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802251c:	fb1e fe04 	smulbb	lr, lr, r4
 8022520:	f10c 0301 	add.w	r3, ip, #1
 8022524:	fb02 e200 	mla	r2, r2, r0, lr
 8022528:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802252c:	b292      	uxth	r2, r2
 802252e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022532:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022536:	430b      	orrs	r3, r1
 8022538:	1c51      	adds	r1, r2, #1
 802253a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802253e:	0952      	lsrs	r2, r2, #5
 8022540:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022544:	4313      	orrs	r3, r2
 8022546:	803b      	strh	r3, [r7, #0]
 8022548:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802254a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802254c:	441a      	add	r2, r3
 802254e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022550:	9229      	str	r2, [sp, #164]	; 0xa4
 8022552:	441d      	add	r5, r3
 8022554:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022556:	3b01      	subs	r3, #1
 8022558:	3702      	adds	r7, #2
 802255a:	931a      	str	r3, [sp, #104]	; 0x68
 802255c:	e694      	b.n	8022288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802255e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022560:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022562:	441c      	add	r4, r3
 8022564:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022566:	9429      	str	r4, [sp, #164]	; 0xa4
 8022568:	441d      	add	r5, r3
 802256a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802256c:	3b01      	subs	r3, #1
 802256e:	9309      	str	r3, [sp, #36]	; 0x24
 8022570:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022572:	3302      	adds	r3, #2
 8022574:	930c      	str	r3, [sp, #48]	; 0x30
 8022576:	e666      	b.n	8022246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022578:	d024      	beq.n	80225c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802257a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802257c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802257e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022580:	3b01      	subs	r3, #1
 8022582:	fb00 4003 	mla	r0, r0, r3, r4
 8022586:	1400      	asrs	r0, r0, #16
 8022588:	f53f ae7b 	bmi.w	8022282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802258c:	3901      	subs	r1, #1
 802258e:	4288      	cmp	r0, r1
 8022590:	f6bf ae77 	bge.w	8022282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022594:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022596:	fb01 5303 	mla	r3, r1, r3, r5
 802259a:	141b      	asrs	r3, r3, #16
 802259c:	f53f ae71 	bmi.w	8022282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80225a0:	3a01      	subs	r2, #1
 80225a2:	4293      	cmp	r3, r2
 80225a4:	f6bf ae6d 	bge.w	8022282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80225a8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80225ac:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80225b0:	f1bb 0f00 	cmp.w	fp, #0
 80225b4:	dc70      	bgt.n	8022698 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80225b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80225b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80225bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80225be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80225c2:	930c      	str	r3, [sp, #48]	; 0x30
 80225c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80225c6:	2b00      	cmp	r3, #0
 80225c8:	f340 81be 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80225cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225e6:	eef0 6a62 	vmov.f32	s13, s5
 80225ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225f6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80225fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225fe:	eef0 6a43 	vmov.f32	s13, s6
 8022602:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022606:	ee12 2a90 	vmov	r2, s5
 802260a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802260e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022612:	ee13 2a10 	vmov	r2, s6
 8022616:	932b      	str	r3, [sp, #172]	; 0xac
 8022618:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802261a:	fb92 f3f3 	sdiv	r3, r2, r3
 802261e:	932c      	str	r3, [sp, #176]	; 0xb0
 8022620:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022622:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022624:	3b01      	subs	r3, #1
 8022626:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802262a:	9319      	str	r3, [sp, #100]	; 0x64
 802262c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802262e:	bf08      	it	eq
 8022630:	4613      	moveq	r3, r2
 8022632:	ee16 5a90 	vmov	r5, s13
 8022636:	9309      	str	r3, [sp, #36]	; 0x24
 8022638:	eeb0 3a67 	vmov.f32	s6, s15
 802263c:	eef0 2a47 	vmov.f32	s5, s14
 8022640:	e5f3      	b.n	802222a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022642:	2900      	cmp	r1, #0
 8022644:	f43f ae66 	beq.w	8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022648:	f818 0000 	ldrb.w	r0, [r8, r0]
 802264c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022650:	900a      	str	r0, [sp, #40]	; 0x28
 8022652:	0e00      	lsrs	r0, r0, #24
 8022654:	9013      	str	r0, [sp, #76]	; 0x4c
 8022656:	e65d      	b.n	8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022658:	f113 0801 	adds.w	r8, r3, #1
 802265c:	f53f af74 	bmi.w	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022660:	4540      	cmp	r0, r8
 8022662:	f6ff af71 	blt.w	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022666:	f11c 0801 	adds.w	r8, ip, #1
 802266a:	f53f af6d 	bmi.w	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802266e:	45c6      	cmp	lr, r8
 8022670:	f6ff af6a 	blt.w	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022674:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8022676:	9302      	str	r3, [sp, #8]
 8022678:	b200      	sxth	r0, r0
 802267a:	fa0f f38e 	sxth.w	r3, lr
 802267e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022682:	e9cd c203 	strd	ip, r2, [sp, #12]
 8022686:	9301      	str	r3, [sp, #4]
 8022688:	9000      	str	r0, [sp, #0]
 802268a:	4633      	mov	r3, r6
 802268c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802268e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022690:	4639      	mov	r1, r7
 8022692:	f7ff fc62 	bl	8021f5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022696:	e757      	b.n	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022698:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802269a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802269c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80226a0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80226a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226a6:	1427      	asrs	r7, r4, #16
 80226a8:	142b      	asrs	r3, r5, #16
 80226aa:	fb01 7303 	mla	r3, r1, r3, r7
 80226ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80226b0:	18e7      	adds	r7, r4, r3
 80226b2:	5ce3      	ldrb	r3, [r4, r3]
 80226b4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80226b8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80226bc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80226c0:	2a00      	cmp	r2, #0
 80226c2:	f000 8137 	beq.w	8022934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80226c6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80226ca:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80226ce:	9410      	str	r4, [sp, #64]	; 0x40
 80226d0:	0e24      	lsrs	r4, r4, #24
 80226d2:	9417      	str	r4, [sp, #92]	; 0x5c
 80226d4:	b170      	cbz	r0, 80226f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80226d6:	eb07 0e01 	add.w	lr, r7, r1
 80226da:	5c79      	ldrb	r1, [r7, r1]
 80226dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226e0:	910b      	str	r1, [sp, #44]	; 0x2c
 80226e2:	0e09      	lsrs	r1, r1, #24
 80226e4:	9114      	str	r1, [sp, #80]	; 0x50
 80226e6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80226ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226ee:	9111      	str	r1, [sp, #68]	; 0x44
 80226f0:	0e09      	lsrs	r1, r1, #24
 80226f2:	9118      	str	r1, [sp, #96]	; 0x60
 80226f4:	b292      	uxth	r2, r2
 80226f6:	b280      	uxth	r0, r0
 80226f8:	fb02 f800 	mul.w	r8, r2, r0
 80226fc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022700:	0112      	lsls	r2, r2, #4
 8022702:	eba2 0e08 	sub.w	lr, r2, r8
 8022706:	b280      	uxth	r0, r0
 8022708:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802270c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802270e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022710:	fa1f fe8e 	uxth.w	lr, lr
 8022714:	1a12      	subs	r2, r2, r0
 8022716:	b292      	uxth	r2, r2
 8022718:	fb0e f101 	mul.w	r1, lr, r1
 802271c:	fb02 110c 	mla	r1, r2, ip, r1
 8022720:	fb00 1104 	mla	r1, r0, r4, r1
 8022724:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022726:	fb08 1104 	mla	r1, r8, r4, r1
 802272a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802272e:	2900      	cmp	r1, #0
 8022730:	f000 80f5 	beq.w	802291e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022734:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022738:	d019      	beq.n	802276e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802273a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802273e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022742:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022746:	fb0c fc03 	mul.w	ip, ip, r3
 802274a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802274e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022752:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022756:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802275a:	4453      	add	r3, sl
 802275c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022760:	0a1b      	lsrs	r3, r3, #8
 8022762:	0a3f      	lsrs	r7, r7, #8
 8022764:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022768:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802276c:	433b      	orrs	r3, r7
 802276e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022770:	2cff      	cmp	r4, #255	; 0xff
 8022772:	d020      	beq.n	80227b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022774:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022776:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802277a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802277c:	4367      	muls	r7, r4
 802277e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022780:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022784:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022786:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802278a:	fb04 fa0a 	mul.w	sl, r4, sl
 802278e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022792:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022796:	44bc      	add	ip, r7
 8022798:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802279c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227b0:	ea4c 040a 	orr.w	r4, ip, sl
 80227b4:	9410      	str	r4, [sp, #64]	; 0x40
 80227b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80227b8:	2cff      	cmp	r4, #255	; 0xff
 80227ba:	d020      	beq.n	80227fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80227bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80227c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80227c4:	4367      	muls	r7, r4
 80227c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80227cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80227ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80227d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227de:	44bc      	add	ip, r7
 80227e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80227e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227f8:	ea4c 040a 	orr.w	r4, ip, sl
 80227fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80227fe:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022800:	2cff      	cmp	r4, #255	; 0xff
 8022802:	d020      	beq.n	8022846 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8022804:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022806:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802280a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802280c:	4367      	muls	r7, r4
 802280e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022810:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022814:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022816:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802281a:	fb04 fa0a 	mul.w	sl, r4, sl
 802281e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022822:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022826:	44bc      	add	ip, r7
 8022828:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802282c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022830:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022834:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022838:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802283c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022840:	ea4c 040a 	orr.w	r4, ip, sl
 8022844:	9411      	str	r4, [sp, #68]	; 0x44
 8022846:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022848:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802284c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802284e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022852:	fb0e f707 	mul.w	r7, lr, r7
 8022856:	fb02 770c 	mla	r7, r2, ip, r7
 802285a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802285e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022860:	fb00 770c 	mla	r7, r0, ip, r7
 8022864:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022868:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802286a:	fb08 770c 	mla	r7, r8, ip, r7
 802286e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022872:	fb0e fe0c 	mul.w	lr, lr, ip
 8022876:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802287a:	fb02 e303 	mla	r3, r2, r3, lr
 802287e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022880:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022882:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022886:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022888:	fb00 330a 	mla	r3, r0, sl, r3
 802288c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022890:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022894:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022896:	f8b9 0000 	ldrh.w	r0, [r9]
 802289a:	434b      	muls	r3, r1
 802289c:	0a3f      	lsrs	r7, r7, #8
 802289e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228a2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80228a6:	1c59      	adds	r1, r3, #1
 80228a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80228ac:	ea47 070c 	orr.w	r7, r7, ip
 80228b0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80228b4:	1202      	asrs	r2, r0, #8
 80228b6:	0c3b      	lsrs	r3, r7, #16
 80228b8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80228bc:	b2c9      	uxtb	r1, r1
 80228be:	fb13 f304 	smulbb	r3, r3, r4
 80228c2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80228c6:	fb02 3201 	mla	r2, r2, r1, r3
 80228ca:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80228ce:	10c3      	asrs	r3, r0, #3
 80228d0:	b2ff      	uxtb	r7, r7
 80228d2:	00c0      	lsls	r0, r0, #3
 80228d4:	b292      	uxth	r2, r2
 80228d6:	fb1c fc04 	smulbb	ip, ip, r4
 80228da:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228de:	b2c0      	uxtb	r0, r0
 80228e0:	fb17 f704 	smulbb	r7, r7, r4
 80228e4:	fb03 c301 	mla	r3, r3, r1, ip
 80228e8:	fb00 7001 	mla	r0, r0, r1, r7
 80228ec:	f102 0c01 	add.w	ip, r2, #1
 80228f0:	b280      	uxth	r0, r0
 80228f2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80228f6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80228fa:	1c42      	adds	r2, r0, #1
 80228fc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022900:	b29b      	uxth	r3, r3
 8022902:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022906:	ea42 020c 	orr.w	r2, r2, ip
 802290a:	f103 0c01 	add.w	ip, r3, #1
 802290e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022912:	095b      	lsrs	r3, r3, #5
 8022914:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022918:	431a      	orrs	r2, r3
 802291a:	f8a9 2000 	strh.w	r2, [r9]
 802291e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022920:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022922:	441a      	add	r2, r3
 8022924:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022926:	9229      	str	r2, [sp, #164]	; 0xa4
 8022928:	f109 0902 	add.w	r9, r9, #2
 802292c:	441d      	add	r5, r3
 802292e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022932:	e63d      	b.n	80225b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022934:	2800      	cmp	r0, #0
 8022936:	f43f aedd 	beq.w	80226f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802293a:	5c79      	ldrb	r1, [r7, r1]
 802293c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022940:	910b      	str	r1, [sp, #44]	; 0x2c
 8022942:	0e09      	lsrs	r1, r1, #24
 8022944:	9114      	str	r1, [sp, #80]	; 0x50
 8022946:	e6d5      	b.n	80226f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022948:	b01f      	add	sp, #124	; 0x7c
 802294a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802294e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802294e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022952:	b089      	sub	sp, #36	; 0x24
 8022954:	9101      	str	r1, [sp, #4]
 8022956:	9801      	ldr	r0, [sp, #4]
 8022958:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802295c:	8800      	ldrh	r0, [r0, #0]
 802295e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022962:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022966:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802296a:	1206      	asrs	r6, r0, #8
 802296c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022970:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022974:	9602      	str	r6, [sp, #8]
 8022976:	10c6      	asrs	r6, r0, #3
 8022978:	00c0      	lsls	r0, r0, #3
 802297a:	b2c0      	uxtb	r0, r0
 802297c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022980:	9004      	str	r0, [sp, #16]
 8022982:	2f00      	cmp	r7, #0
 8022984:	fb07 100c 	mla	r0, r7, ip, r1
 8022988:	9603      	str	r6, [sp, #12]
 802298a:	eb02 0e00 	add.w	lr, r2, r0
 802298e:	f2c0 810a 	blt.w	8022ba6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022992:	45b8      	cmp	r8, r7
 8022994:	f340 8107 	ble.w	8022ba6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022998:	2900      	cmp	r1, #0
 802299a:	f2c0 8102 	blt.w	8022ba2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802299e:	458c      	cmp	ip, r1
 80229a0:	f340 80ff 	ble.w	8022ba2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80229a4:	5c12      	ldrb	r2, [r2, r0]
 80229a6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80229aa:	1c4a      	adds	r2, r1, #1
 80229ac:	f100 80fe 	bmi.w	8022bac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80229b0:	4594      	cmp	ip, r2
 80229b2:	f340 80fb 	ble.w	8022bac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80229b6:	2d00      	cmp	r5, #0
 80229b8:	f000 80fa 	beq.w	8022bb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80229bc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80229c0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80229c4:	3701      	adds	r7, #1
 80229c6:	f100 80f7 	bmi.w	8022bb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80229ca:	45b8      	cmp	r8, r7
 80229cc:	f340 80f4 	ble.w	8022bb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80229d0:	2c00      	cmp	r4, #0
 80229d2:	f000 80f4 	beq.w	8022bbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80229d6:	2900      	cmp	r1, #0
 80229d8:	eb0e 020c 	add.w	r2, lr, ip
 80229dc:	f2c0 80ea 	blt.w	8022bb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80229e0:	458c      	cmp	ip, r1
 80229e2:	f340 80e7 	ble.w	8022bb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80229e6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80229ea:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80229ee:	3101      	adds	r1, #1
 80229f0:	f100 80e8 	bmi.w	8022bc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80229f4:	458c      	cmp	ip, r1
 80229f6:	f340 80e5 	ble.w	8022bc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80229fa:	2d00      	cmp	r5, #0
 80229fc:	f000 80e4 	beq.w	8022bc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022a00:	7852      	ldrb	r2, [r2, #1]
 8022a02:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022a06:	0e0b      	lsrs	r3, r1, #24
 8022a08:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8022a0c:	9300      	str	r3, [sp, #0]
 8022a0e:	b2a4      	uxth	r4, r4
 8022a10:	b2ab      	uxth	r3, r5
 8022a12:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8022a16:	fb03 f904 	mul.w	r9, r3, r4
 8022a1a:	fb0a f505 	mul.w	r5, sl, r5
 8022a1e:	011b      	lsls	r3, r3, #4
 8022a20:	eba3 0e09 	sub.w	lr, r3, r9
 8022a24:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022a28:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8022a2c:	0a28      	lsrs	r0, r5, #8
 8022a2e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022a32:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022a36:	4405      	add	r5, r0
 8022a38:	0a2d      	lsrs	r5, r5, #8
 8022a3a:	fb0a f303 	mul.w	r3, sl, r3
 8022a3e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022a42:	9005      	str	r0, [sp, #20]
 8022a44:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022a48:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022a4c:	0a1b      	lsrs	r3, r3, #8
 8022a4e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022a52:	9306      	str	r3, [sp, #24]
 8022a54:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022a58:	fb0b f303 	mul.w	r3, fp, r3
 8022a5c:	0a1d      	lsrs	r5, r3, #8
 8022a5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022a62:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022a66:	fb0b f606 	mul.w	r6, fp, r6
 8022a6a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8022a6e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022a72:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022a76:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022a7a:	fb08 f707 	mul.w	r7, r8, r7
 8022a7e:	441d      	add	r5, r3
 8022a80:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022a84:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022a88:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8022a8c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022a90:	fb08 fc0c 	mul.w	ip, r8, ip
 8022a94:	0a1b      	lsrs	r3, r3, #8
 8022a96:	9307      	str	r3, [sp, #28]
 8022a98:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8022a9c:	0e0b      	lsrs	r3, r1, #24
 8022a9e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022aa2:	435f      	muls	r7, r3
 8022aa4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022aa8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022aac:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022ab0:	4460      	add	r0, ip
 8022ab2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022ab6:	b2a4      	uxth	r4, r4
 8022ab8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022abc:	0a2d      	lsrs	r5, r5, #8
 8022abe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022ac2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ac6:	fa1f fe8e 	uxth.w	lr, lr
 8022aca:	4359      	muls	r1, r3
 8022acc:	1b12      	subs	r2, r2, r4
 8022ace:	9b05      	ldr	r3, [sp, #20]
 8022ad0:	44bc      	add	ip, r7
 8022ad2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022ad6:	b292      	uxth	r2, r2
 8022ad8:	fb05 f50e 	mul.w	r5, r5, lr
 8022adc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ae0:	fb03 5502 	mla	r5, r3, r2, r5
 8022ae4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ae8:	9b06      	ldr	r3, [sp, #24]
 8022aea:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8022aee:	0a36      	lsrs	r6, r6, #8
 8022af0:	0a00      	lsrs	r0, r0, #8
 8022af2:	fb0c 5509 	mla	r5, ip, r9, r5
 8022af6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022afa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022afe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022b02:	fb00 5504 	mla	r5, r0, r4, r5
 8022b06:	fb0e f606 	mul.w	r6, lr, r6
 8022b0a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022b0e:	0a09      	lsrs	r1, r1, #8
 8022b10:	9b07      	ldr	r3, [sp, #28]
 8022b12:	fb02 6000 	mla	r0, r2, r0, r6
 8022b16:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022b1a:	fb09 0001 	mla	r0, r9, r1, r0
 8022b1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b22:	fb0e fe0b 	mul.w	lr, lr, fp
 8022b26:	fb04 0003 	mla	r0, r4, r3, r0
 8022b2a:	fb02 e20a 	mla	r2, r2, sl, lr
 8022b2e:	9b00      	ldr	r3, [sp, #0]
 8022b30:	fb04 2408 	mla	r4, r4, r8, r2
 8022b34:	fb09 4903 	mla	r9, r9, r3, r4
 8022b38:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022b3c:	9b02      	ldr	r3, [sp, #8]
 8022b3e:	9a04      	ldr	r2, [sp, #16]
 8022b40:	fa5f f989 	uxtb.w	r9, r9
 8022b44:	fb03 f109 	mul.w	r1, r3, r9
 8022b48:	9b03      	ldr	r3, [sp, #12]
 8022b4a:	0a2d      	lsrs	r5, r5, #8
 8022b4c:	0a00      	lsrs	r0, r0, #8
 8022b4e:	fb03 f309 	mul.w	r3, r3, r9
 8022b52:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022b56:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022b5a:	4305      	orrs	r5, r0
 8022b5c:	fb02 f909 	mul.w	r9, r2, r9
 8022b60:	1c58      	adds	r0, r3, #1
 8022b62:	1c4a      	adds	r2, r1, #1
 8022b64:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022b68:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022b6c:	0a2b      	lsrs	r3, r5, #8
 8022b6e:	0c2a      	lsrs	r2, r5, #16
 8022b70:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022b74:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022b78:	00db      	lsls	r3, r3, #3
 8022b7a:	0212      	lsls	r2, r2, #8
 8022b7c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022b80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022b84:	4313      	orrs	r3, r2
 8022b86:	f109 0201 	add.w	r2, r9, #1
 8022b8a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8022b8e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022b92:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022b96:	431d      	orrs	r5, r3
 8022b98:	9b01      	ldr	r3, [sp, #4]
 8022b9a:	801d      	strh	r5, [r3, #0]
 8022b9c:	b009      	add	sp, #36	; 0x24
 8022b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ba2:	2000      	movs	r0, #0
 8022ba4:	e701      	b.n	80229aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022ba6:	2600      	movs	r6, #0
 8022ba8:	4630      	mov	r0, r6
 8022baa:	e70b      	b.n	80229c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022bac:	2600      	movs	r6, #0
 8022bae:	e709      	b.n	80229c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022bb0:	462e      	mov	r6, r5
 8022bb2:	e707      	b.n	80229c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022bb4:	2700      	movs	r7, #0
 8022bb6:	e71a      	b.n	80229ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022bb8:	2100      	movs	r1, #0
 8022bba:	460f      	mov	r7, r1
 8022bbc:	e723      	b.n	8022a06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022bbe:	4621      	mov	r1, r4
 8022bc0:	4627      	mov	r7, r4
 8022bc2:	e720      	b.n	8022a06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022bc4:	2100      	movs	r1, #0
 8022bc6:	e71e      	b.n	8022a06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022bc8:	4629      	mov	r1, r5
 8022bca:	e71c      	b.n	8022a06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bd0:	b09b      	sub	sp, #108	; 0x6c
 8022bd2:	9218      	str	r2, [sp, #96]	; 0x60
 8022bd4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022bd6:	9116      	str	r1, [sp, #88]	; 0x58
 8022bd8:	9307      	str	r3, [sp, #28]
 8022bda:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022bde:	9019      	str	r0, [sp, #100]	; 0x64
 8022be0:	6850      	ldr	r0, [r2, #4]
 8022be2:	6812      	ldr	r2, [r2, #0]
 8022be4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8022be6:	fb00 1303 	mla	r3, r0, r3, r1
 8022bea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022bee:	930a      	str	r3, [sp, #40]	; 0x28
 8022bf0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bf2:	681b      	ldr	r3, [r3, #0]
 8022bf4:	930f      	str	r3, [sp, #60]	; 0x3c
 8022bf6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bf8:	685e      	ldr	r6, [r3, #4]
 8022bfa:	3604      	adds	r6, #4
 8022bfc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022bfe:	2b00      	cmp	r3, #0
 8022c00:	dc03      	bgt.n	8022c0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022c02:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022c04:	2b00      	cmp	r3, #0
 8022c06:	f340 8373 	ble.w	80232f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022c0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c14:	1e48      	subs	r0, r1, #1
 8022c16:	1e57      	subs	r7, r2, #1
 8022c18:	9b07      	ldr	r3, [sp, #28]
 8022c1a:	2b00      	cmp	r3, #0
 8022c1c:	f340 8190 	ble.w	8022f40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022c20:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022c22:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022c26:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022c2a:	d406      	bmi.n	8022c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c2c:	4584      	cmp	ip, r0
 8022c2e:	da04      	bge.n	8022c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c30:	2b00      	cmp	r3, #0
 8022c32:	db02      	blt.n	8022c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c34:	42bb      	cmp	r3, r7
 8022c36:	f2c0 8184 	blt.w	8022f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022c3a:	f11c 0c01 	adds.w	ip, ip, #1
 8022c3e:	f100 8172 	bmi.w	8022f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c42:	4561      	cmp	r1, ip
 8022c44:	f2c0 816f 	blt.w	8022f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c48:	3301      	adds	r3, #1
 8022c4a:	f100 816c 	bmi.w	8022f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c4e:	429a      	cmp	r2, r3
 8022c50:	f2c0 8169 	blt.w	8022f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c54:	9b07      	ldr	r3, [sp, #28]
 8022c56:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022c58:	9317      	str	r3, [sp, #92]	; 0x5c
 8022c5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022c5c:	2b00      	cmp	r3, #0
 8022c5e:	f340 818e 	ble.w	8022f7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022c62:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c64:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c68:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c6a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022c6e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c70:	141b      	asrs	r3, r3, #16
 8022c72:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022c76:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022c7a:	f100 81d1 	bmi.w	8023020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c7e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022c82:	4543      	cmp	r3, r8
 8022c84:	f280 81cc 	bge.w	8023020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c88:	f1bc 0f00 	cmp.w	ip, #0
 8022c8c:	f2c0 81c8 	blt.w	8023020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c90:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022c94:	45c4      	cmp	ip, r8
 8022c96:	f280 81c3 	bge.w	8023020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c9a:	b209      	sxth	r1, r1
 8022c9c:	fb0c 3301 	mla	r3, ip, r1, r3
 8022ca0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022ca2:	eb04 0803 	add.w	r8, r4, r3
 8022ca6:	5ce3      	ldrb	r3, [r4, r3]
 8022ca8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022cac:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022cb0:	2a00      	cmp	r2, #0
 8022cb2:	f000 81aa 	beq.w	802300a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022cb6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022cba:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022cbe:	940b      	str	r4, [sp, #44]	; 0x2c
 8022cc0:	0e24      	lsrs	r4, r4, #24
 8022cc2:	9412      	str	r4, [sp, #72]	; 0x48
 8022cc4:	b178      	cbz	r0, 8022ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022cc6:	eb08 0c01 	add.w	ip, r8, r1
 8022cca:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022cce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022cd2:	9108      	str	r1, [sp, #32]
 8022cd4:	0e09      	lsrs	r1, r1, #24
 8022cd6:	9110      	str	r1, [sp, #64]	; 0x40
 8022cd8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022cdc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ce0:	910c      	str	r1, [sp, #48]	; 0x30
 8022ce2:	0e09      	lsrs	r1, r1, #24
 8022ce4:	9113      	str	r1, [sp, #76]	; 0x4c
 8022ce6:	b292      	uxth	r2, r2
 8022ce8:	b280      	uxth	r0, r0
 8022cea:	fb02 f900 	mul.w	r9, r2, r0
 8022cee:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022cf2:	0112      	lsls	r2, r2, #4
 8022cf4:	eba2 0809 	sub.w	r8, r2, r9
 8022cf8:	b280      	uxth	r0, r0
 8022cfa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022cfe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022d00:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022d02:	fa1f f888 	uxth.w	r8, r8
 8022d06:	1a12      	subs	r2, r2, r0
 8022d08:	b292      	uxth	r2, r2
 8022d0a:	fb08 f101 	mul.w	r1, r8, r1
 8022d0e:	fb02 110e 	mla	r1, r2, lr, r1
 8022d12:	fb00 1104 	mla	r1, r0, r4, r1
 8022d16:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022d18:	fb09 1104 	mla	r1, r9, r4, r1
 8022d1c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022d20:	2900      	cmp	r1, #0
 8022d22:	f000 80f5 	beq.w	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022d26:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022d2a:	d01b      	beq.n	8022d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d2c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022d30:	fb0e fa0a 	mul.w	sl, lr, sl
 8022d34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022d38:	fb0e fe03 	mul.w	lr, lr, r3
 8022d3c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022d40:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d44:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022d48:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022d4c:	4453      	add	r3, sl
 8022d4e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022d52:	0a1b      	lsrs	r3, r3, #8
 8022d54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d58:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d5c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022d60:	ea43 030c 	orr.w	r3, r3, ip
 8022d64:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d66:	2cff      	cmp	r4, #255	; 0xff
 8022d68:	d021      	beq.n	8022dae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8022d6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022d6c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022d70:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d72:	fb04 fb0b 	mul.w	fp, r4, fp
 8022d76:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022d78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022d7c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d7e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d82:	fb04 fa0a 	mul.w	sl, r4, sl
 8022d86:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d8a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d8e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d92:	44de      	add	lr, fp
 8022d94:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d98:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022da0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022da4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022da8:	ea4e 040a 	orr.w	r4, lr, sl
 8022dac:	940b      	str	r4, [sp, #44]	; 0x2c
 8022dae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022db0:	2cff      	cmp	r4, #255	; 0xff
 8022db2:	d021      	beq.n	8022df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8022db4:	9c08      	ldr	r4, [sp, #32]
 8022db6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022dba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022dbc:	fb04 fb0b 	mul.w	fp, r4, fp
 8022dc0:	9c08      	ldr	r4, [sp, #32]
 8022dc2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022dc6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022dc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022dcc:	fb04 fa0a 	mul.w	sl, r4, sl
 8022dd0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dd4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022dd8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022ddc:	44de      	add	lr, fp
 8022dde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022de2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022de6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022df2:	ea4e 040a 	orr.w	r4, lr, sl
 8022df6:	9408      	str	r4, [sp, #32]
 8022df8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022dfa:	2cff      	cmp	r4, #255	; 0xff
 8022dfc:	d021      	beq.n	8022e42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022dfe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022e00:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022e04:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022e06:	fb04 fb0b 	mul.w	fp, r4, fp
 8022e0a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022e0c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022e10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022e12:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022e16:	fb04 fa0a 	mul.w	sl, r4, sl
 8022e1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e1e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022e22:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022e26:	44de      	add	lr, fp
 8022e28:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022e2c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022e30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022e34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022e3c:	ea4e 040a 	orr.w	r4, lr, sl
 8022e40:	940c      	str	r4, [sp, #48]	; 0x30
 8022e42:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e44:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022e48:	9c08      	ldr	r4, [sp, #32]
 8022e4a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022e4e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022e52:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022e56:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022e5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022e5c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022e60:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022e64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e66:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022e6a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022e6e:	fb08 f80e 	mul.w	r8, r8, lr
 8022e72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022e76:	fb02 8303 	mla	r3, r2, r3, r8
 8022e7a:	9a08      	ldr	r2, [sp, #32]
 8022e7c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022e80:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022e84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022e86:	fb00 330a 	mla	r3, r0, sl, r3
 8022e8a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022e8e:	fb09 3900 	mla	r9, r9, r0, r3
 8022e92:	43c9      	mvns	r1, r1
 8022e94:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022e98:	fa5f fe81 	uxtb.w	lr, r1
 8022e9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ea0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022ea4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022ea8:	fb02 f20e 	mul.w	r2, r2, lr
 8022eac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022eb0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022eb4:	ea4c 0c09 	orr.w	ip, ip, r9
 8022eb8:	1c53      	adds	r3, r2, #1
 8022eba:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022ebe:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022ec2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022ec6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022eca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022ece:	4a63      	ldr	r2, [pc, #396]	; (802305c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022ed0:	fb00 f00e 	mul.w	r0, r0, lr
 8022ed4:	b2db      	uxtb	r3, r3
 8022ed6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022eda:	1c43      	adds	r3, r0, #1
 8022edc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022ee0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022ee4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022ee8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022eec:	b2c9      	uxtb	r1, r1
 8022eee:	00db      	lsls	r3, r3, #3
 8022ef0:	fb01 f10e 	mul.w	r1, r1, lr
 8022ef4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ef8:	4313      	orrs	r3, r2
 8022efa:	1c4a      	adds	r2, r1, #1
 8022efc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022f00:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022f04:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022f08:	ea4c 0c03 	orr.w	ip, ip, r3
 8022f0c:	f8a7 c000 	strh.w	ip, [r7]
 8022f10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022f12:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022f14:	441a      	add	r2, r3
 8022f16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f18:	9225      	str	r2, [sp, #148]	; 0x94
 8022f1a:	441d      	add	r5, r3
 8022f1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022f1e:	3b01      	subs	r3, #1
 8022f20:	3702      	adds	r7, #2
 8022f22:	9317      	str	r3, [sp, #92]	; 0x5c
 8022f24:	e699      	b.n	8022c5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022f26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022f28:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022f2a:	441c      	add	r4, r3
 8022f2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f2e:	9425      	str	r4, [sp, #148]	; 0x94
 8022f30:	441d      	add	r5, r3
 8022f32:	9b07      	ldr	r3, [sp, #28]
 8022f34:	3b01      	subs	r3, #1
 8022f36:	9307      	str	r3, [sp, #28]
 8022f38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f3a:	3302      	adds	r3, #2
 8022f3c:	930a      	str	r3, [sp, #40]	; 0x28
 8022f3e:	e66b      	b.n	8022c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022f40:	d024      	beq.n	8022f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022f42:	9b07      	ldr	r3, [sp, #28]
 8022f44:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022f46:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022f48:	3b01      	subs	r3, #1
 8022f4a:	fb00 4003 	mla	r0, r0, r3, r4
 8022f4e:	1400      	asrs	r0, r0, #16
 8022f50:	f53f ae80 	bmi.w	8022c54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f54:	3901      	subs	r1, #1
 8022f56:	4288      	cmp	r0, r1
 8022f58:	f6bf ae7c 	bge.w	8022c54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f5c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022f5e:	fb01 5303 	mla	r3, r1, r3, r5
 8022f62:	141b      	asrs	r3, r3, #16
 8022f64:	f53f ae76 	bmi.w	8022c54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f68:	3a01      	subs	r2, #1
 8022f6a:	4293      	cmp	r3, r2
 8022f6c:	f6bf ae72 	bge.w	8022c54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f70:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022f74:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022f78:	f1bb 0f00 	cmp.w	fp, #0
 8022f7c:	dc70      	bgt.n	8023060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8022f7e:	9b07      	ldr	r3, [sp, #28]
 8022f80:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022f84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f86:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022f8a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f8c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022f8e:	2b00      	cmp	r3, #0
 8022f90:	f340 81ae 	ble.w	80232f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022f94:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f9c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022fa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fa2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022fa6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022faa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022fae:	eef0 6a62 	vmov.f32	s13, s5
 8022fb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022fb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022fba:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022fbe:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022fc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022fc6:	eef0 6a43 	vmov.f32	s13, s6
 8022fca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022fce:	ee12 2a90 	vmov	r2, s5
 8022fd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022fd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fda:	ee13 2a10 	vmov	r2, s6
 8022fde:	9327      	str	r3, [sp, #156]	; 0x9c
 8022fe0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fe2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fe6:	9328      	str	r3, [sp, #160]	; 0xa0
 8022fe8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022fea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022fec:	3b01      	subs	r3, #1
 8022fee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ff2:	9316      	str	r3, [sp, #88]	; 0x58
 8022ff4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ff6:	bf08      	it	eq
 8022ff8:	4613      	moveq	r3, r2
 8022ffa:	ee16 5a90 	vmov	r5, s13
 8022ffe:	9307      	str	r3, [sp, #28]
 8023000:	eeb0 3a67 	vmov.f32	s6, s15
 8023004:	eef0 2a47 	vmov.f32	s5, s14
 8023008:	e5f8      	b.n	8022bfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802300a:	2800      	cmp	r0, #0
 802300c:	f43f ae6b 	beq.w	8022ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023010:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023014:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023018:	9108      	str	r1, [sp, #32]
 802301a:	0e09      	lsrs	r1, r1, #24
 802301c:	9110      	str	r1, [sp, #64]	; 0x40
 802301e:	e662      	b.n	8022ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023020:	f113 0801 	adds.w	r8, r3, #1
 8023024:	f53f af74 	bmi.w	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023028:	4541      	cmp	r1, r8
 802302a:	f6ff af71 	blt.w	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802302e:	f11c 0801 	adds.w	r8, ip, #1
 8023032:	f53f af6d 	bmi.w	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023036:	45c6      	cmp	lr, r8
 8023038:	f6ff af6a 	blt.w	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802303c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8023040:	b209      	sxth	r1, r1
 8023042:	fa0f f38e 	sxth.w	r3, lr
 8023046:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802304a:	9301      	str	r3, [sp, #4]
 802304c:	9100      	str	r1, [sp, #0]
 802304e:	4633      	mov	r3, r6
 8023050:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023052:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023054:	4639      	mov	r1, r7
 8023056:	f7ff fc7a 	bl	802294e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802305a:	e759      	b.n	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802305c:	fffff800 	.word	0xfffff800
 8023060:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8023062:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023064:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023068:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802306a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802306e:	1427      	asrs	r7, r4, #16
 8023070:	142b      	asrs	r3, r5, #16
 8023072:	fb01 7303 	mla	r3, r1, r3, r7
 8023076:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023078:	18e7      	adds	r7, r4, r3
 802307a:	5ce3      	ldrb	r3, [r4, r3]
 802307c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023080:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023084:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023088:	2a00      	cmp	r2, #0
 802308a:	f000 8127 	beq.w	80232dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802308e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023092:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023096:	940d      	str	r4, [sp, #52]	; 0x34
 8023098:	0e24      	lsrs	r4, r4, #24
 802309a:	9414      	str	r4, [sp, #80]	; 0x50
 802309c:	b170      	cbz	r0, 80230bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802309e:	eb07 0e01 	add.w	lr, r7, r1
 80230a2:	5c79      	ldrb	r1, [r7, r1]
 80230a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80230a8:	9109      	str	r1, [sp, #36]	; 0x24
 80230aa:	0e09      	lsrs	r1, r1, #24
 80230ac:	9111      	str	r1, [sp, #68]	; 0x44
 80230ae:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80230b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80230b6:	910e      	str	r1, [sp, #56]	; 0x38
 80230b8:	0e09      	lsrs	r1, r1, #24
 80230ba:	9115      	str	r1, [sp, #84]	; 0x54
 80230bc:	b292      	uxth	r2, r2
 80230be:	b280      	uxth	r0, r0
 80230c0:	fb02 f800 	mul.w	r8, r2, r0
 80230c4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80230c8:	0112      	lsls	r2, r2, #4
 80230ca:	eba2 0e08 	sub.w	lr, r2, r8
 80230ce:	b280      	uxth	r0, r0
 80230d0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80230d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80230d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80230d8:	fa1f fe8e 	uxth.w	lr, lr
 80230dc:	1a09      	subs	r1, r1, r0
 80230de:	b289      	uxth	r1, r1
 80230e0:	fb0e f202 	mul.w	r2, lr, r2
 80230e4:	fb01 220c 	mla	r2, r1, ip, r2
 80230e8:	fb00 2204 	mla	r2, r0, r4, r2
 80230ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80230ee:	fb08 2204 	mla	r2, r8, r4, r2
 80230f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80230f6:	2a00      	cmp	r2, #0
 80230f8:	f000 80e5 	beq.w	80232c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80230fc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023100:	d019      	beq.n	8023136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8023102:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023106:	fb0c fa0a 	mul.w	sl, ip, sl
 802310a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802310e:	fb0c fc03 	mul.w	ip, ip, r3
 8023112:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023116:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802311a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802311e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023122:	4453      	add	r3, sl
 8023124:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023128:	0a1b      	lsrs	r3, r3, #8
 802312a:	0a3f      	lsrs	r7, r7, #8
 802312c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023130:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023134:	433b      	orrs	r3, r7
 8023136:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023138:	2cff      	cmp	r4, #255	; 0xff
 802313a:	d020      	beq.n	802317e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802313c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802313e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023142:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023144:	4367      	muls	r7, r4
 8023146:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023148:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802314c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802314e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023152:	fb04 fa0a 	mul.w	sl, r4, sl
 8023156:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802315a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802315e:	44bc      	add	ip, r7
 8023160:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023164:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023168:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802316c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023170:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023174:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023178:	ea4c 040a 	orr.w	r4, ip, sl
 802317c:	940d      	str	r4, [sp, #52]	; 0x34
 802317e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023180:	2cff      	cmp	r4, #255	; 0xff
 8023182:	d020      	beq.n	80231c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8023184:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023186:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802318a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802318c:	4367      	muls	r7, r4
 802318e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023190:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023194:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023196:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802319a:	fb04 fa0a 	mul.w	sl, r4, sl
 802319e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80231a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231a6:	44bc      	add	ip, r7
 80231a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80231ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231c0:	ea4c 040a 	orr.w	r4, ip, sl
 80231c4:	9409      	str	r4, [sp, #36]	; 0x24
 80231c6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231c8:	2cff      	cmp	r4, #255	; 0xff
 80231ca:	d020      	beq.n	802320e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80231cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80231d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231d4:	4367      	muls	r7, r4
 80231d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80231dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80231e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80231e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80231ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231ee:	44bc      	add	ip, r7
 80231f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80231f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023204:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023208:	ea4c 040a 	orr.w	r4, ip, sl
 802320c:	940e      	str	r4, [sp, #56]	; 0x38
 802320e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023210:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023214:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023216:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802321a:	fb0e f707 	mul.w	r7, lr, r7
 802321e:	fb01 770c 	mla	r7, r1, ip, r7
 8023222:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023226:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023228:	fb00 770c 	mla	r7, r0, ip, r7
 802322c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023230:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023232:	fb08 770c 	mla	r7, r8, ip, r7
 8023236:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802323a:	fb0e fe0c 	mul.w	lr, lr, ip
 802323e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023242:	fb01 e303 	mla	r3, r1, r3, lr
 8023246:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023248:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802324c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802324e:	fb00 330a 	mla	r3, r0, sl, r3
 8023252:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023256:	fb08 3c0c 	mla	ip, r8, ip, r3
 802325a:	f8b9 3000 	ldrh.w	r3, [r9]
 802325e:	43d2      	mvns	r2, r2
 8023260:	1218      	asrs	r0, r3, #8
 8023262:	b2d2      	uxtb	r2, r2
 8023264:	10d9      	asrs	r1, r3, #3
 8023266:	0a3f      	lsrs	r7, r7, #8
 8023268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802326c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023270:	00db      	lsls	r3, r3, #3
 8023272:	4350      	muls	r0, r2
 8023274:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023278:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802327c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023280:	b2db      	uxtb	r3, r3
 8023282:	ea47 070c 	orr.w	r7, r7, ip
 8023286:	4351      	muls	r1, r2
 8023288:	4353      	muls	r3, r2
 802328a:	1c42      	adds	r2, r0, #1
 802328c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023290:	0c3a      	lsrs	r2, r7, #16
 8023292:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023296:	4a18      	ldr	r2, [pc, #96]	; (80232f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8023298:	b2c0      	uxtb	r0, r0
 802329a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802329e:	1c4a      	adds	r2, r1, #1
 80232a0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80232a4:	0a3a      	lsrs	r2, r7, #8
 80232a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80232aa:	00c9      	lsls	r1, r1, #3
 80232ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80232b0:	4301      	orrs	r1, r0
 80232b2:	1c58      	adds	r0, r3, #1
 80232b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80232b8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80232bc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80232c0:	4308      	orrs	r0, r1
 80232c2:	f8a9 0000 	strh.w	r0, [r9]
 80232c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80232c8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80232ca:	441a      	add	r2, r3
 80232cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80232ce:	9225      	str	r2, [sp, #148]	; 0x94
 80232d0:	f109 0902 	add.w	r9, r9, #2
 80232d4:	441d      	add	r5, r3
 80232d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80232da:	e64d      	b.n	8022f78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80232dc:	2800      	cmp	r0, #0
 80232de:	f43f aeed 	beq.w	80230bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80232e2:	5c79      	ldrb	r1, [r7, r1]
 80232e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80232e8:	9109      	str	r1, [sp, #36]	; 0x24
 80232ea:	0e09      	lsrs	r1, r1, #24
 80232ec:	9111      	str	r1, [sp, #68]	; 0x44
 80232ee:	e6e5      	b.n	80230bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80232f0:	b01b      	add	sp, #108	; 0x6c
 80232f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232f6:	bf00      	nop
 80232f8:	fffff800 	.word	0xfffff800

080232fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80232fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023300:	b085      	sub	sp, #20
 8023302:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023306:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802330a:	9103      	str	r1, [sp, #12]
 802330c:	fb00 7406 	mla	r4, r0, r6, r7
 8023310:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8023314:	2800      	cmp	r0, #0
 8023316:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802331a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802331e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023322:	9501      	str	r5, [sp, #4]
 8023324:	eb03 0904 	add.w	r9, r3, r4
 8023328:	f2c0 8150 	blt.w	80235cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802332c:	4583      	cmp	fp, r0
 802332e:	f340 814d 	ble.w	80235cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8023332:	2f00      	cmp	r7, #0
 8023334:	f2c0 8146 	blt.w	80235c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8023338:	42be      	cmp	r6, r7
 802333a:	f340 8143 	ble.w	80235c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802333e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8023342:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8023346:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802334a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802334e:	4355      	muls	r5, r2
 8023350:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023354:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023358:	fb0c f203 	mul.w	r2, ip, r3
 802335c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023360:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023364:	441d      	add	r5, r3
 8023366:	f102 0320 	add.w	r3, r2, #32
 802336a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802336e:	0a1b      	lsrs	r3, r3, #8
 8023370:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023374:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023378:	431c      	orrs	r4, r3
 802337a:	1c7b      	adds	r3, r7, #1
 802337c:	f100 812b 	bmi.w	80235d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023380:	429e      	cmp	r6, r3
 8023382:	f340 8128 	ble.w	80235d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023386:	2900      	cmp	r1, #0
 8023388:	f000 8128 	beq.w	80235dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802338c:	9a01      	ldr	r2, [sp, #4]
 802338e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023392:	8855      	ldrh	r5, [r2, #2]
 8023394:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023398:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802339c:	fb08 f802 	mul.w	r8, r8, r2
 80233a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80233a4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80233a8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80233ac:	435d      	muls	r5, r3
 80233ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80233b2:	44d0      	add	r8, sl
 80233b4:	f105 0a20 	add.w	sl, r5, #32
 80233b8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80233bc:	0a2d      	lsrs	r5, r5, #8
 80233be:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80233c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80233c6:	432a      	orrs	r2, r5
 80233c8:	3001      	adds	r0, #1
 80233ca:	f100 810d 	bmi.w	80235e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80233ce:	4583      	cmp	fp, r0
 80233d0:	f340 810a 	ble.w	80235e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80233d4:	f1be 0f00 	cmp.w	lr, #0
 80233d8:	f000 810b 	beq.w	80235f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80233dc:	2f00      	cmp	r7, #0
 80233de:	f2c0 8100 	blt.w	80235e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80233e2:	42be      	cmp	r6, r7
 80233e4:	f340 80fd 	ble.w	80235e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80233e8:	9801      	ldr	r0, [sp, #4]
 80233ea:	f819 5006 	ldrb.w	r5, [r9, r6]
 80233ee:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80233f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80233f6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80233fa:	fb0a fa00 	mul.w	sl, sl, r0
 80233fe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023402:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023406:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802340a:	fb05 f808 	mul.w	r8, r5, r8
 802340e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023412:	4482      	add	sl, r0
 8023414:	f108 0020 	add.w	r0, r8, #32
 8023418:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802341c:	0a00      	lsrs	r0, r0, #8
 802341e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023422:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023426:	ea4b 0b00 	orr.w	fp, fp, r0
 802342a:	3701      	adds	r7, #1
 802342c:	f100 80e6 	bmi.w	80235fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023430:	42be      	cmp	r6, r7
 8023432:	f340 80e3 	ble.w	80235fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023436:	2900      	cmp	r1, #0
 8023438:	f000 80e3 	beq.w	8023602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802343c:	3601      	adds	r6, #1
 802343e:	9801      	ldr	r0, [sp, #4]
 8023440:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023444:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023448:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802344c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023450:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023454:	fb09 f906 	mul.w	r9, r9, r6
 8023458:	fb07 f800 	mul.w	r8, r7, r0
 802345c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023460:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023464:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023468:	44d1      	add	r9, sl
 802346a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802346e:	f108 0020 	add.w	r0, r8, #32
 8023472:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023476:	0a00      	lsrs	r0, r0, #8
 8023478:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802347c:	4330      	orrs	r0, r6
 802347e:	b28e      	uxth	r6, r1
 8023480:	fa1f f98e 	uxth.w	r9, lr
 8023484:	fb06 f809 	mul.w	r8, r6, r9
 8023488:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802348c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023490:	0136      	lsls	r6, r6, #4
 8023492:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023496:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802349a:	9601      	str	r6, [sp, #4]
 802349c:	ea4a 0404 	orr.w	r4, sl, r4
 80234a0:	fa1f f689 	uxth.w	r6, r9
 80234a4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80234a8:	fb11 f90e 	smulbb	r9, r1, lr
 80234ac:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80234b0:	9602      	str	r6, [sp, #8]
 80234b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234b6:	4626      	mov	r6, r4
 80234b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80234bc:	f1ce 0410 	rsb	r4, lr, #16
 80234c0:	1a64      	subs	r4, r4, r1
 80234c2:	ea4a 0202 	orr.w	r2, sl, r2
 80234c6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80234ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80234ce:	434a      	muls	r2, r1
 80234d0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80234d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234d8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80234dc:	fb04 2406 	mla	r4, r4, r6, r2
 80234e0:	ea4a 0000 	orr.w	r0, sl, r0
 80234e4:	fb09 4200 	mla	r2, r9, r0, r4
 80234e8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80234ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80234f0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80234f4:	ea44 0b0b 	orr.w	fp, r4, fp
 80234f8:	9c01      	ldr	r4, [sp, #4]
 80234fa:	9e02      	ldr	r6, [sp, #8]
 80234fc:	9903      	ldr	r1, [sp, #12]
 80234fe:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8023502:	1ba4      	subs	r4, r4, r6
 8023504:	9e01      	ldr	r6, [sp, #4]
 8023506:	8808      	ldrh	r0, [r1, #0]
 8023508:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802350c:	eba6 0608 	sub.w	r6, r6, r8
 8023510:	b2b6      	uxth	r6, r6
 8023512:	b2a4      	uxth	r4, r4
 8023514:	4373      	muls	r3, r6
 8023516:	fb0c 3304 	mla	r3, ip, r4, r3
 802351a:	9c02      	ldr	r4, [sp, #8]
 802351c:	fb04 3505 	mla	r5, r4, r5, r3
 8023520:	fb08 5707 	mla	r7, r8, r7, r5
 8023524:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023528:	b289      	uxth	r1, r1
 802352a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802352e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023532:	434f      	muls	r7, r1
 8023534:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023538:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802353c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023540:	1c7b      	adds	r3, r7, #1
 8023542:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023546:	ea42 0e0e 	orr.w	lr, r2, lr
 802354a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802354e:	fa1f f28e 	uxth.w	r2, lr
 8023552:	1203      	asrs	r3, r0, #8
 8023554:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8023558:	b2ff      	uxtb	r7, r7
 802355a:	1215      	asrs	r5, r2, #8
 802355c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023560:	fb13 f307 	smulbb	r3, r3, r7
 8023564:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023568:	fb05 3501 	mla	r5, r5, r1, r3
 802356c:	10c3      	asrs	r3, r0, #3
 802356e:	10d4      	asrs	r4, r2, #3
 8023570:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023574:	fb13 f307 	smulbb	r3, r3, r7
 8023578:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802357c:	fb04 3401 	mla	r4, r4, r1, r3
 8023580:	00c3      	lsls	r3, r0, #3
 8023582:	00d2      	lsls	r2, r2, #3
 8023584:	b2db      	uxtb	r3, r3
 8023586:	fb13 f307 	smulbb	r3, r3, r7
 802358a:	b2d2      	uxtb	r2, r2
 802358c:	fb02 3101 	mla	r1, r2, r1, r3
 8023590:	b2ad      	uxth	r5, r5
 8023592:	b289      	uxth	r1, r1
 8023594:	b2a4      	uxth	r4, r4
 8023596:	1c6b      	adds	r3, r5, #1
 8023598:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802359c:	1c62      	adds	r2, r4, #1
 802359e:	1c4b      	adds	r3, r1, #1
 80235a0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80235a4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80235a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80235ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80235b0:	0964      	lsrs	r4, r4, #5
 80235b2:	432b      	orrs	r3, r5
 80235b4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80235b8:	9a03      	ldr	r2, [sp, #12]
 80235ba:	4323      	orrs	r3, r4
 80235bc:	8013      	strh	r3, [r2, #0]
 80235be:	b005      	add	sp, #20
 80235c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80235c4:	f04f 0c00 	mov.w	ip, #0
 80235c8:	4664      	mov	r4, ip
 80235ca:	e6d6      	b.n	802337a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80235cc:	2300      	movs	r3, #0
 80235ce:	469c      	mov	ip, r3
 80235d0:	461a      	mov	r2, r3
 80235d2:	461c      	mov	r4, r3
 80235d4:	e6f8      	b.n	80233c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235d6:	2300      	movs	r3, #0
 80235d8:	461a      	mov	r2, r3
 80235da:	e6f5      	b.n	80233c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235dc:	460b      	mov	r3, r1
 80235de:	460a      	mov	r2, r1
 80235e0:	e6f2      	b.n	80233c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235e2:	2500      	movs	r5, #0
 80235e4:	46ab      	mov	fp, r5
 80235e6:	e720      	b.n	802342a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80235e8:	2700      	movs	r7, #0
 80235ea:	463d      	mov	r5, r7
 80235ec:	4638      	mov	r0, r7
 80235ee:	46bb      	mov	fp, r7
 80235f0:	e745      	b.n	802347e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235f2:	4677      	mov	r7, lr
 80235f4:	4675      	mov	r5, lr
 80235f6:	4670      	mov	r0, lr
 80235f8:	46f3      	mov	fp, lr
 80235fa:	e740      	b.n	802347e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235fc:	2700      	movs	r7, #0
 80235fe:	4638      	mov	r0, r7
 8023600:	e73d      	b.n	802347e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023602:	460f      	mov	r7, r1
 8023604:	4608      	mov	r0, r1
 8023606:	e73a      	b.n	802347e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08023608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802360c:	b097      	sub	sp, #92	; 0x5c
 802360e:	9214      	str	r2, [sp, #80]	; 0x50
 8023610:	9308      	str	r3, [sp, #32]
 8023612:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023614:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023618:	9312      	str	r3, [sp, #72]	; 0x48
 802361a:	9111      	str	r1, [sp, #68]	; 0x44
 802361c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023620:	9015      	str	r0, [sp, #84]	; 0x54
 8023622:	6850      	ldr	r0, [r2, #4]
 8023624:	6812      	ldr	r2, [r2, #0]
 8023626:	fb00 1303 	mla	r3, r0, r3, r1
 802362a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802362e:	9309      	str	r3, [sp, #36]	; 0x24
 8023630:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023632:	681b      	ldr	r3, [r3, #0]
 8023634:	930b      	str	r3, [sp, #44]	; 0x2c
 8023636:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023638:	685b      	ldr	r3, [r3, #4]
 802363a:	930c      	str	r3, [sp, #48]	; 0x30
 802363c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8023640:	930a      	str	r3, [sp, #40]	; 0x28
 8023642:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023644:	2b00      	cmp	r3, #0
 8023646:	dc03      	bgt.n	8023650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023648:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802364a:	2b00      	cmp	r3, #0
 802364c:	f340 83cb 	ble.w	8023de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023650:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023652:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023656:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802365a:	1e48      	subs	r0, r1, #1
 802365c:	1e55      	subs	r5, r2, #1
 802365e:	9b08      	ldr	r3, [sp, #32]
 8023660:	2b00      	cmp	r3, #0
 8023662:	f340 81a3 	ble.w	80239ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8023666:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023668:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802366a:	1436      	asrs	r6, r6, #16
 802366c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023670:	d406      	bmi.n	8023680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023672:	4286      	cmp	r6, r0
 8023674:	da04      	bge.n	8023680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023676:	2b00      	cmp	r3, #0
 8023678:	db02      	blt.n	8023680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802367a:	42ab      	cmp	r3, r5
 802367c:	f2c0 8197 	blt.w	80239ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023680:	3601      	adds	r6, #1
 8023682:	f100 8184 	bmi.w	802398e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023686:	42b1      	cmp	r1, r6
 8023688:	f2c0 8181 	blt.w	802398e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802368c:	3301      	adds	r3, #1
 802368e:	f100 817e 	bmi.w	802398e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023692:	429a      	cmp	r2, r3
 8023694:	f2c0 817b 	blt.w	802398e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023698:	9b08      	ldr	r3, [sp, #32]
 802369a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802369c:	9313      	str	r3, [sp, #76]	; 0x4c
 802369e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80236a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80236a4:	2b00      	cmp	r3, #0
 80236a6:	f340 81a4 	ble.w	80239f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80236aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80236ac:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80236ae:	1418      	asrs	r0, r3, #16
 80236b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80236b2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80236b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80236b8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80236bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80236be:	142d      	asrs	r5, r5, #16
 80236c0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80236c4:	f100 81f8 	bmi.w	8023ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236c8:	f102 3eff 	add.w	lr, r2, #4294967295
 80236cc:	4575      	cmp	r5, lr
 80236ce:	f280 81f3 	bge.w	8023ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236d2:	2800      	cmp	r0, #0
 80236d4:	f2c0 81f0 	blt.w	8023ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236d8:	f103 3eff 	add.w	lr, r3, #4294967295
 80236dc:	4570      	cmp	r0, lr
 80236de:	f280 81eb 	bge.w	8023ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236e4:	b212      	sxth	r2, r2
 80236e6:	fb00 5002 	mla	r0, r0, r2, r5
 80236ea:	fa1f fe81 	uxth.w	lr, r1
 80236ee:	eb03 0a00 	add.w	sl, r3, r0
 80236f2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80236f6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80236fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80236fe:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023702:	b29b      	uxth	r3, r3
 8023704:	f1bc 0f00 	cmp.w	ip, #0
 8023708:	f000 81b9 	beq.w	8023a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802370c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023710:	940d      	str	r4, [sp, #52]	; 0x34
 8023712:	eb0a 0b02 	add.w	fp, sl, r2
 8023716:	fa1f fa8c 	uxth.w	sl, ip
 802371a:	fb0a fe0e 	mul.w	lr, sl, lr
 802371e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023722:	fa1f fa8a 	uxth.w	sl, sl
 8023726:	eba5 050e 	sub.w	r5, r5, lr
 802372a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802372e:	940e      	str	r4, [sp, #56]	; 0x38
 8023730:	eba3 030a 	sub.w	r3, r3, sl
 8023734:	b2ad      	uxth	r5, r5
 8023736:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023738:	b29b      	uxth	r3, r3
 802373a:	fb08 f505 	mul.w	r5, r8, r5
 802373e:	fb09 5303 	mla	r3, r9, r3, r5
 8023742:	fb0a 3304 	mla	r3, sl, r4, r3
 8023746:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023748:	fb0e 3304 	mla	r3, lr, r4, r3
 802374c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023750:	2b00      	cmp	r3, #0
 8023752:	f000 810f 	beq.w	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023756:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023758:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802375c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023760:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023764:	f000 8190 	beq.w	8023a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023768:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802376c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023770:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023774:	fb09 f000 	mul.w	r0, r9, r0
 8023778:	fb0a fe0e 	mul.w	lr, sl, lr
 802377c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023780:	f100 0b20 	add.w	fp, r0, #32
 8023784:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023788:	44ce      	add	lr, r9
 802378a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802378e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023792:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023796:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802379a:	ea4e 0909 	orr.w	r9, lr, r9
 802379e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80237a2:	8868      	ldrh	r0, [r5, #2]
 80237a4:	d019      	beq.n	80237da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80237a6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80237aa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80237ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237b2:	fb08 f800 	mul.w	r8, r8, r0
 80237b6:	fb0a fe0e 	mul.w	lr, sl, lr
 80237ba:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80237be:	f108 0b20 	add.w	fp, r8, #32
 80237c2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80237c6:	4486      	add	lr, r0
 80237c8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80237cc:	0a00      	lsrs	r0, r0, #8
 80237ce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80237d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237d6:	ea4e 0000 	orr.w	r0, lr, r0
 80237da:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80237de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80237e2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80237e6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80237ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237f2:	ea4e 0909 	orr.w	r9, lr, r9
 80237f6:	ea4a 0000 	orr.w	r0, sl, r0
 80237fa:	f1bc 0f00 	cmp.w	ip, #0
 80237fe:	f000 8145 	beq.w	8023a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8023802:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023806:	3a01      	subs	r2, #1
 8023808:	0052      	lsls	r2, r2, #1
 802380a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802380c:	3202      	adds	r2, #2
 802380e:	2cff      	cmp	r4, #255	; 0xff
 8023810:	eb05 0e02 	add.w	lr, r5, r2
 8023814:	5aaa      	ldrh	r2, [r5, r2]
 8023816:	d018      	beq.n	802384a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023818:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802381c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023820:	fb04 fa02 	mul.w	sl, r4, r2
 8023824:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023828:	fb08 f805 	mul.w	r8, r8, r5
 802382c:	f10a 0520 	add.w	r5, sl, #32
 8023830:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023834:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023838:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802383c:	4442      	add	r2, r8
 802383e:	0a2d      	lsrs	r5, r5, #8
 8023840:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023844:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023848:	432a      	orrs	r2, r5
 802384a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802384c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023850:	2cff      	cmp	r4, #255	; 0xff
 8023852:	d01a      	beq.n	802388a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023854:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023858:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802385c:	fb04 fa05 	mul.w	sl, r4, r5
 8023860:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023864:	fb08 f80e 	mul.w	r8, r8, lr
 8023868:	f10a 0e20 	add.w	lr, sl, #32
 802386c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023870:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023874:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023878:	4445      	add	r5, r8
 802387a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802387e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023882:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023886:	ea45 050e 	orr.w	r5, r5, lr
 802388a:	fb1c fe01 	smulbb	lr, ip, r1
 802388e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023892:	f1cc 0810 	rsb	r8, ip, #16
 8023896:	eba8 0801 	sub.w	r8, r8, r1
 802389a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802389e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80238a2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80238a6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80238aa:	4341      	muls	r1, r0
 80238ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80238b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80238b4:	ea4a 0202 	orr.w	r2, sl, r2
 80238b8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80238bc:	fb09 1108 	mla	r1, r9, r8, r1
 80238c0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80238c4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80238c8:	fb0c 1102 	mla	r1, ip, r2, r1
 80238cc:	ea4b 0505 	orr.w	r5, fp, r5
 80238d0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80238d4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80238d8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80238dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80238e0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80238e4:	ea42 0e0e 	orr.w	lr, r2, lr
 80238e8:	fa1f f28e 	uxth.w	r2, lr
 80238ec:	2bff      	cmp	r3, #255	; 0xff
 80238ee:	d103      	bne.n	80238f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80238f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80238f2:	29ff      	cmp	r1, #255	; 0xff
 80238f4:	f000 80de 	beq.w	8023ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80238f8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80238fa:	8838      	ldrh	r0, [r7, #0]
 80238fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80238fe:	434b      	muls	r3, r1
 8023900:	f103 0c01 	add.w	ip, r3, #1
 8023904:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023908:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802390c:	fa5f fc83 	uxtb.w	ip, r3
 8023910:	1203      	asrs	r3, r0, #8
 8023912:	1215      	asrs	r5, r2, #8
 8023914:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023918:	fb13 f30c 	smulbb	r3, r3, ip
 802391c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023920:	fb05 3501 	mla	r5, r5, r1, r3
 8023924:	10c3      	asrs	r3, r0, #3
 8023926:	10d1      	asrs	r1, r2, #3
 8023928:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802392c:	fb13 f30c 	smulbb	r3, r3, ip
 8023930:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023934:	fb01 3104 	mla	r1, r1, r4, r3
 8023938:	00c3      	lsls	r3, r0, #3
 802393a:	00d2      	lsls	r2, r2, #3
 802393c:	b2db      	uxtb	r3, r3
 802393e:	b2d2      	uxtb	r2, r2
 8023940:	fb13 f30c 	smulbb	r3, r3, ip
 8023944:	b2ad      	uxth	r5, r5
 8023946:	fb02 3304 	mla	r3, r2, r4, r3
 802394a:	b29a      	uxth	r2, r3
 802394c:	1c6b      	adds	r3, r5, #1
 802394e:	b289      	uxth	r1, r1
 8023950:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023954:	1c53      	adds	r3, r2, #1
 8023956:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802395a:	1c4a      	adds	r2, r1, #1
 802395c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023960:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023964:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023968:	0949      	lsrs	r1, r1, #5
 802396a:	432b      	orrs	r3, r5
 802396c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023970:	430b      	orrs	r3, r1
 8023972:	803b      	strh	r3, [r7, #0]
 8023974:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023976:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023978:	4413      	add	r3, r2
 802397a:	9321      	str	r3, [sp, #132]	; 0x84
 802397c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802397e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023980:	441a      	add	r2, r3
 8023982:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023984:	9222      	str	r2, [sp, #136]	; 0x88
 8023986:	3b01      	subs	r3, #1
 8023988:	3702      	adds	r7, #2
 802398a:	9313      	str	r3, [sp, #76]	; 0x4c
 802398c:	e689      	b.n	80236a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802398e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023990:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023992:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023994:	4433      	add	r3, r6
 8023996:	9321      	str	r3, [sp, #132]	; 0x84
 8023998:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802399a:	441c      	add	r4, r3
 802399c:	9b08      	ldr	r3, [sp, #32]
 802399e:	9422      	str	r4, [sp, #136]	; 0x88
 80239a0:	3b01      	subs	r3, #1
 80239a2:	9308      	str	r3, [sp, #32]
 80239a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239a6:	3302      	adds	r3, #2
 80239a8:	9309      	str	r3, [sp, #36]	; 0x24
 80239aa:	e658      	b.n	802365e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80239ac:	d028      	beq.n	8023a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80239ae:	9b08      	ldr	r3, [sp, #32]
 80239b0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80239b2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80239b4:	3b01      	subs	r3, #1
 80239b6:	fb00 5003 	mla	r0, r0, r3, r5
 80239ba:	1400      	asrs	r0, r0, #16
 80239bc:	f53f ae6c 	bmi.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239c0:	3901      	subs	r1, #1
 80239c2:	4288      	cmp	r0, r1
 80239c4:	f6bf ae68 	bge.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239c8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80239ca:	9822      	ldr	r0, [sp, #136]	; 0x88
 80239cc:	fb01 0303 	mla	r3, r1, r3, r0
 80239d0:	141b      	asrs	r3, r3, #16
 80239d2:	f53f ae61 	bmi.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239d6:	3a01      	subs	r2, #1
 80239d8:	4293      	cmp	r3, r2
 80239da:	f6bf ae5d 	bge.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239de:	9b08      	ldr	r3, [sp, #32]
 80239e0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80239e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80239e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80239ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80239ec:	2b00      	cmp	r3, #0
 80239ee:	f300 8082 	bgt.w	8023af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80239f2:	9b08      	ldr	r3, [sp, #32]
 80239f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80239f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80239fe:	9309      	str	r3, [sp, #36]	; 0x24
 8023a00:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023a02:	2b00      	cmp	r3, #0
 8023a04:	f340 81ef 	ble.w	8023de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023a08:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a22:	eef0 6a62 	vmov.f32	s13, s5
 8023a26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a32:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023a36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a3a:	eef0 6a43 	vmov.f32	s13, s6
 8023a3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a42:	ee12 2a90 	vmov	r2, s5
 8023a46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a4e:	ee13 2a10 	vmov	r2, s6
 8023a52:	9323      	str	r3, [sp, #140]	; 0x8c
 8023a54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a56:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a5a:	9324      	str	r3, [sp, #144]	; 0x90
 8023a5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023a5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023a60:	3b01      	subs	r3, #1
 8023a62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a66:	9311      	str	r3, [sp, #68]	; 0x44
 8023a68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a6a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8023a6e:	bf08      	it	eq
 8023a70:	4613      	moveq	r3, r2
 8023a72:	9308      	str	r3, [sp, #32]
 8023a74:	eeb0 3a67 	vmov.f32	s6, s15
 8023a78:	eef0 2a47 	vmov.f32	s5, s14
 8023a7c:	e5e1      	b.n	8023642 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023a7e:	fb08 f505 	mul.w	r5, r8, r5
 8023a82:	fb09 5303 	mla	r3, r9, r3, r5
 8023a86:	e661      	b.n	802374c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023a88:	4681      	mov	r9, r0
 8023a8a:	e688      	b.n	802379e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8023a8c:	f1c1 0210 	rsb	r2, r1, #16
 8023a90:	4341      	muls	r1, r0
 8023a92:	fb09 1902 	mla	r9, r9, r2, r1
 8023a96:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023a9a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023a9e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023aa2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023aa6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023aaa:	ea42 0909 	orr.w	r9, r2, r9
 8023aae:	fa1f f289 	uxth.w	r2, r9
 8023ab2:	e71b      	b.n	80238ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023ab4:	803a      	strh	r2, [r7, #0]
 8023ab6:	e75d      	b.n	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ab8:	f115 0e01 	adds.w	lr, r5, #1
 8023abc:	f53f af5a 	bmi.w	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ac0:	4572      	cmp	r2, lr
 8023ac2:	f6ff af57 	blt.w	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ac6:	f110 0e01 	adds.w	lr, r0, #1
 8023aca:	f53f af53 	bmi.w	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ace:	4573      	cmp	r3, lr
 8023ad0:	f6ff af50 	blt.w	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ad4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023ad6:	9502      	str	r5, [sp, #8]
 8023ad8:	b21b      	sxth	r3, r3
 8023ada:	b212      	sxth	r2, r2
 8023adc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023ae0:	9301      	str	r3, [sp, #4]
 8023ae2:	9200      	str	r2, [sp, #0]
 8023ae4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023ae8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023aec:	4639      	mov	r1, r7
 8023aee:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023af0:	f7ff fc04 	bl	80232fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023af4:	e73e      	b.n	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023af6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023af8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023afc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023afe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023b02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023b04:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b08:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023b0a:	141f      	asrs	r7, r3, #16
 8023b0c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023b0e:	141b      	asrs	r3, r3, #16
 8023b10:	fb01 3707 	mla	r7, r1, r7, r3
 8023b14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023b16:	fa1f fc82 	uxth.w	ip, r2
 8023b1a:	eb03 0a07 	add.w	sl, r3, r7
 8023b1e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023b22:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023b26:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023b2a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023b2e:	b29b      	uxth	r3, r3
 8023b30:	2d00      	cmp	r5, #0
 8023b32:	f000 813d 	beq.w	8023db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023b36:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023b3a:	940f      	str	r4, [sp, #60]	; 0x3c
 8023b3c:	eb0a 0b01 	add.w	fp, sl, r1
 8023b40:	fa1f fa85 	uxth.w	sl, r5
 8023b44:	fb0a fc0c 	mul.w	ip, sl, ip
 8023b48:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023b4c:	fa1f fa8a 	uxth.w	sl, sl
 8023b50:	eba0 000c 	sub.w	r0, r0, ip
 8023b54:	eba3 030a 	sub.w	r3, r3, sl
 8023b58:	b280      	uxth	r0, r0
 8023b5a:	fb08 f000 	mul.w	r0, r8, r0
 8023b5e:	b29b      	uxth	r3, r3
 8023b60:	fb09 0303 	mla	r3, r9, r3, r0
 8023b64:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023b66:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023b6a:	9410      	str	r4, [sp, #64]	; 0x40
 8023b6c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023b70:	fb0c 3304 	mla	r3, ip, r4, r3
 8023b74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023b78:	2b00      	cmp	r3, #0
 8023b7a:	f000 810b 	beq.w	8023d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023b7e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023b80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023b82:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023b86:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023b8a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023b8e:	f000 8114 	beq.w	8023dba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023b92:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023b96:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023b9a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023b9e:	fb09 f707 	mul.w	r7, r9, r7
 8023ba2:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ba6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023baa:	f107 0b20 	add.w	fp, r7, #32
 8023bae:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023bb2:	44cc      	add	ip, r9
 8023bb4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023bb8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023bbc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023bc0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023bc4:	ea4c 0909 	orr.w	r9, ip, r9
 8023bc8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023bcc:	8847      	ldrh	r7, [r0, #2]
 8023bce:	d019      	beq.n	8023c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023bd0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023bd4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023bd8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023bdc:	fb08 f807 	mul.w	r8, r8, r7
 8023be0:	fb0a fc0c 	mul.w	ip, sl, ip
 8023be4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023be8:	f108 0b20 	add.w	fp, r8, #32
 8023bec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023bf0:	44bc      	add	ip, r7
 8023bf2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023bf6:	0a3f      	lsrs	r7, r7, #8
 8023bf8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023bfc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023c00:	ea4c 0707 	orr.w	r7, ip, r7
 8023c04:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023c08:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023c0c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023c10:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023c14:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023c18:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023c1c:	ea4c 0909 	orr.w	r9, ip, r9
 8023c20:	ea4a 0707 	orr.w	r7, sl, r7
 8023c24:	2d00      	cmp	r5, #0
 8023c26:	f000 80ca 	beq.w	8023dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023c2a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023c2e:	3901      	subs	r1, #1
 8023c30:	0049      	lsls	r1, r1, #1
 8023c32:	3102      	adds	r1, #2
 8023c34:	eb00 0c01 	add.w	ip, r0, r1
 8023c38:	5a41      	ldrh	r1, [r0, r1]
 8023c3a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023c3c:	28ff      	cmp	r0, #255	; 0xff
 8023c3e:	d019      	beq.n	8023c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023c40:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023c42:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023c46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c4a:	fb04 fa01 	mul.w	sl, r4, r1
 8023c4e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c52:	fb08 f800 	mul.w	r8, r8, r0
 8023c56:	f10a 0020 	add.w	r0, sl, #32
 8023c5a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023c5e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023c62:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c66:	4441      	add	r1, r8
 8023c68:	0a00      	lsrs	r0, r0, #8
 8023c6a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023c6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c72:	4301      	orrs	r1, r0
 8023c74:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023c76:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023c7a:	2cff      	cmp	r4, #255	; 0xff
 8023c7c:	d01a      	beq.n	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8023c7e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023c82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c86:	fb04 fa00 	mul.w	sl, r4, r0
 8023c8a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c8e:	fb08 f80c 	mul.w	r8, r8, ip
 8023c92:	f10a 0c20 	add.w	ip, sl, #32
 8023c96:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023c9a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023c9e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ca2:	4440      	add	r0, r8
 8023ca4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ca8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023cac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023cb0:	ea40 000c 	orr.w	r0, r0, ip
 8023cb4:	fb15 fc02 	smulbb	ip, r5, r2
 8023cb8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023cbc:	f1c5 0810 	rsb	r8, r5, #16
 8023cc0:	eba8 0802 	sub.w	r8, r8, r2
 8023cc4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023cc8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023ccc:	437a      	muls	r2, r7
 8023cce:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023cd2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023cd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023cda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023cde:	fb09 2208 	mla	r2, r9, r8, r2
 8023ce2:	ea4a 0101 	orr.w	r1, sl, r1
 8023ce6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023cea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023cee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023cf2:	fb05 2201 	mla	r2, r5, r1, r2
 8023cf6:	ea4b 0000 	orr.w	r0, fp, r0
 8023cfa:	fb0c 2200 	mla	r2, ip, r0, r2
 8023cfe:	0d57      	lsrs	r7, r2, #21
 8023d00:	0952      	lsrs	r2, r2, #5
 8023d02:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023d0a:	433a      	orrs	r2, r7
 8023d0c:	2bff      	cmp	r3, #255	; 0xff
 8023d0e:	b292      	uxth	r2, r2
 8023d10:	d102      	bne.n	8023d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023d12:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023d14:	29ff      	cmp	r1, #255	; 0xff
 8023d16:	d063      	beq.n	8023de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023d18:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023d1a:	f8be 1000 	ldrh.w	r1, [lr]
 8023d1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023d20:	4343      	muls	r3, r0
 8023d22:	1c58      	adds	r0, r3, #1
 8023d24:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023d28:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023d2c:	1208      	asrs	r0, r1, #8
 8023d2e:	b2db      	uxtb	r3, r3
 8023d30:	1215      	asrs	r5, r2, #8
 8023d32:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023d36:	fb10 f003 	smulbb	r0, r0, r3
 8023d3a:	10cf      	asrs	r7, r1, #3
 8023d3c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023d40:	00c9      	lsls	r1, r1, #3
 8023d42:	fb05 0504 	mla	r5, r5, r4, r0
 8023d46:	b2c9      	uxtb	r1, r1
 8023d48:	10d0      	asrs	r0, r2, #3
 8023d4a:	00d2      	lsls	r2, r2, #3
 8023d4c:	fb11 f103 	smulbb	r1, r1, r3
 8023d50:	b2d2      	uxtb	r2, r2
 8023d52:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023d56:	fb02 1204 	mla	r2, r2, r4, r1
 8023d5a:	fb17 f703 	smulbb	r7, r7, r3
 8023d5e:	b2ad      	uxth	r5, r5
 8023d60:	b292      	uxth	r2, r2
 8023d62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023d66:	fb00 7004 	mla	r0, r0, r4, r7
 8023d6a:	1c6b      	adds	r3, r5, #1
 8023d6c:	1c57      	adds	r7, r2, #1
 8023d6e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023d72:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023d76:	b280      	uxth	r0, r0
 8023d78:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023d7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023d80:	433d      	orrs	r5, r7
 8023d82:	1c47      	adds	r7, r0, #1
 8023d84:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023d88:	097f      	lsrs	r7, r7, #5
 8023d8a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d8e:	433d      	orrs	r5, r7
 8023d90:	f8ae 5000 	strh.w	r5, [lr]
 8023d94:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023d96:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023d98:	4413      	add	r3, r2
 8023d9a:	9321      	str	r3, [sp, #132]	; 0x84
 8023d9c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023d9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023da0:	441a      	add	r2, r3
 8023da2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023da4:	9222      	str	r2, [sp, #136]	; 0x88
 8023da6:	3b01      	subs	r3, #1
 8023da8:	f10e 0e02 	add.w	lr, lr, #2
 8023dac:	9313      	str	r3, [sp, #76]	; 0x4c
 8023dae:	e61c      	b.n	80239ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023db0:	fb08 f000 	mul.w	r0, r8, r0
 8023db4:	fb09 0303 	mla	r3, r9, r3, r0
 8023db8:	e6dc      	b.n	8023b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8023dba:	46b9      	mov	r9, r7
 8023dbc:	e704      	b.n	8023bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8023dbe:	f1c2 0110 	rsb	r1, r2, #16
 8023dc2:	437a      	muls	r2, r7
 8023dc4:	fb09 2901 	mla	r9, r9, r1, r2
 8023dc8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023dcc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023dd0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023dd4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023dd8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023ddc:	4302      	orrs	r2, r0
 8023dde:	e795      	b.n	8023d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023de0:	f8ae 2000 	strh.w	r2, [lr]
 8023de4:	e7d6      	b.n	8023d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023de6:	b017      	add	sp, #92	; 0x5c
 8023de8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023df0:	b085      	sub	sp, #20
 8023df2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023df6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023dfa:	9103      	str	r1, [sp, #12]
 8023dfc:	fb00 7406 	mla	r4, r0, r6, r7
 8023e00:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023e04:	2800      	cmp	r0, #0
 8023e06:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8023e0a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8023e0e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023e12:	9501      	str	r5, [sp, #4]
 8023e14:	eb02 0904 	add.w	r9, r2, r4
 8023e18:	f2c0 8141 	blt.w	802409e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023e1c:	4583      	cmp	fp, r0
 8023e1e:	f340 813e 	ble.w	802409e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023e22:	2f00      	cmp	r7, #0
 8023e24:	f2c0 8137 	blt.w	8024096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023e28:	42be      	cmp	r6, r7
 8023e2a:	f340 8134 	ble.w	8024096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023e2e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023e32:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023e36:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023e3a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8023e3e:	4355      	muls	r5, r2
 8023e40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e44:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023e48:	fb0c f203 	mul.w	r2, ip, r3
 8023e4c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023e50:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023e54:	441d      	add	r5, r3
 8023e56:	f102 0320 	add.w	r3, r2, #32
 8023e5a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e5e:	0a1b      	lsrs	r3, r3, #8
 8023e60:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023e64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e68:	431c      	orrs	r4, r3
 8023e6a:	1c7b      	adds	r3, r7, #1
 8023e6c:	f100 811c 	bmi.w	80240a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023e70:	429e      	cmp	r6, r3
 8023e72:	f340 8119 	ble.w	80240a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023e76:	2900      	cmp	r1, #0
 8023e78:	f000 8119 	beq.w	80240ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8023e7c:	9a01      	ldr	r2, [sp, #4]
 8023e7e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023e82:	8855      	ldrh	r5, [r2, #2]
 8023e84:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023e88:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023e8c:	fb08 f802 	mul.w	r8, r8, r2
 8023e90:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023e94:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023e98:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8023e9c:	435d      	muls	r5, r3
 8023e9e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ea2:	44d0      	add	r8, sl
 8023ea4:	f105 0a20 	add.w	sl, r5, #32
 8023ea8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023eac:	0a2d      	lsrs	r5, r5, #8
 8023eae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023eb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023eb6:	432a      	orrs	r2, r5
 8023eb8:	3001      	adds	r0, #1
 8023eba:	f100 80fe 	bmi.w	80240ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023ebe:	4583      	cmp	fp, r0
 8023ec0:	f340 80fb 	ble.w	80240ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023ec4:	f1be 0f00 	cmp.w	lr, #0
 8023ec8:	f000 80fc 	beq.w	80240c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023ecc:	2f00      	cmp	r7, #0
 8023ece:	f2c0 80f1 	blt.w	80240b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ed2:	42be      	cmp	r6, r7
 8023ed4:	f340 80ee 	ble.w	80240b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ed8:	9801      	ldr	r0, [sp, #4]
 8023eda:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023ede:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023ee2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023ee6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023eea:	fb0a fa00 	mul.w	sl, sl, r0
 8023eee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023ef2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023ef6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8023efa:	fb05 f808 	mul.w	r8, r5, r8
 8023efe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023f02:	4482      	add	sl, r0
 8023f04:	f108 0020 	add.w	r0, r8, #32
 8023f08:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023f0c:	0a00      	lsrs	r0, r0, #8
 8023f0e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023f12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f16:	ea4b 0b00 	orr.w	fp, fp, r0
 8023f1a:	3701      	adds	r7, #1
 8023f1c:	f100 80d7 	bmi.w	80240ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023f20:	42be      	cmp	r6, r7
 8023f22:	f340 80d4 	ble.w	80240ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023f26:	2900      	cmp	r1, #0
 8023f28:	f000 80d4 	beq.w	80240d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023f2c:	3601      	adds	r6, #1
 8023f2e:	9801      	ldr	r0, [sp, #4]
 8023f30:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023f34:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023f38:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023f3c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023f40:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f44:	fb09 f906 	mul.w	r9, r9, r6
 8023f48:	fb07 f800 	mul.w	r8, r7, r0
 8023f4c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023f50:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023f54:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023f58:	44d1      	add	r9, sl
 8023f5a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023f5e:	f108 0020 	add.w	r0, r8, #32
 8023f62:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023f66:	0a00      	lsrs	r0, r0, #8
 8023f68:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f6c:	4330      	orrs	r0, r6
 8023f6e:	b28e      	uxth	r6, r1
 8023f70:	fa1f f98e 	uxth.w	r9, lr
 8023f74:	fb06 f809 	mul.w	r8, r6, r9
 8023f78:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023f7c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023f80:	0136      	lsls	r6, r6, #4
 8023f82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f86:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023f8a:	9601      	str	r6, [sp, #4]
 8023f8c:	ea4a 0404 	orr.w	r4, sl, r4
 8023f90:	fa1f f689 	uxth.w	r6, r9
 8023f94:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023f98:	fb11 f90e 	smulbb	r9, r1, lr
 8023f9c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023fa0:	9602      	str	r6, [sp, #8]
 8023fa2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023fa6:	4626      	mov	r6, r4
 8023fa8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023fac:	f1ce 0410 	rsb	r4, lr, #16
 8023fb0:	1a64      	subs	r4, r4, r1
 8023fb2:	ea4a 0202 	orr.w	r2, sl, r2
 8023fb6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023fba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023fbe:	434a      	muls	r2, r1
 8023fc0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023fc4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023fc8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023fcc:	fb04 2406 	mla	r4, r4, r6, r2
 8023fd0:	ea4a 0000 	orr.w	r0, sl, r0
 8023fd4:	fb09 4200 	mla	r2, r9, r0, r4
 8023fd8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023fdc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023fe0:	9801      	ldr	r0, [sp, #4]
 8023fe2:	9903      	ldr	r1, [sp, #12]
 8023fe4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023fe8:	ea44 0b0b 	orr.w	fp, r4, fp
 8023fec:	9c02      	ldr	r4, [sp, #8]
 8023fee:	8809      	ldrh	r1, [r1, #0]
 8023ff0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023ff4:	1b00      	subs	r0, r0, r4
 8023ff6:	9c01      	ldr	r4, [sp, #4]
 8023ff8:	eba4 0608 	sub.w	r6, r4, r8
 8023ffc:	b2b6      	uxth	r6, r6
 8023ffe:	b280      	uxth	r0, r0
 8024000:	4373      	muls	r3, r6
 8024002:	fb0c 3300 	mla	r3, ip, r0, r3
 8024006:	9802      	ldr	r0, [sp, #8]
 8024008:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802400c:	fb00 3505 	mla	r5, r0, r5, r3
 8024010:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8024014:	fb08 5707 	mla	r7, r8, r7, r5
 8024018:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802401c:	120b      	asrs	r3, r1, #8
 802401e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024022:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8024026:	b2ff      	uxtb	r7, r7
 8024028:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802402c:	10c8      	asrs	r0, r1, #3
 802402e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024032:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024036:	00c9      	lsls	r1, r1, #3
 8024038:	437b      	muls	r3, r7
 802403a:	ea42 0e0e 	orr.w	lr, r2, lr
 802403e:	b2c9      	uxtb	r1, r1
 8024040:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024044:	fa1f f28e 	uxth.w	r2, lr
 8024048:	4378      	muls	r0, r7
 802404a:	434f      	muls	r7, r1
 802404c:	1c59      	adds	r1, r3, #1
 802404e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024052:	1213      	asrs	r3, r2, #8
 8024054:	f023 0307 	bic.w	r3, r3, #7
 8024058:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802405c:	1c41      	adds	r1, r0, #1
 802405e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024062:	10d1      	asrs	r1, r2, #3
 8024064:	f021 0103 	bic.w	r1, r1, #3
 8024068:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802406c:	021b      	lsls	r3, r3, #8
 802406e:	00c9      	lsls	r1, r1, #3
 8024070:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024074:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024078:	430b      	orrs	r3, r1
 802407a:	1c79      	adds	r1, r7, #1
 802407c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8024080:	00d2      	lsls	r2, r2, #3
 8024082:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024086:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802408a:	431a      	orrs	r2, r3
 802408c:	9b03      	ldr	r3, [sp, #12]
 802408e:	801a      	strh	r2, [r3, #0]
 8024090:	b005      	add	sp, #20
 8024092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024096:	f04f 0c00 	mov.w	ip, #0
 802409a:	4664      	mov	r4, ip
 802409c:	e6e5      	b.n	8023e6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802409e:	2300      	movs	r3, #0
 80240a0:	469c      	mov	ip, r3
 80240a2:	461a      	mov	r2, r3
 80240a4:	461c      	mov	r4, r3
 80240a6:	e707      	b.n	8023eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80240a8:	2300      	movs	r3, #0
 80240aa:	461a      	mov	r2, r3
 80240ac:	e704      	b.n	8023eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80240ae:	460b      	mov	r3, r1
 80240b0:	460a      	mov	r2, r1
 80240b2:	e701      	b.n	8023eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80240b4:	2500      	movs	r5, #0
 80240b6:	46ab      	mov	fp, r5
 80240b8:	e72f      	b.n	8023f1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80240ba:	2700      	movs	r7, #0
 80240bc:	463d      	mov	r5, r7
 80240be:	4638      	mov	r0, r7
 80240c0:	46bb      	mov	fp, r7
 80240c2:	e754      	b.n	8023f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240c4:	4677      	mov	r7, lr
 80240c6:	4675      	mov	r5, lr
 80240c8:	4670      	mov	r0, lr
 80240ca:	46f3      	mov	fp, lr
 80240cc:	e74f      	b.n	8023f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240ce:	2700      	movs	r7, #0
 80240d0:	4638      	mov	r0, r7
 80240d2:	e74c      	b.n	8023f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240d4:	460f      	mov	r7, r1
 80240d6:	4608      	mov	r0, r1
 80240d8:	e749      	b.n	8023f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080240dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80240dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240e0:	b093      	sub	sp, #76	; 0x4c
 80240e2:	9210      	str	r2, [sp, #64]	; 0x40
 80240e4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80240e6:	910e      	str	r1, [sp, #56]	; 0x38
 80240e8:	9306      	str	r3, [sp, #24]
 80240ea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80240ee:	9011      	str	r0, [sp, #68]	; 0x44
 80240f0:	6850      	ldr	r0, [r2, #4]
 80240f2:	6812      	ldr	r2, [r2, #0]
 80240f4:	fb00 1303 	mla	r3, r0, r3, r1
 80240f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80240fc:	9307      	str	r3, [sp, #28]
 80240fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024100:	681b      	ldr	r3, [r3, #0]
 8024102:	9308      	str	r3, [sp, #32]
 8024104:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024106:	685b      	ldr	r3, [r3, #4]
 8024108:	9309      	str	r3, [sp, #36]	; 0x24
 802410a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802410c:	2b00      	cmp	r3, #0
 802410e:	dc03      	bgt.n	8024118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024110:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024112:	2b00      	cmp	r3, #0
 8024114:	f340 83b4 	ble.w	8024880 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024118:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802411a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802411e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024122:	1e48      	subs	r0, r1, #1
 8024124:	1e55      	subs	r5, r2, #1
 8024126:	9b06      	ldr	r3, [sp, #24]
 8024128:	2b00      	cmp	r3, #0
 802412a:	f340 8163 	ble.w	80243f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802412e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8024130:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024132:	1436      	asrs	r6, r6, #16
 8024134:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024138:	d406      	bmi.n	8024148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802413a:	4286      	cmp	r6, r0
 802413c:	da04      	bge.n	8024148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802413e:	2b00      	cmp	r3, #0
 8024140:	db02      	blt.n	8024148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024142:	42ab      	cmp	r3, r5
 8024144:	f2c0 8157 	blt.w	80243f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8024148:	3601      	adds	r6, #1
 802414a:	f100 8144 	bmi.w	80243d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802414e:	42b1      	cmp	r1, r6
 8024150:	f2c0 8141 	blt.w	80243d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024154:	3301      	adds	r3, #1
 8024156:	f100 813e 	bmi.w	80243d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802415a:	429a      	cmp	r2, r3
 802415c:	f2c0 813b 	blt.w	80243d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024160:	9b06      	ldr	r3, [sp, #24]
 8024162:	9f07      	ldr	r7, [sp, #28]
 8024164:	930f      	str	r3, [sp, #60]	; 0x3c
 8024166:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802416a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802416c:	2b00      	cmp	r3, #0
 802416e:	f340 8164 	ble.w	802443a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8024172:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024174:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8024176:	1418      	asrs	r0, r3, #16
 8024178:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802417a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802417e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024180:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024184:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024186:	142d      	asrs	r5, r5, #16
 8024188:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802418c:	f100 81ee 	bmi.w	802456c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024190:	f102 3eff 	add.w	lr, r2, #4294967295
 8024194:	4575      	cmp	r5, lr
 8024196:	f280 81e9 	bge.w	802456c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802419a:	2800      	cmp	r0, #0
 802419c:	f2c0 81e6 	blt.w	802456c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80241a0:	f103 3eff 	add.w	lr, r3, #4294967295
 80241a4:	4570      	cmp	r0, lr
 80241a6:	f280 81e1 	bge.w	802456c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80241aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80241ac:	b212      	sxth	r2, r2
 80241ae:	fb00 5002 	mla	r0, r0, r2, r5
 80241b2:	fa1f fe81 	uxth.w	lr, r1
 80241b6:	eb03 0a00 	add.w	sl, r3, r0
 80241ba:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80241be:	f813 9000 	ldrb.w	r9, [r3, r0]
 80241c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80241c6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80241ca:	b29b      	uxth	r3, r3
 80241cc:	f1bc 0f00 	cmp.w	ip, #0
 80241d0:	f000 8179 	beq.w	80244c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80241d4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80241d8:	940a      	str	r4, [sp, #40]	; 0x28
 80241da:	eb0a 0b02 	add.w	fp, sl, r2
 80241de:	fa1f fa8c 	uxth.w	sl, ip
 80241e2:	fb0a fe0e 	mul.w	lr, sl, lr
 80241e6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80241ea:	fa1f fa8a 	uxth.w	sl, sl
 80241ee:	eba5 050e 	sub.w	r5, r5, lr
 80241f2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80241f6:	940b      	str	r4, [sp, #44]	; 0x2c
 80241f8:	eba3 030a 	sub.w	r3, r3, sl
 80241fc:	b2ad      	uxth	r5, r5
 80241fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024200:	b29b      	uxth	r3, r3
 8024202:	fb08 f505 	mul.w	r5, r8, r5
 8024206:	fb09 5303 	mla	r3, r9, r3, r5
 802420a:	fb0a 3304 	mla	r3, sl, r4, r3
 802420e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024210:	fb0e 3304 	mla	r3, lr, r4, r3
 8024214:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024218:	2b00      	cmp	r3, #0
 802421a:	f000 80cf 	beq.w	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802421e:	9c08      	ldr	r4, [sp, #32]
 8024220:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024224:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024228:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802422c:	f000 8150 	beq.w	80244d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024230:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024234:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024238:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802423c:	fb09 f000 	mul.w	r0, r9, r0
 8024240:	fb0a fe0e 	mul.w	lr, sl, lr
 8024244:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024248:	f100 0b20 	add.w	fp, r0, #32
 802424c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024250:	44ce      	add	lr, r9
 8024252:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024256:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802425a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802425e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024262:	ea4e 0909 	orr.w	r9, lr, r9
 8024266:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802426a:	8868      	ldrh	r0, [r5, #2]
 802426c:	d019      	beq.n	80242a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802426e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024272:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024276:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802427a:	fb08 f800 	mul.w	r8, r8, r0
 802427e:	fb0a fe0e 	mul.w	lr, sl, lr
 8024282:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024286:	f108 0b20 	add.w	fp, r8, #32
 802428a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802428e:	4486      	add	lr, r0
 8024290:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024294:	0a00      	lsrs	r0, r0, #8
 8024296:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802429a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802429e:	ea4e 0000 	orr.w	r0, lr, r0
 80242a2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80242a6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80242aa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80242ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80242b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80242b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80242ba:	ea4e 0909 	orr.w	r9, lr, r9
 80242be:	ea4a 0000 	orr.w	r0, sl, r0
 80242c2:	f1bc 0f00 	cmp.w	ip, #0
 80242c6:	f000 8105 	beq.w	80244d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80242ca:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80242ce:	3a01      	subs	r2, #1
 80242d0:	0052      	lsls	r2, r2, #1
 80242d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80242d4:	3202      	adds	r2, #2
 80242d6:	2cff      	cmp	r4, #255	; 0xff
 80242d8:	eb05 0e02 	add.w	lr, r5, r2
 80242dc:	5aaa      	ldrh	r2, [r5, r2]
 80242de:	d018      	beq.n	8024312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80242e0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80242e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242e8:	fb04 fa02 	mul.w	sl, r4, r2
 80242ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80242f0:	fb08 f805 	mul.w	r8, r8, r5
 80242f4:	f10a 0520 	add.w	r5, sl, #32
 80242f8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80242fc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8024300:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024304:	4442      	add	r2, r8
 8024306:	0a2d      	lsrs	r5, r5, #8
 8024308:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802430c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024310:	432a      	orrs	r2, r5
 8024312:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024314:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8024318:	2cff      	cmp	r4, #255	; 0xff
 802431a:	d01a      	beq.n	8024352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802431c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8024320:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024324:	fb04 fa05 	mul.w	sl, r4, r5
 8024328:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802432c:	fb08 f80e 	mul.w	r8, r8, lr
 8024330:	f10a 0e20 	add.w	lr, sl, #32
 8024334:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024338:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802433c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024340:	4445      	add	r5, r8
 8024342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024346:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802434a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802434e:	ea45 050e 	orr.w	r5, r5, lr
 8024352:	fb1c fe01 	smulbb	lr, ip, r1
 8024356:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802435a:	f1cc 0810 	rsb	r8, ip, #16
 802435e:	eba8 0801 	sub.w	r8, r8, r1
 8024362:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024366:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802436a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802436e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8024372:	4341      	muls	r1, r0
 8024374:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024378:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802437c:	ea4a 0202 	orr.w	r2, sl, r2
 8024380:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024384:	fb09 1108 	mla	r1, r9, r8, r1
 8024388:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802438c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024390:	fb0c 1102 	mla	r1, ip, r2, r1
 8024394:	ea4b 0505 	orr.w	r5, fp, r5
 8024398:	fb0e 1e05 	mla	lr, lr, r5, r1
 802439c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80243a0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80243a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80243a8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80243ac:	ea42 0e0e 	orr.w	lr, r2, lr
 80243b0:	fa1f f28e 	uxth.w	r2, lr
 80243b4:	2bff      	cmp	r3, #255	; 0xff
 80243b6:	f040 80a1 	bne.w	80244fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80243ba:	803a      	strh	r2, [r7, #0]
 80243bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243be:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80243c0:	4413      	add	r3, r2
 80243c2:	931d      	str	r3, [sp, #116]	; 0x74
 80243c4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80243c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243c8:	441a      	add	r2, r3
 80243ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80243cc:	921e      	str	r2, [sp, #120]	; 0x78
 80243ce:	3b01      	subs	r3, #1
 80243d0:	3702      	adds	r7, #2
 80243d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80243d4:	e6c9      	b.n	802416a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80243d6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243d8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80243da:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80243dc:	4433      	add	r3, r6
 80243de:	931d      	str	r3, [sp, #116]	; 0x74
 80243e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243e2:	441c      	add	r4, r3
 80243e4:	9b06      	ldr	r3, [sp, #24]
 80243e6:	941e      	str	r4, [sp, #120]	; 0x78
 80243e8:	3b01      	subs	r3, #1
 80243ea:	9306      	str	r3, [sp, #24]
 80243ec:	9b07      	ldr	r3, [sp, #28]
 80243ee:	3302      	adds	r3, #2
 80243f0:	9307      	str	r3, [sp, #28]
 80243f2:	e698      	b.n	8024126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80243f4:	d028      	beq.n	8024448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80243f6:	9b06      	ldr	r3, [sp, #24]
 80243f8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80243fa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80243fc:	3b01      	subs	r3, #1
 80243fe:	fb00 5003 	mla	r0, r0, r3, r5
 8024402:	1400      	asrs	r0, r0, #16
 8024404:	f53f aeac 	bmi.w	8024160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024408:	3901      	subs	r1, #1
 802440a:	4288      	cmp	r0, r1
 802440c:	f6bf aea8 	bge.w	8024160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024410:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024412:	981e      	ldr	r0, [sp, #120]	; 0x78
 8024414:	fb01 0303 	mla	r3, r1, r3, r0
 8024418:	141b      	asrs	r3, r3, #16
 802441a:	f53f aea1 	bmi.w	8024160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802441e:	3a01      	subs	r2, #1
 8024420:	4293      	cmp	r3, r2
 8024422:	f6bf ae9d 	bge.w	8024160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024426:	9b06      	ldr	r3, [sp, #24]
 8024428:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802442c:	930f      	str	r3, [sp, #60]	; 0x3c
 802442e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024432:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024434:	2b00      	cmp	r3, #0
 8024436:	f300 80b6 	bgt.w	80245a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802443a:	9b06      	ldr	r3, [sp, #24]
 802443c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024440:	9b07      	ldr	r3, [sp, #28]
 8024442:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024446:	9307      	str	r3, [sp, #28]
 8024448:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802444a:	2b00      	cmp	r3, #0
 802444c:	f340 8218 	ble.w	8024880 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024450:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024454:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024458:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802445c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802445e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024462:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024466:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802446a:	eef0 6a62 	vmov.f32	s13, s5
 802446e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024472:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024476:	ee77 2a62 	vsub.f32	s5, s14, s5
 802447a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802447e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024482:	eef0 6a43 	vmov.f32	s13, s6
 8024486:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802448a:	ee12 2a90 	vmov	r2, s5
 802448e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024492:	fb92 f3f3 	sdiv	r3, r2, r3
 8024496:	ee13 2a10 	vmov	r2, s6
 802449a:	931f      	str	r3, [sp, #124]	; 0x7c
 802449c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802449e:	fb92 f3f3 	sdiv	r3, r2, r3
 80244a2:	9320      	str	r3, [sp, #128]	; 0x80
 80244a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80244a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80244a8:	3b01      	subs	r3, #1
 80244aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80244ae:	930e      	str	r3, [sp, #56]	; 0x38
 80244b0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80244b2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80244b6:	bf08      	it	eq
 80244b8:	4613      	moveq	r3, r2
 80244ba:	9306      	str	r3, [sp, #24]
 80244bc:	eeb0 3a67 	vmov.f32	s6, s15
 80244c0:	eef0 2a47 	vmov.f32	s5, s14
 80244c4:	e621      	b.n	802410a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80244c6:	fb08 f505 	mul.w	r5, r8, r5
 80244ca:	fb09 5303 	mla	r3, r9, r3, r5
 80244ce:	e6a1      	b.n	8024214 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80244d0:	4681      	mov	r9, r0
 80244d2:	e6c8      	b.n	8024266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80244d4:	f1c1 0210 	rsb	r2, r1, #16
 80244d8:	4341      	muls	r1, r0
 80244da:	fb09 1902 	mla	r9, r9, r2, r1
 80244de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80244e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80244e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80244ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80244f2:	ea42 0909 	orr.w	r9, r2, r9
 80244f6:	fa1f f289 	uxth.w	r2, r9
 80244fa:	e75b      	b.n	80243b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80244fc:	f8b7 c000 	ldrh.w	ip, [r7]
 8024500:	43db      	mvns	r3, r3
 8024502:	ea4f 202c 	mov.w	r0, ip, asr #8
 8024506:	fa5f fe83 	uxtb.w	lr, r3
 802450a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802450e:	fb00 f00e 	mul.w	r0, r0, lr
 8024512:	1c41      	adds	r1, r0, #1
 8024514:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024518:	1211      	asrs	r1, r2, #8
 802451a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802451e:	f021 0107 	bic.w	r1, r1, #7
 8024522:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024526:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802452a:	48d7      	ldr	r0, [pc, #860]	; (8024888 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802452c:	fb05 f50e 	mul.w	r5, r5, lr
 8024530:	b2c9      	uxtb	r1, r1
 8024532:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024536:	1c69      	adds	r1, r5, #1
 8024538:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802453c:	10d1      	asrs	r1, r2, #3
 802453e:	f021 0103 	bic.w	r1, r1, #3
 8024542:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024546:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802454a:	b2db      	uxtb	r3, r3
 802454c:	00c9      	lsls	r1, r1, #3
 802454e:	fb03 f30e 	mul.w	r3, r3, lr
 8024552:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024556:	4301      	orrs	r1, r0
 8024558:	1c58      	adds	r0, r3, #1
 802455a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802455e:	00d2      	lsls	r2, r2, #3
 8024560:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024564:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024568:	430a      	orrs	r2, r1
 802456a:	e726      	b.n	80243ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802456c:	f115 0e01 	adds.w	lr, r5, #1
 8024570:	f53f af24 	bmi.w	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024574:	4572      	cmp	r2, lr
 8024576:	f6ff af21 	blt.w	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802457a:	f110 0e01 	adds.w	lr, r0, #1
 802457e:	f53f af1d 	bmi.w	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024582:	4573      	cmp	r3, lr
 8024584:	f6ff af1a 	blt.w	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024588:	b21b      	sxth	r3, r3
 802458a:	b212      	sxth	r2, r2
 802458c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024590:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024594:	9301      	str	r3, [sp, #4]
 8024596:	9200      	str	r2, [sp, #0]
 8024598:	4639      	mov	r1, r7
 802459a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802459e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80245a0:	f7ff fc24 	bl	8023dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80245a4:	e70a      	b.n	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80245a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80245a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80245ac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80245ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80245b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80245b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80245b8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80245ba:	141f      	asrs	r7, r3, #16
 80245bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80245be:	141b      	asrs	r3, r3, #16
 80245c0:	fb01 3707 	mla	r7, r1, r7, r3
 80245c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80245c6:	fa1f fc82 	uxth.w	ip, r2
 80245ca:	eb03 0a07 	add.w	sl, r3, r7
 80245ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80245d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80245d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80245da:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80245de:	b29b      	uxth	r3, r3
 80245e0:	2d00      	cmp	r5, #0
 80245e2:	f000 80fe 	beq.w	80247e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80245e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80245ea:	940c      	str	r4, [sp, #48]	; 0x30
 80245ec:	eb0a 0b01 	add.w	fp, sl, r1
 80245f0:	fa1f fa85 	uxth.w	sl, r5
 80245f4:	fb0a fc0c 	mul.w	ip, sl, ip
 80245f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80245fc:	fa1f fa8a 	uxth.w	sl, sl
 8024600:	eba0 000c 	sub.w	r0, r0, ip
 8024604:	eba3 030a 	sub.w	r3, r3, sl
 8024608:	b280      	uxth	r0, r0
 802460a:	fb08 f000 	mul.w	r0, r8, r0
 802460e:	b29b      	uxth	r3, r3
 8024610:	fb09 0303 	mla	r3, r9, r3, r0
 8024614:	980c      	ldr	r0, [sp, #48]	; 0x30
 8024616:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802461a:	940d      	str	r4, [sp, #52]	; 0x34
 802461c:	fb0a 3300 	mla	r3, sl, r0, r3
 8024620:	fb0c 3304 	mla	r3, ip, r4, r3
 8024624:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024628:	2b00      	cmp	r3, #0
 802462a:	f000 80cc 	beq.w	80247c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802462e:	9808      	ldr	r0, [sp, #32]
 8024630:	9c08      	ldr	r4, [sp, #32]
 8024632:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024636:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802463a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802463e:	f000 80d5 	beq.w	80247ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024642:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024646:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802464a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802464e:	fb09 f707 	mul.w	r7, r9, r7
 8024652:	fb0a fc0c 	mul.w	ip, sl, ip
 8024656:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802465a:	f107 0b20 	add.w	fp, r7, #32
 802465e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024662:	44cc      	add	ip, r9
 8024664:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024668:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802466c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024670:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024674:	ea4c 0909 	orr.w	r9, ip, r9
 8024678:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802467c:	8847      	ldrh	r7, [r0, #2]
 802467e:	d019      	beq.n	80246b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8024680:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024684:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024688:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802468c:	fb08 f807 	mul.w	r8, r8, r7
 8024690:	fb0a fc0c 	mul.w	ip, sl, ip
 8024694:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024698:	f108 0b20 	add.w	fp, r8, #32
 802469c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80246a0:	44bc      	add	ip, r7
 80246a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80246a6:	0a3f      	lsrs	r7, r7, #8
 80246a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80246ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80246b0:	ea4c 0707 	orr.w	r7, ip, r7
 80246b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80246b8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80246bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80246c0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80246c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80246c8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80246cc:	ea4c 0909 	orr.w	r9, ip, r9
 80246d0:	ea4a 0707 	orr.w	r7, sl, r7
 80246d4:	2d00      	cmp	r5, #0
 80246d6:	f000 808b 	beq.w	80247f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80246da:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80246de:	3901      	subs	r1, #1
 80246e0:	0049      	lsls	r1, r1, #1
 80246e2:	3102      	adds	r1, #2
 80246e4:	eb00 0c01 	add.w	ip, r0, r1
 80246e8:	5a41      	ldrh	r1, [r0, r1]
 80246ea:	980c      	ldr	r0, [sp, #48]	; 0x30
 80246ec:	28ff      	cmp	r0, #255	; 0xff
 80246ee:	d019      	beq.n	8024724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80246f0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80246f2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80246f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80246fa:	fb04 fa01 	mul.w	sl, r4, r1
 80246fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024702:	fb08 f800 	mul.w	r8, r8, r0
 8024706:	f10a 0020 	add.w	r0, sl, #32
 802470a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802470e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024712:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024716:	4441      	add	r1, r8
 8024718:	0a00      	lsrs	r0, r0, #8
 802471a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802471e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024722:	4301      	orrs	r1, r0
 8024724:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024726:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802472a:	2cff      	cmp	r4, #255	; 0xff
 802472c:	d01a      	beq.n	8024764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802472e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024732:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024736:	fb04 fa00 	mul.w	sl, r4, r0
 802473a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802473e:	fb08 f80c 	mul.w	r8, r8, ip
 8024742:	f10a 0c20 	add.w	ip, sl, #32
 8024746:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802474a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802474e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024752:	4440      	add	r0, r8
 8024754:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024758:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802475c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024760:	ea40 000c 	orr.w	r0, r0, ip
 8024764:	fb15 fc02 	smulbb	ip, r5, r2
 8024768:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802476c:	f1c5 0810 	rsb	r8, r5, #16
 8024770:	eba8 0802 	sub.w	r8, r8, r2
 8024774:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024778:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802477c:	437a      	muls	r2, r7
 802477e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024782:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024786:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802478a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802478e:	fb09 2208 	mla	r2, r9, r8, r2
 8024792:	ea4a 0101 	orr.w	r1, sl, r1
 8024796:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802479a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802479e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80247a2:	fb05 2201 	mla	r2, r5, r1, r2
 80247a6:	ea4b 0000 	orr.w	r0, fp, r0
 80247aa:	fb0c 2200 	mla	r2, ip, r0, r2
 80247ae:	0d57      	lsrs	r7, r2, #21
 80247b0:	0952      	lsrs	r2, r2, #5
 80247b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80247b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80247ba:	433a      	orrs	r2, r7
 80247bc:	2bff      	cmp	r3, #255	; 0xff
 80247be:	b292      	uxth	r2, r2
 80247c0:	d127      	bne.n	8024812 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80247c2:	f8ae 2000 	strh.w	r2, [lr]
 80247c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80247c8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80247ca:	4413      	add	r3, r2
 80247cc:	931d      	str	r3, [sp, #116]	; 0x74
 80247ce:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80247d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247d2:	441a      	add	r2, r3
 80247d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80247d6:	921e      	str	r2, [sp, #120]	; 0x78
 80247d8:	3b01      	subs	r3, #1
 80247da:	f10e 0e02 	add.w	lr, lr, #2
 80247de:	930f      	str	r3, [sp, #60]	; 0x3c
 80247e0:	e627      	b.n	8024432 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80247e2:	fb08 f000 	mul.w	r0, r8, r0
 80247e6:	fb09 0303 	mla	r3, r9, r3, r0
 80247ea:	e71b      	b.n	8024624 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80247ec:	46b9      	mov	r9, r7
 80247ee:	e743      	b.n	8024678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80247f0:	f1c2 0110 	rsb	r1, r2, #16
 80247f4:	437a      	muls	r2, r7
 80247f6:	fb09 2901 	mla	r9, r9, r1, r2
 80247fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80247fe:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024802:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024806:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802480a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802480e:	4302      	orrs	r2, r0
 8024810:	e7d4      	b.n	80247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024812:	f8be 7000 	ldrh.w	r7, [lr]
 8024816:	4c1c      	ldr	r4, [pc, #112]	; (8024888 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024818:	43db      	mvns	r3, r3
 802481a:	1238      	asrs	r0, r7, #8
 802481c:	fa5f fc83 	uxtb.w	ip, r3
 8024820:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024824:	10fd      	asrs	r5, r7, #3
 8024826:	fb00 f00c 	mul.w	r0, r0, ip
 802482a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802482e:	fb05 f10c 	mul.w	r1, r5, ip
 8024832:	1c45      	adds	r5, r0, #1
 8024834:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024838:	1215      	asrs	r5, r2, #8
 802483a:	f025 0507 	bic.w	r5, r5, #7
 802483e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024842:	1c4d      	adds	r5, r1, #1
 8024844:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024848:	10d1      	asrs	r1, r2, #3
 802484a:	f021 0103 	bic.w	r1, r1, #3
 802484e:	00fb      	lsls	r3, r7, #3
 8024850:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024854:	b2db      	uxtb	r3, r3
 8024856:	b2c0      	uxtb	r0, r0
 8024858:	00c9      	lsls	r1, r1, #3
 802485a:	fb03 f30c 	mul.w	r3, r3, ip
 802485e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024862:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024866:	4308      	orrs	r0, r1
 8024868:	1c59      	adds	r1, r3, #1
 802486a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802486e:	00d2      	lsls	r2, r2, #3
 8024870:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024874:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024878:	4318      	orrs	r0, r3
 802487a:	f8ae 0000 	strh.w	r0, [lr]
 802487e:	e7a2      	b.n	80247c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024880:	b013      	add	sp, #76	; 0x4c
 8024882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024886:	bf00      	nop
 8024888:	fffff800 	.word	0xfffff800

0802488c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802488c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024890:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024894:	fb05 4c03 	mla	ip, r5, r3, r4
 8024898:	2d00      	cmp	r5, #0
 802489a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802489e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80248a2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80248a6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80248aa:	8808      	ldrh	r0, [r1, #0]
 80248ac:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80248b0:	f2c0 80a7 	blt.w	8024a02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80248b4:	45aa      	cmp	sl, r5
 80248b6:	f340 80a4 	ble.w	8024a02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80248ba:	2c00      	cmp	r4, #0
 80248bc:	f2c0 809f 	blt.w	80249fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80248c0:	42a3      	cmp	r3, r4
 80248c2:	f340 809c 	ble.w	80249fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80248c6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80248ca:	1c62      	adds	r2, r4, #1
 80248cc:	f100 809c 	bmi.w	8024a08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248d0:	4293      	cmp	r3, r2
 80248d2:	f340 8099 	ble.w	8024a08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248d6:	f1b9 0f00 	cmp.w	r9, #0
 80248da:	f000 8095 	beq.w	8024a08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248de:	f8be c002 	ldrh.w	ip, [lr, #2]
 80248e2:	3501      	adds	r5, #1
 80248e4:	f100 8094 	bmi.w	8024a10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248e8:	45aa      	cmp	sl, r5
 80248ea:	f340 8091 	ble.w	8024a10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248ee:	2f00      	cmp	r7, #0
 80248f0:	f000 808e 	beq.w	8024a10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248f4:	2c00      	cmp	r4, #0
 80248f6:	f2c0 8089 	blt.w	8024a0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80248fa:	42a3      	cmp	r3, r4
 80248fc:	f340 8086 	ble.w	8024a0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024900:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024904:	3401      	adds	r4, #1
 8024906:	f100 8086 	bmi.w	8024a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802490a:	42a3      	cmp	r3, r4
 802490c:	f340 8083 	ble.w	8024a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024910:	f1b9 0f00 	cmp.w	r9, #0
 8024914:	d07f      	beq.n	8024a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024916:	3301      	adds	r3, #1
 8024918:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802491c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024920:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024924:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024928:	fb19 fe07 	smulbb	lr, r9, r7
 802492c:	ea44 0808 	orr.w	r8, r4, r8
 8024930:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024934:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024938:	f1c7 0210 	rsb	r2, r7, #16
 802493c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024940:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024944:	ea44 0c0c 	orr.w	ip, r4, ip
 8024948:	eba2 0209 	sub.w	r2, r2, r9
 802494c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024950:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024954:	fb04 f40c 	mul.w	r4, r4, ip
 8024958:	fb02 4808 	mla	r8, r2, r8, r4
 802495c:	041a      	lsls	r2, r3, #16
 802495e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024962:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024966:	4313      	orrs	r3, r2
 8024968:	042a      	lsls	r2, r5, #16
 802496a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802496e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024972:	fb0e 8303 	mla	r3, lr, r3, r8
 8024976:	432a      	orrs	r2, r5
 8024978:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802497c:	fb07 3202 	mla	r2, r7, r2, r3
 8024980:	0d53      	lsrs	r3, r2, #21
 8024982:	0952      	lsrs	r2, r2, #5
 8024984:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024988:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802498c:	431a      	orrs	r2, r3
 802498e:	b293      	uxth	r3, r2
 8024990:	b2b4      	uxth	r4, r6
 8024992:	1202      	asrs	r2, r0, #8
 8024994:	43f6      	mvns	r6, r6
 8024996:	b2f6      	uxtb	r6, r6
 8024998:	121d      	asrs	r5, r3, #8
 802499a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802499e:	fb12 f206 	smulbb	r2, r2, r6
 80249a2:	10c7      	asrs	r7, r0, #3
 80249a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80249a8:	00c0      	lsls	r0, r0, #3
 80249aa:	fb05 2504 	mla	r5, r5, r4, r2
 80249ae:	b2c0      	uxtb	r0, r0
 80249b0:	10da      	asrs	r2, r3, #3
 80249b2:	00db      	lsls	r3, r3, #3
 80249b4:	b2db      	uxtb	r3, r3
 80249b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80249ba:	fb10 f006 	smulbb	r0, r0, r6
 80249be:	b2ad      	uxth	r5, r5
 80249c0:	fb03 0004 	mla	r0, r3, r4, r0
 80249c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80249c8:	fb17 f706 	smulbb	r7, r7, r6
 80249cc:	b280      	uxth	r0, r0
 80249ce:	1c6b      	adds	r3, r5, #1
 80249d0:	fb02 7204 	mla	r2, r2, r4, r7
 80249d4:	b292      	uxth	r2, r2
 80249d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80249da:	1c43      	adds	r3, r0, #1
 80249dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80249e0:	1c50      	adds	r0, r2, #1
 80249e2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80249e6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80249ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249ee:	0952      	lsrs	r2, r2, #5
 80249f0:	432b      	orrs	r3, r5
 80249f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80249f6:	4313      	orrs	r3, r2
 80249f8:	800b      	strh	r3, [r1, #0]
 80249fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80249fe:	4680      	mov	r8, r0
 8024a00:	e763      	b.n	80248ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024a02:	4684      	mov	ip, r0
 8024a04:	4680      	mov	r8, r0
 8024a06:	e76c      	b.n	80248e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024a08:	4684      	mov	ip, r0
 8024a0a:	e76a      	b.n	80248e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024a0c:	4605      	mov	r5, r0
 8024a0e:	e779      	b.n	8024904 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024a10:	4603      	mov	r3, r0
 8024a12:	4605      	mov	r5, r0
 8024a14:	e782      	b.n	802491c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024a16:	4603      	mov	r3, r0
 8024a18:	e780      	b.n	802491c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08024a1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024a1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a1e:	b093      	sub	sp, #76	; 0x4c
 8024a20:	461d      	mov	r5, r3
 8024a22:	9210      	str	r2, [sp, #64]	; 0x40
 8024a24:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024a26:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8024a2a:	920b      	str	r2, [sp, #44]	; 0x2c
 8024a2c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024a30:	910a      	str	r1, [sp, #40]	; 0x28
 8024a32:	6859      	ldr	r1, [r3, #4]
 8024a34:	681b      	ldr	r3, [r3, #0]
 8024a36:	9011      	str	r0, [sp, #68]	; 0x44
 8024a38:	fb01 2707 	mla	r7, r1, r7, r2
 8024a3c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024a40:	9307      	str	r3, [sp, #28]
 8024a42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a44:	681b      	ldr	r3, [r3, #0]
 8024a46:	9309      	str	r3, [sp, #36]	; 0x24
 8024a48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024a4a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024a4e:	43db      	mvns	r3, r3
 8024a50:	b2db      	uxtb	r3, r3
 8024a52:	9308      	str	r3, [sp, #32]
 8024a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024a56:	2b00      	cmp	r3, #0
 8024a58:	dc03      	bgt.n	8024a62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024a5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024a5c:	2b00      	cmp	r3, #0
 8024a5e:	f340 8203 	ble.w	8024e68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024a62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a6c:	1e48      	subs	r0, r1, #1
 8024a6e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024a72:	2d00      	cmp	r5, #0
 8024a74:	f340 80da 	ble.w	8024c2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024a78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024a7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024a80:	d406      	bmi.n	8024a90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a82:	4586      	cmp	lr, r0
 8024a84:	da04      	bge.n	8024a90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a86:	2b00      	cmp	r3, #0
 8024a88:	db02      	blt.n	8024a90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a8a:	4563      	cmp	r3, ip
 8024a8c:	f2c0 80cf 	blt.w	8024c2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024a90:	f11e 0e01 	adds.w	lr, lr, #1
 8024a94:	f100 80c1 	bmi.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a98:	4571      	cmp	r1, lr
 8024a9a:	f2c0 80be 	blt.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a9e:	3301      	adds	r3, #1
 8024aa0:	f100 80bb 	bmi.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024aa4:	429a      	cmp	r2, r3
 8024aa6:	f2c0 80b8 	blt.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024aaa:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024aae:	46a9      	mov	r9, r5
 8024ab0:	f1b9 0f00 	cmp.w	r9, #0
 8024ab4:	f340 80d8 	ble.w	8024c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024ab8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024aba:	1421      	asrs	r1, r4, #16
 8024abc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024ac0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024ac4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024ac8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024acc:	f100 8111 	bmi.w	8024cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ad0:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024ad4:	4551      	cmp	r1, sl
 8024ad6:	f280 810c 	bge.w	8024cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ada:	2800      	cmp	r0, #0
 8024adc:	f2c0 8109 	blt.w	8024cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ae0:	f103 3aff 	add.w	sl, r3, #4294967295
 8024ae4:	4550      	cmp	r0, sl
 8024ae6:	f280 8104 	bge.w	8024cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024aea:	fa0f f38e 	sxth.w	r3, lr
 8024aee:	fb00 1103 	mla	r1, r0, r3, r1
 8024af2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024af4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024af8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024afc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024b00:	f1bc 0f00 	cmp.w	ip, #0
 8024b04:	d007      	beq.n	8024b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024b06:	005b      	lsls	r3, r3, #1
 8024b08:	eb0a 0003 	add.w	r0, sl, r3
 8024b0c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024b10:	930c      	str	r3, [sp, #48]	; 0x30
 8024b12:	8843      	ldrh	r3, [r0, #2]
 8024b14:	930d      	str	r3, [sp, #52]	; 0x34
 8024b16:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024b1a:	fb12 f30c 	smulbb	r3, r2, ip
 8024b1e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024b22:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024b26:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b2a:	10db      	asrs	r3, r3, #3
 8024b2c:	ea40 000e 	orr.w	r0, r0, lr
 8024b30:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024b34:	f1cc 0e10 	rsb	lr, ip, #16
 8024b38:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024b3c:	ebae 0e02 	sub.w	lr, lr, r2
 8024b40:	ea4a 0101 	orr.w	r1, sl, r1
 8024b44:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024b48:	4351      	muls	r1, r2
 8024b4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024b4c:	9f08      	ldr	r7, [sp, #32]
 8024b4e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024b52:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024b56:	0410      	lsls	r0, r2, #16
 8024b58:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b5c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024b60:	4310      	orrs	r0, r2
 8024b62:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b64:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024b66:	0412      	lsls	r2, r2, #16
 8024b68:	fb03 e000 	mla	r0, r3, r0, lr
 8024b6c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024b70:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024b74:	ea42 020e 	orr.w	r2, r2, lr
 8024b78:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024b7c:	fb03 0302 	mla	r3, r3, r2, r0
 8024b80:	0d5a      	lsrs	r2, r3, #21
 8024b82:	095b      	lsrs	r3, r3, #5
 8024b84:	f8b8 0000 	ldrh.w	r0, [r8]
 8024b88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024b90:	4313      	orrs	r3, r2
 8024b92:	b29b      	uxth	r3, r3
 8024b94:	1201      	asrs	r1, r0, #8
 8024b96:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8024b9a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024b9e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024ba2:	fb11 f107 	smulbb	r1, r1, r7
 8024ba6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024baa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024bae:	00c0      	lsls	r0, r0, #3
 8024bb0:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024bb4:	b2c0      	uxtb	r0, r0
 8024bb6:	10d9      	asrs	r1, r3, #3
 8024bb8:	00db      	lsls	r3, r3, #3
 8024bba:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8024bbe:	b2db      	uxtb	r3, r3
 8024bc0:	fb10 f007 	smulbb	r0, r0, r7
 8024bc4:	fa1f fc8c 	uxth.w	ip, ip
 8024bc8:	fb03 0302 	mla	r3, r3, r2, r0
 8024bcc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024bd0:	fb1e fe07 	smulbb	lr, lr, r7
 8024bd4:	fb01 e102 	mla	r1, r1, r2, lr
 8024bd8:	b29a      	uxth	r2, r3
 8024bda:	f10c 0301 	add.w	r3, ip, #1
 8024bde:	b289      	uxth	r1, r1
 8024be0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024be4:	1c53      	adds	r3, r2, #1
 8024be6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024bea:	1c4a      	adds	r2, r1, #1
 8024bec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024bf0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024bf4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024bf8:	0949      	lsrs	r1, r1, #5
 8024bfa:	ea43 030c 	orr.w	r3, r3, ip
 8024bfe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024c02:	430b      	orrs	r3, r1
 8024c04:	f8a8 3000 	strh.w	r3, [r8]
 8024c08:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024c0a:	441c      	add	r4, r3
 8024c0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c0e:	f108 0802 	add.w	r8, r8, #2
 8024c12:	441e      	add	r6, r3
 8024c14:	f109 39ff 	add.w	r9, r9, #4294967295
 8024c18:	e74a      	b.n	8024ab0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024c1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024c1c:	441c      	add	r4, r3
 8024c1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c20:	441e      	add	r6, r3
 8024c22:	9b07      	ldr	r3, [sp, #28]
 8024c24:	3302      	adds	r3, #2
 8024c26:	3d01      	subs	r5, #1
 8024c28:	9307      	str	r3, [sp, #28]
 8024c2a:	e722      	b.n	8024a72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024c2c:	d022      	beq.n	8024c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024c2e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024c30:	1e6b      	subs	r3, r5, #1
 8024c32:	fb00 4003 	mla	r0, r0, r3, r4
 8024c36:	1400      	asrs	r0, r0, #16
 8024c38:	f53f af37 	bmi.w	8024aaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c3c:	3901      	subs	r1, #1
 8024c3e:	4288      	cmp	r0, r1
 8024c40:	f6bf af33 	bge.w	8024aaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c44:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024c46:	fb01 6303 	mla	r3, r1, r3, r6
 8024c4a:	141b      	asrs	r3, r3, #16
 8024c4c:	f53f af2d 	bmi.w	8024aaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c50:	3a01      	subs	r2, #1
 8024c52:	4293      	cmp	r3, r2
 8024c54:	f6bf af29 	bge.w	8024aaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c58:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024c5c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024c60:	46a8      	mov	r8, r5
 8024c62:	f1b8 0f00 	cmp.w	r8, #0
 8024c66:	dc5e      	bgt.n	8024d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024c68:	9b07      	ldr	r3, [sp, #28]
 8024c6a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024c6e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024c72:	9307      	str	r3, [sp, #28]
 8024c74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c76:	2b00      	cmp	r3, #0
 8024c78:	f340 80f6 	ble.w	8024e68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024c7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024c8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c96:	eef0 6a62 	vmov.f32	s13, s5
 8024c9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ca2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024ca6:	ee16 4a90 	vmov	r4, s13
 8024caa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024cae:	eef0 6a43 	vmov.f32	s13, s6
 8024cb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024cb6:	ee12 2a90 	vmov	r2, s5
 8024cba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024cbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cc2:	ee13 2a10 	vmov	r2, s6
 8024cc6:	931f      	str	r3, [sp, #124]	; 0x7c
 8024cc8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cca:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cce:	9320      	str	r3, [sp, #128]	; 0x80
 8024cd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024cd2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024cd4:	3b01      	subs	r3, #1
 8024cd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024cda:	930a      	str	r3, [sp, #40]	; 0x28
 8024cdc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cde:	ee16 6a90 	vmov	r6, s13
 8024ce2:	bf14      	ite	ne
 8024ce4:	461d      	movne	r5, r3
 8024ce6:	4615      	moveq	r5, r2
 8024ce8:	eeb0 3a67 	vmov.f32	s6, s15
 8024cec:	eef0 2a47 	vmov.f32	s5, s14
 8024cf0:	e6b0      	b.n	8024a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024cf2:	f111 0a01 	adds.w	sl, r1, #1
 8024cf6:	d487      	bmi.n	8024c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cf8:	45d6      	cmp	lr, sl
 8024cfa:	db85      	blt.n	8024c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cfc:	f110 0a01 	adds.w	sl, r0, #1
 8024d00:	d482      	bmi.n	8024c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024d02:	4553      	cmp	r3, sl
 8024d04:	db80      	blt.n	8024c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024d06:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024d08:	9101      	str	r1, [sp, #4]
 8024d0a:	b21b      	sxth	r3, r3
 8024d0c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024d10:	9300      	str	r3, [sp, #0]
 8024d12:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024d16:	fa0f f38e 	sxth.w	r3, lr
 8024d1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024d1c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024d1e:	4641      	mov	r1, r8
 8024d20:	f7ff fdb4 	bl	802488c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024d24:	e770      	b.n	8024c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024d26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d28:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024d2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d2e:	1430      	asrs	r0, r6, #16
 8024d30:	1423      	asrs	r3, r4, #16
 8024d32:	fb01 3000 	mla	r0, r1, r0, r3
 8024d36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024d38:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024d3c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024d40:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024d44:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024d48:	8858      	ldrh	r0, [r3, #2]
 8024d4a:	f1be 0f00 	cmp.w	lr, #0
 8024d4e:	d00b      	beq.n	8024d68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024d50:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024d54:	3901      	subs	r1, #1
 8024d56:	0049      	lsls	r1, r1, #1
 8024d58:	3102      	adds	r1, #2
 8024d5a:	eb03 0b01 	add.w	fp, r3, r1
 8024d5e:	5a5b      	ldrh	r3, [r3, r1]
 8024d60:	930e      	str	r3, [sp, #56]	; 0x38
 8024d62:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024d66:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d68:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8024d6c:	fb12 f30e 	smulbb	r3, r2, lr
 8024d70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024d74:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024d78:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8024d7c:	10db      	asrs	r3, r3, #3
 8024d7e:	ea41 010c 	orr.w	r1, r1, ip
 8024d82:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d86:	f1ce 0c10 	rsb	ip, lr, #16
 8024d8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d8e:	ebac 0c02 	sub.w	ip, ip, r2
 8024d92:	ea4b 0000 	orr.w	r0, fp, r0
 8024d96:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024d9a:	4350      	muls	r0, r2
 8024d9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d9e:	9f08      	ldr	r7, [sp, #32]
 8024da0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024da4:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024da8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024dac:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024db0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024db2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024db4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024db8:	0412      	lsls	r2, r2, #16
 8024dba:	ea4b 0101 	orr.w	r1, fp, r1
 8024dbe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024dc2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024dc6:	fb03 c101 	mla	r1, r3, r1, ip
 8024dca:	4302      	orrs	r2, r0
 8024dcc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024dd0:	fb03 1202 	mla	r2, r3, r2, r1
 8024dd4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024dd8:	0952      	lsrs	r2, r2, #5
 8024dda:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024dde:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024de2:	f8b9 2000 	ldrh.w	r2, [r9]
 8024de6:	ea4b 0303 	orr.w	r3, fp, r3
 8024dea:	b29b      	uxth	r3, r3
 8024dec:	1211      	asrs	r1, r2, #8
 8024dee:	1218      	asrs	r0, r3, #8
 8024df0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024df4:	fb11 f107 	smulbb	r1, r1, r7
 8024df8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024dfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024e00:	00d2      	lsls	r2, r2, #3
 8024e02:	fb00 100a 	mla	r0, r0, sl, r1
 8024e06:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8024e0a:	10d9      	asrs	r1, r3, #3
 8024e0c:	b2d2      	uxtb	r2, r2
 8024e0e:	00db      	lsls	r3, r3, #3
 8024e10:	fb1c fc07 	smulbb	ip, ip, r7
 8024e14:	fb12 f207 	smulbb	r2, r2, r7
 8024e18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024e1c:	b2db      	uxtb	r3, r3
 8024e1e:	b280      	uxth	r0, r0
 8024e20:	fb01 c10a 	mla	r1, r1, sl, ip
 8024e24:	fb03 230a 	mla	r3, r3, sl, r2
 8024e28:	b29b      	uxth	r3, r3
 8024e2a:	b289      	uxth	r1, r1
 8024e2c:	1c42      	adds	r2, r0, #1
 8024e2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e32:	f101 0c01 	add.w	ip, r1, #1
 8024e36:	1c5a      	adds	r2, r3, #1
 8024e38:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024e3c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024e40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e42:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024e46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024e4a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024e4e:	4310      	orrs	r0, r2
 8024e50:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024e54:	441c      	add	r4, r3
 8024e56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e58:	ea40 000c 	orr.w	r0, r0, ip
 8024e5c:	f829 0b02 	strh.w	r0, [r9], #2
 8024e60:	441e      	add	r6, r3
 8024e62:	f108 38ff 	add.w	r8, r8, #4294967295
 8024e66:	e6fc      	b.n	8024c62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024e68:	b013      	add	sp, #76	; 0x4c
 8024e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024e6e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024e72:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024e76:	fb0e 4703 	mla	r7, lr, r3, r4
 8024e7a:	f1be 0f00 	cmp.w	lr, #0
 8024e7e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024e82:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024e86:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8024e8a:	8808      	ldrh	r0, [r1, #0]
 8024e8c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024e90:	db60      	blt.n	8024f54 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024e92:	45f1      	cmp	r9, lr
 8024e94:	dd5e      	ble.n	8024f54 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024e96:	2c00      	cmp	r4, #0
 8024e98:	db5a      	blt.n	8024f50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024e9a:	42a3      	cmp	r3, r4
 8024e9c:	dd58      	ble.n	8024f50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024e9e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8024ea2:	1c62      	adds	r2, r4, #1
 8024ea4:	d459      	bmi.n	8024f5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024ea6:	4293      	cmp	r3, r2
 8024ea8:	dd57      	ble.n	8024f5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024eaa:	2d00      	cmp	r5, #0
 8024eac:	d055      	beq.n	8024f5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024eae:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8024eb2:	f11e 0e01 	adds.w	lr, lr, #1
 8024eb6:	d454      	bmi.n	8024f62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024eb8:	45f1      	cmp	r9, lr
 8024eba:	dd52      	ble.n	8024f62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024ebc:	2e00      	cmp	r6, #0
 8024ebe:	d050      	beq.n	8024f62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024ec0:	2c00      	cmp	r4, #0
 8024ec2:	db4c      	blt.n	8024f5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024ec4:	42a3      	cmp	r3, r4
 8024ec6:	dd4a      	ble.n	8024f5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024ec8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024ecc:	3401      	adds	r4, #1
 8024ece:	d405      	bmi.n	8024edc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ed0:	42a3      	cmp	r3, r4
 8024ed2:	dd03      	ble.n	8024edc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ed4:	b115      	cbz	r5, 8024edc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ed6:	3301      	adds	r3, #1
 8024ed8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024edc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024ee0:	fb15 f406 	smulbb	r4, r5, r6
 8024ee4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024ee8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024eec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024ef0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024ef4:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ef8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024efc:	f1c6 0310 	rsb	r3, r6, #16
 8024f00:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024f04:	1b5b      	subs	r3, r3, r5
 8024f06:	ea4e 0707 	orr.w	r7, lr, r7
 8024f0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024f0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024f12:	437d      	muls	r5, r7
 8024f14:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024f18:	0403      	lsls	r3, r0, #16
 8024f1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024f1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024f22:	4318      	orrs	r0, r3
 8024f24:	0413      	lsls	r3, r2, #16
 8024f26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024f2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024f2e:	4313      	orrs	r3, r2
 8024f30:	fb04 c000 	mla	r0, r4, r0, ip
 8024f34:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024f38:	fb06 0003 	mla	r0, r6, r3, r0
 8024f3c:	0d43      	lsrs	r3, r0, #21
 8024f3e:	0940      	lsrs	r0, r0, #5
 8024f40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f44:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024f48:	4318      	orrs	r0, r3
 8024f4a:	8008      	strh	r0, [r1, #0]
 8024f4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024f50:	4684      	mov	ip, r0
 8024f52:	e7a6      	b.n	8024ea2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024f54:	4607      	mov	r7, r0
 8024f56:	4684      	mov	ip, r0
 8024f58:	e7ab      	b.n	8024eb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024f5a:	4607      	mov	r7, r0
 8024f5c:	e7a9      	b.n	8024eb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024f5e:	4602      	mov	r2, r0
 8024f60:	e7b4      	b.n	8024ecc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8024f62:	4602      	mov	r2, r0
 8024f64:	e7ba      	b.n	8024edc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08024f66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f6a:	b08f      	sub	sp, #60	; 0x3c
 8024f6c:	461d      	mov	r5, r3
 8024f6e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024f70:	920c      	str	r2, [sp, #48]	; 0x30
 8024f72:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024f76:	9107      	str	r1, [sp, #28]
 8024f78:	6859      	ldr	r1, [r3, #4]
 8024f7a:	681b      	ldr	r3, [r3, #0]
 8024f7c:	900d      	str	r0, [sp, #52]	; 0x34
 8024f7e:	fb01 2707 	mla	r7, r1, r7, r2
 8024f82:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024f86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f88:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8024f8c:	f8d3 8000 	ldr.w	r8, [r3]
 8024f90:	9b07      	ldr	r3, [sp, #28]
 8024f92:	2b00      	cmp	r3, #0
 8024f94:	dc03      	bgt.n	8024f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024f96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024f98:	2b00      	cmp	r3, #0
 8024f9a:	f340 8181 	ble.w	80252a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024f9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024fa0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024fa4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024fa8:	1e48      	subs	r0, r1, #1
 8024faa:	f102 3cff 	add.w	ip, r2, #4294967295
 8024fae:	2d00      	cmp	r5, #0
 8024fb0:	f340 809b 	ble.w	80250ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024fb4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024fb8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024fbc:	d406      	bmi.n	8024fcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024fbe:	4586      	cmp	lr, r0
 8024fc0:	da04      	bge.n	8024fcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024fc2:	2b00      	cmp	r3, #0
 8024fc4:	db02      	blt.n	8024fcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024fc6:	4563      	cmp	r3, ip
 8024fc8:	f2c0 8090 	blt.w	80250ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024fcc:	f11e 0e01 	adds.w	lr, lr, #1
 8024fd0:	f100 8084 	bmi.w	80250dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fd4:	4571      	cmp	r1, lr
 8024fd6:	f2c0 8081 	blt.w	80250dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fda:	3301      	adds	r3, #1
 8024fdc:	d47e      	bmi.n	80250dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fde:	429a      	cmp	r2, r3
 8024fe0:	db7c      	blt.n	80250dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fe2:	46aa      	mov	sl, r5
 8024fe4:	46b9      	mov	r9, r7
 8024fe6:	f1ba 0f00 	cmp.w	sl, #0
 8024fea:	f340 8099 	ble.w	8025120 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024fee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ff0:	1421      	asrs	r1, r4, #16
 8024ff2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024ff6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024ffa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024ffe:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025002:	f100 80d0 	bmi.w	80251a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025006:	f10e 3bff 	add.w	fp, lr, #4294967295
 802500a:	4559      	cmp	r1, fp
 802500c:	f280 80cb 	bge.w	80251a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025010:	2800      	cmp	r0, #0
 8025012:	f2c0 80c8 	blt.w	80251a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025016:	f103 3bff 	add.w	fp, r3, #4294967295
 802501a:	4558      	cmp	r0, fp
 802501c:	f280 80c3 	bge.w	80251a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025020:	fa0f fe8e 	sxth.w	lr, lr
 8025024:	fb00 110e 	mla	r1, r0, lr, r1
 8025028:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802502c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8025030:	8841      	ldrh	r1, [r0, #2]
 8025032:	f1bc 0f00 	cmp.w	ip, #0
 8025036:	d00b      	beq.n	8025050 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8025038:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802503c:	3b01      	subs	r3, #1
 802503e:	005b      	lsls	r3, r3, #1
 8025040:	3302      	adds	r3, #2
 8025042:	eb00 0e03 	add.w	lr, r0, r3
 8025046:	5ac3      	ldrh	r3, [r0, r3]
 8025048:	9308      	str	r3, [sp, #32]
 802504a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802504e:	9309      	str	r3, [sp, #36]	; 0x24
 8025050:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8025054:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025058:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802505c:	ea40 000b 	orr.w	r0, r0, fp
 8025060:	fb12 f30c 	smulbb	r3, r2, ip
 8025064:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025068:	10db      	asrs	r3, r3, #3
 802506a:	f1cc 0e10 	rsb	lr, ip, #16
 802506e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025072:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025076:	ebae 0e02 	sub.w	lr, lr, r2
 802507a:	ea4b 0101 	orr.w	r1, fp, r1
 802507e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025082:	4351      	muls	r1, r2
 8025084:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025086:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802508a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802508e:	0410      	lsls	r0, r2, #16
 8025090:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025094:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025098:	4310      	orrs	r0, r2
 802509a:	9a08      	ldr	r2, [sp, #32]
 802509c:	9908      	ldr	r1, [sp, #32]
 802509e:	0412      	lsls	r2, r2, #16
 80250a0:	fb03 e000 	mla	r0, r3, r0, lr
 80250a4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80250a8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80250ac:	ea42 020e 	orr.w	r2, r2, lr
 80250b0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80250b4:	fb03 0302 	mla	r3, r3, r2, r0
 80250b8:	0d5a      	lsrs	r2, r3, #21
 80250ba:	095b      	lsrs	r3, r3, #5
 80250bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80250c4:	4313      	orrs	r3, r2
 80250c6:	f8a9 3000 	strh.w	r3, [r9]
 80250ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80250cc:	441c      	add	r4, r3
 80250ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80250d0:	f109 0902 	add.w	r9, r9, #2
 80250d4:	441e      	add	r6, r3
 80250d6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80250da:	e784      	b.n	8024fe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80250dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80250de:	441c      	add	r4, r3
 80250e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80250e2:	3d01      	subs	r5, #1
 80250e4:	441e      	add	r6, r3
 80250e6:	3702      	adds	r7, #2
 80250e8:	e761      	b.n	8024fae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80250ea:	d01d      	beq.n	8025128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80250ec:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80250ee:	1e6b      	subs	r3, r5, #1
 80250f0:	fb00 4003 	mla	r0, r0, r3, r4
 80250f4:	1400      	asrs	r0, r0, #16
 80250f6:	f53f af74 	bmi.w	8024fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250fa:	3901      	subs	r1, #1
 80250fc:	4288      	cmp	r0, r1
 80250fe:	f6bf af70 	bge.w	8024fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025102:	991c      	ldr	r1, [sp, #112]	; 0x70
 8025104:	fb01 6303 	mla	r3, r1, r3, r6
 8025108:	141b      	asrs	r3, r3, #16
 802510a:	f53f af6a 	bmi.w	8024fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802510e:	3a01      	subs	r2, #1
 8025110:	4293      	cmp	r3, r2
 8025112:	f6bf af66 	bge.w	8024fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025116:	46a9      	mov	r9, r5
 8025118:	46ba      	mov	sl, r7
 802511a:	f1b9 0f00 	cmp.w	r9, #0
 802511e:	dc5a      	bgt.n	80251d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8025120:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025124:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025128:	9b07      	ldr	r3, [sp, #28]
 802512a:	2b00      	cmp	r3, #0
 802512c:	f340 80b8 	ble.w	80252a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025130:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025134:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025138:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802513c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802513e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025142:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025146:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802514a:	eef0 6a62 	vmov.f32	s13, s5
 802514e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025152:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025156:	ee77 2a62 	vsub.f32	s5, s14, s5
 802515a:	ee16 4a90 	vmov	r4, s13
 802515e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025162:	eef0 6a43 	vmov.f32	s13, s6
 8025166:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802516a:	ee12 2a90 	vmov	r2, s5
 802516e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025172:	fb92 f3f3 	sdiv	r3, r2, r3
 8025176:	ee13 2a10 	vmov	r2, s6
 802517a:	931b      	str	r3, [sp, #108]	; 0x6c
 802517c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802517e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025182:	931c      	str	r3, [sp, #112]	; 0x70
 8025184:	9b07      	ldr	r3, [sp, #28]
 8025186:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025188:	3b01      	subs	r3, #1
 802518a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802518e:	9307      	str	r3, [sp, #28]
 8025190:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025192:	ee16 6a90 	vmov	r6, s13
 8025196:	bf14      	ite	ne
 8025198:	461d      	movne	r5, r3
 802519a:	4615      	moveq	r5, r2
 802519c:	eeb0 3a67 	vmov.f32	s6, s15
 80251a0:	eef0 2a47 	vmov.f32	s5, s14
 80251a4:	e6f4      	b.n	8024f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80251a6:	f111 0b01 	adds.w	fp, r1, #1
 80251aa:	d48e      	bmi.n	80250ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251ac:	45de      	cmp	lr, fp
 80251ae:	db8c      	blt.n	80250ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251b0:	f110 0b01 	adds.w	fp, r0, #1
 80251b4:	d489      	bmi.n	80250ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251b6:	455b      	cmp	r3, fp
 80251b8:	db87      	blt.n	80250ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251ba:	b21b      	sxth	r3, r3
 80251bc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80251c0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80251c4:	9300      	str	r3, [sp, #0]
 80251c6:	4642      	mov	r2, r8
 80251c8:	fa0f f38e 	sxth.w	r3, lr
 80251cc:	4649      	mov	r1, r9
 80251ce:	980d      	ldr	r0, [sp, #52]	; 0x34
 80251d0:	f7ff fe4d 	bl	8024e6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80251d4:	e779      	b.n	80250ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251d8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80251dc:	1420      	asrs	r0, r4, #16
 80251de:	1431      	asrs	r1, r6, #16
 80251e0:	fb03 0101 	mla	r1, r3, r1, r0
 80251e4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80251e8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80251ec:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80251f0:	8841      	ldrh	r1, [r0, #2]
 80251f2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80251f6:	f1be 0f00 	cmp.w	lr, #0
 80251fa:	d00b      	beq.n	8025214 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80251fc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8025200:	3b01      	subs	r3, #1
 8025202:	005b      	lsls	r3, r3, #1
 8025204:	3302      	adds	r3, #2
 8025206:	eb00 0b03 	add.w	fp, r0, r3
 802520a:	5ac3      	ldrh	r3, [r0, r3]
 802520c:	930a      	str	r3, [sp, #40]	; 0x28
 802520e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025212:	930b      	str	r3, [sp, #44]	; 0x2c
 8025214:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8025218:	fb12 f30e 	smulbb	r3, r2, lr
 802521c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025220:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025224:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025228:	10db      	asrs	r3, r3, #3
 802522a:	ea40 000c 	orr.w	r0, r0, ip
 802522e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025232:	f1ce 0c10 	rsb	ip, lr, #16
 8025236:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802523a:	ebac 0c02 	sub.w	ip, ip, r2
 802523e:	ea4b 0101 	orr.w	r1, fp, r1
 8025242:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025246:	4351      	muls	r1, r2
 8025248:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802524a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802524e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8025252:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025256:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802525a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802525c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802525e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025262:	0412      	lsls	r2, r2, #16
 8025264:	ea4b 0000 	orr.w	r0, fp, r0
 8025268:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802526c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8025270:	fb03 c000 	mla	r0, r3, r0, ip
 8025274:	ea42 0b0b 	orr.w	fp, r2, fp
 8025278:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802527c:	fb03 000b 	mla	r0, r3, fp, r0
 8025280:	0d43      	lsrs	r3, r0, #21
 8025282:	0940      	lsrs	r0, r0, #5
 8025284:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025288:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802528c:	4318      	orrs	r0, r3
 802528e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025290:	f82a 0b02 	strh.w	r0, [sl], #2
 8025294:	441c      	add	r4, r3
 8025296:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025298:	f109 39ff 	add.w	r9, r9, #4294967295
 802529c:	441e      	add	r6, r3
 802529e:	e73c      	b.n	802511a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80252a0:	b00f      	add	sp, #60	; 0x3c
 80252a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080252a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80252a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252aa:	b085      	sub	sp, #20
 80252ac:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80252b0:	9102      	str	r1, [sp, #8]
 80252b2:	2c00      	cmp	r4, #0
 80252b4:	fb04 7103 	mla	r1, r4, r3, r7
 80252b8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80252bc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80252c0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80252c4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80252c8:	f2c0 811b 	blt.w	8025502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80252cc:	45a6      	cmp	lr, r4
 80252ce:	f340 8118 	ble.w	8025502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80252d2:	2f00      	cmp	r7, #0
 80252d4:	f2c0 8113 	blt.w	80254fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80252d8:	42bb      	cmp	r3, r7
 80252da:	f340 8110 	ble.w	80254fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80252de:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80252e2:	1c7a      	adds	r2, r7, #1
 80252e4:	f100 8110 	bmi.w	8025508 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80252e8:	4293      	cmp	r3, r2
 80252ea:	f340 810d 	ble.w	8025508 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80252ee:	2e00      	cmp	r6, #0
 80252f0:	f000 810c 	beq.w	802550c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80252f4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80252f8:	3401      	adds	r4, #1
 80252fa:	f100 810b 	bmi.w	8025514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80252fe:	45a6      	cmp	lr, r4
 8025300:	f340 8108 	ble.w	8025514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8025304:	2800      	cmp	r0, #0
 8025306:	f000 8108 	beq.w	802551a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802530a:	2f00      	cmp	r7, #0
 802530c:	f2c0 8100 	blt.w	8025510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025310:	42bb      	cmp	r3, r7
 8025312:	f340 80fd 	ble.w	8025510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025316:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802531a:	3701      	adds	r7, #1
 802531c:	f100 8100 	bmi.w	8025520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025320:	42bb      	cmp	r3, r7
 8025322:	f340 80fd 	ble.w	8025520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025326:	2e00      	cmp	r6, #0
 8025328:	f000 80fc 	beq.w	8025524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802532c:	3301      	adds	r3, #1
 802532e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8025332:	b2b6      	uxth	r6, r6
 8025334:	b280      	uxth	r0, r0
 8025336:	fb00 fe06 	mul.w	lr, r0, r6
 802533a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802533e:	0136      	lsls	r6, r6, #4
 8025340:	eba6 070e 	sub.w	r7, r6, lr
 8025344:	b280      	uxth	r0, r0
 8025346:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802534a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802534e:	b2bf      	uxth	r7, r7
 8025350:	1a1b      	subs	r3, r3, r0
 8025352:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025356:	b29b      	uxth	r3, r3
 8025358:	fb0a f607 	mul.w	r6, sl, r7
 802535c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025360:	fb0b 6603 	mla	r6, fp, r3, r6
 8025364:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025368:	fb00 6609 	mla	r6, r0, r9, r6
 802536c:	fb0e 6608 	mla	r6, lr, r8, r6
 8025370:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025374:	9600      	str	r6, [sp, #0]
 8025376:	2e00      	cmp	r6, #0
 8025378:	f000 80be 	beq.w	80254f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802537c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025380:	fb0b fc0c 	mul.w	ip, fp, ip
 8025384:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025388:	fb0b f505 	mul.w	r5, fp, r5
 802538c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025390:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025394:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025398:	44dc      	add	ip, fp
 802539a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802539e:	9501      	str	r5, [sp, #4]
 80253a0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80253a4:	9503      	str	r5, [sp, #12]
 80253a6:	9d01      	ldr	r5, [sp, #4]
 80253a8:	9e02      	ldr	r6, [sp, #8]
 80253aa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80253ae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80253b2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80253b6:	fb0a fc0c 	mul.w	ip, sl, ip
 80253ba:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80253be:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80253c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80253c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80253ca:	4465      	add	r5, ip
 80253cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80253d0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80253d4:	fb09 fc0c 	mul.w	ip, r9, ip
 80253d8:	fb09 f904 	mul.w	r9, r9, r4
 80253dc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80253e0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80253e4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80253e8:	fb08 f404 	mul.w	r4, r8, r4
 80253ec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80253f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80253f4:	fb08 f802 	mul.w	r8, r8, r2
 80253f8:	fb0a fa01 	mul.w	sl, sl, r1
 80253fc:	0a22      	lsrs	r2, r4, #8
 80253fe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025402:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025406:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802540a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802540e:	4414      	add	r4, r2
 8025410:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025414:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025418:	0a2d      	lsrs	r5, r5, #8
 802541a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802541e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025422:	9a03      	ldr	r2, [sp, #12]
 8025424:	8836      	ldrh	r6, [r6, #0]
 8025426:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802542a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802542e:	437d      	muls	r5, r7
 8025430:	4461      	add	r1, ip
 8025432:	0a24      	lsrs	r4, r4, #8
 8025434:	fb02 5503 	mla	r5, r2, r3, r5
 8025438:	0a09      	lsrs	r1, r1, #8
 802543a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802543e:	fb04 540e 	mla	r4, r4, lr, r5
 8025442:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025446:	fb01 4100 	mla	r1, r1, r0, r4
 802544a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802544e:	0a09      	lsrs	r1, r1, #8
 8025450:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025454:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025458:	fb07 f70a 	mul.w	r7, r7, sl
 802545c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025460:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025464:	fb03 7101 	mla	r1, r3, r1, r7
 8025468:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802546c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025470:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025474:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025478:	fb00 e101 	mla	r1, r0, r1, lr
 802547c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8025480:	9a00      	ldr	r2, [sp, #0]
 8025482:	b287      	uxth	r7, r0
 8025484:	437a      	muls	r2, r7
 8025486:	0a09      	lsrs	r1, r1, #8
 8025488:	1c53      	adds	r3, r2, #1
 802548a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802548e:	4321      	orrs	r1, r4
 8025490:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025494:	1235      	asrs	r5, r6, #8
 8025496:	0c0a      	lsrs	r2, r1, #16
 8025498:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802549c:	b2db      	uxtb	r3, r3
 802549e:	fb12 f207 	smulbb	r2, r2, r7
 80254a2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80254a6:	fb05 2503 	mla	r5, r5, r3, r2
 80254aa:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80254ae:	10f2      	asrs	r2, r6, #3
 80254b0:	b2c8      	uxtb	r0, r1
 80254b2:	00f6      	lsls	r6, r6, #3
 80254b4:	fb14 f407 	smulbb	r4, r4, r7
 80254b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80254bc:	b2f6      	uxtb	r6, r6
 80254be:	fb10 f007 	smulbb	r0, r0, r7
 80254c2:	fb02 4203 	mla	r2, r2, r3, r4
 80254c6:	b2ad      	uxth	r5, r5
 80254c8:	fb06 0303 	mla	r3, r6, r3, r0
 80254cc:	b299      	uxth	r1, r3
 80254ce:	b294      	uxth	r4, r2
 80254d0:	1c6b      	adds	r3, r5, #1
 80254d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80254d6:	1c62      	adds	r2, r4, #1
 80254d8:	1c4b      	adds	r3, r1, #1
 80254da:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80254de:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80254e2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80254e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80254ea:	0952      	lsrs	r2, r2, #5
 80254ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254f0:	432b      	orrs	r3, r5
 80254f2:	4313      	orrs	r3, r2
 80254f4:	9a02      	ldr	r2, [sp, #8]
 80254f6:	8013      	strh	r3, [r2, #0]
 80254f8:	b005      	add	sp, #20
 80254fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254fe:	2500      	movs	r5, #0
 8025500:	e6ef      	b.n	80252e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8025502:	2100      	movs	r1, #0
 8025504:	460d      	mov	r5, r1
 8025506:	e6f7      	b.n	80252f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025508:	2100      	movs	r1, #0
 802550a:	e6f5      	b.n	80252f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802550c:	4631      	mov	r1, r6
 802550e:	e6f3      	b.n	80252f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025510:	2400      	movs	r4, #0
 8025512:	e702      	b.n	802531a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8025514:	2200      	movs	r2, #0
 8025516:	4614      	mov	r4, r2
 8025518:	e70b      	b.n	8025332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802551a:	4602      	mov	r2, r0
 802551c:	4604      	mov	r4, r0
 802551e:	e708      	b.n	8025332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025520:	2200      	movs	r2, #0
 8025522:	e706      	b.n	8025332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025524:	4632      	mov	r2, r6
 8025526:	e704      	b.n	8025332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08025528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802552c:	b09d      	sub	sp, #116	; 0x74
 802552e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8025532:	9219      	str	r2, [sp, #100]	; 0x64
 8025534:	9307      	str	r3, [sp, #28]
 8025536:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8025538:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802553c:	931a      	str	r3, [sp, #104]	; 0x68
 802553e:	9117      	str	r1, [sp, #92]	; 0x5c
 8025540:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8025544:	901b      	str	r0, [sp, #108]	; 0x6c
 8025546:	6850      	ldr	r0, [r2, #4]
 8025548:	6812      	ldr	r2, [r2, #0]
 802554a:	fb00 1303 	mla	r3, r0, r3, r1
 802554e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025552:	930a      	str	r3, [sp, #40]	; 0x28
 8025554:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025556:	681b      	ldr	r3, [r3, #0]
 8025558:	9310      	str	r3, [sp, #64]	; 0x40
 802555a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802555e:	930b      	str	r3, [sp, #44]	; 0x2c
 8025560:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025562:	2b00      	cmp	r3, #0
 8025564:	dc03      	bgt.n	802556e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8025566:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025568:	2b00      	cmp	r3, #0
 802556a:	f340 8375 	ble.w	8025c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802556e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025570:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025574:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025578:	1e48      	subs	r0, r1, #1
 802557a:	1e57      	subs	r7, r2, #1
 802557c:	9b07      	ldr	r3, [sp, #28]
 802557e:	2b00      	cmp	r3, #0
 8025580:	f340 818e 	ble.w	80258a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8025584:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025588:	ea4f 4326 	mov.w	r3, r6, asr #16
 802558c:	d406      	bmi.n	802559c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802558e:	4584      	cmp	ip, r0
 8025590:	da04      	bge.n	802559c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025592:	2b00      	cmp	r3, #0
 8025594:	db02      	blt.n	802559c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025596:	42bb      	cmp	r3, r7
 8025598:	f2c0 8183 	blt.w	80258a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802559c:	f11c 0c01 	adds.w	ip, ip, #1
 80255a0:	f100 8173 	bmi.w	802588a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80255a4:	4561      	cmp	r1, ip
 80255a6:	f2c0 8170 	blt.w	802588a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80255aa:	3301      	adds	r3, #1
 80255ac:	f100 816d 	bmi.w	802588a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80255b0:	429a      	cmp	r2, r3
 80255b2:	f2c0 816a 	blt.w	802588a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80255b6:	9b07      	ldr	r3, [sp, #28]
 80255b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80255ba:	9318      	str	r3, [sp, #96]	; 0x60
 80255bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80255be:	2b00      	cmp	r3, #0
 80255c0:	f340 818c 	ble.w	80258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80255c4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80255c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80255c8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80255cc:	689b      	ldr	r3, [r3, #8]
 80255ce:	1422      	asrs	r2, r4, #16
 80255d0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80255d4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80255d8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80255dc:	f100 81cd 	bmi.w	802597a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255e0:	f103 38ff 	add.w	r8, r3, #4294967295
 80255e4:	4542      	cmp	r2, r8
 80255e6:	f280 81c8 	bge.w	802597a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255ea:	f1bc 0f00 	cmp.w	ip, #0
 80255ee:	f2c0 81c4 	blt.w	802597a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80255f6:	45c4      	cmp	ip, r8
 80255f8:	f280 81bf 	bge.w	802597a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255fc:	b21b      	sxth	r3, r3
 80255fe:	fb0c 2203 	mla	r2, ip, r3, r2
 8025602:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025604:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025608:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802560c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025610:	2800      	cmp	r0, #0
 8025612:	f000 81a9 	beq.w	8025968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8025616:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802561a:	950c      	str	r5, [sp, #48]	; 0x30
 802561c:	0e2d      	lsrs	r5, r5, #24
 802561e:	9513      	str	r5, [sp, #76]	; 0x4c
 8025620:	b181      	cbz	r1, 8025644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025622:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025626:	3b01      	subs	r3, #1
 8025628:	009b      	lsls	r3, r3, #2
 802562a:	3304      	adds	r3, #4
 802562c:	eb08 0c03 	add.w	ip, r8, r3
 8025630:	f858 3003 	ldr.w	r3, [r8, r3]
 8025634:	9308      	str	r3, [sp, #32]
 8025636:	0e1b      	lsrs	r3, r3, #24
 8025638:	9311      	str	r3, [sp, #68]	; 0x44
 802563a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802563e:	930d      	str	r3, [sp, #52]	; 0x34
 8025640:	0e1b      	lsrs	r3, r3, #24
 8025642:	9314      	str	r3, [sp, #80]	; 0x50
 8025644:	b280      	uxth	r0, r0
 8025646:	b289      	uxth	r1, r1
 8025648:	fb00 f901 	mul.w	r9, r0, r1
 802564c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025650:	0100      	lsls	r0, r0, #4
 8025652:	eba0 0809 	sub.w	r8, r0, r9
 8025656:	b289      	uxth	r1, r1
 8025658:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802565c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802565e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025660:	fa1f f888 	uxth.w	r8, r8
 8025664:	1a5b      	subs	r3, r3, r1
 8025666:	b29b      	uxth	r3, r3
 8025668:	fb08 f000 	mul.w	r0, r8, r0
 802566c:	fb03 000e 	mla	r0, r3, lr, r0
 8025670:	fb01 0005 	mla	r0, r1, r5, r0
 8025674:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025676:	fb09 0005 	mla	r0, r9, r5, r0
 802567a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802567e:	2800      	cmp	r0, #0
 8025680:	f000 80fa 	beq.w	8025878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025684:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025688:	d01b      	beq.n	80256c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802568a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802568e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025692:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025696:	fb0e fe02 	mul.w	lr, lr, r2
 802569a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802569e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80256a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80256a6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80256aa:	4452      	add	r2, sl
 80256ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80256b0:	0a12      	lsrs	r2, r2, #8
 80256b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256b6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80256ba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80256be:	ea42 020c 	orr.w	r2, r2, ip
 80256c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256c4:	2dff      	cmp	r5, #255	; 0xff
 80256c6:	d021      	beq.n	802570c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80256c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80256ca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80256ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256d0:	fb05 fb0b 	mul.w	fp, r5, fp
 80256d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80256d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80256e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80256ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80256f0:	44de      	add	lr, fp
 80256f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80256f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80256fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025702:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025706:	ea4e 050a 	orr.w	r5, lr, sl
 802570a:	950c      	str	r5, [sp, #48]	; 0x30
 802570c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802570e:	2dff      	cmp	r5, #255	; 0xff
 8025710:	d021      	beq.n	8025756 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8025712:	9d08      	ldr	r5, [sp, #32]
 8025714:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025718:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802571a:	fb05 fb0b 	mul.w	fp, r5, fp
 802571e:	9d08      	ldr	r5, [sp, #32]
 8025720:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025724:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025726:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802572a:	fb05 fa0a 	mul.w	sl, r5, sl
 802572e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025732:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025736:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802573a:	44de      	add	lr, fp
 802573c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025740:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025744:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025748:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802574c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025750:	ea4e 050a 	orr.w	r5, lr, sl
 8025754:	9508      	str	r5, [sp, #32]
 8025756:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025758:	2dff      	cmp	r5, #255	; 0xff
 802575a:	d021      	beq.n	80257a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802575c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802575e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025762:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025764:	fb05 fb0b 	mul.w	fp, r5, fp
 8025768:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802576a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802576e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025770:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025774:	fb05 fa0a 	mul.w	sl, r5, sl
 8025778:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802577c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025780:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025784:	44de      	add	lr, fp
 8025786:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802578a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802578e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025792:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025796:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802579a:	ea4e 050a 	orr.w	r5, lr, sl
 802579e:	950d      	str	r5, [sp, #52]	; 0x34
 80257a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80257a2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80257a6:	9d08      	ldr	r5, [sp, #32]
 80257a8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80257ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80257b0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80257b4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80257b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80257ba:	fb01 cc0e 	mla	ip, r1, lr, ip
 80257be:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80257c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80257c4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80257c8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80257cc:	fb08 f80e 	mul.w	r8, r8, lr
 80257d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80257d4:	fb03 8202 	mla	r2, r3, r2, r8
 80257d8:	9b08      	ldr	r3, [sp, #32]
 80257da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80257dc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80257e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257e2:	fb01 220a 	mla	r2, r1, sl, r2
 80257e6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80257ea:	fb09 2901 	mla	r9, r9, r1, r2
 80257ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80257f0:	883b      	ldrh	r3, [r7, #0]
 80257f2:	4342      	muls	r2, r0
 80257f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80257fc:	1c50      	adds	r0, r2, #1
 80257fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025802:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025806:	ea4c 0c09 	orr.w	ip, ip, r9
 802580a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802580e:	1219      	asrs	r1, r3, #8
 8025810:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025814:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025818:	b2c0      	uxtb	r0, r0
 802581a:	fb12 f205 	smulbb	r2, r2, r5
 802581e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025822:	fb01 2100 	mla	r1, r1, r0, r2
 8025826:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802582a:	10da      	asrs	r2, r3, #3
 802582c:	fa5f fc8c 	uxtb.w	ip, ip
 8025830:	00db      	lsls	r3, r3, #3
 8025832:	fb1c fc05 	smulbb	ip, ip, r5
 8025836:	b2db      	uxtb	r3, r3
 8025838:	b289      	uxth	r1, r1
 802583a:	fb03 c300 	mla	r3, r3, r0, ip
 802583e:	fa1f fc83 	uxth.w	ip, r3
 8025842:	1c4b      	adds	r3, r1, #1
 8025844:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025848:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802584c:	fb1e fe05 	smulbb	lr, lr, r5
 8025850:	f10c 0301 	add.w	r3, ip, #1
 8025854:	fb02 e200 	mla	r2, r2, r0, lr
 8025858:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802585c:	b292      	uxth	r2, r2
 802585e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025862:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025866:	430b      	orrs	r3, r1
 8025868:	1c51      	adds	r1, r2, #1
 802586a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802586e:	0952      	lsrs	r2, r2, #5
 8025870:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025874:	4313      	orrs	r3, r2
 8025876:	803b      	strh	r3, [r7, #0]
 8025878:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802587a:	441c      	add	r4, r3
 802587c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802587e:	441e      	add	r6, r3
 8025880:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025882:	3b01      	subs	r3, #1
 8025884:	3702      	adds	r7, #2
 8025886:	9318      	str	r3, [sp, #96]	; 0x60
 8025888:	e698      	b.n	80255bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802588a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802588c:	441c      	add	r4, r3
 802588e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025890:	441e      	add	r6, r3
 8025892:	9b07      	ldr	r3, [sp, #28]
 8025894:	3b01      	subs	r3, #1
 8025896:	9307      	str	r3, [sp, #28]
 8025898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802589a:	3302      	adds	r3, #2
 802589c:	930a      	str	r3, [sp, #40]	; 0x28
 802589e:	e66d      	b.n	802557c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80258a0:	d023      	beq.n	80258ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80258a2:	9b07      	ldr	r3, [sp, #28]
 80258a4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80258a6:	3b01      	subs	r3, #1
 80258a8:	fb00 4003 	mla	r0, r0, r3, r4
 80258ac:	1400      	asrs	r0, r0, #16
 80258ae:	f53f ae82 	bmi.w	80255b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258b2:	3901      	subs	r1, #1
 80258b4:	4288      	cmp	r0, r1
 80258b6:	f6bf ae7e 	bge.w	80255b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258ba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80258bc:	fb01 6303 	mla	r3, r1, r3, r6
 80258c0:	141b      	asrs	r3, r3, #16
 80258c2:	f53f ae78 	bmi.w	80255b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258c6:	3a01      	subs	r2, #1
 80258c8:	4293      	cmp	r3, r2
 80258ca:	f6bf ae74 	bge.w	80255b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80258d2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80258d6:	f1bb 0f00 	cmp.w	fp, #0
 80258da:	dc6c      	bgt.n	80259b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80258dc:	9b07      	ldr	r3, [sp, #28]
 80258de:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80258e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80258e4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80258e8:	930a      	str	r3, [sp, #40]	; 0x28
 80258ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80258ec:	2b00      	cmp	r3, #0
 80258ee:	f340 81b3 	ble.w	8025c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80258f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80258f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80258fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80258fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025900:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025904:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025908:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802590c:	eef0 6a62 	vmov.f32	s13, s5
 8025910:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025914:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025918:	ee77 2a62 	vsub.f32	s5, s14, s5
 802591c:	ee16 4a90 	vmov	r4, s13
 8025920:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025924:	eef0 6a43 	vmov.f32	s13, s6
 8025928:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802592c:	ee12 2a90 	vmov	r2, s5
 8025930:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025934:	fb92 f3f3 	sdiv	r3, r2, r3
 8025938:	ee13 2a10 	vmov	r2, s6
 802593c:	9329      	str	r3, [sp, #164]	; 0xa4
 802593e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025940:	fb92 f3f3 	sdiv	r3, r2, r3
 8025944:	932a      	str	r3, [sp, #168]	; 0xa8
 8025946:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025948:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802594a:	3b01      	subs	r3, #1
 802594c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025950:	9317      	str	r3, [sp, #92]	; 0x5c
 8025952:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025954:	bf08      	it	eq
 8025956:	4613      	moveq	r3, r2
 8025958:	ee16 6a90 	vmov	r6, s13
 802595c:	9307      	str	r3, [sp, #28]
 802595e:	eeb0 3a67 	vmov.f32	s6, s15
 8025962:	eef0 2a47 	vmov.f32	s5, s14
 8025966:	e5fb      	b.n	8025560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025968:	2900      	cmp	r1, #0
 802596a:	f43f ae6b 	beq.w	8025644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802596e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025972:	9308      	str	r3, [sp, #32]
 8025974:	0e1b      	lsrs	r3, r3, #24
 8025976:	9311      	str	r3, [sp, #68]	; 0x44
 8025978:	e664      	b.n	8025644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802597a:	f112 0801 	adds.w	r8, r2, #1
 802597e:	f53f af7b 	bmi.w	8025878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025982:	4543      	cmp	r3, r8
 8025984:	f6ff af78 	blt.w	8025878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025988:	f11c 0801 	adds.w	r8, ip, #1
 802598c:	f53f af74 	bmi.w	8025878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025990:	45c6      	cmp	lr, r8
 8025992:	f6ff af71 	blt.w	8025878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025996:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025998:	9201      	str	r2, [sp, #4]
 802599a:	fa0f f28e 	sxth.w	r2, lr
 802599e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80259a2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80259a6:	9200      	str	r2, [sp, #0]
 80259a8:	b21b      	sxth	r3, r3
 80259aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80259ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80259ae:	4639      	mov	r1, r7
 80259b0:	f7ff fc79 	bl	80252a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80259b4:	e760      	b.n	8025878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80259b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80259b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80259ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80259be:	1427      	asrs	r7, r4, #16
 80259c0:	1433      	asrs	r3, r6, #16
 80259c2:	fb01 7303 	mla	r3, r1, r3, r7
 80259c6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80259ca:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80259ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80259d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259d6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80259da:	2a00      	cmp	r2, #0
 80259dc:	f000 8133 	beq.w	8025c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80259e0:	687d      	ldr	r5, [r7, #4]
 80259e2:	950e      	str	r5, [sp, #56]	; 0x38
 80259e4:	0e2d      	lsrs	r5, r5, #24
 80259e6:	9515      	str	r5, [sp, #84]	; 0x54
 80259e8:	b178      	cbz	r0, 8025a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80259ea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80259ee:	3901      	subs	r1, #1
 80259f0:	0089      	lsls	r1, r1, #2
 80259f2:	3104      	adds	r1, #4
 80259f4:	eb07 0e01 	add.w	lr, r7, r1
 80259f8:	5879      	ldr	r1, [r7, r1]
 80259fa:	9109      	str	r1, [sp, #36]	; 0x24
 80259fc:	0e09      	lsrs	r1, r1, #24
 80259fe:	9112      	str	r1, [sp, #72]	; 0x48
 8025a00:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025a04:	910f      	str	r1, [sp, #60]	; 0x3c
 8025a06:	0e09      	lsrs	r1, r1, #24
 8025a08:	9116      	str	r1, [sp, #88]	; 0x58
 8025a0a:	b292      	uxth	r2, r2
 8025a0c:	b280      	uxth	r0, r0
 8025a0e:	fb02 f800 	mul.w	r8, r2, r0
 8025a12:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025a16:	0112      	lsls	r2, r2, #4
 8025a18:	eba2 0e08 	sub.w	lr, r2, r8
 8025a1c:	b280      	uxth	r0, r0
 8025a1e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025a22:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025a24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a26:	fa1f fe8e 	uxth.w	lr, lr
 8025a2a:	1a12      	subs	r2, r2, r0
 8025a2c:	b292      	uxth	r2, r2
 8025a2e:	fb0e f101 	mul.w	r1, lr, r1
 8025a32:	fb02 110c 	mla	r1, r2, ip, r1
 8025a36:	fb00 1105 	mla	r1, r0, r5, r1
 8025a3a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025a3c:	fb08 1105 	mla	r1, r8, r5, r1
 8025a40:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025a44:	2900      	cmp	r1, #0
 8025a46:	f000 80f5 	beq.w	8025c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025a4a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025a4e:	d019      	beq.n	8025a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025a50:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025a54:	fb0c fa0a 	mul.w	sl, ip, sl
 8025a58:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025a5c:	fb0c fc03 	mul.w	ip, ip, r3
 8025a60:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025a64:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a68:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025a6c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025a70:	4453      	add	r3, sl
 8025a72:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025a76:	0a1b      	lsrs	r3, r3, #8
 8025a78:	0a3f      	lsrs	r7, r7, #8
 8025a7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a7e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025a82:	433b      	orrs	r3, r7
 8025a84:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a86:	2dff      	cmp	r5, #255	; 0xff
 8025a88:	d020      	beq.n	8025acc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8025a8a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a8c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025a90:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a92:	436f      	muls	r7, r5
 8025a94:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025a9a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025aa0:	fb05 fa0a 	mul.w	sl, r5, sl
 8025aa4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025aa8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025aac:	44bc      	add	ip, r7
 8025aae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025ab2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025ab6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025aba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025abe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ac2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ac6:	ea4c 050a 	orr.w	r5, ip, sl
 8025aca:	950e      	str	r5, [sp, #56]	; 0x38
 8025acc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ace:	2dff      	cmp	r5, #255	; 0xff
 8025ad0:	d020      	beq.n	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025ad2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025ad4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025ad8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ada:	436f      	muls	r7, r5
 8025adc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025ade:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025ae2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ae4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025ae8:	fb05 fa0a 	mul.w	sl, r5, sl
 8025aec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025af0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025af4:	44bc      	add	ip, r7
 8025af6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025afa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025afe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b0e:	ea4c 050a 	orr.w	r5, ip, sl
 8025b12:	9509      	str	r5, [sp, #36]	; 0x24
 8025b14:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025b16:	2dff      	cmp	r5, #255	; 0xff
 8025b18:	d020      	beq.n	8025b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025b1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b1c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025b20:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025b22:	436f      	muls	r7, r5
 8025b24:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b26:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025b2a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025b2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b30:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b34:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025b38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b3c:	44bc      	add	ip, r7
 8025b3e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025b42:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b56:	ea4c 050a 	orr.w	r5, ip, sl
 8025b5a:	950f      	str	r5, [sp, #60]	; 0x3c
 8025b5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b5e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025b62:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025b64:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025b68:	fb0e f707 	mul.w	r7, lr, r7
 8025b6c:	fb02 770c 	mla	r7, r2, ip, r7
 8025b70:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b74:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b76:	fb00 770c 	mla	r7, r0, ip, r7
 8025b7a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b7e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b80:	fb08 770c 	mla	r7, r8, ip, r7
 8025b84:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025b88:	fb0e fe0c 	mul.w	lr, lr, ip
 8025b8c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025b90:	fb02 e303 	mla	r3, r2, r3, lr
 8025b94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025b96:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b98:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025b9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025b9e:	fb00 330a 	mla	r3, r0, sl, r3
 8025ba2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025ba6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025baa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025bac:	f8b9 0000 	ldrh.w	r0, [r9]
 8025bb0:	4359      	muls	r1, r3
 8025bb2:	0a3f      	lsrs	r7, r7, #8
 8025bb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025bb8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025bbc:	1c4b      	adds	r3, r1, #1
 8025bbe:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025bc2:	ea47 070c 	orr.w	r7, r7, ip
 8025bc6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025bca:	1202      	asrs	r2, r0, #8
 8025bcc:	0c3b      	lsrs	r3, r7, #16
 8025bce:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025bd2:	b2c9      	uxtb	r1, r1
 8025bd4:	fb13 f305 	smulbb	r3, r3, r5
 8025bd8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025bdc:	fb02 3201 	mla	r2, r2, r1, r3
 8025be0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025be4:	10c3      	asrs	r3, r0, #3
 8025be6:	b2ff      	uxtb	r7, r7
 8025be8:	00c0      	lsls	r0, r0, #3
 8025bea:	b2c0      	uxtb	r0, r0
 8025bec:	fb17 f705 	smulbb	r7, r7, r5
 8025bf0:	fb00 7001 	mla	r0, r0, r1, r7
 8025bf4:	b292      	uxth	r2, r2
 8025bf6:	fb1c fc05 	smulbb	ip, ip, r5
 8025bfa:	b280      	uxth	r0, r0
 8025bfc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025c00:	fb03 c301 	mla	r3, r3, r1, ip
 8025c04:	1c51      	adds	r1, r2, #1
 8025c06:	f100 0c01 	add.w	ip, r0, #1
 8025c0a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025c0e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025c12:	b29b      	uxth	r3, r3
 8025c14:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025c18:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025c1c:	ea4c 0202 	orr.w	r2, ip, r2
 8025c20:	f103 0c01 	add.w	ip, r3, #1
 8025c24:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025c28:	095b      	lsrs	r3, r3, #5
 8025c2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c2e:	431a      	orrs	r2, r3
 8025c30:	f8a9 2000 	strh.w	r2, [r9]
 8025c34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025c36:	441c      	add	r4, r3
 8025c38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025c3a:	f109 0902 	add.w	r9, r9, #2
 8025c3e:	441e      	add	r6, r3
 8025c40:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c44:	e647      	b.n	80258d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025c46:	2800      	cmp	r0, #0
 8025c48:	f43f aedf 	beq.w	8025a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c4c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025c50:	9109      	str	r1, [sp, #36]	; 0x24
 8025c52:	0e09      	lsrs	r1, r1, #24
 8025c54:	9112      	str	r1, [sp, #72]	; 0x48
 8025c56:	e6d8      	b.n	8025a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c58:	b01d      	add	sp, #116	; 0x74
 8025c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025c5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c62:	b085      	sub	sp, #20
 8025c64:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025c68:	9102      	str	r1, [sp, #8]
 8025c6a:	2c00      	cmp	r4, #0
 8025c6c:	fb04 7103 	mla	r1, r4, r3, r7
 8025c70:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025c74:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025c78:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025c7c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025c80:	f2c0 810c 	blt.w	8025e9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025c84:	45a6      	cmp	lr, r4
 8025c86:	f340 8109 	ble.w	8025e9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025c8a:	2f00      	cmp	r7, #0
 8025c8c:	f2c0 8104 	blt.w	8025e98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025c90:	42bb      	cmp	r3, r7
 8025c92:	f340 8101 	ble.w	8025e98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025c96:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025c9a:	1c7a      	adds	r2, r7, #1
 8025c9c:	f100 8101 	bmi.w	8025ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025ca0:	4293      	cmp	r3, r2
 8025ca2:	f340 80fe 	ble.w	8025ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025ca6:	2e00      	cmp	r6, #0
 8025ca8:	f000 80fd 	beq.w	8025ea6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025cac:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025cb0:	3401      	adds	r4, #1
 8025cb2:	f100 80fc 	bmi.w	8025eae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025cb6:	45a6      	cmp	lr, r4
 8025cb8:	f340 80f9 	ble.w	8025eae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025cbc:	2800      	cmp	r0, #0
 8025cbe:	f000 80f9 	beq.w	8025eb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025cc2:	2f00      	cmp	r7, #0
 8025cc4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025cc8:	f2c0 80ef 	blt.w	8025eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025ccc:	42bb      	cmp	r3, r7
 8025cce:	f340 80ec 	ble.w	8025eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025cd2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025cd6:	3701      	adds	r7, #1
 8025cd8:	f100 80ef 	bmi.w	8025eba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025cdc:	42bb      	cmp	r3, r7
 8025cde:	f340 80ec 	ble.w	8025eba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025ce2:	2e00      	cmp	r6, #0
 8025ce4:	f000 80eb 	beq.w	8025ebe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025ce8:	6852      	ldr	r2, [r2, #4]
 8025cea:	b2b6      	uxth	r6, r6
 8025cec:	b280      	uxth	r0, r0
 8025cee:	fb00 fe06 	mul.w	lr, r0, r6
 8025cf2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025cf6:	0136      	lsls	r6, r6, #4
 8025cf8:	eba6 070e 	sub.w	r7, r6, lr
 8025cfc:	b280      	uxth	r0, r0
 8025cfe:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025d02:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025d06:	b2bf      	uxth	r7, r7
 8025d08:	1a1b      	subs	r3, r3, r0
 8025d0a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025d0e:	b29b      	uxth	r3, r3
 8025d10:	fb07 f60a 	mul.w	r6, r7, sl
 8025d14:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025d18:	fb0b 6603 	mla	r6, fp, r3, r6
 8025d1c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025d20:	fb00 6609 	mla	r6, r0, r9, r6
 8025d24:	fb0e 6608 	mla	r6, lr, r8, r6
 8025d28:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025d2c:	9600      	str	r6, [sp, #0]
 8025d2e:	2e00      	cmp	r6, #0
 8025d30:	f000 80af 	beq.w	8025e92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025d34:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025d38:	fb0b fc0c 	mul.w	ip, fp, ip
 8025d3c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025d40:	fb0b f505 	mul.w	r5, fp, r5
 8025d44:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025d48:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025d4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025d50:	44dc      	add	ip, fp
 8025d52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d56:	9501      	str	r5, [sp, #4]
 8025d58:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025d5c:	9503      	str	r5, [sp, #12]
 8025d5e:	9d01      	ldr	r5, [sp, #4]
 8025d60:	9e02      	ldr	r6, [sp, #8]
 8025d62:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025d66:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025d6a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025d6e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025d72:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025d76:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025d7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025d7e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025d82:	4465      	add	r5, ip
 8025d84:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025d88:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025d8c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025d90:	fb09 f904 	mul.w	r9, r9, r4
 8025d94:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025d98:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025d9c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025da0:	fb08 f404 	mul.w	r4, r8, r4
 8025da4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025da8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025dac:	fb08 f802 	mul.w	r8, r8, r2
 8025db0:	fb0a fa01 	mul.w	sl, sl, r1
 8025db4:	0a22      	lsrs	r2, r4, #8
 8025db6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025dba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025dbe:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8025dc2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8025dc6:	4414      	add	r4, r2
 8025dc8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025dcc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025dd0:	0a2d      	lsrs	r5, r5, #8
 8025dd2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025dd6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025dda:	9a03      	ldr	r2, [sp, #12]
 8025ddc:	8836      	ldrh	r6, [r6, #0]
 8025dde:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025de2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025de6:	437d      	muls	r5, r7
 8025de8:	4461      	add	r1, ip
 8025dea:	0a24      	lsrs	r4, r4, #8
 8025dec:	fb02 5503 	mla	r5, r2, r3, r5
 8025df0:	0a09      	lsrs	r1, r1, #8
 8025df2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025df6:	fb04 540e 	mla	r4, r4, lr, r5
 8025dfa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025dfe:	fb01 4100 	mla	r1, r1, r0, r4
 8025e02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025e06:	0a09      	lsrs	r1, r1, #8
 8025e08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025e0c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025e10:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025e14:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025e18:	fb07 f70a 	mul.w	r7, r7, sl
 8025e1c:	fb03 7101 	mla	r1, r3, r1, r7
 8025e20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025e24:	9b00      	ldr	r3, [sp, #0]
 8025e26:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025e2a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025e2e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025e32:	fb00 e101 	mla	r1, r0, r1, lr
 8025e36:	43da      	mvns	r2, r3
 8025e38:	1233      	asrs	r3, r6, #8
 8025e3a:	b2d2      	uxtb	r2, r2
 8025e3c:	10f0      	asrs	r0, r6, #3
 8025e3e:	0a09      	lsrs	r1, r1, #8
 8025e40:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025e44:	00f6      	lsls	r6, r6, #3
 8025e46:	4353      	muls	r3, r2
 8025e48:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025e4c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e50:	b2f6      	uxtb	r6, r6
 8025e52:	4321      	orrs	r1, r4
 8025e54:	4350      	muls	r0, r2
 8025e56:	4356      	muls	r6, r2
 8025e58:	1c5a      	adds	r2, r3, #1
 8025e5a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025e5e:	0c0b      	lsrs	r3, r1, #16
 8025e60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e64:	1c42      	adds	r2, r0, #1
 8025e66:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e6a:	0a0a      	lsrs	r2, r1, #8
 8025e6c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025e70:	021b      	lsls	r3, r3, #8
 8025e72:	00d2      	lsls	r2, r2, #3
 8025e74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e78:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025e7c:	4313      	orrs	r3, r2
 8025e7e:	1c72      	adds	r2, r6, #1
 8025e80:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025e84:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025e88:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025e8c:	4319      	orrs	r1, r3
 8025e8e:	9b02      	ldr	r3, [sp, #8]
 8025e90:	8019      	strh	r1, [r3, #0]
 8025e92:	b005      	add	sp, #20
 8025e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e98:	2500      	movs	r5, #0
 8025e9a:	e6fe      	b.n	8025c9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8025e9c:	2100      	movs	r1, #0
 8025e9e:	460d      	mov	r5, r1
 8025ea0:	e706      	b.n	8025cb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025ea2:	2100      	movs	r1, #0
 8025ea4:	e704      	b.n	8025cb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025ea6:	4631      	mov	r1, r6
 8025ea8:	e702      	b.n	8025cb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025eaa:	2400      	movs	r4, #0
 8025eac:	e713      	b.n	8025cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8025eae:	2200      	movs	r2, #0
 8025eb0:	4614      	mov	r4, r2
 8025eb2:	e71a      	b.n	8025cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025eb4:	4602      	mov	r2, r0
 8025eb6:	4604      	mov	r4, r0
 8025eb8:	e717      	b.n	8025cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025eba:	2200      	movs	r2, #0
 8025ebc:	e715      	b.n	8025cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025ebe:	4632      	mov	r2, r6
 8025ec0:	e713      	b.n	8025cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08025ec4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ec8:	b09b      	sub	sp, #108	; 0x6c
 8025eca:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025ece:	9218      	str	r2, [sp, #96]	; 0x60
 8025ed0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8025ed2:	9116      	str	r1, [sp, #88]	; 0x58
 8025ed4:	9307      	str	r3, [sp, #28]
 8025ed6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025eda:	9019      	str	r0, [sp, #100]	; 0x64
 8025edc:	6850      	ldr	r0, [r2, #4]
 8025ede:	6812      	ldr	r2, [r2, #0]
 8025ee0:	fb00 1303 	mla	r3, r0, r3, r1
 8025ee4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025ee8:	930a      	str	r3, [sp, #40]	; 0x28
 8025eea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025eec:	681b      	ldr	r3, [r3, #0]
 8025eee:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ef0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025ef2:	2b00      	cmp	r3, #0
 8025ef4:	dc03      	bgt.n	8025efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025ef6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025ef8:	2b00      	cmp	r3, #0
 8025efa:	f340 8386 	ble.w	802660a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025efe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025f00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025f04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025f08:	1e48      	subs	r0, r1, #1
 8025f0a:	1e57      	subs	r7, r2, #1
 8025f0c:	9b07      	ldr	r3, [sp, #28]
 8025f0e:	2b00      	cmp	r3, #0
 8025f10:	f340 8166 	ble.w	80261e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025f14:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025f18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025f1c:	d406      	bmi.n	8025f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025f1e:	4584      	cmp	ip, r0
 8025f20:	da04      	bge.n	8025f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025f22:	2b00      	cmp	r3, #0
 8025f24:	db02      	blt.n	8025f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025f26:	42bb      	cmp	r3, r7
 8025f28:	f2c0 815b 	blt.w	80261e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025f2c:	f11c 0c01 	adds.w	ip, ip, #1
 8025f30:	f100 814b 	bmi.w	80261ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f34:	4561      	cmp	r1, ip
 8025f36:	f2c0 8148 	blt.w	80261ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f3a:	3301      	adds	r3, #1
 8025f3c:	f100 8145 	bmi.w	80261ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f40:	429a      	cmp	r2, r3
 8025f42:	f2c0 8142 	blt.w	80261ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f46:	9b07      	ldr	r3, [sp, #28]
 8025f48:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025f4a:	9317      	str	r3, [sp, #92]	; 0x5c
 8025f4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025f4e:	2b00      	cmp	r3, #0
 8025f50:	f340 8165 	ble.w	802621e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025f54:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025f56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025f58:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025f5c:	689b      	ldr	r3, [r3, #8]
 8025f5e:	1422      	asrs	r2, r4, #16
 8025f60:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025f64:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025f68:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025f6c:	f100 81d5 	bmi.w	802631a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f70:	f103 38ff 	add.w	r8, r3, #4294967295
 8025f74:	4542      	cmp	r2, r8
 8025f76:	f280 81d0 	bge.w	802631a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f7a:	f1bc 0f00 	cmp.w	ip, #0
 8025f7e:	f2c0 81cc 	blt.w	802631a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f82:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025f86:	45c4      	cmp	ip, r8
 8025f88:	f280 81c7 	bge.w	802631a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f8c:	b21b      	sxth	r3, r3
 8025f8e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025f92:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025f94:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025f98:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025f9c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025fa0:	2900      	cmp	r1, #0
 8025fa2:	f000 8182 	beq.w	80262aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025fa6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025faa:	950b      	str	r5, [sp, #44]	; 0x2c
 8025fac:	0e2d      	lsrs	r5, r5, #24
 8025fae:	9512      	str	r5, [sp, #72]	; 0x48
 8025fb0:	b180      	cbz	r0, 8025fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025fb2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025fb6:	3b01      	subs	r3, #1
 8025fb8:	009b      	lsls	r3, r3, #2
 8025fba:	3304      	adds	r3, #4
 8025fbc:	eb08 0c03 	add.w	ip, r8, r3
 8025fc0:	f858 3003 	ldr.w	r3, [r8, r3]
 8025fc4:	9308      	str	r3, [sp, #32]
 8025fc6:	0e1b      	lsrs	r3, r3, #24
 8025fc8:	9310      	str	r3, [sp, #64]	; 0x40
 8025fca:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025fce:	930c      	str	r3, [sp, #48]	; 0x30
 8025fd0:	0e1b      	lsrs	r3, r3, #24
 8025fd2:	9313      	str	r3, [sp, #76]	; 0x4c
 8025fd4:	b289      	uxth	r1, r1
 8025fd6:	b280      	uxth	r0, r0
 8025fd8:	fb01 f900 	mul.w	r9, r1, r0
 8025fdc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025fe0:	0109      	lsls	r1, r1, #4
 8025fe2:	eba1 0809 	sub.w	r8, r1, r9
 8025fe6:	b280      	uxth	r0, r0
 8025fe8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025fec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025fee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025ff0:	fa1f f888 	uxth.w	r8, r8
 8025ff4:	1a09      	subs	r1, r1, r0
 8025ff6:	b289      	uxth	r1, r1
 8025ff8:	fb08 f303 	mul.w	r3, r8, r3
 8025ffc:	fb01 330e 	mla	r3, r1, lr, r3
 8026000:	fb00 3305 	mla	r3, r0, r5, r3
 8026004:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026006:	fb09 3305 	mla	r3, r9, r5, r3
 802600a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802600e:	2b00      	cmp	r3, #0
 8026010:	f000 80d2 	beq.w	80261b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026014:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026018:	d01b      	beq.n	8026052 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802601a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802601e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026022:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026026:	fb0e fe02 	mul.w	lr, lr, r2
 802602a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802602e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026032:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026036:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802603a:	4452      	add	r2, sl
 802603c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026040:	0a12      	lsrs	r2, r2, #8
 8026042:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026046:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802604a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802604e:	ea42 020c 	orr.w	r2, r2, ip
 8026052:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026054:	2dff      	cmp	r5, #255	; 0xff
 8026056:	d021      	beq.n	802609c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026058:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802605a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802605e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026060:	fb05 fb0b 	mul.w	fp, r5, fp
 8026064:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026066:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802606a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802606c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026070:	fb05 fa0a 	mul.w	sl, r5, sl
 8026074:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026078:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802607c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026080:	44de      	add	lr, fp
 8026082:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026086:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802608a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802608e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026092:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026096:	ea4e 050a 	orr.w	r5, lr, sl
 802609a:	950b      	str	r5, [sp, #44]	; 0x2c
 802609c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802609e:	2dff      	cmp	r5, #255	; 0xff
 80260a0:	d021      	beq.n	80260e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80260a2:	9d08      	ldr	r5, [sp, #32]
 80260a4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80260a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260aa:	fb05 fb0b 	mul.w	fp, r5, fp
 80260ae:	9d08      	ldr	r5, [sp, #32]
 80260b0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80260b4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260b6:	fb05 fa0e 	mul.w	sl, r5, lr
 80260ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80260be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80260c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80260ca:	44de      	add	lr, fp
 80260cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80260d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80260d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260e0:	ea4e 050a 	orr.w	r5, lr, sl
 80260e4:	9508      	str	r5, [sp, #32]
 80260e6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260e8:	2dff      	cmp	r5, #255	; 0xff
 80260ea:	d021      	beq.n	8026130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80260ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80260ee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80260f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260f4:	fb05 fb0b 	mul.w	fp, r5, fp
 80260f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80260fa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80260fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026100:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026104:	fb05 fa0a 	mul.w	sl, r5, sl
 8026108:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802610c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026110:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026114:	44de      	add	lr, fp
 8026116:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802611a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802611e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026122:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026126:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802612a:	ea4e 050a 	orr.w	r5, lr, sl
 802612e:	950c      	str	r5, [sp, #48]	; 0x30
 8026130:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026132:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026136:	9d08      	ldr	r5, [sp, #32]
 8026138:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802613c:	fb08 fc0c 	mul.w	ip, r8, ip
 8026140:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026144:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026148:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802614a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802614e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026152:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026154:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026158:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802615c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026160:	fb08 f80e 	mul.w	r8, r8, lr
 8026164:	fb01 8202 	mla	r2, r1, r2, r8
 8026168:	9908      	ldr	r1, [sp, #32]
 802616a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802616e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026170:	fb00 220a 	mla	r2, r0, sl, r2
 8026174:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8026178:	fb09 2900 	mla	r9, r9, r0, r2
 802617c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026180:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026184:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026188:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802618c:	ea4c 0c09 	orr.w	ip, ip, r9
 8026190:	2bff      	cmp	r3, #255	; 0xff
 8026192:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026196:	f040 8091 	bne.w	80262bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802619a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802619e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80261a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80261a6:	f022 0207 	bic.w	r2, r2, #7
 80261aa:	431a      	orrs	r2, r3
 80261ac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80261b0:	ea4c 0c02 	orr.w	ip, ip, r2
 80261b4:	f8a7 c000 	strh.w	ip, [r7]
 80261b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80261ba:	441c      	add	r4, r3
 80261bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80261be:	441e      	add	r6, r3
 80261c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80261c2:	3b01      	subs	r3, #1
 80261c4:	3702      	adds	r7, #2
 80261c6:	9317      	str	r3, [sp, #92]	; 0x5c
 80261c8:	e6c0      	b.n	8025f4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80261ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80261cc:	441c      	add	r4, r3
 80261ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80261d0:	441e      	add	r6, r3
 80261d2:	9b07      	ldr	r3, [sp, #28]
 80261d4:	3b01      	subs	r3, #1
 80261d6:	9307      	str	r3, [sp, #28]
 80261d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80261da:	3302      	adds	r3, #2
 80261dc:	930a      	str	r3, [sp, #40]	; 0x28
 80261de:	e695      	b.n	8025f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80261e0:	d024      	beq.n	802622c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80261e2:	9b07      	ldr	r3, [sp, #28]
 80261e4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80261e6:	3b01      	subs	r3, #1
 80261e8:	fb00 4003 	mla	r0, r0, r3, r4
 80261ec:	1400      	asrs	r0, r0, #16
 80261ee:	f53f aeaa 	bmi.w	8025f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261f2:	3901      	subs	r1, #1
 80261f4:	4288      	cmp	r0, r1
 80261f6:	f6bf aea6 	bge.w	8025f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261fa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80261fc:	fb01 6303 	mla	r3, r1, r3, r6
 8026200:	141b      	asrs	r3, r3, #16
 8026202:	f53f aea0 	bmi.w	8025f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026206:	3a01      	subs	r2, #1
 8026208:	4293      	cmp	r3, r2
 802620a:	f6bf ae9c 	bge.w	8025f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802620e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026212:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8026216:	f1bb 0f00 	cmp.w	fp, #0
 802621a:	f300 809a 	bgt.w	8026352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802621e:	9b07      	ldr	r3, [sp, #28]
 8026220:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026224:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026226:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802622a:	930a      	str	r3, [sp, #40]	; 0x28
 802622c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802622e:	2b00      	cmp	r3, #0
 8026230:	f340 81eb 	ble.w	802660a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026234:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026238:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802623c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026240:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026242:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026246:	ee31 1a05 	vadd.f32	s2, s2, s10
 802624a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802624e:	eef0 6a62 	vmov.f32	s13, s5
 8026252:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026256:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802625a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802625e:	ee16 4a90 	vmov	r4, s13
 8026262:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026266:	eef0 6a43 	vmov.f32	s13, s6
 802626a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802626e:	ee12 2a90 	vmov	r2, s5
 8026272:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026276:	fb92 f3f3 	sdiv	r3, r2, r3
 802627a:	ee13 2a10 	vmov	r2, s6
 802627e:	9327      	str	r3, [sp, #156]	; 0x9c
 8026280:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026282:	fb92 f3f3 	sdiv	r3, r2, r3
 8026286:	9328      	str	r3, [sp, #160]	; 0xa0
 8026288:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802628a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802628c:	3b01      	subs	r3, #1
 802628e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026292:	9316      	str	r3, [sp, #88]	; 0x58
 8026294:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026296:	bf08      	it	eq
 8026298:	4613      	moveq	r3, r2
 802629a:	ee16 6a90 	vmov	r6, s13
 802629e:	9307      	str	r3, [sp, #28]
 80262a0:	eeb0 3a67 	vmov.f32	s6, s15
 80262a4:	eef0 2a47 	vmov.f32	s5, s14
 80262a8:	e622      	b.n	8025ef0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80262aa:	2800      	cmp	r0, #0
 80262ac:	f43f ae92 	beq.w	8025fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80262b0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80262b4:	9308      	str	r3, [sp, #32]
 80262b6:	0e1b      	lsrs	r3, r3, #24
 80262b8:	9310      	str	r3, [sp, #64]	; 0x40
 80262ba:	e68b      	b.n	8025fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80262bc:	8839      	ldrh	r1, [r7, #0]
 80262be:	4dd4      	ldr	r5, [pc, #848]	; (8026610 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80262c0:	43db      	mvns	r3, r3
 80262c2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80262c6:	fa5f f883 	uxtb.w	r8, r3
 80262ca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80262ce:	fb0e fe08 	mul.w	lr, lr, r8
 80262d2:	10c8      	asrs	r0, r1, #3
 80262d4:	00cb      	lsls	r3, r1, #3
 80262d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80262da:	f10e 0101 	add.w	r1, lr, #1
 80262de:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80262e2:	fb00 f008 	mul.w	r0, r0, r8
 80262e6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80262ea:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80262ee:	f100 0e01 	add.w	lr, r0, #1
 80262f2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80262f6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80262fa:	b2db      	uxtb	r3, r3
 80262fc:	b2c9      	uxtb	r1, r1
 80262fe:	00d2      	lsls	r2, r2, #3
 8026300:	fb03 f308 	mul.w	r3, r3, r8
 8026304:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8026308:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802630c:	430a      	orrs	r2, r1
 802630e:	1c59      	adds	r1, r3, #1
 8026310:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026314:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8026318:	e748      	b.n	80261ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802631a:	f112 0801 	adds.w	r8, r2, #1
 802631e:	f53f af4b 	bmi.w	80261b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026322:	4543      	cmp	r3, r8
 8026324:	f6ff af48 	blt.w	80261b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026328:	f11c 0801 	adds.w	r8, ip, #1
 802632c:	f53f af44 	bmi.w	80261b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026330:	45c6      	cmp	lr, r8
 8026332:	f6ff af41 	blt.w	80261b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026336:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802633a:	fa0f f28e 	sxth.w	r2, lr
 802633e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8026342:	9200      	str	r2, [sp, #0]
 8026344:	b21b      	sxth	r3, r3
 8026346:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026348:	9819      	ldr	r0, [sp, #100]	; 0x64
 802634a:	4639      	mov	r1, r7
 802634c:	f7ff fc87 	bl	8025c5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8026350:	e732      	b.n	80261b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026352:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026354:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026356:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802635a:	1421      	asrs	r1, r4, #16
 802635c:	1433      	asrs	r3, r6, #16
 802635e:	fb07 1303 	mla	r3, r7, r3, r1
 8026362:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026364:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8026368:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802636c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026370:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026374:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026378:	2a00      	cmp	r2, #0
 802637a:	f000 8107 	beq.w	802658c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802637e:	684d      	ldr	r5, [r1, #4]
 8026380:	950d      	str	r5, [sp, #52]	; 0x34
 8026382:	0e2d      	lsrs	r5, r5, #24
 8026384:	9514      	str	r5, [sp, #80]	; 0x50
 8026386:	b178      	cbz	r0, 80263a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026388:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802638c:	3f01      	subs	r7, #1
 802638e:	00bf      	lsls	r7, r7, #2
 8026390:	3704      	adds	r7, #4
 8026392:	eb01 0e07 	add.w	lr, r1, r7
 8026396:	59c9      	ldr	r1, [r1, r7]
 8026398:	9109      	str	r1, [sp, #36]	; 0x24
 802639a:	0e09      	lsrs	r1, r1, #24
 802639c:	9111      	str	r1, [sp, #68]	; 0x44
 802639e:	f8de 1004 	ldr.w	r1, [lr, #4]
 80263a2:	910e      	str	r1, [sp, #56]	; 0x38
 80263a4:	0e09      	lsrs	r1, r1, #24
 80263a6:	9115      	str	r1, [sp, #84]	; 0x54
 80263a8:	b292      	uxth	r2, r2
 80263aa:	b280      	uxth	r0, r0
 80263ac:	fb02 f900 	mul.w	r9, r2, r0
 80263b0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80263b4:	0112      	lsls	r2, r2, #4
 80263b6:	eba2 0e09 	sub.w	lr, r2, r9
 80263ba:	b280      	uxth	r0, r0
 80263bc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80263c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80263c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80263c4:	fa1f fe8e 	uxth.w	lr, lr
 80263c8:	1a09      	subs	r1, r1, r0
 80263ca:	b289      	uxth	r1, r1
 80263cc:	fb0e f202 	mul.w	r2, lr, r2
 80263d0:	fb01 220c 	mla	r2, r1, ip, r2
 80263d4:	fb00 2205 	mla	r2, r0, r5, r2
 80263d8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80263da:	fb09 2205 	mla	r2, r9, r5, r2
 80263de:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80263e2:	2a00      	cmp	r2, #0
 80263e4:	f000 80c9 	beq.w	802657a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80263e8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80263ec:	d019      	beq.n	8026422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80263ee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80263f2:	fb0c fa0a 	mul.w	sl, ip, sl
 80263f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80263fa:	fb0c fc03 	mul.w	ip, ip, r3
 80263fe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026402:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026406:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802640a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802640e:	4453      	add	r3, sl
 8026410:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026414:	0a1b      	lsrs	r3, r3, #8
 8026416:	0a3f      	lsrs	r7, r7, #8
 8026418:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802641c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026420:	433b      	orrs	r3, r7
 8026422:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026424:	2dff      	cmp	r5, #255	; 0xff
 8026426:	d020      	beq.n	802646a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8026428:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802642a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802642e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026430:	436f      	muls	r7, r5
 8026432:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026434:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026438:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802643a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802643e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026442:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026446:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802644a:	44bc      	add	ip, r7
 802644c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026450:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026454:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026458:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802645c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026460:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026464:	ea4c 050a 	orr.w	r5, ip, sl
 8026468:	950d      	str	r5, [sp, #52]	; 0x34
 802646a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802646c:	2dff      	cmp	r5, #255	; 0xff
 802646e:	d020      	beq.n	80264b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8026470:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026472:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026476:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026478:	436f      	muls	r7, r5
 802647a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802647c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026480:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026482:	fb05 fa0c 	mul.w	sl, r5, ip
 8026486:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802648a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802648e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026492:	44bc      	add	ip, r7
 8026494:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026498:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802649c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80264a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264ac:	ea4c 050a 	orr.w	r5, ip, sl
 80264b0:	9509      	str	r5, [sp, #36]	; 0x24
 80264b2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264b4:	2dff      	cmp	r5, #255	; 0xff
 80264b6:	d020      	beq.n	80264fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80264b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264ba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80264be:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264c0:	436f      	muls	r7, r5
 80264c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80264c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80264ce:	fb05 fa0a 	mul.w	sl, r5, sl
 80264d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80264d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264da:	44bc      	add	ip, r7
 80264dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80264e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80264e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80264ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264f4:	ea4c 050a 	orr.w	r5, ip, sl
 80264f8:	950e      	str	r5, [sp, #56]	; 0x38
 80264fa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80264fc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026500:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026502:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8026506:	fb0e f707 	mul.w	r7, lr, r7
 802650a:	fb01 770c 	mla	r7, r1, ip, r7
 802650e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026512:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026514:	fb00 770c 	mla	r7, r0, ip, r7
 8026518:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802651c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802651e:	fb09 770c 	mla	r7, r9, ip, r7
 8026522:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026526:	fb0e fe0c 	mul.w	lr, lr, ip
 802652a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802652e:	fb01 e303 	mla	r3, r1, r3, lr
 8026532:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026534:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026538:	990e      	ldr	r1, [sp, #56]	; 0x38
 802653a:	fb00 330a 	mla	r3, r0, sl, r3
 802653e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8026542:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026546:	0a3f      	lsrs	r7, r7, #8
 8026548:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802654c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026550:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026554:	ea47 070c 	orr.w	r7, r7, ip
 8026558:	2aff      	cmp	r2, #255	; 0xff
 802655a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802655e:	d11e      	bne.n	802659e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026560:	097a      	lsrs	r2, r7, #5
 8026562:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8026566:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802656a:	f023 0307 	bic.w	r3, r3, #7
 802656e:	4313      	orrs	r3, r2
 8026570:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026574:	431f      	orrs	r7, r3
 8026576:	f8a8 7000 	strh.w	r7, [r8]
 802657a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802657c:	441c      	add	r4, r3
 802657e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026580:	f108 0802 	add.w	r8, r8, #2
 8026584:	441e      	add	r6, r3
 8026586:	f10b 3bff 	add.w	fp, fp, #4294967295
 802658a:	e644      	b.n	8026216 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802658c:	2800      	cmp	r0, #0
 802658e:	f43f af0b 	beq.w	80263a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026592:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026596:	9109      	str	r1, [sp, #36]	; 0x24
 8026598:	0e09      	lsrs	r1, r1, #24
 802659a:	9111      	str	r1, [sp, #68]	; 0x44
 802659c:	e704      	b.n	80263a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802659e:	f8b8 1000 	ldrh.w	r1, [r8]
 80265a2:	43d2      	mvns	r2, r2
 80265a4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80265a8:	fa5f fe82 	uxtb.w	lr, r2
 80265ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80265b0:	fb0c fc0e 	mul.w	ip, ip, lr
 80265b4:	10c8      	asrs	r0, r1, #3
 80265b6:	00ca      	lsls	r2, r1, #3
 80265b8:	f10c 0101 	add.w	r1, ip, #1
 80265bc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80265c0:	0c39      	lsrs	r1, r7, #16
 80265c2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80265c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80265ca:	4911      	ldr	r1, [pc, #68]	; (8026610 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80265cc:	fb00 f00e 	mul.w	r0, r0, lr
 80265d0:	fa5f fc8c 	uxtb.w	ip, ip
 80265d4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80265d8:	b2d2      	uxtb	r2, r2
 80265da:	1c41      	adds	r1, r0, #1
 80265dc:	fb02 f20e 	mul.w	r2, r2, lr
 80265e0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80265e4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80265e8:	1c51      	adds	r1, r2, #1
 80265ea:	00c0      	lsls	r0, r0, #3
 80265ec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80265f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265f4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80265f8:	ea4c 0c00 	orr.w	ip, ip, r0
 80265fc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026600:	ea47 0c0c 	orr.w	ip, r7, ip
 8026604:	f8a8 c000 	strh.w	ip, [r8]
 8026608:	e7b7      	b.n	802657a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802660a:	b01b      	add	sp, #108	; 0x6c
 802660c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026610:	fffff800 	.word	0xfffff800

08026614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8026614:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026618:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802661c:	2d00      	cmp	r5, #0
 802661e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026622:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026626:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802662a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802662e:	fb05 0e03 	mla	lr, r5, r3, r0
 8026632:	f2c0 808c 	blt.w	802674e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026636:	45a9      	cmp	r9, r5
 8026638:	f340 8089 	ble.w	802674e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802663c:	2800      	cmp	r0, #0
 802663e:	f2c0 8084 	blt.w	802674a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026642:	4580      	cmp	r8, r0
 8026644:	f340 8081 	ble.w	802674a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026648:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802664c:	f01e 0f01 	tst.w	lr, #1
 8026650:	5d16      	ldrb	r6, [r2, r4]
 8026652:	bf0c      	ite	eq
 8026654:	f006 060f 	andeq.w	r6, r6, #15
 8026658:	1136      	asrne	r6, r6, #4
 802665a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802665e:	b2f6      	uxtb	r6, r6
 8026660:	1c44      	adds	r4, r0, #1
 8026662:	d477      	bmi.n	8026754 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026664:	45a0      	cmp	r8, r4
 8026666:	dd75      	ble.n	8026754 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026668:	2f00      	cmp	r7, #0
 802666a:	d075      	beq.n	8026758 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802666c:	f10e 0a01 	add.w	sl, lr, #1
 8026670:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026674:	f01a 0f01 	tst.w	sl, #1
 8026678:	5d14      	ldrb	r4, [r2, r4]
 802667a:	bf0c      	ite	eq
 802667c:	f004 040f 	andeq.w	r4, r4, #15
 8026680:	1124      	asrne	r4, r4, #4
 8026682:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026686:	b2e4      	uxtb	r4, r4
 8026688:	3501      	adds	r5, #1
 802668a:	d469      	bmi.n	8026760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802668c:	45a9      	cmp	r9, r5
 802668e:	dd67      	ble.n	8026760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026690:	f1bc 0f00 	cmp.w	ip, #0
 8026694:	d067      	beq.n	8026766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026696:	2800      	cmp	r0, #0
 8026698:	db60      	blt.n	802675c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802669a:	4580      	cmp	r8, r0
 802669c:	dd5e      	ble.n	802675c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802669e:	eb03 090e 	add.w	r9, r3, lr
 80266a2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80266a6:	f019 0f01 	tst.w	r9, #1
 80266aa:	5d55      	ldrb	r5, [r2, r5]
 80266ac:	bf0c      	ite	eq
 80266ae:	f005 050f 	andeq.w	r5, r5, #15
 80266b2:	112d      	asrne	r5, r5, #4
 80266b4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80266b8:	b2ed      	uxtb	r5, r5
 80266ba:	3001      	adds	r0, #1
 80266bc:	d456      	bmi.n	802676c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80266be:	4580      	cmp	r8, r0
 80266c0:	dd54      	ble.n	802676c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80266c2:	2f00      	cmp	r7, #0
 80266c4:	d054      	beq.n	8026770 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80266c6:	3301      	adds	r3, #1
 80266c8:	449e      	add	lr, r3
 80266ca:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80266ce:	f01e 0f01 	tst.w	lr, #1
 80266d2:	5cd0      	ldrb	r0, [r2, r3]
 80266d4:	bf0c      	ite	eq
 80266d6:	f000 000f 	andeq.w	r0, r0, #15
 80266da:	1100      	asrne	r0, r0, #4
 80266dc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80266e0:	b2c3      	uxtb	r3, r0
 80266e2:	b2ba      	uxth	r2, r7
 80266e4:	fa1f fc8c 	uxth.w	ip, ip
 80266e8:	fb02 f00c 	mul.w	r0, r2, ip
 80266ec:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80266f0:	0112      	lsls	r2, r2, #4
 80266f2:	fa1f fc8c 	uxth.w	ip, ip
 80266f6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80266fa:	1a12      	subs	r2, r2, r0
 80266fc:	eba7 070c 	sub.w	r7, r7, ip
 8026700:	b292      	uxth	r2, r2
 8026702:	b2bf      	uxth	r7, r7
 8026704:	4362      	muls	r2, r4
 8026706:	fb06 2207 	mla	r2, r6, r7, r2
 802670a:	fb0c 2505 	mla	r5, ip, r5, r2
 802670e:	fb00 5303 	mla	r3, r0, r3, r5
 8026712:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026716:	b1b3      	cbz	r3, 8026746 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026718:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802671c:	435a      	muls	r2, r3
 802671e:	1c53      	adds	r3, r2, #1
 8026720:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026724:	4a2d      	ldr	r2, [pc, #180]	; (80267dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026726:	121b      	asrs	r3, r3, #8
 8026728:	6812      	ldr	r2, [r2, #0]
 802672a:	2bff      	cmp	r3, #255	; 0xff
 802672c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026730:	d120      	bne.n	8026774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026732:	4b2b      	ldr	r3, [pc, #172]	; (80267e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026734:	0950      	lsrs	r0, r2, #5
 8026736:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802673a:	4033      	ands	r3, r6
 802673c:	4318      	orrs	r0, r3
 802673e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026742:	4302      	orrs	r2, r0
 8026744:	800a      	strh	r2, [r1, #0]
 8026746:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802674a:	2600      	movs	r6, #0
 802674c:	e788      	b.n	8026660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802674e:	2400      	movs	r4, #0
 8026750:	4626      	mov	r6, r4
 8026752:	e799      	b.n	8026688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026754:	2400      	movs	r4, #0
 8026756:	e797      	b.n	8026688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026758:	463c      	mov	r4, r7
 802675a:	e795      	b.n	8026688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802675c:	2500      	movs	r5, #0
 802675e:	e7ac      	b.n	80266ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026760:	2300      	movs	r3, #0
 8026762:	461d      	mov	r5, r3
 8026764:	e7bd      	b.n	80266e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026766:	4663      	mov	r3, ip
 8026768:	4665      	mov	r5, ip
 802676a:	e7ba      	b.n	80266e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802676c:	2300      	movs	r3, #0
 802676e:	e7b8      	b.n	80266e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026770:	463b      	mov	r3, r7
 8026772:	e7b6      	b.n	80266e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026774:	880d      	ldrh	r5, [r1, #0]
 8026776:	b29f      	uxth	r7, r3
 8026778:	122c      	asrs	r4, r5, #8
 802677a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802677e:	43db      	mvns	r3, r3
 8026780:	b2db      	uxtb	r3, r3
 8026782:	fb10 f007 	smulbb	r0, r0, r7
 8026786:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802678a:	fb04 0403 	mla	r4, r4, r3, r0
 802678e:	b2f6      	uxtb	r6, r6
 8026790:	10e8      	asrs	r0, r5, #3
 8026792:	b2d2      	uxtb	r2, r2
 8026794:	00ed      	lsls	r5, r5, #3
 8026796:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802679a:	fb12 f207 	smulbb	r2, r2, r7
 802679e:	fb16 f607 	smulbb	r6, r6, r7
 80267a2:	b2ed      	uxtb	r5, r5
 80267a4:	b2a4      	uxth	r4, r4
 80267a6:	fb00 6603 	mla	r6, r0, r3, r6
 80267aa:	fb05 2303 	mla	r3, r5, r3, r2
 80267ae:	b29a      	uxth	r2, r3
 80267b0:	1c63      	adds	r3, r4, #1
 80267b2:	b2b0      	uxth	r0, r6
 80267b4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80267b8:	1c53      	adds	r3, r2, #1
 80267ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80267be:	1c42      	adds	r2, r0, #1
 80267c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80267c4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80267c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80267cc:	0940      	lsrs	r0, r0, #5
 80267ce:	4323      	orrs	r3, r4
 80267d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80267d4:	4303      	orrs	r3, r0
 80267d6:	800b      	strh	r3, [r1, #0]
 80267d8:	e7b5      	b.n	8026746 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80267da:	bf00      	nop
 80267dc:	20013844 	.word	0x20013844
 80267e0:	00fff800 	.word	0x00fff800

080267e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80267e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267e8:	b097      	sub	sp, #92	; 0x5c
 80267ea:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80267ee:	9214      	str	r2, [sp, #80]	; 0x50
 80267f0:	9309      	str	r3, [sp, #36]	; 0x24
 80267f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80267f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80267f8:	910d      	str	r1, [sp, #52]	; 0x34
 80267fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80267fc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8026800:	9015      	str	r0, [sp, #84]	; 0x54
 8026802:	6850      	ldr	r0, [r2, #4]
 8026804:	6812      	ldr	r2, [r2, #0]
 8026806:	fb00 1303 	mla	r3, r0, r3, r1
 802680a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802680e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026810:	689b      	ldr	r3, [r3, #8]
 8026812:	3301      	adds	r3, #1
 8026814:	f023 0301 	bic.w	r3, r3, #1
 8026818:	930a      	str	r3, [sp, #40]	; 0x28
 802681a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802681c:	681f      	ldr	r7, [r3, #0]
 802681e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026820:	2b00      	cmp	r3, #0
 8026822:	dc03      	bgt.n	802682c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026824:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026826:	2b00      	cmp	r3, #0
 8026828:	f340 8287 	ble.w	8026d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802682c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802682e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026832:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026836:	1e48      	subs	r0, r1, #1
 8026838:	f102 3cff 	add.w	ip, r2, #4294967295
 802683c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802683e:	2b00      	cmp	r3, #0
 8026840:	f340 80c4 	ble.w	80269cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026844:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026848:	ea4f 4326 	mov.w	r3, r6, asr #16
 802684c:	d406      	bmi.n	802685c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802684e:	4586      	cmp	lr, r0
 8026850:	da04      	bge.n	802685c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026852:	2b00      	cmp	r3, #0
 8026854:	db02      	blt.n	802685c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026856:	4563      	cmp	r3, ip
 8026858:	f2c0 80b9 	blt.w	80269ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802685c:	f11e 0e01 	adds.w	lr, lr, #1
 8026860:	f100 80aa 	bmi.w	80269b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026864:	4571      	cmp	r1, lr
 8026866:	f2c0 80a7 	blt.w	80269b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802686a:	3301      	adds	r3, #1
 802686c:	f100 80a4 	bmi.w	80269b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026870:	429a      	cmp	r2, r3
 8026872:	f2c0 80a1 	blt.w	80269b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026876:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026878:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802687c:	930e      	str	r3, [sp, #56]	; 0x38
 802687e:	46c8      	mov	r8, r9
 8026880:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026882:	2b00      	cmp	r3, #0
 8026884:	f340 80c3 	ble.w	8026a0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026888:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802688a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802688e:	1423      	asrs	r3, r4, #16
 8026890:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026894:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026898:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802689c:	f100 814d 	bmi.w	8026b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80268a0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80268a4:	455b      	cmp	r3, fp
 80268a6:	f280 8148 	bge.w	8026b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80268aa:	2800      	cmp	r0, #0
 80268ac:	f2c0 8145 	blt.w	8026b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80268b0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80268b4:	4558      	cmp	r0, fp
 80268b6:	f280 8140 	bge.w	8026b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80268ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80268bc:	fb00 3305 	mla	r3, r0, r5, r3
 80268c0:	0858      	lsrs	r0, r3, #1
 80268c2:	07dd      	lsls	r5, r3, #31
 80268c4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80268c8:	bf54      	ite	pl
 80268ca:	f00c 0c0f 	andpl.w	ip, ip, #15
 80268ce:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80268d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80268d6:	fa5f fc8c 	uxtb.w	ip, ip
 80268da:	2a00      	cmp	r2, #0
 80268dc:	f000 80db 	beq.w	8026a96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80268e0:	1c58      	adds	r0, r3, #1
 80268e2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80268e6:	07c0      	lsls	r0, r0, #31
 80268e8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80268ec:	bf54      	ite	pl
 80268ee:	f00e 0e0f 	andpl.w	lr, lr, #15
 80268f2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80268f6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80268fa:	fa5f f08e 	uxtb.w	r0, lr
 80268fe:	9010      	str	r0, [sp, #64]	; 0x40
 8026900:	b1c9      	cbz	r1, 8026936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026902:	4453      	add	r3, sl
 8026904:	0858      	lsrs	r0, r3, #1
 8026906:	07dd      	lsls	r5, r3, #31
 8026908:	5c38      	ldrb	r0, [r7, r0]
 802690a:	bf54      	ite	pl
 802690c:	f000 000f 	andpl.w	r0, r0, #15
 8026910:	1100      	asrmi	r0, r0, #4
 8026912:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026916:	3301      	adds	r3, #1
 8026918:	b2c0      	uxtb	r0, r0
 802691a:	900b      	str	r0, [sp, #44]	; 0x2c
 802691c:	0858      	lsrs	r0, r3, #1
 802691e:	07dd      	lsls	r5, r3, #31
 8026920:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026924:	bf54      	ite	pl
 8026926:	f00e 030f 	andpl.w	r3, lr, #15
 802692a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802692e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026932:	b2db      	uxtb	r3, r3
 8026934:	9311      	str	r3, [sp, #68]	; 0x44
 8026936:	b292      	uxth	r2, r2
 8026938:	b289      	uxth	r1, r1
 802693a:	fb02 f301 	mul.w	r3, r2, r1
 802693e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026942:	0112      	lsls	r2, r2, #4
 8026944:	b289      	uxth	r1, r1
 8026946:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802694a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802694c:	1ad2      	subs	r2, r2, r3
 802694e:	1a40      	subs	r0, r0, r1
 8026950:	b292      	uxth	r2, r2
 8026952:	436a      	muls	r2, r5
 8026954:	b280      	uxth	r0, r0
 8026956:	fb0c 2c00 	mla	ip, ip, r0, r2
 802695a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802695c:	fb01 c102 	mla	r1, r1, r2, ip
 8026960:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026962:	fb03 1302 	mla	r3, r3, r2, r1
 8026966:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802696a:	b1db      	cbz	r3, 80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802696c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802696e:	4353      	muls	r3, r2
 8026970:	1c5a      	adds	r2, r3, #1
 8026972:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026976:	4ac6      	ldr	r2, [pc, #792]	; (8026c90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026978:	121b      	asrs	r3, r3, #8
 802697a:	6812      	ldr	r2, [r2, #0]
 802697c:	2bff      	cmp	r3, #255	; 0xff
 802697e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026982:	f040 8099 	bne.w	8026ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026986:	0953      	lsrs	r3, r2, #5
 8026988:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802698c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026990:	f02c 0c07 	bic.w	ip, ip, #7
 8026994:	ea43 0c0c 	orr.w	ip, r3, ip
 8026998:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802699c:	ea4c 0202 	orr.w	r2, ip, r2
 80269a0:	f8a8 2000 	strh.w	r2, [r8]
 80269a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80269a6:	441c      	add	r4, r3
 80269a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269aa:	441e      	add	r6, r3
 80269ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80269ae:	3b01      	subs	r3, #1
 80269b0:	f108 0802 	add.w	r8, r8, #2
 80269b4:	930e      	str	r3, [sp, #56]	; 0x38
 80269b6:	e763      	b.n	8026880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80269b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80269ba:	441c      	add	r4, r3
 80269bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269be:	441e      	add	r6, r3
 80269c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269c2:	3b01      	subs	r3, #1
 80269c4:	9309      	str	r3, [sp, #36]	; 0x24
 80269c6:	f109 0902 	add.w	r9, r9, #2
 80269ca:	e737      	b.n	802683c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80269cc:	d024      	beq.n	8026a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80269ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269d0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80269d2:	3b01      	subs	r3, #1
 80269d4:	fb00 4003 	mla	r0, r0, r3, r4
 80269d8:	1400      	asrs	r0, r0, #16
 80269da:	f53f af4c 	bmi.w	8026876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269de:	3901      	subs	r1, #1
 80269e0:	4288      	cmp	r0, r1
 80269e2:	f6bf af48 	bge.w	8026876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269e6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80269e8:	fb01 6303 	mla	r3, r1, r3, r6
 80269ec:	141b      	asrs	r3, r3, #16
 80269ee:	f53f af42 	bmi.w	8026876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269f2:	3a01      	subs	r2, #1
 80269f4:	4293      	cmp	r3, r2
 80269f6:	f6bf af3e 	bge.w	8026876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80269fe:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026a02:	930e      	str	r3, [sp, #56]	; 0x38
 8026a04:	46c8      	mov	r8, r9
 8026a06:	f1bb 0f00 	cmp.w	fp, #0
 8026a0a:	f300 80b7 	bgt.w	8026b7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8026a0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a10:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026a14:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026a18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a1a:	2b00      	cmp	r3, #0
 8026a1c:	f340 818d 	ble.w	8026d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026a20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026a24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026a2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026a3a:	eef0 6a62 	vmov.f32	s13, s5
 8026a3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026a4a:	ee16 4a90 	vmov	r4, s13
 8026a4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026a52:	eef0 6a43 	vmov.f32	s13, s6
 8026a56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026a5a:	ee12 2a90 	vmov	r2, s5
 8026a5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026a62:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a66:	ee13 2a10 	vmov	r2, s6
 8026a6a:	9323      	str	r3, [sp, #140]	; 0x8c
 8026a6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a72:	9324      	str	r3, [sp, #144]	; 0x90
 8026a74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a76:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026a78:	3b01      	subs	r3, #1
 8026a7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a7e:	930d      	str	r3, [sp, #52]	; 0x34
 8026a80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a82:	bf08      	it	eq
 8026a84:	4613      	moveq	r3, r2
 8026a86:	ee16 6a90 	vmov	r6, s13
 8026a8a:	9309      	str	r3, [sp, #36]	; 0x24
 8026a8c:	eeb0 3a67 	vmov.f32	s6, s15
 8026a90:	eef0 2a47 	vmov.f32	s5, s14
 8026a94:	e6c3      	b.n	802681e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026a96:	2900      	cmp	r1, #0
 8026a98:	f43f af4d 	beq.w	8026936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026a9c:	eb0a 0003 	add.w	r0, sl, r3
 8026aa0:	0843      	lsrs	r3, r0, #1
 8026aa2:	07c0      	lsls	r0, r0, #31
 8026aa4:	5cfb      	ldrb	r3, [r7, r3]
 8026aa6:	bf54      	ite	pl
 8026aa8:	f003 030f 	andpl.w	r3, r3, #15
 8026aac:	111b      	asrmi	r3, r3, #4
 8026aae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026ab2:	b2db      	uxtb	r3, r3
 8026ab4:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ab6:	e73e      	b.n	8026936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026ab8:	f8b8 e000 	ldrh.w	lr, [r8]
 8026abc:	fa1f fb83 	uxth.w	fp, r3
 8026ac0:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026ac4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026ac8:	43db      	mvns	r3, r3
 8026aca:	b2db      	uxtb	r3, r3
 8026acc:	fb11 f10b 	smulbb	r1, r1, fp
 8026ad0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ad4:	fb00 1003 	mla	r0, r0, r3, r1
 8026ad8:	fa5f fc8c 	uxtb.w	ip, ip
 8026adc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026ae0:	b2d2      	uxtb	r2, r2
 8026ae2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026ae6:	b280      	uxth	r0, r0
 8026ae8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026aec:	fb1c fc0b 	smulbb	ip, ip, fp
 8026af0:	fa5f fe8e 	uxtb.w	lr, lr
 8026af4:	fb12 fb0b 	smulbb	fp, r2, fp
 8026af8:	fb01 cc03 	mla	ip, r1, r3, ip
 8026afc:	fb0e bb03 	mla	fp, lr, r3, fp
 8026b00:	1c43      	adds	r3, r0, #1
 8026b02:	fa1f fc8c 	uxth.w	ip, ip
 8026b06:	fa1f fb8b 	uxth.w	fp, fp
 8026b0a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026b0e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026b12:	f10c 0101 	add.w	r1, ip, #1
 8026b16:	f10b 0001 	add.w	r0, fp, #1
 8026b1a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026b1e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026b22:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026b26:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026b2a:	4318      	orrs	r0, r3
 8026b2c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b30:	ea40 000c 	orr.w	r0, r0, ip
 8026b34:	f8a8 0000 	strh.w	r0, [r8]
 8026b38:	e734      	b.n	80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b3a:	f113 0b01 	adds.w	fp, r3, #1
 8026b3e:	f53f af31 	bmi.w	80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b42:	45dc      	cmp	ip, fp
 8026b44:	f6ff af2e 	blt.w	80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b48:	f110 0b01 	adds.w	fp, r0, #1
 8026b4c:	f53f af2a 	bmi.w	80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b50:	45de      	cmp	lr, fp
 8026b52:	f6ff af27 	blt.w	80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b56:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026b58:	9302      	str	r3, [sp, #8]
 8026b5a:	fa0f f38e 	sxth.w	r3, lr
 8026b5e:	9301      	str	r3, [sp, #4]
 8026b60:	fa0f f38c 	sxth.w	r3, ip
 8026b64:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026b68:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026b6c:	9300      	str	r3, [sp, #0]
 8026b6e:	463a      	mov	r2, r7
 8026b70:	4653      	mov	r3, sl
 8026b72:	4641      	mov	r1, r8
 8026b74:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026b76:	f7ff fd4d 	bl	8026614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026b7a:	e713      	b.n	80269a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b7c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026b7e:	1422      	asrs	r2, r4, #16
 8026b80:	1433      	asrs	r3, r6, #16
 8026b82:	fb05 2303 	mla	r3, r5, r3, r2
 8026b86:	085a      	lsrs	r2, r3, #1
 8026b88:	07dd      	lsls	r5, r3, #31
 8026b8a:	5cba      	ldrb	r2, [r7, r2]
 8026b8c:	bf54      	ite	pl
 8026b8e:	f002 020f 	andpl.w	r2, r2, #15
 8026b92:	1112      	asrmi	r2, r2, #4
 8026b94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026b98:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026b9c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026ba0:	b2d2      	uxtb	r2, r2
 8026ba2:	2900      	cmp	r1, #0
 8026ba4:	d076      	beq.n	8026c94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026ba6:	f103 0e01 	add.w	lr, r3, #1
 8026baa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026bae:	f01e 0f01 	tst.w	lr, #1
 8026bb2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026bb6:	bf0c      	ite	eq
 8026bb8:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026bbc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026bc0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bc4:	fa5f f58c 	uxtb.w	r5, ip
 8026bc8:	9512      	str	r5, [sp, #72]	; 0x48
 8026bca:	b300      	cbz	r0, 8026c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026bcc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026bce:	442b      	add	r3, r5
 8026bd0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026bd4:	07dd      	lsls	r5, r3, #31
 8026bd6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026bda:	bf54      	ite	pl
 8026bdc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026be0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026be4:	3301      	adds	r3, #1
 8026be6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bea:	fa5f f58c 	uxtb.w	r5, ip
 8026bee:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026bf2:	950c      	str	r5, [sp, #48]	; 0x30
 8026bf4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026bf8:	07dd      	lsls	r5, r3, #31
 8026bfa:	bf54      	ite	pl
 8026bfc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026c00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026c04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026c08:	fa5f f38c 	uxtb.w	r3, ip
 8026c0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8026c0e:	b289      	uxth	r1, r1
 8026c10:	b280      	uxth	r0, r0
 8026c12:	fb01 f300 	mul.w	r3, r1, r0
 8026c16:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026c1a:	0109      	lsls	r1, r1, #4
 8026c1c:	b280      	uxth	r0, r0
 8026c1e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026c22:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026c24:	1ac9      	subs	r1, r1, r3
 8026c26:	ebac 0c00 	sub.w	ip, ip, r0
 8026c2a:	b289      	uxth	r1, r1
 8026c2c:	4369      	muls	r1, r5
 8026c2e:	fa1f fc8c 	uxth.w	ip, ip
 8026c32:	fb02 120c 	mla	r2, r2, ip, r1
 8026c36:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026c38:	fb00 2001 	mla	r0, r0, r1, r2
 8026c3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026c3e:	fb03 0302 	mla	r3, r3, r2, r0
 8026c42:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026c46:	b1d3      	cbz	r3, 8026c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026c48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026c4a:	4353      	muls	r3, r2
 8026c4c:	1c5a      	adds	r2, r3, #1
 8026c4e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026c52:	4a0f      	ldr	r2, [pc, #60]	; (8026c90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026c54:	121b      	asrs	r3, r3, #8
 8026c56:	6812      	ldr	r2, [r2, #0]
 8026c58:	2bff      	cmp	r3, #255	; 0xff
 8026c5a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026c5e:	d12d      	bne.n	8026cbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026c60:	0953      	lsrs	r3, r2, #5
 8026c62:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026c66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c6a:	f02c 0c07 	bic.w	ip, ip, #7
 8026c6e:	ea43 0c0c 	orr.w	ip, r3, ip
 8026c72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026c76:	ea4c 0202 	orr.w	r2, ip, r2
 8026c7a:	f8a8 2000 	strh.w	r2, [r8]
 8026c7e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026c80:	441c      	add	r4, r3
 8026c82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026c84:	f108 0802 	add.w	r8, r8, #2
 8026c88:	441e      	add	r6, r3
 8026c8a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026c8e:	e6ba      	b.n	8026a06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026c90:	20013844 	.word	0x20013844
 8026c94:	2800      	cmp	r0, #0
 8026c96:	d0ba      	beq.n	8026c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026c98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c9a:	442b      	add	r3, r5
 8026c9c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026ca0:	07db      	lsls	r3, r3, #31
 8026ca2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026ca6:	bf54      	ite	pl
 8026ca8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026cac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026cb0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026cb4:	fa5f f38c 	uxtb.w	r3, ip
 8026cb8:	930c      	str	r3, [sp, #48]	; 0x30
 8026cba:	e7a8      	b.n	8026c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026cbc:	f8b8 e000 	ldrh.w	lr, [r8]
 8026cc0:	fa1f fa83 	uxth.w	sl, r3
 8026cc4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026cc8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026ccc:	43db      	mvns	r3, r3
 8026cce:	b2db      	uxtb	r3, r3
 8026cd0:	fb11 f10a 	smulbb	r1, r1, sl
 8026cd4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026cd8:	fb00 1003 	mla	r0, r0, r3, r1
 8026cdc:	b2d2      	uxtb	r2, r2
 8026cde:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026ce2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026ce6:	fa5f fe8e 	uxtb.w	lr, lr
 8026cea:	fb12 f20a 	smulbb	r2, r2, sl
 8026cee:	fb0e 2203 	mla	r2, lr, r3, r2
 8026cf2:	fa5f fc8c 	uxtb.w	ip, ip
 8026cf6:	b280      	uxth	r0, r0
 8026cf8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026cfc:	b292      	uxth	r2, r2
 8026cfe:	fb1c fc0a 	smulbb	ip, ip, sl
 8026d02:	fb01 cc03 	mla	ip, r1, r3, ip
 8026d06:	1c43      	adds	r3, r0, #1
 8026d08:	1c51      	adds	r1, r2, #1
 8026d0a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026d0e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026d12:	fa1f fc8c 	uxth.w	ip, ip
 8026d16:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026d1a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026d1e:	4308      	orrs	r0, r1
 8026d20:	f10c 0101 	add.w	r1, ip, #1
 8026d24:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026d28:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026d2c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026d30:	ea40 000c 	orr.w	r0, r0, ip
 8026d34:	f8a8 0000 	strh.w	r0, [r8]
 8026d38:	e7a1      	b.n	8026c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026d3a:	b017      	add	sp, #92	; 0x5c
 8026d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026d40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026d40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026d44:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026d48:	2d00      	cmp	r5, #0
 8026d4a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026d4e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026d52:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026d56:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026d5a:	fb05 0e03 	mla	lr, r5, r3, r0
 8026d5e:	f2c0 80b0 	blt.w	8026ec2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026d62:	45a9      	cmp	r9, r5
 8026d64:	f340 80ad 	ble.w	8026ec2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026d68:	2800      	cmp	r0, #0
 8026d6a:	f2c0 80a8 	blt.w	8026ebe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026d6e:	4580      	cmp	r8, r0
 8026d70:	f340 80a5 	ble.w	8026ebe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026d74:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026d78:	f01e 0f01 	tst.w	lr, #1
 8026d7c:	5d16      	ldrb	r6, [r2, r4]
 8026d7e:	bf0c      	ite	eq
 8026d80:	f006 060f 	andeq.w	r6, r6, #15
 8026d84:	1136      	asrne	r6, r6, #4
 8026d86:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026d8a:	b2f6      	uxtb	r6, r6
 8026d8c:	1c44      	adds	r4, r0, #1
 8026d8e:	f100 809b 	bmi.w	8026ec8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026d92:	45a0      	cmp	r8, r4
 8026d94:	f340 8098 	ble.w	8026ec8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026d98:	2f00      	cmp	r7, #0
 8026d9a:	f000 8097 	beq.w	8026ecc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8026d9e:	f10e 0a01 	add.w	sl, lr, #1
 8026da2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026da6:	f01a 0f01 	tst.w	sl, #1
 8026daa:	5d14      	ldrb	r4, [r2, r4]
 8026dac:	bf0c      	ite	eq
 8026dae:	f004 040f 	andeq.w	r4, r4, #15
 8026db2:	1124      	asrne	r4, r4, #4
 8026db4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026db8:	b2e4      	uxtb	r4, r4
 8026dba:	3501      	adds	r5, #1
 8026dbc:	f100 808a 	bmi.w	8026ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026dc0:	45a9      	cmp	r9, r5
 8026dc2:	f340 8087 	ble.w	8026ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026dc6:	f1bc 0f00 	cmp.w	ip, #0
 8026dca:	f000 8086 	beq.w	8026eda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8026dce:	2800      	cmp	r0, #0
 8026dd0:	db7e      	blt.n	8026ed0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026dd2:	4580      	cmp	r8, r0
 8026dd4:	dd7c      	ble.n	8026ed0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026dd6:	eb03 090e 	add.w	r9, r3, lr
 8026dda:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026dde:	f019 0f01 	tst.w	r9, #1
 8026de2:	5d55      	ldrb	r5, [r2, r5]
 8026de4:	bf0c      	ite	eq
 8026de6:	f005 050f 	andeq.w	r5, r5, #15
 8026dea:	112d      	asrne	r5, r5, #4
 8026dec:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026df0:	b2ed      	uxtb	r5, r5
 8026df2:	3001      	adds	r0, #1
 8026df4:	d474      	bmi.n	8026ee0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026df6:	4580      	cmp	r8, r0
 8026df8:	dd72      	ble.n	8026ee0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026dfa:	2f00      	cmp	r7, #0
 8026dfc:	d072      	beq.n	8026ee4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8026dfe:	3301      	adds	r3, #1
 8026e00:	449e      	add	lr, r3
 8026e02:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026e06:	f01e 0f01 	tst.w	lr, #1
 8026e0a:	5cd0      	ldrb	r0, [r2, r3]
 8026e0c:	bf0c      	ite	eq
 8026e0e:	f000 000f 	andeq.w	r0, r0, #15
 8026e12:	1100      	asrne	r0, r0, #4
 8026e14:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026e18:	b2c3      	uxtb	r3, r0
 8026e1a:	b2ba      	uxth	r2, r7
 8026e1c:	fa1f fc8c 	uxth.w	ip, ip
 8026e20:	fb02 f00c 	mul.w	r0, r2, ip
 8026e24:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026e28:	0112      	lsls	r2, r2, #4
 8026e2a:	fa1f fc8c 	uxth.w	ip, ip
 8026e2e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026e32:	1a12      	subs	r2, r2, r0
 8026e34:	eba7 070c 	sub.w	r7, r7, ip
 8026e38:	b292      	uxth	r2, r2
 8026e3a:	b2bf      	uxth	r7, r7
 8026e3c:	4362      	muls	r2, r4
 8026e3e:	fb06 2207 	mla	r2, r6, r7, r2
 8026e42:	fb0c 2505 	mla	r5, ip, r5, r2
 8026e46:	fb00 5303 	mla	r3, r0, r3, r5
 8026e4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026e4e:	b3a3      	cbz	r3, 8026eba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026e50:	4a25      	ldr	r2, [pc, #148]	; (8026ee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026e52:	880e      	ldrh	r6, [r1, #0]
 8026e54:	6815      	ldr	r5, [r2, #0]
 8026e56:	1234      	asrs	r4, r6, #8
 8026e58:	b29a      	uxth	r2, r3
 8026e5a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026e5e:	43db      	mvns	r3, r3
 8026e60:	b2db      	uxtb	r3, r3
 8026e62:	fb10 f002 	smulbb	r0, r0, r2
 8026e66:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026e6a:	fb04 0403 	mla	r4, r4, r3, r0
 8026e6e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026e72:	10f0      	asrs	r0, r6, #3
 8026e74:	b2ed      	uxtb	r5, r5
 8026e76:	00f6      	lsls	r6, r6, #3
 8026e78:	fb17 f702 	smulbb	r7, r7, r2
 8026e7c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026e80:	fb15 f202 	smulbb	r2, r5, r2
 8026e84:	b2f6      	uxtb	r6, r6
 8026e86:	b2a4      	uxth	r4, r4
 8026e88:	fb00 7003 	mla	r0, r0, r3, r7
 8026e8c:	fb06 2303 	mla	r3, r6, r3, r2
 8026e90:	b29a      	uxth	r2, r3
 8026e92:	1c63      	adds	r3, r4, #1
 8026e94:	b280      	uxth	r0, r0
 8026e96:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026e9a:	1c53      	adds	r3, r2, #1
 8026e9c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026ea0:	1c42      	adds	r2, r0, #1
 8026ea2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026ea6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026eaa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026eae:	0940      	lsrs	r0, r0, #5
 8026eb0:	4323      	orrs	r3, r4
 8026eb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026eb6:	4303      	orrs	r3, r0
 8026eb8:	800b      	strh	r3, [r1, #0]
 8026eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026ebe:	2600      	movs	r6, #0
 8026ec0:	e764      	b.n	8026d8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8026ec2:	2400      	movs	r4, #0
 8026ec4:	4626      	mov	r6, r4
 8026ec6:	e778      	b.n	8026dba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ec8:	2400      	movs	r4, #0
 8026eca:	e776      	b.n	8026dba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ecc:	463c      	mov	r4, r7
 8026ece:	e774      	b.n	8026dba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ed0:	2500      	movs	r5, #0
 8026ed2:	e78e      	b.n	8026df2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026ed4:	2300      	movs	r3, #0
 8026ed6:	461d      	mov	r5, r3
 8026ed8:	e79f      	b.n	8026e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026eda:	4663      	mov	r3, ip
 8026edc:	4665      	mov	r5, ip
 8026ede:	e79c      	b.n	8026e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ee0:	2300      	movs	r3, #0
 8026ee2:	e79a      	b.n	8026e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ee4:	463b      	mov	r3, r7
 8026ee6:	e798      	b.n	8026e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ee8:	20013844 	.word	0x20013844

08026eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ef0:	b093      	sub	sp, #76	; 0x4c
 8026ef2:	461d      	mov	r5, r3
 8026ef4:	920c      	str	r2, [sp, #48]	; 0x30
 8026ef6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026ef8:	9107      	str	r1, [sp, #28]
 8026efa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026efe:	9011      	str	r0, [sp, #68]	; 0x44
 8026f00:	6850      	ldr	r0, [r2, #4]
 8026f02:	6812      	ldr	r2, [r2, #0]
 8026f04:	fb00 1303 	mla	r3, r0, r3, r1
 8026f08:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026f0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f0e:	689b      	ldr	r3, [r3, #8]
 8026f10:	3301      	adds	r3, #1
 8026f12:	f023 0301 	bic.w	r3, r3, #1
 8026f16:	9306      	str	r3, [sp, #24]
 8026f18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f1a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026f1e:	681f      	ldr	r7, [r3, #0]
 8026f20:	9b07      	ldr	r3, [sp, #28]
 8026f22:	2b00      	cmp	r3, #0
 8026f24:	dc03      	bgt.n	8026f2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026f26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026f28:	2b00      	cmp	r3, #0
 8026f2a:	f340 8267 	ble.w	80273fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026f2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f30:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026f34:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026f38:	1e48      	subs	r0, r1, #1
 8026f3a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026f3e:	2d00      	cmp	r5, #0
 8026f40:	f340 80b8 	ble.w	80270b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026f44:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026f48:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026f4c:	d406      	bmi.n	8026f5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f4e:	4586      	cmp	lr, r0
 8026f50:	da04      	bge.n	8026f5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f52:	2b00      	cmp	r3, #0
 8026f54:	db02      	blt.n	8026f5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f56:	4563      	cmp	r3, ip
 8026f58:	f2c0 80ad 	blt.w	80270b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026f5c:	f11e 0e01 	adds.w	lr, lr, #1
 8026f60:	f100 80a0 	bmi.w	80270a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f64:	4571      	cmp	r1, lr
 8026f66:	f2c0 809d 	blt.w	80270a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f6a:	3301      	adds	r3, #1
 8026f6c:	f100 809a 	bmi.w	80270a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f70:	429a      	cmp	r2, r3
 8026f72:	f2c0 8097 	blt.w	80270a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f76:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8026f7a:	9509      	str	r5, [sp, #36]	; 0x24
 8026f7c:	46c8      	mov	r8, r9
 8026f7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f80:	2b00      	cmp	r3, #0
 8026f82:	f340 80b6 	ble.w	80270f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026f86:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8026f8a:	9308      	str	r3, [sp, #32]
 8026f8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f8e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026f92:	1423      	asrs	r3, r4, #16
 8026f94:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026f98:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026f9c:	f100 813e 	bmi.w	802721c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026fa0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026fa4:	455b      	cmp	r3, fp
 8026fa6:	f280 8139 	bge.w	802721c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026faa:	2800      	cmp	r0, #0
 8026fac:	f2c0 8136 	blt.w	802721c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026fb0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026fb4:	4558      	cmp	r0, fp
 8026fb6:	f280 8131 	bge.w	802721c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026fba:	9a06      	ldr	r2, [sp, #24]
 8026fbc:	fb00 3302 	mla	r3, r0, r2, r3
 8026fc0:	0858      	lsrs	r0, r3, #1
 8026fc2:	07da      	lsls	r2, r3, #31
 8026fc4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026fc8:	9a08      	ldr	r2, [sp, #32]
 8026fca:	bf54      	ite	pl
 8026fcc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026fd0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026fd4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026fd8:	fa5f fc8c 	uxtb.w	ip, ip
 8026fdc:	2a00      	cmp	r2, #0
 8026fde:	f000 80cb 	beq.w	8027178 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026fe2:	1c58      	adds	r0, r3, #1
 8026fe4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026fe8:	07c0      	lsls	r0, r0, #31
 8026fea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026fee:	bf54      	ite	pl
 8026ff0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026ff4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026ff8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026ffc:	fa5f fe8e 	uxtb.w	lr, lr
 8027000:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8027004:	b1b9      	cbz	r1, 8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027006:	4453      	add	r3, sl
 8027008:	0858      	lsrs	r0, r3, #1
 802700a:	07da      	lsls	r2, r3, #31
 802700c:	5c38      	ldrb	r0, [r7, r0]
 802700e:	bf54      	ite	pl
 8027010:	f000 000f 	andpl.w	r0, r0, #15
 8027014:	1100      	asrmi	r0, r0, #4
 8027016:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802701a:	b2c0      	uxtb	r0, r0
 802701c:	900a      	str	r0, [sp, #40]	; 0x28
 802701e:	1c58      	adds	r0, r3, #1
 8027020:	0843      	lsrs	r3, r0, #1
 8027022:	07c2      	lsls	r2, r0, #31
 8027024:	5cfb      	ldrb	r3, [r7, r3]
 8027026:	bf54      	ite	pl
 8027028:	f003 030f 	andpl.w	r3, r3, #15
 802702c:	111b      	asrmi	r3, r3, #4
 802702e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027032:	b2db      	uxtb	r3, r3
 8027034:	930e      	str	r3, [sp, #56]	; 0x38
 8027036:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802703a:	b289      	uxth	r1, r1
 802703c:	fb02 f301 	mul.w	r3, r2, r1
 8027040:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027044:	0112      	lsls	r2, r2, #4
 8027046:	b289      	uxth	r1, r1
 8027048:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802704c:	1a40      	subs	r0, r0, r1
 802704e:	fa1f fe80 	uxth.w	lr, r0
 8027052:	1ad2      	subs	r2, r2, r3
 8027054:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027056:	b292      	uxth	r2, r2
 8027058:	4342      	muls	r2, r0
 802705a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802705e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027060:	fb01 c102 	mla	r1, r1, r2, ip
 8027064:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8027066:	fb03 1302 	mla	r3, r3, r2, r1
 802706a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802706e:	2bff      	cmp	r3, #255	; 0xff
 8027070:	f040 8093 	bne.w	802719a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027074:	4bbe      	ldr	r3, [pc, #760]	; (8027370 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027076:	681a      	ldr	r2, [r3, #0]
 8027078:	4bbe      	ldr	r3, [pc, #760]	; (8027374 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802707a:	0951      	lsrs	r1, r2, #5
 802707c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8027080:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8027084:	430b      	orrs	r3, r1
 8027086:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802708a:	4313      	orrs	r3, r2
 802708c:	f8a8 3000 	strh.w	r3, [r8]
 8027090:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027092:	441c      	add	r4, r3
 8027094:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027096:	441e      	add	r6, r3
 8027098:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802709a:	3b01      	subs	r3, #1
 802709c:	f108 0802 	add.w	r8, r8, #2
 80270a0:	9309      	str	r3, [sp, #36]	; 0x24
 80270a2:	e76c      	b.n	8026f7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80270a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80270a6:	441c      	add	r4, r3
 80270a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80270aa:	3d01      	subs	r5, #1
 80270ac:	441e      	add	r6, r3
 80270ae:	f109 0902 	add.w	r9, r9, #2
 80270b2:	e744      	b.n	8026f3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80270b4:	d021      	beq.n	80270fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80270b6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80270b8:	1e6b      	subs	r3, r5, #1
 80270ba:	fb00 4003 	mla	r0, r0, r3, r4
 80270be:	1400      	asrs	r0, r0, #16
 80270c0:	f53f af59 	bmi.w	8026f76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270c4:	3901      	subs	r1, #1
 80270c6:	4288      	cmp	r0, r1
 80270c8:	f6bf af55 	bge.w	8026f76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270cc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80270ce:	fb01 6303 	mla	r3, r1, r3, r6
 80270d2:	141b      	asrs	r3, r3, #16
 80270d4:	f53f af4f 	bmi.w	8026f76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270d8:	3a01      	subs	r2, #1
 80270da:	4293      	cmp	r3, r2
 80270dc:	f6bf af4b 	bge.w	8026f76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80270e4:	9308      	str	r3, [sp, #32]
 80270e6:	46a8      	mov	r8, r5
 80270e8:	46ce      	mov	lr, r9
 80270ea:	f1b8 0f00 	cmp.w	r8, #0
 80270ee:	f300 80b5 	bgt.w	802725c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80270f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80270f6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80270fa:	9b07      	ldr	r3, [sp, #28]
 80270fc:	2b00      	cmp	r3, #0
 80270fe:	f340 817d 	ble.w	80273fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027102:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027106:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802710a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802710e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027110:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027114:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027118:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802711c:	eef0 6a62 	vmov.f32	s13, s5
 8027120:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027124:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027128:	ee77 2a62 	vsub.f32	s5, s14, s5
 802712c:	ee16 4a90 	vmov	r4, s13
 8027130:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027134:	eef0 6a43 	vmov.f32	s13, s6
 8027138:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802713c:	ee12 2a90 	vmov	r2, s5
 8027140:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027144:	fb92 f3f3 	sdiv	r3, r2, r3
 8027148:	ee13 2a10 	vmov	r2, s6
 802714c:	931f      	str	r3, [sp, #124]	; 0x7c
 802714e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027150:	fb92 f3f3 	sdiv	r3, r2, r3
 8027154:	9320      	str	r3, [sp, #128]	; 0x80
 8027156:	9b07      	ldr	r3, [sp, #28]
 8027158:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802715a:	3b01      	subs	r3, #1
 802715c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027160:	9307      	str	r3, [sp, #28]
 8027162:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027164:	ee16 6a90 	vmov	r6, s13
 8027168:	bf14      	ite	ne
 802716a:	461d      	movne	r5, r3
 802716c:	4615      	moveq	r5, r2
 802716e:	eeb0 3a67 	vmov.f32	s6, s15
 8027172:	eef0 2a47 	vmov.f32	s5, s14
 8027176:	e6d3      	b.n	8026f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8027178:	2900      	cmp	r1, #0
 802717a:	f43f af5c 	beq.w	8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802717e:	eb0a 0003 	add.w	r0, sl, r3
 8027182:	0843      	lsrs	r3, r0, #1
 8027184:	07c0      	lsls	r0, r0, #31
 8027186:	5cfb      	ldrb	r3, [r7, r3]
 8027188:	bf54      	ite	pl
 802718a:	f003 030f 	andpl.w	r3, r3, #15
 802718e:	111b      	asrmi	r3, r3, #4
 8027190:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027194:	b2db      	uxtb	r3, r3
 8027196:	930a      	str	r3, [sp, #40]	; 0x28
 8027198:	e74d      	b.n	8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802719a:	2b00      	cmp	r3, #0
 802719c:	f43f af78 	beq.w	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80271a0:	4a73      	ldr	r2, [pc, #460]	; (8027370 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80271a2:	f8b8 c000 	ldrh.w	ip, [r8]
 80271a6:	6810      	ldr	r0, [r2, #0]
 80271a8:	fa1f fe83 	uxth.w	lr, r3
 80271ac:	ea4f 212c 	mov.w	r1, ip, asr #8
 80271b0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80271b4:	43db      	mvns	r3, r3
 80271b6:	b2db      	uxtb	r3, r3
 80271b8:	fb12 f20e 	smulbb	r2, r2, lr
 80271bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80271c0:	fb01 2103 	mla	r1, r1, r3, r2
 80271c4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80271c8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80271cc:	b2c0      	uxtb	r0, r0
 80271ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80271d2:	fb1b fb0e 	smulbb	fp, fp, lr
 80271d6:	b289      	uxth	r1, r1
 80271d8:	fb10 fe0e 	smulbb	lr, r0, lr
 80271dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80271e0:	fa5f fc8c 	uxtb.w	ip, ip
 80271e4:	fb02 b203 	mla	r2, r2, r3, fp
 80271e8:	1c48      	adds	r0, r1, #1
 80271ea:	fb0c e303 	mla	r3, ip, r3, lr
 80271ee:	b292      	uxth	r2, r2
 80271f0:	b29b      	uxth	r3, r3
 80271f2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80271f6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80271fa:	f102 0b01 	add.w	fp, r2, #1
 80271fe:	1c59      	adds	r1, r3, #1
 8027200:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8027204:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8027208:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802720c:	0952      	lsrs	r2, r2, #5
 802720e:	4301      	orrs	r1, r0
 8027210:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027214:	4311      	orrs	r1, r2
 8027216:	f8a8 1000 	strh.w	r1, [r8]
 802721a:	e739      	b.n	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802721c:	f113 0b01 	adds.w	fp, r3, #1
 8027220:	f53f af36 	bmi.w	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027224:	45dc      	cmp	ip, fp
 8027226:	f6ff af33 	blt.w	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802722a:	f110 0b01 	adds.w	fp, r0, #1
 802722e:	f53f af2f 	bmi.w	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027232:	45de      	cmp	lr, fp
 8027234:	f6ff af2c 	blt.w	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027238:	9a08      	ldr	r2, [sp, #32]
 802723a:	9302      	str	r3, [sp, #8]
 802723c:	fa0f f38e 	sxth.w	r3, lr
 8027240:	9301      	str	r3, [sp, #4]
 8027242:	fa0f f38c 	sxth.w	r3, ip
 8027246:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802724a:	9105      	str	r1, [sp, #20]
 802724c:	9300      	str	r3, [sp, #0]
 802724e:	463a      	mov	r2, r7
 8027250:	4653      	mov	r3, sl
 8027252:	4641      	mov	r1, r8
 8027254:	9811      	ldr	r0, [sp, #68]	; 0x44
 8027256:	f7ff fd73 	bl	8026d40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802725a:	e719      	b.n	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802725c:	9906      	ldr	r1, [sp, #24]
 802725e:	1422      	asrs	r2, r4, #16
 8027260:	1433      	asrs	r3, r6, #16
 8027262:	fb01 2303 	mla	r3, r1, r3, r2
 8027266:	085a      	lsrs	r2, r3, #1
 8027268:	07d9      	lsls	r1, r3, #31
 802726a:	5cba      	ldrb	r2, [r7, r2]
 802726c:	bf54      	ite	pl
 802726e:	f002 020f 	andpl.w	r2, r2, #15
 8027272:	1112      	asrmi	r2, r2, #4
 8027274:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027278:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802727c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8027280:	b2d2      	uxtb	r2, r2
 8027282:	2800      	cmp	r0, #0
 8027284:	d062      	beq.n	802734c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8027286:	f103 0a01 	add.w	sl, r3, #1
 802728a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802728e:	f01a 0f01 	tst.w	sl, #1
 8027292:	5c79      	ldrb	r1, [r7, r1]
 8027294:	bf0c      	ite	eq
 8027296:	f001 010f 	andeq.w	r1, r1, #15
 802729a:	1109      	asrne	r1, r1, #4
 802729c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80272a0:	b2c9      	uxtb	r1, r1
 80272a2:	910f      	str	r1, [sp, #60]	; 0x3c
 80272a4:	f1bc 0f00 	cmp.w	ip, #0
 80272a8:	d019      	beq.n	80272de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80272aa:	9908      	ldr	r1, [sp, #32]
 80272ac:	440b      	add	r3, r1
 80272ae:	0859      	lsrs	r1, r3, #1
 80272b0:	f013 0f01 	tst.w	r3, #1
 80272b4:	5c79      	ldrb	r1, [r7, r1]
 80272b6:	bf0c      	ite	eq
 80272b8:	f001 010f 	andeq.w	r1, r1, #15
 80272bc:	1109      	asrne	r1, r1, #4
 80272be:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80272c2:	b2c9      	uxtb	r1, r1
 80272c4:	3301      	adds	r3, #1
 80272c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80272c8:	0859      	lsrs	r1, r3, #1
 80272ca:	07db      	lsls	r3, r3, #31
 80272cc:	5c79      	ldrb	r1, [r7, r1]
 80272ce:	bf54      	ite	pl
 80272d0:	f001 010f 	andpl.w	r1, r1, #15
 80272d4:	1109      	asrmi	r1, r1, #4
 80272d6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80272da:	b2c9      	uxtb	r1, r1
 80272dc:	9110      	str	r1, [sp, #64]	; 0x40
 80272de:	b280      	uxth	r0, r0
 80272e0:	fa1f fc8c 	uxth.w	ip, ip
 80272e4:	fb00 f30c 	mul.w	r3, r0, ip
 80272e8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80272ec:	0100      	lsls	r0, r0, #4
 80272ee:	fa1f fc8c 	uxth.w	ip, ip
 80272f2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80272f6:	eba1 010c 	sub.w	r1, r1, ip
 80272fa:	fa1f fa81 	uxth.w	sl, r1
 80272fe:	1ac0      	subs	r0, r0, r3
 8027300:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8027302:	b280      	uxth	r0, r0
 8027304:	4348      	muls	r0, r1
 8027306:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8027308:	fb02 020a 	mla	r2, r2, sl, r0
 802730c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8027310:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027312:	fb03 c302 	mla	r3, r3, r2, ip
 8027316:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802731a:	2bff      	cmp	r3, #255	; 0xff
 802731c:	d12c      	bne.n	8027378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802731e:	4b14      	ldr	r3, [pc, #80]	; (8027370 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027320:	681a      	ldr	r2, [r3, #0]
 8027322:	4b14      	ldr	r3, [pc, #80]	; (8027374 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027324:	0951      	lsrs	r1, r2, #5
 8027326:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802732a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802732e:	430b      	orrs	r3, r1
 8027330:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027334:	4313      	orrs	r3, r2
 8027336:	f8ae 3000 	strh.w	r3, [lr]
 802733a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802733c:	441c      	add	r4, r3
 802733e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027340:	f10e 0e02 	add.w	lr, lr, #2
 8027344:	441e      	add	r6, r3
 8027346:	f108 38ff 	add.w	r8, r8, #4294967295
 802734a:	e6ce      	b.n	80270ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802734c:	f1bc 0f00 	cmp.w	ip, #0
 8027350:	d0c5      	beq.n	80272de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8027352:	9908      	ldr	r1, [sp, #32]
 8027354:	440b      	add	r3, r1
 8027356:	0859      	lsrs	r1, r3, #1
 8027358:	07db      	lsls	r3, r3, #31
 802735a:	5c79      	ldrb	r1, [r7, r1]
 802735c:	bf54      	ite	pl
 802735e:	f001 010f 	andpl.w	r1, r1, #15
 8027362:	1109      	asrmi	r1, r1, #4
 8027364:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027368:	b2c9      	uxtb	r1, r1
 802736a:	910b      	str	r1, [sp, #44]	; 0x2c
 802736c:	e7b7      	b.n	80272de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802736e:	bf00      	nop
 8027370:	20013844 	.word	0x20013844
 8027374:	fffff800 	.word	0xfffff800
 8027378:	2b00      	cmp	r3, #0
 802737a:	d0de      	beq.n	802733a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802737c:	4a21      	ldr	r2, [pc, #132]	; (8027404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802737e:	f8be c000 	ldrh.w	ip, [lr]
 8027382:	6810      	ldr	r0, [r2, #0]
 8027384:	fa1f fa83 	uxth.w	sl, r3
 8027388:	ea4f 212c 	mov.w	r1, ip, asr #8
 802738c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027390:	43db      	mvns	r3, r3
 8027392:	b2db      	uxtb	r3, r3
 8027394:	fb12 f20a 	smulbb	r2, r2, sl
 8027398:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802739c:	fb01 2103 	mla	r1, r1, r3, r2
 80273a0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80273a4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80273a8:	b2c0      	uxtb	r0, r0
 80273aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80273ae:	fa5f fc8c 	uxtb.w	ip, ip
 80273b2:	fb10 f00a 	smulbb	r0, r0, sl
 80273b6:	fb0c 0003 	mla	r0, ip, r3, r0
 80273ba:	b289      	uxth	r1, r1
 80273bc:	fb1b fb0a 	smulbb	fp, fp, sl
 80273c0:	b280      	uxth	r0, r0
 80273c2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80273c6:	fb02 b203 	mla	r2, r2, r3, fp
 80273ca:	1c4b      	adds	r3, r1, #1
 80273cc:	f100 0b01 	add.w	fp, r0, #1
 80273d0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80273d4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80273d8:	b292      	uxth	r2, r2
 80273da:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80273de:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80273e2:	ea4b 0101 	orr.w	r1, fp, r1
 80273e6:	f102 0b01 	add.w	fp, r2, #1
 80273ea:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80273ee:	0952      	lsrs	r2, r2, #5
 80273f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80273f4:	4311      	orrs	r1, r2
 80273f6:	f8ae 1000 	strh.w	r1, [lr]
 80273fa:	e79e      	b.n	802733a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80273fc:	b013      	add	sp, #76	; 0x4c
 80273fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027402:	bf00      	nop
 8027404:	20013844 	.word	0x20013844

08027408 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8027408:	b570      	push	{r4, r5, r6, lr}
 802740a:	1208      	asrs	r0, r1, #8
 802740c:	b29e      	uxth	r6, r3
 802740e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8027412:	1213      	asrs	r3, r2, #8
 8027414:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027418:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802741c:	fb13 f305 	smulbb	r3, r3, r5
 8027420:	fb10 f006 	smulbb	r0, r0, r6
 8027424:	4418      	add	r0, r3
 8027426:	10cc      	asrs	r4, r1, #3
 8027428:	10d3      	asrs	r3, r2, #3
 802742a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802742e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027432:	fb13 f305 	smulbb	r3, r3, r5
 8027436:	fb14 f406 	smulbb	r4, r4, r6
 802743a:	00c9      	lsls	r1, r1, #3
 802743c:	00d2      	lsls	r2, r2, #3
 802743e:	441c      	add	r4, r3
 8027440:	b2d2      	uxtb	r2, r2
 8027442:	b2cb      	uxtb	r3, r1
 8027444:	fb12 f205 	smulbb	r2, r2, r5
 8027448:	b280      	uxth	r0, r0
 802744a:	fb13 f306 	smulbb	r3, r3, r6
 802744e:	4413      	add	r3, r2
 8027450:	1c42      	adds	r2, r0, #1
 8027452:	b29b      	uxth	r3, r3
 8027454:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027458:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802745c:	1c58      	adds	r0, r3, #1
 802745e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027462:	b2a4      	uxth	r4, r4
 8027464:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027468:	4310      	orrs	r0, r2
 802746a:	1c62      	adds	r2, r4, #1
 802746c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027470:	0964      	lsrs	r4, r4, #5
 8027472:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027476:	4320      	orrs	r0, r4
 8027478:	bd70      	pop	{r4, r5, r6, pc}
	...

0802747c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802747c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027480:	b08f      	sub	sp, #60	; 0x3c
 8027482:	461c      	mov	r4, r3
 8027484:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027488:	9004      	str	r0, [sp, #16]
 802748a:	460d      	mov	r5, r1
 802748c:	4616      	mov	r6, r2
 802748e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027490:	2f00      	cmp	r7, #0
 8027492:	f000 80f6 	beq.w	8027682 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8027496:	6820      	ldr	r0, [r4, #0]
 8027498:	6861      	ldr	r1, [r4, #4]
 802749a:	aa0a      	add	r2, sp, #40	; 0x28
 802749c:	c203      	stmia	r2!, {r0, r1}
 802749e:	6818      	ldr	r0, [r3, #0]
 80274a0:	6859      	ldr	r1, [r3, #4]
 80274a2:	aa0c      	add	r2, sp, #48	; 0x30
 80274a4:	c203      	stmia	r2!, {r0, r1}
 80274a6:	a80a      	add	r0, sp, #40	; 0x28
 80274a8:	f7ef fa5e 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80274ac:	4621      	mov	r1, r4
 80274ae:	a80c      	add	r0, sp, #48	; 0x30
 80274b0:	f7ef fa9e 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80274b4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80274b8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80274bc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80274c0:	f002 0301 	and.w	r3, r2, #1
 80274c4:	9306      	str	r3, [sp, #24]
 80274c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80274ca:	f003 0101 	and.w	r1, r3, #1
 80274ce:	9105      	str	r1, [sp, #20]
 80274d0:	9805      	ldr	r0, [sp, #20]
 80274d2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80274d6:	4403      	add	r3, r0
 80274d8:	fb01 2303 	mla	r3, r1, r3, r2
 80274dc:	f04f 0802 	mov.w	r8, #2
 80274e0:	fb93 f3f8 	sdiv	r3, r3, r8
 80274e4:	441d      	add	r5, r3
 80274e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80274ea:	441a      	add	r2, r3
 80274ec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80274f0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80274f4:	4419      	add	r1, r3
 80274f6:	4b64      	ldr	r3, [pc, #400]	; (8027688 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80274f8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80274fc:	6818      	ldr	r0, [r3, #0]
 80274fe:	6803      	ldr	r3, [r0, #0]
 8027500:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027502:	4798      	blx	r3
 8027504:	4a61      	ldr	r2, [pc, #388]	; (802768c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8027506:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802750a:	8813      	ldrh	r3, [r2, #0]
 802750c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8027510:	2fff      	cmp	r7, #255	; 0xff
 8027512:	fb03 a404 	mla	r4, r3, r4, sl
 8027516:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802751a:	f106 0604 	add.w	r6, r6, #4
 802751e:	4611      	mov	r1, r2
 8027520:	fb03 fb0b 	mul.w	fp, r3, fp
 8027524:	d06b      	beq.n	80275fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8027526:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802752a:	9303      	str	r3, [sp, #12]
 802752c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8027530:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027534:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027538:	9b07      	ldr	r3, [sp, #28]
 802753a:	42a3      	cmp	r3, r4
 802753c:	f240 809c 	bls.w	8027678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027540:	9b06      	ldr	r3, [sp, #24]
 8027542:	2b00      	cmp	r3, #0
 8027544:	d039      	beq.n	80275ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8027546:	782b      	ldrb	r3, [r5, #0]
 8027548:	8822      	ldrh	r2, [r4, #0]
 802754a:	9804      	ldr	r0, [sp, #16]
 802754c:	f003 030f 	and.w	r3, r3, #15
 8027550:	f105 0801 	add.w	r8, r5, #1
 8027554:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027558:	9b03      	ldr	r3, [sp, #12]
 802755a:	9300      	str	r3, [sp, #0]
 802755c:	463b      	mov	r3, r7
 802755e:	f7ff ff53 	bl	8027408 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027562:	f824 0b02 	strh.w	r0, [r4], #2
 8027566:	f109 3bff 	add.w	fp, r9, #4294967295
 802756a:	f1bb 0f01 	cmp.w	fp, #1
 802756e:	46a2      	mov	sl, r4
 8027570:	f104 0404 	add.w	r4, r4, #4
 8027574:	dd24      	ble.n	80275c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8027576:	f898 3000 	ldrb.w	r3, [r8]
 802757a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802757e:	9804      	ldr	r0, [sp, #16]
 8027580:	091b      	lsrs	r3, r3, #4
 8027582:	f1ab 0b02 	sub.w	fp, fp, #2
 8027586:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802758a:	9b03      	ldr	r3, [sp, #12]
 802758c:	9300      	str	r3, [sp, #0]
 802758e:	463b      	mov	r3, r7
 8027590:	f7ff ff3a 	bl	8027408 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027594:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027598:	f818 3b01 	ldrb.w	r3, [r8], #1
 802759c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80275a0:	9804      	ldr	r0, [sp, #16]
 80275a2:	f003 030f 	and.w	r3, r3, #15
 80275a6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80275aa:	9b03      	ldr	r3, [sp, #12]
 80275ac:	9300      	str	r3, [sp, #0]
 80275ae:	463b      	mov	r3, r7
 80275b0:	f7ff ff2a 	bl	8027408 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80275b4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80275b8:	e7d7      	b.n	802756a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80275ba:	46a8      	mov	r8, r5
 80275bc:	46cb      	mov	fp, r9
 80275be:	e7d4      	b.n	802756a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80275c0:	d10e      	bne.n	80275e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80275c2:	f898 3000 	ldrb.w	r3, [r8]
 80275c6:	f8ba 2000 	ldrh.w	r2, [sl]
 80275ca:	9804      	ldr	r0, [sp, #16]
 80275cc:	091b      	lsrs	r3, r3, #4
 80275ce:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80275d2:	9b03      	ldr	r3, [sp, #12]
 80275d4:	9300      	str	r3, [sp, #0]
 80275d6:	463b      	mov	r3, r7
 80275d8:	f7ff ff16 	bl	8027408 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80275dc:	f82a 0b02 	strh.w	r0, [sl], #2
 80275e0:	9b08      	ldr	r3, [sp, #32]
 80275e2:	9a05      	ldr	r2, [sp, #20]
 80275e4:	881c      	ldrh	r4, [r3, #0]
 80275e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80275ea:	eba4 0409 	sub.w	r4, r4, r9
 80275ee:	4413      	add	r3, r2
 80275f0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80275f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80275f6:	fb93 f3f2 	sdiv	r3, r3, r2
 80275fa:	441d      	add	r5, r3
 80275fc:	e79c      	b.n	8027538 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80275fe:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8027602:	45a3      	cmp	fp, r4
 8027604:	d938      	bls.n	8027678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027606:	9b06      	ldr	r3, [sp, #24]
 8027608:	b1f3      	cbz	r3, 8027648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802760a:	782b      	ldrb	r3, [r5, #0]
 802760c:	f003 030f 	and.w	r3, r3, #15
 8027610:	1c6a      	adds	r2, r5, #1
 8027612:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027616:	8023      	strh	r3, [r4, #0]
 8027618:	f109 30ff 	add.w	r0, r9, #4294967295
 802761c:	3402      	adds	r4, #2
 802761e:	2801      	cmp	r0, #1
 8027620:	4623      	mov	r3, r4
 8027622:	f104 0404 	add.w	r4, r4, #4
 8027626:	dd12      	ble.n	802764e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027628:	7813      	ldrb	r3, [r2, #0]
 802762a:	091b      	lsrs	r3, r3, #4
 802762c:	3802      	subs	r0, #2
 802762e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027632:	f824 3c04 	strh.w	r3, [r4, #-4]
 8027636:	f812 3b01 	ldrb.w	r3, [r2], #1
 802763a:	f003 030f 	and.w	r3, r3, #15
 802763e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027642:	f824 3c02 	strh.w	r3, [r4, #-2]
 8027646:	e7ea      	b.n	802761e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027648:	462a      	mov	r2, r5
 802764a:	4648      	mov	r0, r9
 802764c:	e7e7      	b.n	802761e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802764e:	d106      	bne.n	802765e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027650:	7812      	ldrb	r2, [r2, #0]
 8027652:	0912      	lsrs	r2, r2, #4
 8027654:	3302      	adds	r3, #2
 8027656:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802765a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802765e:	880c      	ldrh	r4, [r1, #0]
 8027660:	9a05      	ldr	r2, [sp, #20]
 8027662:	eba4 0409 	sub.w	r4, r4, r9
 8027666:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802766a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802766e:	4413      	add	r3, r2
 8027670:	fb93 f3f8 	sdiv	r3, r3, r8
 8027674:	441d      	add	r5, r3
 8027676:	e7c4      	b.n	8027602 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8027678:	4b03      	ldr	r3, [pc, #12]	; (8027688 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802767a:	6818      	ldr	r0, [r3, #0]
 802767c:	6803      	ldr	r3, [r0, #0]
 802767e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027680:	4798      	blx	r3
 8027682:	b00f      	add	sp, #60	; 0x3c
 8027684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027688:	20013834 	.word	0x20013834
 802768c:	2001382e 	.word	0x2001382e

08027690 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8027690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027692:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027696:	2dff      	cmp	r5, #255	; 0xff
 8027698:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802769c:	d10c      	bne.n	80276b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802769e:	2bff      	cmp	r3, #255	; 0xff
 80276a0:	d10a      	bne.n	80276b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80276a2:	4b25      	ldr	r3, [pc, #148]	; (8027738 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80276a4:	0948      	lsrs	r0, r1, #5
 80276a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80276aa:	403b      	ands	r3, r7
 80276ac:	4318      	orrs	r0, r3
 80276ae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80276b2:	4308      	orrs	r0, r1
 80276b4:	b280      	uxth	r0, r0
 80276b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80276b8:	fb15 f503 	smulbb	r5, r5, r3
 80276bc:	b2ab      	uxth	r3, r5
 80276be:	1c5d      	adds	r5, r3, #1
 80276c0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80276c4:	1214      	asrs	r4, r2, #8
 80276c6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80276ca:	fa1f fc85 	uxth.w	ip, r5
 80276ce:	10d6      	asrs	r6, r2, #3
 80276d0:	00d0      	lsls	r0, r2, #3
 80276d2:	43ed      	mvns	r5, r5
 80276d4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80276d8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80276dc:	b2eb      	uxtb	r3, r5
 80276de:	b2c0      	uxtb	r0, r0
 80276e0:	fb12 f20c 	smulbb	r2, r2, ip
 80276e4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80276e8:	fb04 2403 	mla	r4, r4, r3, r2
 80276ec:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80276f0:	b2c8      	uxtb	r0, r1
 80276f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80276f6:	b2fd      	uxtb	r5, r7
 80276f8:	fb10 f00c 	smulbb	r0, r0, ip
 80276fc:	b2a4      	uxth	r4, r4
 80276fe:	fb02 0003 	mla	r0, r2, r3, r0
 8027702:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8027706:	fb15 f50c 	smulbb	r5, r5, ip
 802770a:	fb06 5503 	mla	r5, r6, r3, r5
 802770e:	b283      	uxth	r3, r0
 8027710:	1c60      	adds	r0, r4, #1
 8027712:	b2ad      	uxth	r5, r5
 8027714:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027718:	1c58      	adds	r0, r3, #1
 802771a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802771e:	1c6b      	adds	r3, r5, #1
 8027720:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027724:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027728:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802772c:	096d      	lsrs	r5, r5, #5
 802772e:	4320      	orrs	r0, r4
 8027730:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027734:	4328      	orrs	r0, r5
 8027736:	e7be      	b.n	80276b6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027738:	00fff800 	.word	0x00fff800

0802773c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802773c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027740:	461c      	mov	r4, r3
 8027742:	b08d      	sub	sp, #52	; 0x34
 8027744:	460d      	mov	r5, r1
 8027746:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027748:	6861      	ldr	r1, [r4, #4]
 802774a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802774e:	4680      	mov	r8, r0
 8027750:	6820      	ldr	r0, [r4, #0]
 8027752:	4616      	mov	r6, r2
 8027754:	aa08      	add	r2, sp, #32
 8027756:	c203      	stmia	r2!, {r0, r1}
 8027758:	6818      	ldr	r0, [r3, #0]
 802775a:	6859      	ldr	r1, [r3, #4]
 802775c:	aa0a      	add	r2, sp, #40	; 0x28
 802775e:	c203      	stmia	r2!, {r0, r1}
 8027760:	a808      	add	r0, sp, #32
 8027762:	f7ef f901 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027766:	4621      	mov	r1, r4
 8027768:	a80a      	add	r0, sp, #40	; 0x28
 802776a:	f7ef f941 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802776e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027772:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027776:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802777a:	f002 0301 	and.w	r3, r2, #1
 802777e:	9303      	str	r3, [sp, #12]
 8027780:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027784:	f003 0101 	and.w	r1, r3, #1
 8027788:	9102      	str	r1, [sp, #8]
 802778a:	9802      	ldr	r0, [sp, #8]
 802778c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027790:	4403      	add	r3, r0
 8027792:	fb01 2303 	mla	r3, r1, r3, r2
 8027796:	f04f 0a02 	mov.w	sl, #2
 802779a:	fb93 f3fa 	sdiv	r3, r3, sl
 802779e:	441d      	add	r5, r3
 80277a0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80277a4:	441a      	add	r2, r3
 80277a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80277aa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80277ae:	4a3f      	ldr	r2, [pc, #252]	; (80278ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80277b0:	9205      	str	r2, [sp, #20]
 80277b2:	4419      	add	r1, r3
 80277b4:	6810      	ldr	r0, [r2, #0]
 80277b6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80277ba:	6803      	ldr	r3, [r0, #0]
 80277bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80277be:	4798      	blx	r3
 80277c0:	4b3b      	ldr	r3, [pc, #236]	; (80278b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80277c2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80277c6:	8819      	ldrh	r1, [r3, #0]
 80277c8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80277cc:	fb01 c404 	mla	r4, r1, r4, ip
 80277d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80277d4:	434f      	muls	r7, r1
 80277d6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80277da:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80277de:	3604      	adds	r6, #4
 80277e0:	9204      	str	r2, [sp, #16]
 80277e2:	9b04      	ldr	r3, [sp, #16]
 80277e4:	429c      	cmp	r4, r3
 80277e6:	d258      	bcs.n	802789a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80277e8:	9b03      	ldr	r3, [sp, #12]
 80277ea:	2b00      	cmp	r3, #0
 80277ec:	d034      	beq.n	8027858 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80277ee:	782b      	ldrb	r3, [r5, #0]
 80277f0:	f003 030f 	and.w	r3, r3, #15
 80277f4:	1c6f      	adds	r7, r5, #1
 80277f6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80277fa:	0e0b      	lsrs	r3, r1, #24
 80277fc:	d006      	beq.n	802780c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80277fe:	8822      	ldrh	r2, [r4, #0]
 8027800:	9300      	str	r3, [sp, #0]
 8027802:	4640      	mov	r0, r8
 8027804:	464b      	mov	r3, r9
 8027806:	f7ff ff43 	bl	8027690 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802780a:	8020      	strh	r0, [r4, #0]
 802780c:	3402      	adds	r4, #2
 802780e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8027812:	f1ba 0f01 	cmp.w	sl, #1
 8027816:	dd22      	ble.n	802785e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027818:	783b      	ldrb	r3, [r7, #0]
 802781a:	091b      	lsrs	r3, r3, #4
 802781c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027820:	0e0b      	lsrs	r3, r1, #24
 8027822:	d006      	beq.n	8027832 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027824:	8822      	ldrh	r2, [r4, #0]
 8027826:	9300      	str	r3, [sp, #0]
 8027828:	4640      	mov	r0, r8
 802782a:	464b      	mov	r3, r9
 802782c:	f7ff ff30 	bl	8027690 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027830:	8020      	strh	r0, [r4, #0]
 8027832:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027836:	f003 030f 	and.w	r3, r3, #15
 802783a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802783e:	0e0b      	lsrs	r3, r1, #24
 8027840:	d006      	beq.n	8027850 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027842:	8862      	ldrh	r2, [r4, #2]
 8027844:	9300      	str	r3, [sp, #0]
 8027846:	4640      	mov	r0, r8
 8027848:	464b      	mov	r3, r9
 802784a:	f7ff ff21 	bl	8027690 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802784e:	8060      	strh	r0, [r4, #2]
 8027850:	3404      	adds	r4, #4
 8027852:	f1aa 0a02 	sub.w	sl, sl, #2
 8027856:	e7dc      	b.n	8027812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027858:	462f      	mov	r7, r5
 802785a:	46da      	mov	sl, fp
 802785c:	e7d9      	b.n	8027812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802785e:	d10d      	bne.n	802787c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027860:	783b      	ldrb	r3, [r7, #0]
 8027862:	091b      	lsrs	r3, r3, #4
 8027864:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027868:	0e0b      	lsrs	r3, r1, #24
 802786a:	d006      	beq.n	802787a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802786c:	8822      	ldrh	r2, [r4, #0]
 802786e:	9300      	str	r3, [sp, #0]
 8027870:	4640      	mov	r0, r8
 8027872:	464b      	mov	r3, r9
 8027874:	f7ff ff0c 	bl	8027690 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027878:	8020      	strh	r0, [r4, #0]
 802787a:	3402      	adds	r4, #2
 802787c:	9b06      	ldr	r3, [sp, #24]
 802787e:	9a02      	ldr	r2, [sp, #8]
 8027880:	881b      	ldrh	r3, [r3, #0]
 8027882:	eba3 030b 	sub.w	r3, r3, fp
 8027886:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802788a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802788e:	4413      	add	r3, r2
 8027890:	9a07      	ldr	r2, [sp, #28]
 8027892:	fb93 f3f2 	sdiv	r3, r3, r2
 8027896:	441d      	add	r5, r3
 8027898:	e7a3      	b.n	80277e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802789a:	9b05      	ldr	r3, [sp, #20]
 802789c:	6818      	ldr	r0, [r3, #0]
 802789e:	6803      	ldr	r3, [r0, #0]
 80278a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80278a2:	4798      	blx	r3
 80278a4:	b00d      	add	sp, #52	; 0x34
 80278a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80278aa:	bf00      	nop
 80278ac:	20013834 	.word	0x20013834
 80278b0:	2001382e 	.word	0x2001382e

080278b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80278b4:	b570      	push	{r4, r5, r6, lr}
 80278b6:	1214      	asrs	r4, r2, #8
 80278b8:	788d      	ldrb	r5, [r1, #2]
 80278ba:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80278be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80278c2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80278c6:	fb15 f503 	smulbb	r5, r5, r3
 80278ca:	fb04 5506 	mla	r5, r4, r6, r5
 80278ce:	10d0      	asrs	r0, r2, #3
 80278d0:	784c      	ldrb	r4, [r1, #1]
 80278d2:	7809      	ldrb	r1, [r1, #0]
 80278d4:	00d2      	lsls	r2, r2, #3
 80278d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80278da:	b2d2      	uxtb	r2, r2
 80278dc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80278e0:	fb14 f403 	smulbb	r4, r4, r3
 80278e4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80278e8:	fb11 f303 	smulbb	r3, r1, r3
 80278ec:	fb00 4406 	mla	r4, r0, r6, r4
 80278f0:	fb02 3306 	mla	r3, r2, r6, r3
 80278f4:	b2ad      	uxth	r5, r5
 80278f6:	b29b      	uxth	r3, r3
 80278f8:	b2a4      	uxth	r4, r4
 80278fa:	1c68      	adds	r0, r5, #1
 80278fc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027900:	1c62      	adds	r2, r4, #1
 8027902:	1c58      	adds	r0, r3, #1
 8027904:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027908:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802790c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027910:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027914:	0964      	lsrs	r4, r4, #5
 8027916:	4328      	orrs	r0, r5
 8027918:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802791c:	4320      	orrs	r0, r4
 802791e:	bd70      	pop	{r4, r5, r6, pc}

08027920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027924:	b08f      	sub	sp, #60	; 0x3c
 8027926:	461c      	mov	r4, r3
 8027928:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802792c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802792e:	4682      	mov	sl, r0
 8027930:	460e      	mov	r6, r1
 8027932:	4615      	mov	r5, r2
 8027934:	2f00      	cmp	r7, #0
 8027936:	f000 8142 	beq.w	8027bbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802793a:	6820      	ldr	r0, [r4, #0]
 802793c:	6861      	ldr	r1, [r4, #4]
 802793e:	aa0a      	add	r2, sp, #40	; 0x28
 8027940:	c203      	stmia	r2!, {r0, r1}
 8027942:	6818      	ldr	r0, [r3, #0]
 8027944:	6859      	ldr	r1, [r3, #4]
 8027946:	aa0c      	add	r2, sp, #48	; 0x30
 8027948:	c203      	stmia	r2!, {r0, r1}
 802794a:	a80a      	add	r0, sp, #40	; 0x28
 802794c:	f7ef f80c 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027950:	4621      	mov	r1, r4
 8027952:	a80c      	add	r0, sp, #48	; 0x30
 8027954:	f7ef f84c 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027958:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802795c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027960:	f002 0301 	and.w	r3, r2, #1
 8027964:	9306      	str	r3, [sp, #24]
 8027966:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802796a:	f003 0101 	and.w	r1, r3, #1
 802796e:	9105      	str	r1, [sp, #20]
 8027970:	9805      	ldr	r0, [sp, #20]
 8027972:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027976:	4403      	add	r3, r0
 8027978:	fb01 2303 	mla	r3, r1, r3, r2
 802797c:	f04f 0802 	mov.w	r8, #2
 8027980:	fb93 f3f8 	sdiv	r3, r3, r8
 8027984:	441e      	add	r6, r3
 8027986:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802798a:	441a      	add	r2, r3
 802798c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027990:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027994:	4419      	add	r1, r3
 8027996:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802799a:	9303      	str	r3, [sp, #12]
 802799c:	4b89      	ldr	r3, [pc, #548]	; (8027bc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802799e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80279a2:	6818      	ldr	r0, [r3, #0]
 80279a4:	6803      	ldr	r3, [r0, #0]
 80279a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80279a8:	4798      	blx	r3
 80279aa:	4a87      	ldr	r2, [pc, #540]	; (8027bc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80279ac:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80279b0:	8813      	ldrh	r3, [r2, #0]
 80279b2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80279b6:	2fff      	cmp	r7, #255	; 0xff
 80279b8:	fb03 9404 	mla	r4, r3, r4, r9
 80279bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80279c0:	f105 0504 	add.w	r5, r5, #4
 80279c4:	4694      	mov	ip, r2
 80279c6:	fb03 f30b 	mul.w	r3, r3, fp
 80279ca:	d071      	beq.n	8027ab0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80279cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80279d0:	43f9      	mvns	r1, r7
 80279d2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80279d6:	b2c9      	uxtb	r1, r1
 80279d8:	9104      	str	r1, [sp, #16]
 80279da:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80279de:	9b07      	ldr	r3, [sp, #28]
 80279e0:	42a3      	cmp	r3, r4
 80279e2:	f240 80e7 	bls.w	8027bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80279e6:	9b06      	ldr	r3, [sp, #24]
 80279e8:	2b00      	cmp	r3, #0
 80279ea:	d03d      	beq.n	8027a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80279ec:	7831      	ldrb	r1, [r6, #0]
 80279ee:	9b04      	ldr	r3, [sp, #16]
 80279f0:	8822      	ldrh	r2, [r4, #0]
 80279f2:	9300      	str	r3, [sp, #0]
 80279f4:	f001 010f 	and.w	r1, r1, #15
 80279f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80279fc:	463b      	mov	r3, r7
 80279fe:	4429      	add	r1, r5
 8027a00:	4650      	mov	r0, sl
 8027a02:	f7ff ff57 	bl	80278b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a06:	9b03      	ldr	r3, [sp, #12]
 8027a08:	f824 0b02 	strh.w	r0, [r4], #2
 8027a0c:	f106 0801 	add.w	r8, r6, #1
 8027a10:	f103 3bff 	add.w	fp, r3, #4294967295
 8027a14:	f1bb 0f01 	cmp.w	fp, #1
 8027a18:	46a1      	mov	r9, r4
 8027a1a:	f104 0404 	add.w	r4, r4, #4
 8027a1e:	dd27      	ble.n	8027a70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027a20:	f898 1000 	ldrb.w	r1, [r8]
 8027a24:	9b04      	ldr	r3, [sp, #16]
 8027a26:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8027a2a:	9300      	str	r3, [sp, #0]
 8027a2c:	0909      	lsrs	r1, r1, #4
 8027a2e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a32:	463b      	mov	r3, r7
 8027a34:	4429      	add	r1, r5
 8027a36:	4650      	mov	r0, sl
 8027a38:	f7ff ff3c 	bl	80278b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a3c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027a40:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027a44:	9b04      	ldr	r3, [sp, #16]
 8027a46:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027a4a:	9300      	str	r3, [sp, #0]
 8027a4c:	f001 010f 	and.w	r1, r1, #15
 8027a50:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a54:	463b      	mov	r3, r7
 8027a56:	4429      	add	r1, r5
 8027a58:	4650      	mov	r0, sl
 8027a5a:	f7ff ff2b 	bl	80278b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a5e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027a62:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027a66:	e7d5      	b.n	8027a14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027a68:	46b0      	mov	r8, r6
 8027a6a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8027a6e:	e7d1      	b.n	8027a14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027a70:	d10f      	bne.n	8027a92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027a72:	f898 1000 	ldrb.w	r1, [r8]
 8027a76:	9b04      	ldr	r3, [sp, #16]
 8027a78:	f8b9 2000 	ldrh.w	r2, [r9]
 8027a7c:	9300      	str	r3, [sp, #0]
 8027a7e:	0909      	lsrs	r1, r1, #4
 8027a80:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a84:	463b      	mov	r3, r7
 8027a86:	4429      	add	r1, r5
 8027a88:	4650      	mov	r0, sl
 8027a8a:	f7ff ff13 	bl	80278b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a8e:	f829 0b02 	strh.w	r0, [r9], #2
 8027a92:	9b08      	ldr	r3, [sp, #32]
 8027a94:	9a05      	ldr	r2, [sp, #20]
 8027a96:	881c      	ldrh	r4, [r3, #0]
 8027a98:	9b03      	ldr	r3, [sp, #12]
 8027a9a:	1ae4      	subs	r4, r4, r3
 8027a9c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027aa0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027aa4:	4413      	add	r3, r2
 8027aa6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027aa8:	fb93 f3f2 	sdiv	r3, r3, r2
 8027aac:	441e      	add	r6, r3
 8027aae:	e796      	b.n	80279de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027ab0:	4f46      	ldr	r7, [pc, #280]	; (8027bcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027ab2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027ab6:	42a3      	cmp	r3, r4
 8027ab8:	d97c      	bls.n	8027bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027aba:	9a06      	ldr	r2, [sp, #24]
 8027abc:	2a00      	cmp	r2, #0
 8027abe:	d054      	beq.n	8027b6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027ac0:	7830      	ldrb	r0, [r6, #0]
 8027ac2:	f000 000f 	and.w	r0, r0, #15
 8027ac6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027aca:	eb05 0e00 	add.w	lr, r5, r0
 8027ace:	5c28      	ldrb	r0, [r5, r0]
 8027ad0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027ad4:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027ad8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027adc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027ae0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027ae4:	ea42 020e 	orr.w	r2, r2, lr
 8027ae8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027aec:	f824 2b02 	strh.w	r2, [r4], #2
 8027af0:	9a03      	ldr	r2, [sp, #12]
 8027af2:	1c71      	adds	r1, r6, #1
 8027af4:	f102 3eff 	add.w	lr, r2, #4294967295
 8027af8:	f1be 0f01 	cmp.w	lr, #1
 8027afc:	4620      	mov	r0, r4
 8027afe:	f104 0404 	add.w	r4, r4, #4
 8027b02:	dd36      	ble.n	8027b72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027b04:	7808      	ldrb	r0, [r1, #0]
 8027b06:	0900      	lsrs	r0, r0, #4
 8027b08:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027b0c:	eb05 0a00 	add.w	sl, r5, r0
 8027b10:	f1ae 0e02 	sub.w	lr, lr, #2
 8027b14:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027b18:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027b1c:	00d2      	lsls	r2, r2, #3
 8027b1e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027b22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b26:	ea49 0202 	orr.w	r2, r9, r2
 8027b2a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027b2e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027b32:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027b36:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027b3a:	f000 000f 	and.w	r0, r0, #15
 8027b3e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027b42:	eb05 0a00 	add.w	sl, r5, r0
 8027b46:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027b4a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027b4e:	00d2      	lsls	r2, r2, #3
 8027b50:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027b54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b58:	ea49 0202 	orr.w	r2, r9, r2
 8027b5c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027b60:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027b64:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027b68:	e7c6      	b.n	8027af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027b6a:	4631      	mov	r1, r6
 8027b6c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027b70:	e7c2      	b.n	8027af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027b72:	d111      	bne.n	8027b98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027b74:	7809      	ldrb	r1, [r1, #0]
 8027b76:	0909      	lsrs	r1, r1, #4
 8027b78:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027b7c:	186c      	adds	r4, r5, r1
 8027b7e:	5c69      	ldrb	r1, [r5, r1]
 8027b80:	78a2      	ldrb	r2, [r4, #2]
 8027b82:	7864      	ldrb	r4, [r4, #1]
 8027b84:	00e4      	lsls	r4, r4, #3
 8027b86:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027b8a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027b8e:	4322      	orrs	r2, r4
 8027b90:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027b94:	f820 2b02 	strh.w	r2, [r0], #2
 8027b98:	9a03      	ldr	r2, [sp, #12]
 8027b9a:	f8bc 4000 	ldrh.w	r4, [ip]
 8027b9e:	9905      	ldr	r1, [sp, #20]
 8027ba0:	1aa4      	subs	r4, r4, r2
 8027ba2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027ba6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027baa:	440a      	add	r2, r1
 8027bac:	fb92 f2f8 	sdiv	r2, r2, r8
 8027bb0:	4416      	add	r6, r2
 8027bb2:	e780      	b.n	8027ab6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027bb4:	4b03      	ldr	r3, [pc, #12]	; (8027bc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027bb6:	6818      	ldr	r0, [r3, #0]
 8027bb8:	6803      	ldr	r3, [r0, #0]
 8027bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027bbc:	4798      	blx	r3
 8027bbe:	b00f      	add	sp, #60	; 0x3c
 8027bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027bc4:	20013834 	.word	0x20013834
 8027bc8:	2001382e 	.word	0x2001382e
 8027bcc:	fffff800 	.word	0xfffff800

08027bd0 <CRC_Lock>:
 8027bd0:	b530      	push	{r4, r5, lr}
 8027bd2:	4a20      	ldr	r2, [pc, #128]	; (8027c54 <CRC_Lock+0x84>)
 8027bd4:	6813      	ldr	r3, [r2, #0]
 8027bd6:	f023 0301 	bic.w	r3, r3, #1
 8027bda:	6013      	str	r3, [r2, #0]
 8027bdc:	4b1e      	ldr	r3, [pc, #120]	; (8027c58 <CRC_Lock+0x88>)
 8027bde:	681a      	ldr	r2, [r3, #0]
 8027be0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8027be4:	4022      	ands	r2, r4
 8027be6:	f24c 2540 	movw	r5, #49728	; 0xc240
 8027bea:	42aa      	cmp	r2, r5
 8027bec:	d005      	beq.n	8027bfa <CRC_Lock+0x2a>
 8027bee:	681b      	ldr	r3, [r3, #0]
 8027bf0:	f24c 2270 	movw	r2, #49776	; 0xc270
 8027bf4:	4023      	ands	r3, r4
 8027bf6:	4293      	cmp	r3, r2
 8027bf8:	d124      	bne.n	8027c44 <CRC_Lock+0x74>
 8027bfa:	4b18      	ldr	r3, [pc, #96]	; (8027c5c <CRC_Lock+0x8c>)
 8027bfc:	681b      	ldr	r3, [r3, #0]
 8027bfe:	bb0b      	cbnz	r3, 8027c44 <CRC_Lock+0x74>
 8027c00:	4b17      	ldr	r3, [pc, #92]	; (8027c60 <CRC_Lock+0x90>)
 8027c02:	681a      	ldr	r2, [r3, #0]
 8027c04:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027c08:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027c0c:	d00d      	beq.n	8027c2a <CRC_Lock+0x5a>
 8027c0e:	681a      	ldr	r2, [r3, #0]
 8027c10:	f240 4483 	movw	r4, #1155	; 0x483
 8027c14:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027c18:	42a2      	cmp	r2, r4
 8027c1a:	d006      	beq.n	8027c2a <CRC_Lock+0x5a>
 8027c1c:	681b      	ldr	r3, [r3, #0]
 8027c1e:	f240 4285 	movw	r2, #1157	; 0x485
 8027c22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027c26:	4293      	cmp	r3, r2
 8027c28:	d10c      	bne.n	8027c44 <CRC_Lock+0x74>
 8027c2a:	4b0e      	ldr	r3, [pc, #56]	; (8027c64 <CRC_Lock+0x94>)
 8027c2c:	2201      	movs	r2, #1
 8027c2e:	601a      	str	r2, [r3, #0]
 8027c30:	681a      	ldr	r2, [r3, #0]
 8027c32:	2a00      	cmp	r2, #0
 8027c34:	d1fc      	bne.n	8027c30 <CRC_Lock+0x60>
 8027c36:	4b0c      	ldr	r3, [pc, #48]	; (8027c68 <CRC_Lock+0x98>)
 8027c38:	6018      	str	r0, [r3, #0]
 8027c3a:	6818      	ldr	r0, [r3, #0]
 8027c3c:	1a43      	subs	r3, r0, r1
 8027c3e:	4258      	negs	r0, r3
 8027c40:	4158      	adcs	r0, r3
 8027c42:	bd30      	pop	{r4, r5, pc}
 8027c44:	4b09      	ldr	r3, [pc, #36]	; (8027c6c <CRC_Lock+0x9c>)
 8027c46:	2201      	movs	r2, #1
 8027c48:	601a      	str	r2, [r3, #0]
 8027c4a:	681a      	ldr	r2, [r3, #0]
 8027c4c:	2a00      	cmp	r2, #0
 8027c4e:	d1fc      	bne.n	8027c4a <CRC_Lock+0x7a>
 8027c50:	4b07      	ldr	r3, [pc, #28]	; (8027c70 <CRC_Lock+0xa0>)
 8027c52:	e7f1      	b.n	8027c38 <CRC_Lock+0x68>
 8027c54:	e0002000 	.word	0xe0002000
 8027c58:	e000ed00 	.word	0xe000ed00
 8027c5c:	e0042000 	.word	0xe0042000
 8027c60:	5c001000 	.word	0x5c001000
 8027c64:	58024c08 	.word	0x58024c08
 8027c68:	58024c00 	.word	0x58024c00
 8027c6c:	40023008 	.word	0x40023008
 8027c70:	40023000 	.word	0x40023000

08027c74 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027c74:	6101      	str	r1, [r0, #16]
 8027c76:	4770      	bx	lr

08027c78 <_ZN8touchgfx8Gestures4tickEv>:
 8027c78:	7b83      	ldrb	r3, [r0, #14]
 8027c7a:	b14b      	cbz	r3, 8027c90 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027c7c:	8903      	ldrh	r3, [r0, #8]
 8027c7e:	3301      	adds	r3, #1
 8027c80:	b29b      	uxth	r3, r3
 8027c82:	2b07      	cmp	r3, #7
 8027c84:	8103      	strh	r3, [r0, #8]
 8027c86:	bf81      	itttt	hi
 8027c88:	2300      	movhi	r3, #0
 8027c8a:	8143      	strhhi	r3, [r0, #10]
 8027c8c:	8183      	strhhi	r3, [r0, #12]
 8027c8e:	7383      	strbhi	r3, [r0, #14]
 8027c90:	4770      	bx	lr
	...

08027c94 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027c94:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027c98:	4698      	mov	r8, r3
 8027c9a:	8883      	ldrh	r3, [r0, #4]
 8027c9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027ca0:	eba8 0303 	sub.w	r3, r8, r3
 8027ca4:	b21b      	sxth	r3, r3
 8027ca6:	4604      	mov	r4, r0
 8027ca8:	2b00      	cmp	r3, #0
 8027caa:	4617      	mov	r7, r2
 8027cac:	4a18      	ldr	r2, [pc, #96]	; (8027d10 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8027cae:	9200      	str	r2, [sp, #0]
 8027cb0:	bfb8      	it	lt
 8027cb2:	425b      	neglt	r3, r3
 8027cb4:	8aa2      	ldrh	r2, [r4, #20]
 8027cb6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8027cba:	f8ad 800a 	strh.w	r8, [sp, #10]
 8027cbe:	b21b      	sxth	r3, r3
 8027cc0:	460e      	mov	r6, r1
 8027cc2:	4293      	cmp	r3, r2
 8027cc4:	88c1      	ldrh	r1, [r0, #6]
 8027cc6:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027cca:	f04f 0000 	mov.w	r0, #0
 8027cce:	f88d 0004 	strb.w	r0, [sp, #4]
 8027cd2:	f8ad 500c 	strh.w	r5, [sp, #12]
 8027cd6:	dc07      	bgt.n	8027ce8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027cd8:	1a69      	subs	r1, r5, r1
 8027cda:	b209      	sxth	r1, r1
 8027cdc:	2900      	cmp	r1, #0
 8027cde:	bfb8      	it	lt
 8027ce0:	4249      	neglt	r1, r1
 8027ce2:	b209      	sxth	r1, r1
 8027ce4:	428a      	cmp	r2, r1
 8027ce6:	da10      	bge.n	8027d0a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027ce8:	6920      	ldr	r0, [r4, #16]
 8027cea:	6803      	ldr	r3, [r0, #0]
 8027cec:	4669      	mov	r1, sp
 8027cee:	685b      	ldr	r3, [r3, #4]
 8027cf0:	4798      	blx	r3
 8027cf2:	eba8 0606 	sub.w	r6, r8, r6
 8027cf6:	2300      	movs	r3, #0
 8027cf8:	1bef      	subs	r7, r5, r7
 8027cfa:	2001      	movs	r0, #1
 8027cfc:	8123      	strh	r3, [r4, #8]
 8027cfe:	8166      	strh	r6, [r4, #10]
 8027d00:	81a7      	strh	r7, [r4, #12]
 8027d02:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027d06:	80e5      	strh	r5, [r4, #6]
 8027d08:	73a0      	strb	r0, [r4, #14]
 8027d0a:	b004      	add	sp, #16
 8027d0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027d10:	0802ffb0 	.word	0x0802ffb0

08027d14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027d14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027d16:	461e      	mov	r6, r3
 8027d18:	1e4b      	subs	r3, r1, #1
 8027d1a:	2b01      	cmp	r3, #1
 8027d1c:	b085      	sub	sp, #20
 8027d1e:	4604      	mov	r4, r0
 8027d20:	460d      	mov	r5, r1
 8027d22:	4617      	mov	r7, r2
 8027d24:	d84b      	bhi.n	8027dbe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027d26:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8027d2a:	1cd3      	adds	r3, r2, #3
 8027d2c:	b29b      	uxth	r3, r3
 8027d2e:	2b06      	cmp	r3, #6
 8027d30:	d916      	bls.n	8027d60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027d32:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8027dd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027d36:	f8cd c004 	str.w	ip, [sp, #4]
 8027d3a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027d3e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027d42:	6900      	ldr	r0, [r0, #16]
 8027d44:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027d48:	f04f 0c00 	mov.w	ip, #0
 8027d4c:	f88d c008 	strb.w	ip, [sp, #8]
 8027d50:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027d54:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d58:	6803      	ldr	r3, [r0, #0]
 8027d5a:	a901      	add	r1, sp, #4
 8027d5c:	689b      	ldr	r3, [r3, #8]
 8027d5e:	4798      	blx	r3
 8027d60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027d64:	1cd3      	adds	r3, r2, #3
 8027d66:	b29b      	uxth	r3, r3
 8027d68:	2b06      	cmp	r3, #6
 8027d6a:	d916      	bls.n	8027d9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027d6c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8027dd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027d70:	f8cd c004 	str.w	ip, [sp, #4]
 8027d74:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027d78:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027d7c:	6920      	ldr	r0, [r4, #16]
 8027d7e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027d82:	f04f 0c01 	mov.w	ip, #1
 8027d86:	f88d c008 	strb.w	ip, [sp, #8]
 8027d8a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027d8e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d92:	6803      	ldr	r3, [r0, #0]
 8027d94:	a901      	add	r1, sp, #4
 8027d96:	689b      	ldr	r3, [r3, #8]
 8027d98:	4798      	blx	r3
 8027d9a:	4b0d      	ldr	r3, [pc, #52]	; (8027dd0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8027d9c:	9301      	str	r3, [sp, #4]
 8027d9e:	6920      	ldr	r0, [r4, #16]
 8027da0:	f88d 5008 	strb.w	r5, [sp, #8]
 8027da4:	2300      	movs	r3, #0
 8027da6:	f8ad 700a 	strh.w	r7, [sp, #10]
 8027daa:	f8ad 600c 	strh.w	r6, [sp, #12]
 8027dae:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027db2:	6803      	ldr	r3, [r0, #0]
 8027db4:	a901      	add	r1, sp, #4
 8027db6:	681b      	ldr	r3, [r3, #0]
 8027db8:	4798      	blx	r3
 8027dba:	b005      	add	sp, #20
 8027dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027dbe:	2900      	cmp	r1, #0
 8027dc0:	d1eb      	bne.n	8027d9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027dc2:	80a2      	strh	r2, [r4, #4]
 8027dc4:	80c6      	strh	r6, [r0, #6]
 8027dc6:	60a1      	str	r1, [r4, #8]
 8027dc8:	81a1      	strh	r1, [r4, #12]
 8027dca:	73a1      	strb	r1, [r4, #14]
 8027dcc:	e7e5      	b.n	8027d9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027dce:	bf00      	nop
 8027dd0:	0802ff9c 	.word	0x0802ff9c
 8027dd4:	0802ffc4 	.word	0x0802ffc4

08027dd8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027dd8:	10c9      	asrs	r1, r1, #3
 8027dda:	2900      	cmp	r1, #0
 8027ddc:	bfb8      	it	lt
 8027dde:	4249      	neglt	r1, r1
 8027de0:	2801      	cmp	r0, #1
 8027de2:	d108      	bne.n	8027df6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027de4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027de8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8027dec:	4601      	mov	r1, r0
 8027dee:	dd02      	ble.n	8027df6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027df0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8027df4:	4770      	bx	lr
 8027df6:	29ff      	cmp	r1, #255	; 0xff
 8027df8:	bfa8      	it	ge
 8027dfa:	21ff      	movge	r1, #255	; 0xff
 8027dfc:	4608      	mov	r0, r1
 8027dfe:	4770      	bx	lr

08027e00 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027e00:	b410      	push	{r4}
 8027e02:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027e06:	429c      	cmp	r4, r3
 8027e08:	d803      	bhi.n	8027e12 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8027e0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027e0e:	f7ed b8b1 	b.w	8014f74 <_ZN8touchgfx7Outline6lineToEii>
 8027e12:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027e16:	4770      	bx	lr

08027e18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e1c:	b08b      	sub	sp, #44	; 0x2c
 8027e1e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027e22:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027e26:	9308      	str	r3, [sp, #32]
 8027e28:	4606      	mov	r6, r0
 8027e2a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8027e2e:	9309      	str	r3, [sp, #36]	; 0x24
 8027e30:	468a      	mov	sl, r1
 8027e32:	f7ed fa0c 	bl	801524e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027e36:	68b5      	ldr	r5, [r6, #8]
 8027e38:	4604      	mov	r4, r0
 8027e3a:	2d00      	cmp	r5, #0
 8027e3c:	d044      	beq.n	8027ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027e3e:	6873      	ldr	r3, [r6, #4]
 8027e40:	42ab      	cmp	r3, r5
 8027e42:	d33d      	bcc.n	8027ec0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027e44:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027e48:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8027e4c:	eb02 0b03 	add.w	fp, r2, r3
 8027e50:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027e54:	fb02 1203 	mla	r2, r2, r3, r1
 8027e58:	9205      	str	r2, [sp, #20]
 8027e5a:	1e6a      	subs	r2, r5, #1
 8027e5c:	9204      	str	r2, [sp, #16]
 8027e5e:	f04f 0800 	mov.w	r8, #0
 8027e62:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027e66:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027e6a:	454b      	cmp	r3, r9
 8027e6c:	463a      	mov	r2, r7
 8027e6e:	d008      	beq.n	8027e82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027e70:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027e74:	eb03 0b09 	add.w	fp, r3, r9
 8027e78:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027e7c:	fb03 1309 	mla	r3, r3, r9, r1
 8027e80:	9305      	str	r3, [sp, #20]
 8027e82:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027e86:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027e8a:	4498      	add	r8, r3
 8027e8c:	9b04      	ldr	r3, [sp, #16]
 8027e8e:	3b01      	subs	r3, #1
 8027e90:	9304      	str	r3, [sp, #16]
 8027e92:	9b04      	ldr	r3, [sp, #16]
 8027e94:	3301      	adds	r3, #1
 8027e96:	d015      	beq.n	8027ec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027e98:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8027e9c:	42bb      	cmp	r3, r7
 8027e9e:	d117      	bne.n	8027ed0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8027ea0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8027ea4:	9b04      	ldr	r3, [sp, #16]
 8027ea6:	4548      	cmp	r0, r9
 8027ea8:	f103 33ff 	add.w	r3, r3, #4294967295
 8027eac:	d17f      	bne.n	8027fae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8027eae:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8027eb2:	4401      	add	r1, r0
 8027eb4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027eb8:	4480      	add	r8, r0
 8027eba:	e7e9      	b.n	8027e90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027ebc:	461f      	mov	r7, r3
 8027ebe:	e044      	b.n	8027f4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027ec0:	2000      	movs	r0, #0
 8027ec2:	e002      	b.n	8027eca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8027ec4:	2900      	cmp	r1, #0
 8027ec6:	d16f      	bne.n	8027fa8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027ec8:	2001      	movs	r0, #1
 8027eca:	b00b      	add	sp, #44	; 0x2c
 8027ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ed0:	2900      	cmp	r1, #0
 8027ed2:	d030      	beq.n	8027f36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8027ed4:	2f00      	cmp	r7, #0
 8027ed6:	db29      	blt.n	8027f2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ed8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027edc:	42bb      	cmp	r3, r7
 8027ede:	dd25      	ble.n	8027f2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ee0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8027ee4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027ee8:	f7ff ff76 	bl	8027dd8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027eee:	fb10 f003 	smulbb	r0, r0, r3
 8027ef2:	b280      	uxth	r0, r0
 8027ef4:	1c41      	adds	r1, r0, #1
 8027ef6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027efa:	1209      	asrs	r1, r1, #8
 8027efc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027f00:	d014      	beq.n	8027f2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027f02:	9808      	ldr	r0, [sp, #32]
 8027f04:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027f06:	b2c9      	uxtb	r1, r1
 8027f08:	b2ba      	uxth	r2, r7
 8027f0a:	9102      	str	r1, [sp, #8]
 8027f0c:	2101      	movs	r1, #1
 8027f0e:	4413      	add	r3, r2
 8027f10:	9101      	str	r1, [sp, #4]
 8027f12:	4402      	add	r2, r0
 8027f14:	fa0f f18b 	sxth.w	r1, fp
 8027f18:	f8da 0000 	ldr.w	r0, [sl]
 8027f1c:	9100      	str	r1, [sp, #0]
 8027f1e:	6941      	ldr	r1, [r0, #20]
 8027f20:	b21b      	sxth	r3, r3
 8027f22:	460d      	mov	r5, r1
 8027f24:	b212      	sxth	r2, r2
 8027f26:	9905      	ldr	r1, [sp, #20]
 8027f28:	4650      	mov	r0, sl
 8027f2a:	47a8      	blx	r5
 8027f2c:	9b04      	ldr	r3, [sp, #16]
 8027f2e:	3301      	adds	r3, #1
 8027f30:	f107 0201 	add.w	r2, r7, #1
 8027f34:	d0c8      	beq.n	8027ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027f36:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027f3a:	1abb      	subs	r3, r7, r2
 8027f3c:	2b00      	cmp	r3, #0
 8027f3e:	dd31      	ble.n	8027fa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f40:	2a00      	cmp	r2, #0
 8027f42:	dabb      	bge.n	8027ebc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8027f44:	2f00      	cmp	r7, #0
 8027f46:	dd2d      	ble.n	8027fa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f48:	2200      	movs	r2, #0
 8027f4a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027f4e:	19d1      	adds	r1, r2, r7
 8027f50:	4299      	cmp	r1, r3
 8027f52:	db02      	blt.n	8027f5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8027f54:	1a9f      	subs	r7, r3, r2
 8027f56:	2f00      	cmp	r7, #0
 8027f58:	dd24      	ble.n	8027fa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f5a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027f5e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027f62:	f7ff ff39 	bl	8027dd8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027f66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027f68:	fb10 f003 	smulbb	r0, r0, r3
 8027f6c:	b280      	uxth	r0, r0
 8027f6e:	1c41      	adds	r1, r0, #1
 8027f70:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027f74:	1209      	asrs	r1, r1, #8
 8027f76:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027f7a:	d013      	beq.n	8027fa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f7c:	9808      	ldr	r0, [sp, #32]
 8027f7e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027f80:	b292      	uxth	r2, r2
 8027f82:	b2c9      	uxtb	r1, r1
 8027f84:	4413      	add	r3, r2
 8027f86:	9102      	str	r1, [sp, #8]
 8027f88:	4402      	add	r2, r0
 8027f8a:	b23f      	sxth	r7, r7
 8027f8c:	f8da 0000 	ldr.w	r0, [sl]
 8027f90:	9701      	str	r7, [sp, #4]
 8027f92:	fa0f f18b 	sxth.w	r1, fp
 8027f96:	9100      	str	r1, [sp, #0]
 8027f98:	6947      	ldr	r7, [r0, #20]
 8027f9a:	9905      	ldr	r1, [sp, #20]
 8027f9c:	b21b      	sxth	r3, r3
 8027f9e:	b212      	sxth	r2, r2
 8027fa0:	4650      	mov	r0, sl
 8027fa2:	47b8      	blx	r7
 8027fa4:	464b      	mov	r3, r9
 8027fa6:	e75c      	b.n	8027e62 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027fa8:	2f00      	cmp	r7, #0
 8027faa:	da95      	bge.n	8027ed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027fac:	e78c      	b.n	8027ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027fae:	2900      	cmp	r1, #0
 8027fb0:	d0f8      	beq.n	8027fa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027fb2:	e78f      	b.n	8027ed4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027fb4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027fb4:	4b4b      	ldr	r3, [pc, #300]	; (80280e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027fb6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027fba:	2500      	movs	r5, #0
 8027fbc:	f100 0620 	add.w	r6, r0, #32
 8027fc0:	4604      	mov	r4, r0
 8027fc2:	e9c0 3100 	strd	r3, r1, [r0]
 8027fc6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027fca:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027fce:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027fd2:	f100 0718 	add.w	r7, r0, #24
 8027fd6:	4630      	mov	r0, r6
 8027fd8:	4690      	mov	r8, r2
 8027fda:	f7ec fb03 	bl	80145e4 <_ZN8touchgfx7OutlineC1Ev>
 8027fde:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027fe2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027fe6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027fea:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027fee:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027ff2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027ff6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027ffa:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027ffe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8028002:	f9b8 2000 	ldrsh.w	r2, [r8]
 8028006:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802800a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802800e:	9500      	str	r5, [sp, #0]
 8028010:	4410      	add	r0, r2
 8028012:	b280      	uxth	r0, r0
 8028014:	fa0f fa80 	sxth.w	sl, r0
 8028018:	45aa      	cmp	sl, r5
 802801a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802801e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8028022:	dd5c      	ble.n	80280de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028024:	4591      	cmp	r9, r2
 8028026:	dd5a      	ble.n	80280de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028028:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802802c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8028030:	440b      	add	r3, r1
 8028032:	b29b      	uxth	r3, r3
 8028034:	b21d      	sxth	r5, r3
 8028036:	2d00      	cmp	r5, #0
 8028038:	dd51      	ble.n	80280de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802803a:	458e      	cmp	lr, r1
 802803c:	dd4f      	ble.n	80280de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802803e:	45d1      	cmp	r9, sl
 8028040:	bfb8      	it	lt
 8028042:	fa1f f089 	uxthlt.w	r0, r9
 8028046:	45ae      	cmp	lr, r5
 8028048:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802804c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028050:	bfb8      	it	lt
 8028052:	fa1f f38e 	uxthlt.w	r3, lr
 8028056:	1a80      	subs	r0, r0, r2
 8028058:	1a5b      	subs	r3, r3, r1
 802805a:	f8ad 0004 	strh.w	r0, [sp, #4]
 802805e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028062:	f8ad 2000 	strh.w	r2, [sp]
 8028066:	f8ad 1002 	strh.w	r1, [sp, #2]
 802806a:	466d      	mov	r5, sp
 802806c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8028070:	e887 0003 	stmia.w	r7, {r0, r1}
 8028074:	f8dc 3000 	ldr.w	r3, [ip]
 8028078:	4660      	mov	r0, ip
 802807a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802807c:	4639      	mov	r1, r7
 802807e:	4798      	blx	r3
 8028080:	6861      	ldr	r1, [r4, #4]
 8028082:	4628      	mov	r0, r5
 8028084:	3104      	adds	r1, #4
 8028086:	f7ee fcb3 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802808a:	4638      	mov	r0, r7
 802808c:	f7ee fc6c 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028090:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028094:	f8bd 2000 	ldrh.w	r2, [sp]
 8028098:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802809c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80280a0:	4630      	mov	r0, r6
 80280a2:	f7ec fa83 	bl	80145ac <_ZN8touchgfx7Outline5resetEv>
 80280a6:	f9bd 3000 	ldrsh.w	r3, [sp]
 80280aa:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80280ae:	015b      	lsls	r3, r3, #5
 80280b0:	60a3      	str	r3, [r4, #8]
 80280b2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80280b6:	015b      	lsls	r3, r3, #5
 80280b8:	60e3      	str	r3, [r4, #12]
 80280ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80280be:	015b      	lsls	r3, r3, #5
 80280c0:	6123      	str	r3, [r4, #16]
 80280c2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80280c6:	015b      	lsls	r3, r3, #5
 80280c8:	6163      	str	r3, [r4, #20]
 80280ca:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80280ce:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80280d2:	4620      	mov	r0, r4
 80280d4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80280d8:	b002      	add	sp, #8
 80280da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80280de:	2300      	movs	r3, #0
 80280e0:	9301      	str	r3, [sp, #4]
 80280e2:	e7c2      	b.n	802806a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80280e4:	080302e8 	.word	0x080302e8

080280e8 <_ZN8touchgfx6Canvas5closeEv>:
 80280e8:	b538      	push	{r3, r4, r5, lr}
 80280ea:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80280ee:	4604      	mov	r4, r0
 80280f0:	b193      	cbz	r3, 8028118 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80280f2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80280f6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80280fa:	4213      	tst	r3, r2
 80280fc:	d10c      	bne.n	8028118 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80280fe:	f100 0520 	add.w	r5, r0, #32
 8028102:	b123      	cbz	r3, 802810e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028104:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8028108:	4628      	mov	r0, r5
 802810a:	f7ff fe79 	bl	8027e00 <_ZN8touchgfx10Rasterizer6lineToEii>
 802810e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8028112:	4628      	mov	r0, r5
 8028114:	f7ff fe74 	bl	8027e00 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028118:	2300      	movs	r3, #0
 802811a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802811e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8028122:	4298      	cmp	r0, r3
 8028124:	bf34      	ite	cc
 8028126:	2000      	movcc	r0, #0
 8028128:	2001      	movcs	r0, #1
 802812a:	bd38      	pop	{r3, r4, r5, pc}

0802812c <_ZN8touchgfx6Canvas6renderEh>:
 802812c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028130:	4604      	mov	r4, r0
 8028132:	6840      	ldr	r0, [r0, #4]
 8028134:	6803      	ldr	r3, [r0, #0]
 8028136:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028138:	460d      	mov	r5, r1
 802813a:	4798      	blx	r3
 802813c:	fb10 f105 	smulbb	r1, r0, r5
 8028140:	b289      	uxth	r1, r1
 8028142:	1c4d      	adds	r5, r1, #1
 8028144:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8028148:	122d      	asrs	r5, r5, #8
 802814a:	f000 809d 	beq.w	8028288 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802814e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8028152:	2b00      	cmp	r3, #0
 8028154:	f000 8098 	beq.w	8028288 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8028158:	4620      	mov	r0, r4
 802815a:	f7ff ffc5 	bl	80280e8 <_ZN8touchgfx6Canvas5closeEv>
 802815e:	4607      	mov	r7, r0
 8028160:	2800      	cmp	r0, #0
 8028162:	d048      	beq.n	80281f6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8028164:	6863      	ldr	r3, [r4, #4]
 8028166:	4e49      	ldr	r6, [pc, #292]	; (802828c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8028168:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802816a:	6837      	ldr	r7, [r6, #0]
 802816c:	6803      	ldr	r3, [r0, #0]
 802816e:	689b      	ldr	r3, [r3, #8]
 8028170:	4798      	blx	r3
 8028172:	4601      	mov	r1, r0
 8028174:	4638      	mov	r0, r7
 8028176:	f7ea f9bb 	bl	80124f0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802817a:	4607      	mov	r7, r0
 802817c:	f7dc fbd0 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 8028180:	6803      	ldr	r3, [r0, #0]
 8028182:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028184:	4798      	blx	r3
 8028186:	4680      	mov	r8, r0
 8028188:	f7dc fbca 	bl	8004920 <_ZN8touchgfx3HAL3lcdEv>
 802818c:	6803      	ldr	r3, [r0, #0]
 802818e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028190:	4798      	blx	r3
 8028192:	280b      	cmp	r0, #11
 8028194:	d85d      	bhi.n	8028252 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8028196:	e8df f000 	tbb	[pc, r0]
 802819a:	5e53      	.short	0x5e53
 802819c:	325c066e 	.word	0x325c066e
 80281a0:	67676742 	.word	0x67676742
 80281a4:	6767      	.short	0x6767
 80281a6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80281aa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80281ae:	2208      	movs	r2, #8
 80281b0:	fb91 f2f2 	sdiv	r2, r1, r2
 80281b4:	fb08 2303 	mla	r3, r8, r3, r2
 80281b8:	441f      	add	r7, r3
 80281ba:	424b      	negs	r3, r1
 80281bc:	f003 0307 	and.w	r3, r3, #7
 80281c0:	f001 0107 	and.w	r1, r1, #7
 80281c4:	bf58      	it	pl
 80281c6:	4259      	negpl	r1, r3
 80281c8:	b2c9      	uxtb	r1, r1
 80281ca:	b2ed      	uxtb	r5, r5
 80281cc:	e9cd 1500 	strd	r1, r5, [sp]
 80281d0:	6860      	ldr	r0, [r4, #4]
 80281d2:	463a      	mov	r2, r7
 80281d4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80281d6:	fa0f f388 	sxth.w	r3, r8
 80281da:	f104 0020 	add.w	r0, r4, #32
 80281de:	f7ff fe1b 	bl	8027e18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80281e2:	6863      	ldr	r3, [r4, #4]
 80281e4:	4607      	mov	r7, r0
 80281e6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80281e8:	6803      	ldr	r3, [r0, #0]
 80281ea:	691b      	ldr	r3, [r3, #16]
 80281ec:	4798      	blx	r3
 80281ee:	6830      	ldr	r0, [r6, #0]
 80281f0:	6803      	ldr	r3, [r0, #0]
 80281f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80281f4:	4798      	blx	r3
 80281f6:	4638      	mov	r0, r7
 80281f8:	b002      	add	sp, #8
 80281fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80281fe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028202:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028206:	2204      	movs	r2, #4
 8028208:	fb91 f2f2 	sdiv	r2, r1, r2
 802820c:	fb08 2303 	mla	r3, r8, r3, r2
 8028210:	441f      	add	r7, r3
 8028212:	424b      	negs	r3, r1
 8028214:	f003 0303 	and.w	r3, r3, #3
 8028218:	f001 0103 	and.w	r1, r1, #3
 802821c:	e7d2      	b.n	80281c4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802821e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028222:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028226:	2900      	cmp	r1, #0
 8028228:	f04f 0202 	mov.w	r2, #2
 802822c:	fb91 f2f2 	sdiv	r2, r1, r2
 8028230:	f001 0101 	and.w	r1, r1, #1
 8028234:	fb08 2303 	mla	r3, r8, r3, r2
 8028238:	441f      	add	r7, r3
 802823a:	bfb8      	it	lt
 802823c:	4249      	neglt	r1, r1
 802823e:	e7c3      	b.n	80281c8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8028240:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028244:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028248:	fb08 f303 	mul.w	r3, r8, r3
 802824c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028250:	441f      	add	r7, r3
 8028252:	2100      	movs	r1, #0
 8028254:	e7b9      	b.n	80281ca <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8028256:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802825a:	fb08 f203 	mul.w	r2, r8, r3
 802825e:	8b23      	ldrh	r3, [r4, #24]
 8028260:	2103      	movs	r1, #3
 8028262:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028266:	e7f3      	b.n	8028250 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028268:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802826c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028270:	fb08 2303 	mla	r3, r8, r3, r2
 8028274:	e7ec      	b.n	8028250 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028276:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802827a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802827e:	fb08 f303 	mul.w	r3, r8, r3
 8028282:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8028286:	e7e3      	b.n	8028250 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028288:	2701      	movs	r7, #1
 802828a:	e7b4      	b.n	80281f6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802828c:	20013834 	.word	0x20013834

08028290 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8028290:	b510      	push	{r4, lr}
 8028292:	4b07      	ldr	r3, [pc, #28]	; (80282b0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028294:	781b      	ldrb	r3, [r3, #0]
 8028296:	2b01      	cmp	r3, #1
 8028298:	d108      	bne.n	80282ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802829a:	6843      	ldr	r3, [r0, #4]
 802829c:	6814      	ldr	r4, [r2, #0]
 802829e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80282a2:	680b      	ldr	r3, [r1, #0]
 80282a4:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80282a8:	6013      	str	r3, [r2, #0]
 80282aa:	600c      	str	r4, [r1, #0]
 80282ac:	bd10      	pop	{r4, pc}
 80282ae:	bf00      	nop
 80282b0:	2001382c 	.word	0x2001382c

080282b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80282b4:	b513      	push	{r0, r1, r4, lr}
 80282b6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80282ba:	4604      	mov	r4, r0
 80282bc:	e9cd 2100 	strd	r2, r1, [sp]
 80282c0:	b9a3      	cbnz	r3, 80282ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80282c2:	466a      	mov	r2, sp
 80282c4:	a901      	add	r1, sp, #4
 80282c6:	4620      	mov	r0, r4
 80282c8:	f7ff ffe2 	bl	8028290 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80282cc:	68a3      	ldr	r3, [r4, #8]
 80282ce:	9901      	ldr	r1, [sp, #4]
 80282d0:	9a00      	ldr	r2, [sp, #0]
 80282d2:	1ac9      	subs	r1, r1, r3
 80282d4:	68e3      	ldr	r3, [r4, #12]
 80282d6:	9101      	str	r1, [sp, #4]
 80282d8:	1ad2      	subs	r2, r2, r3
 80282da:	2a00      	cmp	r2, #0
 80282dc:	9200      	str	r2, [sp, #0]
 80282de:	da0b      	bge.n	80282f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80282e0:	2301      	movs	r3, #1
 80282e2:	2900      	cmp	r1, #0
 80282e4:	da0e      	bge.n	8028304 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80282e6:	f043 0304 	orr.w	r3, r3, #4
 80282ea:	e013      	b.n	8028314 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80282ec:	f7ff fefc 	bl	80280e8 <_ZN8touchgfx6Canvas5closeEv>
 80282f0:	2800      	cmp	r0, #0
 80282f2:	d1e6      	bne.n	80282c2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80282f4:	b002      	add	sp, #8
 80282f6:	bd10      	pop	{r4, pc}
 80282f8:	6963      	ldr	r3, [r4, #20]
 80282fa:	429a      	cmp	r2, r3
 80282fc:	bfac      	ite	ge
 80282fe:	2302      	movge	r3, #2
 8028300:	2300      	movlt	r3, #0
 8028302:	e7ee      	b.n	80282e2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8028304:	6920      	ldr	r0, [r4, #16]
 8028306:	4281      	cmp	r1, r0
 8028308:	bfac      	ite	ge
 802830a:	2008      	movge	r0, #8
 802830c:	2000      	movlt	r0, #0
 802830e:	4318      	orrs	r0, r3
 8028310:	b2c3      	uxtb	r3, r0
 8028312:	b158      	cbz	r0, 802832c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8028314:	2200      	movs	r2, #0
 8028316:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802831a:	9901      	ldr	r1, [sp, #4]
 802831c:	9a00      	ldr	r2, [sp, #0]
 802831e:	66a1      	str	r1, [r4, #104]	; 0x68
 8028320:	66e2      	str	r2, [r4, #108]	; 0x6c
 8028322:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8028326:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802832a:	e7e3      	b.n	80282f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802832c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8028330:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8028334:	4298      	cmp	r0, r3
 8028336:	d803      	bhi.n	8028340 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8028338:	f104 0020 	add.w	r0, r4, #32
 802833c:	f7ec fe34 	bl	8014fa8 <_ZN8touchgfx7Outline6moveToEii>
 8028340:	2301      	movs	r3, #1
 8028342:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8028346:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802834a:	2300      	movs	r3, #0
 802834c:	e7e5      	b.n	802831a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802834e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028350:	ab02      	add	r3, sp, #8
 8028352:	4604      	mov	r4, r0
 8028354:	f843 2d08 	str.w	r2, [r3, #-8]!
 8028358:	9101      	str	r1, [sp, #4]
 802835a:	461a      	mov	r2, r3
 802835c:	a901      	add	r1, sp, #4
 802835e:	f7ff ff97 	bl	8028290 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028362:	68a3      	ldr	r3, [r4, #8]
 8028364:	9901      	ldr	r1, [sp, #4]
 8028366:	9a00      	ldr	r2, [sp, #0]
 8028368:	1ac9      	subs	r1, r1, r3
 802836a:	68e3      	ldr	r3, [r4, #12]
 802836c:	9101      	str	r1, [sp, #4]
 802836e:	1ad2      	subs	r2, r2, r3
 8028370:	2a00      	cmp	r2, #0
 8028372:	9200      	str	r2, [sp, #0]
 8028374:	db1c      	blt.n	80283b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8028376:	6963      	ldr	r3, [r4, #20]
 8028378:	429a      	cmp	r2, r3
 802837a:	bfac      	ite	ge
 802837c:	2002      	movge	r0, #2
 802837e:	2000      	movlt	r0, #0
 8028380:	2900      	cmp	r1, #0
 8028382:	db17      	blt.n	80283b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8028384:	6923      	ldr	r3, [r4, #16]
 8028386:	4299      	cmp	r1, r3
 8028388:	bfac      	ite	ge
 802838a:	2308      	movge	r3, #8
 802838c:	2300      	movlt	r3, #0
 802838e:	4303      	orrs	r3, r0
 8028390:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8028394:	b2dd      	uxtb	r5, r3
 8028396:	b978      	cbnz	r0, 80283b8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8028398:	f104 0020 	add.w	r0, r4, #32
 802839c:	f7ff fd30 	bl	8027e00 <_ZN8touchgfx10Rasterizer6lineToEii>
 80283a0:	9b01      	ldr	r3, [sp, #4]
 80283a2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80283a4:	9b00      	ldr	r3, [sp, #0]
 80283a6:	6623      	str	r3, [r4, #96]	; 0x60
 80283a8:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80283ac:	b002      	add	sp, #8
 80283ae:	bd70      	pop	{r4, r5, r6, pc}
 80283b0:	2001      	movs	r0, #1
 80283b2:	e7e5      	b.n	8028380 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80283b4:	2304      	movs	r3, #4
 80283b6:	e7ea      	b.n	802838e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80283b8:	b113      	cbz	r3, 80283c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80283ba:	ea10 0305 	ands.w	r3, r0, r5
 80283be:	d11c      	bne.n	80283fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80283c0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80283c4:	f104 0620 	add.w	r6, r4, #32
 80283c8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80283cc:	b98b      	cbnz	r3, 80283f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80283ce:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80283d2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80283d6:	4298      	cmp	r0, r3
 80283d8:	d802      	bhi.n	80283e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80283da:	4630      	mov	r0, r6
 80283dc:	f7ec fde4 	bl	8014fa8 <_ZN8touchgfx7Outline6moveToEii>
 80283e0:	2301      	movs	r3, #1
 80283e2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80283e6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80283ea:	e9dd 2100 	ldrd	r2, r1, [sp]
 80283ee:	4630      	mov	r0, r6
 80283f0:	e7d4      	b.n	802839c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80283f2:	4630      	mov	r0, r6
 80283f4:	f7ff fd04 	bl	8027e00 <_ZN8touchgfx10Rasterizer6lineToEii>
 80283f8:	e7f7      	b.n	80283ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80283fa:	461d      	mov	r5, r3
 80283fc:	e7d0      	b.n	80283a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08028400 <_ZN8touchgfx6CanvasD1Ev>:
 8028400:	b510      	push	{r4, lr}
 8028402:	4b04      	ldr	r3, [pc, #16]	; (8028414 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8028404:	4604      	mov	r4, r0
 8028406:	f840 3b20 	str.w	r3, [r0], #32
 802840a:	f7ec f8c7 	bl	801459c <_ZN8touchgfx7OutlineD1Ev>
 802840e:	4620      	mov	r0, r4
 8028410:	bd10      	pop	{r4, pc}
 8028412:	bf00      	nop
 8028414:	080302e8 	.word	0x080302e8

08028418 <_ZN8touchgfx6CanvasD0Ev>:
 8028418:	b510      	push	{r4, lr}
 802841a:	4604      	mov	r4, r0
 802841c:	f7ff fff0 	bl	8028400 <_ZN8touchgfx6CanvasD1Ev>
 8028420:	4620      	mov	r0, r4
 8028422:	2170      	movs	r1, #112	; 0x70
 8028424:	f002 fd09 	bl	802ae3a <_ZdlPvj>
 8028428:	4620      	mov	r0, r4
 802842a:	bd10      	pop	{r4, pc}

0802842c <_ZN8touchgfx6CircleD1Ev>:
 802842c:	4770      	bx	lr

0802842e <_ZN8touchgfx6CircleD0Ev>:
 802842e:	b510      	push	{r4, lr}
 8028430:	2148      	movs	r1, #72	; 0x48
 8028432:	4604      	mov	r4, r0
 8028434:	f002 fd01 	bl	802ae3a <_ZdlPvj>
 8028438:	4620      	mov	r0, r4
 802843a:	bd10      	pop	{r4, pc}

0802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802843c:	b508      	push	{r3, lr}
 802843e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8028442:	f7ea fbab 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028446:	bd08      	pop	{r3, pc}

08028448 <_ZN8touchgfx6CircleC1Ev>:
 8028448:	b510      	push	{r4, lr}
 802844a:	4604      	mov	r4, r0
 802844c:	f7ea fa42 	bl	80128d4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8028450:	4b08      	ldr	r3, [pc, #32]	; (8028474 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8028452:	6023      	str	r3, [r4, #0]
 8028454:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8028458:	2300      	movs	r3, #0
 802845a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802845e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8028462:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8028466:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802846a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802846e:	60a3      	str	r3, [r4, #8]
 8028470:	4620      	mov	r0, r4
 8028472:	bd10      	pop	{r4, pc}
 8028474:	080302fc 	.word	0x080302fc

08028478 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8028478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802847c:	428a      	cmp	r2, r1
 802847e:	4680      	mov	r8, r0
 8028480:	4610      	mov	r0, r2
 8028482:	4699      	mov	r9, r3
 8028484:	bfa6      	itte	ge
 8028486:	460a      	movge	r2, r1
 8028488:	4603      	movge	r3, r0
 802848a:	460b      	movlt	r3, r1
 802848c:	1a99      	subs	r1, r3, r2
 802848e:	b085      	sub	sp, #20
 8028490:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8028494:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8028498:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802849a:	bfa4      	itt	ge
 802849c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80284a0:	2200      	movge	r2, #0
 80284a2:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80284a6:	9300      	str	r3, [sp, #0]
 80284a8:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80284ac:	f102 0b01 	add.w	fp, r2, #1
 80284b0:	2c00      	cmp	r4, #0
 80284b2:	f040 80af 	bne.w	8028614 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80284b6:	4610      	mov	r0, r2
 80284b8:	9201      	str	r2, [sp, #4]
 80284ba:	f7ea fb6f 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80284be:	a903      	add	r1, sp, #12
 80284c0:	9003      	str	r0, [sp, #12]
 80284c2:	4650      	mov	r0, sl
 80284c4:	f7ea fa32 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284c8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80284cc:	9a01      	ldr	r2, [sp, #4]
 80284ce:	4408      	add	r0, r1
 80284d0:	f8d9 1000 	ldr.w	r1, [r9]
 80284d4:	4281      	cmp	r1, r0
 80284d6:	bfc8      	it	gt
 80284d8:	f8c9 0000 	strgt.w	r0, [r9]
 80284dc:	6839      	ldr	r1, [r7, #0]
 80284de:	4288      	cmp	r0, r1
 80284e0:	bfc8      	it	gt
 80284e2:	6038      	strgt	r0, [r7, #0]
 80284e4:	4610      	mov	r0, r2
 80284e6:	f7ff ffa9 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80284ea:	a903      	add	r1, sp, #12
 80284ec:	9003      	str	r0, [sp, #12]
 80284ee:	4650      	mov	r0, sl
 80284f0:	f7ea fa1c 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284f4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80284f8:	1a10      	subs	r0, r2, r0
 80284fa:	6832      	ldr	r2, [r6, #0]
 80284fc:	4282      	cmp	r2, r0
 80284fe:	bfc8      	it	gt
 8028500:	6030      	strgt	r0, [r6, #0]
 8028502:	682a      	ldr	r2, [r5, #0]
 8028504:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8028508:	4290      	cmp	r0, r2
 802850a:	fb9b f2f1 	sdiv	r2, fp, r1
 802850e:	fb01 b212 	mls	r2, r1, r2, fp
 8028512:	eba1 0202 	sub.w	r2, r1, r2
 8028516:	bfc8      	it	gt
 8028518:	6028      	strgt	r0, [r5, #0]
 802851a:	fb92 f0f1 	sdiv	r0, r2, r1
 802851e:	fb01 2210 	mls	r2, r1, r0, r2
 8028522:	4493      	add	fp, r2
 8028524:	9b00      	ldr	r3, [sp, #0]
 8028526:	455b      	cmp	r3, fp
 8028528:	db2a      	blt.n	8028580 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802852a:	4658      	mov	r0, fp
 802852c:	f7ea fb36 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028530:	a903      	add	r1, sp, #12
 8028532:	9003      	str	r0, [sp, #12]
 8028534:	4650      	mov	r0, sl
 8028536:	f7ea f9f9 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802853a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802853e:	4410      	add	r0, r2
 8028540:	f8d9 2000 	ldr.w	r2, [r9]
 8028544:	4282      	cmp	r2, r0
 8028546:	bfc8      	it	gt
 8028548:	f8c9 0000 	strgt.w	r0, [r9]
 802854c:	683a      	ldr	r2, [r7, #0]
 802854e:	4290      	cmp	r0, r2
 8028550:	bfc8      	it	gt
 8028552:	6038      	strgt	r0, [r7, #0]
 8028554:	4658      	mov	r0, fp
 8028556:	f7ff ff71 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802855a:	a903      	add	r1, sp, #12
 802855c:	9003      	str	r0, [sp, #12]
 802855e:	4650      	mov	r0, sl
 8028560:	f7ea f9e4 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028564:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028568:	1a10      	subs	r0, r2, r0
 802856a:	6832      	ldr	r2, [r6, #0]
 802856c:	4282      	cmp	r2, r0
 802856e:	bfc8      	it	gt
 8028570:	6030      	strgt	r0, [r6, #0]
 8028572:	682a      	ldr	r2, [r5, #0]
 8028574:	4290      	cmp	r0, r2
 8028576:	bfc8      	it	gt
 8028578:	6028      	strgt	r0, [r5, #0]
 802857a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802857e:	e7d1      	b.n	8028524 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8028580:	9b00      	ldr	r3, [sp, #0]
 8028582:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028586:	455b      	cmp	r3, fp
 8028588:	dd27      	ble.n	80285da <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802858a:	4618      	mov	r0, r3
 802858c:	f7ea fb06 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028590:	a903      	add	r1, sp, #12
 8028592:	9003      	str	r0, [sp, #12]
 8028594:	4650      	mov	r0, sl
 8028596:	f7ea f9c9 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802859a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802859e:	4410      	add	r0, r2
 80285a0:	f8d9 2000 	ldr.w	r2, [r9]
 80285a4:	4282      	cmp	r2, r0
 80285a6:	bfc8      	it	gt
 80285a8:	f8c9 0000 	strgt.w	r0, [r9]
 80285ac:	683a      	ldr	r2, [r7, #0]
 80285ae:	4290      	cmp	r0, r2
 80285b0:	bfc8      	it	gt
 80285b2:	6038      	strgt	r0, [r7, #0]
 80285b4:	9800      	ldr	r0, [sp, #0]
 80285b6:	f7ff ff41 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80285ba:	a903      	add	r1, sp, #12
 80285bc:	9003      	str	r0, [sp, #12]
 80285be:	4650      	mov	r0, sl
 80285c0:	f7ea f9b4 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285c4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80285c8:	1a10      	subs	r0, r2, r0
 80285ca:	6832      	ldr	r2, [r6, #0]
 80285cc:	4282      	cmp	r2, r0
 80285ce:	bfc8      	it	gt
 80285d0:	6030      	strgt	r0, [r6, #0]
 80285d2:	682a      	ldr	r2, [r5, #0]
 80285d4:	4290      	cmp	r0, r2
 80285d6:	bfc8      	it	gt
 80285d8:	6028      	strgt	r0, [r5, #0]
 80285da:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80285de:	f8d9 1000 	ldr.w	r1, [r9]
 80285e2:	4291      	cmp	r1, r2
 80285e4:	bfc8      	it	gt
 80285e6:	f8c9 2000 	strgt.w	r2, [r9]
 80285ea:	683a      	ldr	r2, [r7, #0]
 80285ec:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80285f0:	429a      	cmp	r2, r3
 80285f2:	bfb8      	it	lt
 80285f4:	603b      	strlt	r3, [r7, #0]
 80285f6:	6832      	ldr	r2, [r6, #0]
 80285f8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80285fc:	429a      	cmp	r2, r3
 80285fe:	bfc8      	it	gt
 8028600:	6033      	strgt	r3, [r6, #0]
 8028602:	682a      	ldr	r2, [r5, #0]
 8028604:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028608:	429a      	cmp	r2, r3
 802860a:	da00      	bge.n	802860e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802860c:	602b      	str	r3, [r5, #0]
 802860e:	b005      	add	sp, #20
 8028610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028614:	2002      	movs	r0, #2
 8028616:	3401      	adds	r4, #1
 8028618:	fb94 f4f0 	sdiv	r4, r4, r0
 802861c:	4610      	mov	r0, r2
 802861e:	9201      	str	r2, [sp, #4]
 8028620:	f7ea fabc 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028624:	a903      	add	r1, sp, #12
 8028626:	9003      	str	r0, [sp, #12]
 8028628:	4650      	mov	r0, sl
 802862a:	f7ea f97f 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802862e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8028632:	9a01      	ldr	r2, [sp, #4]
 8028634:	4408      	add	r0, r1
 8028636:	f8d9 1000 	ldr.w	r1, [r9]
 802863a:	1b03      	subs	r3, r0, r4
 802863c:	4299      	cmp	r1, r3
 802863e:	bfc8      	it	gt
 8028640:	f8c9 3000 	strgt.w	r3, [r9]
 8028644:	6839      	ldr	r1, [r7, #0]
 8028646:	428b      	cmp	r3, r1
 8028648:	bfc8      	it	gt
 802864a:	603b      	strgt	r3, [r7, #0]
 802864c:	f8d9 1000 	ldr.w	r1, [r9]
 8028650:	4420      	add	r0, r4
 8028652:	4281      	cmp	r1, r0
 8028654:	bfc8      	it	gt
 8028656:	f8c9 0000 	strgt.w	r0, [r9]
 802865a:	6839      	ldr	r1, [r7, #0]
 802865c:	4288      	cmp	r0, r1
 802865e:	bfc8      	it	gt
 8028660:	6038      	strgt	r0, [r7, #0]
 8028662:	4610      	mov	r0, r2
 8028664:	f7ff feea 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028668:	a903      	add	r1, sp, #12
 802866a:	9003      	str	r0, [sp, #12]
 802866c:	4650      	mov	r0, sl
 802866e:	f7ea f95d 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028672:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028676:	1a10      	subs	r0, r2, r0
 8028678:	6832      	ldr	r2, [r6, #0]
 802867a:	1b01      	subs	r1, r0, r4
 802867c:	428a      	cmp	r2, r1
 802867e:	bfc8      	it	gt
 8028680:	6031      	strgt	r1, [r6, #0]
 8028682:	682a      	ldr	r2, [r5, #0]
 8028684:	4291      	cmp	r1, r2
 8028686:	bfc8      	it	gt
 8028688:	6029      	strgt	r1, [r5, #0]
 802868a:	6832      	ldr	r2, [r6, #0]
 802868c:	4420      	add	r0, r4
 802868e:	4282      	cmp	r2, r0
 8028690:	bfc8      	it	gt
 8028692:	6030      	strgt	r0, [r6, #0]
 8028694:	682a      	ldr	r2, [r5, #0]
 8028696:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802869a:	4290      	cmp	r0, r2
 802869c:	fb9b f2f1 	sdiv	r2, fp, r1
 80286a0:	fb01 b212 	mls	r2, r1, r2, fp
 80286a4:	eba1 0202 	sub.w	r2, r1, r2
 80286a8:	bfc8      	it	gt
 80286aa:	6028      	strgt	r0, [r5, #0]
 80286ac:	fb92 f0f1 	sdiv	r0, r2, r1
 80286b0:	fb01 2210 	mls	r2, r1, r0, r2
 80286b4:	4493      	add	fp, r2
 80286b6:	9b00      	ldr	r3, [sp, #0]
 80286b8:	455b      	cmp	r3, fp
 80286ba:	db40      	blt.n	802873e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80286bc:	4658      	mov	r0, fp
 80286be:	f7ea fa6d 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286c2:	a903      	add	r1, sp, #12
 80286c4:	9003      	str	r0, [sp, #12]
 80286c6:	4650      	mov	r0, sl
 80286c8:	f7ea f930 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286cc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80286d0:	4410      	add	r0, r2
 80286d2:	f8d9 2000 	ldr.w	r2, [r9]
 80286d6:	1b01      	subs	r1, r0, r4
 80286d8:	428a      	cmp	r2, r1
 80286da:	bfc8      	it	gt
 80286dc:	f8c9 1000 	strgt.w	r1, [r9]
 80286e0:	683a      	ldr	r2, [r7, #0]
 80286e2:	4291      	cmp	r1, r2
 80286e4:	bfc8      	it	gt
 80286e6:	6039      	strgt	r1, [r7, #0]
 80286e8:	f8d9 2000 	ldr.w	r2, [r9]
 80286ec:	4420      	add	r0, r4
 80286ee:	4282      	cmp	r2, r0
 80286f0:	bfc8      	it	gt
 80286f2:	f8c9 0000 	strgt.w	r0, [r9]
 80286f6:	683a      	ldr	r2, [r7, #0]
 80286f8:	4290      	cmp	r0, r2
 80286fa:	bfc8      	it	gt
 80286fc:	6038      	strgt	r0, [r7, #0]
 80286fe:	4658      	mov	r0, fp
 8028700:	f7ff fe9c 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028704:	a903      	add	r1, sp, #12
 8028706:	9003      	str	r0, [sp, #12]
 8028708:	4650      	mov	r0, sl
 802870a:	f7ea f90f 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802870e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028712:	1a10      	subs	r0, r2, r0
 8028714:	6832      	ldr	r2, [r6, #0]
 8028716:	1b01      	subs	r1, r0, r4
 8028718:	428a      	cmp	r2, r1
 802871a:	bfc8      	it	gt
 802871c:	6031      	strgt	r1, [r6, #0]
 802871e:	682a      	ldr	r2, [r5, #0]
 8028720:	4291      	cmp	r1, r2
 8028722:	bfc8      	it	gt
 8028724:	6029      	strgt	r1, [r5, #0]
 8028726:	6832      	ldr	r2, [r6, #0]
 8028728:	4420      	add	r0, r4
 802872a:	4282      	cmp	r2, r0
 802872c:	bfc8      	it	gt
 802872e:	6030      	strgt	r0, [r6, #0]
 8028730:	682a      	ldr	r2, [r5, #0]
 8028732:	4290      	cmp	r0, r2
 8028734:	bfc8      	it	gt
 8028736:	6028      	strgt	r0, [r5, #0]
 8028738:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802873c:	e7bb      	b.n	80286b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802873e:	9b00      	ldr	r3, [sp, #0]
 8028740:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028744:	455b      	cmp	r3, fp
 8028746:	f77f af62 	ble.w	802860e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802874a:	4618      	mov	r0, r3
 802874c:	f7ea fa26 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028750:	a903      	add	r1, sp, #12
 8028752:	9003      	str	r0, [sp, #12]
 8028754:	4650      	mov	r0, sl
 8028756:	f7ea f8e9 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802875a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802875e:	4410      	add	r0, r2
 8028760:	f8d9 2000 	ldr.w	r2, [r9]
 8028764:	1b01      	subs	r1, r0, r4
 8028766:	428a      	cmp	r2, r1
 8028768:	bfc8      	it	gt
 802876a:	f8c9 1000 	strgt.w	r1, [r9]
 802876e:	683a      	ldr	r2, [r7, #0]
 8028770:	4291      	cmp	r1, r2
 8028772:	bfc8      	it	gt
 8028774:	6039      	strgt	r1, [r7, #0]
 8028776:	f8d9 2000 	ldr.w	r2, [r9]
 802877a:	4420      	add	r0, r4
 802877c:	4282      	cmp	r2, r0
 802877e:	bfc8      	it	gt
 8028780:	f8c9 0000 	strgt.w	r0, [r9]
 8028784:	683b      	ldr	r3, [r7, #0]
 8028786:	4298      	cmp	r0, r3
 8028788:	bfc8      	it	gt
 802878a:	6038      	strgt	r0, [r7, #0]
 802878c:	9800      	ldr	r0, [sp, #0]
 802878e:	f7ff fe55 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028792:	a903      	add	r1, sp, #12
 8028794:	9003      	str	r0, [sp, #12]
 8028796:	4650      	mov	r0, sl
 8028798:	f7ea f8c8 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802879c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80287a0:	6832      	ldr	r2, [r6, #0]
 80287a2:	1a18      	subs	r0, r3, r0
 80287a4:	1b03      	subs	r3, r0, r4
 80287a6:	429a      	cmp	r2, r3
 80287a8:	bfc8      	it	gt
 80287aa:	6033      	strgt	r3, [r6, #0]
 80287ac:	682a      	ldr	r2, [r5, #0]
 80287ae:	4293      	cmp	r3, r2
 80287b0:	bfc8      	it	gt
 80287b2:	602b      	strgt	r3, [r5, #0]
 80287b4:	6833      	ldr	r3, [r6, #0]
 80287b6:	4404      	add	r4, r0
 80287b8:	42a3      	cmp	r3, r4
 80287ba:	bfc8      	it	gt
 80287bc:	6034      	strgt	r4, [r6, #0]
 80287be:	682b      	ldr	r3, [r5, #0]
 80287c0:	429c      	cmp	r4, r3
 80287c2:	bfc8      	it	gt
 80287c4:	602c      	strgt	r4, [r5, #0]
 80287c6:	e722      	b.n	802860e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080287c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80287c8:	b530      	push	{r4, r5, lr}
 80287ca:	4604      	mov	r4, r0
 80287cc:	4608      	mov	r0, r1
 80287ce:	4611      	mov	r1, r2
 80287d0:	461a      	mov	r2, r3
 80287d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80287d6:	b089      	sub	sp, #36	; 0x24
 80287d8:	015b      	lsls	r3, r3, #5
 80287da:	9304      	str	r3, [sp, #16]
 80287dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80287e0:	2500      	movs	r5, #0
 80287e2:	015b      	lsls	r3, r3, #5
 80287e4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80287e8:	ab07      	add	r3, sp, #28
 80287ea:	9302      	str	r3, [sp, #8]
 80287ec:	ab06      	add	r3, sp, #24
 80287ee:	9301      	str	r3, [sp, #4]
 80287f0:	ab05      	add	r3, sp, #20
 80287f2:	9300      	str	r3, [sp, #0]
 80287f4:	ab04      	add	r3, sp, #16
 80287f6:	9505      	str	r5, [sp, #20]
 80287f8:	f7ff fe3e 	bl	8028478 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80287fc:	2520      	movs	r5, #32
 80287fe:	9a04      	ldr	r2, [sp, #16]
 8028800:	9805      	ldr	r0, [sp, #20]
 8028802:	fb92 f2f5 	sdiv	r2, r2, r5
 8028806:	fb90 f0f5 	sdiv	r0, r0, r5
 802880a:	b292      	uxth	r2, r2
 802880c:	3002      	adds	r0, #2
 802880e:	1a80      	subs	r0, r0, r2
 8028810:	9b06      	ldr	r3, [sp, #24]
 8028812:	9907      	ldr	r1, [sp, #28]
 8028814:	fb93 f3f5 	sdiv	r3, r3, r5
 8028818:	fb91 f1f5 	sdiv	r1, r1, r5
 802881c:	b29b      	uxth	r3, r3
 802881e:	3102      	adds	r1, #2
 8028820:	1ac9      	subs	r1, r1, r3
 8028822:	3a01      	subs	r2, #1
 8028824:	3b01      	subs	r3, #1
 8028826:	80a0      	strh	r0, [r4, #4]
 8028828:	4620      	mov	r0, r4
 802882a:	8022      	strh	r2, [r4, #0]
 802882c:	8063      	strh	r3, [r4, #2]
 802882e:	80e1      	strh	r1, [r4, #6]
 8028830:	b009      	add	sp, #36	; 0x24
 8028832:	bd30      	pop	{r4, r5, pc}

08028834 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8028834:	b510      	push	{r4, lr}
 8028836:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802883a:	4604      	mov	r4, r0
 802883c:	f7ff ffc4 	bl	80287c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028840:	4620      	mov	r0, r4
 8028842:	bd10      	pop	{r4, pc}

08028844 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8028844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028846:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802884a:	4606      	mov	r6, r0
 802884c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028850:	6813      	ldr	r3, [r2, #0]
 8028852:	42a5      	cmp	r5, r4
 8028854:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028858:	da2b      	bge.n	80288b2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802885a:	42a3      	cmp	r3, r4
 802885c:	dd14      	ble.n	8028888 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802885e:	b168      	cbz	r0, 802887c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028860:	4267      	negs	r7, r4
 8028862:	fb97 f2f0 	sdiv	r2, r7, r0
 8028866:	fb00 7212 	mls	r2, r0, r2, r7
 802886a:	1a82      	subs	r2, r0, r2
 802886c:	fb92 f7f0 	sdiv	r7, r2, r0
 8028870:	fb00 2017 	mls	r0, r0, r7, r2
 8028874:	1a24      	subs	r4, r4, r0
 8028876:	42ac      	cmp	r4, r5
 8028878:	bfb8      	it	lt
 802887a:	462c      	movlt	r4, r5
 802887c:	4630      	mov	r0, r6
 802887e:	4622      	mov	r2, r4
 8028880:	f7ff ffa2 	bl	80287c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028884:	4630      	mov	r0, r6
 8028886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028888:	42ab      	cmp	r3, r5
 802888a:	dd0e      	ble.n	80288aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802888c:	b168      	cbz	r0, 80288aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802888e:	425f      	negs	r7, r3
 8028890:	fb97 f2f0 	sdiv	r2, r7, r0
 8028894:	fb00 7212 	mls	r2, r0, r2, r7
 8028898:	1a82      	subs	r2, r0, r2
 802889a:	fb92 f7f0 	sdiv	r7, r2, r0
 802889e:	fb00 2017 	mls	r0, r0, r7, r2
 80288a2:	1a1b      	subs	r3, r3, r0
 80288a4:	42ab      	cmp	r3, r5
 80288a6:	bfb8      	it	lt
 80288a8:	462b      	movlt	r3, r5
 80288aa:	4622      	mov	r2, r4
 80288ac:	461c      	mov	r4, r3
 80288ae:	4613      	mov	r3, r2
 80288b0:	e7e4      	b.n	802887c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288b2:	42a3      	cmp	r3, r4
 80288b4:	da10      	bge.n	80288d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80288b6:	b148      	cbz	r0, 80288cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80288b8:	fb94 f2f0 	sdiv	r2, r4, r0
 80288bc:	fb00 4212 	mls	r2, r0, r2, r4
 80288c0:	1a82      	subs	r2, r0, r2
 80288c2:	fb92 f7f0 	sdiv	r7, r2, r0
 80288c6:	fb00 2017 	mls	r0, r0, r7, r2
 80288ca:	4404      	add	r4, r0
 80288cc:	42a5      	cmp	r5, r4
 80288ce:	bfa8      	it	ge
 80288d0:	4625      	movge	r5, r4
 80288d2:	461c      	mov	r4, r3
 80288d4:	462b      	mov	r3, r5
 80288d6:	e7d1      	b.n	802887c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288d8:	42ab      	cmp	r3, r5
 80288da:	dacf      	bge.n	802887c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288dc:	2800      	cmp	r0, #0
 80288de:	d0cd      	beq.n	802887c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288e0:	fb93 f2f0 	sdiv	r2, r3, r0
 80288e4:	fb00 3212 	mls	r2, r0, r2, r3
 80288e8:	1a82      	subs	r2, r0, r2
 80288ea:	fb92 f7f0 	sdiv	r7, r2, r0
 80288ee:	fb00 2017 	mls	r0, r0, r7, r2
 80288f2:	4403      	add	r3, r0
 80288f4:	42ab      	cmp	r3, r5
 80288f6:	bfa8      	it	ge
 80288f8:	462b      	movge	r3, r5
 80288fa:	e7bf      	b.n	802887c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080288fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80288fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028900:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8028904:	42ae      	cmp	r6, r5
 8028906:	bfa2      	ittt	ge
 8028908:	4633      	movge	r3, r6
 802890a:	462e      	movge	r6, r5
 802890c:	461d      	movge	r5, r3
 802890e:	1bab      	subs	r3, r5, r6
 8028910:	468b      	mov	fp, r1
 8028912:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8028914:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8028918:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802891c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028920:	f04f 0220 	mov.w	r2, #32
 8028924:	b0ab      	sub	sp, #172	; 0xac
 8028926:	4604      	mov	r4, r0
 8028928:	bfa4      	itt	ge
 802892a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802892e:	2600      	movge	r6, #0
 8028930:	fb99 f9f2 	sdiv	r9, r9, r2
 8028934:	fb9a faf2 	sdiv	sl, sl, r2
 8028938:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802893a:	2900      	cmp	r1, #0
 802893c:	f000 80f5 	beq.w	8028b2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028940:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028944:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028948:	eba9 0700 	sub.w	r7, r9, r0
 802894c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028950:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028954:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028958:	ebaa 0802 	sub.w	r8, sl, r2
 802895c:	4407      	add	r7, r0
 802895e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028962:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028966:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802896a:	b23f      	sxth	r7, r7
 802896c:	4490      	add	r8, r2
 802896e:	eba9 0707 	sub.w	r7, r9, r7
 8028972:	fa0f f888 	sxth.w	r8, r8
 8028976:	ebaa 0808 	sub.w	r8, sl, r8
 802897a:	2f00      	cmp	r7, #0
 802897c:	bfb8      	it	lt
 802897e:	427f      	neglt	r7, r7
 8028980:	f1b8 0f00 	cmp.w	r8, #0
 8028984:	bfb8      	it	lt
 8028986:	f1c8 0800 	rsblt	r8, r8, #0
 802898a:	45bc      	cmp	ip, r7
 802898c:	bfcc      	ite	gt
 802898e:	f10c 0701 	addgt.w	r7, ip, #1
 8028992:	3701      	addle	r7, #1
 8028994:	4540      	cmp	r0, r8
 8028996:	bfc8      	it	gt
 8028998:	f100 0801 	addgt.w	r8, r0, #1
 802899c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80289a0:	f100 0001 	add.w	r0, r0, #1
 80289a4:	ea4f 0060 	mov.w	r0, r0, asr #1
 80289a8:	f04f 0202 	mov.w	r2, #2
 80289ac:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80289b0:	fb91 f1f2 	sdiv	r1, r1, r2
 80289b4:	eba3 0301 	sub.w	r3, r3, r1
 80289b8:	bfd8      	it	le
 80289ba:	f108 0801 	addle.w	r8, r8, #1
 80289be:	9201      	str	r2, [sp, #4]
 80289c0:	930d      	str	r3, [sp, #52]	; 0x34
 80289c2:	f7ea f8cb 	bl	8012b5c <_ZN8touchgfx7CWRUtil4sineEi>
 80289c6:	a92a      	add	r1, sp, #168	; 0xa8
 80289c8:	fb08 f808 	mul.w	r8, r8, r8
 80289cc:	f841 0d70 	str.w	r0, [r1, #-112]!
 80289d0:	a80d      	add	r0, sp, #52	; 0x34
 80289d2:	f7e9 ffab 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80289d6:	fb07 8707 	mla	r7, r7, r7, r8
 80289da:	f04f 0c20 	mov.w	ip, #32
 80289de:	fb90 f0fc 	sdiv	r0, r0, ip
 80289e2:	4340      	muls	r0, r0
 80289e4:	4287      	cmp	r7, r0
 80289e6:	9a01      	ldr	r2, [sp, #4]
 80289e8:	da04      	bge.n	80289f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80289ea:	2401      	movs	r4, #1
 80289ec:	4620      	mov	r0, r4
 80289ee:	b02b      	add	sp, #172	; 0xac
 80289f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289f4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80289f6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80289f8:	fb91 f3f2 	sdiv	r3, r1, r2
 80289fc:	4403      	add	r3, r0
 80289fe:	fb93 f3fc 	sdiv	r3, r3, ip
 8028a02:	f9bb 1000 	ldrsh.w	r1, [fp]
 8028a06:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8028a0a:	440a      	add	r2, r1
 8028a0c:	b212      	sxth	r2, r2
 8028a0e:	454a      	cmp	r2, r9
 8028a10:	bfa8      	it	ge
 8028a12:	464a      	movge	r2, r9
 8028a14:	428a      	cmp	r2, r1
 8028a16:	bfac      	ite	ge
 8028a18:	eba9 0902 	subge.w	r9, r9, r2
 8028a1c:	eba9 0901 	sublt.w	r9, r9, r1
 8028a20:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8028a24:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028a28:	440a      	add	r2, r1
 8028a2a:	b212      	sxth	r2, r2
 8028a2c:	4552      	cmp	r2, sl
 8028a2e:	bfa8      	it	ge
 8028a30:	4652      	movge	r2, sl
 8028a32:	428a      	cmp	r2, r1
 8028a34:	bfac      	ite	ge
 8028a36:	ebaa 0a02 	subge.w	sl, sl, r2
 8028a3a:	ebaa 0a01 	sublt.w	sl, sl, r1
 8028a3e:	3301      	adds	r3, #1
 8028a40:	fb0a fa0a 	mul.w	sl, sl, sl
 8028a44:	fb09 a909 	mla	r9, r9, r9, sl
 8028a48:	435b      	muls	r3, r3
 8028a4a:	4599      	cmp	r9, r3
 8028a4c:	dccd      	bgt.n	80289ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8028a4e:	465a      	mov	r2, fp
 8028a50:	4621      	mov	r1, r4
 8028a52:	a80e      	add	r0, sp, #56	; 0x38
 8028a54:	f7ff faae 	bl	8027fb4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028a58:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8028a5a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028a5c:	9209      	str	r2, [sp, #36]	; 0x24
 8028a5e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028a62:	930a      	str	r3, [sp, #40]	; 0x28
 8028a64:	dd07      	ble.n	8028a76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028a66:	2102      	movs	r1, #2
 8028a68:	fb93 f3f1 	sdiv	r3, r3, r1
 8028a6c:	4413      	add	r3, r2
 8028a6e:	930a      	str	r3, [sp, #40]	; 0x28
 8028a70:	fb93 f3f1 	sdiv	r3, r3, r1
 8028a74:	9309      	str	r3, [sp, #36]	; 0x24
 8028a76:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028a7a:	4630      	mov	r0, r6
 8028a7c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028a80:	930b      	str	r3, [sp, #44]	; 0x2c
 8028a82:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028a86:	f7ea f889 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028a8a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8028a8e:	f04f 0a02 	mov.w	sl, #2
 8028a92:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028a96:	a80b      	add	r0, sp, #44	; 0x2c
 8028a98:	4649      	mov	r1, r9
 8028a9a:	f7e9 ff47 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028a9e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028aa0:	fb90 f0fa 	sdiv	r0, r0, sl
 8028aa4:	eb00 0b03 	add.w	fp, r0, r3
 8028aa8:	4630      	mov	r0, r6
 8028aaa:	f7ff fcc7 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028aae:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8028ab2:	017f      	lsls	r7, r7, #5
 8028ab4:	f848 0d78 	str.w	r0, [r8, #-120]!
 8028ab8:	a80b      	add	r0, sp, #44	; 0x2c
 8028aba:	4641      	mov	r1, r8
 8028abc:	f7e9 ff36 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ac0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028ac2:	fb90 f0fa 	sdiv	r0, r0, sl
 8028ac6:	4659      	mov	r1, fp
 8028ac8:	1a12      	subs	r2, r2, r0
 8028aca:	a80e      	add	r0, sp, #56	; 0x38
 8028acc:	f7ff fbf2 	bl	80282b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8028ad0:	f106 0a20 	add.w	sl, r6, #32
 8028ad4:	bb67      	cbnz	r7, 8028b30 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8028ad6:	46b3      	mov	fp, r6
 8028ad8:	45aa      	cmp	sl, r5
 8028ada:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028adc:	dc33      	bgt.n	8028b46 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8028ade:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028ae0:	4650      	mov	r0, sl
 8028ae2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8028ae6:	920b      	str	r2, [sp, #44]	; 0x2c
 8028ae8:	f7ea f858 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028aec:	4641      	mov	r1, r8
 8028aee:	900c      	str	r0, [sp, #48]	; 0x30
 8028af0:	a80b      	add	r0, sp, #44	; 0x2c
 8028af2:	f7e9 ff1b 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028af6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8028af8:	2302      	movs	r3, #2
 8028afa:	fb90 f0f3 	sdiv	r0, r0, r3
 8028afe:	eb00 0b02 	add.w	fp, r0, r2
 8028b02:	4650      	mov	r0, sl
 8028b04:	f7ff fc9a 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028b08:	4649      	mov	r1, r9
 8028b0a:	900d      	str	r0, [sp, #52]	; 0x34
 8028b0c:	a80b      	add	r0, sp, #44	; 0x2c
 8028b0e:	f7e9 ff0d 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b12:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028b14:	2302      	movs	r3, #2
 8028b16:	4659      	mov	r1, fp
 8028b18:	fb90 f0f3 	sdiv	r0, r0, r3
 8028b1c:	1a12      	subs	r2, r2, r0
 8028b1e:	a80e      	add	r0, sp, #56	; 0x38
 8028b20:	46d3      	mov	fp, sl
 8028b22:	f7ff fc14 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b26:	44ba      	add	sl, r7
 8028b28:	e7d6      	b.n	8028ad8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8028b2a:	fb93 f3f2 	sdiv	r3, r3, r2
 8028b2e:	e768      	b.n	8028a02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028b30:	fb9a f2f7 	sdiv	r2, sl, r7
 8028b34:	fb07 a212 	mls	r2, r7, r2, sl
 8028b38:	1aba      	subs	r2, r7, r2
 8028b3a:	fb92 f1f7 	sdiv	r1, r2, r7
 8028b3e:	fb07 2211 	mls	r2, r7, r1, r2
 8028b42:	4492      	add	sl, r2
 8028b44:	e7c7      	b.n	8028ad6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028b46:	45ab      	cmp	fp, r5
 8028b48:	da23      	bge.n	8028b92 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8028b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028b4c:	4628      	mov	r0, r5
 8028b4e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028b52:	920b      	str	r2, [sp, #44]	; 0x2c
 8028b54:	f7ea f822 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028b58:	4641      	mov	r1, r8
 8028b5a:	900c      	str	r0, [sp, #48]	; 0x30
 8028b5c:	a80b      	add	r0, sp, #44	; 0x2c
 8028b5e:	f7e9 fee5 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028b64:	f04f 0a02 	mov.w	sl, #2
 8028b68:	fb90 f0fa 	sdiv	r0, r0, sl
 8028b6c:	4403      	add	r3, r0
 8028b6e:	4628      	mov	r0, r5
 8028b70:	9301      	str	r3, [sp, #4]
 8028b72:	f7ff fc63 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028b76:	4649      	mov	r1, r9
 8028b78:	900d      	str	r0, [sp, #52]	; 0x34
 8028b7a:	a80b      	add	r0, sp, #44	; 0x2c
 8028b7c:	f7e9 fed6 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028b82:	9b01      	ldr	r3, [sp, #4]
 8028b84:	fb90 f0fa 	sdiv	r0, r0, sl
 8028b88:	4619      	mov	r1, r3
 8028b8a:	1a12      	subs	r2, r2, r0
 8028b8c:	a80e      	add	r0, sp, #56	; 0x38
 8028b8e:	f7ff fbde 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028b94:	b99b      	cbnz	r3, 8028bbe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028b96:	1bad      	subs	r5, r5, r6
 8028b98:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8028b9c:	da04      	bge.n	8028ba8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028b9e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8028ba2:	a80e      	add	r0, sp, #56	; 0x38
 8028ba4:	f7ff fbd3 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028ba8:	21ff      	movs	r1, #255	; 0xff
 8028baa:	a80e      	add	r0, sp, #56	; 0x38
 8028bac:	f7ff fabe 	bl	802812c <_ZN8touchgfx6Canvas6renderEh>
 8028bb0:	4604      	mov	r4, r0
 8028bb2:	4b8a      	ldr	r3, [pc, #552]	; (8028ddc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8028bb4:	930e      	str	r3, [sp, #56]	; 0x38
 8028bb6:	a816      	add	r0, sp, #88	; 0x58
 8028bb8:	f7eb fcf0 	bl	801459c <_ZN8touchgfx7OutlineD1Ev>
 8028bbc:	e716      	b.n	80289ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8028bbe:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8028bc2:	429a      	cmp	r2, r3
 8028bc4:	f0c0 8107 	bcc.w	8028dd6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8028bc8:	1bab      	subs	r3, r5, r6
 8028bca:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8028bce:	9301      	str	r3, [sp, #4]
 8028bd0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028bd4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8028bd8:	da43      	bge.n	8028c62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028bda:	4628      	mov	r0, r5
 8028bdc:	f7e9 ffde 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028be0:	4649      	mov	r1, r9
 8028be2:	900d      	str	r0, [sp, #52]	; 0x34
 8028be4:	a809      	add	r0, sp, #36	; 0x24
 8028be6:	f7e9 fea1 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028bea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028bec:	18c3      	adds	r3, r0, r3
 8028bee:	4628      	mov	r0, r5
 8028bf0:	9303      	str	r3, [sp, #12]
 8028bf2:	f7ff fc23 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028bf6:	4649      	mov	r1, r9
 8028bf8:	900d      	str	r0, [sp, #52]	; 0x34
 8028bfa:	a809      	add	r0, sp, #36	; 0x24
 8028bfc:	f7e9 fe96 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c00:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028c02:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028c06:	1a1b      	subs	r3, r3, r0
 8028c08:	9302      	str	r3, [sp, #8]
 8028c0a:	9204      	str	r2, [sp, #16]
 8028c0c:	eb0a 0305 	add.w	r3, sl, r5
 8028c10:	9a04      	ldr	r2, [sp, #16]
 8028c12:	4293      	cmp	r3, r2
 8028c14:	da25      	bge.n	8028c62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028c16:	4618      	mov	r0, r3
 8028c18:	9306      	str	r3, [sp, #24]
 8028c1a:	f7e9 ffbf 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c1e:	4649      	mov	r1, r9
 8028c20:	900d      	str	r0, [sp, #52]	; 0x34
 8028c22:	a80a      	add	r0, sp, #40	; 0x28
 8028c24:	f7e9 fe82 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c28:	9b03      	ldr	r3, [sp, #12]
 8028c2a:	2202      	movs	r2, #2
 8028c2c:	fb90 f0f2 	sdiv	r0, r0, r2
 8028c30:	18c3      	adds	r3, r0, r3
 8028c32:	9305      	str	r3, [sp, #20]
 8028c34:	9b06      	ldr	r3, [sp, #24]
 8028c36:	9207      	str	r2, [sp, #28]
 8028c38:	4618      	mov	r0, r3
 8028c3a:	f7ff fbff 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c3e:	a92a      	add	r1, sp, #168	; 0xa8
 8028c40:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028c44:	a80a      	add	r0, sp, #40	; 0x28
 8028c46:	f7e9 fe71 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c4a:	9b02      	ldr	r3, [sp, #8]
 8028c4c:	9a07      	ldr	r2, [sp, #28]
 8028c4e:	9905      	ldr	r1, [sp, #20]
 8028c50:	fb90 f2f2 	sdiv	r2, r0, r2
 8028c54:	a80e      	add	r0, sp, #56	; 0x38
 8028c56:	1a9a      	subs	r2, r3, r2
 8028c58:	f7ff fb79 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028c5c:	9b06      	ldr	r3, [sp, #24]
 8028c5e:	4453      	add	r3, sl
 8028c60:	e7d6      	b.n	8028c10 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028c62:	45ab      	cmp	fp, r5
 8028c64:	da25      	bge.n	8028cb2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028c66:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028c6a:	4628      	mov	r0, r5
 8028c6c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028c70:	930b      	str	r3, [sp, #44]	; 0x2c
 8028c72:	f7e9 ff93 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c76:	4641      	mov	r1, r8
 8028c78:	900c      	str	r0, [sp, #48]	; 0x30
 8028c7a:	a80b      	add	r0, sp, #44	; 0x2c
 8028c7c:	f7e9 fe56 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028c82:	2202      	movs	r2, #2
 8028c84:	fb90 f0f2 	sdiv	r0, r0, r2
 8028c88:	eb00 0903 	add.w	r9, r0, r3
 8028c8c:	4628      	mov	r0, r5
 8028c8e:	9202      	str	r2, [sp, #8]
 8028c90:	f7ff fbd4 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c94:	a92a      	add	r1, sp, #168	; 0xa8
 8028c96:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028c9a:	a80b      	add	r0, sp, #44	; 0x2c
 8028c9c:	f7e9 fe46 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ca0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028ca2:	9a02      	ldr	r2, [sp, #8]
 8028ca4:	fb90 f2f2 	sdiv	r2, r0, r2
 8028ca8:	4649      	mov	r1, r9
 8028caa:	1a9a      	subs	r2, r3, r2
 8028cac:	a80e      	add	r0, sp, #56	; 0x38
 8028cae:	f7ff fb4e 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028cb2:	46d9      	mov	r9, fp
 8028cb4:	2502      	movs	r5, #2
 8028cb6:	45b1      	cmp	r9, r6
 8028cb8:	db25      	blt.n	8028d06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8028cba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028cbe:	4648      	mov	r0, r9
 8028cc0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028cc4:	930b      	str	r3, [sp, #44]	; 0x2c
 8028cc6:	f7e9 ff69 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028cca:	4641      	mov	r1, r8
 8028ccc:	900c      	str	r0, [sp, #48]	; 0x30
 8028cce:	a80b      	add	r0, sp, #44	; 0x2c
 8028cd0:	f7e9 fe2c 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028cd6:	fb90 f0f5 	sdiv	r0, r0, r5
 8028cda:	eb00 0b03 	add.w	fp, r0, r3
 8028cde:	4648      	mov	r0, r9
 8028ce0:	f7ff fbac 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028ce4:	a90d      	add	r1, sp, #52	; 0x34
 8028ce6:	900d      	str	r0, [sp, #52]	; 0x34
 8028ce8:	a80b      	add	r0, sp, #44	; 0x2c
 8028cea:	f7e9 fe1f 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028cf0:	fb90 f0f5 	sdiv	r0, r0, r5
 8028cf4:	4659      	mov	r1, fp
 8028cf6:	1a12      	subs	r2, r2, r0
 8028cf8:	a80e      	add	r0, sp, #56	; 0x38
 8028cfa:	46cb      	mov	fp, r9
 8028cfc:	f7ff fb27 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028d00:	eba9 0907 	sub.w	r9, r9, r7
 8028d04:	e7d7      	b.n	8028cb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028d06:	455e      	cmp	r6, fp
 8028d08:	da22      	bge.n	8028d50 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8028d0a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028d0e:	4630      	mov	r0, r6
 8028d10:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028d14:	930b      	str	r3, [sp, #44]	; 0x2c
 8028d16:	f7e9 ff41 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d1a:	4641      	mov	r1, r8
 8028d1c:	900c      	str	r0, [sp, #48]	; 0x30
 8028d1e:	a80b      	add	r0, sp, #44	; 0x2c
 8028d20:	f7e9 fe04 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d24:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028d26:	2502      	movs	r5, #2
 8028d28:	fb90 f0f5 	sdiv	r0, r0, r5
 8028d2c:	4407      	add	r7, r0
 8028d2e:	4630      	mov	r0, r6
 8028d30:	f7ff fb84 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d34:	a92a      	add	r1, sp, #168	; 0xa8
 8028d36:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028d3a:	a80b      	add	r0, sp, #44	; 0x2c
 8028d3c:	f7e9 fdf6 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d40:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028d42:	fb90 f0f5 	sdiv	r0, r0, r5
 8028d46:	4639      	mov	r1, r7
 8028d48:	1a12      	subs	r2, r2, r0
 8028d4a:	a80e      	add	r0, sp, #56	; 0x38
 8028d4c:	f7ff faff 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028d50:	9b01      	ldr	r3, [sp, #4]
 8028d52:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028d56:	f6bf af27 	bge.w	8028ba8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d5a:	4630      	mov	r0, r6
 8028d5c:	f7e9 ff1e 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d60:	ad2a      	add	r5, sp, #168	; 0xa8
 8028d62:	f04f 0b02 	mov.w	fp, #2
 8028d66:	f845 0d74 	str.w	r0, [r5, #-116]!
 8028d6a:	a809      	add	r0, sp, #36	; 0x24
 8028d6c:	4629      	mov	r1, r5
 8028d6e:	f7e9 fddd 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d72:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028d74:	eb00 0903 	add.w	r9, r0, r3
 8028d78:	4630      	mov	r0, r6
 8028d7a:	f7ff fb5f 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d7e:	4629      	mov	r1, r5
 8028d80:	900d      	str	r0, [sp, #52]	; 0x34
 8028d82:	a809      	add	r0, sp, #36	; 0x24
 8028d84:	f7e9 fdd2 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d88:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028d8a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8028d8e:	eba3 0800 	sub.w	r8, r3, r0
 8028d92:	4454      	add	r4, sl
 8028d94:	42a6      	cmp	r6, r4
 8028d96:	f77f af07 	ble.w	8028ba8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d9a:	4620      	mov	r0, r4
 8028d9c:	f7e9 fefe 	bl	8012b9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028da0:	4629      	mov	r1, r5
 8028da2:	900d      	str	r0, [sp, #52]	; 0x34
 8028da4:	a80a      	add	r0, sp, #40	; 0x28
 8028da6:	f7e9 fdc1 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028daa:	fb90 f0fb 	sdiv	r0, r0, fp
 8028dae:	eb00 0709 	add.w	r7, r0, r9
 8028db2:	4620      	mov	r0, r4
 8028db4:	f7ff fb42 	bl	802843c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028db8:	a90c      	add	r1, sp, #48	; 0x30
 8028dba:	900c      	str	r0, [sp, #48]	; 0x30
 8028dbc:	a80a      	add	r0, sp, #40	; 0x28
 8028dbe:	f7e9 fdb5 	bl	801292c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028dc2:	4639      	mov	r1, r7
 8028dc4:	fb90 f2fb 	sdiv	r2, r0, fp
 8028dc8:	a80e      	add	r0, sp, #56	; 0x38
 8028dca:	eba8 0202 	sub.w	r2, r8, r2
 8028dce:	f7ff fabe 	bl	802834e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028dd2:	4454      	add	r4, sl
 8028dd4:	e7de      	b.n	8028d94 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8028dd6:	2400      	movs	r4, #0
 8028dd8:	e6eb      	b.n	8028bb2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8028dda:	bf00      	nop
 8028ddc:	080302e8 	.word	0x080302e8

08028de0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028de0:	b570      	push	{r4, r5, r6, lr}
 8028de2:	790b      	ldrb	r3, [r1, #4]
 8028de4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028de8:	2b00      	cmp	r3, #0
 8028dea:	bf0c      	ite	eq
 8028dec:	2301      	moveq	r3, #1
 8028dee:	2300      	movne	r3, #0
 8028df0:	4604      	mov	r4, r0
 8028df2:	460e      	mov	r6, r1
 8028df4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028df8:	d109      	bne.n	8028e0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028dfa:	b14d      	cbz	r5, 8028e10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028dfc:	7933      	ldrb	r3, [r6, #4]
 8028dfe:	2b01      	cmp	r3, #1
 8028e00:	d10c      	bne.n	8028e1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028e02:	6823      	ldr	r3, [r4, #0]
 8028e04:	4620      	mov	r0, r4
 8028e06:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028e08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028e0c:	4718      	bx	r3
 8028e0e:	b12d      	cbz	r5, 8028e1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028e10:	6823      	ldr	r3, [r4, #0]
 8028e12:	4620      	mov	r0, r4
 8028e14:	695b      	ldr	r3, [r3, #20]
 8028e16:	4798      	blx	r3
 8028e18:	2d00      	cmp	r5, #0
 8028e1a:	d1ef      	bne.n	8028dfc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8028e1c:	bd70      	pop	{r4, r5, r6, pc}

08028e1e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8028e1e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028e22:	4770      	bx	lr

08028e24 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028e24:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028e28:	4770      	bx	lr

08028e2a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8028e2a:	6802      	ldr	r2, [r0, #0]
 8028e2c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e30:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e32:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e36:	4710      	bx	r2

08028e38 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028e38:	6802      	ldr	r2, [r0, #0]
 8028e3a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e3e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e40:	eef0 0a40 	vmov.f32	s1, s0
 8028e44:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e48:	4710      	bx	r2

08028e4a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8028e4a:	6802      	ldr	r2, [r0, #0]
 8028e4c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e50:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e52:	eeb0 1a40 	vmov.f32	s2, s0
 8028e56:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e5a:	4710      	bx	r2

08028e5c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028e5c:	6802      	ldr	r2, [r0, #0]
 8028e5e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e62:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e64:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e68:	4710      	bx	r2

08028e6a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8028e6a:	6802      	ldr	r2, [r0, #0]
 8028e6c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e70:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e72:	eef0 0a40 	vmov.f32	s1, s0
 8028e76:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e7a:	4710      	bx	r2

08028e7c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8028e7c:	6802      	ldr	r2, [r0, #0]
 8028e7e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e82:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e84:	eeb0 1a40 	vmov.f32	s2, s0
 8028e88:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e8c:	4710      	bx	r2

08028e8e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8028e8e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e92:	4770      	bx	lr

08028e94 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028e94:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028e98:	4770      	bx	lr

08028e9a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8028e9a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8028e9e:	4770      	bx	lr

08028ea0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8028ea0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8028ea4:	4770      	bx	lr

08028ea6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8028ea6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8028eaa:	4770      	bx	lr

08028eac <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8028eac:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8028eb0:	4770      	bx	lr

08028eb2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8028eb2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8028eb6:	4770      	bx	lr

08028eb8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028eb8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8028ebc:	4770      	bx	lr

08028ebe <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8028ebe:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8028ec2:	4770      	bx	lr

08028ec4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8028ec4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028ec8:	4770      	bx	lr

08028eca <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028eca:	ee07 2a90 	vmov	s15, r2
 8028ece:	6803      	ldr	r3, [r0, #0]
 8028ed0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8028ed4:	ee07 1a90 	vmov	s15, r1
 8028ed8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028edc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028ee0:	4718      	bx	r3

08028ee2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8028ee2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8028ee6:	4770      	bx	lr

08028ee8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028ee8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028eec:	4770      	bx	lr

08028eee <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028eee:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8028ef2:	4770      	bx	lr

08028ef4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8028ef4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028ef8:	4770      	bx	lr

08028efa <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8028efa:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8028efe:	4770      	bx	lr

08028f00 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028f00:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028f04:	4770      	bx	lr

08028f06 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028f06:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028f0a:	4770      	bx	lr

08028f0c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028f0c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028f10:	4770      	bx	lr

08028f12 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8028f12:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8028f16:	4770      	bx	lr

08028f18 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028f18:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028f1c:	4770      	bx	lr

08028f1e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028f1e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8028f22:	4770      	bx	lr

08028f24 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8028f24:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028f28:	4770      	bx	lr

08028f2a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028f2a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028f2e:	4770      	bx	lr

08028f30 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028f30:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8028f34:	4770      	bx	lr

08028f36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8028f36:	b510      	push	{r4, lr}
 8028f38:	ed2d 8b04 	vpush	{d8-d9}
 8028f3c:	6803      	ldr	r3, [r0, #0]
 8028f3e:	4604      	mov	r4, r0
 8028f40:	699b      	ldr	r3, [r3, #24]
 8028f42:	eeb0 8a40 	vmov.f32	s16, s0
 8028f46:	eef0 8a60 	vmov.f32	s17, s1
 8028f4a:	eeb0 9a41 	vmov.f32	s18, s2
 8028f4e:	4798      	blx	r3
 8028f50:	6823      	ldr	r3, [r4, #0]
 8028f52:	4620      	mov	r0, r4
 8028f54:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028f56:	eeb0 1a49 	vmov.f32	s2, s18
 8028f5a:	eef0 0a68 	vmov.f32	s1, s17
 8028f5e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f62:	4798      	blx	r3
 8028f64:	ecbd 8b04 	vpop	{d8-d9}
 8028f68:	6823      	ldr	r3, [r4, #0]
 8028f6a:	4620      	mov	r0, r4
 8028f6c:	699b      	ldr	r3, [r3, #24]
 8028f6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028f72:	4718      	bx	r3

08028f74 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028f74:	b510      	push	{r4, lr}
 8028f76:	ed2d 8b02 	vpush	{d8}
 8028f7a:	6803      	ldr	r3, [r0, #0]
 8028f7c:	4604      	mov	r4, r0
 8028f7e:	699b      	ldr	r3, [r3, #24]
 8028f80:	eeb0 8a40 	vmov.f32	s16, s0
 8028f84:	4798      	blx	r3
 8028f86:	6823      	ldr	r3, [r4, #0]
 8028f88:	4620      	mov	r0, r4
 8028f8a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8028f8e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f92:	4798      	blx	r3
 8028f94:	ecbd 8b02 	vpop	{d8}
 8028f98:	6823      	ldr	r3, [r4, #0]
 8028f9a:	4620      	mov	r0, r4
 8028f9c:	699b      	ldr	r3, [r3, #24]
 8028f9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028fa2:	4718      	bx	r3

08028fa4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028fa4:	2200      	movs	r2, #0
 8028fa6:	8002      	strh	r2, [r0, #0]
 8028fa8:	8042      	strh	r2, [r0, #2]
 8028faa:	8082      	strh	r2, [r0, #4]
 8028fac:	80c2      	strh	r2, [r0, #6]
 8028fae:	4770      	bx	lr

08028fb0 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028fb0:	4770      	bx	lr

08028fb2 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028fb2:	b510      	push	{r4, lr}
 8028fb4:	2190      	movs	r1, #144	; 0x90
 8028fb6:	4604      	mov	r4, r0
 8028fb8:	f001 ff3f 	bl	802ae3a <_ZdlPvj>
 8028fbc:	4620      	mov	r0, r4
 8028fbe:	bd10      	pop	{r4, pc}

08028fc0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028fc0:	b538      	push	{r3, r4, r5, lr}
 8028fc2:	2500      	movs	r5, #0
 8028fc4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028fc8:	2301      	movs	r3, #1
 8028fca:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028fce:	4b1f      	ldr	r3, [pc, #124]	; (802904c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028fd0:	8085      	strh	r5, [r0, #4]
 8028fd2:	80c5      	strh	r5, [r0, #6]
 8028fd4:	8105      	strh	r5, [r0, #8]
 8028fd6:	8145      	strh	r5, [r0, #10]
 8028fd8:	8185      	strh	r5, [r0, #12]
 8028fda:	81c5      	strh	r5, [r0, #14]
 8028fdc:	8205      	strh	r5, [r0, #16]
 8028fde:	8245      	strh	r5, [r0, #18]
 8028fe0:	61c5      	str	r5, [r0, #28]
 8028fe2:	8405      	strh	r5, [r0, #32]
 8028fe4:	8445      	strh	r5, [r0, #34]	; 0x22
 8028fe6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028fea:	6003      	str	r3, [r0, #0]
 8028fec:	880b      	ldrh	r3, [r1, #0]
 8028fee:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028ff0:	23ff      	movs	r3, #255	; 0xff
 8028ff2:	4604      	mov	r4, r0
 8028ff4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028ff8:	f7eb f96b 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028ffc:	4b14      	ldr	r3, [pc, #80]	; (8029050 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028ffe:	6023      	str	r3, [r4, #0]
 8029000:	2300      	movs	r3, #0
 8029002:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8029006:	4913      	ldr	r1, [pc, #76]	; (8029054 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8029008:	62e3      	str	r3, [r4, #44]	; 0x2c
 802900a:	6323      	str	r3, [r4, #48]	; 0x30
 802900c:	6363      	str	r3, [r4, #52]	; 0x34
 802900e:	63a3      	str	r3, [r4, #56]	; 0x38
 8029010:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029012:	6463      	str	r3, [r4, #68]	; 0x44
 8029014:	64a3      	str	r3, [r4, #72]	; 0x48
 8029016:	6523      	str	r3, [r4, #80]	; 0x50
 8029018:	6563      	str	r3, [r4, #84]	; 0x54
 802901a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802901c:	6623      	str	r3, [r4, #96]	; 0x60
 802901e:	66a3      	str	r3, [r4, #104]	; 0x68
 8029020:	66e3      	str	r3, [r4, #108]	; 0x6c
 8029022:	6763      	str	r3, [r4, #116]	; 0x74
 8029024:	67a3      	str	r3, [r4, #120]	; 0x78
 8029026:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802902a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802902e:	230c      	movs	r3, #12
 8029030:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8029034:	6422      	str	r2, [r4, #64]	; 0x40
 8029036:	64e1      	str	r1, [r4, #76]	; 0x4c
 8029038:	65a1      	str	r1, [r4, #88]	; 0x58
 802903a:	6662      	str	r2, [r4, #100]	; 0x64
 802903c:	6722      	str	r2, [r4, #112]	; 0x70
 802903e:	67e2      	str	r2, [r4, #124]	; 0x7c
 8029040:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8029044:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8029048:	4620      	mov	r0, r4
 802904a:	bd38      	pop	{r3, r4, r5, pc}
 802904c:	0802fd90 	.word	0x0802fd90
 8029050:	08030374 	.word	0x08030374
 8029054:	447a0000 	.word	0x447a0000

08029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8029058:	b570      	push	{r4, r5, r6, lr}
 802905a:	ed2d 8b04 	vpush	{d8-d9}
 802905e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8029062:	add0      	add	r5, sp, #832	; 0x340
 8029064:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8029066:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802906a:	4604      	mov	r4, r0
 802906c:	4628      	mov	r0, r5
 802906e:	f7f1 fa7f 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029072:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8029074:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8029078:	4606      	mov	r6, r0
 802907a:	4628      	mov	r0, r5
 802907c:	f7f1 faac 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029080:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8029084:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8029088:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802908a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802908e:	9312      	str	r3, [sp, #72]	; 0x48
 8029090:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029094:	1c72      	adds	r2, r6, #1
 8029096:	3001      	adds	r0, #1
 8029098:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802909c:	ee07 2a90 	vmov	s15, r2
 80290a0:	ee06 0a90 	vmov	s13, r0
 80290a4:	ee36 6a47 	vsub.f32	s12, s12, s14
 80290a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80290ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80290b0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80290b4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80290b8:	9316      	str	r3, [sp, #88]	; 0x58
 80290ba:	931a      	str	r3, [sp, #104]	; 0x68
 80290bc:	931e      	str	r3, [sp, #120]	; 0x78
 80290be:	2300      	movs	r3, #0
 80290c0:	9320      	str	r3, [sp, #128]	; 0x80
 80290c2:	9321      	str	r3, [sp, #132]	; 0x84
 80290c4:	9322      	str	r3, [sp, #136]	; 0x88
 80290c6:	9324      	str	r3, [sp, #144]	; 0x90
 80290c8:	9325      	str	r3, [sp, #148]	; 0x94
 80290ca:	9326      	str	r3, [sp, #152]	; 0x98
 80290cc:	9328      	str	r3, [sp, #160]	; 0xa0
 80290ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80290d0:	932a      	str	r3, [sp, #168]	; 0xa8
 80290d2:	932c      	str	r3, [sp, #176]	; 0xb0
 80290d4:	932d      	str	r3, [sp, #180]	; 0xb4
 80290d6:	932e      	str	r3, [sp, #184]	; 0xb8
 80290d8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80290dc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80290e0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80290e4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80290e8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80290ec:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80290f0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80290f4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80290f8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80290fc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8029100:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8029104:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8029108:	a830      	add	r0, sp, #192	; 0xc0
 802910a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802910e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8029112:	f000 fc43 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029116:	eeb1 0a49 	vneg.f32	s0, s18
 802911a:	a830      	add	r0, sp, #192	; 0xc0
 802911c:	f000 fd12 	bl	8029b44 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029120:	eeb1 0a68 	vneg.f32	s0, s17
 8029124:	f000 fd1c 	bl	8029b60 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029128:	eeb1 0a48 	vneg.f32	s0, s16
 802912c:	f000 fd27 	bl	8029b7e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029130:	a840      	add	r0, sp, #256	; 0x100
 8029132:	f000 fc33 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029136:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802913a:	a840      	add	r0, sp, #256	; 0x100
 802913c:	f000 fc86 	bl	8029a4c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8029140:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8029144:	f000 fcac 	bl	8029aa0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8029148:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802914c:	f000 fcd1 	bl	8029af2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8029150:	a850      	add	r0, sp, #320	; 0x140
 8029152:	f000 fc23 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029156:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802915a:	a850      	add	r0, sp, #320	; 0x140
 802915c:	f000 fd1e 	bl	8029b9c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8029160:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8029164:	f000 fd26 	bl	8029bb4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8029168:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802916c:	f000 fd2f 	bl	8029bce <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8029170:	a860      	add	r0, sp, #384	; 0x180
 8029172:	f000 fc13 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029176:	eeb0 0a49 	vmov.f32	s0, s18
 802917a:	a860      	add	r0, sp, #384	; 0x180
 802917c:	f000 fce2 	bl	8029b44 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029180:	eeb0 0a68 	vmov.f32	s0, s17
 8029184:	f000 fcec 	bl	8029b60 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029188:	eeb0 0a48 	vmov.f32	s0, s16
 802918c:	f000 fcf7 	bl	8029b7e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029190:	aa50      	add	r2, sp, #320	; 0x140
 8029192:	a960      	add	r1, sp, #384	; 0x180
 8029194:	a8b0      	add	r0, sp, #704	; 0x2c0
 8029196:	f000 fc1b 	bl	80299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802919a:	4628      	mov	r0, r5
 802919c:	aa40      	add	r2, sp, #256	; 0x100
 802919e:	a9b0      	add	r1, sp, #704	; 0x2c0
 80291a0:	f000 fc16 	bl	80299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291a4:	4629      	mov	r1, r5
 80291a6:	aa30      	add	r2, sp, #192	; 0xc0
 80291a8:	a870      	add	r0, sp, #448	; 0x1c0
 80291aa:	f000 fc11 	bl	80299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291ae:	a880      	add	r0, sp, #512	; 0x200
 80291b0:	f000 fbf4 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291b4:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80291b8:	a880      	add	r0, sp, #512	; 0x200
 80291ba:	eeb1 0a40 	vneg.f32	s0, s0
 80291be:	f000 fcc1 	bl	8029b44 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80291c2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80291c6:	a880      	add	r0, sp, #512	; 0x200
 80291c8:	eeb1 0a40 	vneg.f32	s0, s0
 80291cc:	f000 fcc8 	bl	8029b60 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80291d0:	a890      	add	r0, sp, #576	; 0x240
 80291d2:	f000 fbe3 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291d6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80291da:	a890      	add	r0, sp, #576	; 0x240
 80291dc:	f000 fc26 	bl	8029a2c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80291e0:	a8a0      	add	r0, sp, #640	; 0x280
 80291e2:	f000 fbdb 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291e6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80291ea:	a8a0      	add	r0, sp, #640	; 0x280
 80291ec:	f000 fcaa 	bl	8029b44 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80291f0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80291f4:	f000 fcb4 	bl	8029b60 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80291f8:	aa90      	add	r2, sp, #576	; 0x240
 80291fa:	a9a0      	add	r1, sp, #640	; 0x280
 80291fc:	a8b0      	add	r0, sp, #704	; 0x2c0
 80291fe:	f000 fbe7 	bl	80299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029202:	4628      	mov	r0, r5
 8029204:	aa80      	add	r2, sp, #512	; 0x200
 8029206:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029208:	f000 fbe2 	bl	80299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802920c:	4629      	mov	r1, r5
 802920e:	aa70      	add	r2, sp, #448	; 0x1c0
 8029210:	4668      	mov	r0, sp
 8029212:	466d      	mov	r5, sp
 8029214:	f000 fbdc 	bl	80299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029218:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802921a:	ae70      	add	r6, sp, #448	; 0x1c0
 802921c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802921e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029220:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029222:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029224:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029226:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802922a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802922e:	2500      	movs	r5, #0
 8029230:	0129      	lsls	r1, r5, #4
 8029232:	ab20      	add	r3, sp, #128	; 0x80
 8029234:	185e      	adds	r6, r3, r1
 8029236:	ab10      	add	r3, sp, #64	; 0x40
 8029238:	4419      	add	r1, r3
 802923a:	a870      	add	r0, sp, #448	; 0x1c0
 802923c:	f000 fb7e 	bl	802993c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8029240:	3501      	adds	r5, #1
 8029242:	2d04      	cmp	r5, #4
 8029244:	ed86 0a00 	vstr	s0, [r6]
 8029248:	edc6 0a01 	vstr	s1, [r6, #4]
 802924c:	ed86 1a02 	vstr	s2, [r6, #8]
 8029250:	edc6 1a03 	vstr	s3, [r6, #12]
 8029254:	d1ec      	bne.n	8029230 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8029256:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802925a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802925e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8029262:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029266:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802926a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802926e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8029272:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8029276:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802927a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802927e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8029282:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8029286:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802928a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802928e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8029292:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029296:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802929a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802929e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292a2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292a6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80292aa:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80292ae:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80292b2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292b6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80292ba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292be:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80292c2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80292c6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292ca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292ce:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80292d2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80292d6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80292da:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292de:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80292e2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292e6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80292ea:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80292ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80292f2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80292f6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80292fa:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80292fe:	ecbd 8b04 	vpop	{d8-d9}
 8029302:	bd70      	pop	{r4, r5, r6, pc}

08029304 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8029304:	b510      	push	{r4, lr}
 8029306:	4604      	mov	r4, r0
 8029308:	f7ea ffe3 	bl	80142d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802930c:	4620      	mov	r0, r4
 802930e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029312:	f7ff bea1 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029316 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8029316:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802931a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802931e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8029322:	f7ff be99 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029326 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8029326:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802932a:	f7ff be95 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802932e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802932e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8029332:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8029336:	f7ff be8f 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802933a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802933a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802933e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029342:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029346:	bfd8      	it	le
 8029348:	eeb0 0a67 	vmovle.f32	s0, s15
 802934c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8029350:	f7ff be82 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029354 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8029354:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8029358:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802935c:	f7ff be7c 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029360 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8029360:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8029364:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8029368:	f7ff be76 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802936c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802936c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8029370:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8029374:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8029378:	f7ff be6e 	b.w	8029058 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802937c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802937c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029380:	ed2d 8b04 	vpush	{d8-d9}
 8029384:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8029388:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802938c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8029390:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8029394:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029398:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802939c:	bf54      	ite	pl
 802939e:	eeb0 0a69 	vmovpl.f32	s0, s19
 80293a2:	eeb0 0a48 	vmovmi.f32	s0, s16
 80293a6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80293aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293ae:	bfd8      	it	le
 80293b0:	eeb0 0a49 	vmovle.f32	s0, s18
 80293b4:	eef4 8ac0 	vcmpe.f32	s17, s0
 80293b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293bc:	bfd8      	it	le
 80293be:	eeb0 0a68 	vmovle.f32	s0, s17
 80293c2:	460c      	mov	r4, r1
 80293c4:	4607      	mov	r7, r0
 80293c6:	f001 fe4f 	bl	802b068 <floorf>
 80293ca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80293ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293d2:	bf58      	it	pl
 80293d4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80293d8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80293dc:	bf56      	itet	pl
 80293de:	ee10 3a10 	vmovpl	r3, s0
 80293e2:	2600      	movmi	r6, #0
 80293e4:	b21e      	sxthpl	r6, r3
 80293e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293ea:	bfd8      	it	le
 80293ec:	eeb0 8a69 	vmovle.f32	s16, s19
 80293f0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80293f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293f8:	bf58      	it	pl
 80293fa:	eeb0 8a49 	vmovpl.f32	s16, s18
 80293fe:	eef4 8ac8 	vcmpe.f32	s17, s16
 8029402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029406:	bf54      	ite	pl
 8029408:	eeb0 0a68 	vmovpl.f32	s0, s17
 802940c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029410:	f001 fde8 	bl	802afe4 <ceilf>
 8029414:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8029418:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802941c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8029420:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8029424:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8029428:	ee07 8a90 	vmov	s15, r8
 802942c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029430:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029438:	bfd8      	it	le
 802943a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802943e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029442:	bfdc      	itt	le
 8029444:	ee10 3a10 	vmovle	r3, s0
 8029448:	fa0f f883 	sxthle.w	r8, r3
 802944c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029450:	bf54      	ite	pl
 8029452:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029456:	eeb0 0a48 	vmovmi.f32	s0, s16
 802945a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802945e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029462:	bfd8      	it	le
 8029464:	eeb0 0a49 	vmovle.f32	s0, s18
 8029468:	eef4 8ac0 	vcmpe.f32	s17, s0
 802946c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029470:	bfd8      	it	le
 8029472:	eeb0 0a68 	vmovle.f32	s0, s17
 8029476:	f001 fdf7 	bl	802b068 <floorf>
 802947a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802947e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029482:	bf58      	it	pl
 8029484:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8029488:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802948c:	bf56      	itet	pl
 802948e:	ee10 3a10 	vmovpl	r3, s0
 8029492:	2500      	movmi	r5, #0
 8029494:	b21d      	sxthpl	r5, r3
 8029496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802949a:	bfd8      	it	le
 802949c:	eeb0 8a69 	vmovle.f32	s16, s19
 80294a0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80294a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294a8:	bf58      	it	pl
 80294aa:	eeb0 8a49 	vmovpl.f32	s16, s18
 80294ae:	eef4 8ac8 	vcmpe.f32	s17, s16
 80294b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294b6:	bf54      	ite	pl
 80294b8:	eeb0 0a68 	vmovpl.f32	s0, s17
 80294bc:	eeb0 0a48 	vmovmi.f32	s0, s16
 80294c0:	f001 fd90 	bl	802afe4 <ceilf>
 80294c4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80294c8:	803e      	strh	r6, [r7, #0]
 80294ca:	ee07 3a90 	vmov	s15, r3
 80294ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80294d2:	807d      	strh	r5, [r7, #2]
 80294d4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80294d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294dc:	bfd8      	it	le
 80294de:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80294e2:	eba8 0606 	sub.w	r6, r8, r6
 80294e6:	bfdc      	itt	le
 80294e8:	ee10 3a10 	vmovle	r3, s0
 80294ec:	b21b      	sxthle	r3, r3
 80294ee:	1b5d      	subs	r5, r3, r5
 80294f0:	80be      	strh	r6, [r7, #4]
 80294f2:	80fd      	strh	r5, [r7, #6]
 80294f4:	ecbd 8b04 	vpop	{d8-d9}
 80294f8:	4638      	mov	r0, r7
 80294fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080294fe <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80294fe:	b513      	push	{r0, r1, r4, lr}
 8029500:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8029504:	4604      	mov	r4, r0
 8029506:	b143      	cbz	r3, 802951a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8029508:	4601      	mov	r1, r0
 802950a:	4668      	mov	r0, sp
 802950c:	f7ff ff36 	bl	802937c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8029510:	6823      	ldr	r3, [r4, #0]
 8029512:	4669      	mov	r1, sp
 8029514:	691b      	ldr	r3, [r3, #16]
 8029516:	4620      	mov	r0, r4
 8029518:	4798      	blx	r3
 802951a:	b002      	add	sp, #8
 802951c:	bd10      	pop	{r4, pc}

0802951e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802951e:	4603      	mov	r3, r0
 8029520:	3026      	adds	r0, #38	; 0x26
 8029522:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8029526:	b90b      	cbnz	r3, 802952c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8029528:	f7ee bdfa 	b.w	8018120 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802952c:	f7ee be08 	b.w	8018140 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08029530 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8029530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029534:	ed2d 8b04 	vpush	{d8-d9}
 8029538:	4604      	mov	r4, r0
 802953a:	469b      	mov	fp, r3
 802953c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8029540:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8029544:	f9b1 6000 	ldrsh.w	r6, [r1]
 8029548:	8888      	ldrh	r0, [r1, #4]
 802954a:	b0b3      	sub	sp, #204	; 0xcc
 802954c:	4430      	add	r0, r6
 802954e:	b280      	uxth	r0, r0
 8029550:	9206      	str	r2, [sp, #24]
 8029552:	fa0f fe80 	sxth.w	lr, r0
 8029556:	2200      	movs	r2, #0
 8029558:	4596      	cmp	lr, r2
 802955a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802955e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8029562:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8029566:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8029568:	9211      	str	r2, [sp, #68]	; 0x44
 802956a:	f340 8129 	ble.w	80297c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802956e:	45b4      	cmp	ip, r6
 8029570:	f340 8126 	ble.w	80297c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029574:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8029578:	88ca      	ldrh	r2, [r1, #6]
 802957a:	442a      	add	r2, r5
 802957c:	b292      	uxth	r2, r2
 802957e:	b211      	sxth	r1, r2
 8029580:	2900      	cmp	r1, #0
 8029582:	f340 811d 	ble.w	80297c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029586:	42ab      	cmp	r3, r5
 8029588:	f340 811a 	ble.w	80297c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802958c:	45f4      	cmp	ip, lr
 802958e:	bfb8      	it	lt
 8029590:	fa1f f08c 	uxthlt.w	r0, ip
 8029594:	428b      	cmp	r3, r1
 8029596:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802959a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802959e:	bfb8      	it	lt
 80295a0:	b29a      	uxthlt	r2, r3
 80295a2:	1b80      	subs	r0, r0, r6
 80295a4:	1b52      	subs	r2, r2, r5
 80295a6:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80295aa:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80295ae:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80295b2:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80295b6:	ab11      	add	r3, sp, #68	; 0x44
 80295b8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80295bc:	6822      	ldr	r2, [r4, #0]
 80295be:	9307      	str	r3, [sp, #28]
 80295c0:	ad13      	add	r5, sp, #76	; 0x4c
 80295c2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80295c4:	e885 0003 	stmia.w	r5, {r0, r1}
 80295c8:	4629      	mov	r1, r5
 80295ca:	4620      	mov	r0, r4
 80295cc:	4790      	blx	r2
 80295ce:	4621      	mov	r1, r4
 80295d0:	a815      	add	r0, sp, #84	; 0x54
 80295d2:	f7ee fd01 	bl	8017fd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80295d6:	a815      	add	r0, sp, #84	; 0x54
 80295d8:	f7ed f9c6 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80295dc:	9b07      	ldr	r3, [sp, #28]
 80295de:	1d26      	adds	r6, r4, #4
 80295e0:	4618      	mov	r0, r3
 80295e2:	4631      	mov	r1, r6
 80295e4:	f7ed fa04 	bl	80169f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80295e8:	4628      	mov	r0, r5
 80295ea:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80295ee:	f7ed f9bb 	bl	8016968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80295f2:	4628      	mov	r0, r5
 80295f4:	f7f1 f8a8 	bl	801a748 <_ZNK8touchgfx6Bitmap7getDataEv>
 80295f8:	9007      	str	r0, [sp, #28]
 80295fa:	2800      	cmp	r0, #0
 80295fc:	f000 80db 	beq.w	80297b6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8029600:	f8db 2000 	ldr.w	r2, [fp]
 8029604:	9209      	str	r2, [sp, #36]	; 0x24
 8029606:	f8db 2004 	ldr.w	r2, [fp, #4]
 802960a:	920a      	str	r2, [sp, #40]	; 0x28
 802960c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8029610:	920b      	str	r2, [sp, #44]	; 0x2c
 8029612:	f8db 200c 	ldr.w	r2, [fp, #12]
 8029616:	920c      	str	r2, [sp, #48]	; 0x30
 8029618:	f8da 2000 	ldr.w	r2, [sl]
 802961c:	920d      	str	r2, [sp, #52]	; 0x34
 802961e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8029622:	920e      	str	r2, [sp, #56]	; 0x38
 8029624:	f8da 2008 	ldr.w	r2, [sl, #8]
 8029628:	920f      	str	r2, [sp, #60]	; 0x3c
 802962a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802962e:	9210      	str	r2, [sp, #64]	; 0x40
 8029630:	a90d      	add	r1, sp, #52	; 0x34
 8029632:	4632      	mov	r2, r6
 8029634:	a809      	add	r0, sp, #36	; 0x24
 8029636:	f7ed f9bf 	bl	80169b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802963a:	4632      	mov	r2, r6
 802963c:	a90e      	add	r1, sp, #56	; 0x38
 802963e:	a80a      	add	r0, sp, #40	; 0x28
 8029640:	f7ed f9ba 	bl	80169b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029644:	4632      	mov	r2, r6
 8029646:	a90f      	add	r1, sp, #60	; 0x3c
 8029648:	a80b      	add	r0, sp, #44	; 0x2c
 802964a:	f7ed f9b5 	bl	80169b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802964e:	4632      	mov	r2, r6
 8029650:	a910      	add	r1, sp, #64	; 0x40
 8029652:	a80c      	add	r0, sp, #48	; 0x30
 8029654:	f7ed f9b0 	bl	80169b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029658:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802965c:	edd7 4a00 	vldr	s9, [r7]
 8029660:	edd7 5a01 	vldr	s11, [r7, #4]
 8029664:	ed98 4a00 	vldr	s8, [r8]
 8029668:	ed98 5a01 	vldr	s10, [r8, #4]
 802966c:	ed99 9a00 	vldr	s18, [r9]
 8029670:	ed99 8a01 	vldr	s16, [r9, #4]
 8029674:	edd9 8a02 	vldr	s17, [r9, #8]
 8029678:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802967c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8029680:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8029684:	eef0 6a67 	vmov.f32	s13, s15
 8029688:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802968c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8029690:	eeb0 7a67 	vmov.f32	s14, s15
 8029694:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8029698:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802969c:	eeb0 6a67 	vmov.f32	s12, s15
 80296a0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296a4:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80296a8:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80296ac:	ee16 6a10 	vmov	r6, s12
 80296b0:	eeb0 6a67 	vmov.f32	s12, s15
 80296b4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296b8:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80296bc:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80296c0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80296c4:	68ff      	ldr	r7, [r7, #12]
 80296c6:	9624      	str	r6, [sp, #144]	; 0x90
 80296c8:	ee16 0a10 	vmov	r0, s12
 80296cc:	eeb0 6a67 	vmov.f32	s12, s15
 80296d0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296d4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80296d8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80296dc:	ee16 1a10 	vmov	r1, s12
 80296e0:	eeb0 6a67 	vmov.f32	s12, s15
 80296e4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296e8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80296ec:	ee16 2a10 	vmov	r2, s12
 80296f0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80296f4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80296f8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80296fc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8029700:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029704:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8029708:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802970c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8029710:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8029714:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8029718:	922d      	str	r2, [sp, #180]	; 0xb4
 802971a:	4a2b      	ldr	r2, [pc, #172]	; (80297c8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802971c:	9b06      	ldr	r3, [sp, #24]
 802971e:	8812      	ldrh	r2, [r2, #0]
 8029720:	9317      	str	r3, [sp, #92]	; 0x5c
 8029722:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8029726:	9b07      	ldr	r3, [sp, #28]
 8029728:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802972c:	4628      	mov	r0, r5
 802972e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8029732:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8029736:	9218      	str	r2, [sp, #96]	; 0x60
 8029738:	9319      	str	r3, [sp, #100]	; 0x64
 802973a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802973e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8029742:	9731      	str	r7, [sp, #196]	; 0xc4
 8029744:	f7f1 f830 	bl	801a7a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029748:	901a      	str	r0, [sp, #104]	; 0x68
 802974a:	4628      	mov	r0, r5
 802974c:	f7f0 ff10 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029750:	901b      	str	r0, [sp, #108]	; 0x6c
 8029752:	4628      	mov	r0, r5
 8029754:	f7f0 ff40 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029758:	901c      	str	r0, [sp, #112]	; 0x70
 802975a:	4628      	mov	r0, r5
 802975c:	f7f0 ff08 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029760:	eeb4 9a48 	vcmp.f32	s18, s16
 8029764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029768:	901d      	str	r0, [sp, #116]	; 0x74
 802976a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802976e:	d107      	bne.n	8029780 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8029770:	eeb4 8a68 	vcmp.f32	s16, s17
 8029774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029778:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802977c:	bf08      	it	eq
 802977e:	461e      	moveq	r6, r3
 8029780:	4b12      	ldr	r3, [pc, #72]	; (80297cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8029782:	681b      	ldr	r3, [r3, #0]
 8029784:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8029788:	b10a      	cbz	r2, 802978e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802978a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802978c:	b905      	cbnz	r5, 8029790 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802978e:	689d      	ldr	r5, [r3, #8]
 8029790:	682b      	ldr	r3, [r5, #0]
 8029792:	4620      	mov	r0, r4
 8029794:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029796:	f7ff fec2 	bl	802951e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802979a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802979e:	9604      	str	r6, [sp, #16]
 80297a0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80297a4:	ab13      	add	r3, sp, #76	; 0x4c
 80297a6:	9301      	str	r3, [sp, #4]
 80297a8:	ab15      	add	r3, sp, #84	; 0x54
 80297aa:	9300      	str	r3, [sp, #0]
 80297ac:	aa1e      	add	r2, sp, #120	; 0x78
 80297ae:	ab19      	add	r3, sp, #100	; 0x64
 80297b0:	a917      	add	r1, sp, #92	; 0x5c
 80297b2:	4628      	mov	r0, r5
 80297b4:	47b8      	blx	r7
 80297b6:	b033      	add	sp, #204	; 0xcc
 80297b8:	ecbd 8b04 	vpop	{d8-d9}
 80297bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80297c0:	2300      	movs	r3, #0
 80297c2:	9312      	str	r3, [sp, #72]	; 0x48
 80297c4:	e6f7      	b.n	80295b6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80297c6:	bf00      	nop
 80297c8:	2001382e 	.word	0x2001382e
 80297cc:	20013834 	.word	0x20013834

080297d0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80297d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297d4:	ed2d 8b02 	vpush	{d8}
 80297d8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80297dc:	b098      	sub	sp, #96	; 0x60
 80297de:	4604      	mov	r4, r0
 80297e0:	4688      	mov	r8, r1
 80297e2:	2b00      	cmp	r3, #0
 80297e4:	d077      	beq.n	80298d6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80297e6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80297ea:	4628      	mov	r0, r5
 80297ec:	f7f0 fec0 	bl	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80297f0:	ee07 0a90 	vmov	s15, r0
 80297f4:	4628      	mov	r0, r5
 80297f6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80297fa:	f7f0 feed 	bl	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80297fe:	4b4e      	ldr	r3, [pc, #312]	; (8029938 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8029800:	781b      	ldrb	r3, [r3, #0]
 8029802:	ee07 0a90 	vmov	s15, r0
 8029806:	2b01      	cmp	r3, #1
 8029808:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802980c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8029810:	d066      	beq.n	80298e0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8029812:	eeb0 6a47 	vmov.f32	s12, s14
 8029816:	ee17 3a10 	vmov	r3, s14
 802981a:	eeb0 4a48 	vmov.f32	s8, s16
 802981e:	eeb0 7a48 	vmov.f32	s14, s16
 8029822:	eef0 4a67 	vmov.f32	s9, s15
 8029826:	eeb0 8a67 	vmov.f32	s16, s15
 802982a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802982e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8029832:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8029836:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802983a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802983e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8029842:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8029844:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8029846:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029848:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802984c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029850:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029854:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029858:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802985c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029860:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8029864:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8029868:	eee1 6a21 	vfma.f32	s13, s2, s3
 802986c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029874:	dd3d      	ble.n	80298f2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029876:	ed8d 5a04 	vstr	s10, [sp, #16]
 802987a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802987e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029882:	f8cd c01c 	str.w	ip, [sp, #28]
 8029886:	edcd 5a08 	vstr	s11, [sp, #32]
 802988a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802988e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029892:	970b      	str	r7, [sp, #44]	; 0x2c
 8029894:	960c      	str	r6, [sp, #48]	; 0x30
 8029896:	950d      	str	r5, [sp, #52]	; 0x34
 8029898:	920e      	str	r2, [sp, #56]	; 0x38
 802989a:	900f      	str	r0, [sp, #60]	; 0x3c
 802989c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80298a0:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80298a4:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80298a8:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80298ac:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80298b0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80298b4:	9316      	str	r3, [sp, #88]	; 0x58
 80298b6:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80298ba:	ab14      	add	r3, sp, #80	; 0x50
 80298bc:	9303      	str	r3, [sp, #12]
 80298be:	ab10      	add	r3, sp, #64	; 0x40
 80298c0:	9302      	str	r3, [sp, #8]
 80298c2:	ab0c      	add	r3, sp, #48	; 0x30
 80298c4:	9301      	str	r3, [sp, #4]
 80298c6:	ab08      	add	r3, sp, #32
 80298c8:	9300      	str	r3, [sp, #0]
 80298ca:	2200      	movs	r2, #0
 80298cc:	ab04      	add	r3, sp, #16
 80298ce:	4641      	mov	r1, r8
 80298d0:	4620      	mov	r0, r4
 80298d2:	f7ff fe2d 	bl	8029530 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80298d6:	b018      	add	sp, #96	; 0x60
 80298d8:	ecbd 8b02 	vpop	{d8}
 80298dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80298e0:	eeb0 6a48 	vmov.f32	s12, s16
 80298e4:	eef0 4a47 	vmov.f32	s9, s14
 80298e8:	ee17 3a90 	vmov	r3, s15
 80298ec:	eeb0 4a67 	vmov.f32	s8, s15
 80298f0:	e79b      	b.n	802982a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80298f2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80298f6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80298fa:	f8cd c018 	str.w	ip, [sp, #24]
 80298fe:	edcd 2a07 	vstr	s5, [sp, #28]
 8029902:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8029906:	ed8d 3a08 	vstr	s6, [sp, #32]
 802990a:	970a      	str	r7, [sp, #40]	; 0x28
 802990c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8029910:	960d      	str	r6, [sp, #52]	; 0x34
 8029912:	950c      	str	r5, [sp, #48]	; 0x30
 8029914:	900e      	str	r0, [sp, #56]	; 0x38
 8029916:	920f      	str	r2, [sp, #60]	; 0x3c
 8029918:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802991c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029920:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8029924:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029928:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802992c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029930:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029934:	9317      	str	r3, [sp, #92]	; 0x5c
 8029936:	e7c0      	b.n	80298ba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029938:	2001382c 	.word	0x2001382c

0802993c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802993c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802993e:	b08d      	sub	sp, #52	; 0x34
 8029940:	2300      	movs	r3, #0
 8029942:	9304      	str	r3, [sp, #16]
 8029944:	9305      	str	r3, [sp, #20]
 8029946:	9306      	str	r3, [sp, #24]
 8029948:	aa04      	add	r2, sp, #16
 802994a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802994e:	9307      	str	r3, [sp, #28]
 8029950:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029954:	4613      	mov	r3, r2
 8029956:	f101 0710 	add.w	r7, r1, #16
 802995a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029998 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802995e:	460c      	mov	r4, r1
 8029960:	4605      	mov	r5, r0
 8029962:	ecb4 7a01 	vldmia	r4!, {s14}
 8029966:	ecf5 6a01 	vldmia	r5!, {s13}
 802996a:	42bc      	cmp	r4, r7
 802996c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029970:	d1f7      	bne.n	8029962 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029972:	3010      	adds	r0, #16
 8029974:	42b0      	cmp	r0, r6
 8029976:	ece2 7a01 	vstmia	r2!, {s15}
 802997a:	d1ee      	bne.n	802995a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802997c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802997e:	ac0c      	add	r4, sp, #48	; 0x30
 8029980:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029984:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029988:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802998c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029990:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029994:	b00d      	add	sp, #52	; 0x34
 8029996:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029998:	00000000 	.word	0x00000000

0802999c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802999c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80299cc <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80299a0:	2300      	movs	r3, #0
 80299a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80299a6:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80299aa:	2200      	movs	r2, #0
 80299ac:	4293      	cmp	r3, r2
 80299ae:	f102 0201 	add.w	r2, r2, #1
 80299b2:	bf14      	ite	ne
 80299b4:	eef0 6a47 	vmovne.f32	s13, s14
 80299b8:	eef0 6a67 	vmoveq.f32	s13, s15
 80299bc:	2a04      	cmp	r2, #4
 80299be:	ece1 6a01 	vstmia	r1!, {s13}
 80299c2:	d1f3      	bne.n	80299ac <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80299c4:	3301      	adds	r3, #1
 80299c6:	2b04      	cmp	r3, #4
 80299c8:	d1ed      	bne.n	80299a6 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80299ca:	4770      	bx	lr
 80299cc:	00000000 	.word	0x00000000

080299d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80299d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299d4:	460c      	mov	r4, r1
 80299d6:	4605      	mov	r5, r0
 80299d8:	4690      	mov	r8, r2
 80299da:	f7ff ffdf 	bl	802999c <_ZN8touchgfx9Matrix4x4C1Ev>
 80299de:	4628      	mov	r0, r5
 80299e0:	4621      	mov	r1, r4
 80299e2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80299e6:	2300      	movs	r3, #0
 80299e8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029a28 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80299ec:	eb08 0603 	add.w	r6, r8, r3
 80299f0:	460f      	mov	r7, r1
 80299f2:	2400      	movs	r4, #0
 80299f4:	4632      	mov	r2, r6
 80299f6:	ecf7 6a01 	vldmia	r7!, {s13}
 80299fa:	ed92 7a00 	vldr	s14, [r2]
 80299fe:	3401      	adds	r4, #1
 8029a00:	2c04      	cmp	r4, #4
 8029a02:	f106 0610 	add.w	r6, r6, #16
 8029a06:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029a0a:	d1f3      	bne.n	80299f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8029a0c:	18c2      	adds	r2, r0, r3
 8029a0e:	3304      	adds	r3, #4
 8029a10:	2b10      	cmp	r3, #16
 8029a12:	edc2 7a00 	vstr	s15, [r2]
 8029a16:	d1e7      	bne.n	80299e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8029a18:	3110      	adds	r1, #16
 8029a1a:	4561      	cmp	r1, ip
 8029a1c:	f100 0010 	add.w	r0, r0, #16
 8029a20:	d1e1      	bne.n	80299e6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8029a22:	4628      	mov	r0, r5
 8029a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a28:	00000000 	.word	0x00000000

08029a2c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8029a2c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029a30:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029a34:	f100 0320 	add.w	r3, r0, #32
 8029a38:	3030      	adds	r0, #48	; 0x30
 8029a3a:	ecf3 7a01 	vldmia	r3!, {s15}
 8029a3e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029a42:	4283      	cmp	r3, r0
 8029a44:	edc3 7a03 	vstr	s15, [r3, #12]
 8029a48:	d1f7      	bne.n	8029a3a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8029a4a:	4770      	bx	lr

08029a4c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8029a4c:	b510      	push	{r4, lr}
 8029a4e:	ed2d 8b02 	vpush	{d8}
 8029a52:	4604      	mov	r4, r0
 8029a54:	eef0 8a40 	vmov.f32	s17, s0
 8029a58:	f001 fa7a 	bl	802af50 <sinf>
 8029a5c:	eeb0 8a40 	vmov.f32	s16, s0
 8029a60:	eeb0 0a68 	vmov.f32	s0, s17
 8029a64:	f001 fa30 	bl	802aec8 <cosf>
 8029a68:	f104 0310 	add.w	r3, r4, #16
 8029a6c:	f104 0220 	add.w	r2, r4, #32
 8029a70:	eeb1 6a48 	vneg.f32	s12, s16
 8029a74:	edd3 7a04 	vldr	s15, [r3, #16]
 8029a78:	edd3 6a00 	vldr	s13, [r3]
 8029a7c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029a80:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029a84:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029a88:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029a8c:	eca3 7a01 	vstmia	r3!, {s14}
 8029a90:	429a      	cmp	r2, r3
 8029a92:	edc3 7a03 	vstr	s15, [r3, #12]
 8029a96:	d1ed      	bne.n	8029a74 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029a98:	ecbd 8b02 	vpop	{d8}
 8029a9c:	4620      	mov	r0, r4
 8029a9e:	bd10      	pop	{r4, pc}

08029aa0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8029aa0:	b510      	push	{r4, lr}
 8029aa2:	ed2d 8b02 	vpush	{d8}
 8029aa6:	4604      	mov	r4, r0
 8029aa8:	eef0 8a40 	vmov.f32	s17, s0
 8029aac:	f001 fa50 	bl	802af50 <sinf>
 8029ab0:	eeb0 8a40 	vmov.f32	s16, s0
 8029ab4:	eeb0 0a68 	vmov.f32	s0, s17
 8029ab8:	f001 fa06 	bl	802aec8 <cosf>
 8029abc:	4623      	mov	r3, r4
 8029abe:	f104 0210 	add.w	r2, r4, #16
 8029ac2:	eeb1 6a48 	vneg.f32	s12, s16
 8029ac6:	edd3 7a08 	vldr	s15, [r3, #32]
 8029aca:	edd3 6a00 	vldr	s13, [r3]
 8029ace:	ee27 7a88 	vmul.f32	s14, s15, s16
 8029ad2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029ad6:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029ada:	eee6 7a26 	vfma.f32	s15, s12, s13
 8029ade:	eca3 7a01 	vstmia	r3!, {s14}
 8029ae2:	429a      	cmp	r2, r3
 8029ae4:	edc3 7a07 	vstr	s15, [r3, #28]
 8029ae8:	d1ed      	bne.n	8029ac6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8029aea:	ecbd 8b02 	vpop	{d8}
 8029aee:	4620      	mov	r0, r4
 8029af0:	bd10      	pop	{r4, pc}

08029af2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8029af2:	b510      	push	{r4, lr}
 8029af4:	ed2d 8b02 	vpush	{d8}
 8029af8:	4604      	mov	r4, r0
 8029afa:	eef0 8a40 	vmov.f32	s17, s0
 8029afe:	f001 fa27 	bl	802af50 <sinf>
 8029b02:	eeb0 8a40 	vmov.f32	s16, s0
 8029b06:	eeb0 0a68 	vmov.f32	s0, s17
 8029b0a:	f001 f9dd 	bl	802aec8 <cosf>
 8029b0e:	4623      	mov	r3, r4
 8029b10:	f104 0210 	add.w	r2, r4, #16
 8029b14:	eeb1 6a48 	vneg.f32	s12, s16
 8029b18:	edd3 7a04 	vldr	s15, [r3, #16]
 8029b1c:	edd3 6a00 	vldr	s13, [r3]
 8029b20:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029b24:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029b28:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029b2c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029b30:	eca3 7a01 	vstmia	r3!, {s14}
 8029b34:	429a      	cmp	r2, r3
 8029b36:	edc3 7a03 	vstr	s15, [r3, #12]
 8029b3a:	d1ed      	bne.n	8029b18 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8029b3c:	ecbd 8b02 	vpop	{d8}
 8029b40:	4620      	mov	r0, r4
 8029b42:	bd10      	pop	{r4, pc}

08029b44 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029b44:	4603      	mov	r3, r0
 8029b46:	f100 0210 	add.w	r2, r0, #16
 8029b4a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8029b4e:	edd3 7a00 	vldr	s15, [r3]
 8029b52:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b56:	ece3 7a01 	vstmia	r3!, {s15}
 8029b5a:	4293      	cmp	r3, r2
 8029b5c:	d1f5      	bne.n	8029b4a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8029b5e:	4770      	bx	lr

08029b60 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029b60:	f100 0310 	add.w	r3, r0, #16
 8029b64:	f100 0220 	add.w	r2, r0, #32
 8029b68:	ed93 7a08 	vldr	s14, [r3, #32]
 8029b6c:	edd3 7a00 	vldr	s15, [r3]
 8029b70:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b74:	ece3 7a01 	vstmia	r3!, {s15}
 8029b78:	4293      	cmp	r3, r2
 8029b7a:	d1f5      	bne.n	8029b68 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8029b7c:	4770      	bx	lr

08029b7e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8029b7e:	f100 0320 	add.w	r3, r0, #32
 8029b82:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029b86:	ed93 7a04 	vldr	s14, [r3, #16]
 8029b8a:	edd3 7a00 	vldr	s15, [r3]
 8029b8e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b92:	ece3 7a01 	vstmia	r3!, {s15}
 8029b96:	4293      	cmp	r3, r2
 8029b98:	d1f5      	bne.n	8029b86 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8029b9a:	4770      	bx	lr

08029b9c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8029b9c:	4603      	mov	r3, r0
 8029b9e:	f100 0210 	add.w	r2, r0, #16
 8029ba2:	edd3 7a00 	vldr	s15, [r3]
 8029ba6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029baa:	ece3 7a01 	vstmia	r3!, {s15}
 8029bae:	4293      	cmp	r3, r2
 8029bb0:	d1f7      	bne.n	8029ba2 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8029bb2:	4770      	bx	lr

08029bb4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8029bb4:	f100 0310 	add.w	r3, r0, #16
 8029bb8:	f100 0220 	add.w	r2, r0, #32
 8029bbc:	edd3 7a00 	vldr	s15, [r3]
 8029bc0:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029bc4:	ece3 7a01 	vstmia	r3!, {s15}
 8029bc8:	4293      	cmp	r3, r2
 8029bca:	d1f7      	bne.n	8029bbc <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8029bcc:	4770      	bx	lr

08029bce <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8029bce:	f100 0320 	add.w	r3, r0, #32
 8029bd2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029bd6:	edd3 7a00 	vldr	s15, [r3]
 8029bda:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029bde:	ece3 7a01 	vstmia	r3!, {s15}
 8029be2:	4293      	cmp	r3, r2
 8029be4:	d1f7      	bne.n	8029bd6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8029be6:	4770      	bx	lr

08029be8 <arm_max_f32>:
 8029be8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029bec:	1e4f      	subs	r7, r1, #1
 8029bee:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8029bf2:	f100 0e04 	add.w	lr, r0, #4
 8029bf6:	edd0 7a00 	vldr	s15, [r0]
 8029bfa:	d058      	beq.n	8029cae <arm_max_f32+0xc6>
 8029bfc:	3014      	adds	r0, #20
 8029bfe:	46c4      	mov	ip, r8
 8029c00:	2604      	movs	r6, #4
 8029c02:	2400      	movs	r4, #0
 8029c04:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029c08:	ed50 6a03 	vldr	s13, [r0, #-12]
 8029c0c:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029c10:	ed50 5a01 	vldr	s11, [r0, #-4]
 8029c14:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c1c:	bfc8      	it	gt
 8029c1e:	eef0 7a46 	vmovgt.f32	s15, s12
 8029c22:	f1a6 0503 	sub.w	r5, r6, #3
 8029c26:	eef4 7ae6 	vcmpe.f32	s15, s13
 8029c2a:	bfc8      	it	gt
 8029c2c:	462c      	movgt	r4, r5
 8029c2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c32:	bf48      	it	mi
 8029c34:	eef0 7a66 	vmovmi.f32	s15, s13
 8029c38:	f1a6 0502 	sub.w	r5, r6, #2
 8029c3c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029c40:	bf48      	it	mi
 8029c42:	462c      	movmi	r4, r5
 8029c44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c48:	bf48      	it	mi
 8029c4a:	eef0 7a47 	vmovmi.f32	s15, s14
 8029c4e:	f106 35ff 	add.w	r5, r6, #4294967295
 8029c52:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029c56:	bf48      	it	mi
 8029c58:	462c      	movmi	r4, r5
 8029c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c5e:	bf48      	it	mi
 8029c60:	4634      	movmi	r4, r6
 8029c62:	bf48      	it	mi
 8029c64:	eef0 7a65 	vmovmi.f32	s15, s11
 8029c68:	f1bc 0c01 	subs.w	ip, ip, #1
 8029c6c:	f106 0604 	add.w	r6, r6, #4
 8029c70:	f100 0010 	add.w	r0, r0, #16
 8029c74:	d1c6      	bne.n	8029c04 <arm_max_f32+0x1c>
 8029c76:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8029c7a:	f017 0003 	ands.w	r0, r7, #3
 8029c7e:	d018      	beq.n	8029cb2 <arm_max_f32+0xca>
 8029c80:	1a08      	subs	r0, r1, r0
 8029c82:	ecbe 7a01 	vldmia	lr!, {s14}
 8029c86:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c8e:	bfc8      	it	gt
 8029c90:	4604      	movgt	r4, r0
 8029c92:	f100 0001 	add.w	r0, r0, #1
 8029c96:	bfd8      	it	le
 8029c98:	eeb0 7a67 	vmovle.f32	s14, s15
 8029c9c:	4288      	cmp	r0, r1
 8029c9e:	eef0 7a47 	vmov.f32	s15, s14
 8029ca2:	d1ee      	bne.n	8029c82 <arm_max_f32+0x9a>
 8029ca4:	ed82 7a00 	vstr	s14, [r2]
 8029ca8:	601c      	str	r4, [r3, #0]
 8029caa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029cae:	4644      	mov	r4, r8
 8029cb0:	e7e3      	b.n	8029c7a <arm_max_f32+0x92>
 8029cb2:	eeb0 7a67 	vmov.f32	s14, s15
 8029cb6:	e7f5      	b.n	8029ca4 <arm_max_f32+0xbc>

08029cb8 <arm_rfft_fast_init_f32>:
 8029cb8:	084b      	lsrs	r3, r1, #1
 8029cba:	2b80      	cmp	r3, #128	; 0x80
 8029cbc:	b410      	push	{r4}
 8029cbe:	8201      	strh	r1, [r0, #16]
 8029cc0:	8003      	strh	r3, [r0, #0]
 8029cc2:	d047      	beq.n	8029d54 <arm_rfft_fast_init_f32+0x9c>
 8029cc4:	d917      	bls.n	8029cf6 <arm_rfft_fast_init_f32+0x3e>
 8029cc6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029cca:	d03d      	beq.n	8029d48 <arm_rfft_fast_init_f32+0x90>
 8029ccc:	d929      	bls.n	8029d22 <arm_rfft_fast_init_f32+0x6a>
 8029cce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8029cd2:	d020      	beq.n	8029d16 <arm_rfft_fast_init_f32+0x5e>
 8029cd4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8029cd8:	d113      	bne.n	8029d02 <arm_rfft_fast_init_f32+0x4a>
 8029cda:	4921      	ldr	r1, [pc, #132]	; (8029d60 <arm_rfft_fast_init_f32+0xa8>)
 8029cdc:	4a21      	ldr	r2, [pc, #132]	; (8029d64 <arm_rfft_fast_init_f32+0xac>)
 8029cde:	4b22      	ldr	r3, [pc, #136]	; (8029d68 <arm_rfft_fast_init_f32+0xb0>)
 8029ce0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8029ce4:	8184      	strh	r4, [r0, #12]
 8029ce6:	6081      	str	r1, [r0, #8]
 8029ce8:	6042      	str	r2, [r0, #4]
 8029cea:	6143      	str	r3, [r0, #20]
 8029cec:	2000      	movs	r0, #0
 8029cee:	b240      	sxtb	r0, r0
 8029cf0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029cf4:	4770      	bx	lr
 8029cf6:	2b20      	cmp	r3, #32
 8029cf8:	d01c      	beq.n	8029d34 <arm_rfft_fast_init_f32+0x7c>
 8029cfa:	2b40      	cmp	r3, #64	; 0x40
 8029cfc:	d006      	beq.n	8029d0c <arm_rfft_fast_init_f32+0x54>
 8029cfe:	2b10      	cmp	r3, #16
 8029d00:	d01d      	beq.n	8029d3e <arm_rfft_fast_init_f32+0x86>
 8029d02:	20ff      	movs	r0, #255	; 0xff
 8029d04:	b240      	sxtb	r0, r0
 8029d06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029d0a:	4770      	bx	lr
 8029d0c:	2438      	movs	r4, #56	; 0x38
 8029d0e:	4917      	ldr	r1, [pc, #92]	; (8029d6c <arm_rfft_fast_init_f32+0xb4>)
 8029d10:	4a17      	ldr	r2, [pc, #92]	; (8029d70 <arm_rfft_fast_init_f32+0xb8>)
 8029d12:	4b18      	ldr	r3, [pc, #96]	; (8029d74 <arm_rfft_fast_init_f32+0xbc>)
 8029d14:	e7e6      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d16:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8029d1a:	4917      	ldr	r1, [pc, #92]	; (8029d78 <arm_rfft_fast_init_f32+0xc0>)
 8029d1c:	4a17      	ldr	r2, [pc, #92]	; (8029d7c <arm_rfft_fast_init_f32+0xc4>)
 8029d1e:	4b18      	ldr	r3, [pc, #96]	; (8029d80 <arm_rfft_fast_init_f32+0xc8>)
 8029d20:	e7e0      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d22:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029d26:	d1ec      	bne.n	8029d02 <arm_rfft_fast_init_f32+0x4a>
 8029d28:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8029d2c:	4915      	ldr	r1, [pc, #84]	; (8029d84 <arm_rfft_fast_init_f32+0xcc>)
 8029d2e:	4a16      	ldr	r2, [pc, #88]	; (8029d88 <arm_rfft_fast_init_f32+0xd0>)
 8029d30:	4b16      	ldr	r3, [pc, #88]	; (8029d8c <arm_rfft_fast_init_f32+0xd4>)
 8029d32:	e7d7      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d34:	2430      	movs	r4, #48	; 0x30
 8029d36:	4916      	ldr	r1, [pc, #88]	; (8029d90 <arm_rfft_fast_init_f32+0xd8>)
 8029d38:	4a16      	ldr	r2, [pc, #88]	; (8029d94 <arm_rfft_fast_init_f32+0xdc>)
 8029d3a:	4b17      	ldr	r3, [pc, #92]	; (8029d98 <arm_rfft_fast_init_f32+0xe0>)
 8029d3c:	e7d2      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d3e:	2414      	movs	r4, #20
 8029d40:	4916      	ldr	r1, [pc, #88]	; (8029d9c <arm_rfft_fast_init_f32+0xe4>)
 8029d42:	4a17      	ldr	r2, [pc, #92]	; (8029da0 <arm_rfft_fast_init_f32+0xe8>)
 8029d44:	4b17      	ldr	r3, [pc, #92]	; (8029da4 <arm_rfft_fast_init_f32+0xec>)
 8029d46:	e7cd      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d48:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8029d4c:	4916      	ldr	r1, [pc, #88]	; (8029da8 <arm_rfft_fast_init_f32+0xf0>)
 8029d4e:	4a17      	ldr	r2, [pc, #92]	; (8029dac <arm_rfft_fast_init_f32+0xf4>)
 8029d50:	4b17      	ldr	r3, [pc, #92]	; (8029db0 <arm_rfft_fast_init_f32+0xf8>)
 8029d52:	e7c7      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d54:	24d0      	movs	r4, #208	; 0xd0
 8029d56:	4917      	ldr	r1, [pc, #92]	; (8029db4 <arm_rfft_fast_init_f32+0xfc>)
 8029d58:	4a17      	ldr	r2, [pc, #92]	; (8029db8 <arm_rfft_fast_init_f32+0x100>)
 8029d5a:	4b18      	ldr	r3, [pc, #96]	; (8029dbc <arm_rfft_fast_init_f32+0x104>)
 8029d5c:	e7c2      	b.n	8029ce4 <arm_rfft_fast_init_f32+0x2c>
 8029d5e:	bf00      	nop
 8029d60:	0803f288 	.word	0x0803f288
 8029d64:	08030480 	.word	0x08030480
 8029d68:	080365f0 	.word	0x080365f0
 8029d6c:	08034580 	.word	0x08034580
 8029d70:	08041048 	.word	0x08041048
 8029d74:	08043538 	.word	0x08043538
 8029d78:	0803cf70 	.word	0x0803cf70
 8029d7c:	0803ae70 	.word	0x0803ae70
 8029d80:	080345f0 	.word	0x080345f0
 8029d84:	080431c8 	.word	0x080431c8
 8029d88:	0803a5f0 	.word	0x0803a5f0
 8029d8c:	08041248 	.word	0x08041248
 8029d90:	0803de28 	.word	0x0803de28
 8029d94:	0803ce70 	.word	0x0803ce70
 8029d98:	08034480 	.word	0x08034480
 8029d9c:	0803dd80 	.word	0x0803dd80
 8029da0:	0803adf0 	.word	0x0803adf0
 8029da4:	0803dda8 	.word	0x0803dda8
 8029da8:	08041a48 	.word	0x08041a48
 8029dac:	0803e288 	.word	0x0803e288
 8029db0:	08041dc8 	.word	0x08041dc8
 8029db4:	08043738 	.word	0x08043738
 8029db8:	0803de88 	.word	0x0803de88
 8029dbc:	08042dc8 	.word	0x08042dc8

08029dc0 <arm_rfft_fast_f32>:
 8029dc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029dc4:	8a06      	ldrh	r6, [r0, #16]
 8029dc6:	0876      	lsrs	r6, r6, #1
 8029dc8:	4607      	mov	r7, r0
 8029dca:	4615      	mov	r5, r2
 8029dcc:	8006      	strh	r6, [r0, #0]
 8029dce:	460c      	mov	r4, r1
 8029dd0:	2b00      	cmp	r3, #0
 8029dd2:	d15c      	bne.n	8029e8e <arm_rfft_fast_f32+0xce>
 8029dd4:	461a      	mov	r2, r3
 8029dd6:	2301      	movs	r3, #1
 8029dd8:	f000 fbe6 	bl	802a5a8 <arm_cfft_f32>
 8029ddc:	edd4 7a00 	vldr	s15, [r4]
 8029de0:	ed94 7a01 	vldr	s14, [r4, #4]
 8029de4:	883e      	ldrh	r6, [r7, #0]
 8029de6:	6978      	ldr	r0, [r7, #20]
 8029de8:	ee37 7a07 	vadd.f32	s14, s14, s14
 8029dec:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029df0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029df4:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029df8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029dfc:	3e01      	subs	r6, #1
 8029dfe:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029e02:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029e06:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8029e0a:	ed85 7a00 	vstr	s14, [r5]
 8029e0e:	edc5 7a01 	vstr	s15, [r5, #4]
 8029e12:	3010      	adds	r0, #16
 8029e14:	f105 0210 	add.w	r2, r5, #16
 8029e18:	3b08      	subs	r3, #8
 8029e1a:	f104 0110 	add.w	r1, r4, #16
 8029e1e:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029e22:	ed93 5a02 	vldr	s10, [r3, #8]
 8029e26:	ed11 7a01 	vldr	s14, [r1, #-4]
 8029e2a:	ed10 6a02 	vldr	s12, [r0, #-8]
 8029e2e:	edd3 5a03 	vldr	s11, [r3, #12]
 8029e32:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029e36:	ee75 7a64 	vsub.f32	s15, s10, s9
 8029e3a:	ee35 4a87 	vadd.f32	s8, s11, s14
 8029e3e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029e42:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029e46:	ee66 4a27 	vmul.f32	s9, s12, s15
 8029e4a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029e4e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029e52:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029e56:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029e5a:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029e5e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029e62:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029e66:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029e6a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029e6e:	3e01      	subs	r6, #1
 8029e70:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029e74:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029e78:	f1a3 0308 	sub.w	r3, r3, #8
 8029e7c:	f101 0108 	add.w	r1, r1, #8
 8029e80:	f100 0008 	add.w	r0, r0, #8
 8029e84:	f102 0208 	add.w	r2, r2, #8
 8029e88:	d1c9      	bne.n	8029e1e <arm_rfft_fast_f32+0x5e>
 8029e8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029e8e:	edd1 7a00 	vldr	s15, [r1]
 8029e92:	edd1 6a01 	vldr	s13, [r1, #4]
 8029e96:	6941      	ldr	r1, [r0, #20]
 8029e98:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029e9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029ea0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029ea4:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029ea8:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029eac:	3e01      	subs	r6, #1
 8029eae:	ed82 7a00 	vstr	s14, [r2]
 8029eb2:	edc2 7a01 	vstr	s15, [r2, #4]
 8029eb6:	00f0      	lsls	r0, r6, #3
 8029eb8:	b3ee      	cbz	r6, 8029f36 <arm_rfft_fast_f32+0x176>
 8029eba:	3808      	subs	r0, #8
 8029ebc:	f101 0e10 	add.w	lr, r1, #16
 8029ec0:	4420      	add	r0, r4
 8029ec2:	f104 0110 	add.w	r1, r4, #16
 8029ec6:	f102 0c10 	add.w	ip, r2, #16
 8029eca:	ed90 7a02 	vldr	s14, [r0, #8]
 8029ece:	ed51 6a02 	vldr	s13, [r1, #-8]
 8029ed2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8029ed6:	ed90 4a03 	vldr	s8, [r0, #12]
 8029eda:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029ede:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8029ee2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8029ee6:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029eea:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029eee:	ee77 6a26 	vadd.f32	s13, s14, s13
 8029ef2:	ee35 5a44 	vsub.f32	s10, s10, s8
 8029ef6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8029efa:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029efe:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029f02:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029f06:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029f0a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029f0e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8029f12:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029f16:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029f1a:	3e01      	subs	r6, #1
 8029f1c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029f20:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8029f24:	f1a0 0008 	sub.w	r0, r0, #8
 8029f28:	f101 0108 	add.w	r1, r1, #8
 8029f2c:	f10e 0e08 	add.w	lr, lr, #8
 8029f30:	f10c 0c08 	add.w	ip, ip, #8
 8029f34:	d1c9      	bne.n	8029eca <arm_rfft_fast_f32+0x10a>
 8029f36:	4638      	mov	r0, r7
 8029f38:	4629      	mov	r1, r5
 8029f3a:	461a      	mov	r2, r3
 8029f3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029f40:	2301      	movs	r3, #1
 8029f42:	f000 bb31 	b.w	802a5a8 <arm_cfft_f32>
 8029f46:	bf00      	nop

08029f48 <arm_cfft_radix8by2_f32>:
 8029f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029f4c:	ed2d 8b08 	vpush	{d8-d11}
 8029f50:	f8b0 e000 	ldrh.w	lr, [r0]
 8029f54:	6842      	ldr	r2, [r0, #4]
 8029f56:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029f5a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029f5e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8029f62:	4607      	mov	r7, r0
 8029f64:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029f68:	f000 80af 	beq.w	802a0ca <arm_cfft_radix8by2_f32+0x182>
 8029f6c:	3310      	adds	r3, #16
 8029f6e:	18ce      	adds	r6, r1, r3
 8029f70:	3210      	adds	r2, #16
 8029f72:	4443      	add	r3, r8
 8029f74:	f101 0510 	add.w	r5, r1, #16
 8029f78:	f108 0410 	add.w	r4, r8, #16
 8029f7c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029f80:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029f84:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029f88:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029f8c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029f90:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029f94:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029f98:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029f9c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029fa0:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029fa4:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029fa8:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029fac:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029fb0:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029fb4:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029fb8:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029fbc:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029fc0:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029fc4:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029fc8:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029fcc:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029fd0:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029fd4:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029fd8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029fdc:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029fe0:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029fe4:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029fe8:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029fec:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029ff0:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029ff4:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029ff8:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029ffc:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a000:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802a004:	ed12 6a03 	vldr	s12, [r2, #-12]
 802a008:	ed52 2a04 	vldr	s5, [r2, #-16]
 802a00c:	ee33 3a61 	vsub.f32	s6, s6, s3
 802a010:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a014:	ee26 8a86 	vmul.f32	s16, s13, s12
 802a018:	ee24 2a06 	vmul.f32	s4, s8, s12
 802a01c:	ee63 1a22 	vmul.f32	s3, s6, s5
 802a020:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a024:	ee23 3a06 	vmul.f32	s6, s6, s12
 802a028:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802a02c:	ee23 6a86 	vmul.f32	s12, s7, s12
 802a030:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a034:	ee36 6a04 	vadd.f32	s12, s12, s8
 802a038:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a03c:	ee72 3a63 	vsub.f32	s7, s4, s7
 802a040:	ee71 2a88 	vadd.f32	s5, s3, s16
 802a044:	ed44 6a03 	vstr	s13, [r4, #-12]
 802a048:	ed44 2a04 	vstr	s5, [r4, #-16]
 802a04c:	ed43 3a04 	vstr	s7, [r3, #-16]
 802a050:	ed03 6a03 	vstr	s12, [r3, #-12]
 802a054:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a058:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802a05c:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a060:	ed52 5a02 	vldr	s11, [r2, #-8]
 802a064:	ee35 6a41 	vsub.f32	s12, s10, s2
 802a068:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802a06c:	ee67 3a87 	vmul.f32	s7, s15, s14
 802a070:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a074:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802a078:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a07c:	ee64 4a87 	vmul.f32	s9, s9, s14
 802a080:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802a084:	ee26 7a07 	vmul.f32	s14, s12, s14
 802a088:	ee26 6a25 	vmul.f32	s12, s12, s11
 802a08c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a090:	ee74 5a23 	vadd.f32	s11, s8, s7
 802a094:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a098:	ee37 7a26 	vadd.f32	s14, s14, s13
 802a09c:	f1be 0e01 	subs.w	lr, lr, #1
 802a0a0:	ed44 5a02 	vstr	s11, [r4, #-8]
 802a0a4:	f105 0510 	add.w	r5, r5, #16
 802a0a8:	ed44 7a01 	vstr	s15, [r4, #-4]
 802a0ac:	f106 0610 	add.w	r6, r6, #16
 802a0b0:	ed03 6a02 	vstr	s12, [r3, #-8]
 802a0b4:	ed03 7a01 	vstr	s14, [r3, #-4]
 802a0b8:	f102 0210 	add.w	r2, r2, #16
 802a0bc:	f104 0410 	add.w	r4, r4, #16
 802a0c0:	f103 0310 	add.w	r3, r3, #16
 802a0c4:	f47f af5a 	bne.w	8029f7c <arm_cfft_radix8by2_f32+0x34>
 802a0c8:	687a      	ldr	r2, [r7, #4]
 802a0ca:	fa1f f48c 	uxth.w	r4, ip
 802a0ce:	4608      	mov	r0, r1
 802a0d0:	2302      	movs	r3, #2
 802a0d2:	4621      	mov	r1, r4
 802a0d4:	f000 fbca 	bl	802a86c <arm_radix8_butterfly_f32>
 802a0d8:	ecbd 8b08 	vpop	{d8-d11}
 802a0dc:	4640      	mov	r0, r8
 802a0de:	4621      	mov	r1, r4
 802a0e0:	687a      	ldr	r2, [r7, #4]
 802a0e2:	2302      	movs	r3, #2
 802a0e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a0e8:	f000 bbc0 	b.w	802a86c <arm_radix8_butterfly_f32>

0802a0ec <arm_cfft_radix8by4_f32>:
 802a0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0f0:	ed2d 8b0a 	vpush	{d8-d12}
 802a0f4:	8802      	ldrh	r2, [r0, #0]
 802a0f6:	ed91 6a00 	vldr	s12, [r1]
 802a0fa:	b08f      	sub	sp, #60	; 0x3c
 802a0fc:	460f      	mov	r7, r1
 802a0fe:	0852      	lsrs	r2, r2, #1
 802a100:	0093      	lsls	r3, r2, #2
 802a102:	900c      	str	r0, [sp, #48]	; 0x30
 802a104:	9103      	str	r1, [sp, #12]
 802a106:	6841      	ldr	r1, [r0, #4]
 802a108:	ed97 7a01 	vldr	s14, [r7, #4]
 802a10c:	4638      	mov	r0, r7
 802a10e:	4418      	add	r0, r3
 802a110:	4606      	mov	r6, r0
 802a112:	9009      	str	r0, [sp, #36]	; 0x24
 802a114:	4418      	add	r0, r3
 802a116:	edd0 6a00 	vldr	s13, [r0]
 802a11a:	edd6 3a00 	vldr	s7, [r6]
 802a11e:	edd6 2a01 	vldr	s5, [r6, #4]
 802a122:	edd0 7a01 	vldr	s15, [r0, #4]
 802a126:	900a      	str	r0, [sp, #40]	; 0x28
 802a128:	ee76 5a26 	vadd.f32	s11, s12, s13
 802a12c:	4604      	mov	r4, r0
 802a12e:	4625      	mov	r5, r4
 802a130:	441c      	add	r4, r3
 802a132:	ed94 4a00 	vldr	s8, [r4]
 802a136:	ed94 5a01 	vldr	s10, [r4, #4]
 802a13a:	9401      	str	r4, [sp, #4]
 802a13c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802a140:	4630      	mov	r0, r6
 802a142:	ee74 4a24 	vadd.f32	s9, s8, s9
 802a146:	463e      	mov	r6, r7
 802a148:	ee14 ea90 	vmov	lr, s9
 802a14c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a150:	f846 eb08 	str.w	lr, [r6], #8
 802a154:	ee37 6a27 	vadd.f32	s12, s14, s15
 802a158:	edd0 4a01 	vldr	s9, [r0, #4]
 802a15c:	9604      	str	r6, [sp, #16]
 802a15e:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a162:	9e01      	ldr	r6, [sp, #4]
 802a164:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802a168:	ed96 2a01 	vldr	s4, [r6, #4]
 802a16c:	ee36 7a24 	vadd.f32	s14, s12, s9
 802a170:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802a174:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802a178:	ee36 6a62 	vsub.f32	s12, s12, s5
 802a17c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802a180:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802a184:	ee73 3a45 	vsub.f32	s7, s6, s10
 802a188:	4604      	mov	r4, r0
 802a18a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802a18e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802a192:	46a3      	mov	fp, r4
 802a194:	ee37 7a02 	vadd.f32	s14, s14, s4
 802a198:	ee34 5a84 	vadd.f32	s10, s9, s8
 802a19c:	ee13 8a90 	vmov	r8, s7
 802a1a0:	46a4      	mov	ip, r4
 802a1a2:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802a1a6:	ed87 7a01 	vstr	s14, [r7, #4]
 802a1aa:	f84b 8b08 	str.w	r8, [fp], #8
 802a1ae:	f1ac 0704 	sub.w	r7, ip, #4
 802a1b2:	ed8c 5a01 	vstr	s10, [ip, #4]
 802a1b6:	f101 0c08 	add.w	ip, r1, #8
 802a1ba:	462c      	mov	r4, r5
 802a1bc:	f8cd c014 	str.w	ip, [sp, #20]
 802a1c0:	ee15 ca90 	vmov	ip, s11
 802a1c4:	f844 cb08 	str.w	ip, [r4], #8
 802a1c8:	9407      	str	r4, [sp, #28]
 802a1ca:	f101 0410 	add.w	r4, r1, #16
 802a1ce:	ed85 6a01 	vstr	s12, [r5, #4]
 802a1d2:	0852      	lsrs	r2, r2, #1
 802a1d4:	9402      	str	r4, [sp, #8]
 802a1d6:	462c      	mov	r4, r5
 802a1d8:	f101 0518 	add.w	r5, r1, #24
 802a1dc:	920b      	str	r2, [sp, #44]	; 0x2c
 802a1de:	46b2      	mov	sl, r6
 802a1e0:	9506      	str	r5, [sp, #24]
 802a1e2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802a1e6:	3a02      	subs	r2, #2
 802a1e8:	ee16 5a90 	vmov	r5, s13
 802a1ec:	46b6      	mov	lr, r6
 802a1ee:	4630      	mov	r0, r6
 802a1f0:	0852      	lsrs	r2, r2, #1
 802a1f2:	f84a 5b08 	str.w	r5, [sl], #8
 802a1f6:	f1a0 0604 	sub.w	r6, r0, #4
 802a1fa:	edce 7a01 	vstr	s15, [lr, #4]
 802a1fe:	9208      	str	r2, [sp, #32]
 802a200:	f000 8130 	beq.w	802a464 <arm_cfft_radix8by4_f32+0x378>
 802a204:	4691      	mov	r9, r2
 802a206:	9a03      	ldr	r2, [sp, #12]
 802a208:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802a20c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802a210:	3b08      	subs	r3, #8
 802a212:	f102 0510 	add.w	r5, r2, #16
 802a216:	f101 0c20 	add.w	ip, r1, #32
 802a21a:	f1a4 020c 	sub.w	r2, r4, #12
 802a21e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802a222:	4433      	add	r3, r6
 802a224:	3410      	adds	r4, #16
 802a226:	4650      	mov	r0, sl
 802a228:	4659      	mov	r1, fp
 802a22a:	ed55 3a02 	vldr	s7, [r5, #-8]
 802a22e:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a232:	ed91 7a00 	vldr	s14, [r1]
 802a236:	edd0 7a00 	vldr	s15, [r0]
 802a23a:	ed15 4a01 	vldr	s8, [r5, #-4]
 802a23e:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a242:	edd0 6a01 	vldr	s13, [r0, #4]
 802a246:	ed91 6a01 	vldr	s12, [r1, #4]
 802a24a:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a24e:	ee34 0a25 	vadd.f32	s0, s8, s11
 802a252:	ee78 4a07 	vadd.f32	s9, s16, s14
 802a256:	ee74 5a65 	vsub.f32	s11, s8, s11
 802a25a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802a25e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802a262:	ed45 4a02 	vstr	s9, [r5, #-8]
 802a266:	edd1 4a01 	vldr	s9, [r1, #4]
 802a26a:	ed90 4a01 	vldr	s8, [r0, #4]
 802a26e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802a272:	ee76 aa05 	vadd.f32	s21, s12, s10
 802a276:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a27a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802a27e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802a282:	edd6 1a00 	vldr	s3, [r6]
 802a286:	edd7 0a00 	vldr	s1, [r7]
 802a28a:	ed92 4a02 	vldr	s8, [r2, #8]
 802a28e:	edd3 3a02 	vldr	s7, [r3, #8]
 802a292:	ed93 2a01 	vldr	s4, [r3, #4]
 802a296:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a29a:	edd2 2a01 	vldr	s5, [r2, #4]
 802a29e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802a2a2:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802a2a6:	ee39 3a81 	vadd.f32	s6, s19, s2
 802a2aa:	ee74 8a84 	vadd.f32	s17, s9, s8
 802a2ae:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802a2b2:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802a2b6:	ee7a aae6 	vsub.f32	s21, s21, s13
 802a2ba:	ee18 aa90 	vmov	sl, s17
 802a2be:	f847 a908 	str.w	sl, [r7], #-8
 802a2c2:	edd2 8a01 	vldr	s17, [r2, #4]
 802a2c6:	ed93 9a01 	vldr	s18, [r3, #4]
 802a2ca:	ee73 8a28 	vadd.f32	s17, s6, s17
 802a2ce:	ee3a aa27 	vadd.f32	s20, s20, s15
 802a2d2:	ee78 8a89 	vadd.f32	s17, s17, s18
 802a2d6:	ee74 0a63 	vsub.f32	s1, s8, s7
 802a2da:	edc7 8a01 	vstr	s17, [r7, #4]
 802a2de:	ed18 ba02 	vldr	s22, [r8, #-8]
 802a2e2:	ed58 8a01 	vldr	s17, [r8, #-4]
 802a2e6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802a2ea:	ee6a ba28 	vmul.f32	s23, s20, s17
 802a2ee:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802a2f2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802a2f6:	ee30 9a81 	vadd.f32	s18, s1, s2
 802a2fa:	ee79 9a82 	vadd.f32	s19, s19, s4
 802a2fe:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802a302:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802a306:	ee69 baa8 	vmul.f32	s23, s19, s17
 802a30a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802a30e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802a312:	ee69 8a28 	vmul.f32	s17, s18, s17
 802a316:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802a31a:	ee1c aa10 	vmov	sl, s24
 802a31e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802a322:	f841 ab08 	str.w	sl, [r1], #8
 802a326:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802a32a:	ee3b bacb 	vsub.f32	s22, s23, s22
 802a32e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802a332:	ee33 3a62 	vsub.f32	s6, s6, s5
 802a336:	ed01 aa01 	vstr	s20, [r1, #-4]
 802a33a:	edc2 8a01 	vstr	s17, [r2, #4]
 802a33e:	ed82 ba02 	vstr	s22, [r2, #8]
 802a342:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802a346:	ee74 3a63 	vsub.f32	s7, s8, s7
 802a34a:	ee38 8a47 	vsub.f32	s16, s16, s14
 802a34e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802a352:	ee30 0a46 	vsub.f32	s0, s0, s12
 802a356:	ee33 3a42 	vsub.f32	s6, s6, s4
 802a35a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a35e:	ee30 0a66 	vsub.f32	s0, s0, s13
 802a362:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802a366:	ee63 8a04 	vmul.f32	s17, s6, s8
 802a36a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802a36e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802a372:	ee28 8a04 	vmul.f32	s16, s16, s8
 802a376:	ee20 0a24 	vmul.f32	s0, s0, s9
 802a37a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802a37e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802a382:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802a386:	ee14 aa10 	vmov	sl, s8
 802a38a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802a38e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802a392:	ed44 9a02 	vstr	s19, [r4, #-8]
 802a396:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802a39a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802a39e:	f846 a908 	str.w	sl, [r6], #-8
 802a3a2:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a3a6:	ee35 7a87 	vadd.f32	s14, s11, s14
 802a3aa:	edc6 3a01 	vstr	s7, [r6, #4]
 802a3ae:	ee76 6a86 	vadd.f32	s13, s13, s12
 802a3b2:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a3b6:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802a3ba:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802a3be:	ee67 5a86 	vmul.f32	s11, s15, s12
 802a3c2:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a3c6:	ee72 2a62 	vsub.f32	s5, s4, s5
 802a3ca:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a3ce:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802a3d2:	ee75 5a25 	vadd.f32	s11, s10, s11
 802a3d6:	ee62 0a86 	vmul.f32	s1, s5, s12
 802a3da:	ee66 6a86 	vmul.f32	s13, s13, s12
 802a3de:	ee67 7a87 	vmul.f32	s15, s15, s14
 802a3e2:	ee21 6a06 	vmul.f32	s12, s2, s12
 802a3e6:	ee62 2a87 	vmul.f32	s5, s5, s14
 802a3ea:	ee21 1a07 	vmul.f32	s2, s2, s14
 802a3ee:	ee15 aa90 	vmov	sl, s11
 802a3f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a3f6:	f840 ab08 	str.w	sl, [r0], #8
 802a3fa:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a3fe:	ee76 2a22 	vadd.f32	s5, s12, s5
 802a402:	f1b9 0901 	subs.w	r9, r9, #1
 802a406:	ed40 7a01 	vstr	s15, [r0, #-4]
 802a40a:	f105 0508 	add.w	r5, r5, #8
 802a40e:	ed83 1a02 	vstr	s2, [r3, #8]
 802a412:	edc3 2a01 	vstr	s5, [r3, #4]
 802a416:	f108 0808 	add.w	r8, r8, #8
 802a41a:	f1a2 0208 	sub.w	r2, r2, #8
 802a41e:	f10c 0c10 	add.w	ip, ip, #16
 802a422:	f104 0408 	add.w	r4, r4, #8
 802a426:	f10e 0e18 	add.w	lr, lr, #24
 802a42a:	f1a3 0308 	sub.w	r3, r3, #8
 802a42e:	f47f aefc 	bne.w	802a22a <arm_cfft_radix8by4_f32+0x13e>
 802a432:	9908      	ldr	r1, [sp, #32]
 802a434:	9802      	ldr	r0, [sp, #8]
 802a436:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a43a:	00cb      	lsls	r3, r1, #3
 802a43c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a440:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a444:	9102      	str	r1, [sp, #8]
 802a446:	9904      	ldr	r1, [sp, #16]
 802a448:	4419      	add	r1, r3
 802a44a:	9104      	str	r1, [sp, #16]
 802a44c:	9905      	ldr	r1, [sp, #20]
 802a44e:	4419      	add	r1, r3
 802a450:	9105      	str	r1, [sp, #20]
 802a452:	9907      	ldr	r1, [sp, #28]
 802a454:	449b      	add	fp, r3
 802a456:	4419      	add	r1, r3
 802a458:	449a      	add	sl, r3
 802a45a:	9b06      	ldr	r3, [sp, #24]
 802a45c:	9107      	str	r1, [sp, #28]
 802a45e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a462:	9306      	str	r3, [sp, #24]
 802a464:	9a04      	ldr	r2, [sp, #16]
 802a466:	9807      	ldr	r0, [sp, #28]
 802a468:	edd2 3a00 	vldr	s7, [r2]
 802a46c:	ed90 4a00 	vldr	s8, [r0]
 802a470:	eddb 7a00 	vldr	s15, [fp]
 802a474:	ed9a 3a00 	vldr	s6, [sl]
 802a478:	edd2 4a01 	vldr	s9, [r2, #4]
 802a47c:	ed90 7a01 	vldr	s14, [r0, #4]
 802a480:	ed9b 2a01 	vldr	s4, [fp, #4]
 802a484:	edda 5a01 	vldr	s11, [sl, #4]
 802a488:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a48c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a48e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802a492:	ee34 6a87 	vadd.f32	s12, s9, s14
 802a496:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802a49a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802a49e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802a4a2:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802a4a6:	ed82 5a00 	vstr	s10, [r2]
 802a4aa:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a4ae:	edda 4a01 	vldr	s9, [sl, #4]
 802a4b2:	ee36 5a05 	vadd.f32	s10, s12, s10
 802a4b6:	ee72 3a04 	vadd.f32	s7, s4, s8
 802a4ba:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a4be:	ee77 4a67 	vsub.f32	s9, s14, s15
 802a4c2:	ed82 5a01 	vstr	s10, [r2, #4]
 802a4c6:	9a05      	ldr	r2, [sp, #20]
 802a4c8:	ee34 5a83 	vadd.f32	s10, s9, s6
 802a4cc:	edd2 1a00 	vldr	s3, [r2]
 802a4d0:	edd2 2a01 	vldr	s5, [r2, #4]
 802a4d4:	9a02      	ldr	r2, [sp, #8]
 802a4d6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802a4da:	ee36 6a42 	vsub.f32	s12, s12, s4
 802a4de:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802a4e2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a4e6:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a4ea:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a4ee:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a4f2:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a4f6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802a4fa:	edcb 2a00 	vstr	s5, [fp]
 802a4fe:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a502:	edd2 3a01 	vldr	s7, [r2, #4]
 802a506:	ed92 5a00 	vldr	s10, [r2]
 802a50a:	9a06      	ldr	r2, [sp, #24]
 802a50c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a510:	ee36 6a65 	vsub.f32	s12, s12, s11
 802a514:	ee66 4a85 	vmul.f32	s9, s13, s10
 802a518:	ee26 5a05 	vmul.f32	s10, s12, s10
 802a51c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802a520:	ee26 6a23 	vmul.f32	s12, s12, s7
 802a524:	ee75 6a66 	vsub.f32	s13, s10, s13
 802a528:	ee34 6a86 	vadd.f32	s12, s9, s12
 802a52c:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a530:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a534:	edc0 6a01 	vstr	s13, [r0, #4]
 802a538:	ed80 6a00 	vstr	s12, [r0]
 802a53c:	ed92 6a01 	vldr	s12, [r2, #4]
 802a540:	9803      	ldr	r0, [sp, #12]
 802a542:	ee77 7a43 	vsub.f32	s15, s14, s6
 802a546:	ee75 5a84 	vadd.f32	s11, s11, s8
 802a54a:	ed92 7a00 	vldr	s14, [r2]
 802a54e:	ee65 6a87 	vmul.f32	s13, s11, s14
 802a552:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a556:	ee65 5a86 	vmul.f32	s11, s11, s12
 802a55a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802a55e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802a562:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802a566:	edca 5a01 	vstr	s11, [sl, #4]
 802a56a:	edca 7a00 	vstr	s15, [sl]
 802a56e:	6872      	ldr	r2, [r6, #4]
 802a570:	4621      	mov	r1, r4
 802a572:	2304      	movs	r3, #4
 802a574:	f000 f97a 	bl	802a86c <arm_radix8_butterfly_f32>
 802a578:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a57a:	6872      	ldr	r2, [r6, #4]
 802a57c:	4621      	mov	r1, r4
 802a57e:	2304      	movs	r3, #4
 802a580:	f000 f974 	bl	802a86c <arm_radix8_butterfly_f32>
 802a584:	980a      	ldr	r0, [sp, #40]	; 0x28
 802a586:	6872      	ldr	r2, [r6, #4]
 802a588:	4621      	mov	r1, r4
 802a58a:	2304      	movs	r3, #4
 802a58c:	f000 f96e 	bl	802a86c <arm_radix8_butterfly_f32>
 802a590:	9801      	ldr	r0, [sp, #4]
 802a592:	6872      	ldr	r2, [r6, #4]
 802a594:	4621      	mov	r1, r4
 802a596:	2304      	movs	r3, #4
 802a598:	b00f      	add	sp, #60	; 0x3c
 802a59a:	ecbd 8b0a 	vpop	{d8-d12}
 802a59e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5a2:	f000 b963 	b.w	802a86c <arm_radix8_butterfly_f32>
 802a5a6:	bf00      	nop

0802a5a8 <arm_cfft_f32>:
 802a5a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ac:	2a01      	cmp	r2, #1
 802a5ae:	4606      	mov	r6, r0
 802a5b0:	4617      	mov	r7, r2
 802a5b2:	460c      	mov	r4, r1
 802a5b4:	4698      	mov	r8, r3
 802a5b6:	8805      	ldrh	r5, [r0, #0]
 802a5b8:	d054      	beq.n	802a664 <arm_cfft_f32+0xbc>
 802a5ba:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a5be:	d04c      	beq.n	802a65a <arm_cfft_f32+0xb2>
 802a5c0:	d916      	bls.n	802a5f0 <arm_cfft_f32+0x48>
 802a5c2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802a5c6:	d01a      	beq.n	802a5fe <arm_cfft_f32+0x56>
 802a5c8:	d95c      	bls.n	802a684 <arm_cfft_f32+0xdc>
 802a5ca:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a5ce:	d044      	beq.n	802a65a <arm_cfft_f32+0xb2>
 802a5d0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a5d4:	d105      	bne.n	802a5e2 <arm_cfft_f32+0x3a>
 802a5d6:	4620      	mov	r0, r4
 802a5d8:	4629      	mov	r1, r5
 802a5da:	6872      	ldr	r2, [r6, #4]
 802a5dc:	2301      	movs	r3, #1
 802a5de:	f000 f945 	bl	802a86c <arm_radix8_butterfly_f32>
 802a5e2:	f1b8 0f00 	cmp.w	r8, #0
 802a5e6:	d111      	bne.n	802a60c <arm_cfft_f32+0x64>
 802a5e8:	2f01      	cmp	r7, #1
 802a5ea:	d016      	beq.n	802a61a <arm_cfft_f32+0x72>
 802a5ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a5f0:	2d20      	cmp	r5, #32
 802a5f2:	d032      	beq.n	802a65a <arm_cfft_f32+0xb2>
 802a5f4:	d94a      	bls.n	802a68c <arm_cfft_f32+0xe4>
 802a5f6:	2d40      	cmp	r5, #64	; 0x40
 802a5f8:	d0ed      	beq.n	802a5d6 <arm_cfft_f32+0x2e>
 802a5fa:	2d80      	cmp	r5, #128	; 0x80
 802a5fc:	d1f1      	bne.n	802a5e2 <arm_cfft_f32+0x3a>
 802a5fe:	4630      	mov	r0, r6
 802a600:	4621      	mov	r1, r4
 802a602:	f7ff fca1 	bl	8029f48 <arm_cfft_radix8by2_f32>
 802a606:	f1b8 0f00 	cmp.w	r8, #0
 802a60a:	d0ed      	beq.n	802a5e8 <arm_cfft_f32+0x40>
 802a60c:	4620      	mov	r0, r4
 802a60e:	89b1      	ldrh	r1, [r6, #12]
 802a610:	68b2      	ldr	r2, [r6, #8]
 802a612:	f7d5 fded 	bl	80001f0 <arm_bitreversal_32>
 802a616:	2f01      	cmp	r7, #1
 802a618:	d1e8      	bne.n	802a5ec <arm_cfft_f32+0x44>
 802a61a:	ee07 5a90 	vmov	s15, r5
 802a61e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a622:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a626:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a62a:	2d00      	cmp	r5, #0
 802a62c:	d0de      	beq.n	802a5ec <arm_cfft_f32+0x44>
 802a62e:	f104 0108 	add.w	r1, r4, #8
 802a632:	2300      	movs	r3, #0
 802a634:	3301      	adds	r3, #1
 802a636:	429d      	cmp	r5, r3
 802a638:	f101 0108 	add.w	r1, r1, #8
 802a63c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a640:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a644:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a648:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a64c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a650:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a654:	d1ee      	bne.n	802a634 <arm_cfft_f32+0x8c>
 802a656:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a65a:	4630      	mov	r0, r6
 802a65c:	4621      	mov	r1, r4
 802a65e:	f7ff fd45 	bl	802a0ec <arm_cfft_radix8by4_f32>
 802a662:	e7be      	b.n	802a5e2 <arm_cfft_f32+0x3a>
 802a664:	b1ad      	cbz	r5, 802a692 <arm_cfft_f32+0xea>
 802a666:	f101 030c 	add.w	r3, r1, #12
 802a66a:	2200      	movs	r2, #0
 802a66c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a670:	3201      	adds	r2, #1
 802a672:	eef1 7a67 	vneg.f32	s15, s15
 802a676:	4295      	cmp	r5, r2
 802a678:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a67c:	f103 0308 	add.w	r3, r3, #8
 802a680:	d1f4      	bne.n	802a66c <arm_cfft_f32+0xc4>
 802a682:	e79a      	b.n	802a5ba <arm_cfft_f32+0x12>
 802a684:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a688:	d0a5      	beq.n	802a5d6 <arm_cfft_f32+0x2e>
 802a68a:	e7aa      	b.n	802a5e2 <arm_cfft_f32+0x3a>
 802a68c:	2d10      	cmp	r5, #16
 802a68e:	d0b6      	beq.n	802a5fe <arm_cfft_f32+0x56>
 802a690:	e7a7      	b.n	802a5e2 <arm_cfft_f32+0x3a>
 802a692:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a696:	d894      	bhi.n	802a5c2 <arm_cfft_f32+0x1a>
 802a698:	e7aa      	b.n	802a5f0 <arm_cfft_f32+0x48>
 802a69a:	bf00      	nop

0802a69c <arm_cmplx_mag_f32>:
 802a69c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a6a0:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a6a4:	b084      	sub	sp, #16
 802a6a6:	d07f      	beq.n	802a7a8 <arm_cmplx_mag_f32+0x10c>
 802a6a8:	2700      	movs	r7, #0
 802a6aa:	f100 0420 	add.w	r4, r0, #32
 802a6ae:	f101 0510 	add.w	r5, r1, #16
 802a6b2:	4646      	mov	r6, r8
 802a6b4:	e05a      	b.n	802a76c <arm_cmplx_mag_f32+0xd0>
 802a6b6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a6ba:	eeb4 0a40 	vcmp.f32	s0, s0
 802a6be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6c2:	f040 80a4 	bne.w	802a80e <arm_cmplx_mag_f32+0x172>
 802a6c6:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a6ca:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a6ce:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a6d2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a6d6:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a6da:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a6de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a6e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6e6:	f2c0 808f 	blt.w	802a808 <arm_cmplx_mag_f32+0x16c>
 802a6ea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a6ee:	eeb4 0a40 	vcmp.f32	s0, s0
 802a6f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6f6:	f040 80af 	bne.w	802a858 <arm_cmplx_mag_f32+0x1bc>
 802a6fa:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a6fe:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a702:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a706:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a70a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a70e:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a712:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a71a:	db72      	blt.n	802a802 <arm_cmplx_mag_f32+0x166>
 802a71c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a720:	eeb4 0a40 	vcmp.f32	s0, s0
 802a724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a728:	f040 808c 	bne.w	802a844 <arm_cmplx_mag_f32+0x1a8>
 802a72c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a730:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a734:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a738:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a73c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a740:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a744:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a74c:	db20      	blt.n	802a790 <arm_cmplx_mag_f32+0xf4>
 802a74e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a752:	eeb4 0a40 	vcmp.f32	s0, s0
 802a756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a75a:	d169      	bne.n	802a830 <arm_cmplx_mag_f32+0x194>
 802a75c:	3e01      	subs	r6, #1
 802a75e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a762:	f104 0420 	add.w	r4, r4, #32
 802a766:	f105 0510 	add.w	r5, r5, #16
 802a76a:	d019      	beq.n	802a7a0 <arm_cmplx_mag_f32+0x104>
 802a76c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a770:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a774:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a778:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a77c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a780:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a788:	da95      	bge.n	802a6b6 <arm_cmplx_mag_f32+0x1a>
 802a78a:	f845 7c10 	str.w	r7, [r5, #-16]
 802a78e:	e79c      	b.n	802a6ca <arm_cmplx_mag_f32+0x2e>
 802a790:	3e01      	subs	r6, #1
 802a792:	f845 7c04 	str.w	r7, [r5, #-4]
 802a796:	f104 0420 	add.w	r4, r4, #32
 802a79a:	f105 0510 	add.w	r5, r5, #16
 802a79e:	d1e5      	bne.n	802a76c <arm_cmplx_mag_f32+0xd0>
 802a7a0:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a7a4:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a7a8:	f012 0503 	ands.w	r5, r2, #3
 802a7ac:	d026      	beq.n	802a7fc <arm_cmplx_mag_f32+0x160>
 802a7ae:	2600      	movs	r6, #0
 802a7b0:	f100 0408 	add.w	r4, r0, #8
 802a7b4:	e00c      	b.n	802a7d0 <arm_cmplx_mag_f32+0x134>
 802a7b6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a7ba:	eeb4 0a40 	vcmp.f32	s0, s0
 802a7be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7c2:	d12e      	bne.n	802a822 <arm_cmplx_mag_f32+0x186>
 802a7c4:	3d01      	subs	r5, #1
 802a7c6:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a7ca:	f104 0408 	add.w	r4, r4, #8
 802a7ce:	d015      	beq.n	802a7fc <arm_cmplx_mag_f32+0x160>
 802a7d0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a7d4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a7d8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a7dc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a7e0:	3104      	adds	r1, #4
 802a7e2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a7e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a7ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7ee:	dae2      	bge.n	802a7b6 <arm_cmplx_mag_f32+0x11a>
 802a7f0:	3d01      	subs	r5, #1
 802a7f2:	f841 6c04 	str.w	r6, [r1, #-4]
 802a7f6:	f104 0408 	add.w	r4, r4, #8
 802a7fa:	d1e9      	bne.n	802a7d0 <arm_cmplx_mag_f32+0x134>
 802a7fc:	b004      	add	sp, #16
 802a7fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a802:	f845 7c08 	str.w	r7, [r5, #-8]
 802a806:	e793      	b.n	802a730 <arm_cmplx_mag_f32+0x94>
 802a808:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a80c:	e777      	b.n	802a6fe <arm_cmplx_mag_f32+0x62>
 802a80e:	eeb0 0a67 	vmov.f32	s0, s15
 802a812:	9203      	str	r2, [sp, #12]
 802a814:	9102      	str	r1, [sp, #8]
 802a816:	9001      	str	r0, [sp, #4]
 802a818:	f000 fb38 	bl	802ae8c <sqrtf>
 802a81c:	a801      	add	r0, sp, #4
 802a81e:	c807      	ldmia	r0, {r0, r1, r2}
 802a820:	e751      	b.n	802a6c6 <arm_cmplx_mag_f32+0x2a>
 802a822:	eeb0 0a67 	vmov.f32	s0, s15
 802a826:	9101      	str	r1, [sp, #4]
 802a828:	f000 fb30 	bl	802ae8c <sqrtf>
 802a82c:	9901      	ldr	r1, [sp, #4]
 802a82e:	e7c9      	b.n	802a7c4 <arm_cmplx_mag_f32+0x128>
 802a830:	eeb0 0a67 	vmov.f32	s0, s15
 802a834:	9203      	str	r2, [sp, #12]
 802a836:	9102      	str	r1, [sp, #8]
 802a838:	9001      	str	r0, [sp, #4]
 802a83a:	f000 fb27 	bl	802ae8c <sqrtf>
 802a83e:	a801      	add	r0, sp, #4
 802a840:	c807      	ldmia	r0, {r0, r1, r2}
 802a842:	e78b      	b.n	802a75c <arm_cmplx_mag_f32+0xc0>
 802a844:	eeb0 0a67 	vmov.f32	s0, s15
 802a848:	9203      	str	r2, [sp, #12]
 802a84a:	9102      	str	r1, [sp, #8]
 802a84c:	9001      	str	r0, [sp, #4]
 802a84e:	f000 fb1d 	bl	802ae8c <sqrtf>
 802a852:	a801      	add	r0, sp, #4
 802a854:	c807      	ldmia	r0, {r0, r1, r2}
 802a856:	e769      	b.n	802a72c <arm_cmplx_mag_f32+0x90>
 802a858:	eeb0 0a67 	vmov.f32	s0, s15
 802a85c:	9203      	str	r2, [sp, #12]
 802a85e:	9102      	str	r1, [sp, #8]
 802a860:	9001      	str	r0, [sp, #4]
 802a862:	f000 fb13 	bl	802ae8c <sqrtf>
 802a866:	a801      	add	r0, sp, #4
 802a868:	c807      	ldmia	r0, {r0, r1, r2}
 802a86a:	e746      	b.n	802a6fa <arm_cmplx_mag_f32+0x5e>

0802a86c <arm_radix8_butterfly_f32>:
 802a86c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a870:	ed2d 8b10 	vpush	{d8-d15}
 802a874:	b09d      	sub	sp, #116	; 0x74
 802a876:	461c      	mov	r4, r3
 802a878:	ed9f bac8 	vldr	s22, [pc, #800]	; 802ab9c <arm_radix8_butterfly_f32+0x330>
 802a87c:	921a      	str	r2, [sp, #104]	; 0x68
 802a87e:	1d03      	adds	r3, r0, #4
 802a880:	4682      	mov	sl, r0
 802a882:	4689      	mov	r9, r1
 802a884:	468b      	mov	fp, r1
 802a886:	931b      	str	r3, [sp, #108]	; 0x6c
 802a888:	9400      	str	r4, [sp, #0]
 802a88a:	469e      	mov	lr, r3
 802a88c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a890:	005a      	lsls	r2, r3, #1
 802a892:	18d6      	adds	r6, r2, r3
 802a894:	18f5      	adds	r5, r6, r3
 802a896:	9203      	str	r2, [sp, #12]
 802a898:	195a      	adds	r2, r3, r5
 802a89a:	18d0      	adds	r0, r2, r3
 802a89c:	00df      	lsls	r7, r3, #3
 802a89e:	1819      	adds	r1, r3, r0
 802a8a0:	463c      	mov	r4, r7
 802a8a2:	9701      	str	r7, [sp, #4]
 802a8a4:	4457      	add	r7, sl
 802a8a6:	930c      	str	r3, [sp, #48]	; 0x30
 802a8a8:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a8ac:	011b      	lsls	r3, r3, #4
 802a8ae:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a8b2:	eb07 0c04 	add.w	ip, r7, r4
 802a8b6:	9c00      	ldr	r4, [sp, #0]
 802a8b8:	9302      	str	r3, [sp, #8]
 802a8ba:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a8be:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a8c2:	3204      	adds	r2, #4
 802a8c4:	3104      	adds	r1, #4
 802a8c6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a8ca:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a8ce:	f04f 0800 	mov.w	r8, #0
 802a8d2:	eddc 7a00 	vldr	s15, [ip]
 802a8d6:	edd7 6a00 	vldr	s13, [r7]
 802a8da:	edd6 3a00 	vldr	s7, [r6]
 802a8de:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a8e2:	edd5 4a00 	vldr	s9, [r5]
 802a8e6:	ed90 2a00 	vldr	s4, [r0]
 802a8ea:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a8ee:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a8f2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a8f6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a8fa:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a8fe:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a902:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a906:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a90a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a90e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a912:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a916:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a91a:	ed85 5a00 	vstr	s10, [r5]
 802a91e:	ed96 1a01 	vldr	s2, [r6, #4]
 802a922:	edd7 5a01 	vldr	s11, [r7, #4]
 802a926:	ed92 aa00 	vldr	s20, [r2]
 802a92a:	ed91 6a00 	vldr	s12, [r1]
 802a92e:	ed9e 9a00 	vldr	s18, [lr]
 802a932:	ed95 5a01 	vldr	s10, [r5, #4]
 802a936:	eddc 6a01 	vldr	s13, [ip, #4]
 802a93a:	edd0 9a01 	vldr	s19, [r0, #4]
 802a93e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a942:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a946:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a94a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a94e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a952:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a956:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a95a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a95e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a962:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a966:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a96a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a96e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a972:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a976:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a97a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a97e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a982:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a986:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a98a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a98e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a992:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a996:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a99a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a99e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a9a2:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a9a6:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a9aa:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a9ae:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a9b2:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a9b6:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a9ba:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a9be:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a9c2:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a9c6:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a9ca:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a9ce:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a9d2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a9d6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a9da:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a9de:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a9e2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a9e6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a9ea:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a9ee:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a9f2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a9f6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a9fa:	44d8      	add	r8, fp
 802a9fc:	45c1      	cmp	r9, r8
 802a9fe:	ed8e 9a00 	vstr	s18, [lr]
 802aa02:	ed85 1a01 	vstr	s2, [r5, #4]
 802aa06:	449e      	add	lr, r3
 802aa08:	ed8c 8a00 	vstr	s16, [ip]
 802aa0c:	441d      	add	r5, r3
 802aa0e:	ed80 6a00 	vstr	s12, [r0]
 802aa12:	edcc 0a01 	vstr	s1, [ip, #4]
 802aa16:	ed80 4a01 	vstr	s8, [r0, #4]
 802aa1a:	449c      	add	ip, r3
 802aa1c:	ed87 2a00 	vstr	s4, [r7]
 802aa20:	4418      	add	r0, r3
 802aa22:	ed41 3a01 	vstr	s7, [r1, #-4]
 802aa26:	ed42 2a01 	vstr	s5, [r2, #-4]
 802aa2a:	ed86 7a00 	vstr	s14, [r6]
 802aa2e:	ed87 3a01 	vstr	s6, [r7, #4]
 802aa32:	edc1 4a00 	vstr	s9, [r1]
 802aa36:	441f      	add	r7, r3
 802aa38:	edc2 5a00 	vstr	s11, [r2]
 802aa3c:	4419      	add	r1, r3
 802aa3e:	edc6 6a01 	vstr	s13, [r6, #4]
 802aa42:	441a      	add	r2, r3
 802aa44:	441e      	add	r6, r3
 802aa46:	f63f af44 	bhi.w	802a8d2 <arm_radix8_butterfly_f32+0x66>
 802aa4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802aa4c:	2907      	cmp	r1, #7
 802aa4e:	4620      	mov	r0, r4
 802aa50:	f240 81e9 	bls.w	802ae26 <arm_radix8_butterfly_f32+0x5ba>
 802aa54:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802aa58:	193e      	adds	r6, r7, r4
 802aa5a:	1935      	adds	r5, r6, r4
 802aa5c:	9c03      	ldr	r4, [sp, #12]
 802aa5e:	9000      	str	r0, [sp, #0]
 802aa60:	4622      	mov	r2, r4
 802aa62:	3201      	adds	r2, #1
 802aa64:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802aa68:	9900      	ldr	r1, [sp, #0]
 802aa6a:	1828      	adds	r0, r5, r0
 802aa6c:	eb00 0e01 	add.w	lr, r0, r1
 802aa70:	990c      	ldr	r1, [sp, #48]	; 0x30
 802aa72:	440a      	add	r2, r1
 802aa74:	eb04 0c01 	add.w	ip, r4, r1
 802aa78:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802aa7c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802aa80:	9a00      	ldr	r2, [sp, #0]
 802aa82:	940f      	str	r4, [sp, #60]	; 0x3c
 802aa84:	00ed      	lsls	r5, r5, #3
 802aa86:	9511      	str	r5, [sp, #68]	; 0x44
 802aa88:	00d5      	lsls	r5, r2, #3
 802aa8a:	950d      	str	r5, [sp, #52]	; 0x34
 802aa8c:	9d01      	ldr	r5, [sp, #4]
 802aa8e:	3508      	adds	r5, #8
 802aa90:	9516      	str	r5, [sp, #88]	; 0x58
 802aa92:	9d02      	ldr	r5, [sp, #8]
 802aa94:	3508      	adds	r5, #8
 802aa96:	0114      	lsls	r4, r2, #4
 802aa98:	9517      	str	r5, [sp, #92]	; 0x5c
 802aa9a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802aa9c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802aa9e:	940e      	str	r4, [sp, #56]	; 0x38
 802aaa0:	00c0      	lsls	r0, r0, #3
 802aaa2:	9010      	str	r0, [sp, #64]	; 0x40
 802aaa4:	18aa      	adds	r2, r5, r2
 802aaa6:	9207      	str	r2, [sp, #28]
 802aaa8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802aaaa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802aaac:	18aa      	adds	r2, r5, r2
 802aaae:	9208      	str	r2, [sp, #32]
 802aab0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802aab2:	18aa      	adds	r2, r5, r2
 802aab4:	9209      	str	r2, [sp, #36]	; 0x24
 802aab6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802aaba:	f10e 0204 	add.w	r2, lr, #4
 802aabe:	920a      	str	r2, [sp, #40]	; 0x28
 802aac0:	00c9      	lsls	r1, r1, #3
 802aac2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802aac4:	310c      	adds	r1, #12
 802aac6:	00f6      	lsls	r6, r6, #3
 802aac8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802aacc:	9114      	str	r1, [sp, #80]	; 0x50
 802aace:	18a9      	adds	r1, r5, r2
 802aad0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802aad2:	9612      	str	r6, [sp, #72]	; 0x48
 802aad4:	00ff      	lsls	r7, r7, #3
 802aad6:	19ae      	adds	r6, r5, r6
 802aad8:	3008      	adds	r0, #8
 802aada:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802aade:	9606      	str	r6, [sp, #24]
 802aae0:	9019      	str	r0, [sp, #100]	; 0x64
 802aae2:	18aa      	adds	r2, r5, r2
 802aae4:	0164      	lsls	r4, r4, #5
 802aae6:	19ee      	adds	r6, r5, r7
 802aae8:	f10c 000c 	add.w	r0, ip, #12
 802aaec:	9713      	str	r7, [sp, #76]	; 0x4c
 802aaee:	9604      	str	r6, [sp, #16]
 802aaf0:	9015      	str	r0, [sp, #84]	; 0x54
 802aaf2:	9103      	str	r1, [sp, #12]
 802aaf4:	9205      	str	r2, [sp, #20]
 802aaf6:	f104 0208 	add.w	r2, r4, #8
 802aafa:	9218      	str	r2, [sp, #96]	; 0x60
 802aafc:	f04f 0801 	mov.w	r8, #1
 802ab00:	2200      	movs	r2, #0
 802ab02:	f102 0108 	add.w	r1, r2, #8
 802ab06:	460f      	mov	r7, r1
 802ab08:	910b      	str	r1, [sp, #44]	; 0x2c
 802ab0a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802ab0c:	188e      	adds	r6, r1, r2
 802ab0e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802ab10:	188d      	adds	r5, r1, r2
 802ab12:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802ab14:	188c      	adds	r4, r1, r2
 802ab16:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ab18:	1888      	adds	r0, r1, r2
 802ab1a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802ab1c:	eb01 0c02 	add.w	ip, r1, r2
 802ab20:	9915      	ldr	r1, [sp, #84]	; 0x54
 802ab22:	440a      	add	r2, r1
 802ab24:	9903      	ldr	r1, [sp, #12]
 802ab26:	edd1 fa00 	vldr	s31, [r1]
 802ab2a:	9905      	ldr	r1, [sp, #20]
 802ab2c:	ed91 fa00 	vldr	s30, [r1]
 802ab30:	9904      	ldr	r1, [sp, #16]
 802ab32:	edd1 ea00 	vldr	s29, [r1]
 802ab36:	9906      	ldr	r1, [sp, #24]
 802ab38:	ed91 ea00 	vldr	s28, [r1]
 802ab3c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ab3e:	edd1 da00 	vldr	s27, [r1]
 802ab42:	9908      	ldr	r1, [sp, #32]
 802ab44:	ed91 da00 	vldr	s26, [r1]
 802ab48:	9907      	ldr	r1, [sp, #28]
 802ab4a:	edd1 ca00 	vldr	s25, [r1]
 802ab4e:	9903      	ldr	r1, [sp, #12]
 802ab50:	ed91 ca01 	vldr	s24, [r1, #4]
 802ab54:	9905      	ldr	r1, [sp, #20]
 802ab56:	edd1 ba01 	vldr	s23, [r1, #4]
 802ab5a:	9904      	ldr	r1, [sp, #16]
 802ab5c:	edd1 aa01 	vldr	s21, [r1, #4]
 802ab60:	9906      	ldr	r1, [sp, #24]
 802ab62:	ed91 aa01 	vldr	s20, [r1, #4]
 802ab66:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ab68:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab6c:	9908      	ldr	r1, [sp, #32]
 802ab6e:	edcd 7a00 	vstr	s15, [sp]
 802ab72:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab76:	9907      	ldr	r1, [sp, #28]
 802ab78:	edcd 7a01 	vstr	s15, [sp, #4]
 802ab7c:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab80:	eb0a 0e07 	add.w	lr, sl, r7
 802ab84:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802ab86:	edcd 7a02 	vstr	s15, [sp, #8]
 802ab8a:	eb0c 010a 	add.w	r1, ip, sl
 802ab8e:	4456      	add	r6, sl
 802ab90:	4455      	add	r5, sl
 802ab92:	4454      	add	r4, sl
 802ab94:	4450      	add	r0, sl
 802ab96:	4452      	add	r2, sl
 802ab98:	46c4      	mov	ip, r8
 802ab9a:	e001      	b.n	802aba0 <arm_radix8_butterfly_f32+0x334>
 802ab9c:	3f3504f3 	.word	0x3f3504f3
 802aba0:	ed96 5a00 	vldr	s10, [r6]
 802aba4:	ed52 9a01 	vldr	s19, [r2, #-4]
 802aba8:	ed11 6a01 	vldr	s12, [r1, #-4]
 802abac:	edd0 7a00 	vldr	s15, [r0]
 802abb0:	ed17 7a01 	vldr	s14, [r7, #-4]
 802abb4:	edde 3a00 	vldr	s7, [lr]
 802abb8:	ed94 3a00 	vldr	s6, [r4]
 802abbc:	ed95 2a00 	vldr	s4, [r5]
 802abc0:	ed9e 0a01 	vldr	s0, [lr, #4]
 802abc4:	ee33 8a85 	vadd.f32	s16, s7, s10
 802abc8:	ee32 1a06 	vadd.f32	s2, s4, s12
 802abcc:	ee33 4a29 	vadd.f32	s8, s6, s19
 802abd0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802abd4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802abd8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802abdc:	ee32 2a46 	vsub.f32	s4, s4, s12
 802abe0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802abe4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abe8:	ed8e 6a00 	vstr	s12, [lr]
 802abec:	edd0 8a01 	vldr	s17, [r0, #4]
 802abf0:	ed95 9a01 	vldr	s18, [r5, #4]
 802abf4:	edd1 2a00 	vldr	s5, [r1]
 802abf8:	ed97 7a00 	vldr	s14, [r7]
 802abfc:	edd4 0a01 	vldr	s1, [r4, #4]
 802ac00:	ed96 6a01 	vldr	s12, [r6, #4]
 802ac04:	edd2 5a00 	vldr	s11, [r2]
 802ac08:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802ac0c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ac10:	ee39 5a62 	vsub.f32	s10, s18, s5
 802ac14:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802ac18:	ee38 4a44 	vsub.f32	s8, s16, s8
 802ac1c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802ac20:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802ac24:	ee79 2a22 	vadd.f32	s5, s18, s5
 802ac28:	ee75 8a69 	vsub.f32	s17, s10, s19
 802ac2c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802ac30:	ee35 5a29 	vadd.f32	s10, s10, s19
 802ac34:	ee72 7a67 	vsub.f32	s15, s4, s15
 802ac38:	ee30 2a06 	vadd.f32	s4, s0, s12
 802ac3c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802ac40:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802ac44:	ee32 9a08 	vadd.f32	s18, s4, s16
 802ac48:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802ac4c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802ac50:	ee71 4a64 	vsub.f32	s9, s2, s9
 802ac54:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802ac58:	ee32 1a87 	vadd.f32	s2, s5, s14
 802ac5c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802ac60:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802ac64:	ee30 6a46 	vsub.f32	s12, s0, s12
 802ac68:	ee73 0a29 	vadd.f32	s1, s6, s19
 802ac6c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802ac70:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ac74:	ee32 7a64 	vsub.f32	s14, s4, s9
 802ac78:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802ac7c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802ac80:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802ac84:	ee75 8a85 	vadd.f32	s17, s11, s10
 802ac88:	ee74 3a22 	vadd.f32	s7, s8, s5
 802ac8c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802ac90:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802ac94:	ee79 1a41 	vsub.f32	s3, s18, s2
 802ac98:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802ac9c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802aca0:	ee74 2a62 	vsub.f32	s5, s8, s5
 802aca4:	ee72 4a24 	vadd.f32	s9, s4, s9
 802aca8:	ee30 4a60 	vsub.f32	s8, s0, s1
 802acac:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802acb0:	ee30 0a20 	vadd.f32	s0, s0, s1
 802acb4:	ee77 9a85 	vadd.f32	s19, s15, s10
 802acb8:	ee36 6a03 	vadd.f32	s12, s12, s6
 802acbc:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802acc0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802acc4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802acc8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802accc:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802acd0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802acd4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802acd8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802acdc:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802ace0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802ace4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802ace8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802acec:	ee72 6a66 	vsub.f32	s13, s4, s13
 802acf0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802acf4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802acf8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802acfc:	ed8e 1a01 	vstr	s2, [lr, #4]
 802ad00:	ee77 3a63 	vsub.f32	s7, s14, s7
 802ad04:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802ad08:	ed9d 7a01 	vldr	s14, [sp, #4]
 802ad0c:	ed86 3a00 	vstr	s6, [r6]
 802ad10:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ad14:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ad18:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ad1c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802ad20:	ee67 2a22 	vmul.f32	s5, s14, s5
 802ad24:	ee64 1a00 	vmul.f32	s3, s8, s0
 802ad28:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ad2c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ad30:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ad34:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ad38:	ed9d 4a00 	vldr	s8, [sp]
 802ad3c:	edc6 6a01 	vstr	s13, [r6, #4]
 802ad40:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ad44:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802ad48:	ee64 9a29 	vmul.f32	s19, s8, s19
 802ad4c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ad50:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ad54:	ee74 4a84 	vadd.f32	s9, s9, s8
 802ad58:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802ad5c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802ad60:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802ad64:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802ad68:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802ad6c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802ad70:	ee75 1a21 	vadd.f32	s3, s10, s3
 802ad74:	ee30 0a68 	vsub.f32	s0, s0, s17
 802ad78:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802ad7c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802ad80:	ee36 6a67 	vsub.f32	s12, s12, s15
 802ad84:	44dc      	add	ip, fp
 802ad86:	45e1      	cmp	r9, ip
 802ad88:	ed84 9a00 	vstr	s18, [r4]
 802ad8c:	edc4 3a01 	vstr	s7, [r4, #4]
 802ad90:	449e      	add	lr, r3
 802ad92:	ed02 7a01 	vstr	s14, [r2, #-4]
 802ad96:	edc2 2a00 	vstr	s5, [r2]
 802ad9a:	441e      	add	r6, r3
 802ad9c:	ed85 2a00 	vstr	s4, [r5]
 802ada0:	ed85 8a01 	vstr	s16, [r5, #4]
 802ada4:	441c      	add	r4, r3
 802ada6:	ed47 1a01 	vstr	s3, [r7, #-4]
 802adaa:	ed87 0a00 	vstr	s0, [r7]
 802adae:	441a      	add	r2, r3
 802adb0:	ed41 4a01 	vstr	s9, [r1, #-4]
 802adb4:	edc1 9a00 	vstr	s19, [r1]
 802adb8:	441d      	add	r5, r3
 802adba:	edc0 0a00 	vstr	s1, [r0]
 802adbe:	441f      	add	r7, r3
 802adc0:	ed80 6a01 	vstr	s12, [r0, #4]
 802adc4:	4419      	add	r1, r3
 802adc6:	4418      	add	r0, r3
 802adc8:	f63f aeea 	bhi.w	802aba0 <arm_radix8_butterfly_f32+0x334>
 802adcc:	9a03      	ldr	r2, [sp, #12]
 802adce:	990d      	ldr	r1, [sp, #52]	; 0x34
 802add0:	440a      	add	r2, r1
 802add2:	9203      	str	r2, [sp, #12]
 802add4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802add6:	9a05      	ldr	r2, [sp, #20]
 802add8:	440a      	add	r2, r1
 802adda:	9205      	str	r2, [sp, #20]
 802addc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802adde:	9a04      	ldr	r2, [sp, #16]
 802ade0:	440a      	add	r2, r1
 802ade2:	9204      	str	r2, [sp, #16]
 802ade4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802ade6:	9a06      	ldr	r2, [sp, #24]
 802ade8:	440a      	add	r2, r1
 802adea:	9206      	str	r2, [sp, #24]
 802adec:	9911      	ldr	r1, [sp, #68]	; 0x44
 802adee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802adf0:	440a      	add	r2, r1
 802adf2:	9209      	str	r2, [sp, #36]	; 0x24
 802adf4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802adf6:	9a08      	ldr	r2, [sp, #32]
 802adf8:	440a      	add	r2, r1
 802adfa:	9208      	str	r2, [sp, #32]
 802adfc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802adfe:	9a07      	ldr	r2, [sp, #28]
 802ae00:	440a      	add	r2, r1
 802ae02:	9207      	str	r2, [sp, #28]
 802ae04:	990c      	ldr	r1, [sp, #48]	; 0x30
 802ae06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802ae08:	f108 0801 	add.w	r8, r8, #1
 802ae0c:	3208      	adds	r2, #8
 802ae0e:	4588      	cmp	r8, r1
 802ae10:	920a      	str	r2, [sp, #40]	; 0x28
 802ae12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802ae14:	f47f ae75 	bne.w	802ab02 <arm_radix8_butterfly_f32+0x296>
 802ae18:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802ae1c:	9300      	str	r3, [sp, #0]
 802ae1e:	46c3      	mov	fp, r8
 802ae20:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802ae24:	e532      	b.n	802a88c <arm_radix8_butterfly_f32+0x20>
 802ae26:	b01d      	add	sp, #116	; 0x74
 802ae28:	ecbd 8b10 	vpop	{d8-d15}
 802ae2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802ae30 <__aeabi_atexit>:
 802ae30:	460b      	mov	r3, r1
 802ae32:	4601      	mov	r1, r0
 802ae34:	4618      	mov	r0, r3
 802ae36:	f000 bef3 	b.w	802bc20 <__cxa_atexit>

0802ae3a <_ZdlPvj>:
 802ae3a:	f000 b812 	b.w	802ae62 <_ZdlPv>

0802ae3e <__cxa_guard_acquire>:
 802ae3e:	6803      	ldr	r3, [r0, #0]
 802ae40:	07db      	lsls	r3, r3, #31
 802ae42:	d406      	bmi.n	802ae52 <__cxa_guard_acquire+0x14>
 802ae44:	7843      	ldrb	r3, [r0, #1]
 802ae46:	b103      	cbz	r3, 802ae4a <__cxa_guard_acquire+0xc>
 802ae48:	deff      	udf	#255	; 0xff
 802ae4a:	2301      	movs	r3, #1
 802ae4c:	7043      	strb	r3, [r0, #1]
 802ae4e:	4618      	mov	r0, r3
 802ae50:	4770      	bx	lr
 802ae52:	2000      	movs	r0, #0
 802ae54:	4770      	bx	lr

0802ae56 <__cxa_guard_release>:
 802ae56:	2301      	movs	r3, #1
 802ae58:	6003      	str	r3, [r0, #0]
 802ae5a:	4770      	bx	lr

0802ae5c <__cxa_pure_virtual>:
 802ae5c:	b508      	push	{r3, lr}
 802ae5e:	f000 f80f 	bl	802ae80 <_ZSt9terminatev>

0802ae62 <_ZdlPv>:
 802ae62:	f000 be29 	b.w	802bab8 <free>

0802ae66 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802ae66:	b508      	push	{r3, lr}
 802ae68:	4780      	blx	r0
 802ae6a:	f000 fdf1 	bl	802ba50 <abort>
	...

0802ae70 <_ZSt13get_terminatev>:
 802ae70:	4b02      	ldr	r3, [pc, #8]	; (802ae7c <_ZSt13get_terminatev+0xc>)
 802ae72:	6818      	ldr	r0, [r3, #0]
 802ae74:	f3bf 8f5b 	dmb	ish
 802ae78:	4770      	bx	lr
 802ae7a:	bf00      	nop
 802ae7c:	20000104 	.word	0x20000104

0802ae80 <_ZSt9terminatev>:
 802ae80:	b508      	push	{r3, lr}
 802ae82:	f7ff fff5 	bl	802ae70 <_ZSt13get_terminatev>
 802ae86:	f7ff ffee 	bl	802ae66 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802ae8c <sqrtf>:
 802ae8c:	b508      	push	{r3, lr}
 802ae8e:	ed2d 8b02 	vpush	{d8}
 802ae92:	eeb0 8a40 	vmov.f32	s16, s0
 802ae96:	f000 f8a1 	bl	802afdc <__ieee754_sqrtf>
 802ae9a:	eeb4 8a48 	vcmp.f32	s16, s16
 802ae9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aea2:	d60c      	bvs.n	802aebe <sqrtf+0x32>
 802aea4:	eddf 8a07 	vldr	s17, [pc, #28]	; 802aec4 <sqrtf+0x38>
 802aea8:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802aeac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aeb0:	d505      	bpl.n	802aebe <sqrtf+0x32>
 802aeb2:	f001 f8d3 	bl	802c05c <__errno>
 802aeb6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802aeba:	2321      	movs	r3, #33	; 0x21
 802aebc:	6003      	str	r3, [r0, #0]
 802aebe:	ecbd 8b02 	vpop	{d8}
 802aec2:	bd08      	pop	{r3, pc}
 802aec4:	00000000 	.word	0x00000000

0802aec8 <cosf>:
 802aec8:	ee10 3a10 	vmov	r3, s0
 802aecc:	b507      	push	{r0, r1, r2, lr}
 802aece:	4a1e      	ldr	r2, [pc, #120]	; (802af48 <cosf+0x80>)
 802aed0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aed4:	4293      	cmp	r3, r2
 802aed6:	dc06      	bgt.n	802aee6 <cosf+0x1e>
 802aed8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802af4c <cosf+0x84>
 802aedc:	b003      	add	sp, #12
 802aede:	f85d eb04 	ldr.w	lr, [sp], #4
 802aee2:	f000 b903 	b.w	802b0ec <__kernel_cosf>
 802aee6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802aeea:	db04      	blt.n	802aef6 <cosf+0x2e>
 802aeec:	ee30 0a40 	vsub.f32	s0, s0, s0
 802aef0:	b003      	add	sp, #12
 802aef2:	f85d fb04 	ldr.w	pc, [sp], #4
 802aef6:	4668      	mov	r0, sp
 802aef8:	f000 f99e 	bl	802b238 <__ieee754_rem_pio2f>
 802aefc:	f000 0003 	and.w	r0, r0, #3
 802af00:	2801      	cmp	r0, #1
 802af02:	d009      	beq.n	802af18 <cosf+0x50>
 802af04:	2802      	cmp	r0, #2
 802af06:	d010      	beq.n	802af2a <cosf+0x62>
 802af08:	b9b0      	cbnz	r0, 802af38 <cosf+0x70>
 802af0a:	eddd 0a01 	vldr	s1, [sp, #4]
 802af0e:	ed9d 0a00 	vldr	s0, [sp]
 802af12:	f000 f8eb 	bl	802b0ec <__kernel_cosf>
 802af16:	e7eb      	b.n	802aef0 <cosf+0x28>
 802af18:	eddd 0a01 	vldr	s1, [sp, #4]
 802af1c:	ed9d 0a00 	vldr	s0, [sp]
 802af20:	f000 f942 	bl	802b1a8 <__kernel_sinf>
 802af24:	eeb1 0a40 	vneg.f32	s0, s0
 802af28:	e7e2      	b.n	802aef0 <cosf+0x28>
 802af2a:	eddd 0a01 	vldr	s1, [sp, #4]
 802af2e:	ed9d 0a00 	vldr	s0, [sp]
 802af32:	f000 f8db 	bl	802b0ec <__kernel_cosf>
 802af36:	e7f5      	b.n	802af24 <cosf+0x5c>
 802af38:	eddd 0a01 	vldr	s1, [sp, #4]
 802af3c:	ed9d 0a00 	vldr	s0, [sp]
 802af40:	2001      	movs	r0, #1
 802af42:	f000 f931 	bl	802b1a8 <__kernel_sinf>
 802af46:	e7d3      	b.n	802aef0 <cosf+0x28>
 802af48:	3f490fd8 	.word	0x3f490fd8
 802af4c:	00000000 	.word	0x00000000

0802af50 <sinf>:
 802af50:	ee10 3a10 	vmov	r3, s0
 802af54:	b507      	push	{r0, r1, r2, lr}
 802af56:	4a1f      	ldr	r2, [pc, #124]	; (802afd4 <sinf+0x84>)
 802af58:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802af5c:	4293      	cmp	r3, r2
 802af5e:	dc07      	bgt.n	802af70 <sinf+0x20>
 802af60:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802afd8 <sinf+0x88>
 802af64:	2000      	movs	r0, #0
 802af66:	b003      	add	sp, #12
 802af68:	f85d eb04 	ldr.w	lr, [sp], #4
 802af6c:	f000 b91c 	b.w	802b1a8 <__kernel_sinf>
 802af70:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802af74:	db04      	blt.n	802af80 <sinf+0x30>
 802af76:	ee30 0a40 	vsub.f32	s0, s0, s0
 802af7a:	b003      	add	sp, #12
 802af7c:	f85d fb04 	ldr.w	pc, [sp], #4
 802af80:	4668      	mov	r0, sp
 802af82:	f000 f959 	bl	802b238 <__ieee754_rem_pio2f>
 802af86:	f000 0003 	and.w	r0, r0, #3
 802af8a:	2801      	cmp	r0, #1
 802af8c:	d00a      	beq.n	802afa4 <sinf+0x54>
 802af8e:	2802      	cmp	r0, #2
 802af90:	d00f      	beq.n	802afb2 <sinf+0x62>
 802af92:	b9c0      	cbnz	r0, 802afc6 <sinf+0x76>
 802af94:	eddd 0a01 	vldr	s1, [sp, #4]
 802af98:	ed9d 0a00 	vldr	s0, [sp]
 802af9c:	2001      	movs	r0, #1
 802af9e:	f000 f903 	bl	802b1a8 <__kernel_sinf>
 802afa2:	e7ea      	b.n	802af7a <sinf+0x2a>
 802afa4:	eddd 0a01 	vldr	s1, [sp, #4]
 802afa8:	ed9d 0a00 	vldr	s0, [sp]
 802afac:	f000 f89e 	bl	802b0ec <__kernel_cosf>
 802afb0:	e7e3      	b.n	802af7a <sinf+0x2a>
 802afb2:	eddd 0a01 	vldr	s1, [sp, #4]
 802afb6:	ed9d 0a00 	vldr	s0, [sp]
 802afba:	2001      	movs	r0, #1
 802afbc:	f000 f8f4 	bl	802b1a8 <__kernel_sinf>
 802afc0:	eeb1 0a40 	vneg.f32	s0, s0
 802afc4:	e7d9      	b.n	802af7a <sinf+0x2a>
 802afc6:	eddd 0a01 	vldr	s1, [sp, #4]
 802afca:	ed9d 0a00 	vldr	s0, [sp]
 802afce:	f000 f88d 	bl	802b0ec <__kernel_cosf>
 802afd2:	e7f5      	b.n	802afc0 <sinf+0x70>
 802afd4:	3f490fd8 	.word	0x3f490fd8
 802afd8:	00000000 	.word	0x00000000

0802afdc <__ieee754_sqrtf>:
 802afdc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802afe0:	4770      	bx	lr
	...

0802afe4 <ceilf>:
 802afe4:	ee10 3a10 	vmov	r3, s0
 802afe8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802afec:	3a7f      	subs	r2, #127	; 0x7f
 802afee:	2a16      	cmp	r2, #22
 802aff0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802aff4:	dc2a      	bgt.n	802b04c <ceilf+0x68>
 802aff6:	2a00      	cmp	r2, #0
 802aff8:	da11      	bge.n	802b01e <ceilf+0x3a>
 802affa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b060 <ceilf+0x7c>
 802affe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b002:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b006:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b00a:	dd05      	ble.n	802b018 <ceilf+0x34>
 802b00c:	2b00      	cmp	r3, #0
 802b00e:	db23      	blt.n	802b058 <ceilf+0x74>
 802b010:	2900      	cmp	r1, #0
 802b012:	bf18      	it	ne
 802b014:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802b018:	ee00 3a10 	vmov	s0, r3
 802b01c:	4770      	bx	lr
 802b01e:	4911      	ldr	r1, [pc, #68]	; (802b064 <ceilf+0x80>)
 802b020:	4111      	asrs	r1, r2
 802b022:	420b      	tst	r3, r1
 802b024:	d0fa      	beq.n	802b01c <ceilf+0x38>
 802b026:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b060 <ceilf+0x7c>
 802b02a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b02e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b036:	ddef      	ble.n	802b018 <ceilf+0x34>
 802b038:	2b00      	cmp	r3, #0
 802b03a:	bfc2      	ittt	gt
 802b03c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802b040:	fa40 f202 	asrgt.w	r2, r0, r2
 802b044:	189b      	addgt	r3, r3, r2
 802b046:	ea23 0301 	bic.w	r3, r3, r1
 802b04a:	e7e5      	b.n	802b018 <ceilf+0x34>
 802b04c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b050:	d3e4      	bcc.n	802b01c <ceilf+0x38>
 802b052:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b056:	4770      	bx	lr
 802b058:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802b05c:	e7dc      	b.n	802b018 <ceilf+0x34>
 802b05e:	bf00      	nop
 802b060:	7149f2ca 	.word	0x7149f2ca
 802b064:	007fffff 	.word	0x007fffff

0802b068 <floorf>:
 802b068:	ee10 3a10 	vmov	r3, s0
 802b06c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b070:	3a7f      	subs	r2, #127	; 0x7f
 802b072:	2a16      	cmp	r2, #22
 802b074:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802b078:	dc2a      	bgt.n	802b0d0 <floorf+0x68>
 802b07a:	2a00      	cmp	r2, #0
 802b07c:	da11      	bge.n	802b0a2 <floorf+0x3a>
 802b07e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802b0e0 <floorf+0x78>
 802b082:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b086:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b08a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b08e:	dd05      	ble.n	802b09c <floorf+0x34>
 802b090:	2b00      	cmp	r3, #0
 802b092:	da23      	bge.n	802b0dc <floorf+0x74>
 802b094:	4a13      	ldr	r2, [pc, #76]	; (802b0e4 <floorf+0x7c>)
 802b096:	2900      	cmp	r1, #0
 802b098:	bf18      	it	ne
 802b09a:	4613      	movne	r3, r2
 802b09c:	ee00 3a10 	vmov	s0, r3
 802b0a0:	4770      	bx	lr
 802b0a2:	4911      	ldr	r1, [pc, #68]	; (802b0e8 <floorf+0x80>)
 802b0a4:	4111      	asrs	r1, r2
 802b0a6:	420b      	tst	r3, r1
 802b0a8:	d0fa      	beq.n	802b0a0 <floorf+0x38>
 802b0aa:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802b0e0 <floorf+0x78>
 802b0ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b0b2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b0b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0ba:	ddef      	ble.n	802b09c <floorf+0x34>
 802b0bc:	2b00      	cmp	r3, #0
 802b0be:	bfbe      	ittt	lt
 802b0c0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802b0c4:	fa40 f202 	asrlt.w	r2, r0, r2
 802b0c8:	189b      	addlt	r3, r3, r2
 802b0ca:	ea23 0301 	bic.w	r3, r3, r1
 802b0ce:	e7e5      	b.n	802b09c <floorf+0x34>
 802b0d0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b0d4:	d3e4      	bcc.n	802b0a0 <floorf+0x38>
 802b0d6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b0da:	4770      	bx	lr
 802b0dc:	2300      	movs	r3, #0
 802b0de:	e7dd      	b.n	802b09c <floorf+0x34>
 802b0e0:	7149f2ca 	.word	0x7149f2ca
 802b0e4:	bf800000 	.word	0xbf800000
 802b0e8:	007fffff 	.word	0x007fffff

0802b0ec <__kernel_cosf>:
 802b0ec:	ee10 3a10 	vmov	r3, s0
 802b0f0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b0f4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b0f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802b0fc:	da05      	bge.n	802b10a <__kernel_cosf+0x1e>
 802b0fe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b102:	ee17 2a90 	vmov	r2, s15
 802b106:	2a00      	cmp	r2, #0
 802b108:	d03b      	beq.n	802b182 <__kernel_cosf+0x96>
 802b10a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b10e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b188 <__kernel_cosf+0x9c>
 802b112:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802b18c <__kernel_cosf+0xa0>
 802b116:	4a1e      	ldr	r2, [pc, #120]	; (802b190 <__kernel_cosf+0xa4>)
 802b118:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b11c:	4293      	cmp	r3, r2
 802b11e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802b194 <__kernel_cosf+0xa8>
 802b122:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b126:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802b198 <__kernel_cosf+0xac>
 802b12a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b12e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802b19c <__kernel_cosf+0xb0>
 802b132:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b136:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802b1a0 <__kernel_cosf+0xb4>
 802b13a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b13e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802b142:	ee26 6a07 	vmul.f32	s12, s12, s14
 802b146:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b14a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802b14e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b152:	dc04      	bgt.n	802b15e <__kernel_cosf+0x72>
 802b154:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b158:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802b15c:	4770      	bx	lr
 802b15e:	4a11      	ldr	r2, [pc, #68]	; (802b1a4 <__kernel_cosf+0xb8>)
 802b160:	4293      	cmp	r3, r2
 802b162:	bfda      	itte	le
 802b164:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802b168:	ee07 3a10 	vmovle	s14, r3
 802b16c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802b170:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b174:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802b178:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b17c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b180:	4770      	bx	lr
 802b182:	eeb0 0a66 	vmov.f32	s0, s13
 802b186:	4770      	bx	lr
 802b188:	ad47d74e 	.word	0xad47d74e
 802b18c:	310f74f6 	.word	0x310f74f6
 802b190:	3e999999 	.word	0x3e999999
 802b194:	b493f27c 	.word	0xb493f27c
 802b198:	37d00d01 	.word	0x37d00d01
 802b19c:	bab60b61 	.word	0xbab60b61
 802b1a0:	3d2aaaab 	.word	0x3d2aaaab
 802b1a4:	3f480000 	.word	0x3f480000

0802b1a8 <__kernel_sinf>:
 802b1a8:	ee10 3a10 	vmov	r3, s0
 802b1ac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b1b0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b1b4:	da04      	bge.n	802b1c0 <__kernel_sinf+0x18>
 802b1b6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b1ba:	ee17 3a90 	vmov	r3, s15
 802b1be:	b35b      	cbz	r3, 802b218 <__kernel_sinf+0x70>
 802b1c0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b1c4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802b21c <__kernel_sinf+0x74>
 802b1c8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802b220 <__kernel_sinf+0x78>
 802b1cc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b1d0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802b224 <__kernel_sinf+0x7c>
 802b1d4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b1d8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802b228 <__kernel_sinf+0x80>
 802b1dc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b1e0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802b22c <__kernel_sinf+0x84>
 802b1e4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802b1e8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b1ec:	b930      	cbnz	r0, 802b1fc <__kernel_sinf+0x54>
 802b1ee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802b230 <__kernel_sinf+0x88>
 802b1f2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b1f6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802b1fa:	4770      	bx	lr
 802b1fc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802b200:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802b204:	eee0 7a86 	vfma.f32	s15, s1, s12
 802b208:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802b20c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802b234 <__kernel_sinf+0x8c>
 802b210:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802b214:	ee30 0a60 	vsub.f32	s0, s0, s1
 802b218:	4770      	bx	lr
 802b21a:	bf00      	nop
 802b21c:	2f2ec9d3 	.word	0x2f2ec9d3
 802b220:	b2d72f34 	.word	0xb2d72f34
 802b224:	3638ef1b 	.word	0x3638ef1b
 802b228:	b9500d01 	.word	0xb9500d01
 802b22c:	3c088889 	.word	0x3c088889
 802b230:	be2aaaab 	.word	0xbe2aaaab
 802b234:	3e2aaaab 	.word	0x3e2aaaab

0802b238 <__ieee754_rem_pio2f>:
 802b238:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b23a:	ee10 6a10 	vmov	r6, s0
 802b23e:	4b86      	ldr	r3, [pc, #536]	; (802b458 <__ieee754_rem_pio2f+0x220>)
 802b240:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802b244:	429d      	cmp	r5, r3
 802b246:	b087      	sub	sp, #28
 802b248:	4604      	mov	r4, r0
 802b24a:	dc05      	bgt.n	802b258 <__ieee754_rem_pio2f+0x20>
 802b24c:	2300      	movs	r3, #0
 802b24e:	ed80 0a00 	vstr	s0, [r0]
 802b252:	6043      	str	r3, [r0, #4]
 802b254:	2000      	movs	r0, #0
 802b256:	e020      	b.n	802b29a <__ieee754_rem_pio2f+0x62>
 802b258:	4b80      	ldr	r3, [pc, #512]	; (802b45c <__ieee754_rem_pio2f+0x224>)
 802b25a:	429d      	cmp	r5, r3
 802b25c:	dc38      	bgt.n	802b2d0 <__ieee754_rem_pio2f+0x98>
 802b25e:	2e00      	cmp	r6, #0
 802b260:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802b460 <__ieee754_rem_pio2f+0x228>
 802b264:	4b7f      	ldr	r3, [pc, #508]	; (802b464 <__ieee754_rem_pio2f+0x22c>)
 802b266:	f025 050f 	bic.w	r5, r5, #15
 802b26a:	dd18      	ble.n	802b29e <__ieee754_rem_pio2f+0x66>
 802b26c:	429d      	cmp	r5, r3
 802b26e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802b272:	bf09      	itett	eq
 802b274:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802b468 <__ieee754_rem_pio2f+0x230>
 802b278:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802b46c <__ieee754_rem_pio2f+0x234>
 802b27c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802b280:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802b470 <__ieee754_rem_pio2f+0x238>
 802b284:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802b288:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b28c:	edc0 6a00 	vstr	s13, [r0]
 802b290:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b294:	edc0 7a01 	vstr	s15, [r0, #4]
 802b298:	2001      	movs	r0, #1
 802b29a:	b007      	add	sp, #28
 802b29c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b29e:	429d      	cmp	r5, r3
 802b2a0:	ee70 7a07 	vadd.f32	s15, s0, s14
 802b2a4:	bf09      	itett	eq
 802b2a6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802b468 <__ieee754_rem_pio2f+0x230>
 802b2aa:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802b46c <__ieee754_rem_pio2f+0x234>
 802b2ae:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802b2b2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802b470 <__ieee754_rem_pio2f+0x238>
 802b2b6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802b2ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b2be:	edc0 6a00 	vstr	s13, [r0]
 802b2c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b2c6:	edc0 7a01 	vstr	s15, [r0, #4]
 802b2ca:	f04f 30ff 	mov.w	r0, #4294967295
 802b2ce:	e7e4      	b.n	802b29a <__ieee754_rem_pio2f+0x62>
 802b2d0:	4b68      	ldr	r3, [pc, #416]	; (802b474 <__ieee754_rem_pio2f+0x23c>)
 802b2d2:	429d      	cmp	r5, r3
 802b2d4:	dc71      	bgt.n	802b3ba <__ieee754_rem_pio2f+0x182>
 802b2d6:	f000 f8db 	bl	802b490 <fabsf>
 802b2da:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802b478 <__ieee754_rem_pio2f+0x240>
 802b2de:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b2e2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802b2e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b2ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b2ee:	ee17 0a90 	vmov	r0, s15
 802b2f2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b460 <__ieee754_rem_pio2f+0x228>
 802b2f6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802b2fa:	281f      	cmp	r0, #31
 802b2fc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b46c <__ieee754_rem_pio2f+0x234>
 802b300:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b304:	eeb1 6a47 	vneg.f32	s12, s14
 802b308:	ee70 6a67 	vsub.f32	s13, s0, s15
 802b30c:	ee16 2a90 	vmov	r2, s13
 802b310:	dc1c      	bgt.n	802b34c <__ieee754_rem_pio2f+0x114>
 802b312:	495a      	ldr	r1, [pc, #360]	; (802b47c <__ieee754_rem_pio2f+0x244>)
 802b314:	1e47      	subs	r7, r0, #1
 802b316:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802b31a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802b31e:	428b      	cmp	r3, r1
 802b320:	d014      	beq.n	802b34c <__ieee754_rem_pio2f+0x114>
 802b322:	6022      	str	r2, [r4, #0]
 802b324:	ed94 7a00 	vldr	s14, [r4]
 802b328:	ee30 0a47 	vsub.f32	s0, s0, s14
 802b32c:	2e00      	cmp	r6, #0
 802b32e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b332:	ed84 0a01 	vstr	s0, [r4, #4]
 802b336:	dab0      	bge.n	802b29a <__ieee754_rem_pio2f+0x62>
 802b338:	eeb1 7a47 	vneg.f32	s14, s14
 802b33c:	eeb1 0a40 	vneg.f32	s0, s0
 802b340:	ed84 7a00 	vstr	s14, [r4]
 802b344:	ed84 0a01 	vstr	s0, [r4, #4]
 802b348:	4240      	negs	r0, r0
 802b34a:	e7a6      	b.n	802b29a <__ieee754_rem_pio2f+0x62>
 802b34c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b350:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802b354:	2908      	cmp	r1, #8
 802b356:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802b35a:	dde2      	ble.n	802b322 <__ieee754_rem_pio2f+0xea>
 802b35c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802b468 <__ieee754_rem_pio2f+0x230>
 802b360:	eef0 6a40 	vmov.f32	s13, s0
 802b364:	eee6 6a25 	vfma.f32	s13, s12, s11
 802b368:	ee70 7a66 	vsub.f32	s15, s0, s13
 802b36c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b370:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802b470 <__ieee754_rem_pio2f+0x238>
 802b374:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802b378:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802b37c:	ee15 2a90 	vmov	r2, s11
 802b380:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b384:	1a5b      	subs	r3, r3, r1
 802b386:	2b19      	cmp	r3, #25
 802b388:	dc04      	bgt.n	802b394 <__ieee754_rem_pio2f+0x15c>
 802b38a:	edc4 5a00 	vstr	s11, [r4]
 802b38e:	eeb0 0a66 	vmov.f32	s0, s13
 802b392:	e7c7      	b.n	802b324 <__ieee754_rem_pio2f+0xec>
 802b394:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802b480 <__ieee754_rem_pio2f+0x248>
 802b398:	eeb0 0a66 	vmov.f32	s0, s13
 802b39c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802b3a0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802b3a4:	eddf 6a37 	vldr	s13, [pc, #220]	; 802b484 <__ieee754_rem_pio2f+0x24c>
 802b3a8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b3ac:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802b3b0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802b3b4:	ed84 7a00 	vstr	s14, [r4]
 802b3b8:	e7b4      	b.n	802b324 <__ieee754_rem_pio2f+0xec>
 802b3ba:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802b3be:	db06      	blt.n	802b3ce <__ieee754_rem_pio2f+0x196>
 802b3c0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802b3c4:	edc0 7a01 	vstr	s15, [r0, #4]
 802b3c8:	edc0 7a00 	vstr	s15, [r0]
 802b3cc:	e742      	b.n	802b254 <__ieee754_rem_pio2f+0x1c>
 802b3ce:	15ea      	asrs	r2, r5, #23
 802b3d0:	3a86      	subs	r2, #134	; 0x86
 802b3d2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802b3d6:	ee07 3a90 	vmov	s15, r3
 802b3da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b3de:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802b488 <__ieee754_rem_pio2f+0x250>
 802b3e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b3e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3ea:	ed8d 7a03 	vstr	s14, [sp, #12]
 802b3ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b3f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b3f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b3fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3fe:	ed8d 7a04 	vstr	s14, [sp, #16]
 802b402:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b406:	eef5 7a40 	vcmp.f32	s15, #0.0
 802b40a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b40e:	edcd 7a05 	vstr	s15, [sp, #20]
 802b412:	d11e      	bne.n	802b452 <__ieee754_rem_pio2f+0x21a>
 802b414:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802b418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b41c:	bf14      	ite	ne
 802b41e:	2302      	movne	r3, #2
 802b420:	2301      	moveq	r3, #1
 802b422:	491a      	ldr	r1, [pc, #104]	; (802b48c <__ieee754_rem_pio2f+0x254>)
 802b424:	9101      	str	r1, [sp, #4]
 802b426:	2102      	movs	r1, #2
 802b428:	9100      	str	r1, [sp, #0]
 802b42a:	a803      	add	r0, sp, #12
 802b42c:	4621      	mov	r1, r4
 802b42e:	f000 f89d 	bl	802b56c <__kernel_rem_pio2f>
 802b432:	2e00      	cmp	r6, #0
 802b434:	f6bf af31 	bge.w	802b29a <__ieee754_rem_pio2f+0x62>
 802b438:	edd4 7a00 	vldr	s15, [r4]
 802b43c:	eef1 7a67 	vneg.f32	s15, s15
 802b440:	edc4 7a00 	vstr	s15, [r4]
 802b444:	edd4 7a01 	vldr	s15, [r4, #4]
 802b448:	eef1 7a67 	vneg.f32	s15, s15
 802b44c:	edc4 7a01 	vstr	s15, [r4, #4]
 802b450:	e77a      	b.n	802b348 <__ieee754_rem_pio2f+0x110>
 802b452:	2303      	movs	r3, #3
 802b454:	e7e5      	b.n	802b422 <__ieee754_rem_pio2f+0x1ea>
 802b456:	bf00      	nop
 802b458:	3f490fd8 	.word	0x3f490fd8
 802b45c:	4016cbe3 	.word	0x4016cbe3
 802b460:	3fc90f80 	.word	0x3fc90f80
 802b464:	3fc90fd0 	.word	0x3fc90fd0
 802b468:	37354400 	.word	0x37354400
 802b46c:	37354443 	.word	0x37354443
 802b470:	2e85a308 	.word	0x2e85a308
 802b474:	43490f80 	.word	0x43490f80
 802b478:	3f22f984 	.word	0x3f22f984
 802b47c:	080438d8 	.word	0x080438d8
 802b480:	2e85a300 	.word	0x2e85a300
 802b484:	248d3132 	.word	0x248d3132
 802b488:	43800000 	.word	0x43800000
 802b48c:	08043958 	.word	0x08043958

0802b490 <fabsf>:
 802b490:	ee10 3a10 	vmov	r3, s0
 802b494:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b498:	ee00 3a10 	vmov	s0, r3
 802b49c:	4770      	bx	lr
	...

0802b4a0 <scalbnf>:
 802b4a0:	ee10 3a10 	vmov	r3, s0
 802b4a4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802b4a8:	d02b      	beq.n	802b502 <scalbnf+0x62>
 802b4aa:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802b4ae:	d302      	bcc.n	802b4b6 <scalbnf+0x16>
 802b4b0:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b4b4:	4770      	bx	lr
 802b4b6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802b4ba:	d123      	bne.n	802b504 <scalbnf+0x64>
 802b4bc:	4b24      	ldr	r3, [pc, #144]	; (802b550 <scalbnf+0xb0>)
 802b4be:	eddf 7a25 	vldr	s15, [pc, #148]	; 802b554 <scalbnf+0xb4>
 802b4c2:	4298      	cmp	r0, r3
 802b4c4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802b4c8:	db17      	blt.n	802b4fa <scalbnf+0x5a>
 802b4ca:	ee10 3a10 	vmov	r3, s0
 802b4ce:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b4d2:	3a19      	subs	r2, #25
 802b4d4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802b4d8:	4288      	cmp	r0, r1
 802b4da:	dd15      	ble.n	802b508 <scalbnf+0x68>
 802b4dc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b558 <scalbnf+0xb8>
 802b4e0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802b55c <scalbnf+0xbc>
 802b4e4:	ee10 3a10 	vmov	r3, s0
 802b4e8:	eeb0 7a67 	vmov.f32	s14, s15
 802b4ec:	2b00      	cmp	r3, #0
 802b4ee:	bfb8      	it	lt
 802b4f0:	eef0 7a66 	vmovlt.f32	s15, s13
 802b4f4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802b4f8:	4770      	bx	lr
 802b4fa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b560 <scalbnf+0xc0>
 802b4fe:	ee27 0a80 	vmul.f32	s0, s15, s0
 802b502:	4770      	bx	lr
 802b504:	0dd2      	lsrs	r2, r2, #23
 802b506:	e7e5      	b.n	802b4d4 <scalbnf+0x34>
 802b508:	4410      	add	r0, r2
 802b50a:	28fe      	cmp	r0, #254	; 0xfe
 802b50c:	dce6      	bgt.n	802b4dc <scalbnf+0x3c>
 802b50e:	2800      	cmp	r0, #0
 802b510:	dd06      	ble.n	802b520 <scalbnf+0x80>
 802b512:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b516:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b51a:	ee00 3a10 	vmov	s0, r3
 802b51e:	4770      	bx	lr
 802b520:	f110 0f16 	cmn.w	r0, #22
 802b524:	da09      	bge.n	802b53a <scalbnf+0x9a>
 802b526:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b560 <scalbnf+0xc0>
 802b52a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802b564 <scalbnf+0xc4>
 802b52e:	ee10 3a10 	vmov	r3, s0
 802b532:	eeb0 7a67 	vmov.f32	s14, s15
 802b536:	2b00      	cmp	r3, #0
 802b538:	e7d9      	b.n	802b4ee <scalbnf+0x4e>
 802b53a:	3019      	adds	r0, #25
 802b53c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b540:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b544:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802b568 <scalbnf+0xc8>
 802b548:	ee07 3a90 	vmov	s15, r3
 802b54c:	e7d7      	b.n	802b4fe <scalbnf+0x5e>
 802b54e:	bf00      	nop
 802b550:	ffff3cb0 	.word	0xffff3cb0
 802b554:	4c000000 	.word	0x4c000000
 802b558:	7149f2ca 	.word	0x7149f2ca
 802b55c:	f149f2ca 	.word	0xf149f2ca
 802b560:	0da24260 	.word	0x0da24260
 802b564:	8da24260 	.word	0x8da24260
 802b568:	33000000 	.word	0x33000000

0802b56c <__kernel_rem_pio2f>:
 802b56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b570:	ed2d 8b04 	vpush	{d8-d9}
 802b574:	b0d9      	sub	sp, #356	; 0x164
 802b576:	4688      	mov	r8, r1
 802b578:	9002      	str	r0, [sp, #8]
 802b57a:	49b8      	ldr	r1, [pc, #736]	; (802b85c <__kernel_rem_pio2f+0x2f0>)
 802b57c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802b57e:	9301      	str	r3, [sp, #4]
 802b580:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802b584:	9901      	ldr	r1, [sp, #4]
 802b586:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802b588:	f101 3bff 	add.w	fp, r1, #4294967295
 802b58c:	1d11      	adds	r1, r2, #4
 802b58e:	db25      	blt.n	802b5dc <__kernel_rem_pio2f+0x70>
 802b590:	1ed0      	subs	r0, r2, #3
 802b592:	bf48      	it	mi
 802b594:	1d10      	addmi	r0, r2, #4
 802b596:	10c0      	asrs	r0, r0, #3
 802b598:	1c45      	adds	r5, r0, #1
 802b59a:	00e9      	lsls	r1, r5, #3
 802b59c:	eba0 070b 	sub.w	r7, r0, fp
 802b5a0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b5a4:	9103      	str	r1, [sp, #12]
 802b5a6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802b5aa:	eb0a 0c0b 	add.w	ip, sl, fp
 802b5ae:	ae1c      	add	r6, sp, #112	; 0x70
 802b5b0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802b5b4:	2400      	movs	r4, #0
 802b5b6:	4564      	cmp	r4, ip
 802b5b8:	dd12      	ble.n	802b5e0 <__kernel_rem_pio2f+0x74>
 802b5ba:	9901      	ldr	r1, [sp, #4]
 802b5bc:	ac1c      	add	r4, sp, #112	; 0x70
 802b5be:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802b5c2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802b5c6:	f04f 0c00 	mov.w	ip, #0
 802b5ca:	45d4      	cmp	ip, sl
 802b5cc:	dc27      	bgt.n	802b61e <__kernel_rem_pio2f+0xb2>
 802b5ce:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b5d2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b5d6:	4627      	mov	r7, r4
 802b5d8:	2600      	movs	r6, #0
 802b5da:	e016      	b.n	802b60a <__kernel_rem_pio2f+0x9e>
 802b5dc:	2000      	movs	r0, #0
 802b5de:	e7db      	b.n	802b598 <__kernel_rem_pio2f+0x2c>
 802b5e0:	42e7      	cmn	r7, r4
 802b5e2:	bf5d      	ittte	pl
 802b5e4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b5e8:	ee07 1a90 	vmovpl	s15, r1
 802b5ec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b5f0:	eef0 7a47 	vmovmi.f32	s15, s14
 802b5f4:	ece6 7a01 	vstmia	r6!, {s15}
 802b5f8:	3401      	adds	r4, #1
 802b5fa:	e7dc      	b.n	802b5b6 <__kernel_rem_pio2f+0x4a>
 802b5fc:	ecfe 6a01 	vldmia	lr!, {s13}
 802b600:	ed97 7a00 	vldr	s14, [r7]
 802b604:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b608:	3601      	adds	r6, #1
 802b60a:	455e      	cmp	r6, fp
 802b60c:	f1a7 0704 	sub.w	r7, r7, #4
 802b610:	ddf4      	ble.n	802b5fc <__kernel_rem_pio2f+0x90>
 802b612:	ece9 7a01 	vstmia	r9!, {s15}
 802b616:	f10c 0c01 	add.w	ip, ip, #1
 802b61a:	3404      	adds	r4, #4
 802b61c:	e7d5      	b.n	802b5ca <__kernel_rem_pio2f+0x5e>
 802b61e:	a908      	add	r1, sp, #32
 802b620:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b624:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b628:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b868 <__kernel_rem_pio2f+0x2fc>
 802b62c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b864 <__kernel_rem_pio2f+0x2f8>
 802b630:	9105      	str	r1, [sp, #20]
 802b632:	9304      	str	r3, [sp, #16]
 802b634:	4656      	mov	r6, sl
 802b636:	00b3      	lsls	r3, r6, #2
 802b638:	9306      	str	r3, [sp, #24]
 802b63a:	ab58      	add	r3, sp, #352	; 0x160
 802b63c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b640:	ac08      	add	r4, sp, #32
 802b642:	ab44      	add	r3, sp, #272	; 0x110
 802b644:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b648:	46a4      	mov	ip, r4
 802b64a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b64e:	4637      	mov	r7, r6
 802b650:	2f00      	cmp	r7, #0
 802b652:	f1a0 0004 	sub.w	r0, r0, #4
 802b656:	dc4a      	bgt.n	802b6ee <__kernel_rem_pio2f+0x182>
 802b658:	4628      	mov	r0, r5
 802b65a:	9207      	str	r2, [sp, #28]
 802b65c:	f7ff ff20 	bl	802b4a0 <scalbnf>
 802b660:	eeb0 8a40 	vmov.f32	s16, s0
 802b664:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b668:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b66c:	f7ff fcfc 	bl	802b068 <floorf>
 802b670:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b674:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b678:	2d00      	cmp	r5, #0
 802b67a:	9a07      	ldr	r2, [sp, #28]
 802b67c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b680:	ee17 9a90 	vmov	r9, s15
 802b684:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b688:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b68c:	dd41      	ble.n	802b712 <__kernel_rem_pio2f+0x1a6>
 802b68e:	f106 3cff 	add.w	ip, r6, #4294967295
 802b692:	ab08      	add	r3, sp, #32
 802b694:	f1c5 0e08 	rsb	lr, r5, #8
 802b698:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b69c:	fa47 f00e 	asr.w	r0, r7, lr
 802b6a0:	4481      	add	r9, r0
 802b6a2:	fa00 f00e 	lsl.w	r0, r0, lr
 802b6a6:	1a3f      	subs	r7, r7, r0
 802b6a8:	f1c5 0007 	rsb	r0, r5, #7
 802b6ac:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b6b0:	4107      	asrs	r7, r0
 802b6b2:	2f00      	cmp	r7, #0
 802b6b4:	dd3c      	ble.n	802b730 <__kernel_rem_pio2f+0x1c4>
 802b6b6:	f04f 0e00 	mov.w	lr, #0
 802b6ba:	f109 0901 	add.w	r9, r9, #1
 802b6be:	4671      	mov	r1, lr
 802b6c0:	4576      	cmp	r6, lr
 802b6c2:	dc67      	bgt.n	802b794 <__kernel_rem_pio2f+0x228>
 802b6c4:	2d00      	cmp	r5, #0
 802b6c6:	dd03      	ble.n	802b6d0 <__kernel_rem_pio2f+0x164>
 802b6c8:	2d01      	cmp	r5, #1
 802b6ca:	d074      	beq.n	802b7b6 <__kernel_rem_pio2f+0x24a>
 802b6cc:	2d02      	cmp	r5, #2
 802b6ce:	d07b      	beq.n	802b7c8 <__kernel_rem_pio2f+0x25c>
 802b6d0:	2f02      	cmp	r7, #2
 802b6d2:	d12d      	bne.n	802b730 <__kernel_rem_pio2f+0x1c4>
 802b6d4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b6d8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b6dc:	b341      	cbz	r1, 802b730 <__kernel_rem_pio2f+0x1c4>
 802b6de:	4628      	mov	r0, r5
 802b6e0:	9207      	str	r2, [sp, #28]
 802b6e2:	f7ff fedd 	bl	802b4a0 <scalbnf>
 802b6e6:	9a07      	ldr	r2, [sp, #28]
 802b6e8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b6ec:	e020      	b.n	802b730 <__kernel_rem_pio2f+0x1c4>
 802b6ee:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b6f2:	3f01      	subs	r7, #1
 802b6f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b6f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b6fc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b700:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b704:	ecac 0a01 	vstmia	ip!, {s0}
 802b708:	ed90 0a00 	vldr	s0, [r0]
 802b70c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b710:	e79e      	b.n	802b650 <__kernel_rem_pio2f+0xe4>
 802b712:	d105      	bne.n	802b720 <__kernel_rem_pio2f+0x1b4>
 802b714:	1e70      	subs	r0, r6, #1
 802b716:	ab08      	add	r3, sp, #32
 802b718:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b71c:	11ff      	asrs	r7, r7, #7
 802b71e:	e7c8      	b.n	802b6b2 <__kernel_rem_pio2f+0x146>
 802b720:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b724:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b728:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b72c:	da30      	bge.n	802b790 <__kernel_rem_pio2f+0x224>
 802b72e:	2700      	movs	r7, #0
 802b730:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b738:	f040 809a 	bne.w	802b870 <__kernel_rem_pio2f+0x304>
 802b73c:	1e74      	subs	r4, r6, #1
 802b73e:	46a4      	mov	ip, r4
 802b740:	2100      	movs	r1, #0
 802b742:	45d4      	cmp	ip, sl
 802b744:	da47      	bge.n	802b7d6 <__kernel_rem_pio2f+0x26a>
 802b746:	2900      	cmp	r1, #0
 802b748:	d063      	beq.n	802b812 <__kernel_rem_pio2f+0x2a6>
 802b74a:	ab08      	add	r3, sp, #32
 802b74c:	3d08      	subs	r5, #8
 802b74e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b752:	2b00      	cmp	r3, #0
 802b754:	d07f      	beq.n	802b856 <__kernel_rem_pio2f+0x2ea>
 802b756:	4628      	mov	r0, r5
 802b758:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b75c:	f7ff fea0 	bl	802b4a0 <scalbnf>
 802b760:	1c63      	adds	r3, r4, #1
 802b762:	aa44      	add	r2, sp, #272	; 0x110
 802b764:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b868 <__kernel_rem_pio2f+0x2fc>
 802b768:	0099      	lsls	r1, r3, #2
 802b76a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b76e:	4623      	mov	r3, r4
 802b770:	2b00      	cmp	r3, #0
 802b772:	f280 80ad 	bge.w	802b8d0 <__kernel_rem_pio2f+0x364>
 802b776:	4623      	mov	r3, r4
 802b778:	2b00      	cmp	r3, #0
 802b77a:	f2c0 80cb 	blt.w	802b914 <__kernel_rem_pio2f+0x3a8>
 802b77e:	aa44      	add	r2, sp, #272	; 0x110
 802b780:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b784:	4e36      	ldr	r6, [pc, #216]	; (802b860 <__kernel_rem_pio2f+0x2f4>)
 802b786:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b78a:	2000      	movs	r0, #0
 802b78c:	1ae2      	subs	r2, r4, r3
 802b78e:	e0b6      	b.n	802b8fe <__kernel_rem_pio2f+0x392>
 802b790:	2702      	movs	r7, #2
 802b792:	e790      	b.n	802b6b6 <__kernel_rem_pio2f+0x14a>
 802b794:	6820      	ldr	r0, [r4, #0]
 802b796:	b949      	cbnz	r1, 802b7ac <__kernel_rem_pio2f+0x240>
 802b798:	b118      	cbz	r0, 802b7a2 <__kernel_rem_pio2f+0x236>
 802b79a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b79e:	6020      	str	r0, [r4, #0]
 802b7a0:	2001      	movs	r0, #1
 802b7a2:	f10e 0e01 	add.w	lr, lr, #1
 802b7a6:	3404      	adds	r4, #4
 802b7a8:	4601      	mov	r1, r0
 802b7aa:	e789      	b.n	802b6c0 <__kernel_rem_pio2f+0x154>
 802b7ac:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b7b0:	6020      	str	r0, [r4, #0]
 802b7b2:	4608      	mov	r0, r1
 802b7b4:	e7f5      	b.n	802b7a2 <__kernel_rem_pio2f+0x236>
 802b7b6:	1e74      	subs	r4, r6, #1
 802b7b8:	ab08      	add	r3, sp, #32
 802b7ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b7be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b7c2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b7c6:	e783      	b.n	802b6d0 <__kernel_rem_pio2f+0x164>
 802b7c8:	1e74      	subs	r4, r6, #1
 802b7ca:	ab08      	add	r3, sp, #32
 802b7cc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b7d0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b7d4:	e7f5      	b.n	802b7c2 <__kernel_rem_pio2f+0x256>
 802b7d6:	ab08      	add	r3, sp, #32
 802b7d8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b7dc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b7e0:	4301      	orrs	r1, r0
 802b7e2:	e7ae      	b.n	802b742 <__kernel_rem_pio2f+0x1d6>
 802b7e4:	3001      	adds	r0, #1
 802b7e6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b7ea:	2f00      	cmp	r7, #0
 802b7ec:	d0fa      	beq.n	802b7e4 <__kernel_rem_pio2f+0x278>
 802b7ee:	9b06      	ldr	r3, [sp, #24]
 802b7f0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b7f4:	eb0d 0403 	add.w	r4, sp, r3
 802b7f8:	9b01      	ldr	r3, [sp, #4]
 802b7fa:	18f7      	adds	r7, r6, r3
 802b7fc:	ab1c      	add	r3, sp, #112	; 0x70
 802b7fe:	f106 0c01 	add.w	ip, r6, #1
 802b802:	3c4c      	subs	r4, #76	; 0x4c
 802b804:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b808:	4430      	add	r0, r6
 802b80a:	4560      	cmp	r0, ip
 802b80c:	da04      	bge.n	802b818 <__kernel_rem_pio2f+0x2ac>
 802b80e:	4606      	mov	r6, r0
 802b810:	e711      	b.n	802b636 <__kernel_rem_pio2f+0xca>
 802b812:	9c05      	ldr	r4, [sp, #20]
 802b814:	2001      	movs	r0, #1
 802b816:	e7e6      	b.n	802b7e6 <__kernel_rem_pio2f+0x27a>
 802b818:	9b04      	ldr	r3, [sp, #16]
 802b81a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b81e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b822:	9306      	str	r3, [sp, #24]
 802b824:	ee07 3a90 	vmov	s15, r3
 802b828:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b82c:	2600      	movs	r6, #0
 802b82e:	ece7 7a01 	vstmia	r7!, {s15}
 802b832:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b836:	46b9      	mov	r9, r7
 802b838:	455e      	cmp	r6, fp
 802b83a:	dd04      	ble.n	802b846 <__kernel_rem_pio2f+0x2da>
 802b83c:	ece4 7a01 	vstmia	r4!, {s15}
 802b840:	f10c 0c01 	add.w	ip, ip, #1
 802b844:	e7e1      	b.n	802b80a <__kernel_rem_pio2f+0x29e>
 802b846:	ecfe 6a01 	vldmia	lr!, {s13}
 802b84a:	ed39 7a01 	vldmdb	r9!, {s14}
 802b84e:	3601      	adds	r6, #1
 802b850:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b854:	e7f0      	b.n	802b838 <__kernel_rem_pio2f+0x2cc>
 802b856:	3c01      	subs	r4, #1
 802b858:	e777      	b.n	802b74a <__kernel_rem_pio2f+0x1de>
 802b85a:	bf00      	nop
 802b85c:	08043c9c 	.word	0x08043c9c
 802b860:	08043c70 	.word	0x08043c70
 802b864:	43800000 	.word	0x43800000
 802b868:	3b800000 	.word	0x3b800000
 802b86c:	00000000 	.word	0x00000000
 802b870:	9b03      	ldr	r3, [sp, #12]
 802b872:	eeb0 0a48 	vmov.f32	s0, s16
 802b876:	1a98      	subs	r0, r3, r2
 802b878:	f7ff fe12 	bl	802b4a0 <scalbnf>
 802b87c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b864 <__kernel_rem_pio2f+0x2f8>
 802b880:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b888:	db19      	blt.n	802b8be <__kernel_rem_pio2f+0x352>
 802b88a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b868 <__kernel_rem_pio2f+0x2fc>
 802b88e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b892:	aa08      	add	r2, sp, #32
 802b894:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b898:	1c74      	adds	r4, r6, #1
 802b89a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b89e:	3508      	adds	r5, #8
 802b8a0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b8a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b8a8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b8ac:	ee10 3a10 	vmov	r3, s0
 802b8b0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b8b4:	ee17 3a90 	vmov	r3, s15
 802b8b8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b8bc:	e74b      	b.n	802b756 <__kernel_rem_pio2f+0x1ea>
 802b8be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b8c2:	aa08      	add	r2, sp, #32
 802b8c4:	ee10 3a10 	vmov	r3, s0
 802b8c8:	4634      	mov	r4, r6
 802b8ca:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b8ce:	e742      	b.n	802b756 <__kernel_rem_pio2f+0x1ea>
 802b8d0:	a808      	add	r0, sp, #32
 802b8d2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b8d6:	9001      	str	r0, [sp, #4]
 802b8d8:	ee07 0a90 	vmov	s15, r0
 802b8dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b8e0:	3b01      	subs	r3, #1
 802b8e2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8e6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b8ea:	ed62 7a01 	vstmdb	r2!, {s15}
 802b8ee:	e73f      	b.n	802b770 <__kernel_rem_pio2f+0x204>
 802b8f0:	ecf6 6a01 	vldmia	r6!, {s13}
 802b8f4:	ecb5 7a01 	vldmia	r5!, {s14}
 802b8f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b8fc:	3001      	adds	r0, #1
 802b8fe:	4550      	cmp	r0, sl
 802b900:	dc01      	bgt.n	802b906 <__kernel_rem_pio2f+0x39a>
 802b902:	4290      	cmp	r0, r2
 802b904:	ddf4      	ble.n	802b8f0 <__kernel_rem_pio2f+0x384>
 802b906:	a858      	add	r0, sp, #352	; 0x160
 802b908:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b90c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b910:	3b01      	subs	r3, #1
 802b912:	e731      	b.n	802b778 <__kernel_rem_pio2f+0x20c>
 802b914:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b916:	2b02      	cmp	r3, #2
 802b918:	dc09      	bgt.n	802b92e <__kernel_rem_pio2f+0x3c2>
 802b91a:	2b00      	cmp	r3, #0
 802b91c:	dc2b      	bgt.n	802b976 <__kernel_rem_pio2f+0x40a>
 802b91e:	d044      	beq.n	802b9aa <__kernel_rem_pio2f+0x43e>
 802b920:	f009 0007 	and.w	r0, r9, #7
 802b924:	b059      	add	sp, #356	; 0x164
 802b926:	ecbd 8b04 	vpop	{d8-d9}
 802b92a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b92e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b930:	2b03      	cmp	r3, #3
 802b932:	d1f5      	bne.n	802b920 <__kernel_rem_pio2f+0x3b4>
 802b934:	aa30      	add	r2, sp, #192	; 0xc0
 802b936:	1f0b      	subs	r3, r1, #4
 802b938:	4413      	add	r3, r2
 802b93a:	461a      	mov	r2, r3
 802b93c:	4620      	mov	r0, r4
 802b93e:	2800      	cmp	r0, #0
 802b940:	f1a2 0204 	sub.w	r2, r2, #4
 802b944:	dc52      	bgt.n	802b9ec <__kernel_rem_pio2f+0x480>
 802b946:	4622      	mov	r2, r4
 802b948:	2a01      	cmp	r2, #1
 802b94a:	f1a3 0304 	sub.w	r3, r3, #4
 802b94e:	dc5d      	bgt.n	802ba0c <__kernel_rem_pio2f+0x4a0>
 802b950:	ab30      	add	r3, sp, #192	; 0xc0
 802b952:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b956:	440b      	add	r3, r1
 802b958:	2c01      	cmp	r4, #1
 802b95a:	dc67      	bgt.n	802ba2c <__kernel_rem_pio2f+0x4c0>
 802b95c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b960:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b964:	2f00      	cmp	r7, #0
 802b966:	d167      	bne.n	802ba38 <__kernel_rem_pio2f+0x4cc>
 802b968:	edc8 6a00 	vstr	s13, [r8]
 802b96c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b970:	edc8 7a02 	vstr	s15, [r8, #8]
 802b974:	e7d4      	b.n	802b920 <__kernel_rem_pio2f+0x3b4>
 802b976:	ab30      	add	r3, sp, #192	; 0xc0
 802b978:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b97c:	440b      	add	r3, r1
 802b97e:	4622      	mov	r2, r4
 802b980:	2a00      	cmp	r2, #0
 802b982:	da24      	bge.n	802b9ce <__kernel_rem_pio2f+0x462>
 802b984:	b34f      	cbz	r7, 802b9da <__kernel_rem_pio2f+0x46e>
 802b986:	eef1 7a47 	vneg.f32	s15, s14
 802b98a:	edc8 7a00 	vstr	s15, [r8]
 802b98e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b992:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b996:	aa31      	add	r2, sp, #196	; 0xc4
 802b998:	2301      	movs	r3, #1
 802b99a:	429c      	cmp	r4, r3
 802b99c:	da20      	bge.n	802b9e0 <__kernel_rem_pio2f+0x474>
 802b99e:	b10f      	cbz	r7, 802b9a4 <__kernel_rem_pio2f+0x438>
 802b9a0:	eef1 7a67 	vneg.f32	s15, s15
 802b9a4:	edc8 7a01 	vstr	s15, [r8, #4]
 802b9a8:	e7ba      	b.n	802b920 <__kernel_rem_pio2f+0x3b4>
 802b9aa:	ab30      	add	r3, sp, #192	; 0xc0
 802b9ac:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b86c <__kernel_rem_pio2f+0x300>
 802b9b0:	440b      	add	r3, r1
 802b9b2:	2c00      	cmp	r4, #0
 802b9b4:	da05      	bge.n	802b9c2 <__kernel_rem_pio2f+0x456>
 802b9b6:	b10f      	cbz	r7, 802b9bc <__kernel_rem_pio2f+0x450>
 802b9b8:	eef1 7a67 	vneg.f32	s15, s15
 802b9bc:	edc8 7a00 	vstr	s15, [r8]
 802b9c0:	e7ae      	b.n	802b920 <__kernel_rem_pio2f+0x3b4>
 802b9c2:	ed33 7a01 	vldmdb	r3!, {s14}
 802b9c6:	3c01      	subs	r4, #1
 802b9c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b9cc:	e7f1      	b.n	802b9b2 <__kernel_rem_pio2f+0x446>
 802b9ce:	ed73 7a01 	vldmdb	r3!, {s15}
 802b9d2:	3a01      	subs	r2, #1
 802b9d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b9d8:	e7d2      	b.n	802b980 <__kernel_rem_pio2f+0x414>
 802b9da:	eef0 7a47 	vmov.f32	s15, s14
 802b9de:	e7d4      	b.n	802b98a <__kernel_rem_pio2f+0x41e>
 802b9e0:	ecb2 7a01 	vldmia	r2!, {s14}
 802b9e4:	3301      	adds	r3, #1
 802b9e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b9ea:	e7d6      	b.n	802b99a <__kernel_rem_pio2f+0x42e>
 802b9ec:	edd2 7a00 	vldr	s15, [r2]
 802b9f0:	edd2 6a01 	vldr	s13, [r2, #4]
 802b9f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b9f8:	3801      	subs	r0, #1
 802b9fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b9fe:	ed82 7a00 	vstr	s14, [r2]
 802ba02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ba06:	edc2 7a01 	vstr	s15, [r2, #4]
 802ba0a:	e798      	b.n	802b93e <__kernel_rem_pio2f+0x3d2>
 802ba0c:	edd3 7a00 	vldr	s15, [r3]
 802ba10:	edd3 6a01 	vldr	s13, [r3, #4]
 802ba14:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ba18:	3a01      	subs	r2, #1
 802ba1a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ba1e:	ed83 7a00 	vstr	s14, [r3]
 802ba22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ba26:	edc3 7a01 	vstr	s15, [r3, #4]
 802ba2a:	e78d      	b.n	802b948 <__kernel_rem_pio2f+0x3dc>
 802ba2c:	ed33 7a01 	vldmdb	r3!, {s14}
 802ba30:	3c01      	subs	r4, #1
 802ba32:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ba36:	e78f      	b.n	802b958 <__kernel_rem_pio2f+0x3ec>
 802ba38:	eef1 6a66 	vneg.f32	s13, s13
 802ba3c:	eeb1 7a47 	vneg.f32	s14, s14
 802ba40:	edc8 6a00 	vstr	s13, [r8]
 802ba44:	ed88 7a01 	vstr	s14, [r8, #4]
 802ba48:	eef1 7a67 	vneg.f32	s15, s15
 802ba4c:	e790      	b.n	802b970 <__kernel_rem_pio2f+0x404>
 802ba4e:	bf00      	nop

0802ba50 <abort>:
 802ba50:	b508      	push	{r3, lr}
 802ba52:	2006      	movs	r0, #6
 802ba54:	f000 fa3a 	bl	802becc <raise>
 802ba58:	2001      	movs	r0, #1
 802ba5a:	f7d6 f8f1 	bl	8001c40 <_exit>
	...

0802ba60 <__assert_func>:
 802ba60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802ba62:	4614      	mov	r4, r2
 802ba64:	461a      	mov	r2, r3
 802ba66:	4b09      	ldr	r3, [pc, #36]	; (802ba8c <__assert_func+0x2c>)
 802ba68:	681b      	ldr	r3, [r3, #0]
 802ba6a:	4605      	mov	r5, r0
 802ba6c:	68d8      	ldr	r0, [r3, #12]
 802ba6e:	b14c      	cbz	r4, 802ba84 <__assert_func+0x24>
 802ba70:	4b07      	ldr	r3, [pc, #28]	; (802ba90 <__assert_func+0x30>)
 802ba72:	9100      	str	r1, [sp, #0]
 802ba74:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802ba78:	4906      	ldr	r1, [pc, #24]	; (802ba94 <__assert_func+0x34>)
 802ba7a:	462b      	mov	r3, r5
 802ba7c:	f000 f982 	bl	802bd84 <fiprintf>
 802ba80:	f7ff ffe6 	bl	802ba50 <abort>
 802ba84:	4b04      	ldr	r3, [pc, #16]	; (802ba98 <__assert_func+0x38>)
 802ba86:	461c      	mov	r4, r3
 802ba88:	e7f3      	b.n	802ba72 <__assert_func+0x12>
 802ba8a:	bf00      	nop
 802ba8c:	20000160 	.word	0x20000160
 802ba90:	08043ca8 	.word	0x08043ca8
 802ba94:	08043cb5 	.word	0x08043cb5
 802ba98:	08043ce3 	.word	0x08043ce3

0802ba9c <atexit>:
 802ba9c:	2300      	movs	r3, #0
 802ba9e:	4601      	mov	r1, r0
 802baa0:	461a      	mov	r2, r3
 802baa2:	4618      	mov	r0, r3
 802baa4:	f000 bb16 	b.w	802c0d4 <__register_exitproc>

0802baa8 <malloc>:
 802baa8:	4b02      	ldr	r3, [pc, #8]	; (802bab4 <malloc+0xc>)
 802baaa:	4601      	mov	r1, r0
 802baac:	6818      	ldr	r0, [r3, #0]
 802baae:	f000 b82b 	b.w	802bb08 <_malloc_r>
 802bab2:	bf00      	nop
 802bab4:	20000160 	.word	0x20000160

0802bab8 <free>:
 802bab8:	4b02      	ldr	r3, [pc, #8]	; (802bac4 <free+0xc>)
 802baba:	4601      	mov	r1, r0
 802babc:	6818      	ldr	r0, [r3, #0]
 802babe:	f000 bb67 	b.w	802c190 <_free_r>
 802bac2:	bf00      	nop
 802bac4:	20000160 	.word	0x20000160

0802bac8 <sbrk_aligned>:
 802bac8:	b570      	push	{r4, r5, r6, lr}
 802baca:	4e0e      	ldr	r6, [pc, #56]	; (802bb04 <sbrk_aligned+0x3c>)
 802bacc:	460c      	mov	r4, r1
 802bace:	6831      	ldr	r1, [r6, #0]
 802bad0:	4605      	mov	r5, r0
 802bad2:	b911      	cbnz	r1, 802bada <sbrk_aligned+0x12>
 802bad4:	f000 faa0 	bl	802c018 <_sbrk_r>
 802bad8:	6030      	str	r0, [r6, #0]
 802bada:	4621      	mov	r1, r4
 802badc:	4628      	mov	r0, r5
 802bade:	f000 fa9b 	bl	802c018 <_sbrk_r>
 802bae2:	1c43      	adds	r3, r0, #1
 802bae4:	d00a      	beq.n	802bafc <sbrk_aligned+0x34>
 802bae6:	1cc4      	adds	r4, r0, #3
 802bae8:	f024 0403 	bic.w	r4, r4, #3
 802baec:	42a0      	cmp	r0, r4
 802baee:	d007      	beq.n	802bb00 <sbrk_aligned+0x38>
 802baf0:	1a21      	subs	r1, r4, r0
 802baf2:	4628      	mov	r0, r5
 802baf4:	f000 fa90 	bl	802c018 <_sbrk_r>
 802baf8:	3001      	adds	r0, #1
 802bafa:	d101      	bne.n	802bb00 <sbrk_aligned+0x38>
 802bafc:	f04f 34ff 	mov.w	r4, #4294967295
 802bb00:	4620      	mov	r0, r4
 802bb02:	bd70      	pop	{r4, r5, r6, pc}
 802bb04:	2001418c 	.word	0x2001418c

0802bb08 <_malloc_r>:
 802bb08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bb0c:	1ccd      	adds	r5, r1, #3
 802bb0e:	f025 0503 	bic.w	r5, r5, #3
 802bb12:	3508      	adds	r5, #8
 802bb14:	2d0c      	cmp	r5, #12
 802bb16:	bf38      	it	cc
 802bb18:	250c      	movcc	r5, #12
 802bb1a:	2d00      	cmp	r5, #0
 802bb1c:	4607      	mov	r7, r0
 802bb1e:	db01      	blt.n	802bb24 <_malloc_r+0x1c>
 802bb20:	42a9      	cmp	r1, r5
 802bb22:	d905      	bls.n	802bb30 <_malloc_r+0x28>
 802bb24:	230c      	movs	r3, #12
 802bb26:	603b      	str	r3, [r7, #0]
 802bb28:	2600      	movs	r6, #0
 802bb2a:	4630      	mov	r0, r6
 802bb2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bb30:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802bc04 <_malloc_r+0xfc>
 802bb34:	f000 f868 	bl	802bc08 <__malloc_lock>
 802bb38:	f8d8 3000 	ldr.w	r3, [r8]
 802bb3c:	461c      	mov	r4, r3
 802bb3e:	bb5c      	cbnz	r4, 802bb98 <_malloc_r+0x90>
 802bb40:	4629      	mov	r1, r5
 802bb42:	4638      	mov	r0, r7
 802bb44:	f7ff ffc0 	bl	802bac8 <sbrk_aligned>
 802bb48:	1c43      	adds	r3, r0, #1
 802bb4a:	4604      	mov	r4, r0
 802bb4c:	d155      	bne.n	802bbfa <_malloc_r+0xf2>
 802bb4e:	f8d8 4000 	ldr.w	r4, [r8]
 802bb52:	4626      	mov	r6, r4
 802bb54:	2e00      	cmp	r6, #0
 802bb56:	d145      	bne.n	802bbe4 <_malloc_r+0xdc>
 802bb58:	2c00      	cmp	r4, #0
 802bb5a:	d048      	beq.n	802bbee <_malloc_r+0xe6>
 802bb5c:	6823      	ldr	r3, [r4, #0]
 802bb5e:	4631      	mov	r1, r6
 802bb60:	4638      	mov	r0, r7
 802bb62:	eb04 0903 	add.w	r9, r4, r3
 802bb66:	f000 fa57 	bl	802c018 <_sbrk_r>
 802bb6a:	4581      	cmp	r9, r0
 802bb6c:	d13f      	bne.n	802bbee <_malloc_r+0xe6>
 802bb6e:	6821      	ldr	r1, [r4, #0]
 802bb70:	1a6d      	subs	r5, r5, r1
 802bb72:	4629      	mov	r1, r5
 802bb74:	4638      	mov	r0, r7
 802bb76:	f7ff ffa7 	bl	802bac8 <sbrk_aligned>
 802bb7a:	3001      	adds	r0, #1
 802bb7c:	d037      	beq.n	802bbee <_malloc_r+0xe6>
 802bb7e:	6823      	ldr	r3, [r4, #0]
 802bb80:	442b      	add	r3, r5
 802bb82:	6023      	str	r3, [r4, #0]
 802bb84:	f8d8 3000 	ldr.w	r3, [r8]
 802bb88:	2b00      	cmp	r3, #0
 802bb8a:	d038      	beq.n	802bbfe <_malloc_r+0xf6>
 802bb8c:	685a      	ldr	r2, [r3, #4]
 802bb8e:	42a2      	cmp	r2, r4
 802bb90:	d12b      	bne.n	802bbea <_malloc_r+0xe2>
 802bb92:	2200      	movs	r2, #0
 802bb94:	605a      	str	r2, [r3, #4]
 802bb96:	e00f      	b.n	802bbb8 <_malloc_r+0xb0>
 802bb98:	6822      	ldr	r2, [r4, #0]
 802bb9a:	1b52      	subs	r2, r2, r5
 802bb9c:	d41f      	bmi.n	802bbde <_malloc_r+0xd6>
 802bb9e:	2a0b      	cmp	r2, #11
 802bba0:	d917      	bls.n	802bbd2 <_malloc_r+0xca>
 802bba2:	1961      	adds	r1, r4, r5
 802bba4:	42a3      	cmp	r3, r4
 802bba6:	6025      	str	r5, [r4, #0]
 802bba8:	bf18      	it	ne
 802bbaa:	6059      	strne	r1, [r3, #4]
 802bbac:	6863      	ldr	r3, [r4, #4]
 802bbae:	bf08      	it	eq
 802bbb0:	f8c8 1000 	streq.w	r1, [r8]
 802bbb4:	5162      	str	r2, [r4, r5]
 802bbb6:	604b      	str	r3, [r1, #4]
 802bbb8:	4638      	mov	r0, r7
 802bbba:	f104 060b 	add.w	r6, r4, #11
 802bbbe:	f000 f829 	bl	802bc14 <__malloc_unlock>
 802bbc2:	f026 0607 	bic.w	r6, r6, #7
 802bbc6:	1d23      	adds	r3, r4, #4
 802bbc8:	1af2      	subs	r2, r6, r3
 802bbca:	d0ae      	beq.n	802bb2a <_malloc_r+0x22>
 802bbcc:	1b9b      	subs	r3, r3, r6
 802bbce:	50a3      	str	r3, [r4, r2]
 802bbd0:	e7ab      	b.n	802bb2a <_malloc_r+0x22>
 802bbd2:	42a3      	cmp	r3, r4
 802bbd4:	6862      	ldr	r2, [r4, #4]
 802bbd6:	d1dd      	bne.n	802bb94 <_malloc_r+0x8c>
 802bbd8:	f8c8 2000 	str.w	r2, [r8]
 802bbdc:	e7ec      	b.n	802bbb8 <_malloc_r+0xb0>
 802bbde:	4623      	mov	r3, r4
 802bbe0:	6864      	ldr	r4, [r4, #4]
 802bbe2:	e7ac      	b.n	802bb3e <_malloc_r+0x36>
 802bbe4:	4634      	mov	r4, r6
 802bbe6:	6876      	ldr	r6, [r6, #4]
 802bbe8:	e7b4      	b.n	802bb54 <_malloc_r+0x4c>
 802bbea:	4613      	mov	r3, r2
 802bbec:	e7cc      	b.n	802bb88 <_malloc_r+0x80>
 802bbee:	230c      	movs	r3, #12
 802bbf0:	603b      	str	r3, [r7, #0]
 802bbf2:	4638      	mov	r0, r7
 802bbf4:	f000 f80e 	bl	802bc14 <__malloc_unlock>
 802bbf8:	e797      	b.n	802bb2a <_malloc_r+0x22>
 802bbfa:	6025      	str	r5, [r4, #0]
 802bbfc:	e7dc      	b.n	802bbb8 <_malloc_r+0xb0>
 802bbfe:	605b      	str	r3, [r3, #4]
 802bc00:	deff      	udf	#255	; 0xff
 802bc02:	bf00      	nop
 802bc04:	20014188 	.word	0x20014188

0802bc08 <__malloc_lock>:
 802bc08:	4801      	ldr	r0, [pc, #4]	; (802bc10 <__malloc_lock+0x8>)
 802bc0a:	f000 ba52 	b.w	802c0b2 <__retarget_lock_acquire_recursive>
 802bc0e:	bf00      	nop
 802bc10:	200142d1 	.word	0x200142d1

0802bc14 <__malloc_unlock>:
 802bc14:	4801      	ldr	r0, [pc, #4]	; (802bc1c <__malloc_unlock+0x8>)
 802bc16:	f000 ba4d 	b.w	802c0b4 <__retarget_lock_release_recursive>
 802bc1a:	bf00      	nop
 802bc1c:	200142d1 	.word	0x200142d1

0802bc20 <__cxa_atexit>:
 802bc20:	b510      	push	{r4, lr}
 802bc22:	4c05      	ldr	r4, [pc, #20]	; (802bc38 <__cxa_atexit+0x18>)
 802bc24:	4613      	mov	r3, r2
 802bc26:	b12c      	cbz	r4, 802bc34 <__cxa_atexit+0x14>
 802bc28:	460a      	mov	r2, r1
 802bc2a:	4601      	mov	r1, r0
 802bc2c:	2002      	movs	r0, #2
 802bc2e:	f000 fa51 	bl	802c0d4 <__register_exitproc>
 802bc32:	bd10      	pop	{r4, pc}
 802bc34:	4620      	mov	r0, r4
 802bc36:	e7fc      	b.n	802bc32 <__cxa_atexit+0x12>
 802bc38:	0802c0d5 	.word	0x0802c0d5

0802bc3c <std>:
 802bc3c:	2300      	movs	r3, #0
 802bc3e:	b510      	push	{r4, lr}
 802bc40:	4604      	mov	r4, r0
 802bc42:	e9c0 3300 	strd	r3, r3, [r0]
 802bc46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802bc4a:	6083      	str	r3, [r0, #8]
 802bc4c:	8181      	strh	r1, [r0, #12]
 802bc4e:	6643      	str	r3, [r0, #100]	; 0x64
 802bc50:	81c2      	strh	r2, [r0, #14]
 802bc52:	6183      	str	r3, [r0, #24]
 802bc54:	4619      	mov	r1, r3
 802bc56:	2208      	movs	r2, #8
 802bc58:	305c      	adds	r0, #92	; 0x5c
 802bc5a:	f000 f906 	bl	802be6a <memset>
 802bc5e:	4b0d      	ldr	r3, [pc, #52]	; (802bc94 <std+0x58>)
 802bc60:	6263      	str	r3, [r4, #36]	; 0x24
 802bc62:	4b0d      	ldr	r3, [pc, #52]	; (802bc98 <std+0x5c>)
 802bc64:	62a3      	str	r3, [r4, #40]	; 0x28
 802bc66:	4b0d      	ldr	r3, [pc, #52]	; (802bc9c <std+0x60>)
 802bc68:	62e3      	str	r3, [r4, #44]	; 0x2c
 802bc6a:	4b0d      	ldr	r3, [pc, #52]	; (802bca0 <std+0x64>)
 802bc6c:	6323      	str	r3, [r4, #48]	; 0x30
 802bc6e:	4b0d      	ldr	r3, [pc, #52]	; (802bca4 <std+0x68>)
 802bc70:	6224      	str	r4, [r4, #32]
 802bc72:	429c      	cmp	r4, r3
 802bc74:	d006      	beq.n	802bc84 <std+0x48>
 802bc76:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802bc7a:	4294      	cmp	r4, r2
 802bc7c:	d002      	beq.n	802bc84 <std+0x48>
 802bc7e:	33d0      	adds	r3, #208	; 0xd0
 802bc80:	429c      	cmp	r4, r3
 802bc82:	d105      	bne.n	802bc90 <std+0x54>
 802bc84:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802bc88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bc8c:	f000 ba10 	b.w	802c0b0 <__retarget_lock_init_recursive>
 802bc90:	bd10      	pop	{r4, pc}
 802bc92:	bf00      	nop
 802bc94:	0802bde5 	.word	0x0802bde5
 802bc98:	0802be07 	.word	0x0802be07
 802bc9c:	0802be3f 	.word	0x0802be3f
 802bca0:	0802be63 	.word	0x0802be63
 802bca4:	20014190 	.word	0x20014190

0802bca8 <stdio_exit_handler>:
 802bca8:	4a02      	ldr	r2, [pc, #8]	; (802bcb4 <stdio_exit_handler+0xc>)
 802bcaa:	4903      	ldr	r1, [pc, #12]	; (802bcb8 <stdio_exit_handler+0x10>)
 802bcac:	4803      	ldr	r0, [pc, #12]	; (802bcbc <stdio_exit_handler+0x14>)
 802bcae:	f000 b87b 	b.w	802bda8 <_fwalk_sglue>
 802bcb2:	bf00      	nop
 802bcb4:	20000108 	.word	0x20000108
 802bcb8:	0802c8dd 	.word	0x0802c8dd
 802bcbc:	20000114 	.word	0x20000114

0802bcc0 <cleanup_stdio>:
 802bcc0:	6841      	ldr	r1, [r0, #4]
 802bcc2:	4b0c      	ldr	r3, [pc, #48]	; (802bcf4 <cleanup_stdio+0x34>)
 802bcc4:	4299      	cmp	r1, r3
 802bcc6:	b510      	push	{r4, lr}
 802bcc8:	4604      	mov	r4, r0
 802bcca:	d001      	beq.n	802bcd0 <cleanup_stdio+0x10>
 802bccc:	f000 fe06 	bl	802c8dc <_fflush_r>
 802bcd0:	68a1      	ldr	r1, [r4, #8]
 802bcd2:	4b09      	ldr	r3, [pc, #36]	; (802bcf8 <cleanup_stdio+0x38>)
 802bcd4:	4299      	cmp	r1, r3
 802bcd6:	d002      	beq.n	802bcde <cleanup_stdio+0x1e>
 802bcd8:	4620      	mov	r0, r4
 802bcda:	f000 fdff 	bl	802c8dc <_fflush_r>
 802bcde:	68e1      	ldr	r1, [r4, #12]
 802bce0:	4b06      	ldr	r3, [pc, #24]	; (802bcfc <cleanup_stdio+0x3c>)
 802bce2:	4299      	cmp	r1, r3
 802bce4:	d004      	beq.n	802bcf0 <cleanup_stdio+0x30>
 802bce6:	4620      	mov	r0, r4
 802bce8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bcec:	f000 bdf6 	b.w	802c8dc <_fflush_r>
 802bcf0:	bd10      	pop	{r4, pc}
 802bcf2:	bf00      	nop
 802bcf4:	20014190 	.word	0x20014190
 802bcf8:	200141f8 	.word	0x200141f8
 802bcfc:	20014260 	.word	0x20014260

0802bd00 <global_stdio_init.part.0>:
 802bd00:	b510      	push	{r4, lr}
 802bd02:	4b0b      	ldr	r3, [pc, #44]	; (802bd30 <global_stdio_init.part.0+0x30>)
 802bd04:	4c0b      	ldr	r4, [pc, #44]	; (802bd34 <global_stdio_init.part.0+0x34>)
 802bd06:	4a0c      	ldr	r2, [pc, #48]	; (802bd38 <global_stdio_init.part.0+0x38>)
 802bd08:	601a      	str	r2, [r3, #0]
 802bd0a:	4620      	mov	r0, r4
 802bd0c:	2200      	movs	r2, #0
 802bd0e:	2104      	movs	r1, #4
 802bd10:	f7ff ff94 	bl	802bc3c <std>
 802bd14:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802bd18:	2201      	movs	r2, #1
 802bd1a:	2109      	movs	r1, #9
 802bd1c:	f7ff ff8e 	bl	802bc3c <std>
 802bd20:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802bd24:	2202      	movs	r2, #2
 802bd26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bd2a:	2112      	movs	r1, #18
 802bd2c:	f7ff bf86 	b.w	802bc3c <std>
 802bd30:	200142c8 	.word	0x200142c8
 802bd34:	20014190 	.word	0x20014190
 802bd38:	0802bca9 	.word	0x0802bca9

0802bd3c <__sfp_lock_acquire>:
 802bd3c:	4801      	ldr	r0, [pc, #4]	; (802bd44 <__sfp_lock_acquire+0x8>)
 802bd3e:	f000 b9b8 	b.w	802c0b2 <__retarget_lock_acquire_recursive>
 802bd42:	bf00      	nop
 802bd44:	200142d2 	.word	0x200142d2

0802bd48 <__sfp_lock_release>:
 802bd48:	4801      	ldr	r0, [pc, #4]	; (802bd50 <__sfp_lock_release+0x8>)
 802bd4a:	f000 b9b3 	b.w	802c0b4 <__retarget_lock_release_recursive>
 802bd4e:	bf00      	nop
 802bd50:	200142d2 	.word	0x200142d2

0802bd54 <__sinit>:
 802bd54:	b510      	push	{r4, lr}
 802bd56:	4604      	mov	r4, r0
 802bd58:	f7ff fff0 	bl	802bd3c <__sfp_lock_acquire>
 802bd5c:	6a23      	ldr	r3, [r4, #32]
 802bd5e:	b11b      	cbz	r3, 802bd68 <__sinit+0x14>
 802bd60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bd64:	f7ff bff0 	b.w	802bd48 <__sfp_lock_release>
 802bd68:	4b04      	ldr	r3, [pc, #16]	; (802bd7c <__sinit+0x28>)
 802bd6a:	6223      	str	r3, [r4, #32]
 802bd6c:	4b04      	ldr	r3, [pc, #16]	; (802bd80 <__sinit+0x2c>)
 802bd6e:	681b      	ldr	r3, [r3, #0]
 802bd70:	2b00      	cmp	r3, #0
 802bd72:	d1f5      	bne.n	802bd60 <__sinit+0xc>
 802bd74:	f7ff ffc4 	bl	802bd00 <global_stdio_init.part.0>
 802bd78:	e7f2      	b.n	802bd60 <__sinit+0xc>
 802bd7a:	bf00      	nop
 802bd7c:	0802bcc1 	.word	0x0802bcc1
 802bd80:	200142c8 	.word	0x200142c8

0802bd84 <fiprintf>:
 802bd84:	b40e      	push	{r1, r2, r3}
 802bd86:	b503      	push	{r0, r1, lr}
 802bd88:	4601      	mov	r1, r0
 802bd8a:	ab03      	add	r3, sp, #12
 802bd8c:	4805      	ldr	r0, [pc, #20]	; (802bda4 <fiprintf+0x20>)
 802bd8e:	f853 2b04 	ldr.w	r2, [r3], #4
 802bd92:	6800      	ldr	r0, [r0, #0]
 802bd94:	9301      	str	r3, [sp, #4]
 802bd96:	f000 fa71 	bl	802c27c <_vfiprintf_r>
 802bd9a:	b002      	add	sp, #8
 802bd9c:	f85d eb04 	ldr.w	lr, [sp], #4
 802bda0:	b003      	add	sp, #12
 802bda2:	4770      	bx	lr
 802bda4:	20000160 	.word	0x20000160

0802bda8 <_fwalk_sglue>:
 802bda8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bdac:	4607      	mov	r7, r0
 802bdae:	4688      	mov	r8, r1
 802bdb0:	4614      	mov	r4, r2
 802bdb2:	2600      	movs	r6, #0
 802bdb4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802bdb8:	f1b9 0901 	subs.w	r9, r9, #1
 802bdbc:	d505      	bpl.n	802bdca <_fwalk_sglue+0x22>
 802bdbe:	6824      	ldr	r4, [r4, #0]
 802bdc0:	2c00      	cmp	r4, #0
 802bdc2:	d1f7      	bne.n	802bdb4 <_fwalk_sglue+0xc>
 802bdc4:	4630      	mov	r0, r6
 802bdc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bdca:	89ab      	ldrh	r3, [r5, #12]
 802bdcc:	2b01      	cmp	r3, #1
 802bdce:	d907      	bls.n	802bde0 <_fwalk_sglue+0x38>
 802bdd0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802bdd4:	3301      	adds	r3, #1
 802bdd6:	d003      	beq.n	802bde0 <_fwalk_sglue+0x38>
 802bdd8:	4629      	mov	r1, r5
 802bdda:	4638      	mov	r0, r7
 802bddc:	47c0      	blx	r8
 802bdde:	4306      	orrs	r6, r0
 802bde0:	3568      	adds	r5, #104	; 0x68
 802bde2:	e7e9      	b.n	802bdb8 <_fwalk_sglue+0x10>

0802bde4 <__sread>:
 802bde4:	b510      	push	{r4, lr}
 802bde6:	460c      	mov	r4, r1
 802bde8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bdec:	f000 f8ee 	bl	802bfcc <_read_r>
 802bdf0:	2800      	cmp	r0, #0
 802bdf2:	bfab      	itete	ge
 802bdf4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802bdf6:	89a3      	ldrhlt	r3, [r4, #12]
 802bdf8:	181b      	addge	r3, r3, r0
 802bdfa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802bdfe:	bfac      	ite	ge
 802be00:	6563      	strge	r3, [r4, #84]	; 0x54
 802be02:	81a3      	strhlt	r3, [r4, #12]
 802be04:	bd10      	pop	{r4, pc}

0802be06 <__swrite>:
 802be06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802be0a:	461f      	mov	r7, r3
 802be0c:	898b      	ldrh	r3, [r1, #12]
 802be0e:	05db      	lsls	r3, r3, #23
 802be10:	4605      	mov	r5, r0
 802be12:	460c      	mov	r4, r1
 802be14:	4616      	mov	r6, r2
 802be16:	d505      	bpl.n	802be24 <__swrite+0x1e>
 802be18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be1c:	2302      	movs	r3, #2
 802be1e:	2200      	movs	r2, #0
 802be20:	f000 f8c2 	bl	802bfa8 <_lseek_r>
 802be24:	89a3      	ldrh	r3, [r4, #12]
 802be26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802be2a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802be2e:	81a3      	strh	r3, [r4, #12]
 802be30:	4632      	mov	r2, r6
 802be32:	463b      	mov	r3, r7
 802be34:	4628      	mov	r0, r5
 802be36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be3a:	f000 b8fd 	b.w	802c038 <_write_r>

0802be3e <__sseek>:
 802be3e:	b510      	push	{r4, lr}
 802be40:	460c      	mov	r4, r1
 802be42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be46:	f000 f8af 	bl	802bfa8 <_lseek_r>
 802be4a:	1c43      	adds	r3, r0, #1
 802be4c:	89a3      	ldrh	r3, [r4, #12]
 802be4e:	bf15      	itete	ne
 802be50:	6560      	strne	r0, [r4, #84]	; 0x54
 802be52:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802be56:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802be5a:	81a3      	strheq	r3, [r4, #12]
 802be5c:	bf18      	it	ne
 802be5e:	81a3      	strhne	r3, [r4, #12]
 802be60:	bd10      	pop	{r4, pc}

0802be62 <__sclose>:
 802be62:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be66:	f000 b839 	b.w	802bedc <_close_r>

0802be6a <memset>:
 802be6a:	4402      	add	r2, r0
 802be6c:	4603      	mov	r3, r0
 802be6e:	4293      	cmp	r3, r2
 802be70:	d100      	bne.n	802be74 <memset+0xa>
 802be72:	4770      	bx	lr
 802be74:	f803 1b01 	strb.w	r1, [r3], #1
 802be78:	e7f9      	b.n	802be6e <memset+0x4>

0802be7a <_raise_r>:
 802be7a:	291f      	cmp	r1, #31
 802be7c:	b538      	push	{r3, r4, r5, lr}
 802be7e:	4604      	mov	r4, r0
 802be80:	460d      	mov	r5, r1
 802be82:	d904      	bls.n	802be8e <_raise_r+0x14>
 802be84:	2316      	movs	r3, #22
 802be86:	6003      	str	r3, [r0, #0]
 802be88:	f04f 30ff 	mov.w	r0, #4294967295
 802be8c:	bd38      	pop	{r3, r4, r5, pc}
 802be8e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802be90:	b112      	cbz	r2, 802be98 <_raise_r+0x1e>
 802be92:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802be96:	b94b      	cbnz	r3, 802beac <_raise_r+0x32>
 802be98:	4620      	mov	r0, r4
 802be9a:	f000 f8bb 	bl	802c014 <_getpid_r>
 802be9e:	462a      	mov	r2, r5
 802bea0:	4601      	mov	r1, r0
 802bea2:	4620      	mov	r0, r4
 802bea4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802bea8:	f000 b8a2 	b.w	802bff0 <_kill_r>
 802beac:	2b01      	cmp	r3, #1
 802beae:	d00a      	beq.n	802bec6 <_raise_r+0x4c>
 802beb0:	1c59      	adds	r1, r3, #1
 802beb2:	d103      	bne.n	802bebc <_raise_r+0x42>
 802beb4:	2316      	movs	r3, #22
 802beb6:	6003      	str	r3, [r0, #0]
 802beb8:	2001      	movs	r0, #1
 802beba:	e7e7      	b.n	802be8c <_raise_r+0x12>
 802bebc:	2400      	movs	r4, #0
 802bebe:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802bec2:	4628      	mov	r0, r5
 802bec4:	4798      	blx	r3
 802bec6:	2000      	movs	r0, #0
 802bec8:	e7e0      	b.n	802be8c <_raise_r+0x12>
	...

0802becc <raise>:
 802becc:	4b02      	ldr	r3, [pc, #8]	; (802bed8 <raise+0xc>)
 802bece:	4601      	mov	r1, r0
 802bed0:	6818      	ldr	r0, [r3, #0]
 802bed2:	f7ff bfd2 	b.w	802be7a <_raise_r>
 802bed6:	bf00      	nop
 802bed8:	20000160 	.word	0x20000160

0802bedc <_close_r>:
 802bedc:	b538      	push	{r3, r4, r5, lr}
 802bede:	4d06      	ldr	r5, [pc, #24]	; (802bef8 <_close_r+0x1c>)
 802bee0:	2300      	movs	r3, #0
 802bee2:	4604      	mov	r4, r0
 802bee4:	4608      	mov	r0, r1
 802bee6:	602b      	str	r3, [r5, #0]
 802bee8:	f7d5 fecc 	bl	8001c84 <_close>
 802beec:	1c43      	adds	r3, r0, #1
 802beee:	d102      	bne.n	802bef6 <_close_r+0x1a>
 802bef0:	682b      	ldr	r3, [r5, #0]
 802bef2:	b103      	cbz	r3, 802bef6 <_close_r+0x1a>
 802bef4:	6023      	str	r3, [r4, #0]
 802bef6:	bd38      	pop	{r3, r4, r5, pc}
 802bef8:	200142cc 	.word	0x200142cc

0802befc <_reclaim_reent>:
 802befc:	4b29      	ldr	r3, [pc, #164]	; (802bfa4 <_reclaim_reent+0xa8>)
 802befe:	681b      	ldr	r3, [r3, #0]
 802bf00:	4283      	cmp	r3, r0
 802bf02:	b570      	push	{r4, r5, r6, lr}
 802bf04:	4604      	mov	r4, r0
 802bf06:	d04b      	beq.n	802bfa0 <_reclaim_reent+0xa4>
 802bf08:	69c3      	ldr	r3, [r0, #28]
 802bf0a:	b143      	cbz	r3, 802bf1e <_reclaim_reent+0x22>
 802bf0c:	68db      	ldr	r3, [r3, #12]
 802bf0e:	2b00      	cmp	r3, #0
 802bf10:	d144      	bne.n	802bf9c <_reclaim_reent+0xa0>
 802bf12:	69e3      	ldr	r3, [r4, #28]
 802bf14:	6819      	ldr	r1, [r3, #0]
 802bf16:	b111      	cbz	r1, 802bf1e <_reclaim_reent+0x22>
 802bf18:	4620      	mov	r0, r4
 802bf1a:	f000 f939 	bl	802c190 <_free_r>
 802bf1e:	6961      	ldr	r1, [r4, #20]
 802bf20:	b111      	cbz	r1, 802bf28 <_reclaim_reent+0x2c>
 802bf22:	4620      	mov	r0, r4
 802bf24:	f000 f934 	bl	802c190 <_free_r>
 802bf28:	69e1      	ldr	r1, [r4, #28]
 802bf2a:	b111      	cbz	r1, 802bf32 <_reclaim_reent+0x36>
 802bf2c:	4620      	mov	r0, r4
 802bf2e:	f000 f92f 	bl	802c190 <_free_r>
 802bf32:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802bf34:	b111      	cbz	r1, 802bf3c <_reclaim_reent+0x40>
 802bf36:	4620      	mov	r0, r4
 802bf38:	f000 f92a 	bl	802c190 <_free_r>
 802bf3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bf3e:	b111      	cbz	r1, 802bf46 <_reclaim_reent+0x4a>
 802bf40:	4620      	mov	r0, r4
 802bf42:	f000 f925 	bl	802c190 <_free_r>
 802bf46:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802bf48:	b111      	cbz	r1, 802bf50 <_reclaim_reent+0x54>
 802bf4a:	4620      	mov	r0, r4
 802bf4c:	f000 f920 	bl	802c190 <_free_r>
 802bf50:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802bf52:	b111      	cbz	r1, 802bf5a <_reclaim_reent+0x5e>
 802bf54:	4620      	mov	r0, r4
 802bf56:	f000 f91b 	bl	802c190 <_free_r>
 802bf5a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802bf5c:	b111      	cbz	r1, 802bf64 <_reclaim_reent+0x68>
 802bf5e:	4620      	mov	r0, r4
 802bf60:	f000 f916 	bl	802c190 <_free_r>
 802bf64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802bf66:	b111      	cbz	r1, 802bf6e <_reclaim_reent+0x72>
 802bf68:	4620      	mov	r0, r4
 802bf6a:	f000 f911 	bl	802c190 <_free_r>
 802bf6e:	6a23      	ldr	r3, [r4, #32]
 802bf70:	b1b3      	cbz	r3, 802bfa0 <_reclaim_reent+0xa4>
 802bf72:	4620      	mov	r0, r4
 802bf74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802bf78:	4718      	bx	r3
 802bf7a:	5949      	ldr	r1, [r1, r5]
 802bf7c:	b941      	cbnz	r1, 802bf90 <_reclaim_reent+0x94>
 802bf7e:	3504      	adds	r5, #4
 802bf80:	69e3      	ldr	r3, [r4, #28]
 802bf82:	2d80      	cmp	r5, #128	; 0x80
 802bf84:	68d9      	ldr	r1, [r3, #12]
 802bf86:	d1f8      	bne.n	802bf7a <_reclaim_reent+0x7e>
 802bf88:	4620      	mov	r0, r4
 802bf8a:	f000 f901 	bl	802c190 <_free_r>
 802bf8e:	e7c0      	b.n	802bf12 <_reclaim_reent+0x16>
 802bf90:	680e      	ldr	r6, [r1, #0]
 802bf92:	4620      	mov	r0, r4
 802bf94:	f000 f8fc 	bl	802c190 <_free_r>
 802bf98:	4631      	mov	r1, r6
 802bf9a:	e7ef      	b.n	802bf7c <_reclaim_reent+0x80>
 802bf9c:	2500      	movs	r5, #0
 802bf9e:	e7ef      	b.n	802bf80 <_reclaim_reent+0x84>
 802bfa0:	bd70      	pop	{r4, r5, r6, pc}
 802bfa2:	bf00      	nop
 802bfa4:	20000160 	.word	0x20000160

0802bfa8 <_lseek_r>:
 802bfa8:	b538      	push	{r3, r4, r5, lr}
 802bfaa:	4d07      	ldr	r5, [pc, #28]	; (802bfc8 <_lseek_r+0x20>)
 802bfac:	4604      	mov	r4, r0
 802bfae:	4608      	mov	r0, r1
 802bfb0:	4611      	mov	r1, r2
 802bfb2:	2200      	movs	r2, #0
 802bfb4:	602a      	str	r2, [r5, #0]
 802bfb6:	461a      	mov	r2, r3
 802bfb8:	f7d5 fe70 	bl	8001c9c <_lseek>
 802bfbc:	1c43      	adds	r3, r0, #1
 802bfbe:	d102      	bne.n	802bfc6 <_lseek_r+0x1e>
 802bfc0:	682b      	ldr	r3, [r5, #0]
 802bfc2:	b103      	cbz	r3, 802bfc6 <_lseek_r+0x1e>
 802bfc4:	6023      	str	r3, [r4, #0]
 802bfc6:	bd38      	pop	{r3, r4, r5, pc}
 802bfc8:	200142cc 	.word	0x200142cc

0802bfcc <_read_r>:
 802bfcc:	b538      	push	{r3, r4, r5, lr}
 802bfce:	4d07      	ldr	r5, [pc, #28]	; (802bfec <_read_r+0x20>)
 802bfd0:	4604      	mov	r4, r0
 802bfd2:	4608      	mov	r0, r1
 802bfd4:	4611      	mov	r1, r2
 802bfd6:	2200      	movs	r2, #0
 802bfd8:	602a      	str	r2, [r5, #0]
 802bfda:	461a      	mov	r2, r3
 802bfdc:	f7d5 fe36 	bl	8001c4c <_read>
 802bfe0:	1c43      	adds	r3, r0, #1
 802bfe2:	d102      	bne.n	802bfea <_read_r+0x1e>
 802bfe4:	682b      	ldr	r3, [r5, #0]
 802bfe6:	b103      	cbz	r3, 802bfea <_read_r+0x1e>
 802bfe8:	6023      	str	r3, [r4, #0]
 802bfea:	bd38      	pop	{r3, r4, r5, pc}
 802bfec:	200142cc 	.word	0x200142cc

0802bff0 <_kill_r>:
 802bff0:	b538      	push	{r3, r4, r5, lr}
 802bff2:	4d07      	ldr	r5, [pc, #28]	; (802c010 <_kill_r+0x20>)
 802bff4:	2300      	movs	r3, #0
 802bff6:	4604      	mov	r4, r0
 802bff8:	4608      	mov	r0, r1
 802bffa:	4611      	mov	r1, r2
 802bffc:	602b      	str	r3, [r5, #0]
 802bffe:	f7d5 fe17 	bl	8001c30 <_kill>
 802c002:	1c43      	adds	r3, r0, #1
 802c004:	d102      	bne.n	802c00c <_kill_r+0x1c>
 802c006:	682b      	ldr	r3, [r5, #0]
 802c008:	b103      	cbz	r3, 802c00c <_kill_r+0x1c>
 802c00a:	6023      	str	r3, [r4, #0]
 802c00c:	bd38      	pop	{r3, r4, r5, pc}
 802c00e:	bf00      	nop
 802c010:	200142cc 	.word	0x200142cc

0802c014 <_getpid_r>:
 802c014:	f7d5 be0a 	b.w	8001c2c <_getpid>

0802c018 <_sbrk_r>:
 802c018:	b538      	push	{r3, r4, r5, lr}
 802c01a:	4d06      	ldr	r5, [pc, #24]	; (802c034 <_sbrk_r+0x1c>)
 802c01c:	2300      	movs	r3, #0
 802c01e:	4604      	mov	r4, r0
 802c020:	4608      	mov	r0, r1
 802c022:	602b      	str	r3, [r5, #0]
 802c024:	f7d5 fe3c 	bl	8001ca0 <_sbrk>
 802c028:	1c43      	adds	r3, r0, #1
 802c02a:	d102      	bne.n	802c032 <_sbrk_r+0x1a>
 802c02c:	682b      	ldr	r3, [r5, #0]
 802c02e:	b103      	cbz	r3, 802c032 <_sbrk_r+0x1a>
 802c030:	6023      	str	r3, [r4, #0]
 802c032:	bd38      	pop	{r3, r4, r5, pc}
 802c034:	200142cc 	.word	0x200142cc

0802c038 <_write_r>:
 802c038:	b538      	push	{r3, r4, r5, lr}
 802c03a:	4d07      	ldr	r5, [pc, #28]	; (802c058 <_write_r+0x20>)
 802c03c:	4604      	mov	r4, r0
 802c03e:	4608      	mov	r0, r1
 802c040:	4611      	mov	r1, r2
 802c042:	2200      	movs	r2, #0
 802c044:	602a      	str	r2, [r5, #0]
 802c046:	461a      	mov	r2, r3
 802c048:	f7d5 fe0e 	bl	8001c68 <_write>
 802c04c:	1c43      	adds	r3, r0, #1
 802c04e:	d102      	bne.n	802c056 <_write_r+0x1e>
 802c050:	682b      	ldr	r3, [r5, #0]
 802c052:	b103      	cbz	r3, 802c056 <_write_r+0x1e>
 802c054:	6023      	str	r3, [r4, #0]
 802c056:	bd38      	pop	{r3, r4, r5, pc}
 802c058:	200142cc 	.word	0x200142cc

0802c05c <__errno>:
 802c05c:	4b01      	ldr	r3, [pc, #4]	; (802c064 <__errno+0x8>)
 802c05e:	6818      	ldr	r0, [r3, #0]
 802c060:	4770      	bx	lr
 802c062:	bf00      	nop
 802c064:	20000160 	.word	0x20000160

0802c068 <__libc_init_array>:
 802c068:	b570      	push	{r4, r5, r6, lr}
 802c06a:	4d0d      	ldr	r5, [pc, #52]	; (802c0a0 <__libc_init_array+0x38>)
 802c06c:	4c0d      	ldr	r4, [pc, #52]	; (802c0a4 <__libc_init_array+0x3c>)
 802c06e:	1b64      	subs	r4, r4, r5
 802c070:	10a4      	asrs	r4, r4, #2
 802c072:	2600      	movs	r6, #0
 802c074:	42a6      	cmp	r6, r4
 802c076:	d109      	bne.n	802c08c <__libc_init_array+0x24>
 802c078:	4d0b      	ldr	r5, [pc, #44]	; (802c0a8 <__libc_init_array+0x40>)
 802c07a:	4c0c      	ldr	r4, [pc, #48]	; (802c0ac <__libc_init_array+0x44>)
 802c07c:	f000 fd70 	bl	802cb60 <_init>
 802c080:	1b64      	subs	r4, r4, r5
 802c082:	10a4      	asrs	r4, r4, #2
 802c084:	2600      	movs	r6, #0
 802c086:	42a6      	cmp	r6, r4
 802c088:	d105      	bne.n	802c096 <__libc_init_array+0x2e>
 802c08a:	bd70      	pop	{r4, r5, r6, pc}
 802c08c:	f855 3b04 	ldr.w	r3, [r5], #4
 802c090:	4798      	blx	r3
 802c092:	3601      	adds	r6, #1
 802c094:	e7ee      	b.n	802c074 <__libc_init_array+0xc>
 802c096:	f855 3b04 	ldr.w	r3, [r5], #4
 802c09a:	4798      	blx	r3
 802c09c:	3601      	adds	r6, #1
 802c09e:	e7f2      	b.n	802c086 <__libc_init_array+0x1e>
 802c0a0:	080cd3d8 	.word	0x080cd3d8
 802c0a4:	080cd3d8 	.word	0x080cd3d8
 802c0a8:	080cd3d8 	.word	0x080cd3d8
 802c0ac:	080cd3ec 	.word	0x080cd3ec

0802c0b0 <__retarget_lock_init_recursive>:
 802c0b0:	4770      	bx	lr

0802c0b2 <__retarget_lock_acquire_recursive>:
 802c0b2:	4770      	bx	lr

0802c0b4 <__retarget_lock_release_recursive>:
 802c0b4:	4770      	bx	lr

0802c0b6 <memcpy>:
 802c0b6:	440a      	add	r2, r1
 802c0b8:	4291      	cmp	r1, r2
 802c0ba:	f100 33ff 	add.w	r3, r0, #4294967295
 802c0be:	d100      	bne.n	802c0c2 <memcpy+0xc>
 802c0c0:	4770      	bx	lr
 802c0c2:	b510      	push	{r4, lr}
 802c0c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802c0c8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802c0cc:	4291      	cmp	r1, r2
 802c0ce:	d1f9      	bne.n	802c0c4 <memcpy+0xe>
 802c0d0:	bd10      	pop	{r4, pc}
	...

0802c0d4 <__register_exitproc>:
 802c0d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c0d8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802c18c <__register_exitproc+0xb8>
 802c0dc:	4606      	mov	r6, r0
 802c0de:	f8d8 0000 	ldr.w	r0, [r8]
 802c0e2:	461f      	mov	r7, r3
 802c0e4:	460d      	mov	r5, r1
 802c0e6:	4691      	mov	r9, r2
 802c0e8:	f7ff ffe3 	bl	802c0b2 <__retarget_lock_acquire_recursive>
 802c0ec:	4b23      	ldr	r3, [pc, #140]	; (802c17c <__register_exitproc+0xa8>)
 802c0ee:	681c      	ldr	r4, [r3, #0]
 802c0f0:	b934      	cbnz	r4, 802c100 <__register_exitproc+0x2c>
 802c0f2:	4c23      	ldr	r4, [pc, #140]	; (802c180 <__register_exitproc+0xac>)
 802c0f4:	601c      	str	r4, [r3, #0]
 802c0f6:	4b23      	ldr	r3, [pc, #140]	; (802c184 <__register_exitproc+0xb0>)
 802c0f8:	b113      	cbz	r3, 802c100 <__register_exitproc+0x2c>
 802c0fa:	681b      	ldr	r3, [r3, #0]
 802c0fc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802c100:	6863      	ldr	r3, [r4, #4]
 802c102:	2b1f      	cmp	r3, #31
 802c104:	dd07      	ble.n	802c116 <__register_exitproc+0x42>
 802c106:	f8d8 0000 	ldr.w	r0, [r8]
 802c10a:	f7ff ffd3 	bl	802c0b4 <__retarget_lock_release_recursive>
 802c10e:	f04f 30ff 	mov.w	r0, #4294967295
 802c112:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c116:	b32e      	cbz	r6, 802c164 <__register_exitproc+0x90>
 802c118:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802c11c:	b968      	cbnz	r0, 802c13a <__register_exitproc+0x66>
 802c11e:	4b1a      	ldr	r3, [pc, #104]	; (802c188 <__register_exitproc+0xb4>)
 802c120:	2b00      	cmp	r3, #0
 802c122:	d0f0      	beq.n	802c106 <__register_exitproc+0x32>
 802c124:	f44f 7084 	mov.w	r0, #264	; 0x108
 802c128:	f7ff fcbe 	bl	802baa8 <malloc>
 802c12c:	2800      	cmp	r0, #0
 802c12e:	d0ea      	beq.n	802c106 <__register_exitproc+0x32>
 802c130:	2300      	movs	r3, #0
 802c132:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802c136:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802c13a:	6863      	ldr	r3, [r4, #4]
 802c13c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802c140:	2201      	movs	r2, #1
 802c142:	409a      	lsls	r2, r3
 802c144:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802c148:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802c14c:	4313      	orrs	r3, r2
 802c14e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802c152:	2e02      	cmp	r6, #2
 802c154:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802c158:	bf02      	ittt	eq
 802c15a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802c15e:	4313      	orreq	r3, r2
 802c160:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802c164:	6863      	ldr	r3, [r4, #4]
 802c166:	f8d8 0000 	ldr.w	r0, [r8]
 802c16a:	1c5a      	adds	r2, r3, #1
 802c16c:	3302      	adds	r3, #2
 802c16e:	6062      	str	r2, [r4, #4]
 802c170:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802c174:	f7ff ff9e 	bl	802c0b4 <__retarget_lock_release_recursive>
 802c178:	2000      	movs	r0, #0
 802c17a:	e7ca      	b.n	802c112 <__register_exitproc+0x3e>
 802c17c:	20014360 	.word	0x20014360
 802c180:	200142d4 	.word	0x200142d4
 802c184:	08043ce4 	.word	0x08043ce4
 802c188:	0802baa9 	.word	0x0802baa9
 802c18c:	20000164 	.word	0x20000164

0802c190 <_free_r>:
 802c190:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c192:	2900      	cmp	r1, #0
 802c194:	d044      	beq.n	802c220 <_free_r+0x90>
 802c196:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c19a:	9001      	str	r0, [sp, #4]
 802c19c:	2b00      	cmp	r3, #0
 802c19e:	f1a1 0404 	sub.w	r4, r1, #4
 802c1a2:	bfb8      	it	lt
 802c1a4:	18e4      	addlt	r4, r4, r3
 802c1a6:	f7ff fd2f 	bl	802bc08 <__malloc_lock>
 802c1aa:	4a1e      	ldr	r2, [pc, #120]	; (802c224 <_free_r+0x94>)
 802c1ac:	9801      	ldr	r0, [sp, #4]
 802c1ae:	6813      	ldr	r3, [r2, #0]
 802c1b0:	b933      	cbnz	r3, 802c1c0 <_free_r+0x30>
 802c1b2:	6063      	str	r3, [r4, #4]
 802c1b4:	6014      	str	r4, [r2, #0]
 802c1b6:	b003      	add	sp, #12
 802c1b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c1bc:	f7ff bd2a 	b.w	802bc14 <__malloc_unlock>
 802c1c0:	42a3      	cmp	r3, r4
 802c1c2:	d908      	bls.n	802c1d6 <_free_r+0x46>
 802c1c4:	6825      	ldr	r5, [r4, #0]
 802c1c6:	1961      	adds	r1, r4, r5
 802c1c8:	428b      	cmp	r3, r1
 802c1ca:	bf01      	itttt	eq
 802c1cc:	6819      	ldreq	r1, [r3, #0]
 802c1ce:	685b      	ldreq	r3, [r3, #4]
 802c1d0:	1949      	addeq	r1, r1, r5
 802c1d2:	6021      	streq	r1, [r4, #0]
 802c1d4:	e7ed      	b.n	802c1b2 <_free_r+0x22>
 802c1d6:	461a      	mov	r2, r3
 802c1d8:	685b      	ldr	r3, [r3, #4]
 802c1da:	b10b      	cbz	r3, 802c1e0 <_free_r+0x50>
 802c1dc:	42a3      	cmp	r3, r4
 802c1de:	d9fa      	bls.n	802c1d6 <_free_r+0x46>
 802c1e0:	6811      	ldr	r1, [r2, #0]
 802c1e2:	1855      	adds	r5, r2, r1
 802c1e4:	42a5      	cmp	r5, r4
 802c1e6:	d10b      	bne.n	802c200 <_free_r+0x70>
 802c1e8:	6824      	ldr	r4, [r4, #0]
 802c1ea:	4421      	add	r1, r4
 802c1ec:	1854      	adds	r4, r2, r1
 802c1ee:	42a3      	cmp	r3, r4
 802c1f0:	6011      	str	r1, [r2, #0]
 802c1f2:	d1e0      	bne.n	802c1b6 <_free_r+0x26>
 802c1f4:	681c      	ldr	r4, [r3, #0]
 802c1f6:	685b      	ldr	r3, [r3, #4]
 802c1f8:	6053      	str	r3, [r2, #4]
 802c1fa:	440c      	add	r4, r1
 802c1fc:	6014      	str	r4, [r2, #0]
 802c1fe:	e7da      	b.n	802c1b6 <_free_r+0x26>
 802c200:	d902      	bls.n	802c208 <_free_r+0x78>
 802c202:	230c      	movs	r3, #12
 802c204:	6003      	str	r3, [r0, #0]
 802c206:	e7d6      	b.n	802c1b6 <_free_r+0x26>
 802c208:	6825      	ldr	r5, [r4, #0]
 802c20a:	1961      	adds	r1, r4, r5
 802c20c:	428b      	cmp	r3, r1
 802c20e:	bf04      	itt	eq
 802c210:	6819      	ldreq	r1, [r3, #0]
 802c212:	685b      	ldreq	r3, [r3, #4]
 802c214:	6063      	str	r3, [r4, #4]
 802c216:	bf04      	itt	eq
 802c218:	1949      	addeq	r1, r1, r5
 802c21a:	6021      	streq	r1, [r4, #0]
 802c21c:	6054      	str	r4, [r2, #4]
 802c21e:	e7ca      	b.n	802c1b6 <_free_r+0x26>
 802c220:	b003      	add	sp, #12
 802c222:	bd30      	pop	{r4, r5, pc}
 802c224:	20014188 	.word	0x20014188

0802c228 <__sfputc_r>:
 802c228:	6893      	ldr	r3, [r2, #8]
 802c22a:	3b01      	subs	r3, #1
 802c22c:	2b00      	cmp	r3, #0
 802c22e:	b410      	push	{r4}
 802c230:	6093      	str	r3, [r2, #8]
 802c232:	da08      	bge.n	802c246 <__sfputc_r+0x1e>
 802c234:	6994      	ldr	r4, [r2, #24]
 802c236:	42a3      	cmp	r3, r4
 802c238:	db01      	blt.n	802c23e <__sfputc_r+0x16>
 802c23a:	290a      	cmp	r1, #10
 802c23c:	d103      	bne.n	802c246 <__sfputc_r+0x1e>
 802c23e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c242:	f000 bb73 	b.w	802c92c <__swbuf_r>
 802c246:	6813      	ldr	r3, [r2, #0]
 802c248:	1c58      	adds	r0, r3, #1
 802c24a:	6010      	str	r0, [r2, #0]
 802c24c:	7019      	strb	r1, [r3, #0]
 802c24e:	4608      	mov	r0, r1
 802c250:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c254:	4770      	bx	lr

0802c256 <__sfputs_r>:
 802c256:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c258:	4606      	mov	r6, r0
 802c25a:	460f      	mov	r7, r1
 802c25c:	4614      	mov	r4, r2
 802c25e:	18d5      	adds	r5, r2, r3
 802c260:	42ac      	cmp	r4, r5
 802c262:	d101      	bne.n	802c268 <__sfputs_r+0x12>
 802c264:	2000      	movs	r0, #0
 802c266:	e007      	b.n	802c278 <__sfputs_r+0x22>
 802c268:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c26c:	463a      	mov	r2, r7
 802c26e:	4630      	mov	r0, r6
 802c270:	f7ff ffda 	bl	802c228 <__sfputc_r>
 802c274:	1c43      	adds	r3, r0, #1
 802c276:	d1f3      	bne.n	802c260 <__sfputs_r+0xa>
 802c278:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c27c <_vfiprintf_r>:
 802c27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c280:	460d      	mov	r5, r1
 802c282:	b09d      	sub	sp, #116	; 0x74
 802c284:	4614      	mov	r4, r2
 802c286:	4698      	mov	r8, r3
 802c288:	4606      	mov	r6, r0
 802c28a:	b118      	cbz	r0, 802c294 <_vfiprintf_r+0x18>
 802c28c:	6a03      	ldr	r3, [r0, #32]
 802c28e:	b90b      	cbnz	r3, 802c294 <_vfiprintf_r+0x18>
 802c290:	f7ff fd60 	bl	802bd54 <__sinit>
 802c294:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c296:	07d9      	lsls	r1, r3, #31
 802c298:	d405      	bmi.n	802c2a6 <_vfiprintf_r+0x2a>
 802c29a:	89ab      	ldrh	r3, [r5, #12]
 802c29c:	059a      	lsls	r2, r3, #22
 802c29e:	d402      	bmi.n	802c2a6 <_vfiprintf_r+0x2a>
 802c2a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c2a2:	f7ff ff06 	bl	802c0b2 <__retarget_lock_acquire_recursive>
 802c2a6:	89ab      	ldrh	r3, [r5, #12]
 802c2a8:	071b      	lsls	r3, r3, #28
 802c2aa:	d501      	bpl.n	802c2b0 <_vfiprintf_r+0x34>
 802c2ac:	692b      	ldr	r3, [r5, #16]
 802c2ae:	b99b      	cbnz	r3, 802c2d8 <_vfiprintf_r+0x5c>
 802c2b0:	4629      	mov	r1, r5
 802c2b2:	4630      	mov	r0, r6
 802c2b4:	f000 fb78 	bl	802c9a8 <__swsetup_r>
 802c2b8:	b170      	cbz	r0, 802c2d8 <_vfiprintf_r+0x5c>
 802c2ba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c2bc:	07dc      	lsls	r4, r3, #31
 802c2be:	d504      	bpl.n	802c2ca <_vfiprintf_r+0x4e>
 802c2c0:	f04f 30ff 	mov.w	r0, #4294967295
 802c2c4:	b01d      	add	sp, #116	; 0x74
 802c2c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c2ca:	89ab      	ldrh	r3, [r5, #12]
 802c2cc:	0598      	lsls	r0, r3, #22
 802c2ce:	d4f7      	bmi.n	802c2c0 <_vfiprintf_r+0x44>
 802c2d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c2d2:	f7ff feef 	bl	802c0b4 <__retarget_lock_release_recursive>
 802c2d6:	e7f3      	b.n	802c2c0 <_vfiprintf_r+0x44>
 802c2d8:	2300      	movs	r3, #0
 802c2da:	9309      	str	r3, [sp, #36]	; 0x24
 802c2dc:	2320      	movs	r3, #32
 802c2de:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c2e2:	f8cd 800c 	str.w	r8, [sp, #12]
 802c2e6:	2330      	movs	r3, #48	; 0x30
 802c2e8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802c49c <_vfiprintf_r+0x220>
 802c2ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c2f0:	f04f 0901 	mov.w	r9, #1
 802c2f4:	4623      	mov	r3, r4
 802c2f6:	469a      	mov	sl, r3
 802c2f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c2fc:	b10a      	cbz	r2, 802c302 <_vfiprintf_r+0x86>
 802c2fe:	2a25      	cmp	r2, #37	; 0x25
 802c300:	d1f9      	bne.n	802c2f6 <_vfiprintf_r+0x7a>
 802c302:	ebba 0b04 	subs.w	fp, sl, r4
 802c306:	d00b      	beq.n	802c320 <_vfiprintf_r+0xa4>
 802c308:	465b      	mov	r3, fp
 802c30a:	4622      	mov	r2, r4
 802c30c:	4629      	mov	r1, r5
 802c30e:	4630      	mov	r0, r6
 802c310:	f7ff ffa1 	bl	802c256 <__sfputs_r>
 802c314:	3001      	adds	r0, #1
 802c316:	f000 80a9 	beq.w	802c46c <_vfiprintf_r+0x1f0>
 802c31a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c31c:	445a      	add	r2, fp
 802c31e:	9209      	str	r2, [sp, #36]	; 0x24
 802c320:	f89a 3000 	ldrb.w	r3, [sl]
 802c324:	2b00      	cmp	r3, #0
 802c326:	f000 80a1 	beq.w	802c46c <_vfiprintf_r+0x1f0>
 802c32a:	2300      	movs	r3, #0
 802c32c:	f04f 32ff 	mov.w	r2, #4294967295
 802c330:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c334:	f10a 0a01 	add.w	sl, sl, #1
 802c338:	9304      	str	r3, [sp, #16]
 802c33a:	9307      	str	r3, [sp, #28]
 802c33c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c340:	931a      	str	r3, [sp, #104]	; 0x68
 802c342:	4654      	mov	r4, sl
 802c344:	2205      	movs	r2, #5
 802c346:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c34a:	4854      	ldr	r0, [pc, #336]	; (802c49c <_vfiprintf_r+0x220>)
 802c34c:	f7d3 ffb0 	bl	80002b0 <memchr>
 802c350:	9a04      	ldr	r2, [sp, #16]
 802c352:	b9d8      	cbnz	r0, 802c38c <_vfiprintf_r+0x110>
 802c354:	06d1      	lsls	r1, r2, #27
 802c356:	bf44      	itt	mi
 802c358:	2320      	movmi	r3, #32
 802c35a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c35e:	0713      	lsls	r3, r2, #28
 802c360:	bf44      	itt	mi
 802c362:	232b      	movmi	r3, #43	; 0x2b
 802c364:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c368:	f89a 3000 	ldrb.w	r3, [sl]
 802c36c:	2b2a      	cmp	r3, #42	; 0x2a
 802c36e:	d015      	beq.n	802c39c <_vfiprintf_r+0x120>
 802c370:	9a07      	ldr	r2, [sp, #28]
 802c372:	4654      	mov	r4, sl
 802c374:	2000      	movs	r0, #0
 802c376:	f04f 0c0a 	mov.w	ip, #10
 802c37a:	4621      	mov	r1, r4
 802c37c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c380:	3b30      	subs	r3, #48	; 0x30
 802c382:	2b09      	cmp	r3, #9
 802c384:	d94d      	bls.n	802c422 <_vfiprintf_r+0x1a6>
 802c386:	b1b0      	cbz	r0, 802c3b6 <_vfiprintf_r+0x13a>
 802c388:	9207      	str	r2, [sp, #28]
 802c38a:	e014      	b.n	802c3b6 <_vfiprintf_r+0x13a>
 802c38c:	eba0 0308 	sub.w	r3, r0, r8
 802c390:	fa09 f303 	lsl.w	r3, r9, r3
 802c394:	4313      	orrs	r3, r2
 802c396:	9304      	str	r3, [sp, #16]
 802c398:	46a2      	mov	sl, r4
 802c39a:	e7d2      	b.n	802c342 <_vfiprintf_r+0xc6>
 802c39c:	9b03      	ldr	r3, [sp, #12]
 802c39e:	1d19      	adds	r1, r3, #4
 802c3a0:	681b      	ldr	r3, [r3, #0]
 802c3a2:	9103      	str	r1, [sp, #12]
 802c3a4:	2b00      	cmp	r3, #0
 802c3a6:	bfbb      	ittet	lt
 802c3a8:	425b      	neglt	r3, r3
 802c3aa:	f042 0202 	orrlt.w	r2, r2, #2
 802c3ae:	9307      	strge	r3, [sp, #28]
 802c3b0:	9307      	strlt	r3, [sp, #28]
 802c3b2:	bfb8      	it	lt
 802c3b4:	9204      	strlt	r2, [sp, #16]
 802c3b6:	7823      	ldrb	r3, [r4, #0]
 802c3b8:	2b2e      	cmp	r3, #46	; 0x2e
 802c3ba:	d10c      	bne.n	802c3d6 <_vfiprintf_r+0x15a>
 802c3bc:	7863      	ldrb	r3, [r4, #1]
 802c3be:	2b2a      	cmp	r3, #42	; 0x2a
 802c3c0:	d134      	bne.n	802c42c <_vfiprintf_r+0x1b0>
 802c3c2:	9b03      	ldr	r3, [sp, #12]
 802c3c4:	1d1a      	adds	r2, r3, #4
 802c3c6:	681b      	ldr	r3, [r3, #0]
 802c3c8:	9203      	str	r2, [sp, #12]
 802c3ca:	2b00      	cmp	r3, #0
 802c3cc:	bfb8      	it	lt
 802c3ce:	f04f 33ff 	movlt.w	r3, #4294967295
 802c3d2:	3402      	adds	r4, #2
 802c3d4:	9305      	str	r3, [sp, #20]
 802c3d6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802c4ac <_vfiprintf_r+0x230>
 802c3da:	7821      	ldrb	r1, [r4, #0]
 802c3dc:	2203      	movs	r2, #3
 802c3de:	4650      	mov	r0, sl
 802c3e0:	f7d3 ff66 	bl	80002b0 <memchr>
 802c3e4:	b138      	cbz	r0, 802c3f6 <_vfiprintf_r+0x17a>
 802c3e6:	9b04      	ldr	r3, [sp, #16]
 802c3e8:	eba0 000a 	sub.w	r0, r0, sl
 802c3ec:	2240      	movs	r2, #64	; 0x40
 802c3ee:	4082      	lsls	r2, r0
 802c3f0:	4313      	orrs	r3, r2
 802c3f2:	3401      	adds	r4, #1
 802c3f4:	9304      	str	r3, [sp, #16]
 802c3f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c3fa:	4829      	ldr	r0, [pc, #164]	; (802c4a0 <_vfiprintf_r+0x224>)
 802c3fc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c400:	2206      	movs	r2, #6
 802c402:	f7d3 ff55 	bl	80002b0 <memchr>
 802c406:	2800      	cmp	r0, #0
 802c408:	d03f      	beq.n	802c48a <_vfiprintf_r+0x20e>
 802c40a:	4b26      	ldr	r3, [pc, #152]	; (802c4a4 <_vfiprintf_r+0x228>)
 802c40c:	bb1b      	cbnz	r3, 802c456 <_vfiprintf_r+0x1da>
 802c40e:	9b03      	ldr	r3, [sp, #12]
 802c410:	3307      	adds	r3, #7
 802c412:	f023 0307 	bic.w	r3, r3, #7
 802c416:	3308      	adds	r3, #8
 802c418:	9303      	str	r3, [sp, #12]
 802c41a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c41c:	443b      	add	r3, r7
 802c41e:	9309      	str	r3, [sp, #36]	; 0x24
 802c420:	e768      	b.n	802c2f4 <_vfiprintf_r+0x78>
 802c422:	fb0c 3202 	mla	r2, ip, r2, r3
 802c426:	460c      	mov	r4, r1
 802c428:	2001      	movs	r0, #1
 802c42a:	e7a6      	b.n	802c37a <_vfiprintf_r+0xfe>
 802c42c:	2300      	movs	r3, #0
 802c42e:	3401      	adds	r4, #1
 802c430:	9305      	str	r3, [sp, #20]
 802c432:	4619      	mov	r1, r3
 802c434:	f04f 0c0a 	mov.w	ip, #10
 802c438:	4620      	mov	r0, r4
 802c43a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c43e:	3a30      	subs	r2, #48	; 0x30
 802c440:	2a09      	cmp	r2, #9
 802c442:	d903      	bls.n	802c44c <_vfiprintf_r+0x1d0>
 802c444:	2b00      	cmp	r3, #0
 802c446:	d0c6      	beq.n	802c3d6 <_vfiprintf_r+0x15a>
 802c448:	9105      	str	r1, [sp, #20]
 802c44a:	e7c4      	b.n	802c3d6 <_vfiprintf_r+0x15a>
 802c44c:	fb0c 2101 	mla	r1, ip, r1, r2
 802c450:	4604      	mov	r4, r0
 802c452:	2301      	movs	r3, #1
 802c454:	e7f0      	b.n	802c438 <_vfiprintf_r+0x1bc>
 802c456:	ab03      	add	r3, sp, #12
 802c458:	9300      	str	r3, [sp, #0]
 802c45a:	462a      	mov	r2, r5
 802c45c:	4b12      	ldr	r3, [pc, #72]	; (802c4a8 <_vfiprintf_r+0x22c>)
 802c45e:	a904      	add	r1, sp, #16
 802c460:	4630      	mov	r0, r6
 802c462:	f3af 8000 	nop.w
 802c466:	4607      	mov	r7, r0
 802c468:	1c78      	adds	r0, r7, #1
 802c46a:	d1d6      	bne.n	802c41a <_vfiprintf_r+0x19e>
 802c46c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c46e:	07d9      	lsls	r1, r3, #31
 802c470:	d405      	bmi.n	802c47e <_vfiprintf_r+0x202>
 802c472:	89ab      	ldrh	r3, [r5, #12]
 802c474:	059a      	lsls	r2, r3, #22
 802c476:	d402      	bmi.n	802c47e <_vfiprintf_r+0x202>
 802c478:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c47a:	f7ff fe1b 	bl	802c0b4 <__retarget_lock_release_recursive>
 802c47e:	89ab      	ldrh	r3, [r5, #12]
 802c480:	065b      	lsls	r3, r3, #25
 802c482:	f53f af1d 	bmi.w	802c2c0 <_vfiprintf_r+0x44>
 802c486:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c488:	e71c      	b.n	802c2c4 <_vfiprintf_r+0x48>
 802c48a:	ab03      	add	r3, sp, #12
 802c48c:	9300      	str	r3, [sp, #0]
 802c48e:	462a      	mov	r2, r5
 802c490:	4b05      	ldr	r3, [pc, #20]	; (802c4a8 <_vfiprintf_r+0x22c>)
 802c492:	a904      	add	r1, sp, #16
 802c494:	4630      	mov	r0, r6
 802c496:	f000 f879 	bl	802c58c <_printf_i>
 802c49a:	e7e4      	b.n	802c466 <_vfiprintf_r+0x1ea>
 802c49c:	08043ce8 	.word	0x08043ce8
 802c4a0:	08043cf2 	.word	0x08043cf2
 802c4a4:	00000000 	.word	0x00000000
 802c4a8:	0802c257 	.word	0x0802c257
 802c4ac:	08043cee 	.word	0x08043cee

0802c4b0 <_printf_common>:
 802c4b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c4b4:	4616      	mov	r6, r2
 802c4b6:	4699      	mov	r9, r3
 802c4b8:	688a      	ldr	r2, [r1, #8]
 802c4ba:	690b      	ldr	r3, [r1, #16]
 802c4bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802c4c0:	4293      	cmp	r3, r2
 802c4c2:	bfb8      	it	lt
 802c4c4:	4613      	movlt	r3, r2
 802c4c6:	6033      	str	r3, [r6, #0]
 802c4c8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802c4cc:	4607      	mov	r7, r0
 802c4ce:	460c      	mov	r4, r1
 802c4d0:	b10a      	cbz	r2, 802c4d6 <_printf_common+0x26>
 802c4d2:	3301      	adds	r3, #1
 802c4d4:	6033      	str	r3, [r6, #0]
 802c4d6:	6823      	ldr	r3, [r4, #0]
 802c4d8:	0699      	lsls	r1, r3, #26
 802c4da:	bf42      	ittt	mi
 802c4dc:	6833      	ldrmi	r3, [r6, #0]
 802c4de:	3302      	addmi	r3, #2
 802c4e0:	6033      	strmi	r3, [r6, #0]
 802c4e2:	6825      	ldr	r5, [r4, #0]
 802c4e4:	f015 0506 	ands.w	r5, r5, #6
 802c4e8:	d106      	bne.n	802c4f8 <_printf_common+0x48>
 802c4ea:	f104 0a19 	add.w	sl, r4, #25
 802c4ee:	68e3      	ldr	r3, [r4, #12]
 802c4f0:	6832      	ldr	r2, [r6, #0]
 802c4f2:	1a9b      	subs	r3, r3, r2
 802c4f4:	42ab      	cmp	r3, r5
 802c4f6:	dc26      	bgt.n	802c546 <_printf_common+0x96>
 802c4f8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802c4fc:	1e13      	subs	r3, r2, #0
 802c4fe:	6822      	ldr	r2, [r4, #0]
 802c500:	bf18      	it	ne
 802c502:	2301      	movne	r3, #1
 802c504:	0692      	lsls	r2, r2, #26
 802c506:	d42b      	bmi.n	802c560 <_printf_common+0xb0>
 802c508:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c50c:	4649      	mov	r1, r9
 802c50e:	4638      	mov	r0, r7
 802c510:	47c0      	blx	r8
 802c512:	3001      	adds	r0, #1
 802c514:	d01e      	beq.n	802c554 <_printf_common+0xa4>
 802c516:	6823      	ldr	r3, [r4, #0]
 802c518:	6922      	ldr	r2, [r4, #16]
 802c51a:	f003 0306 	and.w	r3, r3, #6
 802c51e:	2b04      	cmp	r3, #4
 802c520:	bf02      	ittt	eq
 802c522:	68e5      	ldreq	r5, [r4, #12]
 802c524:	6833      	ldreq	r3, [r6, #0]
 802c526:	1aed      	subeq	r5, r5, r3
 802c528:	68a3      	ldr	r3, [r4, #8]
 802c52a:	bf0c      	ite	eq
 802c52c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c530:	2500      	movne	r5, #0
 802c532:	4293      	cmp	r3, r2
 802c534:	bfc4      	itt	gt
 802c536:	1a9b      	subgt	r3, r3, r2
 802c538:	18ed      	addgt	r5, r5, r3
 802c53a:	2600      	movs	r6, #0
 802c53c:	341a      	adds	r4, #26
 802c53e:	42b5      	cmp	r5, r6
 802c540:	d11a      	bne.n	802c578 <_printf_common+0xc8>
 802c542:	2000      	movs	r0, #0
 802c544:	e008      	b.n	802c558 <_printf_common+0xa8>
 802c546:	2301      	movs	r3, #1
 802c548:	4652      	mov	r2, sl
 802c54a:	4649      	mov	r1, r9
 802c54c:	4638      	mov	r0, r7
 802c54e:	47c0      	blx	r8
 802c550:	3001      	adds	r0, #1
 802c552:	d103      	bne.n	802c55c <_printf_common+0xac>
 802c554:	f04f 30ff 	mov.w	r0, #4294967295
 802c558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c55c:	3501      	adds	r5, #1
 802c55e:	e7c6      	b.n	802c4ee <_printf_common+0x3e>
 802c560:	18e1      	adds	r1, r4, r3
 802c562:	1c5a      	adds	r2, r3, #1
 802c564:	2030      	movs	r0, #48	; 0x30
 802c566:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c56a:	4422      	add	r2, r4
 802c56c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c570:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c574:	3302      	adds	r3, #2
 802c576:	e7c7      	b.n	802c508 <_printf_common+0x58>
 802c578:	2301      	movs	r3, #1
 802c57a:	4622      	mov	r2, r4
 802c57c:	4649      	mov	r1, r9
 802c57e:	4638      	mov	r0, r7
 802c580:	47c0      	blx	r8
 802c582:	3001      	adds	r0, #1
 802c584:	d0e6      	beq.n	802c554 <_printf_common+0xa4>
 802c586:	3601      	adds	r6, #1
 802c588:	e7d9      	b.n	802c53e <_printf_common+0x8e>
	...

0802c58c <_printf_i>:
 802c58c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c590:	7e0f      	ldrb	r7, [r1, #24]
 802c592:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c594:	2f78      	cmp	r7, #120	; 0x78
 802c596:	4691      	mov	r9, r2
 802c598:	4680      	mov	r8, r0
 802c59a:	460c      	mov	r4, r1
 802c59c:	469a      	mov	sl, r3
 802c59e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c5a2:	d807      	bhi.n	802c5b4 <_printf_i+0x28>
 802c5a4:	2f62      	cmp	r7, #98	; 0x62
 802c5a6:	d80a      	bhi.n	802c5be <_printf_i+0x32>
 802c5a8:	2f00      	cmp	r7, #0
 802c5aa:	f000 80d4 	beq.w	802c756 <_printf_i+0x1ca>
 802c5ae:	2f58      	cmp	r7, #88	; 0x58
 802c5b0:	f000 80c0 	beq.w	802c734 <_printf_i+0x1a8>
 802c5b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c5b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c5bc:	e03a      	b.n	802c634 <_printf_i+0xa8>
 802c5be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c5c2:	2b15      	cmp	r3, #21
 802c5c4:	d8f6      	bhi.n	802c5b4 <_printf_i+0x28>
 802c5c6:	a101      	add	r1, pc, #4	; (adr r1, 802c5cc <_printf_i+0x40>)
 802c5c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c5cc:	0802c625 	.word	0x0802c625
 802c5d0:	0802c639 	.word	0x0802c639
 802c5d4:	0802c5b5 	.word	0x0802c5b5
 802c5d8:	0802c5b5 	.word	0x0802c5b5
 802c5dc:	0802c5b5 	.word	0x0802c5b5
 802c5e0:	0802c5b5 	.word	0x0802c5b5
 802c5e4:	0802c639 	.word	0x0802c639
 802c5e8:	0802c5b5 	.word	0x0802c5b5
 802c5ec:	0802c5b5 	.word	0x0802c5b5
 802c5f0:	0802c5b5 	.word	0x0802c5b5
 802c5f4:	0802c5b5 	.word	0x0802c5b5
 802c5f8:	0802c73d 	.word	0x0802c73d
 802c5fc:	0802c665 	.word	0x0802c665
 802c600:	0802c6f7 	.word	0x0802c6f7
 802c604:	0802c5b5 	.word	0x0802c5b5
 802c608:	0802c5b5 	.word	0x0802c5b5
 802c60c:	0802c75f 	.word	0x0802c75f
 802c610:	0802c5b5 	.word	0x0802c5b5
 802c614:	0802c665 	.word	0x0802c665
 802c618:	0802c5b5 	.word	0x0802c5b5
 802c61c:	0802c5b5 	.word	0x0802c5b5
 802c620:	0802c6ff 	.word	0x0802c6ff
 802c624:	682b      	ldr	r3, [r5, #0]
 802c626:	1d1a      	adds	r2, r3, #4
 802c628:	681b      	ldr	r3, [r3, #0]
 802c62a:	602a      	str	r2, [r5, #0]
 802c62c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c630:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c634:	2301      	movs	r3, #1
 802c636:	e09f      	b.n	802c778 <_printf_i+0x1ec>
 802c638:	6820      	ldr	r0, [r4, #0]
 802c63a:	682b      	ldr	r3, [r5, #0]
 802c63c:	0607      	lsls	r7, r0, #24
 802c63e:	f103 0104 	add.w	r1, r3, #4
 802c642:	6029      	str	r1, [r5, #0]
 802c644:	d501      	bpl.n	802c64a <_printf_i+0xbe>
 802c646:	681e      	ldr	r6, [r3, #0]
 802c648:	e003      	b.n	802c652 <_printf_i+0xc6>
 802c64a:	0646      	lsls	r6, r0, #25
 802c64c:	d5fb      	bpl.n	802c646 <_printf_i+0xba>
 802c64e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c652:	2e00      	cmp	r6, #0
 802c654:	da03      	bge.n	802c65e <_printf_i+0xd2>
 802c656:	232d      	movs	r3, #45	; 0x2d
 802c658:	4276      	negs	r6, r6
 802c65a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c65e:	485a      	ldr	r0, [pc, #360]	; (802c7c8 <_printf_i+0x23c>)
 802c660:	230a      	movs	r3, #10
 802c662:	e012      	b.n	802c68a <_printf_i+0xfe>
 802c664:	682b      	ldr	r3, [r5, #0]
 802c666:	6820      	ldr	r0, [r4, #0]
 802c668:	1d19      	adds	r1, r3, #4
 802c66a:	6029      	str	r1, [r5, #0]
 802c66c:	0605      	lsls	r5, r0, #24
 802c66e:	d501      	bpl.n	802c674 <_printf_i+0xe8>
 802c670:	681e      	ldr	r6, [r3, #0]
 802c672:	e002      	b.n	802c67a <_printf_i+0xee>
 802c674:	0641      	lsls	r1, r0, #25
 802c676:	d5fb      	bpl.n	802c670 <_printf_i+0xe4>
 802c678:	881e      	ldrh	r6, [r3, #0]
 802c67a:	4853      	ldr	r0, [pc, #332]	; (802c7c8 <_printf_i+0x23c>)
 802c67c:	2f6f      	cmp	r7, #111	; 0x6f
 802c67e:	bf0c      	ite	eq
 802c680:	2308      	moveq	r3, #8
 802c682:	230a      	movne	r3, #10
 802c684:	2100      	movs	r1, #0
 802c686:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c68a:	6865      	ldr	r5, [r4, #4]
 802c68c:	60a5      	str	r5, [r4, #8]
 802c68e:	2d00      	cmp	r5, #0
 802c690:	bfa2      	ittt	ge
 802c692:	6821      	ldrge	r1, [r4, #0]
 802c694:	f021 0104 	bicge.w	r1, r1, #4
 802c698:	6021      	strge	r1, [r4, #0]
 802c69a:	b90e      	cbnz	r6, 802c6a0 <_printf_i+0x114>
 802c69c:	2d00      	cmp	r5, #0
 802c69e:	d04b      	beq.n	802c738 <_printf_i+0x1ac>
 802c6a0:	4615      	mov	r5, r2
 802c6a2:	fbb6 f1f3 	udiv	r1, r6, r3
 802c6a6:	fb03 6711 	mls	r7, r3, r1, r6
 802c6aa:	5dc7      	ldrb	r7, [r0, r7]
 802c6ac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c6b0:	4637      	mov	r7, r6
 802c6b2:	42bb      	cmp	r3, r7
 802c6b4:	460e      	mov	r6, r1
 802c6b6:	d9f4      	bls.n	802c6a2 <_printf_i+0x116>
 802c6b8:	2b08      	cmp	r3, #8
 802c6ba:	d10b      	bne.n	802c6d4 <_printf_i+0x148>
 802c6bc:	6823      	ldr	r3, [r4, #0]
 802c6be:	07de      	lsls	r6, r3, #31
 802c6c0:	d508      	bpl.n	802c6d4 <_printf_i+0x148>
 802c6c2:	6923      	ldr	r3, [r4, #16]
 802c6c4:	6861      	ldr	r1, [r4, #4]
 802c6c6:	4299      	cmp	r1, r3
 802c6c8:	bfde      	ittt	le
 802c6ca:	2330      	movle	r3, #48	; 0x30
 802c6cc:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c6d0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c6d4:	1b52      	subs	r2, r2, r5
 802c6d6:	6122      	str	r2, [r4, #16]
 802c6d8:	f8cd a000 	str.w	sl, [sp]
 802c6dc:	464b      	mov	r3, r9
 802c6de:	aa03      	add	r2, sp, #12
 802c6e0:	4621      	mov	r1, r4
 802c6e2:	4640      	mov	r0, r8
 802c6e4:	f7ff fee4 	bl	802c4b0 <_printf_common>
 802c6e8:	3001      	adds	r0, #1
 802c6ea:	d14a      	bne.n	802c782 <_printf_i+0x1f6>
 802c6ec:	f04f 30ff 	mov.w	r0, #4294967295
 802c6f0:	b004      	add	sp, #16
 802c6f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c6f6:	6823      	ldr	r3, [r4, #0]
 802c6f8:	f043 0320 	orr.w	r3, r3, #32
 802c6fc:	6023      	str	r3, [r4, #0]
 802c6fe:	4833      	ldr	r0, [pc, #204]	; (802c7cc <_printf_i+0x240>)
 802c700:	2778      	movs	r7, #120	; 0x78
 802c702:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c706:	6823      	ldr	r3, [r4, #0]
 802c708:	6829      	ldr	r1, [r5, #0]
 802c70a:	061f      	lsls	r7, r3, #24
 802c70c:	f851 6b04 	ldr.w	r6, [r1], #4
 802c710:	d402      	bmi.n	802c718 <_printf_i+0x18c>
 802c712:	065f      	lsls	r7, r3, #25
 802c714:	bf48      	it	mi
 802c716:	b2b6      	uxthmi	r6, r6
 802c718:	07df      	lsls	r7, r3, #31
 802c71a:	bf48      	it	mi
 802c71c:	f043 0320 	orrmi.w	r3, r3, #32
 802c720:	6029      	str	r1, [r5, #0]
 802c722:	bf48      	it	mi
 802c724:	6023      	strmi	r3, [r4, #0]
 802c726:	b91e      	cbnz	r6, 802c730 <_printf_i+0x1a4>
 802c728:	6823      	ldr	r3, [r4, #0]
 802c72a:	f023 0320 	bic.w	r3, r3, #32
 802c72e:	6023      	str	r3, [r4, #0]
 802c730:	2310      	movs	r3, #16
 802c732:	e7a7      	b.n	802c684 <_printf_i+0xf8>
 802c734:	4824      	ldr	r0, [pc, #144]	; (802c7c8 <_printf_i+0x23c>)
 802c736:	e7e4      	b.n	802c702 <_printf_i+0x176>
 802c738:	4615      	mov	r5, r2
 802c73a:	e7bd      	b.n	802c6b8 <_printf_i+0x12c>
 802c73c:	682b      	ldr	r3, [r5, #0]
 802c73e:	6826      	ldr	r6, [r4, #0]
 802c740:	6961      	ldr	r1, [r4, #20]
 802c742:	1d18      	adds	r0, r3, #4
 802c744:	6028      	str	r0, [r5, #0]
 802c746:	0635      	lsls	r5, r6, #24
 802c748:	681b      	ldr	r3, [r3, #0]
 802c74a:	d501      	bpl.n	802c750 <_printf_i+0x1c4>
 802c74c:	6019      	str	r1, [r3, #0]
 802c74e:	e002      	b.n	802c756 <_printf_i+0x1ca>
 802c750:	0670      	lsls	r0, r6, #25
 802c752:	d5fb      	bpl.n	802c74c <_printf_i+0x1c0>
 802c754:	8019      	strh	r1, [r3, #0]
 802c756:	2300      	movs	r3, #0
 802c758:	6123      	str	r3, [r4, #16]
 802c75a:	4615      	mov	r5, r2
 802c75c:	e7bc      	b.n	802c6d8 <_printf_i+0x14c>
 802c75e:	682b      	ldr	r3, [r5, #0]
 802c760:	1d1a      	adds	r2, r3, #4
 802c762:	602a      	str	r2, [r5, #0]
 802c764:	681d      	ldr	r5, [r3, #0]
 802c766:	6862      	ldr	r2, [r4, #4]
 802c768:	2100      	movs	r1, #0
 802c76a:	4628      	mov	r0, r5
 802c76c:	f7d3 fda0 	bl	80002b0 <memchr>
 802c770:	b108      	cbz	r0, 802c776 <_printf_i+0x1ea>
 802c772:	1b40      	subs	r0, r0, r5
 802c774:	6060      	str	r0, [r4, #4]
 802c776:	6863      	ldr	r3, [r4, #4]
 802c778:	6123      	str	r3, [r4, #16]
 802c77a:	2300      	movs	r3, #0
 802c77c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c780:	e7aa      	b.n	802c6d8 <_printf_i+0x14c>
 802c782:	6923      	ldr	r3, [r4, #16]
 802c784:	462a      	mov	r2, r5
 802c786:	4649      	mov	r1, r9
 802c788:	4640      	mov	r0, r8
 802c78a:	47d0      	blx	sl
 802c78c:	3001      	adds	r0, #1
 802c78e:	d0ad      	beq.n	802c6ec <_printf_i+0x160>
 802c790:	6823      	ldr	r3, [r4, #0]
 802c792:	079b      	lsls	r3, r3, #30
 802c794:	d413      	bmi.n	802c7be <_printf_i+0x232>
 802c796:	68e0      	ldr	r0, [r4, #12]
 802c798:	9b03      	ldr	r3, [sp, #12]
 802c79a:	4298      	cmp	r0, r3
 802c79c:	bfb8      	it	lt
 802c79e:	4618      	movlt	r0, r3
 802c7a0:	e7a6      	b.n	802c6f0 <_printf_i+0x164>
 802c7a2:	2301      	movs	r3, #1
 802c7a4:	4632      	mov	r2, r6
 802c7a6:	4649      	mov	r1, r9
 802c7a8:	4640      	mov	r0, r8
 802c7aa:	47d0      	blx	sl
 802c7ac:	3001      	adds	r0, #1
 802c7ae:	d09d      	beq.n	802c6ec <_printf_i+0x160>
 802c7b0:	3501      	adds	r5, #1
 802c7b2:	68e3      	ldr	r3, [r4, #12]
 802c7b4:	9903      	ldr	r1, [sp, #12]
 802c7b6:	1a5b      	subs	r3, r3, r1
 802c7b8:	42ab      	cmp	r3, r5
 802c7ba:	dcf2      	bgt.n	802c7a2 <_printf_i+0x216>
 802c7bc:	e7eb      	b.n	802c796 <_printf_i+0x20a>
 802c7be:	2500      	movs	r5, #0
 802c7c0:	f104 0619 	add.w	r6, r4, #25
 802c7c4:	e7f5      	b.n	802c7b2 <_printf_i+0x226>
 802c7c6:	bf00      	nop
 802c7c8:	08043cf9 	.word	0x08043cf9
 802c7cc:	08043d0a 	.word	0x08043d0a

0802c7d0 <__sflush_r>:
 802c7d0:	898a      	ldrh	r2, [r1, #12]
 802c7d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c7d6:	4605      	mov	r5, r0
 802c7d8:	0710      	lsls	r0, r2, #28
 802c7da:	460c      	mov	r4, r1
 802c7dc:	d458      	bmi.n	802c890 <__sflush_r+0xc0>
 802c7de:	684b      	ldr	r3, [r1, #4]
 802c7e0:	2b00      	cmp	r3, #0
 802c7e2:	dc05      	bgt.n	802c7f0 <__sflush_r+0x20>
 802c7e4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c7e6:	2b00      	cmp	r3, #0
 802c7e8:	dc02      	bgt.n	802c7f0 <__sflush_r+0x20>
 802c7ea:	2000      	movs	r0, #0
 802c7ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c7f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c7f2:	2e00      	cmp	r6, #0
 802c7f4:	d0f9      	beq.n	802c7ea <__sflush_r+0x1a>
 802c7f6:	2300      	movs	r3, #0
 802c7f8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c7fc:	682f      	ldr	r7, [r5, #0]
 802c7fe:	6a21      	ldr	r1, [r4, #32]
 802c800:	602b      	str	r3, [r5, #0]
 802c802:	d032      	beq.n	802c86a <__sflush_r+0x9a>
 802c804:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c806:	89a3      	ldrh	r3, [r4, #12]
 802c808:	075a      	lsls	r2, r3, #29
 802c80a:	d505      	bpl.n	802c818 <__sflush_r+0x48>
 802c80c:	6863      	ldr	r3, [r4, #4]
 802c80e:	1ac0      	subs	r0, r0, r3
 802c810:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c812:	b10b      	cbz	r3, 802c818 <__sflush_r+0x48>
 802c814:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c816:	1ac0      	subs	r0, r0, r3
 802c818:	2300      	movs	r3, #0
 802c81a:	4602      	mov	r2, r0
 802c81c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c81e:	6a21      	ldr	r1, [r4, #32]
 802c820:	4628      	mov	r0, r5
 802c822:	47b0      	blx	r6
 802c824:	1c43      	adds	r3, r0, #1
 802c826:	89a3      	ldrh	r3, [r4, #12]
 802c828:	d106      	bne.n	802c838 <__sflush_r+0x68>
 802c82a:	6829      	ldr	r1, [r5, #0]
 802c82c:	291d      	cmp	r1, #29
 802c82e:	d82b      	bhi.n	802c888 <__sflush_r+0xb8>
 802c830:	4a29      	ldr	r2, [pc, #164]	; (802c8d8 <__sflush_r+0x108>)
 802c832:	410a      	asrs	r2, r1
 802c834:	07d6      	lsls	r6, r2, #31
 802c836:	d427      	bmi.n	802c888 <__sflush_r+0xb8>
 802c838:	2200      	movs	r2, #0
 802c83a:	6062      	str	r2, [r4, #4]
 802c83c:	04d9      	lsls	r1, r3, #19
 802c83e:	6922      	ldr	r2, [r4, #16]
 802c840:	6022      	str	r2, [r4, #0]
 802c842:	d504      	bpl.n	802c84e <__sflush_r+0x7e>
 802c844:	1c42      	adds	r2, r0, #1
 802c846:	d101      	bne.n	802c84c <__sflush_r+0x7c>
 802c848:	682b      	ldr	r3, [r5, #0]
 802c84a:	b903      	cbnz	r3, 802c84e <__sflush_r+0x7e>
 802c84c:	6560      	str	r0, [r4, #84]	; 0x54
 802c84e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c850:	602f      	str	r7, [r5, #0]
 802c852:	2900      	cmp	r1, #0
 802c854:	d0c9      	beq.n	802c7ea <__sflush_r+0x1a>
 802c856:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c85a:	4299      	cmp	r1, r3
 802c85c:	d002      	beq.n	802c864 <__sflush_r+0x94>
 802c85e:	4628      	mov	r0, r5
 802c860:	f7ff fc96 	bl	802c190 <_free_r>
 802c864:	2000      	movs	r0, #0
 802c866:	6360      	str	r0, [r4, #52]	; 0x34
 802c868:	e7c0      	b.n	802c7ec <__sflush_r+0x1c>
 802c86a:	2301      	movs	r3, #1
 802c86c:	4628      	mov	r0, r5
 802c86e:	47b0      	blx	r6
 802c870:	1c41      	adds	r1, r0, #1
 802c872:	d1c8      	bne.n	802c806 <__sflush_r+0x36>
 802c874:	682b      	ldr	r3, [r5, #0]
 802c876:	2b00      	cmp	r3, #0
 802c878:	d0c5      	beq.n	802c806 <__sflush_r+0x36>
 802c87a:	2b1d      	cmp	r3, #29
 802c87c:	d001      	beq.n	802c882 <__sflush_r+0xb2>
 802c87e:	2b16      	cmp	r3, #22
 802c880:	d101      	bne.n	802c886 <__sflush_r+0xb6>
 802c882:	602f      	str	r7, [r5, #0]
 802c884:	e7b1      	b.n	802c7ea <__sflush_r+0x1a>
 802c886:	89a3      	ldrh	r3, [r4, #12]
 802c888:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c88c:	81a3      	strh	r3, [r4, #12]
 802c88e:	e7ad      	b.n	802c7ec <__sflush_r+0x1c>
 802c890:	690f      	ldr	r7, [r1, #16]
 802c892:	2f00      	cmp	r7, #0
 802c894:	d0a9      	beq.n	802c7ea <__sflush_r+0x1a>
 802c896:	0793      	lsls	r3, r2, #30
 802c898:	680e      	ldr	r6, [r1, #0]
 802c89a:	bf08      	it	eq
 802c89c:	694b      	ldreq	r3, [r1, #20]
 802c89e:	600f      	str	r7, [r1, #0]
 802c8a0:	bf18      	it	ne
 802c8a2:	2300      	movne	r3, #0
 802c8a4:	eba6 0807 	sub.w	r8, r6, r7
 802c8a8:	608b      	str	r3, [r1, #8]
 802c8aa:	f1b8 0f00 	cmp.w	r8, #0
 802c8ae:	dd9c      	ble.n	802c7ea <__sflush_r+0x1a>
 802c8b0:	6a21      	ldr	r1, [r4, #32]
 802c8b2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c8b4:	4643      	mov	r3, r8
 802c8b6:	463a      	mov	r2, r7
 802c8b8:	4628      	mov	r0, r5
 802c8ba:	47b0      	blx	r6
 802c8bc:	2800      	cmp	r0, #0
 802c8be:	dc06      	bgt.n	802c8ce <__sflush_r+0xfe>
 802c8c0:	89a3      	ldrh	r3, [r4, #12]
 802c8c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c8c6:	81a3      	strh	r3, [r4, #12]
 802c8c8:	f04f 30ff 	mov.w	r0, #4294967295
 802c8cc:	e78e      	b.n	802c7ec <__sflush_r+0x1c>
 802c8ce:	4407      	add	r7, r0
 802c8d0:	eba8 0800 	sub.w	r8, r8, r0
 802c8d4:	e7e9      	b.n	802c8aa <__sflush_r+0xda>
 802c8d6:	bf00      	nop
 802c8d8:	dfbffffe 	.word	0xdfbffffe

0802c8dc <_fflush_r>:
 802c8dc:	b538      	push	{r3, r4, r5, lr}
 802c8de:	690b      	ldr	r3, [r1, #16]
 802c8e0:	4605      	mov	r5, r0
 802c8e2:	460c      	mov	r4, r1
 802c8e4:	b913      	cbnz	r3, 802c8ec <_fflush_r+0x10>
 802c8e6:	2500      	movs	r5, #0
 802c8e8:	4628      	mov	r0, r5
 802c8ea:	bd38      	pop	{r3, r4, r5, pc}
 802c8ec:	b118      	cbz	r0, 802c8f6 <_fflush_r+0x1a>
 802c8ee:	6a03      	ldr	r3, [r0, #32]
 802c8f0:	b90b      	cbnz	r3, 802c8f6 <_fflush_r+0x1a>
 802c8f2:	f7ff fa2f 	bl	802bd54 <__sinit>
 802c8f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c8fa:	2b00      	cmp	r3, #0
 802c8fc:	d0f3      	beq.n	802c8e6 <_fflush_r+0xa>
 802c8fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c900:	07d0      	lsls	r0, r2, #31
 802c902:	d404      	bmi.n	802c90e <_fflush_r+0x32>
 802c904:	0599      	lsls	r1, r3, #22
 802c906:	d402      	bmi.n	802c90e <_fflush_r+0x32>
 802c908:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c90a:	f7ff fbd2 	bl	802c0b2 <__retarget_lock_acquire_recursive>
 802c90e:	4628      	mov	r0, r5
 802c910:	4621      	mov	r1, r4
 802c912:	f7ff ff5d 	bl	802c7d0 <__sflush_r>
 802c916:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c918:	07da      	lsls	r2, r3, #31
 802c91a:	4605      	mov	r5, r0
 802c91c:	d4e4      	bmi.n	802c8e8 <_fflush_r+0xc>
 802c91e:	89a3      	ldrh	r3, [r4, #12]
 802c920:	059b      	lsls	r3, r3, #22
 802c922:	d4e1      	bmi.n	802c8e8 <_fflush_r+0xc>
 802c924:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c926:	f7ff fbc5 	bl	802c0b4 <__retarget_lock_release_recursive>
 802c92a:	e7dd      	b.n	802c8e8 <_fflush_r+0xc>

0802c92c <__swbuf_r>:
 802c92c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c92e:	460e      	mov	r6, r1
 802c930:	4614      	mov	r4, r2
 802c932:	4605      	mov	r5, r0
 802c934:	b118      	cbz	r0, 802c93e <__swbuf_r+0x12>
 802c936:	6a03      	ldr	r3, [r0, #32]
 802c938:	b90b      	cbnz	r3, 802c93e <__swbuf_r+0x12>
 802c93a:	f7ff fa0b 	bl	802bd54 <__sinit>
 802c93e:	69a3      	ldr	r3, [r4, #24]
 802c940:	60a3      	str	r3, [r4, #8]
 802c942:	89a3      	ldrh	r3, [r4, #12]
 802c944:	071a      	lsls	r2, r3, #28
 802c946:	d525      	bpl.n	802c994 <__swbuf_r+0x68>
 802c948:	6923      	ldr	r3, [r4, #16]
 802c94a:	b31b      	cbz	r3, 802c994 <__swbuf_r+0x68>
 802c94c:	6823      	ldr	r3, [r4, #0]
 802c94e:	6922      	ldr	r2, [r4, #16]
 802c950:	1a98      	subs	r0, r3, r2
 802c952:	6963      	ldr	r3, [r4, #20]
 802c954:	b2f6      	uxtb	r6, r6
 802c956:	4283      	cmp	r3, r0
 802c958:	4637      	mov	r7, r6
 802c95a:	dc04      	bgt.n	802c966 <__swbuf_r+0x3a>
 802c95c:	4621      	mov	r1, r4
 802c95e:	4628      	mov	r0, r5
 802c960:	f7ff ffbc 	bl	802c8dc <_fflush_r>
 802c964:	b9e0      	cbnz	r0, 802c9a0 <__swbuf_r+0x74>
 802c966:	68a3      	ldr	r3, [r4, #8]
 802c968:	3b01      	subs	r3, #1
 802c96a:	60a3      	str	r3, [r4, #8]
 802c96c:	6823      	ldr	r3, [r4, #0]
 802c96e:	1c5a      	adds	r2, r3, #1
 802c970:	6022      	str	r2, [r4, #0]
 802c972:	701e      	strb	r6, [r3, #0]
 802c974:	6962      	ldr	r2, [r4, #20]
 802c976:	1c43      	adds	r3, r0, #1
 802c978:	429a      	cmp	r2, r3
 802c97a:	d004      	beq.n	802c986 <__swbuf_r+0x5a>
 802c97c:	89a3      	ldrh	r3, [r4, #12]
 802c97e:	07db      	lsls	r3, r3, #31
 802c980:	d506      	bpl.n	802c990 <__swbuf_r+0x64>
 802c982:	2e0a      	cmp	r6, #10
 802c984:	d104      	bne.n	802c990 <__swbuf_r+0x64>
 802c986:	4621      	mov	r1, r4
 802c988:	4628      	mov	r0, r5
 802c98a:	f7ff ffa7 	bl	802c8dc <_fflush_r>
 802c98e:	b938      	cbnz	r0, 802c9a0 <__swbuf_r+0x74>
 802c990:	4638      	mov	r0, r7
 802c992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c994:	4621      	mov	r1, r4
 802c996:	4628      	mov	r0, r5
 802c998:	f000 f806 	bl	802c9a8 <__swsetup_r>
 802c99c:	2800      	cmp	r0, #0
 802c99e:	d0d5      	beq.n	802c94c <__swbuf_r+0x20>
 802c9a0:	f04f 37ff 	mov.w	r7, #4294967295
 802c9a4:	e7f4      	b.n	802c990 <__swbuf_r+0x64>
	...

0802c9a8 <__swsetup_r>:
 802c9a8:	b538      	push	{r3, r4, r5, lr}
 802c9aa:	4b2a      	ldr	r3, [pc, #168]	; (802ca54 <__swsetup_r+0xac>)
 802c9ac:	4605      	mov	r5, r0
 802c9ae:	6818      	ldr	r0, [r3, #0]
 802c9b0:	460c      	mov	r4, r1
 802c9b2:	b118      	cbz	r0, 802c9bc <__swsetup_r+0x14>
 802c9b4:	6a03      	ldr	r3, [r0, #32]
 802c9b6:	b90b      	cbnz	r3, 802c9bc <__swsetup_r+0x14>
 802c9b8:	f7ff f9cc 	bl	802bd54 <__sinit>
 802c9bc:	89a3      	ldrh	r3, [r4, #12]
 802c9be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c9c2:	0718      	lsls	r0, r3, #28
 802c9c4:	d422      	bmi.n	802ca0c <__swsetup_r+0x64>
 802c9c6:	06d9      	lsls	r1, r3, #27
 802c9c8:	d407      	bmi.n	802c9da <__swsetup_r+0x32>
 802c9ca:	2309      	movs	r3, #9
 802c9cc:	602b      	str	r3, [r5, #0]
 802c9ce:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c9d2:	81a3      	strh	r3, [r4, #12]
 802c9d4:	f04f 30ff 	mov.w	r0, #4294967295
 802c9d8:	e034      	b.n	802ca44 <__swsetup_r+0x9c>
 802c9da:	0758      	lsls	r0, r3, #29
 802c9dc:	d512      	bpl.n	802ca04 <__swsetup_r+0x5c>
 802c9de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c9e0:	b141      	cbz	r1, 802c9f4 <__swsetup_r+0x4c>
 802c9e2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c9e6:	4299      	cmp	r1, r3
 802c9e8:	d002      	beq.n	802c9f0 <__swsetup_r+0x48>
 802c9ea:	4628      	mov	r0, r5
 802c9ec:	f7ff fbd0 	bl	802c190 <_free_r>
 802c9f0:	2300      	movs	r3, #0
 802c9f2:	6363      	str	r3, [r4, #52]	; 0x34
 802c9f4:	89a3      	ldrh	r3, [r4, #12]
 802c9f6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c9fa:	81a3      	strh	r3, [r4, #12]
 802c9fc:	2300      	movs	r3, #0
 802c9fe:	6063      	str	r3, [r4, #4]
 802ca00:	6923      	ldr	r3, [r4, #16]
 802ca02:	6023      	str	r3, [r4, #0]
 802ca04:	89a3      	ldrh	r3, [r4, #12]
 802ca06:	f043 0308 	orr.w	r3, r3, #8
 802ca0a:	81a3      	strh	r3, [r4, #12]
 802ca0c:	6923      	ldr	r3, [r4, #16]
 802ca0e:	b94b      	cbnz	r3, 802ca24 <__swsetup_r+0x7c>
 802ca10:	89a3      	ldrh	r3, [r4, #12]
 802ca12:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ca16:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ca1a:	d003      	beq.n	802ca24 <__swsetup_r+0x7c>
 802ca1c:	4621      	mov	r1, r4
 802ca1e:	4628      	mov	r0, r5
 802ca20:	f000 f840 	bl	802caa4 <__smakebuf_r>
 802ca24:	89a0      	ldrh	r0, [r4, #12]
 802ca26:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ca2a:	f010 0301 	ands.w	r3, r0, #1
 802ca2e:	d00a      	beq.n	802ca46 <__swsetup_r+0x9e>
 802ca30:	2300      	movs	r3, #0
 802ca32:	60a3      	str	r3, [r4, #8]
 802ca34:	6963      	ldr	r3, [r4, #20]
 802ca36:	425b      	negs	r3, r3
 802ca38:	61a3      	str	r3, [r4, #24]
 802ca3a:	6923      	ldr	r3, [r4, #16]
 802ca3c:	b943      	cbnz	r3, 802ca50 <__swsetup_r+0xa8>
 802ca3e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ca42:	d1c4      	bne.n	802c9ce <__swsetup_r+0x26>
 802ca44:	bd38      	pop	{r3, r4, r5, pc}
 802ca46:	0781      	lsls	r1, r0, #30
 802ca48:	bf58      	it	pl
 802ca4a:	6963      	ldrpl	r3, [r4, #20]
 802ca4c:	60a3      	str	r3, [r4, #8]
 802ca4e:	e7f4      	b.n	802ca3a <__swsetup_r+0x92>
 802ca50:	2000      	movs	r0, #0
 802ca52:	e7f7      	b.n	802ca44 <__swsetup_r+0x9c>
 802ca54:	20000160 	.word	0x20000160

0802ca58 <__swhatbuf_r>:
 802ca58:	b570      	push	{r4, r5, r6, lr}
 802ca5a:	460c      	mov	r4, r1
 802ca5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ca60:	2900      	cmp	r1, #0
 802ca62:	b096      	sub	sp, #88	; 0x58
 802ca64:	4615      	mov	r5, r2
 802ca66:	461e      	mov	r6, r3
 802ca68:	da0d      	bge.n	802ca86 <__swhatbuf_r+0x2e>
 802ca6a:	89a3      	ldrh	r3, [r4, #12]
 802ca6c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ca70:	f04f 0100 	mov.w	r1, #0
 802ca74:	bf0c      	ite	eq
 802ca76:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ca7a:	2340      	movne	r3, #64	; 0x40
 802ca7c:	2000      	movs	r0, #0
 802ca7e:	6031      	str	r1, [r6, #0]
 802ca80:	602b      	str	r3, [r5, #0]
 802ca82:	b016      	add	sp, #88	; 0x58
 802ca84:	bd70      	pop	{r4, r5, r6, pc}
 802ca86:	466a      	mov	r2, sp
 802ca88:	f000 f848 	bl	802cb1c <_fstat_r>
 802ca8c:	2800      	cmp	r0, #0
 802ca8e:	dbec      	blt.n	802ca6a <__swhatbuf_r+0x12>
 802ca90:	9901      	ldr	r1, [sp, #4]
 802ca92:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ca96:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ca9a:	4259      	negs	r1, r3
 802ca9c:	4159      	adcs	r1, r3
 802ca9e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802caa2:	e7eb      	b.n	802ca7c <__swhatbuf_r+0x24>

0802caa4 <__smakebuf_r>:
 802caa4:	898b      	ldrh	r3, [r1, #12]
 802caa6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802caa8:	079d      	lsls	r5, r3, #30
 802caaa:	4606      	mov	r6, r0
 802caac:	460c      	mov	r4, r1
 802caae:	d507      	bpl.n	802cac0 <__smakebuf_r+0x1c>
 802cab0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802cab4:	6023      	str	r3, [r4, #0]
 802cab6:	6123      	str	r3, [r4, #16]
 802cab8:	2301      	movs	r3, #1
 802caba:	6163      	str	r3, [r4, #20]
 802cabc:	b002      	add	sp, #8
 802cabe:	bd70      	pop	{r4, r5, r6, pc}
 802cac0:	ab01      	add	r3, sp, #4
 802cac2:	466a      	mov	r2, sp
 802cac4:	f7ff ffc8 	bl	802ca58 <__swhatbuf_r>
 802cac8:	9900      	ldr	r1, [sp, #0]
 802caca:	4605      	mov	r5, r0
 802cacc:	4630      	mov	r0, r6
 802cace:	f7ff f81b 	bl	802bb08 <_malloc_r>
 802cad2:	b948      	cbnz	r0, 802cae8 <__smakebuf_r+0x44>
 802cad4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cad8:	059a      	lsls	r2, r3, #22
 802cada:	d4ef      	bmi.n	802cabc <__smakebuf_r+0x18>
 802cadc:	f023 0303 	bic.w	r3, r3, #3
 802cae0:	f043 0302 	orr.w	r3, r3, #2
 802cae4:	81a3      	strh	r3, [r4, #12]
 802cae6:	e7e3      	b.n	802cab0 <__smakebuf_r+0xc>
 802cae8:	89a3      	ldrh	r3, [r4, #12]
 802caea:	6020      	str	r0, [r4, #0]
 802caec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802caf0:	81a3      	strh	r3, [r4, #12]
 802caf2:	9b00      	ldr	r3, [sp, #0]
 802caf4:	6163      	str	r3, [r4, #20]
 802caf6:	9b01      	ldr	r3, [sp, #4]
 802caf8:	6120      	str	r0, [r4, #16]
 802cafa:	b15b      	cbz	r3, 802cb14 <__smakebuf_r+0x70>
 802cafc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802cb00:	4630      	mov	r0, r6
 802cb02:	f000 f81d 	bl	802cb40 <_isatty_r>
 802cb06:	b128      	cbz	r0, 802cb14 <__smakebuf_r+0x70>
 802cb08:	89a3      	ldrh	r3, [r4, #12]
 802cb0a:	f023 0303 	bic.w	r3, r3, #3
 802cb0e:	f043 0301 	orr.w	r3, r3, #1
 802cb12:	81a3      	strh	r3, [r4, #12]
 802cb14:	89a3      	ldrh	r3, [r4, #12]
 802cb16:	431d      	orrs	r5, r3
 802cb18:	81a5      	strh	r5, [r4, #12]
 802cb1a:	e7cf      	b.n	802cabc <__smakebuf_r+0x18>

0802cb1c <_fstat_r>:
 802cb1c:	b538      	push	{r3, r4, r5, lr}
 802cb1e:	4d07      	ldr	r5, [pc, #28]	; (802cb3c <_fstat_r+0x20>)
 802cb20:	2300      	movs	r3, #0
 802cb22:	4604      	mov	r4, r0
 802cb24:	4608      	mov	r0, r1
 802cb26:	4611      	mov	r1, r2
 802cb28:	602b      	str	r3, [r5, #0]
 802cb2a:	f7d5 f8af 	bl	8001c8c <_fstat>
 802cb2e:	1c43      	adds	r3, r0, #1
 802cb30:	d102      	bne.n	802cb38 <_fstat_r+0x1c>
 802cb32:	682b      	ldr	r3, [r5, #0]
 802cb34:	b103      	cbz	r3, 802cb38 <_fstat_r+0x1c>
 802cb36:	6023      	str	r3, [r4, #0]
 802cb38:	bd38      	pop	{r3, r4, r5, pc}
 802cb3a:	bf00      	nop
 802cb3c:	200142cc 	.word	0x200142cc

0802cb40 <_isatty_r>:
 802cb40:	b538      	push	{r3, r4, r5, lr}
 802cb42:	4d06      	ldr	r5, [pc, #24]	; (802cb5c <_isatty_r+0x1c>)
 802cb44:	2300      	movs	r3, #0
 802cb46:	4604      	mov	r4, r0
 802cb48:	4608      	mov	r0, r1
 802cb4a:	602b      	str	r3, [r5, #0]
 802cb4c:	f7d5 f8a4 	bl	8001c98 <_isatty>
 802cb50:	1c43      	adds	r3, r0, #1
 802cb52:	d102      	bne.n	802cb5a <_isatty_r+0x1a>
 802cb54:	682b      	ldr	r3, [r5, #0]
 802cb56:	b103      	cbz	r3, 802cb5a <_isatty_r+0x1a>
 802cb58:	6023      	str	r3, [r4, #0]
 802cb5a:	bd38      	pop	{r3, r4, r5, pc}
 802cb5c:	200142cc 	.word	0x200142cc

0802cb60 <_init>:
 802cb60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cb62:	bf00      	nop
 802cb64:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cb66:	bc08      	pop	{r3}
 802cb68:	469e      	mov	lr, r3
 802cb6a:	4770      	bx	lr

0802cb6c <_fini>:
 802cb6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cb6e:	bf00      	nop
 802cb70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cb72:	bc08      	pop	{r3}
 802cb74:	469e      	mov	lr, r3
 802cb76:	4770      	bx	lr
